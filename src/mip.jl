function mip_piecewise( pwl,
                        pdata,
                        env,
                        model,
                        var1D1,
                        var1D2,
                        var2D1,
                        var2D2,
                        params,
                        currlb,
                        cutoff)#
                        # with_solver = GLPK.Optimizer,
                        # with_solver_parameters = empty_parameters,
                        # currlb = -1e+20,
                        # cutoff = 1e+20,
                        # tilim = 3600,
                        # print = false,
                        # warmstart=true,
                        # miptype = :grb)
    if params.ptype == :hev
        return mip_piecewise_hevALL[params.miptype](pwl,
                                pdata.Pdem,
                                pdata.nbinstants,
                                pdata.losscoefSEin,
                                pdata.losscoefSEout,
                                pdata.p_FCmax,
                                pdata.p_FCmin,
                                pdata.p_ESmax,
                                pdata.p_ESmin,
                                pdata.ESmin,
                                pdata.ESmax,
                                pdata.ESinit,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = params.with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart= warmstart)
    elseif params.ptype == :knap
        return mip_piecewise_knapALL[params.miptype](pwl,
                                pdata.object_U,
                                pdata.knapsack_cap,
                                pdata.object_weight,
                                pdata.are_vars_integer,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)#
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :mcf_nodes
        return mip_piecewise_mcf_nodesALL[params.miptype](pwl,
                                pdata.nodes,
                                pdata.arcs,
                                pdata.commods,
                                pdata.listofinputarcs,
                                pdata.listofoutputarcs,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :mcf_arcs
        return mip_piecewise_mcf_arcsALL[params.miptype](pwl,
                                pdata.nodes,
                                pdata.arcs,
                                pdata.commods,
                                pdata.listofinputarcs,
                                pdata.listofoutputarcs,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :mcnd_nodes
        return mip_piecewise_mcnd_nodesALL[params.miptype](pwl,
                                pdata.nodes,
                                pdata.arcs,
                                pdata.commods,
                                pdata.listofinputarcs,
                                pdata.listofoutputarcs,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :mcnd_arcs
        return mip_piecewise_mcnd_arcsALL[params.miptype](pwl,
                                pdata.nodes,
                                pdata.arcs,
                                pdata.commods,
                                pdata.listofinputarcs,
                                pdata.listofoutputarcs,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :scheduling
        return mip_piecewise_schedulingALL[params.miptype](pwl,
                                pdata.durations,
                                pdata.demands,
                                pdata.time_windows,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :transp
        return mip_piecewise_transportationALL[params.miptype](pwl,
                                pdata.caps,
                                pdata.demands,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :uflp_nlass
        return mip_piecewise_uflp_nlassALL[params.miptype](pwl,
                                pdata.fixed_costs,
                                pdata.caps,
                                pdata.demands,
                                pdata.capcons,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    elseif params.ptype == :uflp_nldep
        return mip_piecewise_uflp_nldepALL[params.miptype](pwl,
                                pdata.fixed_costs,
                                pdata.asscosts,
                                pdata.caps,
                                pdata.demands,
                                pdata.capcons,
                                env,
                                model,
                                var1D1,
                                var1D2,
                                var2D1,
                                var2D2,
                                params,
                                currlb,
                                cutoff)
                                # with_solver = with_solver,
                                # with_solver_parameters = with_solver_parameters,
                                # currlb = currlb,
                                # cutoff = cutoff,
                                # tilim = tilim,
                                # print = print,
                                # warmstart=warmstart)
    end
end
