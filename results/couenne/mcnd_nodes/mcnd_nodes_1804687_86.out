solving instance mcnd nodes c25_100_30_F_L_5 3 6 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 26437.746      100 121.37074
NLP0014I             2      INFEAS 7.9999999       94 24.097048
Loaded instance "/tmp/jl_2Vgprs/model.nl"
Constraints:         4125
Variables:           3275 (125 integer)
Auxiliaries:         3231 (1 integer)

Coin0506I Presolve 4199 (-227) rows, 3281 (-3225) columns and 21483 (-3890) elements
Clp0006I 0  Obj 4000.142 Primal inf 366.85224 (126)
Clp0006I 158  Obj 4992.2818 Primal inf 483.60558 (156)
Clp0006I 316  Obj 9364.0357 Primal inf 1043.0076 (328)
Clp0006I 474  Obj 13038.084 Primal inf 839.55784 (315)
Clp0006I 632  Obj 16631.042 Primal inf 2476.1422 (788)
Clp0006I 790  Obj 18566.004 Primal inf 1085.4648 (679)
Clp0006I 948  Obj 19889.474 Primal inf 3805.9117 (1052)
Clp0006I 1106  Obj 20888.289 Primal inf 991.94683 (677)
Clp0006I 1264  Obj 21652.489 Primal inf 4365.1365 (1131)
Clp0006I 1392  Obj 21976.296 Primal inf 2154.6829 (1226)
Clp0006I 1515  Obj 22334.627 Primal inf 6639.5589 (1489)
Clp0006I 1643  Obj 22711.59 Primal inf 2002.9633 (1326)
Clp0006I 1765  Obj 22981.077 Primal inf 24833.658 (1769)
Clp0006I 1880  Obj 23191.049 Primal inf 2259.3499 (1489)
Clp0006I 2002  Obj 23264.385 Primal inf 48.998867 (128)
Clp0006I 2112  Obj 23279.835
Clp0000I Optimal - objective value 23279.835
Clp0032I Optimal objective 23279.83524 - 2112 iterations time 0.802, Presolve 0.03
Clp0000I Optimal - objective value 23279.835
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 23279.835
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: no solution.
Cbc0031I 28 added rows had average density of 2
Cbc0013I At root node, 28 cuts changed objective from 23279.835 to 23378.866 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 211 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1211.15 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 2230 iterations and 2 nodes (3432.39 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4426
Linearization cuts added in total:           4426  (separation time: 0.149667s)
Total solve time:                          3433.2s (3433.2s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_2Vgprs/model.nl 3275 [var]  125 [int] 4125 [con] 3231 [aux]   4426 [root]     4426 [tot] 0.149667 [sep]   3433.2 [time]  3433.21 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       2 [nodes]
Performance of                           FBBT:	    1.40198s,       21 runs. fix:   0.666667 shrnk:   0.820486 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    673.095s,        3 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
