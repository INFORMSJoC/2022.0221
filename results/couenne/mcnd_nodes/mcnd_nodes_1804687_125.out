solving instance mcnd nodes c35 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 11.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 22703.335      100 106.33281
NLP0014I             2      INFEAS 472.30381      119 103.9378
Loaded instance "/tmp/jl_bLHOFz/model.nl"
Constraints:        10750
Variables:           9720 (250 integer)
Auxiliaries:         9491 (0 integer)

Coin0506I Presolve 10810 (-41) rows, 9700 (-9511) columns and 65540 (-9761) elements
Clp0006I 0  Obj 0 Primal inf 5836.3292 (80) Dual inf 8.8843847e+12 (941)
Clp0006I 280  Obj 14888.331 Primal inf 2262.0684 (30) Dual inf 4.9881693e+12 (964)
Clp0006I 559  Obj 24458.783 Primal inf 1289.5071 (26) Dual inf 1.343108e+13 (1739)
Clp0006I 838  Obj 37465.212 Primal inf 70.295457 (11) Dual inf 4.4464219e+12 (874)
Clp0006I 1120  Obj 35773.591 Dual inf 37943.742 (1263)
Clp0006I 1399  Obj 31845.468 Dual inf 98326.299 (3210)
Clp0006I 1678  Obj 30594.301 Dual inf 18896.446 (1577)
Clp0006I 1957  Obj 28619.926 Dual inf 42535.718 (2871)
Clp0006I 2236  Obj 28220.792 Dual inf 37915.708 (2236)
Clp0006I 2515  Obj 27667.275 Dual inf 219034.4 (2726)
Clp0006I 2794  Obj 26634.74 Dual inf 146498.79 (3240)
Clp0006I 3073  Obj 25838.013 Dual inf 191793.56 (3455)
Clp0006I 3352  Obj 25423.563 Dual inf 292933.55 (3533)
Clp0006I 3631  Obj 25180.772 Dual inf 109668.84 (3225)
Clp0006I 3910  Obj 24970.358 Dual inf 182459.63 (3288)
Clp0006I 4189  Obj 24835.177 Dual inf 104673.82 (3005)
Clp0006I 4468  Obj 24532.009 Dual inf 226982.09 (3459)
Clp0006I 4747  Obj 24328.137 Dual inf 119310.57 (3203)
Clp0006I 5026  Obj 24257.253 Dual inf 103497.64 (2192)
Clp0006I 5305  Obj 23940.006 Dual inf 33679.916 (2230)
Clp0006I 5584  Obj 23775.111 Dual inf 158260.84 (2445)
Clp0006I 5863  Obj 23654.673 Dual inf 45689.996 (2544)
Clp0006I 6142  Obj 23342.72 Dual inf 292527.31 (3168)
Clp0006I 6421  Obj 23211.664 Dual inf 924434.47 (3164)
Clp0006I 6700  Obj 23012.834 Dual inf 1279118.4 (3424)
Clp0006I 6979  Obj 22922.996 Dual inf 31433.153 (2015)
Clp0006I 7258  Obj 22866.528 Dual inf 21221.403 (1851)
Clp0006I 7537  Obj 22836.827 Dual inf 12810.153 (1929)
Clp0006I 7816  Obj 22796.675 Dual inf 14324.875 (1765)
Clp0006I 8095  Obj 22644.139 Dual inf 12721.653 (1503)
Clp0006I 8374  Obj 22504.936 Dual inf 33104.296 (2293)
Clp0006I 8653  Obj 22418.784 Primal inf 8.0768583e-08 (2) Dual inf 1.2056677e+12 (1196)
Clp0006I 8932  Obj 22365.399 Dual inf 1061.7444 (552)
Clp0006I 9167  Obj 22329.448
Clp0000I Optimal - objective value 22329.448
Clp0000I Optimal - objective value 22329.448
Clp0032I Optimal objective 22329.44842 - 9167 iterations time 5.992, Presolve 0.07
Clp0000I Optimal - objective value 22329.448
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 22329.448
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 22329.448 to 22329.448 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 22329.448), took 0 iterations and 0 nodes (3275.82 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10851
Linearization cuts added in total:          10851  (separation time: 1.05615s)
Total solve time:                         3281.81s (3281.81s in branch-and-bound)
Lower bound:                              22329.4
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_bLHOFz/model.nl 9720 [var]  250 [int] 10750 [con] 9491 [aux]  10851 [root]    10851 [tot] 1.05615 [sep]  3281.81 [time]  3281.83 [bb]         2.232945e+04 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	    1.98683s,        4 runs. fix:          0 shrnk:    62.4883 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     1113.4s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
