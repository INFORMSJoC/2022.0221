solving instance mcnd nodes c25_100_10_F_L_5 3 6 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10998.949      352 33.697897
NLP0014I             2      INFEAS 7.9999999       82 3.870857
Loaded instance "/tmp/jl_8Nbk64/model.nl"
Constraints:         1625
Variables:           1275 (125 integer)
Auxiliaries:         1211 (0 integer)

Coin0506I Presolve 1850 (-76) rows, 1300 (-1186) columns and 8000 (-1376) elements
Clp0006I 0  Obj 0 Primal inf 194.70953 (70)
Clp0006I 112  Obj 3.8769952e-15 Primal inf 1256.923 (139)
Clp0006I 224  Obj 1557.0839 Primal inf 589.29333 (132)
Clp0006I 336  Obj 2912.4933 Primal inf 1002.7062 (195)
Clp0006I 448  Obj 4937.0508 Primal inf 2980.1252 (279)
Clp0006I 560  Obj 6727.9192 Primal inf 2330.668 (353)
Clp0006I 672  Obj 7726.2759 Primal inf 8256.6132 (494)
Clp0006I 784  Obj 8583.3521 Primal inf 3876.7203 (572)
Clp0006I 876  Obj 9170.9296 Primal inf 786.18513 (341)
Clp0006I 972  Obj 9469.3978 Primal inf 717.40187 (310)
Clp0006I 1060  Obj 9755.9086 Primal inf 1686.2982 (499)
Clp0006I 1146  Obj 9876.3871 Primal inf 300.15433 (289)
Clp0006I 1228  Obj 9918.2252 Primal inf 626.38148 (349)
Clp0006I 1294  Obj 9933.3472
Clp0000I Optimal - objective value 9933.3472
Clp0032I Optimal objective 9933.347233 - 1294 iterations time 0.232, Presolve 0.01
Clp0000I Optimal - objective value 9933.3472
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 9933.3472
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 23 added rows had average density of 2
Cbc0013I At root node, 23 cuts changed objective from 9933.3472 to 9983.9317 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 194 row cuts average 2.0 elements, 53 column cuts (53 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (90.88 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 10066.101 (710.33 seconds)
Cbc0010I After 200 nodes, 85 on tree, 1e+50 best solution, best possible 10066.101 (717.00 seconds)
Cbc0010I After 300 nodes, 124 on tree, 1e+50 best solution, best possible 10066.101 (722.55 seconds)
Cbc0010I After 400 nodes, 161 on tree, 1e+50 best solution, best possible 10066.101 (727.53 seconds)
Cbc0010I After 500 nodes, 206 on tree, 1e+50 best solution, best possible 10066.101 (732.74 seconds)
Couenne: new cutoff value 1.9290386987e+04 (775.168 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 600 nodes, 253 on tree, 1e+50 best solution, best possible 10236.782 (927.46 seconds)
Cbc0010I After 700 nodes, 297 on tree, 1e+50 best solution, best possible 10236.782 (941.02 seconds)
Cbc0010I After 800 nodes, 339 on tree, 1e+50 best solution, best possible 10236.782 (953.53 seconds)
Cbc0010I After 900 nodes, 383 on tree, 1e+50 best solution, best possible 10236.782 (961.72 seconds)
Cbc0010I After 1000 nodes, 429 on tree, 1e+50 best solution, best possible 10236.782 (968.35 seconds)
Cbc0010I After 1100 nodes, 474 on tree, 1e+50 best solution, best possible 10236.782 (974.29 seconds)
Couenne: new cutoff value 1.7541569200e+04 (1020.01 seconds)
Cbc0010I After 1200 nodes, 513 on tree, 1e+50 best solution, best possible 10260.505 (1048.62 seconds)
Cbc0010I After 1300 nodes, 556 on tree, 1e+50 best solution, best possible 10260.505 (1061.95 seconds)
Cbc0010I After 1400 nodes, 593 on tree, 1e+50 best solution, best possible 10260.505 (1071.74 seconds)
Cbc0010I After 1500 nodes, 627 on tree, 1e+50 best solution, best possible 10260.505 (1079.75 seconds)
Cbc0010I After 1600 nodes, 669 on tree, 1e+50 best solution, best possible 10260.505 (1086.63 seconds)
Cbc0010I After 1700 nodes, 709 on tree, 1e+50 best solution, best possible 10260.505 (1093.30 seconds)
Couenne: new cutoff value 1.7247776226e+04 (1137.95 seconds)
Cbc0004I Integer solution of 17247.776 found after 89020 iterations and 1744 nodes (1096.60 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1800 nodes, 246 on tree, 17247.776 best solution, best possible 10324.394 (1552.14 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1900 nodes, 292 on tree, 17247.776 best solution, best possible 10347.036 (1671.24 seconds)
Cbc0010I After 2000 nodes, 335 on tree, 17247.776 best solution, best possible 10356.432 (1695.10 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2100 nodes, 376 on tree, 17247.776 best solution, best possible 10375.222 (1918.61 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2200 nodes, 420 on tree, 17247.776 best solution, best possible 10499.92 (1977.68 seconds)
Cbc0010I After 2300 nodes, 461 on tree, 17247.776 best solution, best possible 10529.169 (2050.52 seconds)
Cbc0010I After 2400 nodes, 503 on tree, 17247.776 best solution, best possible 10530.212 (2071.10 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2500 nodes, 544 on tree, 17247.776 best solution, best possible 10553.291 (2182.46 seconds)
Cbc0010I After 2600 nodes, 584 on tree, 17247.776 best solution, best possible 10582.278 (2267.41 seconds)
Cbc0010I After 2700 nodes, 630 on tree, 17247.776 best solution, best possible 10598.985 (2310.99 seconds)
Cbc0010I After 2800 nodes, 675 on tree, 17247.776 best solution, best possible 10627.729 (2331.91 seconds)
Cbc0010I After 2900 nodes, 715 on tree, 17247.776 best solution, best possible 10631.373 (2345.57 seconds)
Cbc0010I After 3000 nodes, 756 on tree, 17247.776 best solution, best possible 10640.806 (2360.58 seconds)
Cbc0010I After 3100 nodes, 796 on tree, 17247.776 best solution, best possible 10660.363 (2516.62 seconds)
Cbc0010I After 3200 nodes, 835 on tree, 17247.776 best solution, best possible 10670.782 (2531.86 seconds)
Cbc0010I After 3300 nodes, 878 on tree, 17247.776 best solution, best possible 10708.12 (2547.30 seconds)
Cbc0010I After 3400 nodes, 923 on tree, 17247.776 best solution, best possible 10716.26 (2564.67 seconds)
Cbc0010I After 3500 nodes, 970 on tree, 17247.776 best solution, best possible 10758.454 (2579.50 seconds)
Cbc0010I After 3600 nodes, 1010 on tree, 17247.776 best solution, best possible 10758.574 (2593.06 seconds)
Cbc0010I After 3700 nodes, 1053 on tree, 17247.776 best solution, best possible 10758.574 (2605.38 seconds)
Cbc0010I After 3800 nodes, 1096 on tree, 17247.776 best solution, best possible 10758.574 (2616.44 seconds)
Cbc0010I After 3900 nodes, 1142 on tree, 17247.776 best solution, best possible 10758.574 (2624.96 seconds)
Cbc0010I After 4000 nodes, 1189 on tree, 17247.776 best solution, best possible 10758.574 (2633.12 seconds)
Cbc0010I After 4100 nodes, 1239 on tree, 17247.776 best solution, best possible 10758.574 (2640.70 seconds)
Cbc0010I After 4200 nodes, 1281 on tree, 17247.776 best solution, best possible 10774.013 (2658.94 seconds)
Cbc0010I After 4300 nodes, 1324 on tree, 17247.776 best solution, best possible 10777.596 (2672.88 seconds)
Cbc0010I After 4400 nodes, 1365 on tree, 17247.776 best solution, best possible 10782.167 (2688.35 seconds)
Cbc0010I After 4500 nodes, 1407 on tree, 17247.776 best solution, best possible 10793.752 (2703.06 seconds)
Cbc0010I After 4600 nodes, 1453 on tree, 17247.776 best solution, best possible 10795.506 (2718.31 seconds)
Cbc0010I After 4700 nodes, 1496 on tree, 17247.776 best solution, best possible 10795.506 (2728.17 seconds)
Cbc0010I After 4800 nodes, 1543 on tree, 17247.776 best solution, best possible 10795.506 (2736.83 seconds)
Cbc0010I After 4900 nodes, 1588 on tree, 17247.776 best solution, best possible 10795.506 (2744.37 seconds)
Cbc0010I After 5000 nodes, 1636 on tree, 17247.776 best solution, best possible 10795.506 (2750.89 seconds)
Cbc0010I After 5100 nodes, 1686 on tree, 17247.776 best solution, best possible 10795.506 (2757.14 seconds)
Couenne: new cutoff value 1.6467029331e+04 (2802.92 seconds)
Cbc0010I After 5200 nodes, 1732 on tree, 17247.776 best solution, best possible 10805.905 (2767.03 seconds)
Cbc0010I After 5300 nodes, 1775 on tree, 17247.776 best solution, best possible 10805.905 (2777.42 seconds)
Cbc0010I After 5400 nodes, 1824 on tree, 17247.776 best solution, best possible 10805.905 (2786.94 seconds)
Cbc0010I After 5500 nodes, 1874 on tree, 17247.776 best solution, best possible 10805.905 (2793.92 seconds)
Cbc0010I After 5600 nodes, 1922 on tree, 17247.776 best solution, best possible 10805.905 (2800.74 seconds)
Couenne: new cutoff value 1.6030848961e+04 (2842.7 seconds)
Cbc0004I Integer solution of 16030.849 found after 717547 iterations and 5610 nodes (2801.43 seconds)
Cbc0010I After 5700 nodes, 1175 on tree, 16030.849 best solution, best possible 10820.206 (2816.70 seconds)
Cbc0010I After 5800 nodes, 1213 on tree, 16030.849 best solution, best possible 10828.29 (2833.17 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 5900 nodes, 1256 on tree, 16030.849 best solution, best possible 10831.936 (2991.01 seconds)
Cbc0010I After 6000 nodes, 1300 on tree, 16030.849 best solution, best possible 10841.38 (3007.86 seconds)
Cbc0010I After 6100 nodes, 1343 on tree, 16030.849 best solution, best possible 10847.162 (3080.56 seconds)
Cbc0010I After 6200 nodes, 1386 on tree, 16030.849 best solution, best possible 10847.162 (3089.74 seconds)
Cbc0010I After 6300 nodes, 1432 on tree, 16030.849 best solution, best possible 10847.162 (3098.10 seconds)
Cbc0010I After 6400 nodes, 1477 on tree, 16030.849 best solution, best possible 10847.162 (3104.92 seconds)
Cbc0010I After 6500 nodes, 1522 on tree, 16030.849 best solution, best possible 10847.162 (3111.51 seconds)
Couenne: new cutoff value 1.5140290121e+04 (3155.06 seconds)
Cbc0010I After 6600 nodes, 1566 on tree, 16030.849 best solution, best possible 10852.735 (3126.05 seconds)
Cbc0010I After 6700 nodes, 1613 on tree, 16030.849 best solution, best possible 10854.174 (3196.94 seconds)
Cbc0010I After 6800 nodes, 1651 on tree, 16030.849 best solution, best possible 10855.217 (3217.54 seconds)
Cbc0010I After 6900 nodes, 1695 on tree, 16030.849 best solution, best possible 10859.532 (3297.02 seconds)
Cbc0010I After 7000 nodes, 1739 on tree, 16030.849 best solution, best possible 10862.865 (3312.28 seconds)
Cbc0010I After 7100 nodes, 1783 on tree, 16030.849 best solution, best possible 10885.631 (3329.56 seconds)
Cbc0010I After 7200 nodes, 1826 on tree, 16030.849 best solution, best possible 10887.666 (3351.58 seconds)
Cbc0010I After 7300 nodes, 1868 on tree, 16030.849 best solution, best possible 10888.637 (3367.05 seconds)
Cbc0010I After 7400 nodes, 1909 on tree, 16030.849 best solution, best possible 10888.637 (3380.97 seconds)
Cbc0010I After 7500 nodes, 1941 on tree, 16030.849 best solution, best possible 10888.637 (3389.12 seconds)
Cbc0010I After 7600 nodes, 1979 on tree, 16030.849 best solution, best possible 10888.637 (3396.79 seconds)
Cbc0010I After 7700 nodes, 2015 on tree, 16030.849 best solution, best possible 10888.637 (3403.12 seconds)
Couenne: new cutoff value 1.5074269471e+04 (3447.24 seconds)
Cbc0010I After 7800 nodes, 2052 on tree, 16030.849 best solution, best possible 10889.944 (3416.54 seconds)
Cbc0010I After 7900 nodes, 2096 on tree, 16030.849 best solution, best possible 10903.544 (3433.01 seconds)
Cbc0010I After 8000 nodes, 2138 on tree, 16030.849 best solution, best possible 10910.696 (3458.62 seconds)
Cbc0010I After 8100 nodes, 2184 on tree, 16030.849 best solution, best possible 10910.98 (3474.97 seconds)
Cbc0010I After 8200 nodes, 2231 on tree, 16030.849 best solution, best possible 10914.477 (3489.64 seconds)
Cbc0010I After 8300 nodes, 2273 on tree, 16030.849 best solution, best possible 10914.477 (3504.19 seconds)
Cbc0010I After 8400 nodes, 2309 on tree, 16030.849 best solution, best possible 10914.477 (3513.59 seconds)
Cbc0010I After 8500 nodes, 2338 on tree, 16030.849 best solution, best possible 10914.477 (3519.79 seconds)
Cbc0010I After 8600 nodes, 2367 on tree, 16030.849 best solution, best possible 10914.477 (3526.18 seconds)
Couenne: new cutoff value 1.4806582615e+04 (3568.22 seconds)
Cbc0010I After 8700 nodes, 2406 on tree, 16030.849 best solution, best possible 10917.789 (3540.17 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 16030.849 (best possible 10917.789), took 1255373 iterations and 8796 nodes (3559.26 seconds)
Cbc0035I Maximum depth 326, 2192 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1926
Linearization cuts added in total:           1926  (separation time: 0.026833s)
Total solve time:                         3559.66s (3559.66s in branch-and-bound)
Lower bound:                              10917.8
Upper bound:                              14806.6  (gap: 35.62%)
Branch-and-bound nodes:                      8796
Stats: /tmp/jl_8Nbk64/model.nl 1275 [var]  125 [int] 1625 [con] 1211 [aux]   1926 [root]     1926 [tot] 0.026833 [sep]  3559.66 [time]  3559.66 [bb]         1.091779e+04 [lower]         1.480658e+04 [upper]    8796 [nodes]
Performance of                           FBBT:	    149.089s,    13825 runs. fix:    0.18486 shrnk:   0.627503 ubd:          0 2ubd:          0 infeas:         12
Performance of                           OBBT:	    605.864s,       17 runs. fix:          0 shrnk:   0.131521 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
