solving instance mcnd nodes c41 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 15.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1        TIME 0      809 1792.3705
Loaded instance "/tmp/jl_fyr6bg/model.nl"
Constraints:        13244
Variables:          12156 (308 integer)
Auxiliaries:        11889 (0 integer)

Coin0506I Presolve 13324 (-61) rows, 12136 (-11909) columns and 82052 (-12237) elements
Clp0006I 0  Obj 0 Primal inf 5620.7651 (80) Dual inf 1.116532e+13 (1124)
Clp0006I 291  Obj 79370.207 Primal inf 57.050282 (2) Dual inf 9.3111247e+11 (440)
Clp0006I 583  Obj 80136.512 Dual inf 17608.767 (745)
Clp0006I 875  Obj 73087.085 Dual inf 16064.994 (1065)
Clp0006I 1166  Obj 71491.002 Dual inf 39012.892 (1530)
Clp0006I 1457  Obj 68746.046 Dual inf 45382.251 (1462)
Clp0006I 1748  Obj 67097.921 Dual inf 7897.5748 (1198)
Clp0006I 2039  Obj 65008.29 Dual inf 24422.302 (1397)
Clp0006I 2330  Obj 64820.257 Dual inf 15304.137 (1449)
Clp0006I 2621  Obj 63550.459 Dual inf 14382.793 (1292)
Clp0006I 2912  Obj 62481.469 Dual inf 38445.016 (2120)
Clp0006I 3203  Obj 62269.084 Dual inf 4760.0778 (753)
Clp0006I 3494  Obj 62096.184 Dual inf 109.07501 (115)
Clp0006I 3631  Obj 62091.142
Clp0000I Optimal - objective value 62091.142
Clp0000I Optimal - objective value 62091.143
Clp0032I Optimal objective 62091.14275 - 3631 iterations time 1.582, Presolve 0.08
Clp0000I Optimal - objective value 62091.143
NLP Heuristic: NLP0014I             2      INFEAS 127.5474      136 132.25988
no solution.
Clp0000I Optimal - objective value 62091.143
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 62091.143 to 62091.143 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 62091.143), took 0 iterations and 0 nodes (1785.70 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      13385
Linearization cuts added in total:          13385  (separation time: 1.58355s)
Total solve time:                         1787.28s (1787.28s in branch-and-bound)
Lower bound:                              62091.1
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_fyr6bg/model.nl 12156 [var]  308 [int] 13244 [con] 11889 [aux]  13385 [root]    13385 [tot] 1.58355 [sep]  1787.28 [time]  1787.31 [bb]         6.209114e+04 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	    2.97328s,        4 runs. fix:          0 shrnk: 6.40685e-16 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1505.11s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
