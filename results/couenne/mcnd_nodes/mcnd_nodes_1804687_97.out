solving instance mcnd nodes c25_100_30_F_T_5 3 6 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 36863.735      394 477.58632
Loaded instance "/tmp/jl_RF40yw/model.nl"
Constraints:         4125
Variables:           3275 (125 integer)
Auxiliaries:         3281 (6 integer)

Coin0506I Presolve 4184 (-341) rows, 3261 (-3295) columns and 21156 (-4423) elements
Clp0006I 0  Obj 6049.7283 Primal inf 3632.5946 (343)
Clp0006I 158  Obj 6049.7283 Primal inf 4130.5543 (347)
Clp0006I 316  Obj 6049.7283 Primal inf 9319.6397 (421)
Clp0006I 474  Obj 6049.7283 Primal inf 408795.84 (532)
Clp0006I 632  Obj 6049.7283 Primal inf 871078.92 (523)
Clp0006I 790  Obj 6049.7283 Primal inf 181080.13 (590)
Clp0006I 948  Obj 7481.647 Primal inf 648791.67 (662)
Clp0006I 1106  Obj 9154.5834 Primal inf 524041.78 (781)
Clp0006I 1264  Obj 12231.154 Primal inf 139215.79 (834)
Clp0006I 1422  Obj 13799.514 Primal inf 136544.91 (1184)
Clp0006I 1580  Obj 14789.086 Primal inf 578069.4 (1344)
Clp0006I 1738  Obj 15628.579 Primal inf 64379.823 (1477)
Clp0006I 1878  Obj 16269.334 Primal inf 81170.217 (1757)
Clp0006I 2029  Obj 17266.098 Primal inf 13264.793 (1252)
Clp0006I 2172  Obj 18126.508 Primal inf 363373.06 (2035)
Clp0006I 2322  Obj 18964.506 Primal inf 28680.722 (1780)
Clp0006I 2480  Obj 19447.431 Primal inf 144457.6 (1454)
Clp0006I 2623  Obj 19913.207 Primal inf 337531.27 (1605)
Clp0006I 2760  Obj 20307.062 Primal inf 241971.31 (1537)
Clp0006I 2897  Obj 20915.7 Primal inf 2041562.4 (1794)
Clp0006I 3044  Obj 21376.06 Primal inf 134410.95 (1692)
Clp0006I 3106  Obj 21533.565 Primal inf 1176857.9 (1800)
Clp0006I 3249  Obj 21937.639 Primal inf 842440.16 (1577)
Clp0006I 3407  Obj 22436.271 Primal inf 3941094.7 (2083)
Clp0006I 3565  Obj 22701.583 Primal inf 1312530.2 (1522)
Clp0006I 3709  Obj 23186.089 Primal inf 77094.614 (1472)
Clp0006I 3848  Obj 23777.079 Primal inf 266050.06 (2078)
Clp0006I 3967  Obj 24394.469 Primal inf 12161.997 (1445)
Clp0006I 4090  Obj 25034.025 Primal inf 875086.69 (2113)
Clp0006I 4217  Obj 25460.58 Primal inf 51860.149 (1190)
Clp0006I 4347  Obj 25690.888 Primal inf 1079892.1 (1833)
Clp0006I 4475  Obj 25920.032 Primal inf 291274 (1519)
Clp0006I 4602  Obj 26211.941 Primal inf 760218.9 (1608)
Clp0006I 4742  Obj 26478.512 Primal inf 59518.509 (787)
Clp0006I 4885  Obj 26728.204 Primal inf 1019896.5 (2049)
Clp0006I 5015  Obj 26911.87 Primal inf 2779.0519 (1016)
Clp0006I 5142  Obj 27077.121 Primal inf 17186.67 (813)
Clp0006I 5269  Obj 27177.148 Primal inf 79020.55 (583)
Clp0006I 5335  Obj 27189.684
Clp0000I Optimal - objective value 27189.684
Clp0032I Optimal objective 27189.68424 - 5335 iterations time 2.842, Presolve 0.03
Clp0000I Optimal - objective value 27189.684
NLP Heuristic: NLP0014I             2      INFEAS 139.83937      121 34.710116
no solution.
Clp0000I Optimal - objective value 27189.684
Optimality Based BT: 0 improved bounds
Probing: 19 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 33 added rows had average density of 2
Cbc0013I At root node, 33 cuts changed objective from 27189.684 to 27512.286 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 202 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1242.59 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 1840 iterations and 2 nodes (3107.18 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4525
Linearization cuts added in total:           4525  (separation time: 0.150942s)
Total solve time:                         3110.03s (3110.03s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_RF40yw/model.nl 3275 [var]  125 [int] 4125 [con] 3281 [aux]   4525 [root]     4525 [tot] 0.150942 [sep]  3110.03 [time]  3110.04 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       2 [nodes]
Performance of                           FBBT:	    1.76486s,       27 runs. fix:    2.14815 shrnk:    3.26532 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    556.558s,        3 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
f0 = 0.39171501342294207
f0 = 0.4931727308635689
f0 = 0.34760296236179977
f0 = 0.23202938858160735
f0 = 0.30437315232188067
f0 = 0.31054883947044054
f0 = 0.39877294159272475
f0 = 0.42876913631430125
f0 = 0.3423095162344627
f0 = 0.37583467504093104
f0 = 0.3837748442319364
f0 = 0.475527910439112
f0 = 0.3908327724017193
f0 = 0.40759535180495315
f0 = 0.4817035975876719
f0 = 0.3925972544441647
f0 = 0.4799391155452262
f0 = 0.29113953700353784
f0 = 0.280552644748864
f0 = 0.3440739982769084
f0 = 0.19321078364780248
f0 = 0.1632145889262259
f0 = 0.5743389048160704
f0 = 0.5240511666063681
f0 = 0.34319175725568585
