solving instance mcnd nodes c25_100_10_F_T_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 23489.23       56 2.542135
NLP0014I             2      INFEAS 13.293064       81 2.892206
Loaded instance "/tmp/jl_uzH2lG/model.nl"
Constraints:         1625
Variables:           1275 (125 integer)
Auxiliaries:         1136 (0 integer)

Coin0506I Presolve 1595 (-164) rows, 1232 (-1179) columns and 7349 (-1668) elements
Clp0006I 0  Obj 8030.5166 Primal inf 356.21158 (42)
Clp0006I 106  Obj 8060.9802 Primal inf 7298.8744 (156)
Clp0006I 212  Obj 8300.6806 Primal inf 3306.2915 (207)
Clp0006I 318  Obj 12082.4 Primal inf 9016.9268 (245)
Clp0006I 424  Obj 16343.2 Primal inf 7372.411 (346)
Clp0006I 530  Obj 19628.772 Primal inf 4614.5965 (253)
Clp0006I 632  Obj 21447.016 Primal inf 11063.171 (348)
Clp0006I 733  Obj 22749.329 Primal inf 1827.511 (233)
Clp0006I 821  Obj 23311.438 Primal inf 144.06367 (56)
Clp0006I 873  Obj 23446.128
Clp0000I Optimal - objective value 23446.128
Clp0032I Optimal objective 23446.12834 - 873 iterations time 0.102, Presolve 0.01
Clp0000I Optimal - objective value 23446.128
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 23446.128
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 23446.128 to 23489.23 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 322 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (77.05 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 2.7481395998e+04 (606.571 seconds)
Cbc0004I Integer solution of 27481.396 found after 5883 iterations and 27 nodes (598.42 seconds)
Optimality Based BT: 24 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 24 on tree, 27481.396 best solution, best possible 24825.127 (1285.16 seconds)
Optimality Based BT: 7 improved bounds
Cbc0010I After 200 nodes, 50 on tree, 27481.396 best solution, best possible 25010.175 (1555.19 seconds)
Cbc0010I After 300 nodes, 61 on tree, 27481.396 best solution, best possible 25449.824 (1692.10 seconds)
Cbc0010I After 400 nodes, 83 on tree, 27481.396 best solution, best possible 25632.068 (1825.36 seconds)
Cbc0010I After 500 nodes, 99 on tree, 27481.396 best solution, best possible 25770.595 (1834.40 seconds)
Cbc0010I After 600 nodes, 102 on tree, 27481.396 best solution, best possible 25901.869 (1842.44 seconds)
Cbc0010I After 700 nodes, 113 on tree, 27481.396 best solution, best possible 26008.525 (1855.72 seconds)
Cbc0010I After 800 nodes, 116 on tree, 27481.396 best solution, best possible 26126.544 (1864.92 seconds)
Optimality Based BT: 6 improved bounds
Cbc0010I After 900 nodes, 123 on tree, 27481.396 best solution, best possible 26232.536 (2017.43 seconds)
Cbc0010I After 1000 nodes, 114 on tree, 27481.396 best solution, best possible 26344.721 (2026.31 seconds)
Cbc0010I After 1100 nodes, 102 on tree, 27481.396 best solution, best possible 26487.379 (2038.13 seconds)
Cbc0010I After 1200 nodes, 102 on tree, 27481.396 best solution, best possible 26569.509 (2047.23 seconds)
Cbc0010I After 1300 nodes, 105 on tree, 27481.396 best solution, best possible 26657.104 (2055.95 seconds)
Cbc0010I After 1400 nodes, 94 on tree, 27481.396 best solution, best possible 26722.099 (2064.18 seconds)
Cbc0010I After 1500 nodes, 79 on tree, 27481.396 best solution, best possible 26852.018 (2072.30 seconds)
Cbc0010I After 1600 nodes, 66 on tree, 27481.396 best solution, best possible 26926.98 (2080.18 seconds)
Optimality Based BT: 38 improved bounds
Cbc0010I After 1700 nodes, 41 on tree, 27481.396 best solution, best possible 27010.093 (2104.44 seconds)
Optimality Based BT: 30 improved bounds
Cbc0010I After 1800 nodes, 14 on tree, 27481.396 best solution, best possible 27190.089 (2131.71 seconds)
Cbc0001I Search completed - best objective 27481.39599823273, took 191399 iterations and 1828 nodes (2133.08 seconds)
Cbc0035I Maximum depth 20, 12771 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1759
Linearization cuts added in total:           1759  (separation time: 0.024028s)
Total solve time:                         2133.26s (2133.26s in branch-and-bound)
Lower bound:                              27481.4
Upper bound:                              27481.4  (gap: 0.00%)
Branch-and-bound nodes:                      1828
Stats: /tmp/jl_uzH2lG/model.nl 1275 [var]  125 [int] 1625 [con] 1136 [aux]   1759 [root]     1759 [tot] 0.024028 [sep]  2133.26 [time]  2133.26 [bb]         2.748140e+04 [lower]         2.748140e+04 [upper]    1828 [nodes]
Performance of                           FBBT:	    21.5997s,     2357 runs. fix:   0.502689 shrnk:    1.05945 ubd:          0 2ubd:          0 infeas:         13
Performance of                           OBBT:	    349.778s,       16 runs. fix:   0.144953 shrnk:    12.9341 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
