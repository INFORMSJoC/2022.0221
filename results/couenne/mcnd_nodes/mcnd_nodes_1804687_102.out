solving instance mcnd nodes c25_100_30_V_T_5 3 6 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 24469.28       72 67.949037
NLP0014I             2      INFEAS 24.00009       97 33.462454
Loaded instance "/tmp/jl_F8ndZr/model.nl"
Constraints:         4125
Variables:           3275 (125 integer)
Auxiliaries:         3231 (3 integer)

Coin0506I Presolve 4126 (-225) rows, 3253 (-3253) columns and 21309 (-3911) elements
Clp0006I 0  Obj 963.13769 Primal inf 702.42951 (70)
Clp0006I 157  Obj 963.13769 Primal inf 5286.7552 (189)
Clp0006I 314  Obj 4015.9887 Primal inf 16585.898 (458)
Clp0006I 471  Obj 7503.4964 Primal inf 5971.1932 (361)
Clp0006I 628  Obj 10221.596 Primal inf 3910.0236 (445)
Clp0006I 785  Obj 11946.916 Primal inf 18826.072 (790)
Clp0006I 927  Obj 13238.106 Primal inf 4285.535 (789)
Clp0006I 1073  Obj 14092.201 Primal inf 1321.5425 (421)
Clp0006I 1163  Obj 14285.346
Clp0000I Optimal - objective value 14285.346
Clp0032I Optimal objective 14285.34577 - 1163 iterations time 0.232, Presolve 0.03
Clp0000I Optimal - objective value 14285.346
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 14285.346
Optimality Based BT: 1 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 32 added rows had average density of 2
Cbc0013I At root node, 32 cuts changed objective from 14285.346 to 14685.09 in 18 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 252 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (891.20 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 1669 iterations and 3 nodes (3481.35 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4351
Linearization cuts added in total:           4351  (separation time: 0.145176s)
Total solve time:                         3481.59s (3481.59s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         3
Stats: /tmp/jl_F8ndZr/model.nl 3275 [var]  125 [int] 4125 [con] 3231 [aux]   4351 [root]     4351 [tot] 0.145176 [sep]  3481.59 [time]   3481.6 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       3 [nodes]
Performance of                           FBBT:	    2.11561s,       32 runs. fix:        0.5 shrnk:   0.394924 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	     365.77s,        4 runs. fix:       0.25 shrnk:   0.401838 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
