solving instance mcnd nodes c25_100_30_F_L_5 3 6 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 26107.26      117 142.1106
Loaded instance "/tmp/jl_cfV2lp/model.nl"
Constraints:         4125
Variables:           3275 (125 integer)
Auxiliaries:         3306 (1 integer)

Coin0506I Presolve 4170 (-256) rows, 3307 (-3274) columns and 21446 (-3977) elements
Clp0006I 0  Obj 3315.9777 Primal inf 1341.1049 (152)
Clp0006I 158  Obj 5263.0076 Primal inf 1432.7518 (223)
Clp0006I 316  Obj 7108.3947 Primal inf 1551.8484 (311)
Clp0006I 474  Obj 10466.944 Primal inf 1218.3722 (445)
Clp0006I 632  Obj 14752.413 Primal inf 1629.0405 (614)
Clp0006I 790  Obj 18622.744 Primal inf 2864.0904 (816)
Clp0006I 948  Obj 20179.442 Primal inf 3275.9003 (829)
Clp0006I 1084  Obj 21231.675 Primal inf 19502.373 (1406)
Clp0006I 1213  Obj 21845.973 Primal inf 2198.4519 (845)
Clp0006I 1345  Obj 22536.146 Primal inf 950.41411 (655)
Clp0006I 1483  Obj 23006.059 Primal inf 2350.8555 (1183)
Clp0006I 1617  Obj 23494.152 Primal inf 2215.9478 (977)
Clp0006I 1739  Obj 23890.419 Primal inf 713.5587 (582)
Clp0006I 1860  Obj 24155.891 Primal inf 551.28083 (734)
Clp0006I 1984  Obj 24302.767 Primal inf 115.27395 (254)
Clp0006I 2048  Obj 24316.966
Clp0000I Optimal - objective value 24316.966
Clp0032I Optimal objective 24316.96568 - 2048 iterations time 0.702, Presolve 0.03
Clp0000I Optimal - objective value 24316.966
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 24316.966
Optimality Based BT: 3 improved bounds
Probing: 14 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 24316.966 to 24331.404 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1126.71 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 1325 iterations and 3 nodes (3437.00 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4426
Linearization cuts added in total:           4426  (separation time: 0.145522s)
Total solve time:                          3437.7s (3437.7s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         3
Stats: /tmp/jl_cfV2lp/model.nl 3275 [var]  125 [int] 4125 [con] 3306 [aux]   4426 [root]     4426 [tot] 0.145522 [sep]   3437.7 [time]  3437.71 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       3 [nodes]
Performance of                           FBBT:	   0.599964s,        9 runs. fix:    1.55556 shrnk:    4.95399 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    768.788s,        4 runs. fix:          0 shrnk:    1.75278 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1224
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
