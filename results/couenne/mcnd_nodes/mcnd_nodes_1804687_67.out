solving instance mcnd nodes c25_100_10_F_T_5 3 6 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 25160.708      255 19.812933
NLP0014I             2      INFEAS 20       74 2.665806
Loaded instance "/tmp/jl_8S1TVb/model.nl"
Constraints:         1625
Variables:           1275 (125 integer)
Auxiliaries:         1211 (0 integer)

Coin0506I Presolve 1736 (-189) rows, 1282 (-1204) columns and 7656 (-1718) elements
Clp0006I 0  Obj 8000.129 Primal inf 930.49696 (90)
Clp0006I 109  Obj 8000.129 Primal inf 1120.0234 (142)
Clp0006I 218  Obj 9683.009 Primal inf 939.76808 (139)
Clp0006I 327  Obj 10183.725 Primal inf 8453.5484 (210)
Clp0006I 436  Obj 18613.982 Primal inf 1097.2801 (202)
Clp0006I 545  Obj 20989.425 Primal inf 608.05102 (204)
Clp0006I 653  Obj 22827.376 Primal inf 246.06146 (128)
Clp0006I 755  Obj 23323.538 Primal inf 50.59863 (35)
Clp0006I 780  Obj 23413.036
Clp0000I Optimal - objective value 23413.036
Clp0032I Optimal objective 23413.0362 - 780 iterations time 0.082, Presolve 0.01
Clp0000I Optimal - objective value 23413.036
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 23413.036
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 23413.036 to 23552.113 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 78 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (74.93 seconds)
Optimality Based BT: 45 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 24623.948 (630.85 seconds)
Cbc0010I After 200 nodes, 96 on tree, 1e+50 best solution, best possible 24623.948 (637.50 seconds)
Cbc0010I After 300 nodes, 146 on tree, 1e+50 best solution, best possible 24623.948 (642.98 seconds)
Cbc0010I After 400 nodes, 196 on tree, 1e+50 best solution, best possible 24623.948 (647.68 seconds)
Cbc0010I After 500 nodes, 246 on tree, 1e+50 best solution, best possible 24623.948 (652.17 seconds)
Cbc0010I After 600 nodes, 296 on tree, 1e+50 best solution, best possible 24623.948 (656.82 seconds)
Cbc0010I After 700 nodes, 346 on tree, 1e+50 best solution, best possible 24623.948 (661.27 seconds)
Cbc0010I After 800 nodes, 396 on tree, 1e+50 best solution, best possible 24623.948 (665.67 seconds)
Cbc0010I After 900 nodes, 446 on tree, 1e+50 best solution, best possible 24623.948 (669.86 seconds)
Cbc0010I After 1000 nodes, 496 on tree, 1e+50 best solution, best possible 24623.948 (673.94 seconds)
Couenne: new cutoff value 3.0688837646e+04 (700.458 seconds)
Cbc0004I Integer solution of 30688.838 found after 30834 iterations and 1029 nodes (674.97 seconds)
Optimality Based BT: 25 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 45 improved bounds
Cbc0010I After 1100 nodes, 327 on tree, 30688.838 best solution, best possible 24632.803 (1128.68 seconds)
Optimality Based BT: 14 improved bounds
Cbc0010I After 1200 nodes, 363 on tree, 30688.838 best solution, best possible 25162.123 (1431.48 seconds)
Cbc0010I After 1300 nodes, 396 on tree, 30688.838 best solution, best possible 25231.524 (1444.28 seconds)
Cbc0010I After 1400 nodes, 433 on tree, 30688.838 best solution, best possible 25610.352 (1519.34 seconds)
Cbc0010I After 1500 nodes, 477 on tree, 30688.838 best solution, best possible 25610.352 (1528.60 seconds)
Cbc0010I After 1600 nodes, 524 on tree, 30688.838 best solution, best possible 25610.352 (1536.48 seconds)
Cbc0010I After 1700 nodes, 573 on tree, 30688.838 best solution, best possible 25610.352 (1542.86 seconds)
Cbc0010I After 1800 nodes, 622 on tree, 30688.838 best solution, best possible 25610.352 (1548.63 seconds)
Cbc0010I After 1900 nodes, 672 on tree, 30688.838 best solution, best possible 25610.352 (1553.96 seconds)
Cbc0010I After 2000 nodes, 721 on tree, 30688.838 best solution, best possible 25610.352 (1559.35 seconds)
Cbc0010I After 2100 nodes, 750 on tree, 30688.838 best solution, best possible 25610.352 (1564.13 seconds)
Cbc0010I After 2200 nodes, 796 on tree, 30688.838 best solution, best possible 25610.352 (1569.07 seconds)
Couenne: new cutoff value 3.0671923812e+04 (1597.26 seconds)
Cbc0004I Integer solution of 30671.924 found after 66945 iterations and 2258 nodes (1571.76 seconds)
Cbc0010I After 2300 nodes, 594 on tree, 30671.924 best solution, best possible 25615.347 (1575.24 seconds)
Cbc0010I After 2400 nodes, 631 on tree, 30671.924 best solution, best possible 25787.113 (1595.02 seconds)
Cbc0010I After 2500 nodes, 666 on tree, 30671.924 best solution, best possible 25809.191 (1603.55 seconds)
Cbc0010I After 2600 nodes, 701 on tree, 30671.924 best solution, best possible 25809.191 (1616.40 seconds)
Cbc0010I After 2700 nodes, 736 on tree, 30671.924 best solution, best possible 25809.191 (1625.96 seconds)
Cbc0010I After 2800 nodes, 764 on tree, 30671.924 best solution, best possible 25809.191 (1632.84 seconds)
Cbc0010I After 2900 nodes, 797 on tree, 30671.924 best solution, best possible 25809.191 (1638.59 seconds)
Cbc0010I After 3000 nodes, 825 on tree, 30671.924 best solution, best possible 25809.191 (1643.65 seconds)
Cbc0010I After 3100 nodes, 849 on tree, 30671.924 best solution, best possible 25809.191 (1649.04 seconds)
Cbc0010I After 3200 nodes, 884 on tree, 30671.924 best solution, best possible 25809.191 (1655.39 seconds)
Cbc0010I After 3300 nodes, 923 on tree, 30671.924 best solution, best possible 25809.191 (1663.00 seconds)
Couenne: new cutoff value 3.0532626204e+04 (1692.77 seconds)
Cbc0004I Integer solution of 30532.626 found after 91011 iterations and 3366 nodes (1667.28 seconds)
Cbc0010I After 3400 nodes, 740 on tree, 30532.626 best solution, best possible 25836.472 (1670.61 seconds)
Cbc0010I After 3500 nodes, 773 on tree, 30532.626 best solution, best possible 25863.057 (1734.67 seconds)
Cbc0010I After 3600 nodes, 807 on tree, 30532.626 best solution, best possible 25907.826 (1743.78 seconds)
Cbc0010I After 3700 nodes, 841 on tree, 30532.626 best solution, best possible 25962.76 (1752.14 seconds)
Cbc0010I After 3800 nodes, 879 on tree, 30532.626 best solution, best possible 26047.229 (1764.84 seconds)
Cbc0010I After 3900 nodes, 918 on tree, 30532.626 best solution, best possible 26047.229 (1776.29 seconds)
Cbc0010I After 4000 nodes, 957 on tree, 30532.626 best solution, best possible 26047.229 (1786.94 seconds)
Cbc0010I After 4100 nodes, 992 on tree, 30532.626 best solution, best possible 26047.229 (1794.62 seconds)
Cbc0010I After 4200 nodes, 1031 on tree, 30532.626 best solution, best possible 26047.229 (1801.01 seconds)
Cbc0010I After 4300 nodes, 1067 on tree, 30532.626 best solution, best possible 26047.229 (1807.09 seconds)
Cbc0010I After 4400 nodes, 1106 on tree, 30532.626 best solution, best possible 26047.229 (1813.05 seconds)
Cbc0010I After 4500 nodes, 1141 on tree, 30532.626 best solution, best possible 26047.229 (1819.14 seconds)
Cbc0010I After 4600 nodes, 1180 on tree, 30532.626 best solution, best possible 26047.229 (1825.51 seconds)
Cbc0010I After 4700 nodes, 1221 on tree, 30532.626 best solution, best possible 26047.229 (1832.08 seconds)
Couenne: new cutoff value 3.0294147033e+04 (1863.95 seconds)
Cbc0004I Integer solution of 30294.147 found after 146604 iterations and 4797 nodes (1838.46 seconds)
Cbc0010I After 4800 nodes, 924 on tree, 30294.147 best solution, best possible 26072.205 (1839.70 seconds)
Cbc0010I After 4900 nodes, 948 on tree, 30294.147 best solution, best possible 26095.445 (1849.53 seconds)
Cbc0010I After 5000 nodes, 985 on tree, 30294.147 best solution, best possible 26155.016 (1858.54 seconds)
Cbc0010I After 5100 nodes, 1011 on tree, 30294.147 best solution, best possible 26222.008 (1934.97 seconds)
Cbc0010I After 5200 nodes, 1042 on tree, 30294.147 best solution, best possible 26307.235 (1942.96 seconds)
Cbc0010I After 5300 nodes, 1083 on tree, 30294.147 best solution, best possible 26313.147 (1953.12 seconds)
Cbc0010I After 5400 nodes, 1125 on tree, 30294.147 best solution, best possible 26313.147 (1962.97 seconds)
Cbc0010I After 5500 nodes, 1175 on tree, 30294.147 best solution, best possible 26313.147 (1971.13 seconds)
Cbc0010I After 5600 nodes, 1225 on tree, 30294.147 best solution, best possible 26313.147 (1977.69 seconds)
Cbc0010I After 5700 nodes, 1274 on tree, 30294.147 best solution, best possible 26313.147 (1983.53 seconds)
Cbc0010I After 5800 nodes, 1319 on tree, 30294.147 best solution, best possible 26313.147 (1989.18 seconds)
Cbc0010I After 5900 nodes, 1366 on tree, 30294.147 best solution, best possible 26313.147 (1994.93 seconds)
Cbc0010I After 6000 nodes, 1414 on tree, 30294.147 best solution, best possible 26313.147 (2000.39 seconds)
Cbc0010I After 6100 nodes, 1463 on tree, 30294.147 best solution, best possible 26313.147 (2005.92 seconds)
Cbc0010I After 6200 nodes, 1512 on tree, 30294.147 best solution, best possible 26313.147 (2011.44 seconds)
Cbc0010I After 6300 nodes, 1562 on tree, 30294.147 best solution, best possible 26313.147 (2016.77 seconds)
Couenne: new cutoff value 2.9916915471e+04 (2044.91 seconds)
Cbc0004I Integer solution of 29916.915 found after 193477 iterations and 6360 nodes (2019.42 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 6400 nodes, 844 on tree, 29916.915 best solution, best possible 26326.518 (2226.41 seconds)
Cbc0010I After 6500 nodes, 874 on tree, 29916.915 best solution, best possible 26405.541 (2234.21 seconds)
Cbc0010I After 6600 nodes, 898 on tree, 29916.915 best solution, best possible 26453.743 (2246.09 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 6700 nodes, 929 on tree, 29916.915 best solution, best possible 26498.51 (2346.53 seconds)
Cbc0010I After 6800 nodes, 960 on tree, 29916.915 best solution, best possible 26524.965 (2358.24 seconds)
Cbc0010I After 6900 nodes, 981 on tree, 29916.915 best solution, best possible 26543.067 (2366.18 seconds)
Cbc0010I After 7000 nodes, 1000 on tree, 29916.915 best solution, best possible 26547.137 (2374.16 seconds)
Cbc0010I After 7100 nodes, 1027 on tree, 29916.915 best solution, best possible 26590.16 (2449.91 seconds)
Cbc0010I After 7200 nodes, 1056 on tree, 29916.915 best solution, best possible 26609.606 (2461.52 seconds)
Cbc0010I After 7300 nodes, 1093 on tree, 29916.915 best solution, best possible 26613.126 (2471.02 seconds)
Cbc0010I After 7400 nodes, 1133 on tree, 29916.915 best solution, best possible 26613.126 (2485.95 seconds)
Cbc0010I After 7500 nodes, 1154 on tree, 29916.915 best solution, best possible 26613.126 (2494.42 seconds)
Cbc0010I After 7600 nodes, 1171 on tree, 29916.915 best solution, best possible 26613.126 (2500.31 seconds)
Cbc0010I After 7700 nodes, 1190 on tree, 29916.915 best solution, best possible 26613.126 (2505.17 seconds)
Cbc0010I After 7800 nodes, 1220 on tree, 29916.915 best solution, best possible 26613.126 (2510.65 seconds)
Cbc0010I After 7900 nodes, 1239 on tree, 29916.915 best solution, best possible 26613.126 (2515.91 seconds)
Cbc0010I After 8000 nodes, 1269 on tree, 29916.915 best solution, best possible 26613.126 (2521.26 seconds)
Couenne: new cutoff value 2.9833490120e+04 (2550.95 seconds)
Cbc0004I Integer solution of 29833.49 found after 276133 iterations and 8075 nodes (2525.46 seconds)
Cbc0010I After 8100 nodes, 880 on tree, 29833.49 best solution, best possible 26618.631 (2531.07 seconds)
Cbc0010I After 8200 nodes, 909 on tree, 29833.49 best solution, best possible 26637.384 (2539.22 seconds)
Cbc0010I After 8300 nodes, 938 on tree, 29833.49 best solution, best possible 26658.772 (2547.21 seconds)
Cbc0010I After 8400 nodes, 963 on tree, 29833.49 best solution, best possible 26709.586 (2555.07 seconds)
Cbc0010I After 8500 nodes, 988 on tree, 29833.49 best solution, best possible 26718.911 (2563.62 seconds)
Cbc0010I After 8600 nodes, 1015 on tree, 29833.49 best solution, best possible 26746.344 (2578.13 seconds)
Cbc0010I After 8700 nodes, 1044 on tree, 29833.49 best solution, best possible 26767.588 (2588.37 seconds)
Cbc0010I After 8800 nodes, 1078 on tree, 29833.49 best solution, best possible 26789.886 (2597.29 seconds)
Cbc0010I After 8900 nodes, 1108 on tree, 29833.49 best solution, best possible 26821.79 (2660.17 seconds)
Optimality Based BT: 22 improved bounds
Cbc0010I After 9000 nodes, 1134 on tree, 29833.49 best solution, best possible 26835.65 (2690.37 seconds)
Cbc0010I After 9100 nodes, 1156 on tree, 29833.49 best solution, best possible 26850.462 (2698.85 seconds)
Cbc0010I After 9200 nodes, 1184 on tree, 29833.49 best solution, best possible 26879.722 (2706.34 seconds)
Cbc0010I After 9300 nodes, 1211 on tree, 29833.49 best solution, best possible 26892.271 (2713.63 seconds)
Cbc0010I After 9400 nodes, 1241 on tree, 29833.49 best solution, best possible 26912.536 (2728.12 seconds)
Cbc0010I After 9500 nodes, 1269 on tree, 29833.49 best solution, best possible 26931.847 (2739.73 seconds)
Cbc0010I After 9600 nodes, 1294 on tree, 29833.49 best solution, best possible 26960.272 (2754.91 seconds)
Cbc0010I After 9700 nodes, 1318 on tree, 29833.49 best solution, best possible 26986.127 (2763.53 seconds)
Cbc0010I After 9800 nodes, 1343 on tree, 29833.49 best solution, best possible 27001.192 (2771.78 seconds)
Cbc0010I After 9900 nodes, 1377 on tree, 29833.49 best solution, best possible 27026.021 (2779.32 seconds)
Cbc0010I After 10000 nodes, 1397 on tree, 29833.49 best solution, best possible 27038.92 (2815.40 seconds)
Cbc0010I After 10100 nodes, 1425 on tree, 29833.49 best solution, best possible 27046.446 (2831.39 seconds)
Cbc0010I After 10200 nodes, 1456 on tree, 29833.49 best solution, best possible 27054.829 (2840.20 seconds)
Cbc0010I After 10300 nodes, 1484 on tree, 29833.49 best solution, best possible 27060.858 (2847.87 seconds)
Cbc0010I After 10400 nodes, 1521 on tree, 29833.49 best solution, best possible 27067.824 (2860.29 seconds)
Cbc0010I After 10500 nodes, 1548 on tree, 29833.49 best solution, best possible 27082.021 (2867.77 seconds)
Cbc0010I After 10600 nodes, 1568 on tree, 29833.49 best solution, best possible 27094.961 (2877.05 seconds)
Cbc0010I After 10700 nodes, 1589 on tree, 29833.49 best solution, best possible 27111.539 (2954.61 seconds)
Cbc0010I After 10800 nodes, 1614 on tree, 29833.49 best solution, best possible 27115.201 (2971.11 seconds)
Cbc0010I After 10900 nodes, 1646 on tree, 29833.49 best solution, best possible 27116.896 (3043.56 seconds)
Cbc0010I After 11000 nodes, 1668 on tree, 29833.49 best solution, best possible 27142.843 (3052.66 seconds)
Cbc0010I After 11100 nodes, 1691 on tree, 29833.49 best solution, best possible 27147.392 (3060.62 seconds)
Cbc0010I After 11200 nodes, 1721 on tree, 29833.49 best solution, best possible 27163.728 (3072.17 seconds)
Cbc0010I After 11300 nodes, 1743 on tree, 29833.49 best solution, best possible 27180.188 (3080.24 seconds)
Cbc0010I After 11400 nodes, 1772 on tree, 29833.49 best solution, best possible 27188.118 (3093.49 seconds)
Cbc0010I After 11500 nodes, 1793 on tree, 29833.49 best solution, best possible 27200.371 (3105.86 seconds)
Cbc0010I After 11600 nodes, 1819 on tree, 29833.49 best solution, best possible 27205.522 (3184.55 seconds)
Cbc0010I After 11700 nodes, 1841 on tree, 29833.49 best solution, best possible 27214.115 (3193.52 seconds)
Cbc0010I After 11800 nodes, 1873 on tree, 29833.49 best solution, best possible 27218.891 (3202.73 seconds)
Cbc0010I After 11900 nodes, 1895 on tree, 29833.49 best solution, best possible 27228.799 (3210.78 seconds)
Cbc0010I After 12000 nodes, 1925 on tree, 29833.49 best solution, best possible 27239.528 (3219.71 seconds)
Cbc0010I After 12100 nodes, 1948 on tree, 29833.49 best solution, best possible 27243.904 (3227.99 seconds)
Cbc0010I After 12200 nodes, 1965 on tree, 29833.49 best solution, best possible 27264.614 (3236.75 seconds)
Cbc0010I After 12300 nodes, 1990 on tree, 29833.49 best solution, best possible 27276.374 (3245.35 seconds)
Cbc0010I After 12400 nodes, 2015 on tree, 29833.49 best solution, best possible 27282.263 (3256.72 seconds)
Cbc0010I After 12500 nodes, 2040 on tree, 29833.49 best solution, best possible 27291.879 (3265.50 seconds)
Cbc0010I After 12600 nodes, 2074 on tree, 29833.49 best solution, best possible 27296.346 (3274.42 seconds)
Optimality Based BT: 7 improved bounds
Cbc0010I After 12700 nodes, 2099 on tree, 29833.49 best solution, best possible 27305.364 (3302.69 seconds)
Cbc0010I After 12800 nodes, 2123 on tree, 29833.49 best solution, best possible 27317.204 (3314.18 seconds)
Cbc0010I After 12900 nodes, 2145 on tree, 29833.49 best solution, best possible 27325.249 (3322.32 seconds)
Cbc0010I After 13000 nodes, 2182 on tree, 29833.49 best solution, best possible 27329.907 (3334.58 seconds)
Cbc0010I After 13100 nodes, 2207 on tree, 29833.49 best solution, best possible 27337.099 (3348.06 seconds)
Cbc0010I After 13200 nodes, 2229 on tree, 29833.49 best solution, best possible 27346.173 (3360.34 seconds)
Cbc0010I After 13300 nodes, 2255 on tree, 29833.49 best solution, best possible 27353.105 (3375.55 seconds)
Cbc0010I After 13400 nodes, 2278 on tree, 29833.49 best solution, best possible 27362.75 (3383.80 seconds)
Cbc0010I After 13500 nodes, 2297 on tree, 29833.49 best solution, best possible 27368.604 (3392.81 seconds)
Cbc0010I After 13600 nodes, 2322 on tree, 29833.49 best solution, best possible 27378.081 (3400.94 seconds)
Cbc0010I After 13700 nodes, 2346 on tree, 29833.49 best solution, best possible 27386.032 (3412.27 seconds)
Cbc0010I After 13800 nodes, 2375 on tree, 29833.49 best solution, best possible 27389.03 (3421.02 seconds)
Cbc0010I After 13900 nodes, 2401 on tree, 29833.49 best solution, best possible 27394.865 (3429.56 seconds)
Cbc0010I After 14000 nodes, 2421 on tree, 29833.49 best solution, best possible 27405.004 (3437.72 seconds)
Cbc0010I After 14100 nodes, 2441 on tree, 29833.49 best solution, best possible 27408.4 (3445.70 seconds)
Cbc0010I After 14200 nodes, 2467 on tree, 29833.49 best solution, best possible 27419.032 (3458.22 seconds)
Cbc0010I After 14300 nodes, 2486 on tree, 29833.49 best solution, best possible 27424.394 (3471.50 seconds)
Cbc0010I After 14400 nodes, 2509 on tree, 29833.49 best solution, best possible 27429 (3480.42 seconds)
Cbc0010I After 14500 nodes, 2536 on tree, 29833.49 best solution, best possible 27438.42 (3488.51 seconds)
Cbc0010I After 14600 nodes, 2559 on tree, 29833.49 best solution, best possible 27443.145 (3496.80 seconds)
Cbc0010I After 14700 nodes, 2580 on tree, 29833.49 best solution, best possible 27451.968 (3505.26 seconds)
Cbc0010I After 14800 nodes, 2603 on tree, 29833.49 best solution, best possible 27459.691 (3513.96 seconds)
Cbc0010I After 14900 nodes, 2627 on tree, 29833.49 best solution, best possible 27464.804 (3525.06 seconds)
Cbc0010I After 15000 nodes, 2650 on tree, 29833.49 best solution, best possible 27472.283 (3534.21 seconds)
Cbc0010I After 15100 nodes, 2676 on tree, 29833.49 best solution, best possible 27480.874 (3542.58 seconds)
Cbc0010I After 15200 nodes, 2695 on tree, 29833.49 best solution, best possible 27487.426 (3553.74 seconds)
Cbc0010I After 15300 nodes, 2712 on tree, 29833.49 best solution, best possible 27493.046 (3562.50 seconds)
Cbc0010I After 15400 nodes, 2726 on tree, 29833.49 best solution, best possible 27496.26 (3573.64 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 29833.49 (best possible 27496.26), took 888430 iterations and 15412 nodes (3575.10 seconds)
Cbc0035I Maximum depth 584, 48581 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1925
Linearization cuts added in total:           1925  (separation time: 0.022929s)
Total solve time:                          3575.3s (3575.3s in branch-and-bound)
Lower bound:                              27496.3
Upper bound:                              29833.5  (gap: 8.50%)
Branch-and-bound nodes:                     15412
Stats: /tmp/jl_8S1TVb/model.nl 1275 [var]  125 [int] 1625 [con] 1211 [aux]   1925 [root]     1925 [tot] 0.022929 [sep]   3575.3 [time]   3575.3 [bb]         2.749626e+04 [lower]         2.983349e+04 [upper]   15412 [nodes]
Performance of                           FBBT:	    220.659s,    21677 runs. fix:   0.224725 shrnk:    1.03456 ubd:          0 2ubd:          0 infeas:         21
Performance of                           OBBT:	    251.591s,       15 runs. fix:    0.50405 shrnk:    47.5509 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
