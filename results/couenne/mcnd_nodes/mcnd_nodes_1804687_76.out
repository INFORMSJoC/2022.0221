solving instance mcnd nodes c25_100_10_V_L_5 3 6 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1769.8647      201 9.912131
NLP0014I             2      INFEAS 3.9999997       45 2.122163
Loaded instance "/tmp/jl_clM1Qq/model.nl"
Constraints:         1625
Variables:           1275 (125 integer)
Auxiliaries:         1211 (0 integer)

Coin0506I Presolve 1804 (-122) rows, 1278 (-1208) columns and 7935 (-1441) elements
Clp0006I 0  Obj 200 Primal inf 190.98243 (97)
Clp0006I 111  Obj 256.18636 Primal inf 441.05641 (162)
Clp0006I 222  Obj 647.61449 Primal inf 394.40398 (166)
Clp0006I 333  Obj 1041.3701 Primal inf 681.33271 (162)
Clp0006I 444  Obj 1265.2763 Primal inf 562.58092 (274)
Clp0006I 555  Obj 1404.2943 Primal inf 1122.3656 (415)
Clp0006I 654  Obj 1451.1455 Primal inf 168.64754 (315)
Clp0006I 746  Obj 1465.1845 Primal inf 8.7834385 (67)
Clp0006I 820  Obj 1468.5985
Clp0000I Optimal - objective value 1468.5985
Clp0032I Optimal objective 1468.598491 - 820 iterations time 0.092, Presolve 0.01
Clp0000I Optimal - objective value 1468.5985
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1468.5985
Optimality Based BT: 1 improved bounds
Probing: 2 improved bounds
NLP Heuristic: no solution.
Cbc0031I 31 added rows had average density of 2
Cbc0013I At root node, 31 cuts changed objective from 1468.5985 to 1542.3554 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 227 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (80.39 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 42 on tree, 1e+50 best solution, best possible 1583.9481 (495.72 seconds)
Cbc0010I After 200 nodes, 89 on tree, 1e+50 best solution, best possible 1583.9481 (503.04 seconds)
Cbc0010I After 300 nodes, 133 on tree, 1e+50 best solution, best possible 1583.9481 (509.08 seconds)
Cbc0010I After 400 nodes, 180 on tree, 1e+50 best solution, best possible 1583.9481 (515.07 seconds)
Cbc0010I After 500 nodes, 230 on tree, 1e+50 best solution, best possible 1583.9481 (520.87 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 1583.9481 (524.81 seconds)
Couenne: new cutoff value 1.8841437655e+03 (539.788 seconds)
Cbc0004I Integer solution of 1884.1438 found after 48589 iterations and 601 nodes (524.85 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 257 on tree, 1884.1438 best solution, best possible 1594.2348 (891.70 seconds)
Cbc0010I After 800 nodes, 301 on tree, 1884.1438 best solution, best possible 1594.2348 (901.38 seconds)
Cbc0010I After 900 nodes, 349 on tree, 1884.1438 best solution, best possible 1594.2348 (908.93 seconds)
Cbc0010I After 1000 nodes, 398 on tree, 1884.1438 best solution, best possible 1594.2348 (916.08 seconds)
Couenne: new cutoff value 1.8516847018e+03 (933.068 seconds)
Cbc0004I Integer solution of 1851.6847 found after 72575 iterations and 1040 nodes (918.13 seconds)
Cbc0010I After 1100 nodes, 194 on tree, 1851.6847 best solution, best possible 1596.534 (1101.28 seconds)
Cbc0010I After 1200 nodes, 243 on tree, 1851.6847 best solution, best possible 1596.534 (1110.61 seconds)
Cbc0010I After 1300 nodes, 290 on tree, 1851.6847 best solution, best possible 1596.534 (1117.86 seconds)
Cbc0010I After 1400 nodes, 340 on tree, 1851.6847 best solution, best possible 1596.534 (1124.03 seconds)
Couenne: new cutoff value 1.7697749669e+03 (1141.82 seconds)
Cbc0004I Integer solution of 1769.775 found after 108640 iterations and 1459 nodes (1126.88 seconds)
Cbc0010I After 1500 nodes, 165 on tree, 1769.775 best solution, best possible 1601.8845 (1137.06 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 2 improved bounds
Cbc0010I After 1600 nodes, 189 on tree, 1769.775 best solution, best possible 1619.8999 (1423.34 seconds)
Cbc0010I After 1700 nodes, 217 on tree, 1769.775 best solution, best possible 1626.9489 (1438.69 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 1800 nodes, 238 on tree, 1769.775 best solution, best possible 1632.1771 (1598.04 seconds)
Cbc0010I After 1900 nodes, 269 on tree, 1769.775 best solution, best possible 1634.9531 (1751.76 seconds)
Cbc0010I After 2000 nodes, 287 on tree, 1769.775 best solution, best possible 1637.9432 (1774.49 seconds)
Cbc0010I After 2100 nodes, 312 on tree, 1769.775 best solution, best possible 1638.0962 (1902.88 seconds)
Cbc0010I After 2200 nodes, 337 on tree, 1769.775 best solution, best possible 1641.6262 (1918.12 seconds)
Cbc0010I After 2300 nodes, 356 on tree, 1769.775 best solution, best possible 1643.764 (1934.57 seconds)
Cbc0010I After 2400 nodes, 378 on tree, 1769.775 best solution, best possible 1645.0322 (1947.95 seconds)
Cbc0010I After 2500 nodes, 409 on tree, 1769.775 best solution, best possible 1645.6073 (1965.94 seconds)
Cbc0010I After 2600 nodes, 432 on tree, 1769.775 best solution, best possible 1647.2766 (1986.43 seconds)
Cbc0010I After 2700 nodes, 455 on tree, 1769.775 best solution, best possible 1650.9974 (2060.36 seconds)
Cbc0010I After 2800 nodes, 477 on tree, 1769.775 best solution, best possible 1652.2833 (2074.19 seconds)
Cbc0010I After 2900 nodes, 494 on tree, 1769.775 best solution, best possible 1654.021 (2095.92 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3000 nodes, 522 on tree, 1769.775 best solution, best possible 1657.124 (2133.05 seconds)
Cbc0010I After 3100 nodes, 543 on tree, 1769.775 best solution, best possible 1658.6544 (2146.48 seconds)
Cbc0010I After 3200 nodes, 558 on tree, 1769.775 best solution, best possible 1659.7932 (2161.30 seconds)
Cbc0010I After 3300 nodes, 576 on tree, 1769.775 best solution, best possible 1660.9361 (2174.57 seconds)
Cbc0010I After 3400 nodes, 591 on tree, 1769.775 best solution, best possible 1664.3749 (2244.44 seconds)
Cbc0010I After 3500 nodes, 605 on tree, 1769.775 best solution, best possible 1665.5588 (2258.18 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3600 nodes, 624 on tree, 1769.775 best solution, best possible 1667.1146 (2300.91 seconds)
Cbc0010I After 3700 nodes, 646 on tree, 1769.775 best solution, best possible 1667.8253 (2316.77 seconds)
Cbc0010I After 3800 nodes, 667 on tree, 1769.775 best solution, best possible 1669.0573 (2383.98 seconds)
Cbc0010I After 3900 nodes, 689 on tree, 1769.775 best solution, best possible 1669.5323 (2396.61 seconds)
Cbc0010I After 4000 nodes, 714 on tree, 1769.775 best solution, best possible 1670.6915 (2409.52 seconds)
Cbc0010I After 4100 nodes, 734 on tree, 1769.775 best solution, best possible 1671.8111 (2425.20 seconds)
Cbc0010I After 4200 nodes, 751 on tree, 1769.775 best solution, best possible 1673.7954 (2494.50 seconds)
Cbc0010I After 4300 nodes, 766 on tree, 1769.775 best solution, best possible 1675.124 (2508.99 seconds)
Cbc0010I After 4400 nodes, 777 on tree, 1769.775 best solution, best possible 1676.6634 (2537.55 seconds)
Cbc0010I After 4500 nodes, 799 on tree, 1769.775 best solution, best possible 1677.3739 (2554.78 seconds)
Cbc0010I After 4600 nodes, 808 on tree, 1769.775 best solution, best possible 1678.7089 (2567.37 seconds)
Cbc0010I After 4700 nodes, 826 on tree, 1769.775 best solution, best possible 1679.7601 (2694.98 seconds)
Cbc0010I After 4800 nodes, 837 on tree, 1769.775 best solution, best possible 1680.3739 (2717.48 seconds)
Cbc0010I After 4900 nodes, 849 on tree, 1769.775 best solution, best possible 1681.0044 (2731.10 seconds)
Cbc0010I After 5000 nodes, 864 on tree, 1769.775 best solution, best possible 1682.0378 (2745.02 seconds)
Cbc0010I After 5100 nodes, 874 on tree, 1769.775 best solution, best possible 1683.0831 (2758.81 seconds)
Cbc0010I After 5200 nodes, 893 on tree, 1769.775 best solution, best possible 1684.0954 (2773.13 seconds)
Cbc0010I After 5300 nodes, 906 on tree, 1769.775 best solution, best possible 1685.3315 (2853.31 seconds)
Cbc0010I After 5400 nodes, 917 on tree, 1769.775 best solution, best possible 1686.0557 (2872.01 seconds)
Cbc0010I After 5500 nodes, 928 on tree, 1769.775 best solution, best possible 1687.1475 (2890.61 seconds)
Cbc0010I After 5600 nodes, 938 on tree, 1769.775 best solution, best possible 1687.6666 (2905.27 seconds)
Cbc0010I After 5700 nodes, 950 on tree, 1769.775 best solution, best possible 1688.3838 (2918.66 seconds)
Cbc0010I After 5800 nodes, 965 on tree, 1769.775 best solution, best possible 1689.6903 (2933.16 seconds)
Cbc0010I After 5900 nodes, 980 on tree, 1769.775 best solution, best possible 1690.2745 (2947.14 seconds)
Cbc0010I After 6000 nodes, 997 on tree, 1769.775 best solution, best possible 1691.2371 (2962.00 seconds)
Cbc0010I After 6100 nodes, 1006 on tree, 1769.775 best solution, best possible 1691.5696 (3033.63 seconds)
Cbc0010I After 6200 nodes, 1011 on tree, 1769.775 best solution, best possible 1692.2147 (3048.33 seconds)
Cbc0010I After 6300 nodes, 1020 on tree, 1769.775 best solution, best possible 1693.2728 (3062.82 seconds)
Cbc0010I After 6400 nodes, 1025 on tree, 1769.775 best solution, best possible 1693.9867 (3079.29 seconds)
Cbc0010I After 6500 nodes, 1029 on tree, 1769.775 best solution, best possible 1695.3996 (3097.77 seconds)
Cbc0010I After 6600 nodes, 1028 on tree, 1769.775 best solution, best possible 1696.3186 (3111.59 seconds)
Cbc0010I After 6700 nodes, 1032 on tree, 1769.775 best solution, best possible 1696.7609 (3125.63 seconds)
Cbc0010I After 6800 nodes, 1049 on tree, 1769.775 best solution, best possible 1697.5821 (3140.19 seconds)
Cbc0010I After 6900 nodes, 1055 on tree, 1769.775 best solution, best possible 1698.3739 (3157.75 seconds)
Cbc0010I After 7000 nodes, 1057 on tree, 1769.775 best solution, best possible 1699.4075 (3173.09 seconds)
Cbc0010I After 7100 nodes, 1056 on tree, 1769.775 best solution, best possible 1699.8769 (3184.27 seconds)
Cbc0010I After 7200 nodes, 1060 on tree, 1769.775 best solution, best possible 1700.5231 (3204.18 seconds)
Cbc0010I After 7300 nodes, 1066 on tree, 1769.775 best solution, best possible 1701.0363 (3218.74 seconds)
Cbc0010I After 7400 nodes, 1072 on tree, 1769.775 best solution, best possible 1701.8105 (3233.31 seconds)
Cbc0010I After 7500 nodes, 1083 on tree, 1769.775 best solution, best possible 1702.1716 (3250.20 seconds)
Cbc0010I After 7600 nodes, 1089 on tree, 1769.775 best solution, best possible 1702.8968 (3265.10 seconds)
Cbc0010I After 7700 nodes, 1098 on tree, 1769.775 best solution, best possible 1703.403 (3282.23 seconds)
Cbc0010I After 7800 nodes, 1098 on tree, 1769.775 best solution, best possible 1703.8107 (3299.70 seconds)
Cbc0010I After 7900 nodes, 1105 on tree, 1769.775 best solution, best possible 1704.5555 (3318.39 seconds)
Cbc0010I After 8000 nodes, 1113 on tree, 1769.775 best solution, best possible 1705.1889 (3333.97 seconds)
Cbc0010I After 8100 nodes, 1112 on tree, 1769.775 best solution, best possible 1705.8836 (3351.57 seconds)
Cbc0010I After 8200 nodes, 1113 on tree, 1769.775 best solution, best possible 1706.4674 (3365.90 seconds)
Cbc0010I After 8300 nodes, 1114 on tree, 1769.775 best solution, best possible 1707.4091 (3386.03 seconds)
Cbc0010I After 8400 nodes, 1113 on tree, 1769.775 best solution, best possible 1707.9267 (3402.15 seconds)
Cbc0010I After 8500 nodes, 1121 on tree, 1769.775 best solution, best possible 1708.6371 (3417.82 seconds)
Cbc0010I After 8600 nodes, 1127 on tree, 1769.775 best solution, best possible 1708.9949 (3431.75 seconds)
Cbc0010I After 8700 nodes, 1123 on tree, 1769.775 best solution, best possible 1709.5512 (3445.35 seconds)
Cbc0010I After 8800 nodes, 1122 on tree, 1769.775 best solution, best possible 1709.9625 (3459.88 seconds)
Cbc0010I After 8900 nodes, 1122 on tree, 1769.775 best solution, best possible 1710.4917 (3474.40 seconds)
Cbc0010I After 9000 nodes, 1128 on tree, 1769.775 best solution, best possible 1711.0495 (3491.43 seconds)
Cbc0010I After 9100 nodes, 1124 on tree, 1769.775 best solution, best possible 1711.7618 (3505.60 seconds)
Cbc0010I After 9200 nodes, 1121 on tree, 1769.775 best solution, best possible 1712.2682 (3519.21 seconds)
Cbc0010I After 9300 nodes, 1109 on tree, 1769.775 best solution, best possible 1713.1685 (3533.44 seconds)
Cbc0010I After 9400 nodes, 1099 on tree, 1769.775 best solution, best possible 1714.0339 (3559.49 seconds)
Cbc0010I After 9500 nodes, 1098 on tree, 1769.775 best solution, best possible 1714.4312 (3576.28 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1769.775 (best possible 1714.4312), took 1443134 iterations and 9540 nodes (3585.13 seconds)
Cbc0035I Maximum depth 300, 40025 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1926
Linearization cuts added in total:           1926  (separation time: 0.022999s)
Total solve time:                         3585.29s (3585.29s in branch-and-bound)
Lower bound:                              1714.43
Upper bound:                              1769.77  (gap: 3.23%)
Branch-and-bound nodes:                      9540
Stats: /tmp/jl_clM1Qq/model.nl 1275 [var]  125 [int] 1625 [con] 1211 [aux]   1926 [root]     1926 [tot] 0.022999 [sep]  3585.29 [time]   3585.3 [bb]         1.714431e+03 [lower]         1.769775e+03 [upper]    9540 [nodes]
Performance of                           FBBT:	    237.179s,    13286 runs. fix:     5.0209 shrnk:     3.5344 ubd:          0 2ubd:          0 infeas:         50
Performance of                           OBBT:	    347.744s,       12 runs. fix:   0.185401 shrnk:    2.38484 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
