solving instance mcnd nodes c36 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 10.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 119870.28      131 138.10303
NLP0014I             2      INFEAS 577      104 83.103571
Loaded instance "/tmp/jl_G8O60D/model.nl"
Constraints:        10750
Variables:           9720 (250 integer)
Auxiliaries:         9511 (0 integer)

Coin0506I Presolve 10830 (-61) rows, 9700 (-9531) columns and 65580 (-9801) elements
Clp0006I 0  Obj 0 Primal inf 6248.9298 (80) Dual inf 8.8485126e+12 (894)
Clp0006I 280  Obj 108820.86 Primal inf 1283.3254 (19) Dual inf 1.7037456e+12 (384)
Clp0006I 559  Obj 147256.29 Dual inf 24636.009 (728)
Clp0006I 838  Obj 131818.62 Dual inf 37200.839 (1230)
Clp0006I 1117  Obj 128808.58 Dual inf 134580.55 (1575)
Clp0006I 1396  Obj 121768.22 Dual inf 288948.8 (1771)
Clp0006I 1675  Obj 119613.48 Dual inf 478035.35 (2301)
Clp0006I 1954  Obj 113445.16 Dual inf 1201697.6 (2597)
Clp0006I 2233  Obj 109745.93 Dual inf 656775.11 (2862)
Clp0006I 2512  Obj 108433.87 Dual inf 280479.87 (2955)
Clp0006I 2791  Obj 107442.72 Dual inf 185757.78 (2389)
Clp0006I 3070  Obj 106693.06 Dual inf 340081.81 (2987)
Clp0006I 3349  Obj 106078.33 Dual inf 3174788.6 (3926)
Clp0006I 3620  Obj 104892.59 Dual inf 124468.86 (3124)
Clp0006I 3873  Obj 103780.76 Dual inf 343246.52 (3032)
Clp0006I 4152  Obj 102882.46 Dual inf 212900.41 (2947)
Clp0006I 4431  Obj 102523.83 Dual inf 92706.995 (2461)
Clp0006I 4710  Obj 102313.58 Dual inf 73114.057 (2407)
Clp0006I 4989  Obj 101660.76 Dual inf 109299.34 (2644)
Clp0006I 5268  Obj 101221.99 Primal inf 4.643032e-07 (3) Dual inf 2.9309679e+12 (2901)
Clp0006I 5547  Obj 100936.18 Primal inf 1.350326e-08 (1) Dual inf 1.7537569e+11 (1705)
Clp0006I 5826  Obj 100566.68 Dual inf 87144.611 (2449)
Clp0006I 6105  Obj 100446.22 Dual inf 17647.476 (1183)
Clp0006I 6384  Obj 100389.97 Dual inf 2014.0236 (474)
Clp0006I 6657  Obj 100359.33
Clp0000I Optimal - objective value 100359.33
Clp0000I Optimal - objective value 100359.33
Clp0032I Optimal objective 100359.3319 - 6657 iterations time 3.852, Presolve 0.07
Clp0000I Optimal - objective value 100359.33
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 100359.33
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 100359.33 to 100359.33 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 100359.33), took 0 iterations and 0 nodes (3288.56 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10891
Linearization cuts added in total:          10891  (separation time: 1.03412s)
Total solve time:                         3292.41s (3292.41s in branch-and-bound)
Lower bound:                               100359
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_G8O60D/model.nl 9720 [var]  250 [int] 10750 [con] 9511 [aux]  10891 [root]    10891 [tot] 1.03412 [sep]  3292.41 [time]  3292.44 [bb]         1.003593e+05 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	    1.92771s,        4 runs. fix:          0 shrnk:    31.6453 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1462.72s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
