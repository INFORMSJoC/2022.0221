solving instance mcnd nodes c100_400_10_F_T_10 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 43876.214      107 84.095551
Loaded instance "/tmp/jl_6UPKMZ/model.nl"
Constraints:         6500
Variables:           5100 (500 integer)
Auxiliaries:         4611 (0 integer)

Coin0506I Presolve 6766 (-425) rows, 4972 (-4739) columns and 30596 (-5785) elements
Clp0006I 0  Obj 7543.9059 Primal inf 411.2187 (72)
Clp0006I 210  Obj 9967.4882 Primal inf 1878.4459 (195)
Clp0006I 420  Obj 13759.309 Primal inf 1848.6253 (243)
Clp0006I 630  Obj 18612.796 Primal inf 1986.5575 (334)
Clp0006I 840  Obj 22844.654 Primal inf 1968.2286 (429)
Clp0006I 1050  Obj 26115.329 Primal inf 933.46709 (396)
Clp0006I 1260  Obj 27658.666 Primal inf 3062.2293 (668)
Clp0006I 1470  Obj 29489.886 Primal inf 7921.849 (895)
Clp0006I 1680  Obj 31232.099 Primal inf 9067.6046 (865)
Clp0006I 1890  Obj 32459.277 Primal inf 3595.0995 (917)
Clp0006I 2100  Obj 33355.455 Primal inf 2748.9949 (748)
Clp0006I 2297  Obj 34263.646 Primal inf 3840.4269 (916)
Clp0006I 2507  Obj 35047.551 Primal inf 12090.709 (1354)
Clp0006I 2717  Obj 35567.469 Primal inf 3355.7294 (1117)
Clp0006I 2885  Obj 36023.096 Primal inf 18750.876 (1501)
Clp0006I 3066  Obj 36451.622 Primal inf 6402.9994 (1217)
Clp0006I 3261  Obj 36790.325 Primal inf 922.58634 (769)
Clp0006I 3435  Obj 36980.974 Primal inf 16990.515 (1644)
Clp0006I 3590  Obj 37075.681 Primal inf 609.89581 (570)
Clp0006I 3744  Obj 37121.14 Primal inf 60.707359 (529)
Clp0006I 3902  Obj 37129.413 Primal inf 18.720783 (446)
Clp0006I 3906  Obj 37129.462
Clp0000I Optimal - objective value 37129.462
Clp0032I Optimal objective 37129.46193 - 3906 iterations time 1.742, Presolve 0.04
Clp0000I Optimal - objective value 37129.462
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 37129.462
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 37129.462 to 37129.462 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3433.35 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 840 iterations and 1 nodes (3439.40 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7191
Linearization cuts added in total:           7191  (separation time: 0.301509s)
Total solve time:                         3441.14s (3441.14s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         1
Stats: /tmp/jl_6UPKMZ/model.nl 5100 [var]  500 [int] 6500 [con] 4611 [aux]   7191 [root]     7191 [tot] 0.301509 [sep]  3441.14 [time]  3441.15 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       1 [nodes]
Performance of                           FBBT:	   0.941303s,        5 runs. fix:        2.6 shrnk:    3.93636 ubd:          0 2ubd:         10 infeas:          0
Performance of                           OBBT:	     455.75s,        2 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:         10 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
