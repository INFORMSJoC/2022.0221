solving instance mcnd nodes c43 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 15.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 32125.251       95 94.990353
NLP0014I             2      INFEAS 591.99964       83 84.677089
Loaded instance "/tmp/jl_iuu9BP/model.nl"
Constraints:        13502
Variables:          12408 (314 integer)
Auxiliaries:        12115 (0 integer)

Coin0506I Presolve 13562 (-41) rows, 12388 (-12135) columns and 83716 (-12449) elements
Clp0006I 0  Obj 0 Primal inf 6806.5607 (80) Dual inf 1.0426933e+13 (1133)
Clp0006I 293  Obj 33578.457 Primal inf 1028.111 (16) Dual inf 2.9459574e+12 (705)
Clp0006I 586  Obj 46607.709 Dual inf 16421.817 (1631)
Clp0006I 878  Obj 42510.241 Dual inf 71995.975 (3532)
Clp0006I 1170  Obj 40962.711 Dual inf 10702.341 (1597)
Clp0006I 1462  Obj 38005.617 Dual inf 9632.196 (1255)
Clp0006I 1754  Obj 36234.287 Dual inf 3850.9115 (791)
Clp0006I 2046  Obj 35138.079 Dual inf 15973.48 (1956)
Clp0006I 2338  Obj 33379.048 Dual inf 7903.7867 (1584)
Clp0006I 2630  Obj 32528.983 Dual inf 9707.6522 (1265)
Clp0006I 2922  Obj 31946.39 Dual inf 47351.485 (3663)
Clp0006I 3214  Obj 31805.961 Dual inf 7731.0013 (1002)
Clp0006I 3399  Obj 31744.141
Clp0000I Optimal - objective value 31744.141
Clp0032I Optimal objective 31744.14145 - 3399 iterations time 1.412, Presolve 0.08
Clp0000I Optimal - objective value 31744.141
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 31744.141
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 31744.141 to 31744.141 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 31744.141), took 0 iterations and 0 nodes (3262.58 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      13603
Linearization cuts added in total:          13603  (separation time: 1.6222s)
Total solve time:                            3264s (3264s in branch-and-bound)
Lower bound:                              31744.1
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_iuu9BP/model.nl 12408 [var]  314 [int] 13502 [con] 12115 [aux]  13603 [root]    13603 [tot] 1.6222 [sep]     3264 [time]  3264.03 [bb]         3.174414e+04 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	    3.07095s,        4 runs. fix:          0 shrnk:    329.077 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1204.27s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
