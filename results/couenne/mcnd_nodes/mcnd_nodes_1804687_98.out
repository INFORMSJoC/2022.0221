solving instance mcnd nodes c25_100_30_F_T_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 33123.965       77 59.944747
NLP0014I             2      INFEAS 38.999999      123 34.232384
Loaded instance "/tmp/jl_0BUILK/model.nl"
Constraints:         4125
Variables:           3275 (125 integer)
Auxiliaries:         3156 (6 integer)

Coin0506I Presolve 3945 (-312) rows, 3192 (-3239) columns and 20663 (-4330) elements
Clp0006I 0  Obj 6079.9915 Primal inf 880.20166 (82)
Clp0006I 153  Obj 6399.9451 Primal inf 6887.7932 (206)
Clp0006I 306  Obj 7393.4616 Primal inf 41934.046 (358)
Clp0006I 459  Obj 9960.6121 Primal inf 16345.319 (499)
Clp0006I 612  Obj 13974.389 Primal inf 614442.43 (524)
Clp0006I 765  Obj 18317.711 Primal inf 152964.22 (700)
Clp0006I 918  Obj 23062.498 Primal inf 79847.99 (983)
Clp0006I 1071  Obj 25603.805 Primal inf 23461.219 (981)
Clp0006I 1224  Obj 27244.967 Primal inf 29531.704 (1014)
Clp0006I 1363  Obj 28535.694 Primal inf 98935.368 (1171)
Clp0006I 1515  Obj 29600.052 Primal inf 60486.55 (1248)
Clp0006I 1655  Obj 30486.428 Primal inf 182104.34 (1608)
Clp0006I 1798  Obj 31014.154 Primal inf 32212.271 (1117)
Clp0006I 1943  Obj 31558.366 Primal inf 15580.939 (905)
Clp0006I 2089  Obj 32148.921 Primal inf 80666.21 (1317)
Clp0006I 2228  Obj 32623.515 Primal inf 6890.9728 (1024)
Clp0006I 2357  Obj 32962.322 Primal inf 1844.8432 (646)
Clp0006I 2465  Obj 33063.442
Clp0000I Optimal - objective value 33063.442
Clp0032I Optimal objective 33063.44215 - 2465 iterations time 0.812, Presolve 0.03
Clp0000I Optimal - objective value 33063.442
NLP Heuristic: NLP0014I             3      INFEAS 34.815642      125 41.291809
no solution.
Clp0000I Optimal - objective value 33063.442
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 33063.442 to 33123.966 in 11 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 273 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1218.77 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 1726 iterations and 2 nodes (3486.75 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4257
Linearization cuts added in total:           4257  (separation time: 0.138507s)
Total solve time:                         3487.56s (3487.56s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_0BUILK/model.nl 3275 [var]  125 [int] 4125 [con] 3156 [aux]   4257 [root]     4257 [tot] 0.138507 [sep]  3487.56 [time]  3487.56 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       2 [nodes]
Performance of                           FBBT:	    1.37179s,       21 runs. fix:     2.7619 shrnk:   0.785962 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    549.457s,        3 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
