solving instance mcnd nodes c100_400_10_F_T_10 3 6 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 36743.448       77 70.679051
Loaded instance "/tmp/jl_wg7vro/model.nl"
Constraints:         6500
Variables:           5100 (500 integer)
Auxiliaries:         4811 (0 integer)

Coin0506I Presolve 7263 (-428) rows, 5171 (-4740) columns and 31698 (-5783) elements
Clp0006I 0  Obj 7000 Primal inf 933.39025 (91) Dual inf 3.2517231e+12 (319)
Clp0029I End of values pass after 200 iterations
Clp0006I 200  Obj 7000 Primal inf 902.97842 (82) Dual inf 3.2955828e+12 (310)
Clp0006I 444  Obj 10178.339 Primal inf 155.71158 (25) Dual inf 2.2569679e+12 (285)
Clp0006I 664  Obj 19267.507 Primal inf 101.57562 (18) Dual inf 3.7186115e+12 (534)
Clp0006I 884  Obj 30542.763 Primal inf 52.566587 (16) Dual inf 6.8277883e+12 (645)
Clp0006I 1105  Obj 42188.401 Primal inf 10.624104 (8) Dual inf 1.0484041e+12 (948)
Clp0006I 1325  Obj 44745.044 Dual inf 282233.36 (1041)
Clp0006I 1545  Obj 43573.359 Dual inf 282940.3 (960)
Clp0006I 1765  Obj 43461.888 Dual inf 301619.37 (948)
Clp0006I 1985  Obj 42982.77 Dual inf 241259.94 (1008)
Clp0006I 2205  Obj 42946.058 Dual inf 429742.6 (997)
Clp0006I 2425  Obj 40499.039 Dual inf 488440.53 (1115)
Clp0006I 2645  Obj 40429.032 Dual inf 257480.45 (1134)
Clp0006I 2865  Obj 39978.702 Dual inf 953946.63 (1279)
Clp0006I 3085  Obj 39495.797 Dual inf 311484.81 (1195)
Clp0006I 3305  Obj 38690.023 Dual inf 822071.14 (1248)
Clp0006I 3525  Obj 38584.393 Primal inf 4.051356e-07 (2) Dual inf 6.6346431e+12 (1527)
Clp0006I 3745  Obj 38584.376 Primal inf 1.0563292e-06 (10) Dual inf 8.9147079e+12 (1284)
Clp0006I 3965  Obj 38382.149 Dual inf 901092.59 (1217)
Clp0006I 4185  Obj 37668.376 Primal inf 2.8257164e-08 (1) Dual inf 4.167963e+11 (1262)
Clp0006I 4405  Obj 36389.156 Primal inf 3.5130751e-07 (2) Dual inf 1.7166934e+12 (1216)
Clp0006I 4622  Obj 36156.716 Primal inf 6.1712921e-05 (76) Dual inf 1.9709136e+14 (1534)
Clp0006I 4819  Obj 35591.104 Primal inf 1.4734017e-08 (1) Dual inf 1.0876573e+12 (1271)
Clp0006I 5039  Obj 35508.91 Dual inf 681953.76 (1267)
Clp0006I 5259  Obj 35258.432 Primal inf 5.073451e-07 (4) Dual inf 2.245225e+12 (1140)
Clp0006I 5455  Obj 35200.939 Dual inf 329484.22 (1229)
Clp0006I 5631  Obj 35182.751 Dual inf 768507.32 (1200)
Clp0006I 5823  Obj 35182.743 Primal inf 1.5693453e-08 (1) Dual inf 7.5591646e+11 (1212)
Clp0006I 6037  Obj 34399.09 Dual inf 206550.57 (1030)
Clp0006I 6238  Obj 33986.067 Dual inf 903464.76 (1286)
Clp0006I 6405  Obj 33798.912 Primal inf 1.1821871e-06 (6) Dual inf 1.4734441e+13 (1362)
Clp0006I 6564  Obj 33781.088 Dual inf 998517.31 (1301)
Clp0006I 6721  Obj 33623.31 Dual inf 88161.817 (830)
Clp0006I 6894  Obj 33586.131 Dual inf 127898.98 (1016)
Clp0006I 7061  Obj 33487.375 Dual inf 119442.96 (963)
Clp0006I 7233  Obj 33384.596 Primal inf 3.7745866e-07 (3) Dual inf 3.5484967e+12 (1245)
Clp0006I 7391  Obj 33311.013 Dual inf 898160.27 (1361)
Clp0006I 7577  Obj 33289.22 Dual inf 67578.429 (825)
Clp0006I 7746  Obj 33190.669 Dual inf 36873.321 (690)
Clp0006I 7917  Obj 33170.204 Dual inf 49861.001 (726)
Clp0006I 8099  Obj 33109.372 Dual inf 868.0432 (126)
Clp0006I 8262  Obj 33101.424 Dual inf 14.197126 (18)
Clp0006I 8296  Obj 33101.314
Clp0000I Optimal - objective value 33101.314
Clp0000I Optimal - objective value 33101.321
Clp0032I Optimal objective 33101.32128 - 8296 iterations time 5.152, Presolve 0.04
Clp0000I Optimal - objective value 33101.321
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 33101.321
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 33101.321 to 33101.321 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 33101.321), took 0 iterations and 0 nodes (3441.07 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7691
Linearization cuts added in total:           7691  (separation time: 0.303397s)
Total solve time:                         3446.22s (3446.22s in branch-and-bound)
Lower bound:                              33101.3
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_wg7vro/model.nl 5100 [var]  500 [int] 6500 [con] 4811 [aux]   7691 [root]     7691 [tot] 0.303397 [sep]  3446.22 [time]  3446.24 [bb]         3.310132e+04 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	   0.818926s,        4 runs. fix:       3.25 shrnk:    4.46573 ubd:          0 2ubd:         10 infeas:          0
Performance of                           OBBT:	    512.013s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:         10 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
