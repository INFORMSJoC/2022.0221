solving instance mcnd nodes c25_100_10_F_L_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10531.897       67 3.784229
NLP0014I             2      INFEAS 7.9999999       51 2.291579
Loaded instance "/tmp/jl_qMZ54H/model.nl"
Constraints:         1625
Variables:           1275 (125 integer)
Auxiliaries:         1136 (0 integer)

Coin0506I Presolve 1700 (-51) rows, 1250 (-1161) columns and 7675 (-1326) elements
Clp0006I 0  Obj 0 Primal inf 74.468311 (20)
Clp0006I 109  Obj 130.85855 Primal inf 2428.5972 (134)
Clp0006I 218  Obj 2914.0813 Primal inf 946.85346 (147)
Clp0006I 327  Obj 4647.9916 Primal inf 4187.0909 (252)
Clp0006I 436  Obj 7202.0542 Primal inf 2325.0168 (311)
Clp0006I 545  Obj 8546.4698 Primal inf 1868.2455 (244)
Clp0006I 649  Obj 9465.0172 Primal inf 12241.958 (559)
Clp0006I 745  Obj 9946.7625 Primal inf 330.05497 (229)
Clp0006I 830  Obj 10211.721 Primal inf 3234.4024 (510)
Clp0006I 916  Obj 10396.511 Primal inf 864.31954 (330)
Clp0006I 1000  Obj 10485.742 Primal inf 799.59946 (498)
Clp0006I 1091  Obj 10500.032 Primal inf 0.013985643 (4)
Clp0006I 1093  Obj 10500.04
Clp0000I Optimal - objective value 10500.04
Clp0032I Optimal objective 10500.03962 - 1093 iterations time 0.162, Presolve 0.01
Clp0000I Optimal - objective value 10500.04
NLP Heuristic: NLP0014I             3      INFEAS 4      177 5.467181
no solution.
Clp0000I Optimal - objective value 10500.04
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 10500.04 to 10531.898 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 254 row cuts average 2.0 elements, 10 column cuts (10 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (82.74 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.3643508961e+04 (579.6 seconds)
Cbc0004I Integer solution of 13643.509 found after 16168 iterations and 41 nodes (569.99 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 13643.509 best solution, best possible 10796.092 (885.03 seconds)
Cbc0010I After 200 nodes, 79 on tree, 13643.509 best solution, best possible 10865.498 (1169.61 seconds)
Cbc0010I After 300 nodes, 117 on tree, 13643.509 best solution, best possible 10973.163 (1195.59 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 400 nodes, 157 on tree, 13643.509 best solution, best possible 10997.68 (1346.40 seconds)
Cbc0010I After 500 nodes, 195 on tree, 13643.509 best solution, best possible 11012.825 (1366.92 seconds)
Cbc0010I After 600 nodes, 239 on tree, 13643.509 best solution, best possible 11037.682 (1396.32 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 279 on tree, 13643.509 best solution, best possible 11107.594 (1483.89 seconds)
Cbc0010I After 800 nodes, 322 on tree, 13643.509 best solution, best possible 11135.716 (1590.16 seconds)
Cbc0010I After 900 nodes, 364 on tree, 13643.509 best solution, best possible 11162.143 (1655.90 seconds)
Cbc0010I After 1000 nodes, 402 on tree, 13643.509 best solution, best possible 11204.056 (1761.80 seconds)
Cbc0010I After 1100 nodes, 437 on tree, 13643.509 best solution, best possible 11218.86 (1776.76 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1200 nodes, 475 on tree, 13643.509 best solution, best possible 11247.244 (1832.39 seconds)
Cbc0010I After 1300 nodes, 515 on tree, 13643.509 best solution, best possible 11272.852 (1846.57 seconds)
Cbc0010I After 1400 nodes, 551 on tree, 13643.509 best solution, best possible 11278.456 (1860.91 seconds)
Cbc0010I After 1500 nodes, 587 on tree, 13643.509 best solution, best possible 11304.292 (1887.55 seconds)
Cbc0010I After 1600 nodes, 628 on tree, 13643.509 best solution, best possible 11307.288 (1907.96 seconds)
Cbc0010I After 1700 nodes, 658 on tree, 13643.509 best solution, best possible 11321.455 (1922.31 seconds)
Cbc0010I After 1800 nodes, 694 on tree, 13643.509 best solution, best possible 11344.368 (1936.73 seconds)
Cbc0010I After 1900 nodes, 733 on tree, 13643.509 best solution, best possible 11349.909 (2004.62 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2000 nodes, 770 on tree, 13643.509 best solution, best possible 11354.551 (2097.93 seconds)
Cbc0010I After 2100 nodes, 810 on tree, 13643.509 best solution, best possible 11356.868 (2117.74 seconds)
Cbc0010I After 2200 nodes, 846 on tree, 13643.509 best solution, best possible 11365.206 (2134.47 seconds)
Cbc0010I After 2300 nodes, 885 on tree, 13643.509 best solution, best possible 11375.249 (2148.87 seconds)
Cbc0010I After 2400 nodes, 926 on tree, 13643.509 best solution, best possible 11376.701 (2163.86 seconds)
Cbc0010I After 2500 nodes, 965 on tree, 13643.509 best solution, best possible 11391.488 (2178.10 seconds)
Cbc0010I After 2600 nodes, 1005 on tree, 13643.509 best solution, best possible 11396.625 (2196.21 seconds)
Cbc0010I After 2700 nodes, 1046 on tree, 13643.509 best solution, best possible 11425.778 (2211.19 seconds)
Cbc0010I After 2800 nodes, 1085 on tree, 13643.509 best solution, best possible 11433.243 (2226.04 seconds)
Cbc0010I After 2900 nodes, 1123 on tree, 13643.509 best solution, best possible 11448.247 (2242.91 seconds)
Cbc0010I After 3000 nodes, 1162 on tree, 13643.509 best solution, best possible 11455.41 (2268.32 seconds)
Cbc0010I After 3100 nodes, 1199 on tree, 13643.509 best solution, best possible 11461.411 (2282.14 seconds)
Cbc0010I After 3200 nodes, 1237 on tree, 13643.509 best solution, best possible 11467.353 (2295.95 seconds)
Cbc0010I After 3300 nodes, 1273 on tree, 13643.509 best solution, best possible 11480.225 (2376.32 seconds)
Cbc0010I After 3400 nodes, 1313 on tree, 13643.509 best solution, best possible 11483.867 (2395.90 seconds)
Cbc0010I After 3500 nodes, 1354 on tree, 13643.509 best solution, best possible 11484.632 (2410.60 seconds)
Cbc0010I After 3600 nodes, 1393 on tree, 13643.509 best solution, best possible 11491.87 (2430.74 seconds)
Cbc0010I After 3700 nodes, 1432 on tree, 13643.509 best solution, best possible 11500.976 (2452.04 seconds)
Cbc0010I After 3800 nodes, 1468 on tree, 13643.509 best solution, best possible 11503.326 (2471.79 seconds)
Cbc0010I After 3900 nodes, 1498 on tree, 13643.509 best solution, best possible 11505.91 (2491.93 seconds)
Cbc0010I After 4000 nodes, 1532 on tree, 13643.509 best solution, best possible 11509.887 (2524.05 seconds)
Cbc0010I After 4100 nodes, 1574 on tree, 13643.509 best solution, best possible 11515.16 (2544.97 seconds)
Cbc0010I After 4200 nodes, 1609 on tree, 13643.509 best solution, best possible 11517.731 (2563.56 seconds)
Cbc0010I After 4300 nodes, 1637 on tree, 13643.509 best solution, best possible 11521.962 (2590.39 seconds)
Cbc0010I After 4400 nodes, 1672 on tree, 13643.509 best solution, best possible 11526.318 (2612.51 seconds)
Cbc0010I After 4500 nodes, 1711 on tree, 13643.509 best solution, best possible 11532.33 (2627.67 seconds)
Cbc0010I After 4600 nodes, 1750 on tree, 13643.509 best solution, best possible 11534.113 (2690.73 seconds)
Cbc0010I After 4700 nodes, 1791 on tree, 13643.509 best solution, best possible 11535.434 (2706.02 seconds)
Cbc0010I After 4800 nodes, 1826 on tree, 13643.509 best solution, best possible 11539.56 (2719.86 seconds)
Cbc0010I After 4900 nodes, 1862 on tree, 13643.509 best solution, best possible 11541.195 (2733.97 seconds)
Cbc0010I After 5000 nodes, 1900 on tree, 13643.509 best solution, best possible 11545.839 (2752.07 seconds)
Cbc0010I After 5100 nodes, 1939 on tree, 13643.509 best solution, best possible 11554.984 (2766.20 seconds)
Cbc0010I After 5200 nodes, 1973 on tree, 13643.509 best solution, best possible 11559.08 (2785.06 seconds)
Cbc0010I After 5300 nodes, 2014 on tree, 13643.509 best solution, best possible 11564.787 (2798.43 seconds)
Cbc0010I After 5400 nodes, 2055 on tree, 13643.509 best solution, best possible 11572.776 (2821.73 seconds)
Cbc0010I After 5500 nodes, 2092 on tree, 13643.509 best solution, best possible 11576.808 (2836.21 seconds)
Cbc0010I After 5600 nodes, 2125 on tree, 13643.509 best solution, best possible 11579.388 (2850.54 seconds)
Cbc0010I After 5700 nodes, 2164 on tree, 13643.509 best solution, best possible 11584.724 (2870.32 seconds)
Cbc0010I After 5800 nodes, 2198 on tree, 13643.509 best solution, best possible 11587.562 (2890.66 seconds)
Cbc0010I After 5900 nodes, 2233 on tree, 13643.509 best solution, best possible 11589.484 (2908.99 seconds)
Cbc0010I After 6000 nodes, 2274 on tree, 13643.509 best solution, best possible 11591.829 (2928.40 seconds)
Cbc0010I After 6100 nodes, 2310 on tree, 13643.509 best solution, best possible 11598.389 (2943.87 seconds)
Cbc0010I After 6200 nodes, 2341 on tree, 13643.509 best solution, best possible 11602.965 (2958.00 seconds)
Cbc0010I After 6300 nodes, 2382 on tree, 13643.509 best solution, best possible 11605.929 (2972.88 seconds)
Cbc0010I After 6400 nodes, 2418 on tree, 13643.509 best solution, best possible 11608.759 (2989.42 seconds)
Cbc0010I After 6500 nodes, 2457 on tree, 13643.509 best solution, best possible 11610.271 (3003.56 seconds)
Cbc0010I After 6600 nodes, 2495 on tree, 13643.509 best solution, best possible 11610.492 (3017.76 seconds)
Cbc0010I After 6700 nodes, 2528 on tree, 13643.509 best solution, best possible 11616.801 (3032.68 seconds)
Cbc0010I After 6800 nodes, 2562 on tree, 13643.509 best solution, best possible 11618.049 (3047.41 seconds)
Cbc0010I After 6900 nodes, 2596 on tree, 13643.509 best solution, best possible 11620.887 (3061.60 seconds)
Cbc0010I After 7000 nodes, 2635 on tree, 13643.509 best solution, best possible 11622.74 (3129.89 seconds)
Cbc0010I After 7100 nodes, 2671 on tree, 13643.509 best solution, best possible 11624.109 (3151.45 seconds)
Cbc0010I After 7200 nodes, 2714 on tree, 13643.509 best solution, best possible 11626.876 (3169.26 seconds)
Cbc0010I After 7300 nodes, 2752 on tree, 13643.509 best solution, best possible 11628.803 (3182.56 seconds)
Cbc0010I After 7400 nodes, 2792 on tree, 13643.509 best solution, best possible 11630.035 (3196.74 seconds)
Cbc0010I After 7500 nodes, 2827 on tree, 13643.509 best solution, best possible 11631.395 (3218.39 seconds)
Cbc0010I After 7600 nodes, 2863 on tree, 13643.509 best solution, best possible 11633.086 (3232.27 seconds)
Cbc0010I After 7700 nodes, 2899 on tree, 13643.509 best solution, best possible 11635.858 (3245.56 seconds)
Cbc0010I After 7800 nodes, 2934 on tree, 13643.509 best solution, best possible 11637.88 (3265.74 seconds)
Cbc0010I After 7900 nodes, 2976 on tree, 13643.509 best solution, best possible 11645.632 (3284.16 seconds)
Cbc0010I After 8000 nodes, 3009 on tree, 13643.509 best solution, best possible 11647.889 (3298.43 seconds)
Cbc0010I After 8100 nodes, 3045 on tree, 13643.509 best solution, best possible 11650.611 (3313.60 seconds)
Cbc0010I After 8200 nodes, 3083 on tree, 13643.509 best solution, best possible 11652.152 (3328.17 seconds)
Cbc0010I After 8300 nodes, 3117 on tree, 13643.509 best solution, best possible 11652.565 (3341.89 seconds)
Cbc0010I After 8400 nodes, 3161 on tree, 13643.509 best solution, best possible 11654.393 (3359.87 seconds)
Cbc0010I After 8500 nodes, 3199 on tree, 13643.509 best solution, best possible 11658.357 (3374.19 seconds)
Cbc0010I After 8600 nodes, 3235 on tree, 13643.509 best solution, best possible 11659.972 (3393.25 seconds)
Cbc0010I After 8700 nodes, 3272 on tree, 13643.509 best solution, best possible 11663.529 (3406.92 seconds)
Cbc0010I After 8800 nodes, 3307 on tree, 13643.509 best solution, best possible 11665.455 (3421.03 seconds)
Cbc0010I After 8900 nodes, 3341 on tree, 13643.509 best solution, best possible 11666.474 (3435.46 seconds)
Cbc0010I After 9000 nodes, 3378 on tree, 13643.509 best solution, best possible 11670.78 (3449.81 seconds)
Cbc0010I After 9100 nodes, 3419 on tree, 13643.509 best solution, best possible 11673.926 (3463.83 seconds)
Cbc0010I After 9200 nodes, 3460 on tree, 13643.509 best solution, best possible 11676.021 (3478.77 seconds)
Cbc0010I After 9300 nodes, 3502 on tree, 13643.509 best solution, best possible 11678.419 (3493.38 seconds)
Cbc0010I After 9400 nodes, 3542 on tree, 13643.509 best solution, best possible 11678.891 (3516.02 seconds)
Cbc0010I After 9500 nodes, 3578 on tree, 13643.509 best solution, best possible 11680.358 (3535.73 seconds)
Cbc0010I After 9600 nodes, 3616 on tree, 13643.509 best solution, best possible 11681.777 (3549.87 seconds)
Cbc0010I After 9700 nodes, 3652 on tree, 13643.509 best solution, best possible 11683.121 (3563.57 seconds)
Cbc0010I After 9800 nodes, 3686 on tree, 13643.509 best solution, best possible 11684.561 (3576.94 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 13643.509 (best possible 11684.561), took 2777639 iterations and 9872 nodes (3590.56 seconds)
Cbc0035I Maximum depth 38, 22437 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1751
Linearization cuts added in total:           1751  (separation time: 0.023327s)
Total solve time:                         3590.86s (3590.86s in branch-and-bound)
Lower bound:                              11684.6
Upper bound:                              13643.5  (gap: 16.76%)
Branch-and-bound nodes:                      9872
Stats: /tmp/jl_qMZ54H/model.nl 1275 [var]  125 [int] 1625 [con] 1136 [aux]   1751 [root]     1751 [tot] 0.023327 [sep]  3590.86 [time]  3590.86 [bb]         1.168456e+04 [lower]         1.364351e+04 [upper]    9872 [nodes]
Performance of                           FBBT:	    160.092s,    18431 runs. fix:    0.42594 shrnk:   0.416669 ubd:          0 2ubd:          0 infeas:         49
Performance of                           OBBT:	    366.481s,       12 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
