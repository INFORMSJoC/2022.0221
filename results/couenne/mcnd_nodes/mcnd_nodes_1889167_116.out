solving instance mcnd nodes c25_100_30_V_T_5 3 6 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 28960.11      167 188.77894
NLP0014I             2      INFEAS 73.703423      106 42.115217
Loaded instance "/tmp/jl_zXSDlY/model.nl"
Constraints:         4125
Variables:           3275 (125 integer)
Auxiliaries:         3306 (3 integer)

Coin0506I Presolve 4144 (-252) rows, 3276 (-3305) columns and 21486 (-3874) elements
Clp0006I 0  Obj -3923.7297 Primal inf 3284.37 (145)
Clp0006I 157  Obj -3373.2349 Primal inf 6276.1482 (264)
Clp0006I 314  Obj 1594.4817 Primal inf 3515.0671 (339)
Clp0006I 471  Obj 4821.2784 Primal inf 4758.0179 (605)
Clp0006I 628  Obj 10002.928 Primal inf 3080.7784 (466)
Clp0006I 785  Obj 12198.505 Primal inf 6789.599 (968)
Clp0006I 942  Obj 13192.257 Primal inf 701.30003 (363)
Clp0006I 991  Obj 13218.682
Clp0000I Optimal - objective value 13218.682
Clp0032I Optimal objective 13218.6819 - 991 iterations time 0.172, Presolve 0.03
Clp0000I Optimal - objective value 13218.682
NLP Heuristic: NLP0014I             3      INFEAS 12.606923       94 14.081576
no solution.
Clp0000I Optimal - objective value 13218.682
Optimality Based BT: 5 improved bounds
Probing: 12 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 13218.682 to 13218.682 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1045.52 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 1116 iterations and 5 nodes (3347.37 seconds)
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4396
Linearization cuts added in total:           4396  (separation time: 0.146745s)
Total solve time:                         3347.54s (3347.54s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         5
Stats: /tmp/jl_zXSDlY/model.nl 3275 [var]  125 [int] 4125 [con] 3306 [aux]   4396 [root]     4396 [tot] 0.146745 [sep]  3347.54 [time]  3347.55 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       5 [nodes]
Performance of                           FBBT:	   0.569127s,        7 runs. fix:    2.46154 shrnk:    5.69765 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	    369.492s,        4 runs. fix:          0 shrnk: 5.0653e-08 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1224
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
