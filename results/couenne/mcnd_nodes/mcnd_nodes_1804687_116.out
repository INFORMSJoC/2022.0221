solving instance mcnd nodes c33 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 12.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 46064.992      124 156.77282
NLP0014I             2      INFEAS 1487.9947      127 124.64041
Loaded instance "/tmp/jl_PNQ4GI/model.nl"
Constraints:        10416
Variables:           9408 (248 integer)
Auxiliaries:         9180 (0 integer)

Coin0506I Presolve 10476 (-41) rows, 9388 (-9200) columns and 63376 (-9449) elements
Clp0006I 0  Obj 0 Primal inf 4988.4821 (78) Dual inf 7.9412536e+12 (856)
Clp0006I 277  Obj 50181.66 Primal inf 1646.0272 (30) Dual inf 4.4956012e+12 (1003)
Clp0006I 554  Obj 73199.019 Primal inf 541.44257 (11) Dual inf 3.7911414e+12 (1769)
Clp0006I 832  Obj 90274.618 Dual inf 36641.491 (1613)
Clp0006I 1110  Obj 73907.989 Dual inf 120630.14 (2385)
Clp0006I 1387  Obj 67569.763 Dual inf 19415.673 (1118)
Clp0006I 1664  Obj 65052.081 Dual inf 27618.388 (1347)
Clp0006I 1941  Obj 62591.742 Dual inf 341449.94 (2943)
Clp0006I 2218  Obj 61325.02 Dual inf 78999.691 (2928)
Clp0006I 2495  Obj 58860.458 Dual inf 139048.19 (3051)
Clp0006I 2772  Obj 57675.504 Dual inf 255626.11 (2992)
Clp0006I 3049  Obj 57110.585 Dual inf 183178.02 (2853)
Clp0006I 3326  Obj 56311.555 Dual inf 162581.03 (2202)
Clp0006I 3603  Obj 55783.594 Dual inf 34383.669 (1595)
Clp0006I 3880  Obj 55213.968 Dual inf 330156.55 (2488)
Clp0006I 4157  Obj 54305.769 Dual inf 1938512.7 (3347)
Clp0006I 4434  Obj 53041.04 Dual inf 326148.86 (3770)
Clp0006I 4693  Obj 51473.827 Dual inf 589152.78 (4064)
Clp0006I 4970  Obj 51209.416 Dual inf 599807.24 (3349)
Clp0006I 5247  Obj 50862.32 Dual inf 190924.21 (2417)
Clp0006I 5512  Obj 50151.137 Dual inf 2503263 (3713)
Clp0006I 5789  Obj 49842.475 Dual inf 301874.58 (3124)
Clp0006I 6066  Obj 49510.315 Dual inf 134075.84 (2310)
Clp0006I 6343  Obj 49282.845 Dual inf 185778.99 (3189)
Clp0006I 6620  Obj 49058.104 Dual inf 49773.665 (2633)
Clp0006I 6893  Obj 48797.285 Dual inf 37545.033 (2105)
Clp0006I 7170  Obj 48631.609 Dual inf 82145.5 (1940)
Clp0006I 7447  Obj 48271.062 Dual inf 260657.24 (3161)
Clp0006I 7718  Obj 47158.038 Dual inf 182906.9 (2522)
Clp0006I 7995  Obj 46995.896 Dual inf 578119.8 (2800)
Clp0006I 8237  Obj 46613.737 Dual inf 65689.001 (3040)
Clp0006I 8514  Obj 46400.919 Dual inf 24668.953 (1731)
Clp0006I 8791  Obj 46223.06 Dual inf 11604.024 (1067)
Clp0006I 9068  Obj 46151.093 Dual inf 19390.314 (1350)
Clp0006I 9345  Obj 46026.143 Dual inf 4821.798 (668)
Clp0006I 9622  Obj 45937.601 Dual inf 11966.182 (867)
Clp0006I 9899  Obj 45870.139 Dual inf 69602.085 (2113)
Clp0006I 10176  Obj 45768.45 Dual inf 535.95312 (237)
Clp0006I 10406  Obj 45736.25
Clp0000I Optimal - objective value 45736.25
Clp0000I Optimal - objective value 45736.25
Clp0032I Optimal objective 45736.25002 - 10406 iterations time 7.702, Presolve 0.06
Clp0000I Optimal - objective value 45736.25
NLP Heuristic: NLP0014I             3      INFEAS 605       79 142.44077
no solution.
Clp0000I Optimal - objective value 45736.25
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 45736.25 to 45736.25 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 45736.25), took 0 iterations and 0 nodes (3201.02 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10517
Linearization cuts added in total:          10517  (separation time: 0.974652s)
Total solve time:                         3208.73s (3208.73s in branch-and-bound)
Lower bound:                              45736.3
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_PNQ4GI/model.nl 9408 [var]  248 [int] 10416 [con] 9180 [aux]  10517 [root]    10517 [tot] 0.974652 [sep]  3208.73 [time]  3208.75 [bb]         4.573625e+04 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	    1.82811s,        4 runs. fix:          0 shrnk: 6.40685e-16 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1439.19s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_nodes/script.jl:18
