solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 252.7     1197 52.302227
NLP0014I             2      FAILED 5194.9858     3000 103.21148
NLP0014I *           1      INFEAS 0.99999999       35 0.734075   resolve robustness
Loaded instance "/tmp/jl_trJhTw/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2499.3244 (1640)
Clp0006I 277  Obj 0 Primal inf 2681.5793 (1680)
Clp0006I 554  Obj 0 Primal inf 2607.4932 (1680)
Clp0006I 831  Obj -7.4573326e-17 Primal inf 2589.4133 (1711)
Clp0006I 1108  Obj 5.8234856e-16 Primal inf 4301.301 (1940)
Clp0006I 1385  Obj 9.3039577e-16 Primal inf 5208.4607 (1905)
Clp0006I 1662  Obj 1.0315618e-15 Primal inf 5723.2669 (1862)
Clp0006I 1939  Obj 1.078051e-15 Primal inf 3629.3364 (1614)
Clp0006I 2216  Obj 1.067424e-15 Primal inf 2960.9774 (1056)
Clp0006I 2493  Obj 4.2708231e-16 Primal inf 65.662687 (322)
Clp0006I 2770  Obj 5.7147101e-16 Primal inf 80.268693 (304)
Clp0006I 3047  Obj 7.9066064 Primal inf 94.9169 (280)
Clp0006I 3324  Obj 12.133506 Primal inf 147.3618 (296)
Clp0006I 3601  Obj 16.647519 Primal inf 113.08384 (194)
Clp0006I 3673  Obj 22.515833
Clp0000I Optimal - objective value 22.515833
Clp0032I Optimal objective 22.51583284 - 3673 iterations time 0.202, Presolve 0.03
Clp0000I Optimal - objective value 22.515833
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 22.515833
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 670 added rows had average density of 2
Cbc0013I At root node, 670 cuts changed objective from 22.515833 to 56.380838 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9672 row cuts average 2.0 elements, 4440 column cuts (4952 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (88.59 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.2787486573e+02 (662.292 seconds)
Cbc0012I Integer solution of 627.87487 found by Couenne Rounding NLP after 7230 iterations and 3 nodes (485.28 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 627.87487 best solution, best possible 57.292988 (911.25 seconds)
Cbc0010I After 200 nodes, 100 on tree, 627.87487 best solution, best possible 57.292988 (949.80 seconds)
Cbc0010I After 300 nodes, 150 on tree, 627.87487 best solution, best possible 57.292988 (976.55 seconds)
Cbc0010I After 400 nodes, 200 on tree, 627.87487 best solution, best possible 57.292988 (994.74 seconds)
Cbc0010I After 500 nodes, 250 on tree, 627.87487 best solution, best possible 57.292988 (1012.49 seconds)
Cbc0010I After 600 nodes, 300 on tree, 627.87487 best solution, best possible 57.292988 (1029.02 seconds)
Cbc0010I After 700 nodes, 350 on tree, 627.87487 best solution, best possible 57.292988 (1045.04 seconds)
Cbc0010I After 800 nodes, 400 on tree, 627.87487 best solution, best possible 57.292988 (1058.80 seconds)
Cbc0010I After 900 nodes, 450 on tree, 627.87487 best solution, best possible 57.292988 (1072.27 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 627.87487 best solution, best possible 57.292988 (1085.84 seconds)
Couenne: new cutoff value 5.3270047622e+02 (1276.26 seconds)
Cbc0004I Integer solution of 532.70048 found after 180963 iterations and 1099 nodes (1099.27 seconds)
Cbc0010I After 1100 nodes, 208 on tree, 532.70048 best solution, best possible 57.292988 (1257.71 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.8779493704e+02 (1581.01 seconds)
Cbc0012I Integer solution of 487.79494 found by Couenne Rounding NLP after 184554 iterations and 1102 nodes (1403.99 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1200 nodes, 210 on tree, 487.79494 best solution, best possible 61.218143 (1607.98 seconds)
Cbc0010I After 1300 nodes, 260 on tree, 487.79494 best solution, best possible 61.218143 (1639.40 seconds)
Cbc0010I After 1400 nodes, 310 on tree, 487.79494 best solution, best possible 61.218143 (1659.48 seconds)
Cbc0010I After 1500 nodes, 360 on tree, 487.79494 best solution, best possible 61.218143 (1677.14 seconds)
Cbc0010I After 1600 nodes, 410 on tree, 487.79494 best solution, best possible 61.218143 (1693.75 seconds)
Cbc0010I After 1700 nodes, 460 on tree, 487.79494 best solution, best possible 61.218143 (1708.76 seconds)
Cbc0010I After 1800 nodes, 510 on tree, 487.79494 best solution, best possible 61.218143 (1724.58 seconds)
Cbc0010I After 1900 nodes, 560 on tree, 487.79494 best solution, best possible 61.218143 (1739.73 seconds)
Cbc0010I After 2000 nodes, 610 on tree, 487.79494 best solution, best possible 61.218143 (1753.13 seconds)
Cbc0010I After 2100 nodes, 660 on tree, 487.79494 best solution, best possible 61.218143 (1766.33 seconds)
Cbc0010I After 2200 nodes, 710 on tree, 487.79494 best solution, best possible 61.218143 (1779.52 seconds)
Cbc0010I After 2300 nodes, 760 on tree, 487.79494 best solution, best possible 61.218143 (1792.82 seconds)
Cbc0010I After 2400 nodes, 810 on tree, 487.79494 best solution, best possible 61.218143 (1805.97 seconds)
Couenne: new cutoff value 2.8160671163e+02 (1983.23 seconds)
Cbc0004I Integer solution of 281.60671 found after 352254 iterations and 2402 nodes (1806.23 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2500 nodes, 340 on tree, 281.60671 best solution, best possible 61.680554 (2406.59 seconds)
Cbc0010I After 2600 nodes, 390 on tree, 281.60671 best solution, best possible 61.680554 (2441.35 seconds)
Cbc0010I After 2700 nodes, 434 on tree, 281.60671 best solution, best possible 61.688326 (2627.28 seconds)
Cbc0010I After 2800 nodes, 484 on tree, 281.60671 best solution, best possible 61.688326 (2663.73 seconds)
Cbc0010I After 2900 nodes, 523 on tree, 281.60671 best solution, best possible 61.707609 (2701.13 seconds)
Cbc0010I After 3000 nodes, 571 on tree, 281.60671 best solution, best possible 61.707609 (2724.66 seconds)
Cbc0010I After 3100 nodes, 599 on tree, 281.60671 best solution, best possible 61.711847 (2749.45 seconds)
Cbc0010I After 3200 nodes, 649 on tree, 281.60671 best solution, best possible 61.711847 (2788.08 seconds)
Cbc0010I After 3300 nodes, 695 on tree, 281.60671 best solution, best possible 61.719378 (2811.04 seconds)
Cbc0010I After 3400 nodes, 745 on tree, 281.60671 best solution, best possible 61.719378 (2852.18 seconds)
Cbc0010I After 3500 nodes, 795 on tree, 281.60671 best solution, best possible 61.719378 (2878.39 seconds)
Cbc0010I After 3600 nodes, 842 on tree, 281.60671 best solution, best possible 61.733477 (2898.20 seconds)
Cbc0010I After 3700 nodes, 892 on tree, 281.60671 best solution, best possible 61.733477 (2932.52 seconds)
Cbc0010I After 3800 nodes, 933 on tree, 281.60671 best solution, best possible 61.733477 (2954.74 seconds)
Cbc0010I After 3900 nodes, 964 on tree, 281.60671 best solution, best possible 61.733477 (2973.83 seconds)
Cbc0010I After 4000 nodes, 999 on tree, 281.60671 best solution, best possible 61.753438 (3008.73 seconds)
Cbc0010I After 4100 nodes, 1049 on tree, 281.60671 best solution, best possible 61.753438 (3034.51 seconds)
Cbc0010I After 4200 nodes, 1072 on tree, 281.60671 best solution, best possible 61.806138 (3057.69 seconds)
Cbc0010I After 4300 nodes, 1122 on tree, 281.60671 best solution, best possible 61.806138 (3089.11 seconds)
Cbc0010I After 4400 nodes, 1169 on tree, 281.60671 best solution, best possible 61.806339 (3164.56 seconds)
Cbc0010I After 4500 nodes, 1219 on tree, 281.60671 best solution, best possible 61.806339 (3201.84 seconds)
Cbc0010I After 4600 nodes, 1260 on tree, 281.60671 best solution, best possible 61.806339 (3225.46 seconds)
Cbc0010I After 4700 nodes, 1292 on tree, 281.60671 best solution, best possible 61.806339 (3243.40 seconds)
Cbc0010I After 4800 nodes, 1317 on tree, 281.60671 best solution, best possible 61.806339 (3258.21 seconds)
Cbc0010I After 4900 nodes, 1337 on tree, 281.60671 best solution, best possible 61.806339 (3269.56 seconds)
Cbc0010I After 5000 nodes, 1384 on tree, 281.60671 best solution, best possible 61.806339 (3284.18 seconds)
Cbc0010I After 5100 nodes, 1429 on tree, 281.60671 best solution, best possible 61.806339 (3299.63 seconds)
Cbc0010I After 5200 nodes, 1477 on tree, 281.60671 best solution, best possible 61.806339 (3319.49 seconds)
Cbc0010I After 5300 nodes, 1527 on tree, 281.60671 best solution, best possible 61.806339 (3340.13 seconds)
Cbc0010I After 5400 nodes, 1577 on tree, 281.60671 best solution, best possible 61.806339 (3360.87 seconds)
Cbc0010I After 5500 nodes, 1627 on tree, 281.60671 best solution, best possible 61.806339 (3381.43 seconds)
Couenne: new cutoff value 2.8033924102e+02 (3574.08 seconds)
Cbc0004I Integer solution of 280.33924 found after 1511734 iterations and 5579 nodes (3397.08 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 280.33924 (best possible 61.806339), took 1519925 iterations and 5593 nodes (3423.51 seconds)
Cbc0035I Maximum depth 653, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.059409s)
Total solve time:                         3423.78s (3423.78s in branch-and-bound)
Lower bound:                              61.8063
Upper bound:                              280.339  (gap: 347.95%)
Branch-and-bound nodes:                      5593
Stats: /tmp/jl_trJhTw/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.059409 [sep]  3423.78 [time]  3423.79 [bb]         6.180634e+01 [lower]         2.803392e+02 [upper]    5593 [nodes]
Performance of                           FBBT:	    184.172s,     8922 runs. fix:          0 shrnk: 0.00163362 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    14.9034s,       12 runs. fix:   0.228571 shrnk:     2.1177 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt
