solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-6.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 10.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 95.472138       42 27.137291
NLP0014I             2      INFEAS 0.99999999       33 1.543159
Loaded instance "/tmp/jl_2H5rMO/model.nl"
Constraints:         5460
Variables:           5430 (1830 integer)
Auxiliaries:         1861 (0 integer)

Coin0506I Presolve 12600 (-1861) rows, 5370 (-1921) columns and 26880 (-5611) elements
Clp0006I 0  Obj 0 Primal inf 59.99994 (60) Dual inf 1.8e+13 (1800)
Clp0006I 288  Obj 128.33343 Primal inf 55.124936 (64) Dual inf 1.806e+13 (1800)
Clp0006I 576  Obj 257.40586 Primal inf 46.874924 (76) Dual inf 1.5708136e+08 (1800)
Clp0006I 864  Obj 372.90142 Primal inf 41.374916 (84) Dual inf 1.5742765e+08 (1800)
Clp0006I 1152  Obj 462.93138 Primal inf 37.24991 (90) Dual inf 1.5768736e+08 (1800)
Clp0006I 1440  Obj 633.98115 Primal inf 29.687399 (101) Dual inf 1.5816348e+08 (1800)
Clp0006I 1728  Obj 768.77347 Primal inf 22.812389 (111) Dual inf 1.5859639e+08 (1800)
Clp0006I 2016  Obj 1093.6429 Primal inf 3.499944 (56) Dual inf 4896800.5 (596)
Clp0006I 2304  Obj 957.98101 Dual inf 30079.464 (670)
Clp0006I 2506  Obj 608.3667 Dual inf 16546.273 (344)
Clp0006I 2794  Obj 384.76189 Dual inf 27704.944 (283)
Clp0006I 3055  Obj 305.38925 Dual inf 28223.34 (334)
Clp0006I 3293  Obj 131.29821 Dual inf 76647.406 (421)
Clp0006I 3540  Obj 40.259907 Dual inf 3311.7594 (104)
Clp0006I 3828  Obj 22.249997 Dual inf 826.01716 (42)
Clp0006I 4116  Obj 22.249997 Dual inf 802.03465 (31)
Clp0006I 4393  Obj 9.4999954
Clp0000I Optimal - objective value 9.4999954
Clp0000I Optimal - objective value 9.5
Clp0032I Optimal objective 9.5 - 4393 iterations time 0.732, Presolve 0.04
Clp0000I Optimal - objective value 9.5
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 9.5
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2121 added rows had average density of 2
Cbc0013I At root node, 2121 cuts changed objective from 9.5 to 85.414472 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 30499 row cuts average 2.0 elements, 4200 column cuts (5714 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (74.10 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.8039044243e+02 (131.274 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 86.943127 (900.35 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 86.943127 (962.30 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 86.943127 (1011.69 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 86.943127 (1048.18 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 86.943127 (1079.47 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 86.943127 (1106.86 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 86.943127 (1130.12 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 86.943127 (1151.41 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 86.943127 (1171.89 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 86.943127 (1191.46 seconds)
Couenne: new cutoff value 4.7152502596e+02 (1259.98 seconds)
Cbc0004I Integer solution of 471.52503 found after 725691 iterations and 1070 nodes (1206.13 seconds)
Cbc0010I After 1100 nodes, 473 on tree, 471.52503 best solution, best possible 87.172976 (1235.64 seconds)
Cbc0010I After 1200 nodes, 523 on tree, 471.52503 best solution, best possible 87.172976 (1291.08 seconds)
Cbc0010I After 1300 nodes, 573 on tree, 471.52503 best solution, best possible 87.172976 (1340.52 seconds)
Cbc0010I After 1400 nodes, 623 on tree, 471.52503 best solution, best possible 87.172976 (1387.20 seconds)
Cbc0010I After 1500 nodes, 673 on tree, 471.52503 best solution, best possible 87.172976 (1428.15 seconds)
Cbc0010I After 1600 nodes, 723 on tree, 471.52503 best solution, best possible 87.172976 (1468.22 seconds)
Cbc0010I After 1700 nodes, 773 on tree, 471.52503 best solution, best possible 87.172976 (1502.42 seconds)
Cbc0010I After 1800 nodes, 823 on tree, 471.52503 best solution, best possible 87.172976 (1534.52 seconds)
Cbc0010I After 1900 nodes, 873 on tree, 471.52503 best solution, best possible 87.172976 (1563.99 seconds)
Cbc0010I After 2000 nodes, 923 on tree, 471.52503 best solution, best possible 87.172976 (1593.06 seconds)
Cbc0010I After 2100 nodes, 973 on tree, 471.52503 best solution, best possible 87.172976 (1619.40 seconds)
Cbc0010I After 2200 nodes, 1023 on tree, 471.52503 best solution, best possible 87.172976 (1642.88 seconds)
Cbc0010I After 2300 nodes, 1073 on tree, 471.52503 best solution, best possible 87.172976 (1665.02 seconds)
Cbc0010I After 2400 nodes, 1123 on tree, 471.52503 best solution, best possible 87.172976 (1687.56 seconds)
Couenne: new cutoff value 3.4589460421e+02 (1753.67 seconds)
Cbc0004I Integer solution of 345.8946 found after 1602991 iterations and 2459 nodes (1699.83 seconds)
Cbc0010I After 2500 nodes, 862 on tree, 345.8946 best solution, best possible 87.198894 (1728.33 seconds)
Cbc0010I After 2600 nodes, 912 on tree, 345.8946 best solution, best possible 87.198894 (1783.28 seconds)
Cbc0010I After 2700 nodes, 962 on tree, 345.8946 best solution, best possible 87.198894 (1834.85 seconds)
Cbc0010I After 2800 nodes, 1012 on tree, 345.8946 best solution, best possible 87.198894 (1883.85 seconds)
Cbc0010I After 2900 nodes, 1062 on tree, 345.8946 best solution, best possible 87.198894 (1925.43 seconds)
Cbc0010I After 3000 nodes, 1112 on tree, 345.8946 best solution, best possible 87.198894 (1965.33 seconds)
Cbc0010I After 3100 nodes, 1162 on tree, 345.8946 best solution, best possible 87.198894 (1998.51 seconds)
Cbc0010I After 3200 nodes, 1212 on tree, 345.8946 best solution, best possible 87.198894 (2028.28 seconds)
Cbc0010I After 3300 nodes, 1260 on tree, 345.8946 best solution, best possible 87.198894 (2054.82 seconds)
Cbc0010I After 3400 nodes, 1285 on tree, 345.8946 best solution, best possible 87.198894 (2074.62 seconds)
Cbc0010I After 3500 nodes, 1294 on tree, 345.8946 best solution, best possible 87.198894 (2090.19 seconds)
Cbc0010I After 3600 nodes, 1316 on tree, 345.8946 best solution, best possible 87.509979 (2108.43 seconds)
Cbc0010I After 3700 nodes, 1366 on tree, 345.8946 best solution, best possible 87.509979 (2166.55 seconds)
Cbc0010I After 3800 nodes, 1416 on tree, 345.8946 best solution, best possible 87.509979 (2218.48 seconds)
Cbc0010I After 3900 nodes, 1466 on tree, 345.8946 best solution, best possible 87.509979 (2258.52 seconds)
Cbc0010I After 4000 nodes, 1516 on tree, 345.8946 best solution, best possible 87.509979 (2304.59 seconds)
Cbc0010I After 4100 nodes, 1566 on tree, 345.8946 best solution, best possible 87.509979 (2341.35 seconds)
Cbc0010I After 4200 nodes, 1616 on tree, 345.8946 best solution, best possible 87.509979 (2375.78 seconds)
Cbc0010I After 4300 nodes, 1666 on tree, 345.8946 best solution, best possible 87.509979 (2405.95 seconds)
Cbc0010I After 4400 nodes, 1714 on tree, 345.8946 best solution, best possible 87.509979 (2432.56 seconds)
Cbc0010I After 4500 nodes, 1736 on tree, 345.8946 best solution, best possible 87.509979 (2450.46 seconds)
Cbc0010I After 4600 nodes, 1750 on tree, 345.8946 best solution, best possible 87.509979 (2465.59 seconds)
Cbc0010I After 4700 nodes, 1766 on tree, 345.8946 best solution, best possible 87.509979 (2480.81 seconds)
Cbc0010I After 4800 nodes, 1813 on tree, 345.8946 best solution, best possible 87.527179 (2537.99 seconds)
Cbc0010I After 4900 nodes, 1863 on tree, 345.8946 best solution, best possible 87.527179 (2587.37 seconds)
Cbc0010I After 5000 nodes, 1913 on tree, 345.8946 best solution, best possible 87.527179 (2628.52 seconds)
Cbc0010I After 5100 nodes, 1963 on tree, 345.8946 best solution, best possible 87.527179 (2673.97 seconds)
Cbc0010I After 5200 nodes, 2013 on tree, 345.8946 best solution, best possible 87.527179 (2714.96 seconds)
Cbc0010I After 5300 nodes, 2063 on tree, 345.8946 best solution, best possible 87.527179 (2749.16 seconds)
Cbc0010I After 5400 nodes, 2113 on tree, 345.8946 best solution, best possible 87.527179 (2776.73 seconds)
Cbc0010I After 5500 nodes, 2161 on tree, 345.8946 best solution, best possible 87.527179 (2803.25 seconds)
Cbc0010I After 5600 nodes, 2174 on tree, 345.8946 best solution, best possible 87.527179 (2818.64 seconds)
Cbc0010I After 5700 nodes, 2188 on tree, 345.8946 best solution, best possible 87.527179 (2834.06 seconds)
Cbc0010I After 5800 nodes, 2232 on tree, 345.8946 best solution, best possible 87.676104 (2887.65 seconds)
Cbc0010I After 5900 nodes, 2282 on tree, 345.8946 best solution, best possible 87.676104 (2945.25 seconds)
Cbc0010I After 6000 nodes, 2332 on tree, 345.8946 best solution, best possible 87.676104 (2993.10 seconds)
Cbc0010I After 6100 nodes, 2382 on tree, 345.8946 best solution, best possible 87.676104 (3033.05 seconds)
Cbc0010I After 6200 nodes, 2432 on tree, 345.8946 best solution, best possible 87.676104 (3074.42 seconds)
Cbc0010I After 6300 nodes, 2482 on tree, 345.8946 best solution, best possible 87.676104 (3108.58 seconds)
Cbc0010I After 6400 nodes, 2532 on tree, 345.8946 best solution, best possible 87.676104 (3137.65 seconds)
Cbc0010I After 6500 nodes, 2565 on tree, 345.8946 best solution, best possible 87.676104 (3161.76 seconds)
Cbc0010I After 6600 nodes, 2576 on tree, 345.8946 best solution, best possible 87.676104 (3177.30 seconds)
Cbc0010I After 6700 nodes, 2624 on tree, 345.8946 best solution, best possible 87.703085 (3227.37 seconds)
Cbc0010I After 6800 nodes, 2674 on tree, 345.8946 best solution, best possible 87.703085 (3281.33 seconds)
Cbc0010I After 6900 nodes, 2724 on tree, 345.8946 best solution, best possible 87.703085 (3325.94 seconds)
Cbc0010I After 7000 nodes, 2774 on tree, 345.8946 best solution, best possible 87.703085 (3368.56 seconds)
Cbc0010I After 7100 nodes, 2824 on tree, 345.8946 best solution, best possible 87.703085 (3401.52 seconds)
Cbc0010I After 7200 nodes, 2874 on tree, 345.8946 best solution, best possible 87.703085 (3433.60 seconds)
Cbc0010I After 7300 nodes, 2924 on tree, 345.8946 best solution, best possible 87.703085 (3463.61 seconds)
Cbc0010I After 7400 nodes, 2974 on tree, 345.8946 best solution, best possible 87.703085 (3491.58 seconds)
Cbc0010I After 7500 nodes, 3001 on tree, 345.8946 best solution, best possible 87.703085 (3511.83 seconds)
Cbc0010I After 7600 nodes, 3016 on tree, 345.8946 best solution, best possible 87.709139 (3534.18 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 345.8946 (best possible 87.709139), took 5332352 iterations and 7623 nodes (3558.41 seconds)
Cbc0035I Maximum depth 699, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      14461
Linearization cuts added in total:          14461  (separation time: 0.040898s)
Total solve time:                          3559.3s (3559.3s in branch-and-bound)
Lower bound:                              87.7091
Upper bound:                              345.895  (gap: 291.05%)
Branch-and-bound nodes:                      7623
Stats: /tmp/jl_2H5rMO/model.nl 5430 [var] 1830 [int] 5460 [con] 1861 [aux]  14461 [root]    14461 [tot] 0.040898 [sep]   3559.3 [time]  3559.32 [bb]         8.770914e+01 [lower]         3.458946e+02 [upper]    7623 [nodes]
Performance of                           FBBT:	    112.068s,    13870 runs. fix:          0 shrnk: 0.000494138 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    23.8816s,        8 runs. fix:   0.369318 shrnk:    122.715 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-6.txt
