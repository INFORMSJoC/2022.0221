solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-6.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.3777738696e+03 (63.5447 seconds)
63.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 434.54745      293 246.54164
NLP0014I             2      INFEAS 0.026001736       43 3.834529
Loaded instance "/tmp/jl_Jfpynu/model.nl"
Constraints:         9680
Variables:           9640 (3240 integer)
Auxiliaries:         6480 (0 integer)

Coin0506I Presolve 41624 (-57) rows, 15984 (-136) columns and 99070 (-250) elements
Clp0006I 0  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 433  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 866  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 1299  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 1732  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 2165  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 2598  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0006I 3031  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (3201)
Clp0029I End of values pass after 3201 iterations
Clp0006I 3201  Obj 0 Primal inf 86.297486 (80) Dual inf 4.288071e+13 (6400)
Clp0006I 3634  Obj 253.15428 Primal inf 56.880556 (240) Dual inf 4.1315125e+13 (6318)
Clp0006I 4067  Obj 542.3626 Primal inf 28.436341 (221) Dual inf 2.9056182e+09 (5142)
Clp0006I 4500  Obj 685.41793 Primal inf 1.6033014 (21) Dual inf 26221393 (3719)
Clp0006I 4933  Obj 585.79573 Dual inf 171444.21 (3658)
Clp0006I 5366  Obj 585.79573 Dual inf 176634.21 (3631)
Clp0006I 5799  Obj 585.79573 Dual inf 181908.24 (3600)
Clp0006I 6232  Obj 545.6349 Dual inf 188629.47 (3576)
Clp0006I 6665  Obj 497.78144 Dual inf 186087.12 (3436)
Clp0006I 7098  Obj -105.44027 Dual inf 194182.96 (2992)
Clp0006I 7531  Obj -916.13434 Dual inf 155710.45 (2686)
Clp0006I 7964  Obj -1598.1126 Dual inf 161812.79 (2562)
Clp0006I 8397  Obj -2372.5107 Dual inf 122762.01 (2423)
Clp0006I 8830  Obj -2992.7847 Dual inf 152027.58 (2108)
Clp0006I 9263  Obj -3591.8004 Dual inf 156032.33 (1658)
Clp0006I 9696  Obj -3957.3049 Dual inf 102807.98 (1645)
Clp0006I 10129  Obj -4538.9362 Dual inf 187445.12 (1766)
Clp0006I 10562  Obj -4776.1345 Dual inf 58777.52 (1425)
Clp0006I 10995  Obj -4850.1446 Dual inf 24369.155 (868)
Clp0006I 11428  Obj -5009.3183 Dual inf 8052.2855 (446)
Clp0006I 11861  Obj -5033.7422 Dual inf 110.17867 (78)
Clp0006I 11933  Obj -5035.4859
Clp0000I Optimal - objective value -5035.4859
Clp0032I Optimal objective -5035.48592 - 11933 iterations time 1.962
Clp0000I Optimal - objective value -5035.4859
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -5035.4859
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 953 added rows had average density of 2
Cbc0013I At root node, 953 cuts changed objective from -5035.4859 to -4829.2078 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 7449 row cuts average 2.0 elements, 102804 column cuts (103727 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (327.91 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -4819.4596 (2696.72 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -4819.4596 (2754.05 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -4819.4596 (2811.55 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -4819.4596 (2869.18 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -4819.4596 (2928.99 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -4819.4596 (2990.35 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -4819.4596 (3054.91 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -4819.4596 (3119.88 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -4819.4596 (3184.21 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -4819.4596 (3249.59 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -4819.4596), took 504538 iterations and 1037 nodes (3284.05 seconds)
Cbc0035I Maximum depth 518, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      41681
Linearization cuts added in total:          41681  (separation time: 0.105856s)
Total solve time:                         3286.04s (3286.04s in branch-and-bound)
Lower bound:                             -4819.46
Upper bound:                              2377.77  (gap: 149.31%)
Branch-and-bound nodes:                      1037
Stats: /tmp/jl_Jfpynu/model.nl 9640 [var] 3240 [int] 9680 [con] 6480 [aux]  41681 [root]    41681 [tot] 0.105856 [sep]  3286.04 [time]  3286.08 [bb]        -4.819460e+03 [lower]         2.377774e+03 [upper]    1037 [nodes]
Performance of                           FBBT:	    33.1083s,     2067 runs. fix:          0 shrnk:    815.717 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    28.7311s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-6.txt
