solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 299.68913       71 3.869323
NLP0014I             2      INFEAS 0.99999999       34 0.683396
Loaded instance "/tmp/jl_UKe25c/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2370.2641 (1640)
Clp0006I 277  Obj 0 Primal inf 2389.5981 (1680)
Clp0006I 554  Obj 0 Primal inf 2110.4265 (1680)
Clp0006I 831  Obj 9.0895128e-17 Primal inf 2017.1785 (1697)
Clp0006I 1108  Obj 1.0626468e-15 Primal inf 3336.0136 (1788)
Clp0006I 1385  Obj 1.9566545e-15 Primal inf 4543.4051 (1883)
Clp0006I 1662  Obj 2.9495535e-15 Primal inf 5820.4369 (1970)
Clp0006I 1939  Obj 1.4928879e-15 Primal inf 6346.3079 (2007)
Clp0006I 2216  Obj 1.8383514e-15 Primal inf 6590.8021 (1976)
Clp0006I 2493  Obj 2.1102178e-15 Primal inf 3016.9649 (1708)
Clp0006I 2770  Obj 4.7881957e-16 Primal inf 201.24498 (640)
Clp0006I 3047  Obj 4.3145186e-16 Primal inf 56.973898 (443)
Clp0006I 3324  Obj 4.4263 Primal inf 63.815442 (345)
Clp0006I 3601  Obj 6.8393213 Primal inf 76.932096 (252)
Clp0006I 3878  Obj 10.72194 Primal inf 143.00111 (134)
Clp0006I 3986  Obj 17.908819
Clp0000I Optimal - objective value 17.908819
Clp0032I Optimal objective 17.90881896 - 3986 iterations time 0.252, Presolve 0.03
Clp0000I Optimal - objective value 17.908819
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 17.908819
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1031 added rows had average density of 2
Cbc0013I At root node, 1031 cuts changed objective from 17.908819 to 82.62614 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 13575 row cuts average 2.0 elements, 480 column cuts (1369 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (79.55 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 7.6745453928e+02 (339.34 seconds)
Cbc0012I Integer solution of 767.45454 found by Couenne Rounding NLP after 11383 iterations and 2 nodes (314.93 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 767.45454 best solution, best possible 85.948933 (967.67 seconds)
Cbc0010I After 200 nodes, 100 on tree, 767.45454 best solution, best possible 85.948933 (1001.25 seconds)
Cbc0010I After 300 nodes, 150 on tree, 767.45454 best solution, best possible 85.948933 (1025.08 seconds)
Cbc0010I After 400 nodes, 200 on tree, 767.45454 best solution, best possible 85.948933 (1042.47 seconds)
Cbc0010I After 500 nodes, 250 on tree, 767.45454 best solution, best possible 85.948933 (1055.15 seconds)
Cbc0010I After 600 nodes, 300 on tree, 767.45454 best solution, best possible 85.948933 (1074.69 seconds)
Cbc0010I After 700 nodes, 350 on tree, 767.45454 best solution, best possible 85.948933 (1093.94 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.4937065111e+02 (1329.01 seconds)
Cbc0012I Integer solution of 749.37065 found by Couenne Rounding NLP after 273668 iterations and 768 nodes (1304.61 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 391 on tree, 749.37065 best solution, best possible 86.17993 (1546.26 seconds)
Cbc0010I After 900 nodes, 441 on tree, 749.37065 best solution, best possible 86.17993 (1578.51 seconds)
Cbc0010I After 1000 nodes, 491 on tree, 749.37065 best solution, best possible 86.17993 (1609.24 seconds)
Cbc0010I After 1100 nodes, 541 on tree, 749.37065 best solution, best possible 86.17993 (1629.28 seconds)
Cbc0010I After 1200 nodes, 591 on tree, 749.37065 best solution, best possible 86.17993 (1645.19 seconds)
Cbc0010I After 1300 nodes, 641 on tree, 749.37065 best solution, best possible 86.17993 (1663.36 seconds)
Cbc0010I After 1400 nodes, 691 on tree, 749.37065 best solution, best possible 86.17993 (1681.25 seconds)
Cbc0010I After 1500 nodes, 741 on tree, 749.37065 best solution, best possible 86.17993 (1699.28 seconds)
Cbc0010I After 1600 nodes, 791 on tree, 749.37065 best solution, best possible 86.17993 (1716.14 seconds)
Cbc0010I After 1700 nodes, 841 on tree, 749.37065 best solution, best possible 86.17993 (1731.70 seconds)
Cbc0010I After 1800 nodes, 891 on tree, 749.37065 best solution, best possible 86.17993 (1746.50 seconds)
Cbc0010I After 1900 nodes, 941 on tree, 749.37065 best solution, best possible 86.17993 (1760.95 seconds)
Cbc0010I After 2000 nodes, 991 on tree, 749.37065 best solution, best possible 86.17993 (1774.72 seconds)
Cbc0010I After 2100 nodes, 1040 on tree, 749.37065 best solution, best possible 86.17993 (1788.18 seconds)
Cbc0010I After 2200 nodes, 1088 on tree, 749.37065 best solution, best possible 86.17993 (1801.34 seconds)
Cbc0010I After 2300 nodes, 1138 on tree, 749.37065 best solution, best possible 86.17993 (1814.72 seconds)
Cbc0010I After 2400 nodes, 1188 on tree, 749.37065 best solution, best possible 86.17993 (1828.17 seconds)
Cbc0010I After 2500 nodes, 1238 on tree, 749.37065 best solution, best possible 86.17993 (1841.65 seconds)
Cbc0010I After 2600 nodes, 1286 on tree, 749.37065 best solution, best possible 86.17993 (1855.11 seconds)
Cbc0010I After 2700 nodes, 1336 on tree, 749.37065 best solution, best possible 86.17993 (1868.51 seconds)
Cbc0010I After 2800 nodes, 1386 on tree, 749.37065 best solution, best possible 86.17993 (1881.74 seconds)
Cbc0010I After 2900 nodes, 1436 on tree, 749.37065 best solution, best possible 86.17993 (1895.08 seconds)
Cbc0010I After 3000 nodes, 1486 on tree, 749.37065 best solution, best possible 86.17993 (1908.48 seconds)
Cbc0010I After 3100 nodes, 1534 on tree, 749.37065 best solution, best possible 86.17993 (1921.91 seconds)
Cbc0010I After 3200 nodes, 1584 on tree, 749.37065 best solution, best possible 86.17993 (1935.42 seconds)
Cbc0010I After 3300 nodes, 1634 on tree, 749.37065 best solution, best possible 86.17993 (1949.06 seconds)
Cbc0010I After 3400 nodes, 1684 on tree, 749.37065 best solution, best possible 86.17993 (1962.90 seconds)
Cbc0010I After 3500 nodes, 1734 on tree, 749.37065 best solution, best possible 86.17993 (1977.07 seconds)
Cbc0010I After 3600 nodes, 1784 on tree, 749.37065 best solution, best possible 86.17993 (1991.33 seconds)
Cbc0010I After 3700 nodes, 1834 on tree, 749.37065 best solution, best possible 86.17993 (2004.99 seconds)
Cbc0010I After 3800 nodes, 1884 on tree, 749.37065 best solution, best possible 86.17993 (2018.95 seconds)
Cbc0010I After 3900 nodes, 1932 on tree, 749.37065 best solution, best possible 86.17993 (2032.24 seconds)
Cbc0010I After 4000 nodes, 1982 on tree, 749.37065 best solution, best possible 86.17993 (2044.60 seconds)
Cbc0010I After 4100 nodes, 2032 on tree, 749.37065 best solution, best possible 86.17993 (2056.93 seconds)
Cbc0010I After 4200 nodes, 2082 on tree, 749.37065 best solution, best possible 86.17993 (2069.07 seconds)
Cbc0010I After 4300 nodes, 2132 on tree, 749.37065 best solution, best possible 86.17993 (2081.29 seconds)
Cbc0010I After 4400 nodes, 2182 on tree, 749.37065 best solution, best possible 86.17993 (2093.55 seconds)
Cbc0010I After 4500 nodes, 2232 on tree, 749.37065 best solution, best possible 86.17993 (2105.80 seconds)
Couenne: new cutoff value 5.4163191985e+02 (2137.68 seconds)
Cbc0010I After 4600 nodes, 2280 on tree, 749.37065 best solution, best possible 86.193059 (2122.07 seconds)
Cbc0010I After 4700 nodes, 2330 on tree, 749.37065 best solution, best possible 86.193059 (2141.73 seconds)
Cbc0010I After 4800 nodes, 2380 on tree, 749.37065 best solution, best possible 86.193059 (2169.95 seconds)
Cbc0010I After 4900 nodes, 2430 on tree, 749.37065 best solution, best possible 86.193059 (2188.77 seconds)
Cbc0010I After 5000 nodes, 2480 on tree, 749.37065 best solution, best possible 86.193059 (2202.76 seconds)
Cbc0010I After 5100 nodes, 2530 on tree, 749.37065 best solution, best possible 86.193059 (2218.54 seconds)
Cbc0010I After 5200 nodes, 2580 on tree, 749.37065 best solution, best possible 86.193059 (2236.87 seconds)
Cbc0010I After 5300 nodes, 2630 on tree, 749.37065 best solution, best possible 86.193059 (2255.35 seconds)
Cbc0010I After 5400 nodes, 2680 on tree, 749.37065 best solution, best possible 86.193059 (2273.77 seconds)
Cbc0010I After 5500 nodes, 2725 on tree, 749.37065 best solution, best possible 86.195171 (2293.65 seconds)
Cbc0010I After 5600 nodes, 2775 on tree, 749.37065 best solution, best possible 86.195171 (2328.53 seconds)
Cbc0010I After 5700 nodes, 2825 on tree, 749.37065 best solution, best possible 86.195171 (2364.50 seconds)
Cbc0010I After 5800 nodes, 2875 on tree, 749.37065 best solution, best possible 86.195171 (2379.34 seconds)
Cbc0010I After 5900 nodes, 2925 on tree, 749.37065 best solution, best possible 86.195171 (2391.04 seconds)
Cbc0010I After 6000 nodes, 2975 on tree, 749.37065 best solution, best possible 86.195171 (2407.52 seconds)
Cbc0010I After 6100 nodes, 3020 on tree, 749.37065 best solution, best possible 86.262021 (2425.97 seconds)
Cbc0010I After 6200 nodes, 3070 on tree, 749.37065 best solution, best possible 86.262021 (2453.90 seconds)
Cbc0010I After 6300 nodes, 3120 on tree, 749.37065 best solution, best possible 86.262021 (2485.17 seconds)
Cbc0010I After 6400 nodes, 3170 on tree, 749.37065 best solution, best possible 86.262021 (2513.16 seconds)
Cbc0010I After 6500 nodes, 3220 on tree, 749.37065 best solution, best possible 86.262021 (2534.43 seconds)
Cbc0010I After 6600 nodes, 3270 on tree, 749.37065 best solution, best possible 86.262021 (2550.65 seconds)
Cbc0010I After 6700 nodes, 3320 on tree, 749.37065 best solution, best possible 86.262021 (2568.54 seconds)
Cbc0010I After 6800 nodes, 3370 on tree, 749.37065 best solution, best possible 86.262021 (2586.30 seconds)
Cbc0010I After 6900 nodes, 3420 on tree, 749.37065 best solution, best possible 86.262021 (2604.19 seconds)
Couenne: new cutoff value 4.7102791218e+02 (2638.92 seconds)
Cbc0012I Integer solution of 471.02791 found by Couenne Rounding NLP after 1144654 iterations and 6956 nodes (2614.51 seconds)
Cbc0010I After 7000 nodes, 1616 on tree, 471.02791 best solution, best possible 86.281782 (2664.87 seconds)
Cbc0010I After 7100 nodes, 1666 on tree, 471.02791 best solution, best possible 86.281782 (2701.30 seconds)
Cbc0010I After 7200 nodes, 1716 on tree, 471.02791 best solution, best possible 86.281782 (2733.98 seconds)
Cbc0010I After 7300 nodes, 1760 on tree, 471.02791 best solution, best possible 86.362808 (2753.59 seconds)
Cbc0010I After 7400 nodes, 1810 on tree, 471.02791 best solution, best possible 86.362808 (2782.72 seconds)
Cbc0010I After 7500 nodes, 1860 on tree, 471.02791 best solution, best possible 86.362808 (2813.07 seconds)
Cbc0010I After 7600 nodes, 1910 on tree, 471.02791 best solution, best possible 86.362808 (2839.06 seconds)
Cbc0010I After 7700 nodes, 1960 on tree, 471.02791 best solution, best possible 86.362808 (2857.14 seconds)
Cbc0010I After 7800 nodes, 2010 on tree, 471.02791 best solution, best possible 86.362808 (2874.52 seconds)
Cbc0010I After 7900 nodes, 2060 on tree, 471.02791 best solution, best possible 86.362808 (2892.99 seconds)
Cbc0010I After 8000 nodes, 2108 on tree, 471.02791 best solution, best possible 86.362808 (2911.83 seconds)
Cbc0010I After 8100 nodes, 2158 on tree, 471.02791 best solution, best possible 86.362808 (2931.68 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 8200 nodes, 2196 on tree, 471.02791 best solution, best possible 86.400399 (3027.97 seconds)
Cbc0010I After 8300 nodes, 2246 on tree, 471.02791 best solution, best possible 86.400399 (3071.40 seconds)
Cbc0010I After 8400 nodes, 2296 on tree, 471.02791 best solution, best possible 86.400399 (3090.81 seconds)
Cbc0010I After 8500 nodes, 2346 on tree, 471.02791 best solution, best possible 86.400399 (3103.46 seconds)
Cbc0010I After 8600 nodes, 2393 on tree, 471.02791 best solution, best possible 86.441135 (3173.66 seconds)
Cbc0010I After 8700 nodes, 2443 on tree, 471.02791 best solution, best possible 86.441135 (3210.96 seconds)
Cbc0010I After 8800 nodes, 2493 on tree, 471.02791 best solution, best possible 86.441135 (3249.51 seconds)
Cbc0010I After 8900 nodes, 2539 on tree, 471.02791 best solution, best possible 86.463471 (3276.23 seconds)
Cbc0010I After 9000 nodes, 2589 on tree, 471.02791 best solution, best possible 86.463471 (3311.42 seconds)
Cbc0010I After 9100 nodes, 2639 on tree, 471.02791 best solution, best possible 86.463471 (3337.88 seconds)
Cbc0010I After 9200 nodes, 2689 on tree, 471.02791 best solution, best possible 86.463471 (3353.69 seconds)
Cbc0010I After 9300 nodes, 2734 on tree, 471.02791 best solution, best possible 86.54313 (3374.30 seconds)
Cbc0010I After 9400 nodes, 2784 on tree, 471.02791 best solution, best possible 86.54313 (3401.35 seconds)
Cbc0010I After 9500 nodes, 2834 on tree, 471.02791 best solution, best possible 86.54313 (3427.95 seconds)
Cbc0010I After 9600 nodes, 2884 on tree, 471.02791 best solution, best possible 86.54313 (3441.09 seconds)
Cbc0010I After 9700 nodes, 2934 on tree, 471.02791 best solution, best possible 86.54313 (3458.71 seconds)
Cbc0010I After 9800 nodes, 2984 on tree, 471.02791 best solution, best possible 86.54313 (3476.24 seconds)
Cbc0010I After 9900 nodes, 3016 on tree, 471.02791 best solution, best possible 86.54313 (3493.89 seconds)
Cbc0010I After 10000 nodes, 3061 on tree, 471.02791 best solution, best possible 86.544938 (3522.73 seconds)
Cbc0010I After 10100 nodes, 3111 on tree, 471.02791 best solution, best possible 86.544938 (3555.30 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 471.02791 (best possible 86.544938), took 2498872 iterations and 10185 nodes (3578.02 seconds)
Cbc0035I Maximum depth 1898, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.055877s)
Total solve time:                         3578.34s (3578.34s in branch-and-bound)
Lower bound:                              86.5449
Upper bound:                              471.028  (gap: 439.18%)
Branch-and-bound nodes:                     10185
Stats: /tmp/jl_UKe25c/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.055877 [sep]  3578.34 [time]  3578.35 [bb]         8.654494e+01 [lower]         4.710279e+02 [upper]   10185 [nodes]
Performance of                           FBBT:	    296.055s,    16534 runs. fix: 8.97252e-05 shrnk:  0.0011492 ubd:          0 2ubd:          0 infeas:          4
Performance of                           OBBT:	    12.7754s,        9 runs. fix:    0.26087 shrnk:   0.983997 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt
