solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-10.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 90.045279       44 25.508078
NLP0014I             2         OPT 978.29508       44 1.725559
Couenne: new cutoff value 9.7829509667e+02 (44.2157 seconds)
Loaded instance "/tmp/jl_csPiDE/model.nl"
Constraints:         5460
Variables:           5430 (1830 integer)
Auxiliaries:         1861 (0 integer)

Coin0506I Presolve 14391 (-70) rows, 7161 (-130) columns and 32291 (-200) elements
Clp0006I 0  Obj 0 Primal inf 59.99994 (60) Dual inf 3.2770579e+13 (1800)
Clp0006I 296  Obj 27.953982 Primal inf 55.954812 (58) Dual inf 3.2403417e+13 (1715)
Clp0006I 592  Obj 85.281927 Primal inf 47.453915 (62) Dual inf 52642817 (1689)
Clp0006I 888  Obj 115.35543 Primal inf 40.20264 (65) Dual inf 50413988 (1606)
Clp0006I 1184  Obj 160.2337 Primal inf 29.258416 (61) Dual inf 44922427 (1453)
Clp0006I 1480  Obj 202.80721 Primal inf 18.657778 (61) Dual inf 42554248 (1370)
Clp0006I 1776  Obj 239.06155 Primal inf 6.9313656 (37) Dual inf 18824239 (1076)
Clp0006I 2072  Obj 230.72429 Dual inf 26689.043 (854)
Clp0006I 2368  Obj 144.51986 Dual inf 12402.495 (397)
Clp0006I 2664  Obj 83.075639 Dual inf 6441.3942 (251)
Clp0006I 2944  Obj 38.681808 Dual inf 3066.0451 (174)
Clp0006I 3240  Obj 8.4607193 Dual inf 152.23406 (39)
Clp0006I 3536  Obj 8.3749999 Dual inf 518.91256 (220)
Clp0006I 3774  Obj 8.3749999
Clp0000I Optimal - objective value 8.3749999
Clp0032I Optimal objective 8.374999858 - 3774 iterations time 0.472, Presolve 0.08
Clp0000I Optimal - objective value 8.375
Cbc0012I Integer solution of 978.2951 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.02 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 8.375
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2248 added rows had average density of 2
Cbc0013I At root node, 2248 cuts changed objective from 8.375 to 83.076192 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 28878 row cuts average 2.0 elements, 5056 column cuts (6996 active)
Cbc0010I After 0 nodes, 1 on tree, 978.2951 best solution, best possible 83.076192 (64.36 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.9526428155e+02 (208.28 seconds)
Cbc0012I Integer solution of 795.26428 found by Couenne Rounding NLP after 26108 iterations and 1 nodes (163.06 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 6.6800626417e+02 (277.715 seconds)
Cbc0012I Integer solution of 668.00626 found by Couenne Rounding NLP after 29232 iterations and 2 nodes (232.50 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 668.00626 best solution, best possible 84.225043 (617.09 seconds)
Cbc0010I After 200 nodes, 100 on tree, 668.00626 best solution, best possible 84.225043 (676.89 seconds)
Cbc0010I After 300 nodes, 150 on tree, 668.00626 best solution, best possible 84.225043 (727.08 seconds)
Cbc0010I After 400 nodes, 200 on tree, 668.00626 best solution, best possible 84.225043 (769.13 seconds)
Cbc0010I After 500 nodes, 250 on tree, 668.00626 best solution, best possible 84.225043 (793.86 seconds)
Cbc0010I After 600 nodes, 300 on tree, 668.00626 best solution, best possible 84.225043 (814.44 seconds)
Cbc0010I After 700 nodes, 343 on tree, 668.00626 best solution, best possible 84.225043 (832.12 seconds)
Couenne: new cutoff value 6.5483157446e+02 (885.013 seconds)
Cbc0004I Integer solution of 654.83157 found after 579658 iterations and 755 nodes (839.82 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 361 on tree, 654.83157 best solution, best possible 84.402221 (1163.15 seconds)
Cbc0010I After 900 nodes, 411 on tree, 654.83157 best solution, best possible 84.402221 (1218.24 seconds)
Cbc0010I After 1000 nodes, 461 on tree, 654.83157 best solution, best possible 84.402221 (1252.93 seconds)
Cbc0010I After 1100 nodes, 511 on tree, 654.83157 best solution, best possible 84.402221 (1285.39 seconds)
Cbc0010I After 1200 nodes, 561 on tree, 654.83157 best solution, best possible 84.402221 (1300.29 seconds)
Cbc0010I After 1300 nodes, 611 on tree, 654.83157 best solution, best possible 84.402221 (1314.05 seconds)
Couenne: new cutoff value 6.0984403367e+02 (1363.58 seconds)
Cbc0004I Integer solution of 609.84403 found after 981707 iterations and 1334 nodes (1318.38 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 1400 nodes, 622 on tree, 609.84403 best solution, best possible 84.443537 (1452.65 seconds)
Cbc0010I After 1500 nodes, 672 on tree, 609.84403 best solution, best possible 84.443537 (1511.18 seconds)
Cbc0010I After 1600 nodes, 722 on tree, 609.84403 best solution, best possible 84.443537 (1546.14 seconds)
Cbc0010I After 1700 nodes, 772 on tree, 609.84403 best solution, best possible 84.443537 (1572.04 seconds)
Cbc0010I After 1800 nodes, 822 on tree, 609.84403 best solution, best possible 84.443537 (1595.23 seconds)
Cbc0010I After 1900 nodes, 872 on tree, 609.84403 best solution, best possible 84.443537 (1613.90 seconds)
Cbc0010I After 2000 nodes, 922 on tree, 609.84403 best solution, best possible 84.443537 (1630.29 seconds)
Couenne: new cutoff value 4.4407971521e+02 (1680.17 seconds)
Cbc0004I Integer solution of 444.07972 found after 1521170 iterations and 2034 nodes (1634.97 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 2100 nodes, 768 on tree, 444.07972 best solution, best possible 84.454237 (1680.92 seconds)
Cbc0010I After 2200 nodes, 818 on tree, 444.07972 best solution, best possible 84.454237 (1731.53 seconds)
Cbc0010I After 2300 nodes, 868 on tree, 444.07972 best solution, best possible 84.454237 (1774.65 seconds)
Cbc0010I After 2400 nodes, 918 on tree, 444.07972 best solution, best possible 84.454237 (1812.94 seconds)
Cbc0010I After 2500 nodes, 965 on tree, 444.07972 best solution, best possible 84.623962 (1892.84 seconds)
Cbc0010I After 2600 nodes, 1015 on tree, 444.07972 best solution, best possible 84.623962 (1938.28 seconds)
Cbc0010I After 2700 nodes, 1065 on tree, 444.07972 best solution, best possible 84.623962 (1982.30 seconds)
Cbc0010I After 2800 nodes, 1115 on tree, 444.07972 best solution, best possible 84.623962 (2020.68 seconds)
Cbc0010I After 2900 nodes, 1165 on tree, 444.07972 best solution, best possible 84.623962 (2049.58 seconds)
Cbc0010I After 3000 nodes, 1213 on tree, 444.07972 best solution, best possible 84.623962 (2072.94 seconds)
Cbc0010I After 3100 nodes, 1252 on tree, 444.07972 best solution, best possible 84.665782 (2148.11 seconds)
Cbc0010I After 3200 nodes, 1302 on tree, 444.07972 best solution, best possible 84.665782 (2192.86 seconds)
Cbc0010I After 3300 nodes, 1352 on tree, 444.07972 best solution, best possible 84.665782 (2231.66 seconds)
Cbc0010I After 3400 nodes, 1402 on tree, 444.07972 best solution, best possible 84.665782 (2262.76 seconds)
Cbc0010I After 3500 nodes, 1451 on tree, 444.07972 best solution, best possible 84.665782 (2282.69 seconds)
Cbc0010I After 3600 nodes, 1486 on tree, 444.07972 best solution, best possible 84.665782 (2295.20 seconds)
Cbc0010I After 3700 nodes, 1534 on tree, 444.07972 best solution, best possible 85.412306 (2356.70 seconds)
Cbc0010I After 3800 nodes, 1584 on tree, 444.07972 best solution, best possible 85.412306 (2393.05 seconds)
Cbc0010I After 3900 nodes, 1634 on tree, 444.07972 best solution, best possible 85.412306 (2426.05 seconds)
Cbc0010I After 4000 nodes, 1684 on tree, 444.07972 best solution, best possible 85.412306 (2451.01 seconds)
Cbc0010I After 4100 nodes, 1734 on tree, 444.07972 best solution, best possible 85.412306 (2472.23 seconds)
Cbc0010I After 4200 nodes, 1784 on tree, 444.07972 best solution, best possible 85.412306 (2490.40 seconds)
Cbc0010I After 4300 nodes, 1813 on tree, 444.07972 best solution, best possible 85.412306 (2504.68 seconds)
Cbc0010I After 4400 nodes, 1845 on tree, 444.07972 best solution, best possible 85.414059 (2535.09 seconds)
Cbc0010I After 4500 nodes, 1895 on tree, 444.07972 best solution, best possible 85.414059 (2583.59 seconds)
Cbc0010I After 4600 nodes, 1945 on tree, 444.07972 best solution, best possible 85.414059 (2628.97 seconds)
Cbc0010I After 4700 nodes, 1995 on tree, 444.07972 best solution, best possible 85.414059 (2665.20 seconds)
Cbc0010I After 4800 nodes, 2045 on tree, 444.07972 best solution, best possible 85.414059 (2691.25 seconds)
Cbc0010I After 4900 nodes, 2093 on tree, 444.07972 best solution, best possible 85.586851 (2737.70 seconds)
Cbc0010I After 5000 nodes, 2143 on tree, 444.07972 best solution, best possible 85.586851 (2784.51 seconds)
Cbc0010I After 5100 nodes, 2193 on tree, 444.07972 best solution, best possible 85.586851 (2826.46 seconds)
Cbc0010I After 5200 nodes, 2243 on tree, 444.07972 best solution, best possible 85.586851 (2858.22 seconds)
Cbc0010I After 5300 nodes, 2293 on tree, 444.07972 best solution, best possible 85.586851 (2880.83 seconds)
Cbc0010I After 5400 nodes, 2340 on tree, 444.07972 best solution, best possible 85.756072 (2912.90 seconds)
Cbc0010I After 5500 nodes, 2390 on tree, 444.07972 best solution, best possible 85.756072 (2961.43 seconds)
Cbc0010I After 5600 nodes, 2440 on tree, 444.07972 best solution, best possible 85.756072 (3000.46 seconds)
Cbc0010I After 5700 nodes, 2490 on tree, 444.07972 best solution, best possible 85.756072 (3034.67 seconds)
Cbc0010I After 5800 nodes, 2540 on tree, 444.07972 best solution, best possible 85.756072 (3062.24 seconds)
Cbc0010I After 5900 nodes, 2590 on tree, 444.07972 best solution, best possible 85.756072 (3087.00 seconds)
Cbc0010I After 6000 nodes, 2637 on tree, 444.07972 best solution, best possible 85.756072 (3107.08 seconds)
Cbc0010I After 6100 nodes, 2676 on tree, 444.07972 best solution, best possible 85.818452 (3142.76 seconds)
Cbc0010I After 6200 nodes, 2726 on tree, 444.07972 best solution, best possible 85.818452 (3187.32 seconds)
Cbc0010I After 6300 nodes, 2776 on tree, 444.07972 best solution, best possible 85.818452 (3232.73 seconds)
Cbc0010I After 6400 nodes, 2826 on tree, 444.07972 best solution, best possible 85.818452 (3268.64 seconds)
Cbc0010I After 6500 nodes, 2876 on tree, 444.07972 best solution, best possible 85.818452 (3297.01 seconds)
Cbc0010I After 6600 nodes, 2910 on tree, 444.07972 best solution, best possible 85.903653 (3325.23 seconds)
Cbc0010I After 6700 nodes, 2960 on tree, 444.07972 best solution, best possible 85.903653 (3374.66 seconds)
Cbc0010I After 6800 nodes, 3010 on tree, 444.07972 best solution, best possible 85.903653 (3423.06 seconds)
Cbc0010I After 6900 nodes, 3060 on tree, 444.07972 best solution, best possible 85.903653 (3465.16 seconds)
Cbc0010I After 7000 nodes, 3110 on tree, 444.07972 best solution, best possible 85.903653 (3502.31 seconds)
Cbc0010I After 7100 nodes, 3160 on tree, 444.07972 best solution, best possible 85.903653 (3526.07 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 444.07972 (best possible 85.903653), took 6164213 iterations and 7189 nodes (3560.99 seconds)
Cbc0035I Maximum depth 380, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      14461
Linearization cuts added in total:          14461  (separation time: 0.039412s)
Total solve time:                          3561.6s (3561.6s in branch-and-bound)
Lower bound:                              85.9037
Upper bound:                               444.08  (gap: 412.15%)
Branch-and-bound nodes:                      7189
Stats: /tmp/jl_csPiDE/model.nl 5430 [var] 1830 [int] 5460 [con] 1861 [aux]  14461 [root]    14461 [tot] 0.039412 [sep]   3561.6 [time]  3561.61 [bb]         8.590365e+01 [lower]         4.440797e+02 [upper]    7189 [nodes]
Performance of                           FBBT:	    69.7029s,    13851 runs. fix:          0 shrnk:    165.169 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    27.3095s,       10 runs. fix:    0.37018 shrnk:    36.2097 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-10.txt
