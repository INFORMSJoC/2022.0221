solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-1.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 170.76206       32 2.723675
NLP0014I             2      INFEAS 0.99999999       33 0.743591
Loaded instance "/tmp/jl_7gA72C/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 8800 (-1641) rows, 3980 (-1681) columns and 19120 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 79.99996 (40)
Clp0006I 251  Obj 1.6447034e-16 Primal inf 112.5629 (212)
Clp0006I 502  Obj 2.0690132e-16 Primal inf 127.47372 (236)
Clp0006I 753  Obj 1.6649364e-16 Primal inf 95.944109 (236)
Clp0006I 1004  Obj 1.8595935e-16 Primal inf 96.347942 (202)
Clp0006I 1255  Obj 1.6401314e-16 Primal inf 121.99312 (255)
Clp0006I 1506  Obj 1.8179674e-16 Primal inf 96.21729 (213)
Clp0006I 1757  Obj 1.7065961e-16 Primal inf 160.26801 (277)
Clp0006I 2008  Obj 1.7515027e-16 Primal inf 96.086639 (224)
Clp0006I 2259  Obj 1.7857812e-16 Primal inf 132.65739 (242)
Clp0006I 2510  Obj 1.6723176e-16 Primal inf 95.955987 (235)
Clp0006I 2761  Obj 1.8595935e-16 Primal inf 96.35982 (201)
Clp0006I 3012  Obj 1.6347587e-16 Primal inf 116.77381 (252)
Clp0006I 3263  Obj 16.429931 Primal inf 29.493687 (107)
Clp0006I 3334  Obj 18.00238
Clp0000I Optimal - objective value 18.00238
Clp0032I Optimal objective 18.00237961 - 3334 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 18.00238
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 18.00238
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 958 added rows had average density of 2
Cbc0013I At root node, 958 cuts changed objective from 18.00238 to 94.66639 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14580 row cuts average 2.0 elements, 920 column cuts (1587 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (82.48 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.6639875383e+02 (110.24 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 8.0150368183e+02 (577.527 seconds)
Cbc0012I Integer solution of 801.50368 found by Couenne Rounding NLP after 15425 iterations and 4 nodes (551.31 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 801.50368 best solution, best possible 97.998263 (831.69 seconds)
Cbc0010I After 200 nodes, 100 on tree, 801.50368 best solution, best possible 97.998263 (860.09 seconds)
Cbc0010I After 300 nodes, 150 on tree, 801.50368 best solution, best possible 97.998263 (890.71 seconds)
Cbc0010I After 400 nodes, 200 on tree, 801.50368 best solution, best possible 97.998263 (916.59 seconds)
Cbc0010I After 500 nodes, 250 on tree, 801.50368 best solution, best possible 97.998263 (940.49 seconds)
Cbc0010I After 600 nodes, 300 on tree, 801.50368 best solution, best possible 97.998263 (965.36 seconds)
Cbc0010I After 700 nodes, 350 on tree, 801.50368 best solution, best possible 97.998263 (990.88 seconds)
Cbc0010I After 800 nodes, 400 on tree, 801.50368 best solution, best possible 97.998263 (1016.60 seconds)
Cbc0010I After 900 nodes, 450 on tree, 801.50368 best solution, best possible 97.998263 (1042.57 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 801.50368 best solution, best possible 97.998263 (1068.62 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 801.50368 best solution, best possible 97.998263 (1093.80 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 801.50368 best solution, best possible 97.998263 (1116.49 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 801.50368 best solution, best possible 97.998263 (1135.89 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 801.50368 best solution, best possible 97.998263 (1153.45 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 801.50368 best solution, best possible 97.998263 (1170.70 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 801.50368 best solution, best possible 97.998263 (1187.20 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 801.50368 best solution, best possible 97.998263 (1203.57 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 801.50368 best solution, best possible 97.998263 (1221.13 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 801.50368 best solution, best possible 97.998263 (1237.98 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 801.50368 best solution, best possible 97.998263 (1255.16 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 801.50368 best solution, best possible 97.998263 (1272.27 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 801.50368 best solution, best possible 97.998263 (1288.64 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 801.50368 best solution, best possible 97.998263 (1304.75 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 801.50368 best solution, best possible 97.998263 (1320.89 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 801.50368 best solution, best possible 97.998263 (1337.25 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 801.50368 best solution, best possible 97.998263 (1353.51 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 801.50368 best solution, best possible 97.998263 (1370.06 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 801.50368 best solution, best possible 97.998263 (1386.11 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 801.50368 best solution, best possible 97.998263 (1401.19 seconds)
Cbc0010I After 3000 nodes, 1490 on tree, 801.50368 best solution, best possible 97.998263 (1415.75 seconds)
Couenne: new cutoff value 7.3430970838e+02 (1442.14 seconds)
Cbc0004I Integer solution of 734.30971 found after 263129 iterations and 3001 nodes (1415.95 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3100 nodes, 615 on tree, 734.30971 best solution, best possible 98.057226 (1479.22 seconds)
Cbc0010I After 3200 nodes, 665 on tree, 734.30971 best solution, best possible 98.057226 (1521.04 seconds)
Cbc0010I After 3300 nodes, 715 on tree, 734.30971 best solution, best possible 98.057226 (1549.61 seconds)
Cbc0010I After 3400 nodes, 765 on tree, 734.30971 best solution, best possible 98.057226 (1574.77 seconds)
Cbc0010I After 3500 nodes, 815 on tree, 734.30971 best solution, best possible 98.057226 (1600.68 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3600 nodes, 863 on tree, 734.30971 best solution, best possible 99.911742 (1803.70 seconds)
Cbc0010I After 3700 nodes, 913 on tree, 734.30971 best solution, best possible 99.911742 (1846.97 seconds)
Cbc0010I After 3800 nodes, 963 on tree, 734.30971 best solution, best possible 99.911742 (1871.99 seconds)
Cbc0010I After 3900 nodes, 1013 on tree, 734.30971 best solution, best possible 99.911742 (1900.59 seconds)
Cbc0010I After 4000 nodes, 1063 on tree, 734.30971 best solution, best possible 99.911742 (1926.45 seconds)
Cbc0010I After 4100 nodes, 1113 on tree, 734.30971 best solution, best possible 99.911742 (1950.36 seconds)
Cbc0010I After 4200 nodes, 1163 on tree, 734.30971 best solution, best possible 99.911742 (1976.44 seconds)
Cbc0010I After 4300 nodes, 1213 on tree, 734.30971 best solution, best possible 99.911742 (2002.43 seconds)
Cbc0010I After 4400 nodes, 1263 on tree, 734.30971 best solution, best possible 99.911742 (2028.51 seconds)
Cbc0010I After 4500 nodes, 1313 on tree, 734.30971 best solution, best possible 99.911742 (2054.57 seconds)
Cbc0010I After 4600 nodes, 1363 on tree, 734.30971 best solution, best possible 99.911742 (2080.72 seconds)
Cbc0010I After 4700 nodes, 1413 on tree, 734.30971 best solution, best possible 99.911742 (2106.23 seconds)
Cbc0010I After 4800 nodes, 1463 on tree, 734.30971 best solution, best possible 99.911742 (2128.62 seconds)
Cbc0010I After 4900 nodes, 1513 on tree, 734.30971 best solution, best possible 99.911742 (2150.53 seconds)
Cbc0010I After 5000 nodes, 1563 on tree, 734.30971 best solution, best possible 99.911742 (2173.03 seconds)
Cbc0010I After 5100 nodes, 1613 on tree, 734.30971 best solution, best possible 99.911742 (2193.33 seconds)
Cbc0010I After 5200 nodes, 1663 on tree, 734.30971 best solution, best possible 99.911742 (2212.90 seconds)
Cbc0010I After 5300 nodes, 1713 on tree, 734.30971 best solution, best possible 99.911742 (2232.49 seconds)
Cbc0010I After 5400 nodes, 1763 on tree, 734.30971 best solution, best possible 99.911742 (2251.91 seconds)
Cbc0010I After 5500 nodes, 1812 on tree, 734.30971 best solution, best possible 99.911742 (2270.92 seconds)
Cbc0010I After 5600 nodes, 1861 on tree, 734.30971 best solution, best possible 99.911742 (2289.75 seconds)
Cbc0010I After 5700 nodes, 1910 on tree, 734.30971 best solution, best possible 99.911742 (2309.36 seconds)
Cbc0010I After 5800 nodes, 1960 on tree, 734.30971 best solution, best possible 99.911742 (2328.45 seconds)
Cbc0010I After 5900 nodes, 2009 on tree, 734.30971 best solution, best possible 99.911742 (2346.57 seconds)
Cbc0010I After 6000 nodes, 2058 on tree, 734.30971 best solution, best possible 99.911742 (2365.38 seconds)
Cbc0010I After 6100 nodes, 2105 on tree, 734.30971 best solution, best possible 99.911742 (2383.77 seconds)
Cbc0010I After 6200 nodes, 2155 on tree, 734.30971 best solution, best possible 99.911742 (2401.84 seconds)
Cbc0010I After 6300 nodes, 2204 on tree, 734.30971 best solution, best possible 99.911742 (2420.36 seconds)
Cbc0010I After 6400 nodes, 2254 on tree, 734.30971 best solution, best possible 99.911742 (2439.42 seconds)
Cbc0010I After 6500 nodes, 2303 on tree, 734.30971 best solution, best possible 99.911742 (2458.12 seconds)
Cbc0010I After 6600 nodes, 2352 on tree, 734.30971 best solution, best possible 99.911742 (2476.17 seconds)
Cbc0010I After 6700 nodes, 2401 on tree, 734.30971 best solution, best possible 99.911742 (2495.31 seconds)
Cbc0010I After 6800 nodes, 2451 on tree, 734.30971 best solution, best possible 99.911742 (2514.47 seconds)
Cbc0010I After 6900 nodes, 2501 on tree, 734.30971 best solution, best possible 99.911742 (2533.32 seconds)
Cbc0010I After 7000 nodes, 2550 on tree, 734.30971 best solution, best possible 99.911742 (2552.38 seconds)
Cbc0010I After 7100 nodes, 2600 on tree, 734.30971 best solution, best possible 99.911742 (2571.65 seconds)
Cbc0010I After 7200 nodes, 2650 on tree, 734.30971 best solution, best possible 99.911742 (2590.80 seconds)
Cbc0010I After 7300 nodes, 2700 on tree, 734.30971 best solution, best possible 99.911742 (2608.60 seconds)
Cbc0010I After 7400 nodes, 2749 on tree, 734.30971 best solution, best possible 99.911742 (2626.08 seconds)
Cbc0010I After 7500 nodes, 2798 on tree, 734.30971 best solution, best possible 99.911742 (2643.92 seconds)
Cbc0010I After 7600 nodes, 2848 on tree, 734.30971 best solution, best possible 99.911742 (2662.14 seconds)
Cbc0010I After 7700 nodes, 2898 on tree, 734.30971 best solution, best possible 99.911742 (2680.17 seconds)
Cbc0010I After 7800 nodes, 2948 on tree, 734.30971 best solution, best possible 99.911742 (2698.44 seconds)
Cbc0010I After 7900 nodes, 2998 on tree, 734.30971 best solution, best possible 99.911742 (2716.76 seconds)
Cbc0010I After 8000 nodes, 3048 on tree, 734.30971 best solution, best possible 99.911742 (2735.38 seconds)
Cbc0010I After 8100 nodes, 3098 on tree, 734.30971 best solution, best possible 99.911742 (2754.19 seconds)
Cbc0010I After 8200 nodes, 3148 on tree, 734.30971 best solution, best possible 99.911742 (2774.60 seconds)
Cbc0010I After 8300 nodes, 3198 on tree, 734.30971 best solution, best possible 99.911742 (2794.54 seconds)
Cbc0010I After 8400 nodes, 3248 on tree, 734.30971 best solution, best possible 99.911742 (2814.07 seconds)
Cbc0010I After 8500 nodes, 3297 on tree, 734.30971 best solution, best possible 99.911742 (2833.45 seconds)
Cbc0010I After 8600 nodes, 3344 on tree, 734.30971 best solution, best possible 99.911742 (2852.54 seconds)
Cbc0010I After 8700 nodes, 3383 on tree, 734.30971 best solution, best possible 99.911742 (2871.07 seconds)
Cbc0010I After 8800 nodes, 3430 on tree, 734.30971 best solution, best possible 99.991062 (2993.50 seconds)
Cbc0010I After 8900 nodes, 3480 on tree, 734.30971 best solution, best possible 99.991062 (3021.41 seconds)
Cbc0010I After 9000 nodes, 3530 on tree, 734.30971 best solution, best possible 99.991062 (3048.31 seconds)
Cbc0010I After 9100 nodes, 3580 on tree, 734.30971 best solution, best possible 99.991062 (3072.67 seconds)
Cbc0010I After 9200 nodes, 3630 on tree, 734.30971 best solution, best possible 99.991062 (3096.86 seconds)
Cbc0010I After 9300 nodes, 3680 on tree, 734.30971 best solution, best possible 99.991062 (3120.54 seconds)
Cbc0010I After 9400 nodes, 3730 on tree, 734.30971 best solution, best possible 99.991062 (3145.51 seconds)
Cbc0010I After 9500 nodes, 3775 on tree, 734.30971 best solution, best possible 100.29164 (3202.10 seconds)
Cbc0010I After 9600 nodes, 3825 on tree, 734.30971 best solution, best possible 100.29164 (3253.11 seconds)
Cbc0010I After 9700 nodes, 3875 on tree, 734.30971 best solution, best possible 100.29164 (3278.78 seconds)
Cbc0010I After 9800 nodes, 3925 on tree, 734.30971 best solution, best possible 100.29164 (3303.41 seconds)
Cbc0010I After 9900 nodes, 3975 on tree, 734.30971 best solution, best possible 100.29164 (3327.80 seconds)
Cbc0010I After 10000 nodes, 4025 on tree, 734.30971 best solution, best possible 100.29164 (3352.26 seconds)
Cbc0010I After 10100 nodes, 4075 on tree, 734.30971 best solution, best possible 100.29164 (3377.53 seconds)
Cbc0010I After 10200 nodes, 4125 on tree, 734.30971 best solution, best possible 100.29164 (3402.51 seconds)
Cbc0010I After 10300 nodes, 4175 on tree, 734.30971 best solution, best possible 100.29164 (3426.69 seconds)
Cbc0010I After 10400 nodes, 4225 on tree, 734.30971 best solution, best possible 100.29164 (3451.70 seconds)
Cbc0010I After 10500 nodes, 4275 on tree, 734.30971 best solution, best possible 100.29164 (3473.04 seconds)
Cbc0010I After 10600 nodes, 4325 on tree, 734.30971 best solution, best possible 100.29164 (3494.74 seconds)
Cbc0010I After 10700 nodes, 4375 on tree, 734.30971 best solution, best possible 100.29164 (3514.65 seconds)
Cbc0010I After 10800 nodes, 4425 on tree, 734.30971 best solution, best possible 100.29164 (3532.96 seconds)
Cbc0010I After 10900 nodes, 4475 on tree, 734.30971 best solution, best possible 100.29164 (3552.55 seconds)
Cbc0010I After 11000 nodes, 4525 on tree, 734.30971 best solution, best possible 100.29164 (3571.34 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 734.30971 (best possible 100.29164), took 1212820 iterations and 11013 nodes (3630.49 seconds)
Cbc0035I Maximum depth 2591, 6 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.061203s)
Total solve time:                         3630.75s (3630.75s in branch-and-bound)
Lower bound:                              100.292
Upper bound:                               734.31  (gap: 625.93%)
Branch-and-bound nodes:                     11013
Stats: /tmp/jl_7gA72C/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.061203 [sep]  3630.75 [time]  3630.76 [bb]         1.002916e+02 [lower]         7.343097e+02 [upper]   11013 [nodes]
Performance of                           FBBT:	    338.262s,    15772 runs. fix: 3.71873e-05 shrnk: 0.000714258 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.6727s,        8 runs. fix:   0.350365 shrnk:    45.4024 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-1.txt
