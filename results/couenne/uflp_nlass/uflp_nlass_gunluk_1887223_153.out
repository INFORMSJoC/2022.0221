solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 156.99202       32 2.49744
NLP0014I             2      INFEAS 0.99999999       35 0.740084
Loaded instance "/tmp/jl_P4uLoR/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 8800 (-1641) rows, 3980 (-1681) columns and 19120 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 79.99996 (40)
Clp0006I 251  Obj 1.6447034e-16 Primal inf 112.5629 (212)
Clp0006I 502  Obj 2.0690132e-16 Primal inf 127.47372 (236)
Clp0006I 753  Obj 1.6649364e-16 Primal inf 95.944109 (236)
Clp0006I 1004  Obj 1.8595935e-16 Primal inf 96.347942 (202)
Clp0006I 1255  Obj 1.6401314e-16 Primal inf 121.99312 (255)
Clp0006I 1506  Obj 1.8179674e-16 Primal inf 96.21729 (213)
Clp0006I 1757  Obj 1.7065961e-16 Primal inf 160.26801 (277)
Clp0006I 2008  Obj 1.7515027e-16 Primal inf 96.086639 (224)
Clp0006I 2259  Obj 1.7857812e-16 Primal inf 132.65739 (242)
Clp0006I 2510  Obj 1.6723176e-16 Primal inf 95.955987 (235)
Clp0006I 2761  Obj 1.8595935e-16 Primal inf 96.35982 (201)
Clp0006I 3012  Obj 1.6347587e-16 Primal inf 116.77381 (252)
Clp0006I 3263  Obj 8.3291765 Primal inf 22.786836 (92)
Clp0006I 3415  Obj 10.799588
Clp0000I Optimal - objective value 10.799588
Clp0032I Optimal objective 10.79958789 - 3415 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 10.799588
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10.799588
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 997 added rows had average density of 2
Cbc0013I At root node, 997 cuts changed objective from 10.799588 to 83.777902 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14148 row cuts average 2.0 elements, 1000 column cuts (1815 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (77.79 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.3219942950e+02 (103.527 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 87.42433 (924.16 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 87.42433 (962.12 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 87.42433 (990.98 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 87.42433 (1016.75 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 87.42433 (1038.34 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 87.42433 (1060.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 344 on tree, 1e+50 best solution, best possible 87.72123 (1580.84 seconds)
Cbc0010I After 800 nodes, 394 on tree, 1e+50 best solution, best possible 87.72123 (1631.35 seconds)
Cbc0010I After 900 nodes, 444 on tree, 1e+50 best solution, best possible 87.72123 (1657.42 seconds)
Cbc0010I After 1000 nodes, 494 on tree, 1e+50 best solution, best possible 87.72123 (1676.70 seconds)
Cbc0010I After 1100 nodes, 544 on tree, 1e+50 best solution, best possible 87.72123 (1692.48 seconds)
Cbc0010I After 1200 nodes, 594 on tree, 1e+50 best solution, best possible 87.72123 (1714.45 seconds)
Cbc0010I After 1300 nodes, 644 on tree, 1e+50 best solution, best possible 87.72123 (1736.52 seconds)
Cbc0010I After 1400 nodes, 694 on tree, 1e+50 best solution, best possible 87.72123 (1758.96 seconds)
Cbc0010I After 1500 nodes, 744 on tree, 1e+50 best solution, best possible 87.72123 (1781.34 seconds)
Cbc0010I After 1600 nodes, 794 on tree, 1e+50 best solution, best possible 87.72123 (1803.31 seconds)
Cbc0010I After 1700 nodes, 844 on tree, 1e+50 best solution, best possible 87.72123 (1824.06 seconds)
Cbc0010I After 1800 nodes, 894 on tree, 1e+50 best solution, best possible 87.72123 (1843.21 seconds)
Cbc0010I After 1900 nodes, 944 on tree, 1e+50 best solution, best possible 87.72123 (1861.07 seconds)
Cbc0010I After 2000 nodes, 994 on tree, 1e+50 best solution, best possible 87.72123 (1878.60 seconds)
Cbc0010I After 2100 nodes, 1044 on tree, 1e+50 best solution, best possible 87.72123 (1895.21 seconds)
Cbc0010I After 2200 nodes, 1094 on tree, 1e+50 best solution, best possible 87.72123 (1911.73 seconds)
Cbc0010I After 2300 nodes, 1144 on tree, 1e+50 best solution, best possible 87.72123 (1927.59 seconds)
Cbc0010I After 2400 nodes, 1192 on tree, 1e+50 best solution, best possible 87.72123 (1943.63 seconds)
Cbc0010I After 2500 nodes, 1242 on tree, 1e+50 best solution, best possible 87.72123 (1958.79 seconds)
Cbc0010I After 2600 nodes, 1290 on tree, 1e+50 best solution, best possible 87.72123 (1973.03 seconds)
Cbc0010I After 2700 nodes, 1340 on tree, 1e+50 best solution, best possible 87.72123 (1987.65 seconds)
Cbc0010I After 2800 nodes, 1388 on tree, 1e+50 best solution, best possible 87.72123 (2001.91 seconds)
Cbc0010I After 2900 nodes, 1438 on tree, 1e+50 best solution, best possible 87.72123 (2016.45 seconds)
Cbc0010I After 3000 nodes, 1488 on tree, 1e+50 best solution, best possible 87.72123 (2031.17 seconds)
Cbc0010I After 3100 nodes, 1538 on tree, 1e+50 best solution, best possible 87.72123 (2046.50 seconds)
Cbc0010I After 3200 nodes, 1588 on tree, 1e+50 best solution, best possible 87.72123 (2061.82 seconds)
Cbc0010I After 3300 nodes, 1638 on tree, 1e+50 best solution, best possible 87.72123 (2077.14 seconds)
Cbc0010I After 3400 nodes, 1688 on tree, 1e+50 best solution, best possible 87.72123 (2092.37 seconds)
Cbc0010I After 3500 nodes, 1738 on tree, 1e+50 best solution, best possible 87.72123 (2107.54 seconds)
Cbc0010I After 3600 nodes, 1788 on tree, 1e+50 best solution, best possible 87.72123 (2122.77 seconds)
Cbc0010I After 3700 nodes, 1838 on tree, 1e+50 best solution, best possible 87.72123 (2138.67 seconds)
Cbc0010I After 3800 nodes, 1888 on tree, 1e+50 best solution, best possible 87.72123 (2154.44 seconds)
Cbc0010I After 3900 nodes, 1938 on tree, 1e+50 best solution, best possible 87.72123 (2169.89 seconds)
Cbc0010I After 4000 nodes, 1988 on tree, 1e+50 best solution, best possible 87.72123 (2185.51 seconds)
Cbc0010I After 4100 nodes, 2038 on tree, 1e+50 best solution, best possible 87.72123 (2201.18 seconds)
Cbc0010I After 4200 nodes, 2088 on tree, 1e+50 best solution, best possible 87.72123 (2217.28 seconds)
Cbc0010I After 4300 nodes, 2138 on tree, 1e+50 best solution, best possible 87.72123 (2233.15 seconds)
Cbc0010I After 4400 nodes, 2188 on tree, 1e+50 best solution, best possible 87.72123 (2249.19 seconds)
Cbc0010I After 4500 nodes, 2238 on tree, 1e+50 best solution, best possible 87.72123 (2265.44 seconds)
Cbc0010I After 4600 nodes, 2288 on tree, 1e+50 best solution, best possible 87.72123 (2281.89 seconds)
Cbc0010I After 4700 nodes, 2338 on tree, 1e+50 best solution, best possible 87.72123 (2298.39 seconds)
Cbc0010I After 4800 nodes, 2388 on tree, 1e+50 best solution, best possible 87.72123 (2314.46 seconds)
Cbc0010I After 4900 nodes, 2438 on tree, 1e+50 best solution, best possible 87.72123 (2330.02 seconds)
Cbc0010I After 5000 nodes, 2486 on tree, 1e+50 best solution, best possible 87.72123 (2344.85 seconds)
Cbc0010I After 5100 nodes, 2530 on tree, 1e+50 best solution, best possible 87.72123 (2359.85 seconds)
Couenne: new cutoff value 6.9970740432e+02 (2388.71 seconds)
Cbc0010I After 5200 nodes, 2572 on tree, 1e+50 best solution, best possible 87.733536 (2454.51 seconds)
Cbc0010I After 5300 nodes, 2622 on tree, 1e+50 best solution, best possible 87.733536 (2482.56 seconds)
Cbc0010I After 5400 nodes, 2672 on tree, 1e+50 best solution, best possible 87.733536 (2510.92 seconds)
Cbc0010I After 5500 nodes, 2722 on tree, 1e+50 best solution, best possible 87.733536 (2534.29 seconds)
Cbc0010I After 5600 nodes, 2772 on tree, 1e+50 best solution, best possible 87.733536 (2553.88 seconds)
Cbc0010I After 5700 nodes, 2822 on tree, 1e+50 best solution, best possible 87.733536 (2573.56 seconds)
Cbc0010I After 5800 nodes, 2872 on tree, 1e+50 best solution, best possible 87.733536 (2594.39 seconds)
Cbc0010I After 5900 nodes, 2922 on tree, 1e+50 best solution, best possible 87.733536 (2615.71 seconds)
Cbc0010I After 6000 nodes, 2972 on tree, 1e+50 best solution, best possible 87.733536 (2636.92 seconds)
Cbc0010I After 6100 nodes, 3022 on tree, 1e+50 best solution, best possible 87.733536 (2657.19 seconds)
Cbc0010I After 6200 nodes, 3072 on tree, 1e+50 best solution, best possible 87.733536 (2675.45 seconds)
Cbc0010I After 6300 nodes, 3122 on tree, 1e+50 best solution, best possible 87.733536 (2691.74 seconds)
Cbc0010I After 6400 nodes, 3172 on tree, 1e+50 best solution, best possible 87.733536 (2707.35 seconds)
Cbc0010I After 6500 nodes, 3222 on tree, 1e+50 best solution, best possible 87.733536 (2722.57 seconds)
Cbc0010I After 6600 nodes, 3271 on tree, 1e+50 best solution, best possible 87.733536 (2737.45 seconds)
Cbc0010I After 6700 nodes, 3320 on tree, 1e+50 best solution, best possible 87.733536 (2751.74 seconds)
Cbc0010I After 6800 nodes, 3370 on tree, 1e+50 best solution, best possible 87.733536 (2766.54 seconds)
Cbc0010I After 6900 nodes, 3419 on tree, 1e+50 best solution, best possible 87.733536 (2781.23 seconds)
Cbc0010I After 7000 nodes, 3469 on tree, 1e+50 best solution, best possible 87.733536 (2795.43 seconds)
Cbc0010I After 7100 nodes, 3519 on tree, 1e+50 best solution, best possible 87.733536 (2809.34 seconds)
Cbc0010I After 7200 nodes, 3569 on tree, 1e+50 best solution, best possible 87.733536 (2823.83 seconds)
Cbc0010I After 7300 nodes, 3618 on tree, 1e+50 best solution, best possible 87.733536 (2837.98 seconds)
Cbc0010I After 7400 nodes, 3668 on tree, 1e+50 best solution, best possible 87.733536 (2852.46 seconds)
Cbc0010I After 7500 nodes, 3718 on tree, 1e+50 best solution, best possible 87.733536 (2867.05 seconds)
Cbc0010I After 7600 nodes, 3768 on tree, 1e+50 best solution, best possible 87.733536 (2881.70 seconds)
Cbc0010I After 7700 nodes, 3818 on tree, 1e+50 best solution, best possible 87.733536 (2896.61 seconds)
Cbc0010I After 7800 nodes, 3868 on tree, 1e+50 best solution, best possible 87.733536 (2911.48 seconds)
Cbc0010I After 7900 nodes, 3918 on tree, 1e+50 best solution, best possible 87.733536 (2926.39 seconds)
Cbc0010I After 8000 nodes, 3968 on tree, 1e+50 best solution, best possible 87.733536 (2941.42 seconds)
Cbc0010I After 8100 nodes, 4018 on tree, 1e+50 best solution, best possible 87.733536 (2956.81 seconds)
Cbc0010I After 8200 nodes, 4068 on tree, 1e+50 best solution, best possible 87.733536 (2972.30 seconds)
Cbc0010I After 8300 nodes, 4118 on tree, 1e+50 best solution, best possible 87.733536 (2987.48 seconds)
Cbc0010I After 8400 nodes, 4168 on tree, 1e+50 best solution, best possible 87.733536 (3001.98 seconds)
Cbc0010I After 8500 nodes, 4217 on tree, 1e+50 best solution, best possible 87.733536 (3015.65 seconds)
Couenne: new cutoff value 6.1442819538e+02 (3052.66 seconds)
Cbc0010I After 8600 nodes, 4256 on tree, 1e+50 best solution, best possible 87.760344 (3029.99 seconds)
Cbc0010I After 8700 nodes, 4306 on tree, 1e+50 best solution, best possible 87.760344 (3077.41 seconds)
Cbc0010I After 8800 nodes, 4356 on tree, 1e+50 best solution, best possible 87.760344 (3102.77 seconds)
Cbc0010I After 8900 nodes, 4406 on tree, 1e+50 best solution, best possible 87.760344 (3125.98 seconds)
Cbc0010I After 9000 nodes, 4456 on tree, 1e+50 best solution, best possible 87.760344 (3146.07 seconds)
Cbc0010I After 9100 nodes, 4506 on tree, 1e+50 best solution, best possible 87.760344 (3164.48 seconds)
Cbc0010I After 9200 nodes, 4556 on tree, 1e+50 best solution, best possible 87.760344 (3184.79 seconds)
Cbc0010I After 9300 nodes, 4606 on tree, 1e+50 best solution, best possible 87.760344 (3205.61 seconds)
Cbc0010I After 9400 nodes, 4656 on tree, 1e+50 best solution, best possible 87.760344 (3226.45 seconds)
Cbc0010I After 9500 nodes, 4706 on tree, 1e+50 best solution, best possible 87.760344 (3246.50 seconds)
Cbc0010I After 9600 nodes, 4756 on tree, 1e+50 best solution, best possible 87.760344 (3264.88 seconds)
Cbc0010I After 9700 nodes, 4806 on tree, 1e+50 best solution, best possible 87.760344 (3280.79 seconds)
Cbc0010I After 9800 nodes, 4856 on tree, 1e+50 best solution, best possible 87.760344 (3295.22 seconds)
Cbc0010I After 9900 nodes, 4906 on tree, 1e+50 best solution, best possible 87.760344 (3309.45 seconds)
Cbc0010I After 10000 nodes, 4956 on tree, 1e+50 best solution, best possible 87.760344 (3323.05 seconds)
Cbc0010I After 10100 nodes, 5006 on tree, 1e+50 best solution, best possible 87.760344 (3337.06 seconds)
Cbc0010I After 10200 nodes, 5056 on tree, 1e+50 best solution, best possible 87.760344 (3351.13 seconds)
Cbc0010I After 10300 nodes, 5106 on tree, 1e+50 best solution, best possible 87.760344 (3364.91 seconds)
Cbc0010I After 10400 nodes, 5156 on tree, 1e+50 best solution, best possible 87.760344 (3378.32 seconds)
Cbc0010I After 10500 nodes, 5206 on tree, 1e+50 best solution, best possible 87.760344 (3391.67 seconds)
Cbc0010I After 10600 nodes, 5256 on tree, 1e+50 best solution, best possible 87.760344 (3405.49 seconds)
Cbc0010I After 10700 nodes, 5306 on tree, 1e+50 best solution, best possible 87.760344 (3419.30 seconds)
Cbc0010I After 10800 nodes, 5356 on tree, 1e+50 best solution, best possible 87.760344 (3433.34 seconds)
Cbc0010I After 10900 nodes, 5406 on tree, 1e+50 best solution, best possible 87.760344 (3447.61 seconds)
Cbc0010I After 11000 nodes, 5456 on tree, 1e+50 best solution, best possible 87.760344 (3461.94 seconds)
Cbc0010I After 11100 nodes, 5506 on tree, 1e+50 best solution, best possible 87.760344 (3476.36 seconds)
Cbc0010I After 11200 nodes, 5556 on tree, 1e+50 best solution, best possible 87.760344 (3490.87 seconds)
Cbc0010I After 11300 nodes, 5606 on tree, 1e+50 best solution, best possible 87.760344 (3505.51 seconds)
Cbc0010I After 11400 nodes, 5656 on tree, 1e+50 best solution, best possible 87.760344 (3520.44 seconds)
Cbc0010I After 11500 nodes, 5706 on tree, 1e+50 best solution, best possible 87.760344 (3535.43 seconds)
Cbc0010I After 11600 nodes, 5756 on tree, 1e+50 best solution, best possible 87.760344 (3550.15 seconds)
Cbc0010I After 11700 nodes, 5806 on tree, 1e+50 best solution, best possible 87.760344 (3563.66 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 87.760344), took 1026435 iterations and 11791 nodes (3645.24 seconds)
Cbc0035I Maximum depth 2240, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.056945s)
Total solve time:                         3645.41s (3645.41s in branch-and-bound)
Lower bound:                              87.7603
Upper bound:                              614.428  (gap: 593.36%)
Branch-and-bound nodes:                     11791
Stats: /tmp/jl_P4uLoR/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.056945 [sep]  3645.41 [time]  3645.42 [bb]         8.776034e+01 [lower]         6.144282e+02 [upper]   11791 [nodes]
Performance of                           FBBT:	    280.536s,    15501 runs. fix: 8.11472e-05 shrnk: 0.000280193 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    14.4025s,       10 runs. fix:   0.263158 shrnk:    2.02554 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt
slurmstepd: error: *** JOB 1887377 ON optimum08 CANCELLED AT 2025-01-12T21:51:18 DUE TO TIME LIMIT ***
