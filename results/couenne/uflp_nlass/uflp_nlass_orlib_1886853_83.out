solving instance uflp nlass orlib 64 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 294284.96       49 5.282199
NLP0014I             2      INFEAS 0.99999999       79 1.685812
Loaded instance "/tmp/jl_wMWJzN/model.nl"
Constraints:         2450
Variables:           2416 (816 integer)
Auxiliaries:         3248 (0 integer)

Coin0506I Presolve 8691 (-1750) rows, 3911 (-1753) columns and 18880 (-4365) elements
Clp0006I 0  Obj 0 Primal inf 97.999951 (49)
Clp0006I 248  Obj 1.7659927e-16 Primal inf 130.5435 (198)
Clp0006I 496  Obj 2.0630236e-16 Primal inf 117.73464 (272)
Clp0006I 744  Obj 1.7576479e-16 Primal inf 133.13124 (303)
Clp0006I 992  Obj 1.8992807e-16 Primal inf 181.98727 (319)
Clp0006I 1240  Obj 1.8817731e-16 Primal inf 117.98406 (251)
Clp0006I 1488  Obj 1.7267672e-16 Primal inf 117.66337 (278)
Clp0006I 1736  Obj 1.7939013e-16 Primal inf 154.00846 (315)
Clp0006I 1984  Obj 1.9073146e-16 Primal inf 143.53764 (271)
Clp0006I 2232  Obj 1.9429019e-16 Primal inf 93.962362 (283)
Clp0006I 2480  Obj 1.819785e-16 Primal inf 126.01257 (324)
Clp0006I 2728  Obj 1.8926335e-16 Primal inf 115.0356 (277)
Clp0006I 2976  Obj 16283.751 Primal inf 87.617436 (293)
Clp0006I 3019  Obj 21726.545
Clp0000I Optimal - objective value 21726.545
Clp0032I Optimal objective 21726.54459 - 3019 iterations time 0.142, Presolve 0.03
Clp0000I Optimal - objective value 21726.545
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 21726.545
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1213 added rows had average density of 2
Cbc0013I At root node, 1213 cuts changed objective from 21726.545 to 136601.77 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 11740 row cuts average 2.0 elements, 839 column cuts (2040 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (79.80 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.1210683862e+06 (248.978 seconds)
Cbc0012I Integer solution of 1121068.4 found by Couenne Rounding NLP after 10366 iterations and 1 nodes (218.50 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 7.8969282865e+05 (396.266 seconds)
Cbc0012I Integer solution of 789692.83 found by Couenne Rounding NLP after 10847 iterations and 2 nodes (365.79 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 789692.83 best solution, best possible 157830.3 (1053.66 seconds)
Cbc0010I After 200 nodes, 100 on tree, 789692.83 best solution, best possible 157830.3 (1085.45 seconds)
Cbc0010I After 300 nodes, 150 on tree, 789692.83 best solution, best possible 157830.3 (1113.95 seconds)
Cbc0010I After 400 nodes, 200 on tree, 789692.83 best solution, best possible 157830.3 (1138.27 seconds)
Cbc0010I After 500 nodes, 250 on tree, 789692.83 best solution, best possible 157830.3 (1163.46 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 600 nodes, 295 on tree, 789692.83 best solution, best possible 161630.18 (1785.40 seconds)
Cbc0010I After 700 nodes, 345 on tree, 789692.83 best solution, best possible 161630.18 (1809.22 seconds)
Cbc0010I After 800 nodes, 395 on tree, 789692.83 best solution, best possible 161630.18 (1832.28 seconds)
Cbc0010I After 900 nodes, 445 on tree, 789692.83 best solution, best possible 161630.18 (1856.74 seconds)
Cbc0010I After 1000 nodes, 486 on tree, 789692.83 best solution, best possible 161630.18 (1880.13 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 1100 nodes, 535 on tree, 789692.83 best solution, best possible 164809.96 (2313.32 seconds)
Cbc0010I After 1200 nodes, 585 on tree, 789692.83 best solution, best possible 164809.96 (2342.79 seconds)
Cbc0010I After 1300 nodes, 635 on tree, 789692.83 best solution, best possible 164809.96 (2371.36 seconds)
Cbc0010I After 1400 nodes, 685 on tree, 789692.83 best solution, best possible 164809.96 (2394.46 seconds)
Cbc0010I After 1500 nodes, 735 on tree, 789692.83 best solution, best possible 164809.96 (2419.10 seconds)
Cbc0010I After 1600 nodes, 783 on tree, 789692.83 best solution, best possible 170900.12 (2605.00 seconds)
Cbc0010I After 1700 nodes, 833 on tree, 789692.83 best solution, best possible 170900.12 (2631.59 seconds)
Cbc0010I After 1800 nodes, 883 on tree, 789692.83 best solution, best possible 170900.12 (2655.20 seconds)
Cbc0010I After 1900 nodes, 933 on tree, 789692.83 best solution, best possible 170900.12 (2679.23 seconds)
Cbc0010I After 2000 nodes, 979 on tree, 789692.83 best solution, best possible 171149.07 (2725.09 seconds)
Cbc0010I After 2100 nodes, 1029 on tree, 789692.83 best solution, best possible 171149.07 (2763.28 seconds)
Cbc0010I After 2200 nodes, 1079 on tree, 789692.83 best solution, best possible 171149.07 (2787.15 seconds)
Cbc0010I After 2300 nodes, 1118 on tree, 789692.83 best solution, best possible 172044.18 (2812.19 seconds)
Cbc0010I After 2400 nodes, 1168 on tree, 789692.83 best solution, best possible 172044.18 (2843.29 seconds)
Cbc0010I After 2500 nodes, 1218 on tree, 789692.83 best solution, best possible 172044.18 (2867.58 seconds)
Cbc0010I After 2600 nodes, 1268 on tree, 789692.83 best solution, best possible 172044.18 (2890.86 seconds)
Cbc0010I After 2700 nodes, 1315 on tree, 789692.83 best solution, best possible 172129.53 (2920.18 seconds)
Cbc0010I After 2800 nodes, 1365 on tree, 789692.83 best solution, best possible 172129.53 (2952.55 seconds)
Cbc0010I After 2900 nodes, 1415 on tree, 789692.83 best solution, best possible 172129.53 (2981.51 seconds)
Cbc0010I After 3000 nodes, 1465 on tree, 789692.83 best solution, best possible 172129.53 (3008.59 seconds)
Cbc0010I After 3100 nodes, 1515 on tree, 789692.83 best solution, best possible 172129.53 (3033.19 seconds)
Cbc0010I After 3200 nodes, 1565 on tree, 789692.83 best solution, best possible 172129.53 (3057.46 seconds)
Cbc0010I After 3300 nodes, 1610 on tree, 789692.83 best solution, best possible 173666.79 (3090.41 seconds)
Cbc0010I After 3400 nodes, 1660 on tree, 789692.83 best solution, best possible 173666.79 (3124.12 seconds)
Cbc0010I After 3500 nodes, 1710 on tree, 789692.83 best solution, best possible 173666.79 (3156.38 seconds)
Cbc0010I After 3600 nodes, 1760 on tree, 789692.83 best solution, best possible 173666.79 (3188.25 seconds)
Cbc0010I After 3700 nodes, 1810 on tree, 789692.83 best solution, best possible 173666.79 (3218.51 seconds)
Cbc0010I After 3800 nodes, 1860 on tree, 789692.83 best solution, best possible 173666.79 (3245.51 seconds)
Cbc0010I After 3900 nodes, 1910 on tree, 789692.83 best solution, best possible 173666.79 (3270.51 seconds)
Cbc0010I After 4000 nodes, 1960 on tree, 789692.83 best solution, best possible 173666.79 (3294.77 seconds)
Cbc0010I After 4100 nodes, 2007 on tree, 789692.83 best solution, best possible 176356.97 (3322.91 seconds)
Cbc0010I After 4200 nodes, 2057 on tree, 789692.83 best solution, best possible 176356.97 (3347.02 seconds)
Cbc0010I After 4300 nodes, 2107 on tree, 789692.83 best solution, best possible 176356.97 (3370.61 seconds)
Cbc0010I After 4400 nodes, 2152 on tree, 789692.83 best solution, best possible 180588.62 (3396.75 seconds)
Cbc0010I After 4500 nodes, 2202 on tree, 789692.83 best solution, best possible 180588.62 (3425.44 seconds)
Cbc0010I After 4600 nodes, 2252 on tree, 789692.83 best solution, best possible 180588.62 (3450.31 seconds)
Cbc0010I After 4700 nodes, 2299 on tree, 789692.83 best solution, best possible 180588.62 (3475.18 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 789692.83 (best possible 180588.62), took 1810207 iterations and 4773 nodes (3573.56 seconds)
Cbc0035I Maximum depth 415, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.059141s)
Total solve time:                         3573.92s (3573.92s in branch-and-bound)
Lower bound:                               180589
Upper bound:                               789693  (gap: 337.29%)
Branch-and-bound nodes:                      4773
Stats: /tmp/jl_wMWJzN/model.nl 2416 [var]  816 [int] 2450 [con] 3248 [aux]  10441 [root]    10441 [tot] 0.059141 [sep]  3573.92 [time]  3573.93 [bb]         1.805886e+05 [lower]         7.896928e+05 [upper]    4773 [nodes]
Performance of                           FBBT:	    190.863s,     9334 runs. fix:          0 shrnk: 0.00437127 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     16.765s,       12 runs. fix:   0.428571 shrnk:    15.0375 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap64.txt
