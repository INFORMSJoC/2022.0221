solving instance uflp nlass holmberg 54 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4400.1889     1760 96.381564
NLP0014I             2      FAILED 75054.663     3000 128.97576
NLP0014I *           1         OPT 7445.0245      480 17.243714   resolve robustness
Couenne: new cutoff value 7.4450244829e+03 (276.828 seconds)
Loaded instance "/tmp/jl_13vZvC/model.nl"
Constraints:         3100
Variables:           3010 (1010 integer)
Auxiliaries:         4101 (0 integer)

Coin0506I Presolve 13991 (-1110) rows, 5901 (-1210) columns and 30791 (-2320) elements
Clp0006I 0  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 294  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 588  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 882  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 1176  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 1470  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 1764  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0029I End of values pass after 2000 iterations
Clp0006I 2000  Obj 0 Primal inf 543.02296 (100) Dual inf 1.7641063e+13 (1000)
Clp0006I 2294  Obj 709.37886 Primal inf 430.26969 (109) Dual inf 2.0209854e+13 (1001)
Clp0006I 2588  Obj 824.35828 Primal inf 311.02278 (120) Dual inf 2.0341158e+08 (1002)
Clp0006I 2882  Obj 922.99802 Primal inf 199.25402 (119) Dual inf 2.0770074e+08 (944)
Clp0006I 3176  Obj 949.72455 Primal inf 101.37847 (100) Dual inf 1.832316e+08 (802)
Clp0006I 3470  Obj 960.94403 Primal inf 12.652681 (50) Dual inf 65004053 (374)
Clp0006I 3764  Obj 619.97177 Dual inf 12803.744 (66)
Clp0006I 4058  Obj 514.16121 Dual inf 1595.3305 (34)
Clp0006I 4332  Obj 485.76013 Dual inf 3338.7996 (34)
Clp0006I 4560  Obj 387.77595 Dual inf 1154.3478 (23)
Clp0006I 4778  Obj 361.20327 Dual inf 264.17597 (30)
Clp0006I 4877  Obj 361.20327
Clp0000I Optimal - objective value 361.20327
Clp0000I Optimal - objective value 361.20327
Clp0032I Optimal objective 361.2032699 - 4877 iterations time 0.662, Presolve 0.08
Clp0000I Optimal - objective value 361.20327
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 361.20327
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 1181 added rows had average density of 2
Cbc0013I At root node, 1181 cuts changed objective from 361.20327 to 976.81433 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 16816 row cuts average 2.0 elements, 203 column cuts (1372 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (363.10 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1227.9646 (2936.22 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1227.9646 (2972.39 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1227.9646 (3002.66 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1227.9646 (3027.79 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1227.9646 (3054.15 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1227.9646 (3080.79 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1227.9646 (3108.76 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 1227.9646 (3136.33 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 1227.9646 (3164.14 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 1227.9646 (3192.46 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 1227.9646 (3219.00 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 1227.9646 (3245.13 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 1227.9646 (3269.14 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 1227.9646 (3291.22 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 1227.9646 (3312.66 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1227.9646), took 344361 iterations and 1544 nodes (3324.96 seconds)
Cbc0035I Maximum depth 772, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      15101
Linearization cuts added in total:          15101  (separation time: 0.08637s)
Total solve time:                         3325.63s (3325.63s in branch-and-bound)
Lower bound:                              1227.96
Upper bound:                              7445.02  (gap: 505.88%)
Branch-and-bound nodes:                      1544
Stats: /tmp/jl_13vZvC/model.nl 3010 [var] 1010 [int] 3100 [con] 4101 [aux]  15101 [root]    15101 [tot] 0.08637 [sep]  3325.63 [time]  3325.65 [bb]         1.227965e+03 [lower]         7.445024e+03 [upper]    1544 [nodes]
Performance of                           FBBT:	     84.845s,     2863 runs. fix:          0 shrnk:     235.65 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.97954s,        6 runs. fix:   0.363636 shrnk:    1.55772 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p54
