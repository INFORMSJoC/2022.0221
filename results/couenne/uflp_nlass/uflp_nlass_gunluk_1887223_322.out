solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-2.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.0825972231e+03 (61.8542 seconds)
61.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 526.58089      279 195.3098
NLP0014I             2      INFEAS 0.024721193       65 5.478502
Loaded instance "/tmp/jl_UfM115/model.nl"
Constraints:         9680
Variables:           9640 (3240 integer)
Auxiliaries:         6480 (0 integer)

Coin0506I Presolve 41612 (-69) rows, 15972 (-148) columns and 99035 (-285) elements
Clp0006I 0  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 433  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 866  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 1299  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 1732  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 2165  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 2598  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0006I 3031  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (3201)
Clp0029I End of values pass after 3201 iterations
Clp0006I 3201  Obj 0 Primal inf 86.609625 (80) Dual inf 4.7527383e+13 (6400)
Clp0006I 3634  Obj 258.07344 Primal inf 59.213416 (247) Dual inf 4.6219899e+13 (6197)
Clp0006I 4067  Obj 628.15954 Primal inf 28.25114 (166) Dual inf 8.946441e+08 (5554)
Clp0006I 4500  Obj 878.678 Primal inf 1.5367696 (32) Dual inf 23389964 (3655)
Clp0006I 4933  Obj 743.03648 Dual inf 182861.88 (3651)
Clp0006I 5366  Obj 743.03648 Dual inf 190402.88 (3631)
Clp0006I 5799  Obj 743.03648 Dual inf 197349.76 (3611)
Clp0006I 6232  Obj 734.76791 Dual inf 203932.01 (3547)
Clp0006I 6665  Obj 72.638782 Dual inf 207120.44 (3259)
Clp0006I 7098  Obj -815.04923 Dual inf 210557.25 (2909)
Clp0006I 7531  Obj -1724.121 Dual inf 157935.96 (2788)
Clp0006I 7964  Obj -2238.1232 Dual inf 158038.43 (2616)
Clp0006I 8397  Obj -2778.188 Dual inf 293960.82 (2463)
Clp0006I 8830  Obj -3156.9839 Dual inf 97523.953 (2113)
Clp0006I 9263  Obj -3534.1501 Dual inf 243030.68 (1986)
Clp0006I 9696  Obj -4225.2299 Dual inf 244171.28 (1714)
Clp0006I 10129  Obj -4617.5 Dual inf 67561.186 (1590)
Clp0006I 10562  Obj -4845.2694 Dual inf 35248.671 (967)
Clp0006I 10995  Obj -4933.2636 Dual inf 9665.9465 (539)
Clp0006I 11428  Obj -4985.0136 Dual inf 218.61562 (102)
Clp0006I 11541  Obj -4987.4133
Clp0000I Optimal - objective value -4987.4133
Clp0032I Optimal objective -4987.413319 - 11541 iterations time 1.812
Clp0000I Optimal - objective value -4987.4122
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -4987.4122
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 943 added rows had average density of 2
Cbc0013I At root node, 943 cuts changed objective from -4987.4122 to -4805.8276 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 5705 row cuts average 2.0 elements, 103734 column cuts (104659 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (300.21 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -4783.962 (2191.39 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -4783.962 (2248.85 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -4783.962 (2308.54 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -4783.962 (2369.01 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -4783.962 (2433.75 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -4783.962 (2497.94 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -4783.962 (2560.99 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -4783.962 (2626.57 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -4783.962 (2692.21 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -4783.962 (2761.62 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -4783.962 (2829.59 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -4783.962 (2900.01 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -4783.962 (2970.17 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -4783.962 (3046.21 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -4783.962 (3122.66 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -4783.962 (3202.54 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -4783.962 (3277.71 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -4783.962), took 975425 iterations and 1763 nodes (3357.41 seconds)
Cbc0035I Maximum depth 882, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      41681
Linearization cuts added in total:          41681  (separation time: 0.09834s)
Total solve time:                         3359.25s (3359.25s in branch-and-bound)
Lower bound:                             -4783.96
Upper bound:                               2082.6  (gap: 143.50%)
Branch-and-bound nodes:                      1763
Stats: /tmp/jl_UfM115/model.nl 9640 [var] 3240 [int] 9680 [con] 6480 [aux]  41681 [root]    41681 [tot] 0.09834 [sep]  3359.25 [time]  3359.29 [bb]        -4.783962e+03 [lower]         2.082597e+03 [upper]    1763 [nodes]
Performance of                           FBBT:	    52.8309s,     3520 runs. fix:          0 shrnk:    705.021 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    33.6506s,        7 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-2.txt
