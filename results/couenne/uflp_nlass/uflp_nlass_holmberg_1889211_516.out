solving instance uflp nlass holmberg 52 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8136.4372     1211 67.898673
NLP0014I             2      INFEAS 0.096073225       67 1.905741
Loaded instance "/tmp/jl_1rTXDR/model.nl"
Constraints:         3100
Variables:           3010 (1010 integer)
Auxiliaries:         7100 (0 integer)

Coin0506I Presolve 10103 (-4998) rows, 5010 (-5100) columns and 26796 (-8314) elements
Clp0006I 0  Obj 0 Primal inf 143111 (2102) Dual inf 5.0542749e+12 (4004)
Clp0006I 275  Obj 35764.114 Primal inf 105666.17 (2076) Dual inf 1.2354119e+13 (3738)
Clp0006I 550  Obj 69427.459 Primal inf 68333.073 (2047) Dual inf 1.9562734e+13 (3463)
Clp0006I 825  Obj 93049.748 Primal inf 30887.722 (2020) Dual inf 2.6511849e+13 (3188)
Clp0006I 1100  Obj 101712.16 Primal inf 7041.2427 (1967) Dual inf 3.0809462e+13 (2946)
Clp0006I 1375  Obj 90828.306 Primal inf 6381.7889 (1850) Dual inf 2.9943688e+13 (2763)
Clp0006I 1650  Obj 79149.66 Primal inf 5725.4728 (1684) Dual inf 2.7470376e+13 (2593)
Clp0006I 1925  Obj 69043.606 Primal inf 5060.2306 (1583) Dual inf 2.7151224e+13 (2492)
Clp0006I 2200  Obj 58351.048 Primal inf 4403.0347 (1400) Dual inf 2.4153335e+13 (2311)
Clp0006I 2475  Obj 50514.615 Primal inf 3745.9362 (1310) Dual inf 2.4135453e+13 (2215)
Clp0006I 2750  Obj 39347.283 Primal inf 3081.8732 (1135) Dual inf 2.1452605e+13 (2036)
Clp0006I 3025  Obj 31038.309 Primal inf 2423.9096 (1026) Dual inf 2.0890348e+13 (1933)
Clp0006I 3300  Obj 19781.511 Primal inf 1765.2771 (870) Dual inf 1.8734535e+13 (1770)
Clp0006I 3575  Obj 8242.6158 Primal inf 1106.0998 (745) Dual inf 1.7684451e+13 (1582)
Clp0006I 3850  Obj 255.1171 Primal inf 446.23232 (653) Dual inf 1.8074804e+13 (1464)
Clp0029I End of values pass after 4000 iterations
Clp0006I 4000  Obj -2693.9125 Primal inf 88.116691 (603) Dual inf 1.8563041e+13 (1414)
Clp0006I 4239  Obj -4307.9505 Dual inf 128311.97 (815)
Clp0006I 4442  Obj -5799.1726 Dual inf 66578.612 (885)
Clp0006I 4623  Obj -6859.6896 Dual inf 33040.022 (815)
Clp0006I 4898  Obj -7022.003 Dual inf 68815.184 (597)
Clp0006I 5111  Obj -7399.9438 Dual inf 17217.689 (682)
Clp0006I 5386  Obj -7474.982 Dual inf 3215.9277 (363)
Clp0006I 5634  Obj -7526.7312 Dual inf 6403.6921 (337)
Clp0006I 5846  Obj -7596.821 Dual inf 3568.2067 (204)
Clp0006I 6062  Obj -7602.8917
Clp0000I Optimal - objective value -7602.8917
Clp0000I Optimal - objective value -7602.8915
Clp0032I Optimal objective -7602.891501 - 6062 iterations time 0.972, Presolve 0.05
Clp0000I Optimal - objective value -7602.8915
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -7602.8915
Optimality Based BT: 399 improved bounds
Probing: 720 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from -7602.8915 to -7602.8915 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (980.74 seconds)
Optimality Based BT: 162 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 304 iterations and 3 nodes (3487.69 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      15101
Linearization cuts added in total:          15101  (separation time: 0.177642s)
Total solve time:                         3488.67s (3488.67s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         3
Stats: /tmp/jl_1rTXDR/model.nl 3010 [var] 1010 [int] 3100 [con] 7100 [aux]  15101 [root]    15101 [tot] 0.177642 [sep]  3488.67 [time]  3488.69 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       3 [nodes]
Performance of                           FBBT:	   0.511279s,        7 runs. fix:          0 shrnk:        143 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    477.086s,        4 runs. fix:          0 shrnk: 1.53303e-07 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p52
