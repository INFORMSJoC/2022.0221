solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-10.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 27.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 93.62742       46 141.66569
NLP0014I             2         OPT 1296.6451       44 3.075983
Couenne: new cutoff value 1.2966450762e+03 (209.537 seconds)
Loaded instance "/tmp/jl_H6eRwe/model.nl"
Constraints:         9680
Variables:           9640 (3240 integer)
Auxiliaries:         3281 (0 integer)

Coin0506I Presolve 25591 (-90) rows, 12751 (-170) columns and 57461 (-260) elements
Clp0006I 0  Obj 0 Primal inf 79.99992 (80) Dual inf 1.6833934e+13 (3200)
Clp0006I 352  Obj 25.938774 Primal inf 75.512624 (82) Dual inf 1.7230134e+13 (3199)
Clp0006I 704  Obj 61.50635 Primal inf 67.476375 (79) Dual inf 28442217 (3046)
Clp0006I 1056  Obj 97.715044 Primal inf 60.73098 (88) Dual inf 29160137 (2983)
Clp0006I 1408  Obj 127.06446 Primal inf 54.642632 (102) Dual inf 29634260 (2949)
Clp0006I 1760  Obj 183.06467 Primal inf 46.560252 (101) Dual inf 27826662 (2754)
Clp0006I 2112  Obj 211.56872 Primal inf 37.375808 (97) Dual inf 23654566 (2458)
Clp0006I 2464  Obj 265.59575 Primal inf 28.114573 (84) Dual inf 20330811 (2369)
Clp0006I 2816  Obj 313.67241 Primal inf 17.152209 (70) Dual inf 10653962 (1926)
Clp0006I 3168  Obj 407.975 Dual inf 22048.245 (2009)
Clp0006I 3520  Obj 275.34857 Dual inf 12895.439 (1251)
Clp0006I 3872  Obj 188.63672 Dual inf 6166.7308 (606)
Clp0006I 4224  Obj 113.66371 Dual inf 2082.6464 (338)
Clp0006I 4576  Obj 46.685865 Dual inf 1298.49 (215)
Clp0006I 4928  Obj 18.216205 Dual inf 870.70082 (110)
Clp0006I 5280  Obj 8.6249994 Dual inf 108.25985 (45)
Clp0006I 5632  Obj 8.6249994 Dual inf 867.01089 (239)
Clp0006I 5862  Obj 7.8749994
Clp0000I Optimal - objective value 7.8749994
Clp0032I Optimal objective 7.87499941 - 5862 iterations time 0.982, Presolve 0.14
Clp0000I Optimal - objective value 7.875
Cbc0012I Integer solution of 1296.6451 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.04 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 7.875
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 3605 added rows had average density of 2
Cbc0013I At root node, 3605 cuts changed objective from 7.875 to 81.65583 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 44701 row cuts average 2.0 elements, 15860 column cuts (19033 active)
Cbc0010I After 0 nodes, 1 on tree, 1296.6451 best solution, best possible 81.65583 (235.27 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.2198253504e+03 (799.01 seconds)
Cbc0012I Integer solution of 1219.8254 found by Couenne Rounding NLP after 42890 iterations and 1 nodes (586.98 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0827210363e+03 (1033.06 seconds)
Cbc0012I Integer solution of 1082.721 found by Couenne Rounding NLP after 52071 iterations and 2 nodes (821.03 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 9.6299500914e+02 (1348.87 seconds)
Cbc0012I Integer solution of 962.99501 found by Couenne Rounding NLP after 53060 iterations and 3 nodes (1136.84 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 962.99501 best solution, best possible 82.374172 (1863.05 seconds)
Cbc0010I After 200 nodes, 100 on tree, 962.99501 best solution, best possible 82.374172 (1963.03 seconds)
Cbc0010I After 300 nodes, 150 on tree, 962.99501 best solution, best possible 82.374172 (2050.68 seconds)
Cbc0010I After 400 nodes, 200 on tree, 962.99501 best solution, best possible 82.374172 (2119.13 seconds)
Cbc0010I After 500 nodes, 250 on tree, 962.99501 best solution, best possible 82.374172 (2177.86 seconds)
Cbc0010I After 600 nodes, 300 on tree, 962.99501 best solution, best possible 82.374172 (2227.73 seconds)
Cbc0010I After 700 nodes, 350 on tree, 962.99501 best solution, best possible 82.374172 (2272.79 seconds)
Cbc0010I After 800 nodes, 400 on tree, 962.99501 best solution, best possible 82.374172 (2319.08 seconds)
Cbc0010I After 900 nodes, 450 on tree, 962.99501 best solution, best possible 82.374172 (2362.64 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 962.99501 best solution, best possible 82.374172 (2401.74 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 962.99501 best solution, best possible 82.374172 (2439.71 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 962.99501 best solution, best possible 82.374172 (2477.07 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 962.99501 best solution, best possible 82.374172 (2509.37 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 962.99501 best solution, best possible 82.374172 (2540.30 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 962.99501 best solution, best possible 82.374172 (2570.45 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 962.99501 best solution, best possible 82.374172 (2601.17 seconds)
Couenne: new cutoff value 7.7836474758e+02 (2824.45 seconds)
Cbc0004I Integer solution of 778.36475 found after 1571278 iterations and 1641 nodes (2612.46 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1700 nodes, 809 on tree, 778.36475 best solution, best possible 83.736083 (3186.78 seconds)
Cbc0010I After 1800 nodes, 859 on tree, 778.36475 best solution, best possible 83.736083 (3307.10 seconds)
Cbc0010I After 1900 nodes, 909 on tree, 778.36475 best solution, best possible 83.736083 (3380.07 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 778.36475 (best possible 83.736083), took 2106162 iterations and 1915 nodes (3394.31 seconds)
Cbc0035I Maximum depth 820, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      25681
Linearization cuts added in total:          25681  (separation time: 0.072989s)
Total solve time:                         3395.51s (3395.51s in branch-and-bound)
Lower bound:                              83.7361
Upper bound:                              778.365  (gap: 819.76%)
Branch-and-bound nodes:                      1915
Stats: /tmp/jl_H6eRwe/model.nl 9640 [var] 3240 [int] 9680 [con] 3281 [aux]  25681 [root]    25681 [tot] 0.072989 [sep]  3395.51 [time]  3395.54 [bb]         8.373608e+01 [lower]         7.783647e+02 [upper]    1915 [nodes]
Performance of                           FBBT:	    38.8496s,     3787 runs. fix:          0 shrnk:     745.88 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    50.4451s,        9 runs. fix:   0.232558 shrnk:    61.5702 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-10.txt
