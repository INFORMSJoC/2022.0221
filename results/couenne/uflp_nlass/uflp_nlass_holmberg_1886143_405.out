solving instance uflp nlass holmberg 41 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2463.2816     1801 89.409023
NLP0014I             2      FAILED 120096.93     3000 118.68537
NLP0014I             1      FAILED 19045.845     3000 111.52292   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_JaTCm7/model.nl"
Constraints:         2790
Variables:           2710 (910 integer)
Auxiliaries:         3691 (0 integer)

Coin0506I Presolve 11700 (-1891) rows, 4420 (-1981) columns and 25020 (-4781) elements
Clp0006I 0  Obj 0 Primal inf 3056.1003 (1890)
Clp0006I 283  Obj 0 Primal inf 3466.1738 (1980)
Clp0006I 566  Obj 0 Primal inf 3466.1738 (1980)
Clp0006I 849  Obj 0 Primal inf 3506.5939 (1980)
Clp0006I 1132  Obj 3.9510592e-16 Primal inf 3980.9664 (2134)
Clp0006I 1415  Obj 8.623329e-16 Primal inf 4645.5807 (2285)
Clp0006I 1698  Obj 1.2745186e-15 Primal inf 7234.8726 (2591)
Clp0006I 1981  Obj 1.1902447e-15 Primal inf 8596.7208 (2595)
Clp0006I 2264  Obj 1.181978e-15 Primal inf 9567.7178 (2558)
Clp0006I 2547  Obj 1.0674635e-15 Primal inf 9471.4933 (2436)
Clp0006I 2830  Obj 1.4521285e-15 Primal inf 5626.7719 (2191)
Clp0006I 3113  Obj 5.1739634e-16 Primal inf 225.85889 (714)
Clp0006I 3396  Obj 314.13589 Primal inf 117.32891 (548)
Clp0006I 3679  Obj 331.40021 Primal inf 128.3958 (463)
Clp0006I 3962  Obj 358.60958 Primal inf 95.035652 (214)
Clp0006I 4086  Obj 361.20327
Clp0000I Optimal - objective value 361.20327
Clp0032I Optimal objective 361.2032699 - 4086 iterations time 0.282, Presolve 0.03
Clp0000I Optimal - objective value 361.20327
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 361.20327
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 959 added rows had average density of 2
Cbc0013I At root node, 959 cuts changed objective from 361.20327 to 762.178 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 12308 row cuts average 2.0 elements, 180 column cuts (1138 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (251.83 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1004.8046 (2374.58 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1004.8046 (2395.15 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1004.8046 (2418.05 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1004.8046 (2441.33 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1004.8046 (2465.62 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1004.8046 (2490.14 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1004.8046 (2514.49 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 1004.8046 (2538.78 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 1004.8046 (2563.04 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 1004.8046 (2584.04 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 1004.8046 (2607.27 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 1004.8046 (2629.04 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 1004.8046 (2650.49 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 1004.8046 (2671.57 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 1004.8046 (2692.40 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 1004.8046 (2711.65 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 1004.8046 (2729.39 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 1004.8046 (2746.51 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 1004.8046 (2764.45 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 1004.8046 (2782.22 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 1004.8046 (2799.45 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 1004.8046 (2816.43 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 1004.8046 (2834.15 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 1004.8046 (2851.28 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible 1004.8046 (2868.14 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible 1004.8046 (2885.22 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible 1004.8046 (2902.12 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible 1004.8046 (2919.20 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible 1004.8046 (2936.03 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible 1004.8046 (2952.83 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible 1004.8046 (2969.97 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible 1004.8046 (2986.89 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible 1004.8046 (3003.77 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible 1004.8046 (3020.96 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible 1004.8046 (3038.08 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible 1004.8046 (3055.25 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible 1004.8046 (3072.32 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible 1004.8046 (3089.14 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible 1004.8046 (3106.09 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible 1004.8046 (3122.69 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible 1004.8046 (3139.15 seconds)
Cbc0010I After 4200 nodes, 2100 on tree, 1e+50 best solution, best possible 1004.8046 (3155.44 seconds)
Cbc0010I After 4300 nodes, 2150 on tree, 1e+50 best solution, best possible 1004.8046 (3171.90 seconds)
Cbc0010I After 4400 nodes, 2200 on tree, 1e+50 best solution, best possible 1004.8046 (3188.19 seconds)
Cbc0010I After 4500 nodes, 2250 on tree, 1e+50 best solution, best possible 1004.8046 (3204.63 seconds)
Cbc0010I After 4600 nodes, 2300 on tree, 1e+50 best solution, best possible 1004.8046 (3221.08 seconds)
Cbc0010I After 4700 nodes, 2350 on tree, 1e+50 best solution, best possible 1004.8046 (3237.45 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1004.8046), took 182099 iterations and 4798 nodes (3254.98 seconds)
Cbc0035I Maximum depth 2399, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      13591
Linearization cuts added in total:          13591  (separation time: 0.073996s)
Total solve time:                         3255.27s (3255.27s in branch-and-bound)
Lower bound:                               1004.8
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                      4798
Stats: /tmp/jl_JaTCm7/model.nl 2710 [var]  910 [int] 2790 [con] 3691 [aux]  13591 [root]    13591 [tot] 0.073996 [sep]  3255.27 [time]  3255.28 [bb]         1.004805e+03 [lower]         1.000000e+50 [upper]    4798 [nodes]
Performance of                           FBBT:	     156.88s,     6145 runs. fix:          0 shrnk: 3.24249e-06 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.36788s,        6 runs. fix:   0.363636 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p41
