solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-4.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 312.28526       49 3.316649
NLP0014I             2      FAILED 5502.526      134 4.099761
NLP0014I *           1         OPT 797.52563      122 3.425606   resolve robustness
Couenne: new cutoff value 7.9752563507e+02 (31.4012 seconds)
Loaded instance "/tmp/jl_kOUpu7/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 11191 (-850) rows, 4771 (-890) columns and 24721 (-1740) elements
Clp0006I 0  Obj 0 Primal inf 2425.0396 (1640)
Clp0006I 280  Obj 0 Primal inf 2441.35 (1680)
Clp0006I 560  Obj 0 Primal inf 2159.1549 (1680)
Clp0006I 840  Obj 1.0692692e-16 Primal inf 2074.5517 (1705)
Clp0006I 1120  Obj 1.005114e-14 Primal inf 2556.301 (1723)
Clp0006I 1400  Obj 1.0918875e-14 Primal inf 2572.8832 (1725)
Clp0006I 1680  Obj 1.3642413e-14 Primal inf 2667.2545 (1738)
Clp0006I 1960  Obj 1.6266008e-14 Primal inf 2989.6912 (1769)
Clp0006I 2240  Obj 1.9767072e-14 Primal inf 2941.2273 (1764)
Clp0006I 2520  Obj 2.3146593e-14 Primal inf 3265.2971 (1766)
Clp0006I 2800  Obj 3.5495668e-14 Primal inf 5257.465 (1944)
Clp0006I 3080  Obj 3.0837925e-14 Primal inf 3413.9217 (1674)
Clp0006I 3360  Obj 1.7842992e-14 Primal inf 1072.3192 (1062)
Clp0006I 3640  Obj 3.9945183e-14 Primal inf 846.03789 (569)
Clp0006I 3920  Obj 12.644407 Primal inf 83.768233 (339)
Clp0006I 4200  Obj 20.051938 Primal inf 51.593822 (172)
Clp0006I 4468  Obj 21.094871
Clp0000I Optimal - objective value 21.094871
Clp0032I Optimal objective 21.09487115 - 4468 iterations time 0.462, Presolve 0.06
Clp0000I Optimal - objective value 21.094871
Cbc0012I Integer solution of 797.52564 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.02 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 21.094871
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 962 added rows had average density of 2
Cbc0013I At root node, 962 cuts changed objective from 21.094871 to 86.77058 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14140 row cuts average 2.0 elements, 446 column cuts (1195 active)
Cbc0010I After 0 nodes, 1 on tree, 797.52564 best solution, best possible 86.77058 (85.19 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 7.2915741316e+02 (747.767 seconds)
Cbc0012I Integer solution of 729.15741 found by Couenne Rounding NLP after 17881 iterations and 5 nodes (715.54 seconds)
Cbc0010I After 100 nodes, 50 on tree, 729.15741 best solution, best possible 92.003415 (1133.79 seconds)
Cbc0010I After 200 nodes, 100 on tree, 729.15741 best solution, best possible 92.003415 (1162.14 seconds)
Cbc0010I After 300 nodes, 150 on tree, 729.15741 best solution, best possible 92.003415 (1182.99 seconds)
Couenne: new cutoff value 7.0689490800e+02 (1220.47 seconds)
Cbc0004I Integer solution of 706.89491 found after 175996 iterations and 329 nodes (1188.29 seconds)
Cbc0010I After 400 nodes, 199 on tree, 706.89491 best solution, best possible 93.930923 (1302.98 seconds)
Cbc0010I After 500 nodes, 249 on tree, 706.89491 best solution, best possible 93.930923 (1329.03 seconds)
Cbc0010I After 600 nodes, 299 on tree, 706.89491 best solution, best possible 93.930923 (1342.82 seconds)
Cbc0010I After 700 nodes, 349 on tree, 706.89491 best solution, best possible 93.930923 (1363.27 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 394 on tree, 706.89491 best solution, best possible 93.988964 (1862.75 seconds)
Cbc0010I After 900 nodes, 444 on tree, 706.89491 best solution, best possible 93.988964 (1903.41 seconds)
Cbc0010I After 1000 nodes, 494 on tree, 706.89491 best solution, best possible 93.988964 (1932.39 seconds)
Cbc0010I After 1100 nodes, 544 on tree, 706.89491 best solution, best possible 93.988964 (1951.23 seconds)
Cbc0010I After 1200 nodes, 594 on tree, 706.89491 best solution, best possible 93.988964 (1970.34 seconds)
Cbc0010I After 1300 nodes, 644 on tree, 706.89491 best solution, best possible 93.988964 (1990.95 seconds)
Cbc0010I After 1400 nodes, 690 on tree, 706.89491 best solution, best possible 94.223666 (2212.30 seconds)
Cbc0010I After 1500 nodes, 740 on tree, 706.89491 best solution, best possible 94.223666 (2251.30 seconds)
Cbc0010I After 1600 nodes, 790 on tree, 706.89491 best solution, best possible 94.223666 (2277.90 seconds)
Cbc0010I After 1700 nodes, 840 on tree, 706.89491 best solution, best possible 94.223666 (2299.88 seconds)
Cbc0010I After 1800 nodes, 890 on tree, 706.89491 best solution, best possible 94.223666 (2317.40 seconds)
Cbc0010I After 1900 nodes, 940 on tree, 706.89491 best solution, best possible 94.223666 (2335.65 seconds)
Cbc0010I After 2000 nodes, 988 on tree, 706.89491 best solution, best possible 94.231443 (2385.22 seconds)
Cbc0010I After 2100 nodes, 1038 on tree, 706.89491 best solution, best possible 94.231443 (2417.56 seconds)
Cbc0010I After 2200 nodes, 1088 on tree, 706.89491 best solution, best possible 94.231443 (2439.84 seconds)
Cbc0010I After 2300 nodes, 1138 on tree, 706.89491 best solution, best possible 94.231443 (2456.85 seconds)
Cbc0010I After 2400 nodes, 1188 on tree, 706.89491 best solution, best possible 94.231443 (2473.37 seconds)
Cbc0010I After 2500 nodes, 1238 on tree, 706.89491 best solution, best possible 94.231443 (2491.86 seconds)
Cbc0010I After 2600 nodes, 1285 on tree, 706.89491 best solution, best possible 94.231443 (2511.10 seconds)
Cbc0010I After 2700 nodes, 1333 on tree, 706.89491 best solution, best possible 94.304945 (2553.39 seconds)
Cbc0010I After 2800 nodes, 1383 on tree, 706.89491 best solution, best possible 94.304945 (2590.28 seconds)
Cbc0010I After 2900 nodes, 1433 on tree, 706.89491 best solution, best possible 94.304945 (2616.03 seconds)
Cbc0010I After 3000 nodes, 1483 on tree, 706.89491 best solution, best possible 94.304945 (2636.05 seconds)
Cbc0010I After 3100 nodes, 1533 on tree, 706.89491 best solution, best possible 94.304945 (2653.52 seconds)
Cbc0010I After 3200 nodes, 1583 on tree, 706.89491 best solution, best possible 94.304945 (2672.03 seconds)
Cbc0010I After 3300 nodes, 1632 on tree, 706.89491 best solution, best possible 94.304945 (2691.14 seconds)
Cbc0010I After 3400 nodes, 1682 on tree, 706.89491 best solution, best possible 94.304945 (2708.27 seconds)
Cbc0010I After 3500 nodes, 1732 on tree, 706.89491 best solution, best possible 94.304945 (2724.27 seconds)
Cbc0010I After 3600 nodes, 1782 on tree, 706.89491 best solution, best possible 94.304945 (2738.32 seconds)
Cbc0010I After 3700 nodes, 1832 on tree, 706.89491 best solution, best possible 94.304945 (2751.65 seconds)
Cbc0010I After 3800 nodes, 1882 on tree, 706.89491 best solution, best possible 94.304945 (2764.89 seconds)
Cbc0010I After 3900 nodes, 1932 on tree, 706.89491 best solution, best possible 94.304945 (2778.48 seconds)
Cbc0010I After 4000 nodes, 1982 on tree, 706.89491 best solution, best possible 94.304945 (2791.99 seconds)
Cbc0010I After 4100 nodes, 2032 on tree, 706.89491 best solution, best possible 94.304945 (2805.18 seconds)
Cbc0010I After 4200 nodes, 2082 on tree, 706.89491 best solution, best possible 94.304945 (2818.23 seconds)
Cbc0010I After 4300 nodes, 2132 on tree, 706.89491 best solution, best possible 94.304945 (2831.36 seconds)
Cbc0010I After 4400 nodes, 2182 on tree, 706.89491 best solution, best possible 94.304945 (2844.60 seconds)
Cbc0010I After 4500 nodes, 2232 on tree, 706.89491 best solution, best possible 94.304945 (2857.93 seconds)
Cbc0010I After 4600 nodes, 2282 on tree, 706.89491 best solution, best possible 94.304945 (2871.38 seconds)
Cbc0010I After 4700 nodes, 2332 on tree, 706.89491 best solution, best possible 94.304945 (2884.81 seconds)
Cbc0010I After 4800 nodes, 2382 on tree, 706.89491 best solution, best possible 94.304945 (2898.20 seconds)
Cbc0010I After 4900 nodes, 2432 on tree, 706.89491 best solution, best possible 94.304945 (2911.23 seconds)
Cbc0010I After 5000 nodes, 2481 on tree, 706.89491 best solution, best possible 94.304945 (2923.38 seconds)
Cbc0010I After 5100 nodes, 2531 on tree, 706.89491 best solution, best possible 94.304945 (2935.14 seconds)
Couenne: new cutoff value 7.0447047114e+02 (2972.53 seconds)
Cbc0010I After 5200 nodes, 2579 on tree, 706.89491 best solution, best possible 94.355176 (2989.17 seconds)
Cbc0010I After 5300 nodes, 2629 on tree, 706.89491 best solution, best possible 94.355176 (3027.74 seconds)
Cbc0010I After 5400 nodes, 2679 on tree, 706.89491 best solution, best possible 94.355176 (3052.02 seconds)
Cbc0010I After 5500 nodes, 2729 on tree, 706.89491 best solution, best possible 94.355176 (3072.78 seconds)
Cbc0010I After 5600 nodes, 2779 on tree, 706.89491 best solution, best possible 94.355176 (3090.94 seconds)
Cbc0010I After 5700 nodes, 2829 on tree, 706.89491 best solution, best possible 94.355176 (3107.53 seconds)
Cbc0010I After 5800 nodes, 2879 on tree, 706.89491 best solution, best possible 94.355176 (3125.27 seconds)
Cbc0010I After 5900 nodes, 2929 on tree, 706.89491 best solution, best possible 94.355176 (3142.95 seconds)
Cbc0010I After 6000 nodes, 2979 on tree, 706.89491 best solution, best possible 94.355176 (3158.59 seconds)
Cbc0010I After 6100 nodes, 3029 on tree, 706.89491 best solution, best possible 94.355176 (3172.40 seconds)
Cbc0010I After 6200 nodes, 3079 on tree, 706.89491 best solution, best possible 94.355176 (3185.77 seconds)
Cbc0010I After 6300 nodes, 3129 on tree, 706.89491 best solution, best possible 94.355176 (3198.17 seconds)
Cbc0010I After 6400 nodes, 3179 on tree, 706.89491 best solution, best possible 94.355176 (3210.79 seconds)
Cbc0010I After 6500 nodes, 3229 on tree, 706.89491 best solution, best possible 94.355176 (3223.54 seconds)
Cbc0010I After 6600 nodes, 3279 on tree, 706.89491 best solution, best possible 94.355176 (3235.97 seconds)
Cbc0010I After 6700 nodes, 3329 on tree, 706.89491 best solution, best possible 94.355176 (3248.22 seconds)
Cbc0010I After 6800 nodes, 3379 on tree, 706.89491 best solution, best possible 94.355176 (3260.53 seconds)
Cbc0010I After 6900 nodes, 3429 on tree, 706.89491 best solution, best possible 94.355176 (3273.02 seconds)
Cbc0010I After 7000 nodes, 3479 on tree, 706.89491 best solution, best possible 94.355176 (3285.61 seconds)
Cbc0010I After 7100 nodes, 3529 on tree, 706.89491 best solution, best possible 94.355176 (3298.42 seconds)
Cbc0010I After 7200 nodes, 3579 on tree, 706.89491 best solution, best possible 94.355176 (3310.94 seconds)
Cbc0010I After 7300 nodes, 3629 on tree, 706.89491 best solution, best possible 94.355176 (3323.74 seconds)
Cbc0010I After 7400 nodes, 3678 on tree, 706.89491 best solution, best possible 94.355176 (3335.35 seconds)
Cbc0010I After 7500 nodes, 3728 on tree, 706.89491 best solution, best possible 94.355176 (3346.21 seconds)
Couenne: new cutoff value 6.2921732438e+02 (3385.45 seconds)
Couenne: new cutoff value 6.2921732400e+02 (3386.48 seconds)
Cbc0010I After 7600 nodes, 3770 on tree, 706.89491 best solution, best possible 94.375675 (3363.56 seconds)
Cbc0010I After 7700 nodes, 3820 on tree, 706.89491 best solution, best possible 94.375675 (3400.55 seconds)
Cbc0010I After 7800 nodes, 3870 on tree, 706.89491 best solution, best possible 94.375675 (3417.64 seconds)
Cbc0010I After 7900 nodes, 3920 on tree, 706.89491 best solution, best possible 94.375675 (3430.78 seconds)
Cbc0010I After 8000 nodes, 3970 on tree, 706.89491 best solution, best possible 94.375675 (3448.62 seconds)
Cbc0010I After 8100 nodes, 4013 on tree, 706.89491 best solution, best possible 94.383724 (3497.78 seconds)
Cbc0010I After 8200 nodes, 4063 on tree, 706.89491 best solution, best possible 94.383724 (3530.05 seconds)
Cbc0010I After 8300 nodes, 4113 on tree, 706.89491 best solution, best possible 94.383724 (3555.16 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 706.89491 (best possible 94.383724), took 1865272 iterations and 8365 nodes (3589.85 seconds)
Cbc0035I Maximum depth 1278, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.061247s)
Total solve time:                         3590.39s (3590.39s in branch-and-bound)
Lower bound:                              94.3837
Upper bound:                              629.217  (gap: 560.72%)
Branch-and-bound nodes:                      8365
Stats: /tmp/jl_kOUpu7/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.061247 [sep]  3590.39 [time]   3590.4 [bb]         9.438372e+01 [lower]         6.292173e+02 [upper]    8365 [nodes]
Performance of                           FBBT:	    243.935s,    13188 runs. fix: 0.000285627 shrnk:    87.7348 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.3266s,        7 runs. fix:   0.285714 shrnk:   0.283397 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-4.txt
