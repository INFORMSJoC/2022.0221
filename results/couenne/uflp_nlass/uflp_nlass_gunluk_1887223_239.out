solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-3.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 95.253196       42 25.706901
NLP0014I             2      INFEAS 0.99999999       33 1.441424
Loaded instance "/tmp/jl_EtbcAD/model.nl"
Constraints:         5460
Variables:           5430 (1830 integer)
Auxiliaries:         1861 (0 integer)

Coin0506I Presolve 12600 (-1861) rows, 5370 (-1921) columns and 26880 (-5611) elements
Clp0006I 0  Obj 0 Primal inf 59.99994 (60) Dual inf 1.8e+13 (1800)
Clp0006I 288  Obj 119.82116 Primal inf 55.124936 (64) Dual inf 1.806e+13 (1800)
Clp0006I 576  Obj 285.43736 Primal inf 46.874924 (76) Dual inf 1.5104353e+08 (1800)
Clp0006I 864  Obj 365.55852 Primal inf 41.374916 (84) Dual inf 1.5137664e+08 (1800)
Clp0006I 1152  Obj 431.01984 Primal inf 37.24991 (90) Dual inf 1.5162646e+08 (1800)
Clp0006I 1440  Obj 558.99646 Primal inf 29.687399 (101) Dual inf 1.5208441e+08 (1800)
Clp0006I 1728  Obj 715.32196 Primal inf 22.812389 (111) Dual inf 1.5250058e+08 (1800)
Clp0006I 2016  Obj 985.01953 Primal inf 3.374946 (54) Dual inf 6949607.4 (724)
Clp0006I 2304  Obj 692.47109 Dual inf 65769.104 (313)
Clp0006I 2504  Obj 509.81069 Dual inf 17935.136 (287)
Clp0006I 2792  Obj 178.18669 Dual inf 19086.44 (202)
Clp0006I 3080  Obj 66.320706 Dual inf 7618.1926 (147)
Clp0006I 3368  Obj 37.560714 Dual inf 7306.5272 (146)
Clp0006I 3656  Obj 27.249997 Dual inf 4939.8563 (108)
Clp0006I 3944  Obj 27.249996 Dual inf 1198.641 (59)
Clp0006I 4232  Obj 14.124982 Dual inf 2837.1835 (139)
Clp0006I 4359  Obj 11.374987
Clp0000I Optimal - objective value 11.374987
Clp0000I Optimal - objective value 11.375
Clp0032I Optimal objective 11.375 - 4359 iterations time 0.712, Presolve 0.03
Clp0000I Optimal - objective value 11.375
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 11.375
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2108 added rows had average density of 2
Cbc0013I At root node, 2108 cuts changed objective from 11.375 to 87.771407 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 30408 row cuts average 2.0 elements, 4440 column cuts (6093 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (53.46 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0318541753e+03 (186.334 seconds)
Cbc0012I Integer solution of 1031.8542 found by Couenne Rounding NLP after 19755 iterations and 1 nodes (140.41 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 7.9828527708e+02 (251.135 seconds)
Cbc0012I Integer solution of 798.28528 found by Couenne Rounding NLP after 20488 iterations and 2 nodes (205.21 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 798.28528 best solution, best possible 90.966319 (666.33 seconds)
Cbc0010I After 200 nodes, 100 on tree, 798.28528 best solution, best possible 90.966319 (712.11 seconds)
Cbc0010I After 300 nodes, 150 on tree, 798.28528 best solution, best possible 90.966319 (745.30 seconds)
Cbc0010I After 400 nodes, 200 on tree, 798.28528 best solution, best possible 90.966319 (771.48 seconds)
Cbc0010I After 500 nodes, 250 on tree, 798.28528 best solution, best possible 90.966319 (795.62 seconds)
Cbc0010I After 600 nodes, 300 on tree, 798.28528 best solution, best possible 90.966319 (815.27 seconds)
Cbc0010I After 700 nodes, 350 on tree, 798.28528 best solution, best possible 90.966319 (832.98 seconds)
Couenne: new cutoff value 4.3471248306e+02 (888.984 seconds)
Cbc0004I Integer solution of 434.71248 found after 587692 iterations and 763 nodes (843.08 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 334 on tree, 434.71248 best solution, best possible 91.713034 (1165.52 seconds)
Cbc0010I After 900 nodes, 384 on tree, 434.71248 best solution, best possible 91.713034 (1219.67 seconds)
Cbc0010I After 1000 nodes, 434 on tree, 434.71248 best solution, best possible 91.713034 (1267.63 seconds)
Cbc0010I After 1100 nodes, 484 on tree, 434.71248 best solution, best possible 91.713034 (1307.36 seconds)
Cbc0010I After 1200 nodes, 534 on tree, 434.71248 best solution, best possible 91.713034 (1336.61 seconds)
Cbc0010I After 1300 nodes, 584 on tree, 434.71248 best solution, best possible 91.713034 (1367.46 seconds)
Cbc0010I After 1400 nodes, 634 on tree, 434.71248 best solution, best possible 91.713034 (1392.13 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1500 nodes, 659 on tree, 434.71248 best solution, best possible 92.026754 (1529.34 seconds)
Cbc0010I After 1600 nodes, 709 on tree, 434.71248 best solution, best possible 92.026754 (1579.17 seconds)
Cbc0010I After 1700 nodes, 759 on tree, 434.71248 best solution, best possible 92.026754 (1630.02 seconds)
Cbc0010I After 1800 nodes, 809 on tree, 434.71248 best solution, best possible 92.026754 (1678.59 seconds)
Cbc0010I After 1900 nodes, 859 on tree, 434.71248 best solution, best possible 92.026754 (1714.64 seconds)
Cbc0010I After 2000 nodes, 909 on tree, 434.71248 best solution, best possible 92.026754 (1744.80 seconds)
Cbc0010I After 2100 nodes, 959 on tree, 434.71248 best solution, best possible 92.026754 (1773.79 seconds)
Cbc0010I After 2200 nodes, 994 on tree, 434.71248 best solution, best possible 92.769703 (1860.40 seconds)
Cbc0010I After 2300 nodes, 1044 on tree, 434.71248 best solution, best possible 92.769703 (1913.75 seconds)
Cbc0010I After 2400 nodes, 1094 on tree, 434.71248 best solution, best possible 92.769703 (1947.83 seconds)
Cbc0010I After 2500 nodes, 1144 on tree, 434.71248 best solution, best possible 92.769703 (1974.39 seconds)
Cbc0010I After 2600 nodes, 1194 on tree, 434.71248 best solution, best possible 92.769703 (1999.02 seconds)
Cbc0010I After 2700 nodes, 1233 on tree, 434.71248 best solution, best possible 92.769703 (2018.52 seconds)
Cbc0010I After 2800 nodes, 1270 on tree, 434.71248 best solution, best possible 93.287585 (2058.85 seconds)
Cbc0010I After 2900 nodes, 1320 on tree, 434.71248 best solution, best possible 93.287585 (2101.36 seconds)
Cbc0010I After 3000 nodes, 1370 on tree, 434.71248 best solution, best possible 93.287585 (2134.18 seconds)
Cbc0010I After 3100 nodes, 1420 on tree, 434.71248 best solution, best possible 93.287585 (2163.12 seconds)
Cbc0010I After 3200 nodes, 1470 on tree, 434.71248 best solution, best possible 93.287585 (2185.84 seconds)
Cbc0010I After 3300 nodes, 1512 on tree, 434.71248 best solution, best possible 93.374015 (2214.46 seconds)
Cbc0010I After 3400 nodes, 1562 on tree, 434.71248 best solution, best possible 93.374015 (2268.53 seconds)
Cbc0010I After 3500 nodes, 1612 on tree, 434.71248 best solution, best possible 93.374015 (2312.28 seconds)
Cbc0010I After 3600 nodes, 1662 on tree, 434.71248 best solution, best possible 93.374015 (2346.74 seconds)
Cbc0010I After 3700 nodes, 1712 on tree, 434.71248 best solution, best possible 93.374015 (2374.36 seconds)
Cbc0010I After 3800 nodes, 1762 on tree, 434.71248 best solution, best possible 93.374015 (2400.03 seconds)
Cbc0010I After 3900 nodes, 1810 on tree, 434.71248 best solution, best possible 93.374015 (2418.84 seconds)
Cbc0010I After 4000 nodes, 1849 on tree, 434.71248 best solution, best possible 93.69641 (2466.69 seconds)
Cbc0010I After 4100 nodes, 1899 on tree, 434.71248 best solution, best possible 93.69641 (2510.75 seconds)
Cbc0010I After 4200 nodes, 1949 on tree, 434.71248 best solution, best possible 93.69641 (2551.41 seconds)
Cbc0010I After 4300 nodes, 1999 on tree, 434.71248 best solution, best possible 93.69641 (2585.67 seconds)
Cbc0010I After 4400 nodes, 2049 on tree, 434.71248 best solution, best possible 93.69641 (2614.68 seconds)
Cbc0010I After 4500 nodes, 2095 on tree, 434.71248 best solution, best possible 93.69641 (2637.57 seconds)
Cbc0010I After 4600 nodes, 2129 on tree, 434.71248 best solution, best possible 93.750072 (2663.68 seconds)
Cbc0010I After 4700 nodes, 2179 on tree, 434.71248 best solution, best possible 93.750072 (2711.42 seconds)
Cbc0010I After 4800 nodes, 2229 on tree, 434.71248 best solution, best possible 93.750072 (2748.64 seconds)
Cbc0010I After 4900 nodes, 2279 on tree, 434.71248 best solution, best possible 93.750072 (2780.97 seconds)
Cbc0010I After 5000 nodes, 2329 on tree, 434.71248 best solution, best possible 93.750072 (2814.07 seconds)
Cbc0010I After 5100 nodes, 2379 on tree, 434.71248 best solution, best possible 93.750072 (2842.21 seconds)
Cbc0010I After 5200 nodes, 2429 on tree, 434.71248 best solution, best possible 93.750072 (2870.28 seconds)
Cbc0010I After 5300 nodes, 2479 on tree, 434.71248 best solution, best possible 93.750072 (2895.86 seconds)
Cbc0010I After 5400 nodes, 2508 on tree, 434.71248 best solution, best possible 93.996879 (2924.31 seconds)
Cbc0010I After 5500 nodes, 2558 on tree, 434.71248 best solution, best possible 93.996879 (2990.21 seconds)
Cbc0010I After 5600 nodes, 2608 on tree, 434.71248 best solution, best possible 93.996879 (3039.93 seconds)
Cbc0010I After 5700 nodes, 2658 on tree, 434.71248 best solution, best possible 93.996879 (3085.10 seconds)
Cbc0010I After 5800 nodes, 2708 on tree, 434.71248 best solution, best possible 93.996879 (3124.05 seconds)
Cbc0010I After 5900 nodes, 2758 on tree, 434.71248 best solution, best possible 93.996879 (3159.12 seconds)
Cbc0010I After 6000 nodes, 2788 on tree, 434.71248 best solution, best possible 94.011789 (3183.38 seconds)
Cbc0010I After 6100 nodes, 2838 on tree, 434.71248 best solution, best possible 94.011789 (3247.18 seconds)
Cbc0010I After 6200 nodes, 2888 on tree, 434.71248 best solution, best possible 94.011789 (3289.45 seconds)
Cbc0010I After 6300 nodes, 2938 on tree, 434.71248 best solution, best possible 94.011789 (3317.43 seconds)
Cbc0010I After 6400 nodes, 2980 on tree, 434.71248 best solution, best possible 94.068245 (3351.55 seconds)
Cbc0010I After 6500 nodes, 3030 on tree, 434.71248 best solution, best possible 94.068245 (3395.76 seconds)
Cbc0010I After 6600 nodes, 3080 on tree, 434.71248 best solution, best possible 94.068245 (3434.37 seconds)
Cbc0010I After 6700 nodes, 3130 on tree, 434.71248 best solution, best possible 94.068245 (3471.57 seconds)
Cbc0010I After 6800 nodes, 3180 on tree, 434.71248 best solution, best possible 94.068245 (3500.56 seconds)
Cbc0010I After 6900 nodes, 3230 on tree, 434.71248 best solution, best possible 94.068245 (3529.30 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 434.71248 (best possible 94.068245), took 6445072 iterations and 6997 nodes (3561.86 seconds)
Cbc0035I Maximum depth 407, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      14461
Linearization cuts added in total:          14461  (separation time: 0.038916s)
Total solve time:                         3562.69s (3562.69s in branch-and-bound)
Lower bound:                              94.0682
Upper bound:                              434.712  (gap: 358.32%)
Branch-and-bound nodes:                      6997
Stats: /tmp/jl_EtbcAD/model.nl 5430 [var] 1830 [int] 5460 [con] 1861 [aux]  14461 [root]    14461 [tot] 0.038916 [sep]  3562.69 [time]   3562.7 [bb]         9.406825e+01 [lower]         4.347125e+02 [upper]    6997 [nodes]
Performance of                           FBBT:	    67.3258s,    13332 runs. fix:          0 shrnk: 0.000930409 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    28.4014s,       10 runs. fix:   0.254417 shrnk:    42.6691 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-3.txt
