solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-1.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 26.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 94.896983       45 144.14187
NLP0014I             2         OPT 988.70438       44 3.003524
Couenne: new cutoff value 9.8870440441e+02 (208.439 seconds)
Loaded instance "/tmp/jl_S9NjwL/model.nl"
Constraints:         9680
Variables:           9640 (3240 integer)
Auxiliaries:         3281 (0 integer)

Coin0506I Presolve 25591 (-90) rows, 12751 (-170) columns and 57461 (-260) elements
Clp0006I 0  Obj 0 Primal inf 79.99992 (80) Dual inf 1.6854493e+13 (3200)
Clp0006I 352  Obj 0 Primal inf 79.99992 (80) Dual inf 1.7178111e+13 (3196)
Clp0006I 704  Obj 64.749913 Primal inf 71.663192 (83) Dual inf 22149286 (3169)
Clp0006I 1056  Obj 81.03609 Primal inf 66.124262 (99) Dual inf 22309285 (3128)
Clp0006I 1408  Obj 168.87005 Primal inf 55.723868 (113) Dual inf 22280287 (3019)
Clp0006I 1760  Obj 196.47083 Primal inf 48.614421 (122) Dual inf 22145485 (2947)
Clp0006I 2112  Obj 217.02962 Primal inf 41.857136 (121) Dual inf 19074840 (2765)
Clp0006I 2464  Obj 270.32878 Primal inf 34.450509 (116) Dual inf 17268478 (2622)
Clp0006I 2816  Obj 305.40745 Primal inf 27.25757 (110) Dual inf 14943470 (2385)
Clp0006I 3168  Obj 394.08661 Primal inf 11.013 (103) Dual inf 4049509.6 (1490)
Clp0006I 3520  Obj 386.24825 Dual inf 16456.129 (2109)
Clp0006I 3872  Obj 255.29934 Dual inf 10418.313 (1393)
Clp0006I 4224  Obj 157.49342 Dual inf 5275.8267 (911)
Clp0006I 4576  Obj 97.765186 Dual inf 5306.0282 (446)
Clp0006I 4928  Obj 55.529495 Dual inf 13248.639 (580)
Clp0006I 5280  Obj 17.330275 Dual inf 981.89641 (143)
Clp0006I 5632  Obj 11.809925 Dual inf 10742.827 (458)
Clp0006I 5984  Obj 10.439973 Dual inf 1477.5553 (318)
Clp0006I 6305  Obj 9.3748887
Clp0000I Optimal - objective value 9.3748887
Clp0000I Optimal - objective value 9.375
Clp0032I Optimal objective 9.375 - 6305 iterations time 1.162, Presolve 0.14
Clp0000I Optimal - objective value 9.375
Cbc0012I Integer solution of 988.7044 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.04 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 9.375
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 3419 added rows had average density of 2
Cbc0013I At root node, 3419 cuts changed objective from 9.375 to 80.661798 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 46587 row cuts average 2.0 elements, 14820 column cuts (17513 active)
Cbc0010I After 0 nodes, 1 on tree, 988.7044 best solution, best possible 80.661798 (222.69 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 988.7044 best solution, best possible 87.29156 (1981.59 seconds)
Cbc0010I After 200 nodes, 100 on tree, 988.7044 best solution, best possible 87.29156 (2092.66 seconds)
Cbc0010I After 300 nodes, 150 on tree, 988.7044 best solution, best possible 87.29156 (2206.51 seconds)
Cbc0010I After 400 nodes, 200 on tree, 988.7044 best solution, best possible 87.29156 (2300.57 seconds)
Cbc0010I After 500 nodes, 250 on tree, 988.7044 best solution, best possible 87.29156 (2380.93 seconds)
Cbc0010I After 600 nodes, 300 on tree, 988.7044 best solution, best possible 87.29156 (2445.07 seconds)
Cbc0010I After 700 nodes, 350 on tree, 988.7044 best solution, best possible 87.29156 (2492.12 seconds)
Cbc0010I After 800 nodes, 400 on tree, 988.7044 best solution, best possible 87.29156 (2535.64 seconds)
Cbc0010I After 900 nodes, 450 on tree, 988.7044 best solution, best possible 87.29156 (2582.43 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 988.7044 best solution, best possible 87.29156 (2625.53 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 988.7044 best solution, best possible 87.29156 (2665.75 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 988.7044 best solution, best possible 87.29156 (2701.91 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 988.7044 best solution, best possible 87.29156 (2737.12 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 988.7044 best solution, best possible 87.29156 (2772.20 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 988.7044 best solution, best possible 87.29156 (2805.25 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 988.7044 best solution, best possible 87.29156 (2838.72 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 988.7044 best solution, best possible 87.29156 (2871.63 seconds)
Couenne: new cutoff value 8.8459869978e+02 (3085.92 seconds)
Cbc0004I Integer solution of 884.5987 found after 1715010 iterations and 1712 nodes (2874.81 seconds)
Cbc0010I After 1800 nodes, 850 on tree, 884.5987 best solution, best possible 87.349976 (2963.57 seconds)
Cbc0010I After 1900 nodes, 900 on tree, 884.5987 best solution, best possible 87.349976 (3077.92 seconds)
Cbc0010I After 2000 nodes, 950 on tree, 884.5987 best solution, best possible 87.349976 (3171.61 seconds)
Cbc0010I After 2100 nodes, 1000 on tree, 884.5987 best solution, best possible 87.349976 (3241.58 seconds)
Cbc0010I After 2200 nodes, 1050 on tree, 884.5987 best solution, best possible 87.349976 (3299.30 seconds)
Cbc0010I After 2300 nodes, 1100 on tree, 884.5987 best solution, best possible 87.349976 (3351.27 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 884.5987 (best possible 87.349976), took 2694902 iterations and 2380 nodes (3396.11 seconds)
Cbc0035I Maximum depth 856, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      25681
Linearization cuts added in total:          25681  (separation time: 0.07769s)
Total solve time:                         3397.46s (3397.46s in branch-and-bound)
Lower bound:                                87.35
Upper bound:                              884.599  (gap: 902.38%)
Branch-and-bound nodes:                      2380
Stats: /tmp/jl_S9NjwL/model.nl 9640 [var] 3240 [int] 9680 [con] 3281 [aux]  25681 [root]    25681 [tot] 0.07769 [sep]  3397.46 [time]  3397.49 [bb]         8.734998e+01 [lower]         8.845987e+02 [upper]    2380 [nodes]
Performance of                           FBBT:	    48.0716s,     4740 runs. fix:          0 shrnk:    826.678 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    35.4517s,        6 runs. fix:   0.181818 shrnk:    11.1913 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-1.txt
