solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 301.23739       56 3.422191
NLP0014I             2      INFEAS 0.99999999       30 0.629307
Loaded instance "/tmp/jl_V34Mm2/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2370.2641 (1640)
Clp0006I 277  Obj 0 Primal inf 2389.5981 (1680)
Clp0006I 554  Obj 0 Primal inf 2110.4265 (1680)
Clp0006I 831  Obj 9.0895128e-17 Primal inf 2017.1785 (1697)
Clp0006I 1108  Obj 1.0626468e-15 Primal inf 3336.0136 (1788)
Clp0006I 1385  Obj 1.9566545e-15 Primal inf 4543.4051 (1883)
Clp0006I 1662  Obj 2.9495535e-15 Primal inf 5820.4369 (1970)
Clp0006I 1939  Obj 1.4928879e-15 Primal inf 6346.3079 (2007)
Clp0006I 2216  Obj 1.8383514e-15 Primal inf 6590.8021 (1976)
Clp0006I 2493  Obj 2.1102178e-15 Primal inf 3016.9649 (1708)
Clp0006I 2770  Obj 4.7881957e-16 Primal inf 201.24498 (640)
Clp0006I 3047  Obj 4.3145186e-16 Primal inf 56.973898 (443)
Clp0006I 3324  Obj 6.8690341 Primal inf 84.407005 (348)
Clp0006I 3601  Obj 17.113216 Primal inf 86.013576 (328)
Clp0006I 3878  Obj 27.424173 Primal inf 34.005717 (46)
Clp0006I 3925  Obj 29.118118
Clp0000I Optimal - objective value 29.118118
Clp0032I Optimal objective 29.1181175 - 3925 iterations time 0.252, Presolve 0.03
Clp0000I Optimal - objective value 29.118118
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 29.118118
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 956 added rows had average density of 2
Cbc0013I At root node, 956 cuts changed objective from 29.118118 to 93.07244 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14276 row cuts average 2.0 elements, 440 column cuts (1224 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (78.66 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.8796327129e+02 (352.579 seconds)
Cbc0012I Integer solution of 987.96327 found by Couenne Rounding NLP after 12493 iterations and 2 nodes (327.86 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.4889622369e+02 (867.797 seconds)
Cbc0012I Integer solution of 948.89622 found by Couenne Rounding NLP after 17137 iterations and 6 nodes (843.08 seconds)
Cbc0010I After 100 nodes, 50 on tree, 948.89622 best solution, best possible 99.000306 (1007.31 seconds)
Cbc0010I After 200 nodes, 100 on tree, 948.89622 best solution, best possible 99.000306 (1043.21 seconds)
Cbc0010I After 300 nodes, 150 on tree, 948.89622 best solution, best possible 99.000306 (1069.38 seconds)
Cbc0010I After 400 nodes, 200 on tree, 948.89622 best solution, best possible 99.000306 (1089.46 seconds)
Cbc0010I After 500 nodes, 250 on tree, 948.89622 best solution, best possible 99.000306 (1108.49 seconds)
Cbc0010I After 600 nodes, 300 on tree, 948.89622 best solution, best possible 99.000306 (1128.35 seconds)
Cbc0010I After 700 nodes, 350 on tree, 948.89622 best solution, best possible 99.000306 (1148.11 seconds)
Cbc0010I After 800 nodes, 400 on tree, 948.89622 best solution, best possible 99.000306 (1164.62 seconds)
Cbc0010I After 900 nodes, 450 on tree, 948.89622 best solution, best possible 99.000306 (1181.06 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 948.89622 best solution, best possible 99.000306 (1196.34 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 948.89622 best solution, best possible 99.000306 (1210.82 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 948.89622 best solution, best possible 99.000306 (1225.29 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 948.89622 best solution, best possible 99.000306 (1239.87 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 948.89622 best solution, best possible 99.000306 (1253.89 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 948.89622 best solution, best possible 99.000306 (1267.74 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 948.89622 best solution, best possible 99.000306 (1281.94 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 948.89622 best solution, best possible 99.000306 (1296.04 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 948.89622 best solution, best possible 99.000306 (1310.26 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 948.89622 best solution, best possible 99.000306 (1325.07 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 948.89622 best solution, best possible 99.000306 (1339.10 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 948.89622 best solution, best possible 99.000306 (1353.54 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 948.89622 best solution, best possible 99.000306 (1366.62 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 948.89622 best solution, best possible 99.000306 (1379.21 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 948.89622 best solution, best possible 99.000306 (1391.82 seconds)
Couenne: new cutoff value 6.1816794845e+02 (1427.33 seconds)
Couenne: new cutoff value 6.1816794808e+02 (1427.42 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2500 nodes, 1247 on tree, 948.89622 best solution, best possible 99.275708 (1944.80 seconds)
Cbc0010I After 2600 nodes, 1297 on tree, 948.89622 best solution, best possible 99.275708 (2003.14 seconds)
Cbc0010I After 2700 nodes, 1347 on tree, 948.89622 best solution, best possible 99.275708 (2040.94 seconds)
Cbc0010I After 2800 nodes, 1397 on tree, 948.89622 best solution, best possible 99.275708 (2072.49 seconds)
Cbc0010I After 2900 nodes, 1447 on tree, 948.89622 best solution, best possible 99.275708 (2097.80 seconds)
Cbc0010I After 3000 nodes, 1497 on tree, 948.89622 best solution, best possible 99.275708 (2119.10 seconds)
Cbc0010I After 3100 nodes, 1547 on tree, 948.89622 best solution, best possible 99.275708 (2137.93 seconds)
Cbc0010I After 3200 nodes, 1597 on tree, 948.89622 best solution, best possible 99.275708 (2158.11 seconds)
Cbc0010I After 3300 nodes, 1647 on tree, 948.89622 best solution, best possible 99.275708 (2178.21 seconds)
Cbc0010I After 3400 nodes, 1697 on tree, 948.89622 best solution, best possible 99.275708 (2195.57 seconds)
Cbc0010I After 3500 nodes, 1747 on tree, 948.89622 best solution, best possible 99.275708 (2212.98 seconds)
Cbc0010I After 3600 nodes, 1797 on tree, 948.89622 best solution, best possible 99.275708 (2228.49 seconds)
Cbc0010I After 3700 nodes, 1847 on tree, 948.89622 best solution, best possible 99.275708 (2243.24 seconds)
Cbc0010I After 3800 nodes, 1897 on tree, 948.89622 best solution, best possible 99.275708 (2257.89 seconds)
Cbc0010I After 3900 nodes, 1947 on tree, 948.89622 best solution, best possible 99.275708 (2272.75 seconds)
Cbc0010I After 4000 nodes, 1997 on tree, 948.89622 best solution, best possible 99.275708 (2287.33 seconds)
Cbc0010I After 4100 nodes, 2047 on tree, 948.89622 best solution, best possible 99.275708 (2301.62 seconds)
Cbc0010I After 4200 nodes, 2097 on tree, 948.89622 best solution, best possible 99.275708 (2315.84 seconds)
Cbc0010I After 4300 nodes, 2147 on tree, 948.89622 best solution, best possible 99.275708 (2330.32 seconds)
Cbc0010I After 4400 nodes, 2197 on tree, 948.89622 best solution, best possible 99.275708 (2344.86 seconds)
Cbc0010I After 4500 nodes, 2247 on tree, 948.89622 best solution, best possible 99.275708 (2359.83 seconds)
Cbc0010I After 4600 nodes, 2297 on tree, 948.89622 best solution, best possible 99.275708 (2374.81 seconds)
Cbc0010I After 4700 nodes, 2347 on tree, 948.89622 best solution, best possible 99.275708 (2389.62 seconds)
Cbc0010I After 4800 nodes, 2397 on tree, 948.89622 best solution, best possible 99.275708 (2404.11 seconds)
Cbc0010I After 4900 nodes, 2447 on tree, 948.89622 best solution, best possible 99.275708 (2417.37 seconds)
Cbc0010I After 5000 nodes, 2497 on tree, 948.89622 best solution, best possible 99.275708 (2430.39 seconds)
Couenne: new cutoff value 5.8781262552e+02 (2462.08 seconds)
Couenne: new cutoff value 5.8781262479e+02 (2462.17 seconds)
Cbc0010I After 5100 nodes, 2544 on tree, 948.89622 best solution, best possible 99.277625 (2608.11 seconds)
Cbc0010I After 5200 nodes, 2594 on tree, 948.89622 best solution, best possible 99.277625 (2661.86 seconds)
Cbc0010I After 5300 nodes, 2644 on tree, 948.89622 best solution, best possible 99.277625 (2693.34 seconds)
Cbc0010I After 5400 nodes, 2694 on tree, 948.89622 best solution, best possible 99.277625 (2718.35 seconds)
Cbc0010I After 5500 nodes, 2739 on tree, 948.89622 best solution, best possible 99.398214 (2741.16 seconds)
Cbc0010I After 5600 nodes, 2789 on tree, 948.89622 best solution, best possible 99.398214 (2786.80 seconds)
Cbc0010I After 5700 nodes, 2839 on tree, 948.89622 best solution, best possible 99.398214 (2824.09 seconds)
Cbc0010I After 5800 nodes, 2889 on tree, 948.89622 best solution, best possible 99.398214 (2855.78 seconds)
Cbc0010I After 5900 nodes, 2939 on tree, 948.89622 best solution, best possible 99.398214 (2878.29 seconds)
Cbc0010I After 6000 nodes, 2989 on tree, 948.89622 best solution, best possible 99.398214 (2895.67 seconds)
Cbc0010I After 6100 nodes, 3033 on tree, 948.89622 best solution, best possible 99.570574 (2959.84 seconds)
Cbc0010I After 6200 nodes, 3083 on tree, 948.89622 best solution, best possible 99.570574 (3022.90 seconds)
Cbc0010I After 6300 nodes, 3133 on tree, 948.89622 best solution, best possible 99.570574 (3061.27 seconds)
Cbc0010I After 6400 nodes, 3183 on tree, 948.89622 best solution, best possible 99.570574 (3092.01 seconds)
Cbc0010I After 6500 nodes, 3233 on tree, 948.89622 best solution, best possible 99.570574 (3113.25 seconds)
Cbc0010I After 6600 nodes, 3283 on tree, 948.89622 best solution, best possible 99.570574 (3130.54 seconds)
Cbc0010I After 6700 nodes, 3327 on tree, 948.89622 best solution, best possible 99.595009 (3166.01 seconds)
Cbc0010I After 6800 nodes, 3377 on tree, 948.89622 best solution, best possible 99.595009 (3201.45 seconds)
Cbc0010I After 6900 nodes, 3427 on tree, 948.89622 best solution, best possible 99.595009 (3234.62 seconds)
Cbc0010I After 7000 nodes, 3477 on tree, 948.89622 best solution, best possible 99.595009 (3260.62 seconds)
Cbc0010I After 7100 nodes, 3527 on tree, 948.89622 best solution, best possible 99.595009 (3280.86 seconds)
Cbc0010I After 7200 nodes, 3577 on tree, 948.89622 best solution, best possible 99.595009 (3298.14 seconds)
Cbc0010I After 7300 nodes, 3627 on tree, 948.89622 best solution, best possible 99.595009 (3314.61 seconds)
Cbc0010I After 7400 nodes, 3677 on tree, 948.89622 best solution, best possible 99.595009 (3340.83 seconds)
Cbc0010I After 7500 nodes, 3725 on tree, 948.89622 best solution, best possible 99.595009 (3373.71 seconds)
Cbc0010I After 7600 nodes, 3775 on tree, 948.89622 best solution, best possible 99.595009 (3391.89 seconds)
Cbc0010I After 7700 nodes, 3825 on tree, 948.89622 best solution, best possible 99.595009 (3409.85 seconds)
Cbc0010I After 7800 nodes, 3875 on tree, 948.89622 best solution, best possible 99.595009 (3423.74 seconds)
Cbc0010I After 7900 nodes, 3925 on tree, 948.89622 best solution, best possible 99.595009 (3436.79 seconds)
Cbc0010I After 8000 nodes, 3975 on tree, 948.89622 best solution, best possible 99.595009 (3449.79 seconds)
Cbc0010I After 8100 nodes, 4025 on tree, 948.89622 best solution, best possible 99.595009 (3462.87 seconds)
Cbc0010I After 8200 nodes, 4075 on tree, 948.89622 best solution, best possible 99.595009 (3475.61 seconds)
Cbc0010I After 8300 nodes, 4125 on tree, 948.89622 best solution, best possible 99.595009 (3488.06 seconds)
Cbc0010I After 8400 nodes, 4175 on tree, 948.89622 best solution, best possible 99.595009 (3500.58 seconds)
Cbc0010I After 8500 nodes, 4225 on tree, 948.89622 best solution, best possible 99.595009 (3513.15 seconds)
Cbc0010I After 8600 nodes, 4275 on tree, 948.89622 best solution, best possible 99.595009 (3525.95 seconds)
Cbc0010I After 8700 nodes, 4325 on tree, 948.89622 best solution, best possible 99.595009 (3539.05 seconds)
Cbc0010I After 8800 nodes, 4375 on tree, 948.89622 best solution, best possible 99.595009 (3551.85 seconds)
Cbc0010I After 8900 nodes, 4425 on tree, 948.89622 best solution, best possible 99.595009 (3564.99 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 948.89622 (best possible 99.595009), took 1840123 iterations and 8984 nodes (3606.20 seconds)
Cbc0035I Maximum depth 1284, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.058235s)
Total solve time:                         3606.61s (3606.61s in branch-and-bound)
Lower bound:                               99.595
Upper bound:                              587.813  (gap: 485.33%)
Branch-and-bound nodes:                      8984
Stats: /tmp/jl_V34Mm2/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.058235 [sep]  3606.61 [time]  3606.62 [bb]         9.959501e+01 [lower]         5.878126e+02 [upper]    8984 [nodes]
Performance of                           FBBT:	    256.385s,    13168 runs. fix: 0.000427841 shrnk: 0.00198489 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    13.5429s,        9 runs. fix:   0.255319 shrnk:    1.80057 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt
