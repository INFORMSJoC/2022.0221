solving instance uflp nlass holmberg 14 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3716.6138      769 43.234282
NLP0014I             2      FAILED 252121.12     3000 130.60626
NLP0014I             1      FAILED 14162.349     3000 128.49997   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_2xRwO0/model.nl"
Constraints:         3050
Variables:           3020 (1020 integer)
Auxiliaries:         4051 (0 integer)

Coin0506I Presolve 13000 (-2051) rows, 4970 (-2101) columns and 27900 (-5171) elements
Clp0006I 0  Obj 0 Primal inf 3124.1556 (2050)
Clp0006I 290  Obj 0 Primal inf 3351.9741 (2100)
Clp0006I 580  Obj 0 Primal inf 3332.4778 (2100)
Clp0006I 870  Obj 0 Primal inf 3144.0131 (2100)
Clp0006I 1160  Obj -3.8051702e-17 Primal inf 3941.8363 (2252)
Clp0006I 1450  Obj 7.6800244e-16 Primal inf 5618.2146 (2419)
Clp0006I 1740  Obj 9.8497844e-16 Primal inf 6394.5556 (2368)
Clp0006I 2030  Obj 1.1842152e-15 Primal inf 7283.1144 (2339)
Clp0006I 2320  Obj 1.4962615e-15 Primal inf 6111.8181 (2255)
Clp0006I 2610  Obj 9.6102719e-16 Primal inf 3142.2182 (1522)
Clp0006I 2900  Obj 5.4207285e-16 Primal inf 619.28598 (613)
Clp0006I 3190  Obj 5.9221838e-16 Primal inf 86.316093 (400)
Clp0006I 3480  Obj 279.63644 Primal inf 475.93206 (302)
Clp0006I 3663  Obj 300
Clp0000I Optimal - objective value 300
Clp0032I Optimal objective 300 - 3663 iterations time 0.302, Presolve 0.04
Clp0000I Optimal - objective value 300
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 300
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1020 added rows had average density of 2
Cbc0013I At root node, 1020 cuts changed objective from 300 to 576.54352 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 18037 row cuts average 2.0 elements, 1450 column cuts (1749 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (264.37 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 2.8348361349e+04 (1160.15 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 860.6858 (2347.97 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 860.6858 (2376.36 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 860.6858 (2401.39 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 860.6858 (2433.47 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 860.6858 (2467.24 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 860.6858 (2501.55 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 860.6858 (2535.49 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 860.6858 (2569.53 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 860.6858 (2603.11 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 860.6858 (2637.08 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 860.6858 (2670.64 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 860.6858 (2702.57 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 860.6858 (2733.43 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 860.6858 (2763.68 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 860.6858 (2791.63 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 860.6858 (2822.11 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 860.6858 (2852.27 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 860.6858 (2880.84 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 860.6858 (2907.90 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 860.6858 (2934.53 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 860.6858 (2960.58 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 860.6858 (2986.24 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 860.6858 (3013.29 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 860.6858 (3038.65 seconds)
Cbc0010I After 2500 nodes, 1249 on tree, 1e+50 best solution, best possible 860.6858 (3064.19 seconds)
Cbc0010I After 2600 nodes, 1299 on tree, 1e+50 best solution, best possible 860.6858 (3090.39 seconds)
Cbc0010I After 2700 nodes, 1349 on tree, 1e+50 best solution, best possible 860.6858 (3116.09 seconds)
Cbc0010I After 2800 nodes, 1399 on tree, 1e+50 best solution, best possible 860.6858 (3142.16 seconds)
Cbc0010I After 2900 nodes, 1448 on tree, 1e+50 best solution, best possible 860.6858 (3168.08 seconds)
Cbc0010I After 3000 nodes, 1498 on tree, 1e+50 best solution, best possible 860.6858 (3194.35 seconds)
Cbc0010I After 3100 nodes, 1548 on tree, 1e+50 best solution, best possible 860.6858 (3219.71 seconds)
Cbc0010I After 3200 nodes, 1598 on tree, 1e+50 best solution, best possible 860.6858 (3245.24 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 860.6858), took 219083 iterations and 3252 nodes (3281.54 seconds)
Cbc0035I Maximum depth 1626, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      15051
Linearization cuts added in total:          15051  (separation time: 0.081056s)
Total solve time:                         3281.85s (3281.85s in branch-and-bound)
Lower bound:                              860.686
Upper bound:                              28348.4  (gap: 3189.99%)
Branch-and-bound nodes:                      3252
Stats: /tmp/jl_2xRwO0/model.nl 3020 [var] 1020 [int] 3050 [con] 4051 [aux]  15051 [root]    15051 [tot] 0.081056 [sep]  3281.85 [time]  3281.87 [bb]         8.606858e+02 [lower]         2.834836e+04 [upper]    3252 [nodes]
Performance of                           FBBT:	    147.322s,     4777 runs. fix:          0 shrnk: 0.000345102 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.9205s,        6 runs. fix:   0.181818 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p14
