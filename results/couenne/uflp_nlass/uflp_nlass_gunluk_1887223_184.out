solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 332.70875       32 2.551096
NLP0014I             2      INFEAS 0.99999999       33 0.70841
Loaded instance "/tmp/jl_5d5GyJ/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2370.2641 (1640)
Clp0006I 277  Obj 0 Primal inf 2389.5981 (1680)
Clp0006I 554  Obj 0 Primal inf 2110.4265 (1680)
Clp0006I 831  Obj 9.0895128e-17 Primal inf 2017.1785 (1697)
Clp0006I 1108  Obj 1.0626468e-15 Primal inf 3336.0136 (1788)
Clp0006I 1385  Obj 1.9566545e-15 Primal inf 4543.4051 (1883)
Clp0006I 1662  Obj 2.9495535e-15 Primal inf 5820.4369 (1970)
Clp0006I 1939  Obj 1.4928879e-15 Primal inf 6346.3079 (2007)
Clp0006I 2216  Obj 1.8383514e-15 Primal inf 6590.8021 (1976)
Clp0006I 2493  Obj 2.1102178e-15 Primal inf 3016.9649 (1708)
Clp0006I 2770  Obj 4.7881957e-16 Primal inf 201.24498 (640)
Clp0006I 3047  Obj 4.3145186e-16 Primal inf 56.973898 (443)
Clp0006I 3324  Obj 23.565567 Primal inf 73.221127 (303)
Clp0006I 3601  Obj 23.565567 Primal inf 88.156898 (246)
Clp0006I 3878  Obj 28.478127 Primal inf 59.456913 (90)
Clp0006I 3914  Obj 29.537657
Clp0000I Optimal - objective value 29.537657
Clp0032I Optimal objective 29.53765746 - 3914 iterations time 0.242, Presolve 0.03
Clp0000I Optimal - objective value 29.537657
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 29.537657
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 947 added rows had average density of 2
Cbc0013I At root node, 947 cuts changed objective from 29.537657 to 95.92106 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14250 row cuts average 2.0 elements, 440 column cuts (1141 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (82.00 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.9899868008e+02 (352.943 seconds)
Cbc0012I Integer solution of 998.99868 found by Couenne Rounding NLP after 10205 iterations and 2 nodes (328.27 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.4473785858e+02 (616.697 seconds)
Cbc0012I Integer solution of 944.73786 found by Couenne Rounding NLP after 12455 iterations and 4 nodes (592.03 seconds)
Couenne: new cutoff value 8.6967212726e+02 (877.706 seconds)
Cbc0012I Integer solution of 869.67213 found by Couenne Rounding NLP after 13792 iterations and 6 nodes (853.04 seconds)
Cbc0010I After 100 nodes, 50 on tree, 869.67213 best solution, best possible 101.01077 (934.77 seconds)
Cbc0010I After 200 nodes, 100 on tree, 869.67213 best solution, best possible 101.01077 (970.54 seconds)
Cbc0010I After 300 nodes, 150 on tree, 869.67213 best solution, best possible 101.01077 (997.29 seconds)
Cbc0010I After 400 nodes, 200 on tree, 869.67213 best solution, best possible 101.01077 (1017.08 seconds)
Cbc0010I After 500 nodes, 250 on tree, 869.67213 best solution, best possible 101.01077 (1035.39 seconds)
Cbc0010I After 600 nodes, 300 on tree, 869.67213 best solution, best possible 101.01077 (1054.97 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 337 on tree, 869.67213 best solution, best possible 101.25231 (1706.38 seconds)
Cbc0010I After 800 nodes, 387 on tree, 869.67213 best solution, best possible 101.25231 (1740.67 seconds)
Cbc0010I After 900 nodes, 437 on tree, 869.67213 best solution, best possible 101.25231 (1764.47 seconds)
Cbc0010I After 1000 nodes, 487 on tree, 869.67213 best solution, best possible 101.25231 (1781.65 seconds)
Cbc0010I After 1100 nodes, 537 on tree, 869.67213 best solution, best possible 101.25231 (1798.65 seconds)
Cbc0010I After 1200 nodes, 587 on tree, 869.67213 best solution, best possible 101.25231 (1815.46 seconds)
Cbc0010I After 1300 nodes, 637 on tree, 869.67213 best solution, best possible 101.25231 (1832.32 seconds)
Cbc0010I After 1400 nodes, 687 on tree, 869.67213 best solution, best possible 101.25231 (1849.35 seconds)
Cbc0010I After 1500 nodes, 737 on tree, 869.67213 best solution, best possible 101.25231 (1865.23 seconds)
Cbc0010I After 1600 nodes, 787 on tree, 869.67213 best solution, best possible 101.25231 (1880.48 seconds)
Cbc0010I After 1700 nodes, 837 on tree, 869.67213 best solution, best possible 101.25231 (1894.00 seconds)
Cbc0010I After 1800 nodes, 887 on tree, 869.67213 best solution, best possible 101.25231 (1906.81 seconds)
Cbc0010I After 1900 nodes, 936 on tree, 869.67213 best solution, best possible 101.25231 (1918.80 seconds)
Cbc0010I After 2000 nodes, 986 on tree, 869.67213 best solution, best possible 101.25231 (1931.01 seconds)
Cbc0010I After 2100 nodes, 1035 on tree, 869.67213 best solution, best possible 101.25231 (1943.36 seconds)
Cbc0010I After 2200 nodes, 1085 on tree, 869.67213 best solution, best possible 101.25231 (1955.86 seconds)
Cbc0010I After 2300 nodes, 1135 on tree, 869.67213 best solution, best possible 101.25231 (1968.19 seconds)
Cbc0010I After 2400 nodes, 1185 on tree, 869.67213 best solution, best possible 101.25231 (1980.44 seconds)
Cbc0010I After 2500 nodes, 1235 on tree, 869.67213 best solution, best possible 101.25231 (1992.68 seconds)
Cbc0010I After 2600 nodes, 1285 on tree, 869.67213 best solution, best possible 101.25231 (2005.13 seconds)
Cbc0010I After 2700 nodes, 1335 on tree, 869.67213 best solution, best possible 101.25231 (2017.55 seconds)
Cbc0010I After 2800 nodes, 1385 on tree, 869.67213 best solution, best possible 101.25231 (2029.95 seconds)
Cbc0010I After 2900 nodes, 1435 on tree, 869.67213 best solution, best possible 101.25231 (2042.88 seconds)
Cbc0010I After 3000 nodes, 1485 on tree, 869.67213 best solution, best possible 101.25231 (2055.37 seconds)
Cbc0010I After 3100 nodes, 1535 on tree, 869.67213 best solution, best possible 101.25231 (2068.13 seconds)
Cbc0010I After 3200 nodes, 1585 on tree, 869.67213 best solution, best possible 101.25231 (2079.79 seconds)
Cbc0010I After 3300 nodes, 1635 on tree, 869.67213 best solution, best possible 101.25231 (2090.65 seconds)
Cbc0010I After 3400 nodes, 1685 on tree, 869.67213 best solution, best possible 101.25231 (2101.52 seconds)
Cbc0010I After 3500 nodes, 1735 on tree, 869.67213 best solution, best possible 101.25231 (2112.48 seconds)
Cbc0010I After 3600 nodes, 1785 on tree, 869.67213 best solution, best possible 101.25231 (2123.50 seconds)
Cbc0010I After 3700 nodes, 1835 on tree, 869.67213 best solution, best possible 101.25231 (2134.54 seconds)
Couenne: new cutoff value 8.4457034524e+02 (2163.28 seconds)
Cbc0010I After 3800 nodes, 1883 on tree, 869.67213 best solution, best possible 101.26374 (2165.35 seconds)
Cbc0010I After 3900 nodes, 1933 on tree, 869.67213 best solution, best possible 101.26374 (2193.51 seconds)
Cbc0010I After 4000 nodes, 1983 on tree, 869.67213 best solution, best possible 101.26374 (2213.77 seconds)
Cbc0010I After 4100 nodes, 2033 on tree, 869.67213 best solution, best possible 101.26374 (2230.41 seconds)
Cbc0010I After 4200 nodes, 2083 on tree, 869.67213 best solution, best possible 101.26374 (2247.23 seconds)
Cbc0010I After 4300 nodes, 2133 on tree, 869.67213 best solution, best possible 101.26374 (2263.93 seconds)
Cbc0010I After 4400 nodes, 2183 on tree, 869.67213 best solution, best possible 101.26374 (2280.91 seconds)
Cbc0010I After 4500 nodes, 2233 on tree, 869.67213 best solution, best possible 101.26374 (2297.22 seconds)
Cbc0010I After 4600 nodes, 2283 on tree, 869.67213 best solution, best possible 101.26374 (2311.97 seconds)
Cbc0010I After 4700 nodes, 2333 on tree, 869.67213 best solution, best possible 101.26374 (2326.23 seconds)
Cbc0010I After 4800 nodes, 2383 on tree, 869.67213 best solution, best possible 101.26374 (2339.63 seconds)
Cbc0010I After 4900 nodes, 2433 on tree, 869.67213 best solution, best possible 101.26374 (2352.27 seconds)
Cbc0010I After 5000 nodes, 2483 on tree, 869.67213 best solution, best possible 101.26374 (2364.64 seconds)
Cbc0010I After 5100 nodes, 2532 on tree, 869.67213 best solution, best possible 101.26374 (2376.98 seconds)
Cbc0010I After 5200 nodes, 2582 on tree, 869.67213 best solution, best possible 101.26374 (2389.39 seconds)
Cbc0010I After 5300 nodes, 2629 on tree, 869.67213 best solution, best possible 101.26374 (2401.83 seconds)
Cbc0010I After 5400 nodes, 2679 on tree, 869.67213 best solution, best possible 101.26374 (2414.34 seconds)
Cbc0010I After 5500 nodes, 2729 on tree, 869.67213 best solution, best possible 101.26374 (2426.85 seconds)
Cbc0010I After 5600 nodes, 2779 on tree, 869.67213 best solution, best possible 101.26374 (2439.25 seconds)
Cbc0010I After 5700 nodes, 2828 on tree, 869.67213 best solution, best possible 101.26374 (2451.72 seconds)
Cbc0010I After 5800 nodes, 2878 on tree, 869.67213 best solution, best possible 101.26374 (2464.29 seconds)
Cbc0010I After 5900 nodes, 2925 on tree, 869.67213 best solution, best possible 101.26374 (2476.99 seconds)
Cbc0010I After 6000 nodes, 2975 on tree, 869.67213 best solution, best possible 101.26374 (2489.76 seconds)
Cbc0010I After 6100 nodes, 3025 on tree, 869.67213 best solution, best possible 101.26374 (2502.61 seconds)
Cbc0010I After 6200 nodes, 3075 on tree, 869.67213 best solution, best possible 101.26374 (2516.19 seconds)
Cbc0010I After 6300 nodes, 3125 on tree, 869.67213 best solution, best possible 101.26374 (2529.44 seconds)
Cbc0010I After 6400 nodes, 3175 on tree, 869.67213 best solution, best possible 101.26374 (2542.96 seconds)
Cbc0010I After 6500 nodes, 3225 on tree, 869.67213 best solution, best possible 101.26374 (2556.00 seconds)
Cbc0010I After 6600 nodes, 3274 on tree, 869.67213 best solution, best possible 101.26374 (2567.94 seconds)
Cbc0010I After 6700 nodes, 3324 on tree, 869.67213 best solution, best possible 101.26374 (2579.62 seconds)
Cbc0010I After 6800 nodes, 3374 on tree, 869.67213 best solution, best possible 101.26374 (2591.35 seconds)
Couenne: new cutoff value 7.6157879707e+02 (2625.22 seconds)
Cbc0010I After 6900 nodes, 3422 on tree, 869.67213 best solution, best possible 101.28109 (2607.75 seconds)
Cbc0010I After 7000 nodes, 3472 on tree, 869.67213 best solution, best possible 101.28109 (2642.39 seconds)
Cbc0010I After 7100 nodes, 3522 on tree, 869.67213 best solution, best possible 101.28109 (2663.01 seconds)
Cbc0010I After 7200 nodes, 3572 on tree, 869.67213 best solution, best possible 101.28109 (2678.59 seconds)
Cbc0010I After 7300 nodes, 3622 on tree, 869.67213 best solution, best possible 101.28109 (2695.15 seconds)
Cbc0010I After 7400 nodes, 3672 on tree, 869.67213 best solution, best possible 101.28109 (2712.94 seconds)
Cbc0010I After 7500 nodes, 3716 on tree, 869.67213 best solution, best possible 101.33597 (2743.45 seconds)
Cbc0010I After 7600 nodes, 3766 on tree, 869.67213 best solution, best possible 101.33597 (2777.07 seconds)
Cbc0010I After 7700 nodes, 3816 on tree, 869.67213 best solution, best possible 101.33597 (2794.56 seconds)
Cbc0010I After 7800 nodes, 3866 on tree, 869.67213 best solution, best possible 101.33597 (2811.52 seconds)
Cbc0010I After 7900 nodes, 3916 on tree, 869.67213 best solution, best possible 101.33597 (2828.23 seconds)
Cbc0010I After 8000 nodes, 3966 on tree, 869.67213 best solution, best possible 101.33597 (2843.58 seconds)
Cbc0010I After 8100 nodes, 4016 on tree, 869.67213 best solution, best possible 101.33597 (2857.35 seconds)
Cbc0010I After 8200 nodes, 4066 on tree, 869.67213 best solution, best possible 101.33597 (2869.72 seconds)
Cbc0010I After 8300 nodes, 4116 on tree, 869.67213 best solution, best possible 101.33597 (2881.96 seconds)
Cbc0010I After 8400 nodes, 4166 on tree, 869.67213 best solution, best possible 101.33597 (2894.62 seconds)
Cbc0010I After 8500 nodes, 4216 on tree, 869.67213 best solution, best possible 101.33597 (2907.09 seconds)
Cbc0010I After 8600 nodes, 4266 on tree, 869.67213 best solution, best possible 101.33597 (2919.08 seconds)
Cbc0010I After 8700 nodes, 4316 on tree, 869.67213 best solution, best possible 101.33597 (2931.09 seconds)
Cbc0010I After 8800 nodes, 4366 on tree, 869.67213 best solution, best possible 101.33597 (2943.24 seconds)
Cbc0010I After 8900 nodes, 4416 on tree, 869.67213 best solution, best possible 101.33597 (2955.65 seconds)
Cbc0010I After 9000 nodes, 4466 on tree, 869.67213 best solution, best possible 101.33597 (2967.88 seconds)
Cbc0010I After 9100 nodes, 4516 on tree, 869.67213 best solution, best possible 101.33597 (2979.69 seconds)
Cbc0010I After 9200 nodes, 4566 on tree, 869.67213 best solution, best possible 101.33597 (2991.25 seconds)
Cbc0010I After 9300 nodes, 4616 on tree, 869.67213 best solution, best possible 101.33597 (3001.69 seconds)
Cbc0010I After 9400 nodes, 4666 on tree, 869.67213 best solution, best possible 101.33597 (3011.96 seconds)
Cbc0010I After 9500 nodes, 4716 on tree, 869.67213 best solution, best possible 101.33597 (3022.22 seconds)
Couenne: new cutoff value 6.9718557174e+02 (3049.3 seconds)
Cbc0010I After 9600 nodes, 4763 on tree, 869.67213 best solution, best possible 101.36174 (3053.85 seconds)
Cbc0010I After 9700 nodes, 4813 on tree, 869.67213 best solution, best possible 101.36174 (3084.88 seconds)
Cbc0010I After 9800 nodes, 4863 on tree, 869.67213 best solution, best possible 101.36174 (3101.04 seconds)
Cbc0010I After 9900 nodes, 4913 on tree, 869.67213 best solution, best possible 101.36174 (3118.24 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 10000 nodes, 4958 on tree, 869.67213 best solution, best possible 101.39361 (3299.46 seconds)
Cbc0010I After 10100 nodes, 5008 on tree, 869.67213 best solution, best possible 101.39361 (3338.74 seconds)
Cbc0010I After 10200 nodes, 5058 on tree, 869.67213 best solution, best possible 101.39361 (3355.55 seconds)
Cbc0010I After 10300 nodes, 5108 on tree, 869.67213 best solution, best possible 101.39361 (3371.08 seconds)
Cbc0010I After 10400 nodes, 5158 on tree, 869.67213 best solution, best possible 101.39361 (3388.37 seconds)
Cbc0010I After 10500 nodes, 5203 on tree, 869.67213 best solution, best possible 101.43463 (3455.40 seconds)
Cbc0010I After 10600 nodes, 5253 on tree, 869.67213 best solution, best possible 101.43463 (3494.33 seconds)
Cbc0010I After 10700 nodes, 5303 on tree, 869.67213 best solution, best possible 101.43463 (3519.09 seconds)
Cbc0010I After 10800 nodes, 5353 on tree, 869.67213 best solution, best possible 101.43463 (3537.28 seconds)
Cbc0010I After 10900 nodes, 5403 on tree, 869.67213 best solution, best possible 101.43463 (3554.36 seconds)
Cbc0010I After 11000 nodes, 5453 on tree, 869.67213 best solution, best possible 101.43463 (3571.54 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 869.67213 (best possible 101.43463), took 1528131 iterations and 11023 nodes (3619.11 seconds)
Cbc0035I Maximum depth 1575, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.060546s)
Total solve time:                         3619.48s (3619.48s in branch-and-bound)
Lower bound:                              101.435
Upper bound:                              697.186  (gap: 581.59%)
Branch-and-bound nodes:                     11023
Stats: /tmp/jl_5d5GyJ/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.060546 [sep]  3619.48 [time]  3619.49 [bb]         1.014346e+02 [lower]         6.971856e+02 [upper]   11023 [nodes]
Performance of                           FBBT:	    278.867s,    15936 runs. fix: 0.000438264 shrnk: 0.00180796 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.6745s,        8 runs. fix:   0.275862 shrnk:     3.3821 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt
