solving instance uflp nlass holmberg 55 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.0768000001e+04 (29.8708 seconds)
29.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4973.9593      436 85.065649
NLP0014I             2      INFEAS 0.050199793       41 2.824227
Loaded instance "/tmp/jl_zCq981/model.nl"
Constraints:         6100
Variables:           6020 (2020 integer)
Auxiliaries:         4100 (0 integer)

Coin0506I Presolve 26095 (-6) rows, 10015 (-105) columns and 62003 (-117) elements
Clp0006I 0  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082039e+13 (2001)
Clp0006I 355  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082039e+13 (2001)
Clp0006I 710  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082039e+13 (2001)
Clp0006I 1065  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082039e+13 (2001)
Clp0006I 1420  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082039e+13 (2001)
Clp0006I 1775  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082039e+13 (2001)
Clp0029I End of values pass after 2001 iterations
Clp0006I 2001  Obj 0 Primal inf 99.9999 (100) Dual inf 6.7082042e+13 (4000)
Clp0006I 2356  Obj 766.69793 Primal inf 93.956 (101) Dual inf 6.5648976e+13 (3964)
Clp0006I 2711  Obj 3335.4392 Primal inf 76.917415 (106) Dual inf 3.1900994e+09 (3805)
Clp0006I 3066  Obj 4822.6862 Primal inf 60.213649 (99) Dual inf 2.5918018e+09 (3645)
Clp0006I 3421  Obj 5709.6633 Primal inf 40.062645 (89) Dual inf 1.9103478e+09 (3543)
Clp0006I 3776  Obj 6405.9531 Primal inf 19.385975 (75) Dual inf 1.3169287e+09 (3428)
Clp0006I 4131  Obj 7038.1273 Primal inf 0.53718331 (8) Dual inf 8969049.2 (3145)
Clp0006I 4486  Obj 6689.2687 Dual inf 3375072.8 (3028)
Clp0006I 4841  Obj 5880.9093 Dual inf 2862029.5 (2803)
Clp0006I 5196  Obj 5160.0309 Dual inf 2359641.4 (2549)
Clp0006I 5551  Obj 1272.7119 Dual inf 1942973.4 (2333)
Clp0006I 5906  Obj -3305.8124 Dual inf 1888045.6 (2084)
Clp0006I 6261  Obj -11143.788 Dual inf 2456593.4 (1962)
Clp0006I 6616  Obj -17863.306 Dual inf 1931003.2 (1770)
Clp0006I 6971  Obj -23663.939 Dual inf 1594050.1 (1587)
Clp0006I 7326  Obj -28355.225 Dual inf 3221928.1 (1492)
Clp0006I 7681  Obj -33408.49 Dual inf 1142280 (1297)
Clp0006I 8036  Obj -35877.367 Dual inf 447495.33 (1043)
Clp0006I 8391  Obj -36965.324 Dual inf 290261.99 (859)
Clp0006I 8746  Obj -37750.688 Dual inf 301857.8 (644)
Clp0006I 9101  Obj -37991.136 Dual inf 74767.146 (457)
Clp0006I 9456  Obj -38229.402 Dual inf 26673.383 (257)
Clp0006I 9811  Obj -38353.351 Dual inf 692.22684 (35)
Clp0006I 9842  Obj -38353.861
Clp0000I Optimal - objective value -38353.861
Clp0000I Optimal - objective value -38353.859
Clp0032I Optimal objective -38353.85937 - 9842 iterations time 1.732, Presolve 0.07
Clp0000I Optimal - objective value -38353.859
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -38353.859
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 1176 added rows had average density of 2
Cbc0013I At root node, 1176 cuts changed objective from -38353.859 to -36916.112 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 10286 row cuts average 2.0 elements, 46274 column cuts (47447 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (243.93 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -36609.446 (2258.66 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -36609.446 (2326.43 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -36609.446 (2396.99 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -36609.446 (2474.80 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -36609.446 (2544.56 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -36609.446 (2610.38 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -36609.446 (2670.78 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -36609.446 (2728.87 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -36609.446 (2782.31 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -36609.446 (2834.74 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -36609.446 (2884.66 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -36609.446 (2937.15 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -36609.446 (2985.27 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -36609.446 (3030.45 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -36609.446 (3078.30 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -36609.446 (3125.63 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -36609.446 (3172.56 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -36609.446 (3216.44 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -36609.446 (3260.41 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -36609.446 (3304.13 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -36609.446 (3349.25 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -36609.446 (3393.76 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -36609.446 (3436.35 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -36609.446), took 907451 iterations and 2388 nodes (3510.60 seconds)
Cbc0035I Maximum depth 1194, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      26101
Linearization cuts added in total:          26101  (separation time: 0.078681s)
Total solve time:                         3512.36s (3512.36s in branch-and-bound)
Lower bound:                             -36609.4
Upper bound:                                20768  (gap: 156.72%)
Branch-and-bound nodes:                      2388
Stats: /tmp/jl_zCq981/model.nl 6020 [var] 2020 [int] 6100 [con] 4100 [aux]  26101 [root]    26101 [tot] 0.078681 [sep]  3512.36 [time]   3512.4 [bb]        -3.660945e+04 [lower]         2.076800e+04 [upper]    2388 [nodes]
Performance of                           FBBT:	    76.9213s,     4667 runs. fix:          0 shrnk:    407.041 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    15.3254s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p55
