solving instance uflp nlass holmberg 43 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 8.8870000002e+03 (27.3429 seconds)
27.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3585.5809      221 68.837316
NLP0014I             2      INFEAS 0.034224898       39 2.544625
Loaded instance "/tmp/jl_2lBEBp/model.nl"
Constraints:         6370
Variables:           6330 (2130 integer)
Auxiliaries:         4270 (0 integer)

Coin0506I Presolve 27357 (-14) rows, 10517 (-83) columns and 65089 (-111) elements
Clp0006I 0  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (2101)
Clp0006I 361  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (2101)
Clp0006I 722  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (2101)
Clp0006I 1083  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (2101)
Clp0006I 1444  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (2101)
Clp0006I 1805  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (2101)
Clp0029I End of values pass after 2101 iterations
Clp0006I 2101  Obj 0 Primal inf 105.73739 (70) Dual inf 8.0982463e+12 (4200)
Clp0006I 2462  Obj 1261.2148 Primal inf 85.563485 (241) Dual inf 8.2175389e+12 (4157)
Clp0006I 2823  Obj 3572.5108 Primal inf 44.028831 (135) Dual inf 3.8119574e+08 (4173)
Clp0006I 3184  Obj 5621.6019 Primal inf 11.828015 (110) Dual inf 2.1853004e+08 (3320)
Clp0006I 3545  Obj 6792.3066 Dual inf 151261.66 (2890)
Clp0006I 3906  Obj 6792.3066 Dual inf 162953.44 (2839)
Clp0006I 4267  Obj 6586.0154 Dual inf 182920.5 (2730)
Clp0006I 4628  Obj 3109.7972 Dual inf 285637.82 (2637)
Clp0006I 4989  Obj -859.98841 Dual inf 332763.92 (2435)
Clp0006I 5350  Obj -4916.0175 Dual inf 345606.96 (2417)
Clp0006I 5711  Obj -8805.4824 Dual inf 327062.82 (2395)
Clp0006I 6072  Obj -11322.543 Dual inf 242111.17 (2280)
Clp0006I 6433  Obj -11611.06 Dual inf 334378.81 (2077)
Clp0006I 6794  Obj -15019.718 Dual inf 254019.06 (2041)
Clp0006I 7155  Obj -15352.486 Dual inf 219304.66 (1708)
Clp0006I 7516  Obj -17091.064 Dual inf 196612.23 (1525)
Clp0006I 7877  Obj -19246.424 Dual inf 196979.47 (1359)
Clp0006I 8238  Obj -20601.51 Dual inf 89959.282 (1069)
Clp0006I 8599  Obj -22063.446 Dual inf 47336.927 (700)
Clp0006I 8960  Obj -22627.109 Dual inf 31644.501 (340)
Clp0006I 9321  Obj -22722.823 Dual inf 517.76843 (81)
Clp0006I 9394  Obj -22723.844
Clp0000I Optimal - objective value -22723.844
Clp0032I Optimal objective -22723.84435 - 9394 iterations time 1.622
Clp0000I Optimal - objective value -22723.839
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -22723.839
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 676 added rows had average density of 2
Cbc0013I At root node, 676 cuts changed objective from -22723.839 to -21887.943 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 5665 row cuts average 2.0 elements, 64008 column cuts (64658 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (144.15 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -21549.774 (1729.00 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -21549.774 (1784.39 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -21549.774 (1843.97 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -21549.774 (1907.36 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -21549.774 (1971.94 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -21549.774 (2040.28 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -21549.774 (2111.25 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -21549.774 (2181.82 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -21549.774 (2252.39 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -21549.774 (2324.73 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -21549.774 (2393.42 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -21549.774 (2463.66 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -21549.774 (2531.55 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -21549.774 (2595.22 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -21549.774 (2649.72 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -21549.774 (2697.32 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -21549.774 (2743.53 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -21549.774 (2791.28 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -21549.774 (2841.15 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -21549.774 (2887.19 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -21549.774 (2934.73 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -21549.774 (2980.70 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -21549.774 (3025.68 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -21549.774 (3069.71 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -21549.774 (3112.91 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -21549.774 (3155.07 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -21549.774 (3197.50 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -21549.774 (3239.11 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -21549.774 (3280.53 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -21549.774 (3321.40 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -21549.774 (3363.99 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -21549.774 (3408.80 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -21549.774 (3456.62 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -21549.774), took 1374091 iterations and 3378 nodes (3564.42 seconds)
Cbc0035I Maximum depth 1689, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      27371
Linearization cuts added in total:          27371  (separation time: 0.066266s)
Total solve time:                         3566.06s (3566.06s in branch-and-bound)
Lower bound:                             -21549.8
Upper bound:                                 8887  (gap: 141.23%)
Branch-and-bound nodes:                      3378
Stats: /tmp/jl_2lBEBp/model.nl 6330 [var] 2130 [int] 6370 [con] 4270 [aux]  27371 [root]    27371 [tot] 0.066266 [sep]  3566.06 [time]  3566.09 [bb]        -2.154977e+04 [lower]         8.887000e+03 [upper]    3378 [nodes]
Performance of                           FBBT:	    80.3623s,     6728 runs. fix:          0 shrnk:    391.603 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    14.6411s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p43
