solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-5.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 10.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 88.354416       42 27.312378
NLP0014I             2      INFEAS 0.99999999       36 1.740587
Loaded instance "/tmp/jl_1pejph/model.nl"
Constraints:         5460
Variables:           5430 (1830 integer)
Auxiliaries:         1861 (0 integer)

Coin0506I Presolve 12600 (-1861) rows, 5370 (-1921) columns and 26880 (-5611) elements
Clp0006I 0  Obj 0 Primal inf 59.99994 (60) Dual inf 1.8e+13 (1800)
Clp0006I 288  Obj 142.3496 Primal inf 55.124936 (64) Dual inf 1.806e+13 (1800)
Clp0006I 576  Obj 278.89691 Primal inf 46.874924 (76) Dual inf 1.6503909e+08 (1800)
Clp0006I 864  Obj 405.89066 Primal inf 41.374916 (84) Dual inf 1.654029e+08 (1800)
Clp0006I 1152  Obj 482.24522 Primal inf 37.24991 (90) Dual inf 1.6567584e+08 (1800)
Clp0006I 1440  Obj 629.58146 Primal inf 29.687399 (101) Dual inf 1.6617621e+08 (1800)
Clp0006I 1728  Obj 785.08459 Primal inf 22.812389 (111) Dual inf 1.6663099e+08 (1800)
Clp0006I 2016  Obj 1090.2039 Primal inf 3.374946 (54) Dual inf 7620990.3 (721)
Clp0006I 2304  Obj 872.64266 Dual inf 76572.769 (293)
Clp0006I 2555  Obj 558.28578 Dual inf 10528.174 (190)
Clp0006I 2833  Obj 347.50123 Dual inf 6613.2 (159)
Clp0006I 3099  Obj 133.28241 Dual inf 5782.2795 (121)
Clp0006I 3387  Obj 60.167403 Dual inf 11170.756 (172)
Clp0006I 3675  Obj 42.499992 Dual inf 23156.83 (216)
Clp0006I 3941  Obj 29.999981 Dual inf 1875.5486 (110)
Clp0006I 4229  Obj 16.999969 Dual inf 1078.5697 (35)
Clp0006I 4451  Obj 9.1249557
Clp0000I Optimal - objective value 9.1249557
Clp0000I Optimal - objective value 9.125
Clp0032I Optimal objective 9.125 - 4451 iterations time 0.812, Presolve 0.04
Clp0000I Optimal - objective value 9.125
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 9.125
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2158 added rows had average density of 2
Cbc0013I At root node, 2158 cuts changed objective from 9.125 to 80.642851 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 28627 row cuts average 2.0 elements, 5220 column cuts (6509 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (71.63 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.4353538747e+02 (254.46 seconds)
Cbc0012I Integer solution of 743.53539 found by Couenne Rounding NLP after 18831 iterations and 1 nodes (198.99 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 6.4815730449e+02 (352.558 seconds)
Cbc0012I Integer solution of 648.1573 found by Couenne Rounding NLP after 22417 iterations and 2 nodes (297.09 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 648.1573 best solution, best possible 84.906442 (916.79 seconds)
Cbc0010I After 200 nodes, 100 on tree, 648.1573 best solution, best possible 84.906442 (971.54 seconds)
Cbc0010I After 300 nodes, 150 on tree, 648.1573 best solution, best possible 84.906442 (1019.15 seconds)
Cbc0010I After 400 nodes, 200 on tree, 648.1573 best solution, best possible 84.906442 (1061.88 seconds)
Cbc0010I After 500 nodes, 250 on tree, 648.1573 best solution, best possible 84.906442 (1095.66 seconds)
Cbc0010I After 600 nodes, 300 on tree, 648.1573 best solution, best possible 84.906442 (1127.09 seconds)
Cbc0010I After 700 nodes, 350 on tree, 648.1573 best solution, best possible 84.906442 (1155.96 seconds)
Cbc0010I After 800 nodes, 399 on tree, 648.1573 best solution, best possible 84.906442 (1182.29 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 900 nodes, 438 on tree, 648.1573 best solution, best possible 85.055894 (1706.57 seconds)
Cbc0010I After 1000 nodes, 488 on tree, 648.1573 best solution, best possible 85.055894 (1773.11 seconds)
Cbc0010I After 1100 nodes, 538 on tree, 648.1573 best solution, best possible 85.055894 (1824.24 seconds)
Cbc0010I After 1200 nodes, 588 on tree, 648.1573 best solution, best possible 85.055894 (1864.47 seconds)
Cbc0010I After 1300 nodes, 638 on tree, 648.1573 best solution, best possible 85.055894 (1896.64 seconds)
Cbc0010I After 1400 nodes, 688 on tree, 648.1573 best solution, best possible 85.055894 (1921.82 seconds)
Cbc0010I After 1500 nodes, 734 on tree, 648.1573 best solution, best possible 85.055894 (1940.39 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1600 nodes, 769 on tree, 648.1573 best solution, best possible 85.077108 (2128.11 seconds)
Cbc0010I After 1700 nodes, 819 on tree, 648.1573 best solution, best possible 85.077108 (2201.25 seconds)
Cbc0010I After 1800 nodes, 869 on tree, 648.1573 best solution, best possible 85.077108 (2252.24 seconds)
Cbc0010I After 1900 nodes, 919 on tree, 648.1573 best solution, best possible 85.077108 (2293.27 seconds)
Cbc0010I After 2000 nodes, 969 on tree, 648.1573 best solution, best possible 85.077108 (2330.41 seconds)
Cbc0010I After 2100 nodes, 1019 on tree, 648.1573 best solution, best possible 85.077108 (2363.91 seconds)
Cbc0010I After 2200 nodes, 1069 on tree, 648.1573 best solution, best possible 85.077108 (2389.75 seconds)
Cbc0010I After 2300 nodes, 1119 on tree, 648.1573 best solution, best possible 85.077108 (2408.98 seconds)
Couenne: new cutoff value 5.6070974379e+02 (2476.98 seconds)
Cbc0004I Integer solution of 560.70974 found after 2046908 iterations and 2368 nodes (2421.53 seconds)
Cbc0010I After 2400 nodes, 982 on tree, 560.70974 best solution, best possible 85.080926 (2458.72 seconds)
Cbc0010I After 2500 nodes, 1032 on tree, 560.70974 best solution, best possible 85.080926 (2513.38 seconds)
Cbc0010I After 2600 nodes, 1082 on tree, 560.70974 best solution, best possible 85.080926 (2569.07 seconds)
Cbc0010I After 2700 nodes, 1132 on tree, 560.70974 best solution, best possible 85.080926 (2612.13 seconds)
Cbc0010I After 2800 nodes, 1182 on tree, 560.70974 best solution, best possible 85.080926 (2644.65 seconds)
Cbc0010I After 2900 nodes, 1232 on tree, 560.70974 best solution, best possible 85.080926 (2672.07 seconds)
Cbc0010I After 3000 nodes, 1282 on tree, 560.70974 best solution, best possible 85.080926 (2692.31 seconds)
Cbc0010I After 3100 nodes, 1326 on tree, 560.70974 best solution, best possible 85.118868 (2849.84 seconds)
Cbc0010I After 3200 nodes, 1376 on tree, 560.70974 best solution, best possible 85.118868 (2912.11 seconds)
Cbc0010I After 3300 nodes, 1426 on tree, 560.70974 best solution, best possible 85.118868 (2951.62 seconds)
Cbc0010I After 3400 nodes, 1476 on tree, 560.70974 best solution, best possible 85.118868 (2975.62 seconds)
Cbc0010I After 3500 nodes, 1526 on tree, 560.70974 best solution, best possible 85.118868 (3002.34 seconds)
Cbc0010I After 3600 nodes, 1572 on tree, 560.70974 best solution, best possible 85.17982 (3024.84 seconds)
Cbc0010I After 3700 nodes, 1622 on tree, 560.70974 best solution, best possible 85.17982 (3085.08 seconds)
Cbc0010I After 3800 nodes, 1672 on tree, 560.70974 best solution, best possible 85.17982 (3135.76 seconds)
Cbc0010I After 3900 nodes, 1722 on tree, 560.70974 best solution, best possible 85.17982 (3177.25 seconds)
Cbc0010I After 4000 nodes, 1772 on tree, 560.70974 best solution, best possible 85.17982 (3210.94 seconds)
Cbc0010I After 4100 nodes, 1822 on tree, 560.70974 best solution, best possible 85.17982 (3246.86 seconds)
Cbc0010I After 4200 nodes, 1872 on tree, 560.70974 best solution, best possible 85.17982 (3269.87 seconds)
Cbc0010I After 4300 nodes, 1922 on tree, 560.70974 best solution, best possible 85.17982 (3287.13 seconds)
Cbc0010I After 4400 nodes, 1958 on tree, 560.70974 best solution, best possible 85.17982 (3302.35 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 560.70974 (best possible 85.17982), took 3708586 iterations and 4421 nodes (3549.24 seconds)
Cbc0035I Maximum depth 417, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      14461
Linearization cuts added in total:          14461  (separation time: 0.040771s)
Total solve time:                         3550.18s (3550.18s in branch-and-bound)
Lower bound:                              85.1798
Upper bound:                               560.71  (gap: 551.79%)
Branch-and-bound nodes:                      4421
Stats: /tmp/jl_1pejph/model.nl 5430 [var] 1830 [int] 5460 [con] 1861 [aux]  14461 [root]    14461 [tot] 0.040771 [sep]  3550.18 [time]   3550.2 [bb]         8.517982e+01 [lower]         5.607097e+02 [upper]    4421 [nodes]
Performance of                           FBBT:	    68.0499s,     8499 runs. fix: 0.000156962 shrnk: 0.00170808 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    33.4643s,       11 runs. fix:   0.230769 shrnk:    20.1248 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-5.txt
