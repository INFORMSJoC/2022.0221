solving instance uflp nlass orlib 82 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.8045364751e+06 (7.2264 seconds)
7.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 667326.64     3000 288.91749
NLP0014I             1      FAILED 667326.64     3000 289.29551   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_VrsS4H/model.nl"
Constraints:         3800
Variables:           3775 (1275 integer)
Auxiliaries:         2549 (0 integer)

Coin0506I Presolve 16239 (-52) rows, 6270 (-54) columns and 38646 (-155) elements
Clp0006I 0  Obj 0 Primal inf 302.70131 (50) Dual inf 2.7769493e+13 (1251)
Clp0006I 306  Obj 0 Primal inf 302.70131 (50) Dual inf 2.7769493e+13 (1251)
Clp0006I 612  Obj 0 Primal inf 302.70131 (50) Dual inf 2.7769493e+13 (1251)
Clp0006I 918  Obj 0 Primal inf 302.70131 (50) Dual inf 2.7769493e+13 (1251)
Clp0006I 1224  Obj 0 Primal inf 302.70131 (50) Dual inf 2.7769493e+13 (1251)
Clp0029I End of values pass after 1250 iterations
Clp0006I 1250  Obj 0 Primal inf 302.70131 (50) Dual inf 2.7769493e+13 (2499)
Clp0006I 1556  Obj 87005.922 Primal inf 243.76872 (124) Dual inf 2.1317962e+13 (2338)
Clp0006I 1862  Obj 387304.77 Primal inf 117.0248 (67) Dual inf 1.000913e+13 (2022)
Clp0006I 2168  Obj 1420816.6 Primal inf 0.63902955 (1) Dual inf 2.8239963e+11 (1741)
Clp0006I 2474  Obj -108242.29 Dual inf 25862668 (1591)
Clp0006I 2780  Obj -3110919.4 Dual inf 15000525 (1501)
Clp0006I 3086  Obj -4455173 Dual inf 19258101 (1516)
Clp0006I 3392  Obj -4790773 Dual inf 13183305 (1322)
Clp0006I 3698  Obj -5315655.4 Dual inf 10871771 (1239)
Clp0006I 4004  Obj -5906233.7 Dual inf 15975873 (1081)
Clp0006I 4236  Obj -6303005.4 Dual inf 58663202 (1132)
Clp0006I 4542  Obj -6825758.3 Dual inf 12488412 (1100)
Clp0006I 4848  Obj -7064703.1 Dual inf 7163940 (812)
Clp0006I 5154  Obj -7236963 Dual inf 2175208.5 (641)
Clp0006I 5460  Obj -7336292.5 Dual inf 496106.65 (235)
Clp0006I 5702  Obj -7365980.5
Clp0000I Optimal - objective value -7365980.5
Clp0032I Optimal objective -7365980.472 - 5702 iterations time 0.782
Clp0000I Optimal - objective value -7365980.5
NLP Heuristic: NLP0014I             3      FAILED 2493839.7     3000 156.33541
no solution.
Clp0000I Optimal - objective value -7365980.5
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 411 added rows had average density of 2
Cbc0013I At root node, 411 cuts changed objective from -7365980.5 to -7228393.6 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2228 row cuts average 2.0 elements, 31800 column cuts (32206 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (456.96 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -7210148 (1440.39 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -7210148 (1461.24 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -7210148 (1481.70 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -7210148 (1502.87 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -7210148 (1523.57 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -7210148 (1544.97 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -7210148 (1566.07 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -7210148 (1586.28 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -7210148 (1606.83 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -7210148 (1627.70 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -7210148 (1646.20 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -7210148 (1664.53 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -7210148 (1683.81 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -7210148 (1702.30 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -7210148 (1722.49 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -7210148 (1742.20 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -7210148 (1763.32 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -7210148 (1783.29 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -7210148 (1803.42 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -7210148 (1823.51 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -7210148 (1843.80 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -7210148 (1862.40 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -7210148 (1880.30 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -7210148 (1900.44 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -7210148 (1920.79 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -7210148 (1944.40 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -7210148 (1968.11 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2800 nodes, 1398 on tree, 1e+50 best solution, best possible -7203265.1 (2904.06 seconds)
Cbc0010I After 2900 nodes, 1448 on tree, 1e+50 best solution, best possible -7203265.1 (2924.98 seconds)
Cbc0010I After 3000 nodes, 1498 on tree, 1e+50 best solution, best possible -7203265.1 (2945.44 seconds)
Cbc0010I After 3100 nodes, 1548 on tree, 1e+50 best solution, best possible -7203265.1 (2966.89 seconds)
Cbc0010I After 3200 nodes, 1598 on tree, 1e+50 best solution, best possible -7203265.1 (2987.87 seconds)
Cbc0010I After 3300 nodes, 1648 on tree, 1e+50 best solution, best possible -7203265.1 (3009.66 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -7203265.1), took 266001 iterations and 3317 nodes (3045.29 seconds)
Cbc0035I Maximum depth 1361, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      16291
Linearization cuts added in total:          16291  (separation time: 0.036384s)
Total solve time:                         3046.08s (3046.08s in branch-and-bound)
Lower bound:                           -7.20327e+06
Upper bound:                           1.80454e+06  (gap: 125.05%)
Branch-and-bound nodes:                      3317
Stats: /tmp/jl_VrsS4H/model.nl 3775 [var] 1275 [int] 3800 [con] 2549 [aux]  16291 [root]    16291 [tot] 0.036384 [sep]  3046.08 [time]   3046.1 [bb]        -7.203265e+06 [lower]         1.804536e+06 [upper]    3317 [nodes]
Performance of                           FBBT:	    32.1632s,     5974 runs. fix:          0 shrnk:    73.1336 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     13.135s,        9 runs. fix:   0.191489 shrnk:  0.0175306 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap82.txt
