solving instance uflp nlass holmberg 11 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3356.1225     1745 53.44403
NLP0014I             2         OPT 7517.4255     1363 29.238241
Couenne: new cutoff value 7.5174255109e+03 (88.143 seconds)
Loaded instance "/tmp/jl_E8CMA0/model.nl"
Constraints:         1550
Variables:           1510 (510 integer)
Auxiliaries:         2051 (0 integer)

Coin0506I Presolve 6991 (-560) rows, 2951 (-610) columns and 15391 (-1170) elements
Clp0006I 0  Obj 0 Primal inf 1856.3052 (1050)
Clp0006I 214  Obj 0 Primal inf 2084.1238 (1100)
Clp0006I 428  Obj 0 Primal inf 2084.1238 (1100)
Clp0006I 642  Obj 2.8017393e-16 Primal inf 2903.6084 (1228)
Clp0006I 856  Obj 6.000186e-16 Primal inf 3719.137 (1375)
Clp0006I 1070  Obj 5.6684306e-16 Primal inf 4520.695 (1352)
Clp0006I 1284  Obj 7.3386528e-16 Primal inf 5113.8469 (1236)
Clp0006I 1498  Obj 9.3546411e-16 Primal inf 5881.1972 (1143)
Clp0006I 1712  Obj 9.4586952e-16 Primal inf 4666.3265 (943)
Clp0006I 1926  Obj 3.6675114e-16 Primal inf 1147.3202 (349)
Clp0006I 2104  Obj 500
Clp0000I Optimal - objective value 500
Clp0032I Optimal objective 500 - 2104 iterations time 0.132, Presolve 0.04
Clp0000I Optimal - objective value 500
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 500
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 591 added rows had average density of 2
Cbc0013I At root node, 591 cuts changed objective from 500 to 1109.5101 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 7702 row cuts average 2.0 elements, 103 column cuts (677 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (25.85 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1514.7439 (596.91 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1514.7439 (607.81 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1514.7439 (618.74 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1514.7439 (629.57 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1514.7439 (640.88 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1514.7439 (651.83 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1514.7439 (662.47 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 1514.7439 (672.62 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 1514.7439 (682.05 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 1514.7439 (691.50 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 1514.7439 (700.60 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 1514.7439 (709.07 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 1514.7439 (717.36 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 1514.7439 (725.72 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 1514.7439 (734.07 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 1514.7439 (742.41 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 1514.7439 (750.80 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 1514.7439 (759.31 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 1514.7439 (767.87 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 1514.7439 (776.38 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 1514.7439 (784.94 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 1514.7439 (793.32 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 1514.7439 (801.72 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 1514.7439 (810.07 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible 1514.7439 (818.55 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible 1514.7439 (826.90 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible 1514.7439 (835.15 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible 1514.7439 (843.16 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible 1514.7439 (851.07 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible 1514.7439 (858.71 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible 1514.7439 (866.27 seconds)
Couenne: new cutoff value 5.7575704306e+03 (961.148 seconds)
Cbc0010I After 3200 nodes, 1598 on tree, 1e+50 best solution, best possible 1522.2012 (1021.23 seconds)
Cbc0010I After 3300 nodes, 1648 on tree, 1e+50 best solution, best possible 1522.2012 (1039.58 seconds)
Cbc0010I After 3400 nodes, 1698 on tree, 1e+50 best solution, best possible 1522.2012 (1050.24 seconds)
Cbc0010I After 3500 nodes, 1748 on tree, 1e+50 best solution, best possible 1522.2012 (1061.12 seconds)
Cbc0010I After 3600 nodes, 1798 on tree, 1e+50 best solution, best possible 1522.2012 (1072.20 seconds)
Cbc0010I After 3700 nodes, 1848 on tree, 1e+50 best solution, best possible 1522.2012 (1083.05 seconds)
Cbc0010I After 3800 nodes, 1898 on tree, 1e+50 best solution, best possible 1522.2012 (1093.74 seconds)
Cbc0010I After 3900 nodes, 1948 on tree, 1e+50 best solution, best possible 1522.2012 (1103.97 seconds)
Cbc0010I After 4000 nodes, 1998 on tree, 1e+50 best solution, best possible 1522.2012 (1113.12 seconds)
Cbc0010I After 4100 nodes, 2048 on tree, 1e+50 best solution, best possible 1522.2012 (1122.45 seconds)
Cbc0010I After 4200 nodes, 2098 on tree, 1e+50 best solution, best possible 1522.2012 (1131.61 seconds)
Cbc0010I After 4300 nodes, 2148 on tree, 1e+50 best solution, best possible 1522.2012 (1140.00 seconds)
Cbc0010I After 4400 nodes, 2198 on tree, 1e+50 best solution, best possible 1522.2012 (1148.48 seconds)
Cbc0010I After 4500 nodes, 2248 on tree, 1e+50 best solution, best possible 1522.2012 (1156.94 seconds)
Cbc0010I After 4600 nodes, 2298 on tree, 1e+50 best solution, best possible 1522.2012 (1165.28 seconds)
Cbc0010I After 4700 nodes, 2348 on tree, 1e+50 best solution, best possible 1522.2012 (1173.62 seconds)
Cbc0010I After 4800 nodes, 2398 on tree, 1e+50 best solution, best possible 1522.2012 (1181.93 seconds)
Cbc0010I After 4900 nodes, 2448 on tree, 1e+50 best solution, best possible 1522.2012 (1190.30 seconds)
Cbc0010I After 5000 nodes, 2498 on tree, 1e+50 best solution, best possible 1522.2012 (1198.78 seconds)
Cbc0010I After 5100 nodes, 2548 on tree, 1e+50 best solution, best possible 1522.2012 (1207.17 seconds)
Cbc0010I After 5200 nodes, 2598 on tree, 1e+50 best solution, best possible 1522.2012 (1215.63 seconds)
Cbc0010I After 5300 nodes, 2648 on tree, 1e+50 best solution, best possible 1522.2012 (1223.90 seconds)
Cbc0010I After 5400 nodes, 2698 on tree, 1e+50 best solution, best possible 1522.2012 (1232.26 seconds)
Cbc0010I After 5500 nodes, 2748 on tree, 1e+50 best solution, best possible 1522.2012 (1240.54 seconds)
Cbc0010I After 5600 nodes, 2798 on tree, 1e+50 best solution, best possible 1522.2012 (1248.76 seconds)
Cbc0010I After 5700 nodes, 2848 on tree, 1e+50 best solution, best possible 1522.2012 (1256.66 seconds)
Cbc0010I After 5800 nodes, 2898 on tree, 1e+50 best solution, best possible 1522.2012 (1264.53 seconds)
Cbc0010I After 5900 nodes, 2948 on tree, 1e+50 best solution, best possible 1522.2012 (1272.00 seconds)
Cbc0010I After 6000 nodes, 2998 on tree, 1e+50 best solution, best possible 1522.2012 (1279.39 seconds)
Cbc0010I After 6100 nodes, 3048 on tree, 1e+50 best solution, best possible 1522.2012 (1286.81 seconds)
Couenne: new cutoff value 4.7785604528e+03 (1376.18 seconds)
Cbc0004I Integer solution of 4778.5605 found after 220472 iterations and 6113 nodes (1287.81 seconds)
Cbc0010I After 6200 nodes, 1483 on tree, 4778.5605 best solution, best possible 1524.7438 (1450.44 seconds)
Cbc0010I After 6300 nodes, 1533 on tree, 4778.5605 best solution, best possible 1524.7438 (1462.24 seconds)
Cbc0010I After 6400 nodes, 1581 on tree, 4778.5605 best solution, best possible 1524.7438 (1474.82 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 6500 nodes, 1629 on tree, 4778.5605 best solution, best possible 1537.0846 (1877.54 seconds)
Cbc0010I After 6600 nodes, 1677 on tree, 4778.5605 best solution, best possible 1540.1362 (1931.14 seconds)
Cbc0010I After 6700 nodes, 1727 on tree, 4778.5605 best solution, best possible 1540.1362 (1946.11 seconds)
Cbc0010I After 6800 nodes, 1777 on tree, 4778.5605 best solution, best possible 1540.1362 (1957.77 seconds)
Cbc0010I After 6900 nodes, 1827 on tree, 4778.5605 best solution, best possible 1540.1362 (1970.55 seconds)
Cbc0010I After 7000 nodes, 1876 on tree, 4778.5605 best solution, best possible 1540.1362 (1984.45 seconds)
Cbc0010I After 7100 nodes, 1921 on tree, 4778.5605 best solution, best possible 1557.131 (2087.61 seconds)
Cbc0010I After 7200 nodes, 1970 on tree, 4778.5605 best solution, best possible 1557.131 (2102.09 seconds)
Cbc0010I After 7300 nodes, 2020 on tree, 4778.5605 best solution, best possible 1557.131 (2113.10 seconds)
Cbc0010I After 7400 nodes, 2067 on tree, 4778.5605 best solution, best possible 1600.1171 (2133.02 seconds)
Cbc0010I After 7500 nodes, 2102 on tree, 4778.5605 best solution, best possible 1600.1171 (2144.50 seconds)
Cbc0010I After 7600 nodes, 2152 on tree, 4778.5605 best solution, best possible 1629.9178 (2171.86 seconds)
Cbc0010I After 7700 nodes, 2188 on tree, 4778.5605 best solution, best possible 1671.3479 (2193.45 seconds)
Cbc0010I After 7800 nodes, 2238 on tree, 4778.5605 best solution, best possible 1671.3479 (2221.50 seconds)
Cbc0010I After 7900 nodes, 2286 on tree, 4778.5605 best solution, best possible 1671.4302 (2278.30 seconds)
Cbc0010I After 8000 nodes, 2336 on tree, 4778.5605 best solution, best possible 1671.4302 (2298.79 seconds)
Cbc0010I After 8100 nodes, 2386 on tree, 4778.5605 best solution, best possible 1671.4302 (2317.26 seconds)
Cbc0010I After 8200 nodes, 2432 on tree, 4778.5605 best solution, best possible 1671.4302 (2332.79 seconds)
Cbc0010I After 8300 nodes, 2467 on tree, 4778.5605 best solution, best possible 1755.9123 (2348.37 seconds)
Cbc0010I After 8400 nodes, 2504 on tree, 4778.5605 best solution, best possible 1912.0604 (2367.11 seconds)
Cbc0010I After 8500 nodes, 2554 on tree, 4778.5605 best solution, best possible 1912.0604 (2384.87 seconds)
Cbc0010I After 8600 nodes, 2601 on tree, 4778.5605 best solution, best possible 1912.0604 (2398.56 seconds)
Cbc0010I After 8700 nodes, 2640 on tree, 4778.5605 best solution, best possible 1916.6726 (2420.91 seconds)
Cbc0010I After 8800 nodes, 2690 on tree, 4778.5605 best solution, best possible 1916.6726 (2442.76 seconds)
Cbc0010I After 8900 nodes, 2740 on tree, 4778.5605 best solution, best possible 1916.6726 (2461.10 seconds)
Cbc0010I After 9000 nodes, 2790 on tree, 4778.5605 best solution, best possible 1916.6726 (2475.56 seconds)
Cbc0010I After 9100 nodes, 2840 on tree, 4778.5605 best solution, best possible 1916.6726 (2487.45 seconds)
Cbc0010I After 9200 nodes, 2890 on tree, 4778.5605 best solution, best possible 1916.6726 (2499.95 seconds)
Cbc0010I After 9300 nodes, 2940 on tree, 4778.5605 best solution, best possible 1916.6726 (2511.65 seconds)
Cbc0010I After 9400 nodes, 2990 on tree, 4778.5605 best solution, best possible 1916.6726 (2523.33 seconds)
Cbc0010I After 9500 nodes, 3040 on tree, 4778.5605 best solution, best possible 1916.6726 (2533.85 seconds)
Cbc0010I After 9600 nodes, 3090 on tree, 4778.5605 best solution, best possible 1916.6726 (2544.00 seconds)
Cbc0010I After 9700 nodes, 3140 on tree, 4778.5605 best solution, best possible 1916.6726 (2553.58 seconds)
Cbc0010I After 9800 nodes, 3190 on tree, 4778.5605 best solution, best possible 1916.6726 (2562.65 seconds)
Cbc0010I After 9900 nodes, 3240 on tree, 4778.5605 best solution, best possible 1916.6726 (2571.78 seconds)
Cbc0010I After 10000 nodes, 3290 on tree, 4778.5605 best solution, best possible 1916.6726 (2581.02 seconds)
Cbc0010I After 10100 nodes, 3340 on tree, 4778.5605 best solution, best possible 1916.6726 (2590.28 seconds)
Cbc0010I After 10200 nodes, 3390 on tree, 4778.5605 best solution, best possible 1916.6726 (2599.45 seconds)
Couenne: new cutoff value 4.1177965721e+03 (2693.07 seconds)
Cbc0004I Integer solution of 4117.7966 found after 1424910 iterations and 10258 nodes (2604.65 seconds)
Cbc0010I After 10300 nodes, 1550 on tree, 4117.7966 best solution, best possible 1917.0021 (2643.17 seconds)
Cbc0010I After 10400 nodes, 1600 on tree, 4117.7966 best solution, best possible 1917.0021 (2688.14 seconds)
Cbc0010I After 10500 nodes, 1650 on tree, 4117.7966 best solution, best possible 1917.0021 (2710.52 seconds)
Cbc0010I After 10600 nodes, 1700 on tree, 4117.7966 best solution, best possible 1917.0021 (2730.57 seconds)
Cbc0010I After 10700 nodes, 1750 on tree, 4117.7966 best solution, best possible 1917.0021 (2746.64 seconds)
Cbc0010I After 10800 nodes, 1796 on tree, 4117.7966 best solution, best possible 1917.0021 (2762.05 seconds)
Cbc0010I After 10900 nodes, 1838 on tree, 4117.7966 best solution, best possible 1921.696 (2784.95 seconds)
Cbc0010I After 11000 nodes, 1888 on tree, 4117.7966 best solution, best possible 1921.696 (2810.70 seconds)
Cbc0010I After 11100 nodes, 1938 on tree, 4117.7966 best solution, best possible 1921.696 (2832.03 seconds)
Cbc0010I After 11200 nodes, 1988 on tree, 4117.7966 best solution, best possible 1921.696 (2850.08 seconds)
Cbc0010I After 11300 nodes, 2038 on tree, 4117.7966 best solution, best possible 1921.696 (2864.59 seconds)
Cbc0010I After 11400 nodes, 2078 on tree, 4117.7966 best solution, best possible 1921.696 (2878.13 seconds)
Cbc0010I After 11500 nodes, 2125 on tree, 4117.7966 best solution, best possible 1922.6784 (2928.24 seconds)
Cbc0010I After 11600 nodes, 2175 on tree, 4117.7966 best solution, best possible 1922.6784 (2950.97 seconds)
Cbc0010I After 11700 nodes, 2225 on tree, 4117.7966 best solution, best possible 1922.6784 (2970.51 seconds)
Cbc0010I After 11800 nodes, 2275 on tree, 4117.7966 best solution, best possible 1922.6784 (2986.51 seconds)
Cbc0010I After 11900 nodes, 2322 on tree, 4117.7966 best solution, best possible 1922.6784 (2999.62 seconds)
Cbc0010I After 12000 nodes, 2372 on tree, 4117.7966 best solution, best possible 1922.6784 (3012.41 seconds)
Cbc0010I After 12100 nodes, 2401 on tree, 4117.7966 best solution, best possible 1922.6784 (3024.61 seconds)
Cbc0010I After 12200 nodes, 2444 on tree, 4117.7966 best solution, best possible 1922.6784 (3036.75 seconds)
Cbc0010I After 12300 nodes, 2484 on tree, 4117.7966 best solution, best possible 1922.6784 (3047.59 seconds)
Cbc0010I After 12400 nodes, 2532 on tree, 4117.7966 best solution, best possible 1922.6784 (3058.88 seconds)
Cbc0010I After 12500 nodes, 2580 on tree, 4117.7966 best solution, best possible 1922.6784 (3070.21 seconds)
Cbc0010I After 12600 nodes, 2629 on tree, 4117.7966 best solution, best possible 1922.6784 (3080.61 seconds)
Cbc0010I After 12700 nodes, 2679 on tree, 4117.7966 best solution, best possible 1922.6784 (3090.86 seconds)
Cbc0010I After 12800 nodes, 2729 on tree, 4117.7966 best solution, best possible 1922.6784 (3101.21 seconds)
Cbc0010I After 12900 nodes, 2779 on tree, 4117.7966 best solution, best possible 1922.6784 (3111.84 seconds)
Cbc0010I After 13000 nodes, 2829 on tree, 4117.7966 best solution, best possible 1922.6784 (3122.44 seconds)
Cbc0010I After 13100 nodes, 2879 on tree, 4117.7966 best solution, best possible 1922.6784 (3132.89 seconds)
Couenne: new cutoff value 4.0930426358e+03 (3224.85 seconds)
Cbc0004I Integer solution of 4093.0426 found after 2146479 iterations and 13135 nodes (3136.43 seconds)
Cbc0010I After 13200 nodes, 2391 on tree, 4093.0426 best solution, best possible 1922.939 (3168.76 seconds)
Cbc0010I After 13300 nodes, 2441 on tree, 4093.0426 best solution, best possible 1922.939 (3193.02 seconds)
Cbc0010I After 13400 nodes, 2491 on tree, 4093.0426 best solution, best possible 1922.939 (3212.05 seconds)
Cbc0010I After 13500 nodes, 2541 on tree, 4093.0426 best solution, best possible 1922.939 (3228.89 seconds)
Cbc0010I After 13600 nodes, 2591 on tree, 4093.0426 best solution, best possible 1922.939 (3243.20 seconds)
Cbc0010I After 13700 nodes, 2635 on tree, 4093.0426 best solution, best possible 1922.939 (3256.11 seconds)
Cbc0010I After 13800 nodes, 2666 on tree, 4093.0426 best solution, best possible 1922.939 (3268.90 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 13900 nodes, 2712 on tree, 4093.0426 best solution, best possible 1925.0303 (3431.44 seconds)
Cbc0010I After 14000 nodes, 2762 on tree, 4093.0426 best solution, best possible 1925.0303 (3452.33 seconds)
Cbc0010I After 14100 nodes, 2812 on tree, 4093.0426 best solution, best possible 1925.0303 (3491.98 seconds)
Cbc0010I After 14200 nodes, 2862 on tree, 4093.0426 best solution, best possible 1925.0303 (3506.09 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 4093.0426 (best possible 1925.0303), took 2577539 iterations and 14244 nodes (3515.55 seconds)
Cbc0035I Maximum depth 1592, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7551
Linearization cuts added in total:           7551  (separation time: 0.028497s)
Total solve time:                         3515.76s (3515.76s in branch-and-bound)
Lower bound:                              1925.03
Upper bound:                              4093.04  (gap: 112.56%)
Branch-and-bound nodes:                     14244
Stats: /tmp/jl_E8CMA0/model.nl 1510 [var]  510 [int] 1550 [con] 2051 [aux]   7551 [root]     7551 [tot] 0.028497 [sep]  3515.76 [time]  3515.77 [bb]         1.925030e+03 [lower]         4.093043e+03 [upper]   14244 [nodes]
Performance of                           FBBT:	    199.021s,    22107 runs. fix: 8.19701e-05 shrnk:     27.441 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	    7.64869s,       12 runs. fix:   0.284404 shrnk:    7.00899 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p11
