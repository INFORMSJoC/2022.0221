solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-1.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.6589459100e+03 (63.5055 seconds)
63.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 532.85108      191 163.0188
NLP0014I             2      INFEAS 0.024948173       39 3.757665
Loaded instance "/tmp/jl_FLXe63/model.nl"
Constraints:         9680
Variables:           9640 (3240 integer)
Auxiliaries:         6480 (0 integer)

Coin0506I Presolve 41601 (-80) rows, 15961 (-159) columns and 99002 (-318) elements
Clp0006I 0  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 433  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 866  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 1299  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 1732  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 2165  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 2598  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0006I 3031  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (3201)
Clp0029I End of values pass after 3201 iterations
Clp0006I 3201  Obj 0 Primal inf 86.420361 (80) Dual inf 1.337368e+13 (6400)
Clp0006I 3634  Obj 264.29106 Primal inf 58.838578 (221) Dual inf 1.3225556e+13 (6131)
Clp0006I 4067  Obj 658.70253 Primal inf 28.158751 (170) Dual inf 90547696 (5337)
Clp0006I 4500  Obj 926.529 Primal inf 1.3915261 (23) Dual inf 3277624.5 (3621)
Clp0006I 4933  Obj 844.28166 Dual inf 58837.379 (3700)
Clp0006I 5366  Obj 844.28166 Dual inf 60944.677 (3677)
Clp0006I 5799  Obj 844.28166 Dual inf 62886.088 (3659)
Clp0006I 6232  Obj 804.04233 Dual inf 65920.738 (3561)
Clp0006I 6665  Obj -91.567307 Dual inf 80691.67 (3199)
Clp0006I 7098  Obj -848.96254 Dual inf 68903.929 (3121)
Clp0006I 7531  Obj -1796.0676 Dual inf 69066.987 (2933)
Clp0006I 7964  Obj -1941.97 Dual inf 65975.484 (2689)
Clp0006I 8397  Obj -2087.8552 Dual inf 61235.264 (2443)
Clp0006I 8830  Obj -2551.4285 Dual inf 125838.49 (2227)
Clp0006I 9263  Obj -3247.4963 Dual inf 83255.646 (2173)
Clp0006I 9696  Obj -3864.1602 Dual inf 84860.471 (1818)
Clp0006I 10129  Obj -4427.2233 Dual inf 86745.262 (1853)
Clp0006I 10562  Obj -4658.8118 Dual inf 27387.936 (1354)
Clp0006I 10995  Obj -4876.6042 Dual inf 17406.261 (857)
Clp0006I 11428  Obj -4927.6822 Dual inf 15985.399 (622)
Clp0006I 11861  Obj -4966.236 Dual inf 322.76614 (180)
Clp0006I 12086  Obj -4972.8929
Clp0000I Optimal - objective value -4972.8929
Clp0032I Optimal objective -4972.892934 - 12086 iterations time 2.022
Clp0000I Optimal - objective value -4972.8923
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -4972.8923
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 967 added rows had average density of 2
Cbc0013I At root node, 967 cuts changed objective from -4972.8923 to -4790.3608 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 7363 row cuts average 2.0 elements, 101186 column cuts (102104 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (341.20 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -4762.4041 (2699.40 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -4762.4041 (2758.39 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -4762.4041 (2824.23 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -4762.4041 (2888.91 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -4762.4041 (2958.88 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -4762.4041 (3027.64 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -4762.4041 (3097.98 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -4762.4041 (3171.01 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -4762.4041 (3241.94 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -4762.4041 (3314.29 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -4762.4041), took 641781 iterations and 1060 nodes (3370.28 seconds)
Cbc0035I Maximum depth 530, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      41681
Linearization cuts added in total:          41681  (separation time: 0.099045s)
Total solve time:                         3372.33s (3372.33s in branch-and-bound)
Lower bound:                              -4762.4
Upper bound:                              1658.95  (gap: 134.81%)
Branch-and-bound nodes:                      1060
Stats: /tmp/jl_FLXe63/model.nl 9640 [var] 3240 [int] 9680 [con] 6480 [aux]  41681 [root]    41681 [tot] 0.099045 [sep]  3372.33 [time]  3372.37 [bb]        -4.762404e+03 [lower]         1.658946e+03 [upper]    1060 [nodes]
Performance of                           FBBT:	    30.6074s,     2148 runs. fix:          0 shrnk:    697.677 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    25.6837s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-1.txt
