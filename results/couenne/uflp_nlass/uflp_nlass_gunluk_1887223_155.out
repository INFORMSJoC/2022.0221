solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 201.58736     1278 54.745612
NLP0014I             2      FAILED 2246.6309     3000 104.30638
NLP0014I *           1      INFEAS 0.99999999       34 0.712526   resolve robustness
Loaded instance "/tmp/jl_dHB4Ce/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2499.3244 (1640)
Clp0006I 277  Obj 0 Primal inf 2681.5793 (1680)
Clp0006I 554  Obj 0 Primal inf 2607.4932 (1680)
Clp0006I 831  Obj -7.4573326e-17 Primal inf 2589.4133 (1711)
Clp0006I 1108  Obj 5.8234856e-16 Primal inf 4301.301 (1940)
Clp0006I 1385  Obj 9.3039577e-16 Primal inf 5208.4607 (1905)
Clp0006I 1662  Obj 1.0315618e-15 Primal inf 5723.2669 (1862)
Clp0006I 1939  Obj 1.078051e-15 Primal inf 3629.3364 (1614)
Clp0006I 2216  Obj 1.067424e-15 Primal inf 2960.9774 (1056)
Clp0006I 2493  Obj 4.2708231e-16 Primal inf 65.662687 (322)
Clp0006I 2770  Obj 5.7147101e-16 Primal inf 80.268693 (304)
Clp0006I 3047  Obj 3.8594222 Primal inf 77.169103 (234)
Clp0006I 3324  Obj 3.8594222 Primal inf 106.69942 (249)
Clp0006I 3601  Obj 6.5611211 Primal inf 78.733733 (93)
Clp0006I 3638  Obj 10.566054
Clp0000I Optimal - objective value 10.566054
Clp0032I Optimal objective 10.5660541 - 3638 iterations time 0.222, Presolve 0.03
Clp0000I Optimal - objective value 10.566054
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10.566054
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 716 added rows had average density of 2
Cbc0013I At root node, 716 cuts changed objective from 10.566054 to 43.404806 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9884 row cuts average 2.0 elements, 5200 column cuts (5694 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (84.06 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.7916244488e+02 (266.564 seconds)
Couenne: new cutoff value 3.6451365730e+02 (444.53 seconds)
Cbc0012I Integer solution of 364.51366 found by Couenne Rounding NLP after 7181 iterations and 1 nodes (263.60 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 3.3967795904e+02 (579.294 seconds)
Cbc0012I Integer solution of 339.67796 found by Couenne Rounding NLP after 9121 iterations and 2 nodes (398.36 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 2.9635324890e+02 (1322.95 seconds)
Cbc0012I Integer solution of 296.35325 found by Couenne Rounding NLP after 18281 iterations and 12 nodes (1142.02 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 296.35325 best solution, best possible 46.940016 (1728.11 seconds)
Cbc0010I After 200 nodes, 100 on tree, 296.35325 best solution, best possible 46.940016 (1761.17 seconds)
Cbc0010I After 300 nodes, 150 on tree, 296.35325 best solution, best possible 46.940016 (1791.98 seconds)
Cbc0010I After 400 nodes, 200 on tree, 296.35325 best solution, best possible 46.940016 (1810.91 seconds)
Cbc0010I After 500 nodes, 232 on tree, 296.35325 best solution, best possible 46.940016 (1831.62 seconds)
Cbc0010I After 600 nodes, 278 on tree, 296.35325 best solution, best possible 46.960841 (1858.21 seconds)
Cbc0010I After 700 nodes, 328 on tree, 296.35325 best solution, best possible 46.960841 (1891.56 seconds)
Cbc0010I After 800 nodes, 378 on tree, 296.35325 best solution, best possible 46.960841 (1921.70 seconds)
Cbc0010I After 900 nodes, 428 on tree, 296.35325 best solution, best possible 46.960841 (1940.73 seconds)
Cbc0010I After 1000 nodes, 478 on tree, 296.35325 best solution, best possible 46.960841 (1958.00 seconds)
Cbc0010I After 1100 nodes, 528 on tree, 296.35325 best solution, best possible 46.960841 (1974.23 seconds)
Cbc0010I After 1200 nodes, 578 on tree, 296.35325 best solution, best possible 46.960841 (1990.43 seconds)
Cbc0010I After 1300 nodes, 628 on tree, 296.35325 best solution, best possible 46.960841 (2005.24 seconds)
Cbc0010I After 1400 nodes, 678 on tree, 296.35325 best solution, best possible 46.960841 (2018.29 seconds)
Cbc0010I After 1500 nodes, 728 on tree, 296.35325 best solution, best possible 46.960841 (2031.09 seconds)
Cbc0010I After 1600 nodes, 778 on tree, 296.35325 best solution, best possible 46.960841 (2043.67 seconds)
Cbc0010I After 1700 nodes, 828 on tree, 296.35325 best solution, best possible 46.960841 (2056.35 seconds)
Cbc0010I After 1800 nodes, 878 on tree, 296.35325 best solution, best possible 46.960841 (2069.09 seconds)
Couenne: new cutoff value 2.1943115389e+02 (2255.73 seconds)
Cbc0004I Integer solution of 219.43115 found after 424723 iterations and 1846 nodes (2074.81 seconds)
Cbc0010I After 1900 nodes, 420 on tree, 219.43115 best solution, best possible 46.983313 (2092.57 seconds)
Cbc0010I After 2000 nodes, 470 on tree, 219.43115 best solution, best possible 46.983313 (2123.63 seconds)
Cbc0010I After 2100 nodes, 520 on tree, 219.43115 best solution, best possible 46.983313 (2157.17 seconds)
Cbc0010I After 2200 nodes, 570 on tree, 219.43115 best solution, best possible 46.983313 (2187.94 seconds)
Cbc0010I After 2300 nodes, 598 on tree, 219.43115 best solution, best possible 46.983313 (2206.61 seconds)
Cbc0010I After 2400 nodes, 621 on tree, 219.43115 best solution, best possible 46.983313 (2224.05 seconds)
Cbc0010I After 2500 nodes, 662 on tree, 219.43115 best solution, best possible 47.011469 (2288.77 seconds)
Cbc0010I After 2600 nodes, 712 on tree, 219.43115 best solution, best possible 47.011469 (2318.78 seconds)
Cbc0010I After 2700 nodes, 762 on tree, 219.43115 best solution, best possible 47.011469 (2345.48 seconds)
Cbc0010I After 2800 nodes, 793 on tree, 219.43115 best solution, best possible 47.011469 (2365.37 seconds)
Cbc0010I After 2900 nodes, 803 on tree, 219.43115 best solution, best possible 47.021818 (2380.34 seconds)
Cbc0010I After 3000 nodes, 853 on tree, 219.43115 best solution, best possible 47.021818 (2431.60 seconds)
Cbc0010I After 3100 nodes, 903 on tree, 219.43115 best solution, best possible 47.021818 (2468.45 seconds)
Cbc0010I After 3200 nodes, 953 on tree, 219.43115 best solution, best possible 47.021818 (2489.48 seconds)
Cbc0010I After 3300 nodes, 987 on tree, 219.43115 best solution, best possible 47.021818 (2505.37 seconds)
Cbc0010I After 3400 nodes, 1006 on tree, 219.43115 best solution, best possible 47.021818 (2521.41 seconds)
Cbc0010I After 3500 nodes, 1054 on tree, 219.43115 best solution, best possible 47.021818 (2541.35 seconds)
Cbc0010I After 3600 nodes, 1098 on tree, 219.43115 best solution, best possible 47.028625 (2567.69 seconds)
Cbc0010I After 3700 nodes, 1148 on tree, 219.43115 best solution, best possible 47.028625 (2591.43 seconds)
Cbc0010I After 3800 nodes, 1198 on tree, 219.43115 best solution, best possible 47.028625 (2622.64 seconds)
Cbc0010I After 3900 nodes, 1248 on tree, 219.43115 best solution, best possible 47.028625 (2651.50 seconds)
Cbc0010I After 4000 nodes, 1298 on tree, 219.43115 best solution, best possible 47.028625 (2675.27 seconds)
Cbc0010I After 4100 nodes, 1348 on tree, 219.43115 best solution, best possible 47.028625 (2695.11 seconds)
Cbc0010I After 4200 nodes, 1398 on tree, 219.43115 best solution, best possible 47.028625 (2711.54 seconds)
Cbc0010I After 4300 nodes, 1448 on tree, 219.43115 best solution, best possible 47.028625 (2729.21 seconds)
Cbc0010I After 4400 nodes, 1498 on tree, 219.43115 best solution, best possible 47.028625 (2746.98 seconds)
Cbc0010I After 4500 nodes, 1548 on tree, 219.43115 best solution, best possible 47.028625 (2764.09 seconds)
Cbc0010I After 4600 nodes, 1598 on tree, 219.43115 best solution, best possible 47.028625 (2780.74 seconds)
Cbc0010I After 4700 nodes, 1648 on tree, 219.43115 best solution, best possible 47.028625 (2797.36 seconds)
Cbc0010I After 4800 nodes, 1698 on tree, 219.43115 best solution, best possible 47.028625 (2813.02 seconds)
Cbc0010I After 4900 nodes, 1748 on tree, 219.43115 best solution, best possible 47.028625 (2827.26 seconds)
Cbc0010I After 5000 nodes, 1798 on tree, 219.43115 best solution, best possible 47.028625 (2841.62 seconds)
Cbc0010I After 5100 nodes, 1848 on tree, 219.43115 best solution, best possible 47.028625 (2855.22 seconds)
Cbc0010I After 5200 nodes, 1898 on tree, 219.43115 best solution, best possible 47.028625 (2868.63 seconds)
Cbc0010I After 5300 nodes, 1948 on tree, 219.43115 best solution, best possible 47.028625 (2881.83 seconds)
Cbc0010I After 5400 nodes, 1998 on tree, 219.43115 best solution, best possible 47.028625 (2895.17 seconds)
Cbc0010I After 5500 nodes, 2048 on tree, 219.43115 best solution, best possible 47.028625 (2908.86 seconds)
Cbc0010I After 5600 nodes, 2098 on tree, 219.43115 best solution, best possible 47.028625 (2922.45 seconds)
Cbc0010I After 5700 nodes, 2148 on tree, 219.43115 best solution, best possible 47.028625 (2936.04 seconds)
Cbc0010I After 5800 nodes, 2198 on tree, 219.43115 best solution, best possible 47.028625 (2949.70 seconds)
Cbc0010I After 5900 nodes, 2248 on tree, 219.43115 best solution, best possible 47.028625 (2963.07 seconds)
Cbc0010I After 6000 nodes, 2298 on tree, 219.43115 best solution, best possible 47.028625 (2976.29 seconds)
Cbc0010I After 6100 nodes, 2348 on tree, 219.43115 best solution, best possible 47.028625 (2989.83 seconds)
Cbc0010I After 6200 nodes, 2398 on tree, 219.43115 best solution, best possible 47.028625 (3003.23 seconds)
Cbc0010I After 6300 nodes, 2448 on tree, 219.43115 best solution, best possible 47.028625 (3016.65 seconds)
Cbc0010I After 6400 nodes, 2498 on tree, 219.43115 best solution, best possible 47.028625 (3029.35 seconds)
Cbc0010I After 6500 nodes, 2548 on tree, 219.43115 best solution, best possible 47.028625 (3042.14 seconds)
Cbc0010I After 6600 nodes, 2598 on tree, 219.43115 best solution, best possible 47.028625 (3054.09 seconds)
Cbc0010I After 6700 nodes, 2648 on tree, 219.43115 best solution, best possible 47.028625 (3065.74 seconds)
Cbc0010I After 6800 nodes, 2698 on tree, 219.43115 best solution, best possible 47.028625 (3077.35 seconds)
Cbc0010I After 6900 nodes, 2748 on tree, 219.43115 best solution, best possible 47.028625 (3089.04 seconds)
Couenne: new cutoff value 1.7977989573e+02 (3277.79 seconds)
Cbc0010I After 7000 nodes, 2796 on tree, 219.43115 best solution, best possible 47.048486 (3121.00 seconds)
Cbc0010I After 7100 nodes, 2846 on tree, 219.43115 best solution, best possible 47.048486 (3162.99 seconds)
Cbc0010I After 7200 nodes, 2896 on tree, 219.43115 best solution, best possible 47.048486 (3191.52 seconds)
Cbc0010I After 7300 nodes, 2926 on tree, 219.43115 best solution, best possible 47.048486 (3213.19 seconds)
Cbc0010I After 7400 nodes, 2935 on tree, 219.43115 best solution, best possible 47.048486 (3226.62 seconds)
Cbc0010I After 7500 nodes, 2977 on tree, 219.43115 best solution, best possible 47.058325 (3252.77 seconds)
Cbc0010I After 7600 nodes, 3027 on tree, 219.43115 best solution, best possible 47.058325 (3285.02 seconds)
Cbc0010I After 7700 nodes, 3076 on tree, 219.43115 best solution, best possible 47.058325 (3314.06 seconds)
Cbc0010I After 7800 nodes, 3100 on tree, 219.43115 best solution, best possible 47.058325 (3337.47 seconds)
Cbc0010I After 7900 nodes, 3112 on tree, 219.43115 best solution, best possible 47.093569 (3355.45 seconds)
Cbc0010I After 8000 nodes, 3162 on tree, 219.43115 best solution, best possible 47.093569 (3376.12 seconds)
Cbc0010I After 8100 nodes, 3212 on tree, 219.43115 best solution, best possible 47.093569 (3403.84 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 219.43115 (best possible 47.093569), took 1862578 iterations and 8158 nodes (3436.51 seconds)
Cbc0035I Maximum depth 1712, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.059746s)
Total solve time:                          3436.8s (3436.8s in branch-and-bound)
Lower bound:                              47.0936
Upper bound:                               179.78  (gap: 275.89%)
Branch-and-bound nodes:                      8158
Stats: /tmp/jl_dHB4Ce/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.059746 [sep]   3436.8 [time]  3436.81 [bb]         4.709357e+01 [lower]         1.797799e+02 [upper]    8158 [nodes]
Performance of                           FBBT:	    218.697s,    12432 runs. fix: 8.17421e-05 shrnk: 0.00801125 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     10.658s,        8 runs. fix:   0.266667 shrnk:     4.4075 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt
