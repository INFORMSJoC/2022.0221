solving instance uflp nlass holmberg 51 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 10.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1190.9843       31 39.746573
NLP0014I             2      INFEAS 0.99999999       34 1.831713
Loaded instance "/tmp/jl_CSzp8h/model.nl"
Constraints:         6100
Variables:           6020 (2020 integer)
Auxiliaries:         2101 (0 integer)

Coin0506I Presolve 14000 (-2101) rows, 5920 (-2201) columns and 29800 (-6321) elements
Clp0006I 0  Obj 0 Primal inf 99.9999 (100) Dual inf 2e+13 (2000)
Clp0006I 295  Obj 1485.25 Primal inf 89.624888 (112) Dual inf 2.01e+13 (2000)
Clp0006I 590  Obj 2261.75 Primal inf 83.249878 (122) Dual inf 1.6643805e+09 (2000)
Clp0006I 885  Obj 3344.25 Primal inf 71.749862 (138) Dual inf 1.6709843e+09 (2000)
Clp0006I 1180  Obj 4405.25 Primal inf 62.812349 (151) Dual inf 1.676349e+09 (2000)
Clp0006I 1475  Obj 5479.75 Primal inf 54.562337 (163) Dual inf 1.6813007e+09 (2000)
Clp0006I 1770  Obj 6895.25 Primal inf 42.87482 (180) Dual inf 1.6883161e+09 (2000)
Clp0006I 2065  Obj 7927.75 Primal inf 32.562305 (195) Dual inf 1.694507e+09 (2000)
Clp0006I 2360  Obj 10520.375 Primal inf 4.937421 (79) Dual inf 81154383 (852)
Clp0006I 2655  Obj 9512.9375 Dual inf 417517.5 (1512)
Clp0006I 2863  Obj 7694 Dual inf 374527 (284)
Clp0006I 3064  Obj 5788 Dual inf 75340.5 (255)
Clp0006I 3247  Obj 3767.75 Dual inf 250609.5 (273)
Clp0006I 3467  Obj 3125.3125 Dual inf 164068 (251)
Clp0006I 3762  Obj 738.37497 Dual inf 182293.83 (298)
Clp0006I 4057  Obj 443.12494 Dual inf 8639.9999 (50)
Clp0006I 4352  Obj 443.12493 Dual inf 12112.5 (94)
Clp0006I 4647  Obj 388.62487 Dual inf 13537.5 (100)
Clp0006I 4942  Obj 351.49963 Dual inf 13105.5 (61)
Clp0006I 5122  Obj 329.99962
Clp0000I Optimal - objective value 329.99962
Clp0000I Optimal - objective value 330
Clp0032I Optimal objective 330 - 5122 iterations time 1.092, Presolve 0.04
Clp0000I Optimal - objective value 330
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 330
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2459 added rows had average density of 2
Cbc0013I At root node, 2459 cuts changed objective from 330 to 1161.8163 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 37023 row cuts average 2.0 elements, 2100 column cuts (4075 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (90.58 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.3083309863e+03 (164.936 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 6.2002060717e+03 (439.218 seconds)
Cbc0012I Integer solution of 6200.2061 found by Couenne Rounding NLP after 38900 iterations and 2 nodes (368.08 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 6200.2061 best solution, best possible 1470.5213 (986.99 seconds)
Cbc0010I After 200 nodes, 100 on tree, 6200.2061 best solution, best possible 1470.5213 (1052.56 seconds)
Cbc0010I After 300 nodes, 150 on tree, 6200.2061 best solution, best possible 1470.5213 (1105.28 seconds)
Cbc0010I After 400 nodes, 200 on tree, 6200.2061 best solution, best possible 1470.5213 (1139.35 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 500 nodes, 239 on tree, 6200.2061 best solution, best possible 1499.103 (1499.67 seconds)
Cbc0010I After 600 nodes, 289 on tree, 6200.2061 best solution, best possible 1499.103 (1587.79 seconds)
Cbc0010I After 700 nodes, 339 on tree, 6200.2061 best solution, best possible 1499.103 (1645.05 seconds)
Cbc0010I After 800 nodes, 389 on tree, 6200.2061 best solution, best possible 1499.103 (1696.36 seconds)
Cbc0010I After 900 nodes, 439 on tree, 6200.2061 best solution, best possible 1499.103 (1738.64 seconds)
Cbc0010I After 1000 nodes, 475 on tree, 6200.2061 best solution, best possible 1499.103 (1769.44 seconds)
Cbc0010I After 1100 nodes, 501 on tree, 6200.2061 best solution, best possible 1516.7934 (1871.77 seconds)
Cbc0010I After 1200 nodes, 551 on tree, 6200.2061 best solution, best possible 1516.7934 (1959.56 seconds)
Cbc0010I After 1300 nodes, 601 on tree, 6200.2061 best solution, best possible 1516.7934 (2029.88 seconds)
Cbc0010I After 1400 nodes, 651 on tree, 6200.2061 best solution, best possible 1516.7934 (2087.92 seconds)
Cbc0010I After 1500 nodes, 701 on tree, 6200.2061 best solution, best possible 1516.7934 (2135.43 seconds)
Cbc0010I After 1600 nodes, 746 on tree, 6200.2061 best solution, best possible 1544.299 (2215.69 seconds)
Cbc0010I After 1700 nodes, 796 on tree, 6200.2061 best solution, best possible 1544.299 (2289.37 seconds)
Cbc0010I After 1800 nodes, 846 on tree, 6200.2061 best solution, best possible 1544.299 (2344.70 seconds)
Cbc0010I After 1900 nodes, 896 on tree, 6200.2061 best solution, best possible 1544.299 (2385.65 seconds)
Cbc0010I After 2000 nodes, 941 on tree, 6200.2061 best solution, best possible 1559.2799 (2421.27 seconds)
Cbc0010I After 2100 nodes, 991 on tree, 6200.2061 best solution, best possible 1559.2799 (2507.51 seconds)
Cbc0010I After 2200 nodes, 1041 on tree, 6200.2061 best solution, best possible 1559.2799 (2562.82 seconds)
Cbc0010I After 2300 nodes, 1091 on tree, 6200.2061 best solution, best possible 1559.2799 (2609.74 seconds)
Cbc0010I After 2400 nodes, 1141 on tree, 6200.2061 best solution, best possible 1559.2799 (2651.75 seconds)
Cbc0010I After 2500 nodes, 1188 on tree, 6200.2061 best solution, best possible 1566.7963 (2791.86 seconds)
Cbc0010I After 2600 nodes, 1238 on tree, 6200.2061 best solution, best possible 1566.7963 (2865.31 seconds)
Cbc0010I After 2700 nodes, 1288 on tree, 6200.2061 best solution, best possible 1566.7963 (2913.19 seconds)
Cbc0010I After 2800 nodes, 1338 on tree, 6200.2061 best solution, best possible 1566.7963 (2951.67 seconds)
Cbc0010I After 2900 nodes, 1388 on tree, 6200.2061 best solution, best possible 1566.7963 (2984.42 seconds)
Cbc0010I After 3000 nodes, 1438 on tree, 6200.2061 best solution, best possible 1566.7963 (3017.73 seconds)
Cbc0010I After 3100 nodes, 1488 on tree, 6200.2061 best solution, best possible 1566.7963 (3049.29 seconds)
Cbc0010I After 3200 nodes, 1538 on tree, 6200.2061 best solution, best possible 1566.7963 (3077.84 seconds)
Cbc0010I After 3300 nodes, 1560 on tree, 6200.2061 best solution, best possible 1573.5755 (3118.61 seconds)
Cbc0010I After 3400 nodes, 1610 on tree, 6200.2061 best solution, best possible 1573.5755 (3212.59 seconds)
Cbc0010I After 3500 nodes, 1660 on tree, 6200.2061 best solution, best possible 1573.5755 (3273.16 seconds)
Cbc0010I After 3600 nodes, 1710 on tree, 6200.2061 best solution, best possible 1573.5755 (3325.96 seconds)
Cbc0010I After 3700 nodes, 1760 on tree, 6200.2061 best solution, best possible 1573.5755 (3366.81 seconds)
Cbc0010I After 3800 nodes, 1810 on tree, 6200.2061 best solution, best possible 1573.5755 (3402.61 seconds)
Cbc0010I After 3900 nodes, 1860 on tree, 6200.2061 best solution, best possible 1573.5755 (3439.76 seconds)
Cbc0010I After 4000 nodes, 1910 on tree, 6200.2061 best solution, best possible 1573.5755 (3475.79 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 6200.2061 (best possible 1573.5755), took 5463845 iterations and 4049 nodes (3537.55 seconds)
Cbc0035I Maximum depth 410, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      16101
Linearization cuts added in total:          16101  (separation time: 0.044005s)
Total solve time:                         3538.98s (3538.98s in branch-and-bound)
Lower bound:                              1573.58
Upper bound:                              6200.21  (gap: 293.83%)
Branch-and-bound nodes:                      4049
Stats: /tmp/jl_CSzp8h/model.nl 6020 [var] 2020 [int] 6100 [con] 2101 [aux]  16101 [root]    16101 [tot] 0.044005 [sep]  3538.98 [time]  3538.99 [bb]         1.573576e+03 [lower]         6.200206e+03 [upper]    4049 [nodes]
Performance of                           FBBT:	    63.4836s,     7866 runs. fix:          0 shrnk: 7.99047e-05 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    25.3312s,        9 runs. fix:   0.359712 shrnk:    64.8218 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p51
