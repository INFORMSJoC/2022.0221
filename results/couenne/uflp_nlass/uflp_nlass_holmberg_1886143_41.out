solving instance uflp nlass holmberg 5 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 13765.562       87 2.431596
Couenne: new cutoff value 1.3765562432e+04 (3.28482 seconds)
NLP0014I             2         OPT 13765.563       32 0.37383
Loaded instance "/tmp/jl_v0xQR7/model.nl"
Constraints:         1550
Variables:           1510 (510 integer)
Auxiliaries:         3050 (0 integer)

Coin0506I Presolve 8049 (-1502) rows, 2509 (-2051) columns and 17507 (-3553) elements
Clp0006I 0  Obj 0 Primal inf 14001.268 (3050)
Clp0006I 235  Obj 6.0744809e-15 Primal inf 20857.914 (3856)
Clp0006I 470  Obj 4.1855168e-15 Primal inf 15991.481 (4025)
Clp0006I 705  Obj 5.7870426e-15 Primal inf 11661.582 (3699)
Clp0006I 940  Obj 8.1490288e-15 Primal inf 8308.2408 (3506)
Clp0006I 1175  Obj 4.5441079e-14 Primal inf 6127.423 (3233)
Clp0006I 1410  Obj 5.7891949e-05 Primal inf 4531.4865 (2856)
Clp0006I 1645  Obj 0.0011156904 Primal inf 3123.7419 (2400)
Clp0006I 1880  Obj 0.0017808873 Primal inf 3074.8282 (1977)
Clp0006I 2115  Obj 0.0025279232 Primal inf 4254.5001 (1692)
Clp0006I 2350  Obj 0.0031620528 Primal inf 4474.7161 (1480)
Clp0006I 2566  Obj 0.004029809 Primal inf 3069.1588 (1344)
Clp0006I 2801  Obj 1657.5539 Primal inf 607.4954 (921)
Clp0006I 3036  Obj 2993.6251 Primal inf 599.84571 (809)
Clp0006I 3271  Obj 6858.4116 Primal inf 791.30853 (753)
Clp0006I 3506  Obj 10877.577 Primal inf 393.43298 (490)
Clp0006I 3741  Obj 12746.063 Primal inf 11.040786 (42)
Clp0006I 3783  Obj 12828.179
Clp0000I Optimal - objective value 12828.174
Clp0032I Optimal objective 12828.17443 - 3783 iterations time 0.532, Presolve 0.02
Clp0000I Optimal - objective value 12828.174
NLP Heuristic: NLP0014I             3      INFEAS 0.94185801      430 7.425217
no solution.
Clp0000I Optimal - objective value 12828.174
Optimality Based BT: 494 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 149 added rows had average density of 2
Cbc0013I At root node, 149 cuts changed objective from 12828.174 to 12910.119 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 917 row cuts average 2.0 elements, 13 column cuts (13 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (96.41 seconds)
Optimality Based BT: 344 improved bounds
Optimality Based BT: 356 improved bounds
Optimality Based BT: 347 improved bounds
Optimality Based BT: 373 improved bounds
Optimality Based BT: 360 improved bounds
Optimality Based BT: 344 improved bounds
Optimality Based BT: 367 improved bounds
Optimality Based BT: 367 improved bounds
Optimality Based BT: 366 improved bounds
Optimality Based BT: 336 improved bounds
Optimality Based BT: 369 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 1e+50 best solution, best possible 13043.982 (1316.87 seconds)
Optimality Based BT: 394 improved bounds
Cbc0010I After 200 nodes, 80 on tree, 1e+50 best solution, best possible 13113.181 (1575.96 seconds)
Optimality Based BT: 389 improved bounds
Cbc0010I After 300 nodes, 119 on tree, 1e+50 best solution, best possible 13136.22 (1753.18 seconds)
Optimality Based BT: 397 improved bounds
Cbc0010I After 400 nodes, 154 on tree, 1e+50 best solution, best possible 13163.768 (2029.62 seconds)
Cbc0010I After 500 nodes, 192 on tree, 1e+50 best solution, best possible 13187.846 (2054.93 seconds)
Cbc0010I After 600 nodes, 226 on tree, 1e+50 best solution, best possible 13213.565 (2097.34 seconds)
Optimality Based BT: 380 improved bounds
Cbc0010I After 700 nodes, 261 on tree, 1e+50 best solution, best possible 13232.477 (2152.32 seconds)
Cbc0010I After 800 nodes, 295 on tree, 1e+50 best solution, best possible 13243.602 (2279.46 seconds)
Cbc0010I After 900 nodes, 333 on tree, 1e+50 best solution, best possible 13254.289 (2316.49 seconds)
Cbc0010I After 1000 nodes, 368 on tree, 1e+50 best solution, best possible 13265.462 (2474.07 seconds)
Optimality Based BT: 403 improved bounds
Optimality Based BT: 379 improved bounds
Cbc0010I After 1100 nodes, 401 on tree, 1e+50 best solution, best possible 13278.368 (2612.54 seconds)
Cbc0010I After 1200 nodes, 439 on tree, 1e+50 best solution, best possible 13283.454 (2643.89 seconds)
Optimality Based BT: 381 improved bounds
Cbc0010I After 1300 nodes, 475 on tree, 1e+50 best solution, best possible 13294.141 (2748.98 seconds)
Optimality Based BT: 401 improved bounds
Optimality Based BT: 345 improved bounds
Cbc0010I After 1400 nodes, 509 on tree, 1e+50 best solution, best possible 13306.636 (2842.84 seconds)
Cbc0010I After 1500 nodes, 544 on tree, 1e+50 best solution, best possible 13311.592 (2916.89 seconds)
Cbc0010I After 1600 nodes, 576 on tree, 1e+50 best solution, best possible 13319.782 (2989.73 seconds)
Optimality Based BT: 384 improved bounds
Cbc0010I After 1700 nodes, 610 on tree, 1e+50 best solution, best possible 13327.864 (3090.94 seconds)
Optimality Based BT: 376 improved bounds
Cbc0010I After 1800 nodes, 645 on tree, 1e+50 best solution, best possible 13333.596 (3142.79 seconds)
Cbc0010I After 1900 nodes, 674 on tree, 1e+50 best solution, best possible 13345.978 (3173.77 seconds)
Cbc0010I After 2000 nodes, 706 on tree, 1e+50 best solution, best possible 13348.009 (3198.82 seconds)
Cbc0010I After 2100 nodes, 738 on tree, 1e+50 best solution, best possible 13351.375 (3285.36 seconds)
Optimality Based BT: 390 improved bounds
Cbc0010I After 2200 nodes, 773 on tree, 1e+50 best solution, best possible 13359.501 (3389.34 seconds)
Cbc0010I After 2300 nodes, 806 on tree, 1e+50 best solution, best possible 13362.062 (3410.41 seconds)
Cbc0010I After 2400 nodes, 840 on tree, 1e+50 best solution, best possible 13367.579 (3447.39 seconds)
Cbc0010I After 2500 nodes, 869 on tree, 1e+50 best solution, best possible 13372.393 (3477.38 seconds)
Cbc0010I After 2600 nodes, 904 on tree, 1e+50 best solution, best possible 13375.339 (3505.99 seconds)
Cbc0010I After 2700 nodes, 937 on tree, 1e+50 best solution, best possible 13381.063 (3532.27 seconds)
Cbc0010I After 2800 nodes, 968 on tree, 1e+50 best solution, best possible 13385.633 (3552.60 seconds)
Cbc0010I After 2900 nodes, 999 on tree, 1e+50 best solution, best possible 13391.611 (3579.25 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 13391.611), took 81725 iterations and 2937 nodes (3595.90 seconds)
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       9551
Linearization cuts added in total:           9551  (separation time: 0.070207s)
Total solve time:                         3596.44s (3596.44s in branch-and-bound)
Lower bound:                              13391.6
Upper bound:                              13765.6  (gap: 2.79%)
Branch-and-bound nodes:                      2937
Stats: /tmp/jl_v0xQR7/model.nl 1510 [var]  510 [int] 1550 [con] 3050 [aux]   9551 [root]     9551 [tot] 0.070207 [sep]  3596.44 [time]  3596.44 [bb]         1.339161e+04 [lower]         1.376556e+04 [upper]    2937 [nodes]
Performance of                           FBBT:	    106.796s,     5705 runs. fix: 0.00501789 shrnk:    29.2137 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    720.326s,       24 runs. fix:    90.4062 shrnk:    126.832 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p5
