solving instance uflp nlass orlib 63 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.4728919251e+06 (2.51897 seconds)
2.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 592688.79     1425 65.585296
NLP0014I             2      FAILED 25911642     3000 107.73683
NLP0014I *           1      INFEAS 0.06196854       46 1.067279   resolve robustness
Loaded instance "/tmp/jl_m6ho12/model.nl"
Constraints:         2450
Variables:           2416 (816 integer)
Auxiliaries:         1649 (0 integer)

Coin0506I Presolve 10389 (-52) rows, 4011 (-54) columns and 24687 (-155) elements
Clp0006I 0  Obj -1.0049264e+08 Primal inf 58197.563 (848)
Clp0006I 276  Obj -1.0049264e+08 Primal inf 25396.525 (848)
Clp0006I 552  Obj -1.0049264e+08 Primal inf 12813.308 (848)
Clp0006I 828  Obj -67823345 Primal inf 8218.8917 (893)
Clp0006I 1104  Obj -27282672 Primal inf 7227.5633 (947)
Clp0006I 1380  Obj -14631656 Primal inf 6033.5761 (922)
Clp0006I 1656  Obj -8178899.6 Primal inf 3547.4827 (662)
Clp0006I 1932  Obj -6478942 Primal inf 656.87369 (266)
Clp0006I 2208  Obj -5680333.3 Primal inf 143.51256 (141)
Clp0006I 2417  Obj -5609453.1
Clp0000I Optimal - objective value -5609453.1
Clp0032I Optimal objective -5609453.093 - 2417 iterations time 0.132, Presolve 0.03
Clp0000I Optimal - objective value -5609453.1
NLP Heuristic: NLP0014I             4      FAILED 3359457.2     3000 93.117
NLP0014I *           1      INFEAS 0.11425609       62 1.256444   resolve robustness
no solution.
Clp0000I Optimal - objective value -5609453.1
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 421 added rows had average density of 2
Cbc0013I At root node, 421 cuts changed objective from -5609453.1 to -5358022.4 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2347 row cuts average 2.0 elements, 14886 column cuts (15303 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (204.26 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -5339117.8 (871.73 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -5339117.8 (885.51 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -5339117.8 (898.53 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -5339117.8 (912.36 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -5339117.8 (923.96 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -5339117.8 (936.06 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -5339117.8 (947.42 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -5339117.8 (960.12 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -5339117.8 (972.01 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -5339117.8 (984.89 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -5339117.8 (996.60 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -5339117.8 (1008.91 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -5339117.8 (1020.48 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -5339117.8 (1031.60 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -5339117.8 (1044.82 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -5339117.8 (1058.96 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -5339117.8 (1072.99 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -5339117.8 (1086.73 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -5339117.8 (1099.81 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -5339117.8 (1112.68 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -5339117.8 (1124.42 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -5339117.8 (1135.23 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -5339117.8 (1145.69 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -5339117.8 (1155.69 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -5339117.8 (1164.75 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -5339117.8 (1173.61 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -5339117.8 (1182.49 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -5339117.8 (1191.10 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -5339117.8 (1199.96 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -5339117.8 (1208.93 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -5339117.8 (1217.64 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -5339117.8 (1226.73 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -5339117.8 (1236.23 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -5339117.8 (1245.03 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -5339117.8 (1253.86 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -5339117.8 (1262.76 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -5339117.8 (1271.67 seconds)
Cbc0010I After 3800 nodes, 1899 on tree, 1e+50 best solution, best possible -5339117.8 (1280.61 seconds)
Cbc0010I After 3900 nodes, 1947 on tree, 1e+50 best solution, best possible -5339117.8 (1289.64 seconds)
Cbc0010I After 4000 nodes, 1997 on tree, 1e+50 best solution, best possible -5339117.8 (1298.91 seconds)
Cbc0010I After 4100 nodes, 2047 on tree, 1e+50 best solution, best possible -5339117.8 (1308.89 seconds)
Couenne: new cutoff value 2.4089301366e+06 (1491.49 seconds)
Cbc0004I Integer solution of 2408930.1 found after 153868 iterations and 4143 nodes (1313.28 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 4200 nodes, 2083 on tree, 2408930.1 best solution, best possible -5332556.7 (1806.50 seconds)
Cbc0010I After 4300 nodes, 2133 on tree, 2408930.1 best solution, best possible -5332556.7 (1915.50 seconds)
Cbc0010I After 4400 nodes, 2183 on tree, 2408930.1 best solution, best possible -5332556.7 (1929.11 seconds)
Cbc0010I After 4500 nodes, 2233 on tree, 2408930.1 best solution, best possible -5332556.7 (1942.32 seconds)
Cbc0010I After 4600 nodes, 2283 on tree, 2408930.1 best solution, best possible -5332556.7 (1954.48 seconds)
Cbc0010I After 4700 nodes, 2333 on tree, 2408930.1 best solution, best possible -5332556.7 (1967.22 seconds)
Cbc0010I After 4800 nodes, 2383 on tree, 2408930.1 best solution, best possible -5332556.7 (1980.39 seconds)
Cbc0010I After 4900 nodes, 2433 on tree, 2408930.1 best solution, best possible -5332556.7 (1993.61 seconds)
Cbc0010I After 5000 nodes, 2483 on tree, 2408930.1 best solution, best possible -5332556.7 (2005.57 seconds)
Cbc0010I After 5100 nodes, 2533 on tree, 2408930.1 best solution, best possible -5332556.7 (2018.54 seconds)
Cbc0010I After 5200 nodes, 2583 on tree, 2408930.1 best solution, best possible -5332556.7 (2029.95 seconds)
Cbc0010I After 5300 nodes, 2633 on tree, 2408930.1 best solution, best possible -5332556.7 (2040.58 seconds)
Cbc0010I After 5400 nodes, 2683 on tree, 2408930.1 best solution, best possible -5332556.7 (2051.11 seconds)
Cbc0010I After 5500 nodes, 2733 on tree, 2408930.1 best solution, best possible -5332556.7 (2062.40 seconds)
Cbc0010I After 5600 nodes, 2783 on tree, 2408930.1 best solution, best possible -5332556.7 (2076.43 seconds)
Cbc0010I After 5700 nodes, 2833 on tree, 2408930.1 best solution, best possible -5332556.7 (2090.54 seconds)
Cbc0010I After 5800 nodes, 2883 on tree, 2408930.1 best solution, best possible -5332556.7 (2104.51 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 5900 nodes, 2931 on tree, 2408930.1 best solution, best possible -5331447 (2392.67 seconds)
Cbc0010I After 6000 nodes, 2981 on tree, 2408930.1 best solution, best possible -5331447 (2406.25 seconds)
Cbc0010I After 6100 nodes, 3031 on tree, 2408930.1 best solution, best possible -5331447 (2419.87 seconds)
Cbc0010I After 6200 nodes, 3081 on tree, 2408930.1 best solution, best possible -5331447 (2433.55 seconds)
Cbc0010I After 6300 nodes, 3131 on tree, 2408930.1 best solution, best possible -5331447 (2445.40 seconds)
Cbc0010I After 6400 nodes, 3181 on tree, 2408930.1 best solution, best possible -5331447 (2457.59 seconds)
Cbc0010I After 6500 nodes, 3231 on tree, 2408930.1 best solution, best possible -5331447 (2469.72 seconds)
Cbc0010I After 6600 nodes, 3281 on tree, 2408930.1 best solution, best possible -5331447 (2481.12 seconds)
Cbc0010I After 6700 nodes, 3331 on tree, 2408930.1 best solution, best possible -5331447 (2492.65 seconds)
Cbc0010I After 6800 nodes, 3381 on tree, 2408930.1 best solution, best possible -5331447 (2504.73 seconds)
Cbc0010I After 6900 nodes, 3431 on tree, 2408930.1 best solution, best possible -5331447 (2515.77 seconds)
Cbc0010I After 7000 nodes, 3481 on tree, 2408930.1 best solution, best possible -5331447 (2527.52 seconds)
Cbc0010I After 7100 nodes, 3531 on tree, 2408930.1 best solution, best possible -5331447 (2539.22 seconds)
Cbc0010I After 7200 nodes, 3581 on tree, 2408930.1 best solution, best possible -5331447 (2550.18 seconds)
Cbc0010I After 7300 nodes, 3631 on tree, 2408930.1 best solution, best possible -5331447 (2560.53 seconds)
Cbc0010I After 7400 nodes, 3681 on tree, 2408930.1 best solution, best possible -5331447 (2571.40 seconds)
Cbc0010I After 7500 nodes, 3731 on tree, 2408930.1 best solution, best possible -5331447 (2582.81 seconds)
Cbc0010I After 7600 nodes, 3781 on tree, 2408930.1 best solution, best possible -5331447 (2596.66 seconds)
Cbc0010I After 7700 nodes, 3831 on tree, 2408930.1 best solution, best possible -5331447 (2610.59 seconds)
Cbc0010I After 7800 nodes, 3881 on tree, 2408930.1 best solution, best possible -5331447 (2624.44 seconds)
Cbc0010I After 7900 nodes, 3931 on tree, 2408930.1 best solution, best possible -5331447 (2638.15 seconds)
Cbc0010I After 8000 nodes, 3978 on tree, 2408930.1 best solution, best possible -5329318.3 (2749.18 seconds)
Cbc0010I After 8100 nodes, 4028 on tree, 2408930.1 best solution, best possible -5329318.3 (2762.27 seconds)
Cbc0010I After 8200 nodes, 4078 on tree, 2408930.1 best solution, best possible -5329318.3 (2775.87 seconds)
Cbc0010I After 8300 nodes, 4128 on tree, 2408930.1 best solution, best possible -5329318.3 (2789.23 seconds)
Cbc0010I After 8400 nodes, 4178 on tree, 2408930.1 best solution, best possible -5329318.3 (2802.11 seconds)
Cbc0010I After 8500 nodes, 4228 on tree, 2408930.1 best solution, best possible -5329318.3 (2815.27 seconds)
Cbc0010I After 8600 nodes, 4278 on tree, 2408930.1 best solution, best possible -5329318.3 (2826.74 seconds)
Cbc0010I After 8700 nodes, 4328 on tree, 2408930.1 best solution, best possible -5329318.3 (2838.01 seconds)
Cbc0010I After 8800 nodes, 4378 on tree, 2408930.1 best solution, best possible -5329318.3 (2849.19 seconds)
Cbc0010I After 8900 nodes, 4428 on tree, 2408930.1 best solution, best possible -5329318.3 (2860.83 seconds)
Cbc0010I After 9000 nodes, 4478 on tree, 2408930.1 best solution, best possible -5329318.3 (2871.38 seconds)
Cbc0010I After 9100 nodes, 4528 on tree, 2408930.1 best solution, best possible -5329318.3 (2883.25 seconds)
Cbc0010I After 9200 nodes, 4578 on tree, 2408930.1 best solution, best possible -5329318.3 (2894.18 seconds)
Cbc0010I After 9300 nodes, 4628 on tree, 2408930.1 best solution, best possible -5329318.3 (2904.54 seconds)
Cbc0010I After 9400 nodes, 4678 on tree, 2408930.1 best solution, best possible -5329318.3 (2915.56 seconds)
Cbc0010I After 9500 nodes, 4728 on tree, 2408930.1 best solution, best possible -5329318.3 (2927.47 seconds)
Cbc0010I After 9600 nodes, 4778 on tree, 2408930.1 best solution, best possible -5329318.3 (2941.48 seconds)
Cbc0010I After 9700 nodes, 4828 on tree, 2408930.1 best solution, best possible -5329318.3 (2955.48 seconds)
Cbc0010I After 9800 nodes, 4878 on tree, 2408930.1 best solution, best possible -5329318.3 (2969.34 seconds)
Cbc0010I After 9900 nodes, 4926 on tree, 2408930.1 best solution, best possible -5324044.6 (3140.46 seconds)
Cbc0010I After 10000 nodes, 4976 on tree, 2408930.1 best solution, best possible -5324044.6 (3153.95 seconds)
Cbc0010I After 10100 nodes, 5026 on tree, 2408930.1 best solution, best possible -5324044.6 (3167.30 seconds)
Cbc0010I After 10200 nodes, 5076 on tree, 2408930.1 best solution, best possible -5324044.6 (3181.14 seconds)
Cbc0010I After 10300 nodes, 5126 on tree, 2408930.1 best solution, best possible -5324044.6 (3194.94 seconds)
Cbc0010I After 10400 nodes, 5176 on tree, 2408930.1 best solution, best possible -5324044.6 (3207.73 seconds)
Cbc0010I After 10500 nodes, 5226 on tree, 2408930.1 best solution, best possible -5324044.6 (3220.86 seconds)
Cbc0010I After 10600 nodes, 5276 on tree, 2408930.1 best solution, best possible -5324044.6 (3233.07 seconds)
Cbc0010I After 10700 nodes, 5326 on tree, 2408930.1 best solution, best possible -5324044.6 (3245.37 seconds)
Cbc0010I After 10800 nodes, 5376 on tree, 2408930.1 best solution, best possible -5324044.6 (3256.87 seconds)
Cbc0010I After 10900 nodes, 5426 on tree, 2408930.1 best solution, best possible -5324044.6 (3269.07 seconds)
Cbc0010I After 11000 nodes, 5476 on tree, 2408930.1 best solution, best possible -5324044.6 (3281.35 seconds)
Cbc0010I After 11100 nodes, 5526 on tree, 2408930.1 best solution, best possible -5324044.6 (3292.76 seconds)
Cbc0010I After 11200 nodes, 5576 on tree, 2408930.1 best solution, best possible -5324044.6 (3303.92 seconds)
Cbc0010I After 11300 nodes, 5626 on tree, 2408930.1 best solution, best possible -5324044.6 (3315.26 seconds)
Cbc0010I After 11400 nodes, 5676 on tree, 2408930.1 best solution, best possible -5324044.6 (3326.06 seconds)
Cbc0010I After 11500 nodes, 5726 on tree, 2408930.1 best solution, best possible -5324044.6 (3339.62 seconds)
Cbc0010I After 11600 nodes, 5776 on tree, 2408930.1 best solution, best possible -5324044.6 (3353.60 seconds)
Cbc0010I After 11700 nodes, 5826 on tree, 2408930.1 best solution, best possible -5324044.6 (3367.46 seconds)
Cbc0010I After 11800 nodes, 5876 on tree, 2408930.1 best solution, best possible -5324044.6 (3380.87 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 2408930.1 (best possible -5324044.6), took 732802 iterations and 11881 nodes (3506.13 seconds)
Cbc0035I Maximum depth 2071, 4 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.021571s)
Total solve time:                         3506.31s (3506.31s in branch-and-bound)
Lower bound:                           -5.32404e+06
Upper bound:                           2.40893e+06  (gap: 145.25%)
Branch-and-bound nodes:                     11881
Stats: /tmp/jl_m6ho12/model.nl 2416 [var]  816 [int] 2450 [con] 1649 [aux]  10441 [root]    10441 [tot] 0.021571 [sep]  3506.31 [time]  3506.32 [bb]        -5.324045e+06 [lower]         2.408930e+06 [upper]   11881 [nodes]
Performance of                           FBBT:	    61.9888s,    18910 runs. fix:          0 shrnk:    33.8342 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    6.39505s,       10 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap63.txt
