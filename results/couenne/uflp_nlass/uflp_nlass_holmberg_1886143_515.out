solving instance uflp nlass holmberg 52 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 4214.3954     3000 169.33565
NLP0014I             1      FAILED 4214.3954     3000 166.28093   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_aVlBR0/model.nl"
Constraints:         3100
Variables:           3010 (1010 integer)
Auxiliaries:         4101 (0 integer)

Coin0506I Presolve 13000 (-2101) rows, 4910 (-2201) columns and 27800 (-5311) elements
Clp0006I 0  Obj 0 Primal inf 3395.667 (2100)
Clp0006I 290  Obj 0 Primal inf 3851.3042 (2200)
Clp0006I 580  Obj 0 Primal inf 3851.3042 (2200)
Clp0006I 870  Obj 0 Primal inf 3851.3042 (2200)
Clp0006I 1160  Obj 1.8644914e-16 Primal inf 4878.2755 (2400)
Clp0006I 1450  Obj 6.9438463e-16 Primal inf 3956.3896 (2339)
Clp0006I 1740  Obj 1.3627895e-15 Primal inf 6678.7143 (2752)
Clp0006I 2030  Obj 1.3697192e-15 Primal inf 8429.9706 (2846)
Clp0006I 2320  Obj 1.3306432e-15 Primal inf 9630.6169 (2840)
Clp0006I 2610  Obj 1.5496363e-15 Primal inf 11184.46 (2870)
Clp0006I 2900  Obj 1.5413941e-15 Primal inf 10106.865 (2702)
Clp0006I 3190  Obj 1.2921612e-15 Primal inf 5041.0469 (2240)
Clp0006I 3480  Obj 6.1534643e-16 Primal inf 239.29671 (800)
Clp0006I 3770  Obj 8.1796601e-16 Primal inf 203.29576 (770)
Clp0006I 4060  Obj 337.9721 Primal inf 125.88067 (628)
Clp0006I 4350  Obj 345.38992 Primal inf 130.3407 (408)
Clp0006I 4592  Obj 361.20327
Clp0000I Optimal - objective value 361.20327
Clp0032I Optimal objective 361.2032699 - 4592 iterations time 0.302, Presolve 0.03
Clp0000I Optimal - objective value 361.20327
NLP Heuristic: NLP0014I             3      FAILED 46520.75       88 2.655596
no solution.
Clp0000I Optimal - objective value 361.20327
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1180 added rows had average density of 2
Cbc0013I At root node, 1180 cuts changed objective from 361.20327 to 1038.9203 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 17022 row cuts average 2.0 elements, 200 column cuts (1336 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (236.75 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1270.5271 (2598.52 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1270.5271 (2621.46 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1270.5271 (2644.07 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1270.5271 (2666.78 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1270.5271 (2694.56 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1270.5271 (2723.11 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1270.5271 (2751.67 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 1270.5271 (2779.47 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 1270.5271 (2807.56 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 1270.5271 (2836.70 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 1270.5271 (2865.81 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 1270.5271 (2894.36 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 1270.5271 (2922.99 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 1270.5271 (2951.83 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 1270.5271 (2980.39 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 1270.5271 (3006.13 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 1270.5271 (3032.99 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 1270.5271 (3058.99 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 1270.5271 (3083.20 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 1270.5271 (3106.87 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 1270.5271 (3130.29 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 1270.5271 (3153.96 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 1270.5271 (3177.32 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 1270.5271 (3199.46 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible 1270.5271 (3222.24 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible 1270.5271 (3243.79 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1270.5271), took 183395 iterations and 2670 nodes (3259.03 seconds)
Cbc0035I Maximum depth 1335, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      15101
Linearization cuts added in total:          15101  (separation time: 0.085716s)
Total solve time:                         3259.34s (3259.34s in branch-and-bound)
Lower bound:                              1270.53
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                      2670
Stats: /tmp/jl_aVlBR0/model.nl 3010 [var] 1010 [int] 3100 [con] 4101 [aux]  15101 [root]    15101 [tot] 0.085716 [sep]  3259.34 [time]  3259.35 [bb]         1.270527e+03 [lower]         1.000000e+50 [upper]    2670 [nodes]
Performance of                           FBBT:	     137.68s,     4527 runs. fix:          0 shrnk: 1.21294e-07 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.90911s,        7 runs. fix:   0.446154 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p52
