solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-4.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 160.23629       39 3.052481
NLP0014I             2         OPT 792.04856       93 1.809632
Couenne: new cutoff value 7.9204856198e+02 (25.2657 seconds)
Loaded instance "/tmp/jl_vefEQg/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 9591 (-850) rows, 4771 (-890) columns and 21521 (-1740) elements
Clp0006I 0  Obj 0 Primal inf 64.254177 (40)
Clp0006I 266  Obj 1.4951461e-17 Primal inf 169.8001 (123)
Clp0006I 532  Obj 8.277083e-18 Primal inf 168.98663 (123)
Clp0006I 798  Obj 1.4035281e-18 Primal inf 182.16864 (173)
Clp0006I 1064  Obj 1.0843664e-15 Primal inf 553.53475 (256)
Clp0006I 1330  Obj 3.9446417e-11 Primal inf 919.349 (291)
Clp0006I 1596  Obj 4.8550381e-07 Primal inf 773.5711 (324)
Clp0006I 1862  Obj 1.5906926e-05 Primal inf 877.71699 (371)
Clp0006I 2128  Obj 1.5906927e-05 Primal inf 1265.502 (433)
Clp0006I 2394  Obj 2.5179987e-05 Primal inf 8006.903 (709)
Clp0006I 2660  Obj 16.143709 Primal inf 126.65547 (179)
Clp0006I 2926  Obj 16.489018 Primal inf 43.244296 (113)
Clp0006I 3158  Obj 17.084625
Clp0000I Optimal - objective value 17.084622
Clp0032I Optimal objective 17.08462229 - 3158 iterations time 0.302, Presolve 0.05
Clp0000I Optimal - objective value 17.084622
Cbc0012I Integer solution of 792.04856 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.02 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 17.084622
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 985 added rows had average density of 2
Cbc0013I At root node, 985 cuts changed objective from 17.084622 to 88.365888 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14841 row cuts average 2.0 elements, 889 column cuts (1728 active)
Cbc0010I After 0 nodes, 1 on tree, 792.04856 best solution, best possible 88.365888 (83.20 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.8260624553e+02 (493.352 seconds)
Cbc0012I Integer solution of 782.60625 found by Couenne Rounding NLP after 16054 iterations and 3 nodes (467.43 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.5238054719e+02 (793.553 seconds)
Cbc0012I Integer solution of 652.38055 found by Couenne Rounding NLP after 18560 iterations and 6 nodes (767.63 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 652.38055 best solution, best possible 96.250938 (1413.70 seconds)
Cbc0010I After 200 nodes, 100 on tree, 652.38055 best solution, best possible 96.250938 (1438.16 seconds)
Cbc0010I After 300 nodes, 150 on tree, 652.38055 best solution, best possible 96.250938 (1459.11 seconds)
Cbc0010I After 400 nodes, 200 on tree, 652.38055 best solution, best possible 96.250938 (1478.00 seconds)
Cbc0010I After 500 nodes, 250 on tree, 652.38055 best solution, best possible 96.250938 (1500.46 seconds)
Cbc0010I After 600 nodes, 300 on tree, 652.38055 best solution, best possible 96.250938 (1523.78 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 341 on tree, 652.38055 best solution, best possible 96.695766 (1583.35 seconds)
Cbc0010I After 800 nodes, 391 on tree, 652.38055 best solution, best possible 96.695766 (1622.95 seconds)
Cbc0010I After 900 nodes, 441 on tree, 652.38055 best solution, best possible 96.695766 (1646.82 seconds)
Cbc0010I After 1000 nodes, 491 on tree, 652.38055 best solution, best possible 96.695766 (1667.44 seconds)
Cbc0010I After 1100 nodes, 539 on tree, 652.38055 best solution, best possible 96.759017 (1711.84 seconds)
Cbc0010I After 1200 nodes, 589 on tree, 652.38055 best solution, best possible 96.759017 (1746.87 seconds)
Cbc0010I After 1300 nodes, 639 on tree, 652.38055 best solution, best possible 96.759017 (1771.34 seconds)
Cbc0010I After 1400 nodes, 689 on tree, 652.38055 best solution, best possible 96.759017 (1791.67 seconds)
Cbc0010I After 1500 nodes, 735 on tree, 652.38055 best solution, best possible 96.889658 (1819.27 seconds)
Cbc0010I After 1600 nodes, 785 on tree, 652.38055 best solution, best possible 96.889658 (1855.36 seconds)
Cbc0010I After 1700 nodes, 835 on tree, 652.38055 best solution, best possible 96.889658 (1880.25 seconds)
Cbc0010I After 1800 nodes, 885 on tree, 652.38055 best solution, best possible 96.889658 (1902.23 seconds)
Cbc0010I After 1900 nodes, 935 on tree, 652.38055 best solution, best possible 96.889658 (1918.92 seconds)
Cbc0010I After 2000 nodes, 985 on tree, 652.38055 best solution, best possible 96.889658 (1942.19 seconds)
Cbc0010I After 2100 nodes, 1035 on tree, 652.38055 best solution, best possible 96.889658 (1965.49 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2200 nodes, 1079 on tree, 652.38055 best solution, best possible 96.895451 (2004.29 seconds)
Cbc0010I After 2300 nodes, 1129 on tree, 652.38055 best solution, best possible 96.895451 (2042.39 seconds)
Cbc0010I After 2400 nodes, 1179 on tree, 652.38055 best solution, best possible 96.895451 (2069.76 seconds)
Cbc0010I After 2500 nodes, 1229 on tree, 652.38055 best solution, best possible 96.895451 (2088.30 seconds)
Cbc0010I After 2600 nodes, 1277 on tree, 652.38055 best solution, best possible 96.978703 (2112.04 seconds)
Cbc0010I After 2700 nodes, 1327 on tree, 652.38055 best solution, best possible 96.978703 (2142.62 seconds)
Cbc0010I After 2800 nodes, 1377 on tree, 652.38055 best solution, best possible 96.978703 (2161.08 seconds)
Cbc0010I After 2900 nodes, 1427 on tree, 652.38055 best solution, best possible 96.978703 (2180.27 seconds)
Cbc0010I After 3000 nodes, 1477 on tree, 652.38055 best solution, best possible 96.978703 (2202.01 seconds)
Cbc0010I After 3100 nodes, 1521 on tree, 652.38055 best solution, best possible 97.004938 (2232.14 seconds)
Cbc0010I After 3200 nodes, 1571 on tree, 652.38055 best solution, best possible 97.004938 (2261.21 seconds)
Cbc0010I After 3300 nodes, 1621 on tree, 652.38055 best solution, best possible 97.004938 (2280.87 seconds)
Cbc0010I After 3400 nodes, 1671 on tree, 652.38055 best solution, best possible 97.004938 (2298.46 seconds)
Cbc0010I After 3500 nodes, 1721 on tree, 652.38055 best solution, best possible 97.004938 (2317.93 seconds)
Cbc0010I After 3600 nodes, 1771 on tree, 652.38055 best solution, best possible 97.004938 (2339.38 seconds)
Cbc0010I After 3700 nodes, 1813 on tree, 652.38055 best solution, best possible 97.004938 (2359.95 seconds)
Cbc0010I After 3800 nodes, 1861 on tree, 652.38055 best solution, best possible 97.03615 (2411.15 seconds)
Cbc0010I After 3900 nodes, 1911 on tree, 652.38055 best solution, best possible 97.03615 (2433.31 seconds)
Cbc0010I After 4000 nodes, 1961 on tree, 652.38055 best solution, best possible 97.03615 (2448.98 seconds)
Cbc0010I After 4100 nodes, 2007 on tree, 652.38055 best solution, best possible 97.203177 (2648.24 seconds)
Cbc0010I After 4200 nodes, 2057 on tree, 652.38055 best solution, best possible 97.203177 (2682.65 seconds)
Cbc0010I After 4300 nodes, 2107 on tree, 652.38055 best solution, best possible 97.203177 (2704.16 seconds)
Cbc0010I After 4400 nodes, 2157 on tree, 652.38055 best solution, best possible 97.203177 (2722.61 seconds)
Cbc0010I After 4500 nodes, 2201 on tree, 652.38055 best solution, best possible 97.295601 (2749.82 seconds)
Cbc0010I After 4600 nodes, 2251 on tree, 652.38055 best solution, best possible 97.295601 (2780.05 seconds)
Cbc0010I After 4700 nodes, 2301 on tree, 652.38055 best solution, best possible 97.295601 (2802.19 seconds)
Cbc0010I After 4800 nodes, 2351 on tree, 652.38055 best solution, best possible 97.295601 (2822.44 seconds)
Cbc0010I After 4900 nodes, 2392 on tree, 652.38055 best solution, best possible 97.363112 (2848.93 seconds)
Cbc0010I After 5000 nodes, 2442 on tree, 652.38055 best solution, best possible 97.363112 (2885.01 seconds)
Cbc0010I After 5100 nodes, 2492 on tree, 652.38055 best solution, best possible 97.363112 (2913.14 seconds)
Cbc0010I After 5200 nodes, 2542 on tree, 652.38055 best solution, best possible 97.363112 (2936.41 seconds)
Cbc0010I After 5300 nodes, 2592 on tree, 652.38055 best solution, best possible 97.363112 (2956.55 seconds)
Cbc0010I After 5400 nodes, 2642 on tree, 652.38055 best solution, best possible 97.363112 (2975.21 seconds)
Cbc0010I After 5500 nodes, 2692 on tree, 652.38055 best solution, best possible 97.363112 (2995.62 seconds)
Cbc0010I After 5600 nodes, 2742 on tree, 652.38055 best solution, best possible 97.363112 (3016.23 seconds)
Cbc0010I After 5700 nodes, 2789 on tree, 652.38055 best solution, best possible 97.363112 (3037.20 seconds)
Cbc0010I After 5800 nodes, 2836 on tree, 652.38055 best solution, best possible 97.398005 (3081.82 seconds)
Cbc0010I After 5900 nodes, 2886 on tree, 652.38055 best solution, best possible 97.398005 (3106.96 seconds)
Cbc0010I After 6000 nodes, 2936 on tree, 652.38055 best solution, best possible 97.398005 (3126.29 seconds)
Cbc0010I After 6100 nodes, 2986 on tree, 652.38055 best solution, best possible 97.398005 (3143.66 seconds)
Cbc0010I After 6200 nodes, 3033 on tree, 652.38055 best solution, best possible 97.420033 (3188.08 seconds)
Cbc0010I After 6300 nodes, 3083 on tree, 652.38055 best solution, best possible 97.420033 (3217.33 seconds)
Cbc0010I After 6400 nodes, 3133 on tree, 652.38055 best solution, best possible 97.420033 (3241.21 seconds)
Cbc0010I After 6500 nodes, 3183 on tree, 652.38055 best solution, best possible 97.420033 (3259.75 seconds)
Cbc0010I After 6600 nodes, 3233 on tree, 652.38055 best solution, best possible 97.420033 (3275.44 seconds)
Cbc0010I After 6700 nodes, 3278 on tree, 652.38055 best solution, best possible 97.492571 (3295.60 seconds)
Cbc0010I After 6800 nodes, 3328 on tree, 652.38055 best solution, best possible 97.492571 (3360.33 seconds)
Cbc0010I After 6900 nodes, 3378 on tree, 652.38055 best solution, best possible 97.492571 (3378.50 seconds)
Cbc0010I After 7000 nodes, 3428 on tree, 652.38055 best solution, best possible 97.492571 (3393.36 seconds)
Cbc0010I After 7100 nodes, 3478 on tree, 652.38055 best solution, best possible 97.492571 (3410.00 seconds)
Cbc0010I After 7200 nodes, 3521 on tree, 652.38055 best solution, best possible 97.567245 (3435.58 seconds)
Cbc0010I After 7300 nodes, 3571 on tree, 652.38055 best solution, best possible 97.567245 (3466.62 seconds)
Cbc0010I After 7400 nodes, 3621 on tree, 652.38055 best solution, best possible 97.567245 (3488.01 seconds)
Cbc0010I After 7500 nodes, 3671 on tree, 652.38055 best solution, best possible 97.567245 (3506.80 seconds)
Cbc0010I After 7600 nodes, 3720 on tree, 652.38055 best solution, best possible 97.567245 (3525.41 seconds)
Cbc0010I After 7700 nodes, 3767 on tree, 652.38055 best solution, best possible 97.605146 (3556.52 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 652.38055 (best possible 97.605146), took 2776269 iterations and 7754 nodes (3576.94 seconds)
Cbc0035I Maximum depth 440, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.057141s)
Total solve time:                         3577.37s (3577.37s in branch-and-bound)
Lower bound:                              97.6051
Upper bound:                              652.381  (gap: 562.62%)
Branch-and-bound nodes:                      7754
Stats: /tmp/jl_vefEQg/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.057141 [sep]  3577.37 [time]  3577.38 [bb]         9.760515e+01 [lower]         6.523805e+02 [upper]    7754 [nodes]
Performance of                           FBBT:	    275.151s,    14830 runs. fix:          0 shrnk:    66.0595 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    16.2598s,       11 runs. fix:   0.145044 shrnk:  0.0892777 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-4.txt
