solving instance uflp nlass holmberg 12 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 16451.562       81 2.327118
Couenne: new cutoff value 1.6451562441e+04 (3.19176 seconds)
NLP0014I             2         OPT 16451.563       32 0.383327
Loaded instance "/tmp/jl_SMFmUK/model.nl"
Constraints:         1550
Variables:           1510 (510 integer)
Auxiliaries:         3050 (0 integer)

Coin0506I Presolve 8049 (-1502) rows, 2509 (-2051) columns and 17507 (-3553) elements
Clp0006I 0  Obj 0 Primal inf 14001.268 (3050)
Clp0006I 235  Obj 6.0744809e-15 Primal inf 20857.914 (3856)
Clp0006I 470  Obj 4.1855168e-15 Primal inf 15991.339 (4025)
Clp0006I 705  Obj 5.7870426e-15 Primal inf 11661.44 (3699)
Clp0006I 940  Obj 8.1320861e-15 Primal inf 8308.1956 (3506)
Clp0006I 1175  Obj 2.4812375e-13 Primal inf 6171.7942 (3222)
Clp0006I 1410  Obj 1.4819842e-06 Primal inf 4588.4613 (2847)
Clp0006I 1645  Obj 0.00074815271 Primal inf 3269.6186 (2407)
Clp0006I 1880  Obj 0.0014117727 Primal inf 3424.141 (2022)
Clp0006I 2115  Obj 0.0021625087 Primal inf 2622.2854 (1658)
Clp0006I 2350  Obj 0.0028273573 Primal inf 2600.5629 (1396)
Clp0006I 2561  Obj 0.0034921385 Primal inf 4414.1293 (1242)
Clp0006I 2796  Obj 1932.2463 Primal inf 728.49781 (890)
Clp0006I 3031  Obj 3696.6801 Primal inf 512.44256 (774)
Clp0006I 3266  Obj 7593.7604 Primal inf 587.13543 (746)
Clp0006I 3501  Obj 11873.264 Primal inf 607.43794 (479)
Clp0006I 3736  Obj 14455.841 Primal inf 39.155787 (136)
Clp0006I 3790  Obj 14582.996
Clp0000I Optimal - objective value 14582.993
Clp0032I Optimal objective 14582.99309 - 3790 iterations time 0.512, Presolve 0.02
Clp0000I Optimal - objective value 14582.993
NLP Heuristic: NLP0014I             3      INFEAS 0.94399755      473 8.446568
no solution.
Clp0000I Optimal - objective value 14582.993
Optimality Based BT: 466 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 140 added rows had average density of 2
Cbc0013I At root node, 140 cuts changed objective from 14582.993 to 14657.242 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1029 row cuts average 2.0 elements, 14 column cuts (154 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (102.65 seconds)
Optimality Based BT: 250 improved bounds
Optimality Based BT: 270 improved bounds
Optimality Based BT: 260 improved bounds
Optimality Based BT: 286 improved bounds
Optimality Based BT: 263 improved bounds
Optimality Based BT: 266 improved bounds
Optimality Based BT: 238 improved bounds
Optimality Based BT: 253 improved bounds
Optimality Based BT: 236 improved bounds
Cbc0010I After 100 nodes, 47 on tree, 1e+50 best solution, best possible 14864.469 (1197.67 seconds)
Cbc0010I After 200 nodes, 88 on tree, 1e+50 best solution, best possible 14932.623 (1227.98 seconds)
Cbc0010I After 300 nodes, 132 on tree, 1e+50 best solution, best possible 14951.569 (1511.43 seconds)
Couenne: new cutoff value 1.6297472548e+04 (1521.19 seconds)
Optimality Based BT: 314 improved bounds
Optimality Based BT: 362 improved bounds
Cbc0010I After 400 nodes, 163 on tree, 1e+50 best solution, best possible 15011.095 (1966.05 seconds)
Cbc0010I After 500 nodes, 205 on tree, 1e+50 best solution, best possible 15033.068 (2059.37 seconds)
Cbc0010I After 600 nodes, 248 on tree, 1e+50 best solution, best possible 15042.667 (2107.70 seconds)
Optimality Based BT: 331 improved bounds
Optimality Based BT: 380 improved bounds
Optimality Based BT: 268 improved bounds
Cbc0010I After 700 nodes, 292 on tree, 1e+50 best solution, best possible 15055.891 (2362.98 seconds)
Cbc0010I After 800 nodes, 336 on tree, 1e+50 best solution, best possible 15075.22 (2516.46 seconds)
Cbc0010I After 900 nodes, 375 on tree, 1e+50 best solution, best possible 15109.902 (2609.95 seconds)
Cbc0010I After 1000 nodes, 416 on tree, 1e+50 best solution, best possible 15120.187 (2633.40 seconds)
Cbc0010I After 1100 nodes, 459 on tree, 1e+50 best solution, best possible 15126.235 (2656.47 seconds)
Cbc0010I After 1200 nodes, 500 on tree, 1e+50 best solution, best possible 15136.54 (2735.26 seconds)
Cbc0010I After 1300 nodes, 543 on tree, 1e+50 best solution, best possible 15140.631 (2758.47 seconds)
Optimality Based BT: 341 improved bounds
Cbc0010I After 1400 nodes, 586 on tree, 1e+50 best solution, best possible 15147.864 (2825.52 seconds)
Cbc0010I After 1500 nodes, 626 on tree, 1e+50 best solution, best possible 15161.634 (2847.90 seconds)
Cbc0010I After 1600 nodes, 663 on tree, 1e+50 best solution, best possible 15166.6 (2984.21 seconds)
Cbc0010I After 1700 nodes, 705 on tree, 1e+50 best solution, best possible 15169.828 (3005.97 seconds)
Cbc0010I After 1800 nodes, 745 on tree, 1e+50 best solution, best possible 15184.455 (3027.81 seconds)
Cbc0010I After 1900 nodes, 789 on tree, 1e+50 best solution, best possible 15188.956 (3051.05 seconds)
Cbc0010I After 2000 nodes, 829 on tree, 1e+50 best solution, best possible 15192.149 (3087.48 seconds)
Cbc0010I After 2100 nodes, 873 on tree, 1e+50 best solution, best possible 15192.846 (3110.00 seconds)
Cbc0010I After 2200 nodes, 912 on tree, 1e+50 best solution, best possible 15201.533 (3199.65 seconds)
Cbc0010I After 2300 nodes, 956 on tree, 1e+50 best solution, best possible 15211.493 (3230.12 seconds)
Cbc0010I After 2400 nodes, 1000 on tree, 1e+50 best solution, best possible 15213.877 (3252.91 seconds)
Cbc0010I After 2500 nodes, 1042 on tree, 1e+50 best solution, best possible 15217.565 (3274.92 seconds)
Optimality Based BT: 347 improved bounds
Cbc0010I After 2600 nodes, 1081 on tree, 1e+50 best solution, best possible 15222.331 (3327.99 seconds)
Cbc0010I After 2700 nodes, 1125 on tree, 1e+50 best solution, best possible 15226.254 (3350.40 seconds)
Cbc0010I After 2800 nodes, 1164 on tree, 1e+50 best solution, best possible 15228.581 (3427.84 seconds)
Cbc0010I After 2900 nodes, 1202 on tree, 1e+50 best solution, best possible 15233.713 (3454.89 seconds)
Cbc0010I After 3000 nodes, 1244 on tree, 1e+50 best solution, best possible 15237.324 (3483.48 seconds)
Cbc0010I After 3100 nodes, 1285 on tree, 1e+50 best solution, best possible 15241.912 (3509.82 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 15241.912), took 221604 iterations and 3195 nodes (3596.15 seconds)
Cbc0035I Maximum depth 51, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       9551
Linearization cuts added in total:           9551  (separation time: 0.069737s)
Total solve time:                         3596.66s (3596.66s in branch-and-bound)
Lower bound:                              15241.9
Upper bound:                              16297.5  (gap: 6.92%)
Branch-and-bound nodes:                      3195
Stats: /tmp/jl_SMFmUK/model.nl 1510 [var]  510 [int] 1550 [con] 3050 [aux]   9551 [root]     9551 [tot] 0.069737 [sep]  3596.66 [time]  3596.67 [bb]         1.524191e+04 [lower]         1.629747e+04 [upper]    3195 [nodes]
Performance of                           FBBT:	    125.193s,     6591 runs. fix: 0.000515408 shrnk:     29.213 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    500.532s,       17 runs. fix:          0 shrnk:    80.8675 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p12
