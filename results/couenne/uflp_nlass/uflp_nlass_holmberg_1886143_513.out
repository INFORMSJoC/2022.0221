solving instance uflp nlass holmberg 52 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4759.5632       41 5.874237
NLP0014I             2      INFEAS 0.99999999       53 1.397921
Loaded instance "/tmp/jl_Z2TOom/model.nl"
Constraints:         3100
Variables:           3010 (1010 integer)
Auxiliaries:         4101 (0 integer)

Coin0506I Presolve 11000 (-2101) rows, 4910 (-2201) columns and 23800 (-5311) elements
Clp0006I 0  Obj 0 Primal inf 199.9999 (100)
Clp0006I 280  Obj 9.1e-17 Primal inf 335.42926 (478)
Clp0006I 560  Obj 3.0558484e-16 Primal inf 272.59675 (456)
Clp0006I 840  Obj 3.9545207e-16 Primal inf 404.60272 (560)
Clp0006I 1120  Obj 3.5490713e-16 Primal inf 274.53685 (620)
Clp0006I 1400  Obj 2.5544956e-16 Primal inf 240.38288 (546)
Clp0006I 1680  Obj 2.7645848e-16 Primal inf 275.48705 (540)
Clp0006I 1960  Obj 3.4960301e-16 Primal inf 344.12756 (660)
Clp0006I 2240  Obj 2.4336508e-16 Primal inf 240.14533 (566)
Clp0006I 2520  Obj 2.5780118e-16 Primal inf 240.8461 (507)
Clp0006I 2800  Obj 3.8913532e-16 Primal inf 413.71827 (700)
Clp0006I 3080  Obj 2.2980435e-16 Primal inf 239.88403 (588)
Clp0006I 3360  Obj 2.5632494e-16 Primal inf 240.56104 (531)
Clp0006I 3640  Obj 3.3128718e-16 Primal inf 344.60266 (620)
Clp0006I 3910  Obj 362.15085
Clp0000I Optimal - objective value 362.15085
Clp0032I Optimal objective 362.1508458 - 3910 iterations time 0.222, Presolve 0.03
Clp0000I Optimal - objective value 362.15085
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 362.15085
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 1560 added rows had average density of 2
Cbc0013I At root node, 1560 cuts changed objective from 362.15085 to 2332.6035 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 15940 row cuts average 2.0 elements, 200 column cuts (1751 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (250.41 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.3759787785e+04 (819.273 seconds)
Cbc0012I Integer solution of 13759.788 found by Couenne Rounding NLP after 16336 iterations and 2 nodes (775.75 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.2218254900e+04 (1111.09 seconds)
Cbc0012I Integer solution of 12218.255 found by Couenne Rounding NLP after 16888 iterations and 3 nodes (1067.57 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.1185727872e+04 (1401.07 seconds)
Cbc0012I Integer solution of 11185.728 found by Couenne Rounding NLP after 16889 iterations and 4 nodes (1357.54 seconds)
Couenne: new cutoff value 1.1171454259e+04 (1701.28 seconds)
Cbc0012I Integer solution of 11171.454 found by Couenne Rounding NLP after 17372 iterations and 5 nodes (1657.76 seconds)
Cbc0010I After 100 nodes, 50 on tree, 11171.454 best solution, best possible 2527.5836 (2013.65 seconds)
Cbc0010I After 200 nodes, 100 on tree, 11171.454 best solution, best possible 2527.5836 (2052.73 seconds)
Cbc0010I After 300 nodes, 150 on tree, 11171.454 best solution, best possible 2527.5836 (2089.28 seconds)
Cbc0010I After 400 nodes, 200 on tree, 11171.454 best solution, best possible 2527.5836 (2124.42 seconds)
Cbc0010I After 500 nodes, 250 on tree, 11171.454 best solution, best possible 2527.5836 (2157.28 seconds)
Cbc0010I After 600 nodes, 300 on tree, 11171.454 best solution, best possible 2527.5836 (2188.36 seconds)
Cbc0010I After 700 nodes, 350 on tree, 11171.454 best solution, best possible 2527.5836 (2217.59 seconds)
Cbc0010I After 800 nodes, 400 on tree, 11171.454 best solution, best possible 2527.5836 (2248.89 seconds)
Cbc0010I After 900 nodes, 450 on tree, 11171.454 best solution, best possible 2527.5836 (2279.57 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 11171.454 best solution, best possible 2527.5836 (2314.06 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 11171.454 best solution, best possible 2527.5836 (2348.58 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 11171.454 best solution, best possible 2527.5836 (2383.20 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 11171.454 best solution, best possible 2527.5836 (2417.92 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1400 nodes, 695 on tree, 11171.454 best solution, best possible 2528.4081 (3285.24 seconds)
Cbc0010I After 1500 nodes, 745 on tree, 11171.454 best solution, best possible 2528.4081 (3328.98 seconds)
Cbc0010I After 1600 nodes, 795 on tree, 11171.454 best solution, best possible 2528.4081 (3365.97 seconds)
Cbc0010I After 1700 nodes, 845 on tree, 11171.454 best solution, best possible 2528.4081 (3399.94 seconds)
Cbc0010I After 1800 nodes, 895 on tree, 11171.454 best solution, best possible 2528.4081 (3434.30 seconds)
Cbc0010I After 1900 nodes, 945 on tree, 11171.454 best solution, best possible 2528.4081 (3468.54 seconds)
Cbc0010I After 2000 nodes, 995 on tree, 11171.454 best solution, best possible 2528.4081 (3500.59 seconds)
Cbc0010I After 2100 nodes, 1045 on tree, 11171.454 best solution, best possible 2528.4081 (3533.30 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 11171.454 (best possible 2528.4081), took 1034828 iterations and 2173 nodes (3558.91 seconds)
Cbc0035I Maximum depth 665, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      13101
Linearization cuts added in total:          13101  (separation time: 0.086042s)
Total solve time:                         3559.43s (3559.43s in branch-and-bound)
Lower bound:                              2528.41
Upper bound:                              11171.5  (gap: 341.70%)
Branch-and-bound nodes:                      2173
Stats: /tmp/jl_Z2TOom/model.nl 3010 [var] 1010 [int] 3100 [con] 4101 [aux]  13101 [root]    13101 [tot] 0.086042 [sep]  3559.43 [time]  3559.44 [bb]         2.528408e+03 [lower]         1.117145e+04 [upper]    2173 [nodes]
Performance of                           FBBT:	     124.34s,     4069 runs. fix:          0 shrnk: 6.27357e-05 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    6.43064s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p52
