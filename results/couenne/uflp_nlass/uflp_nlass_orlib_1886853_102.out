solving instance uflp nlass orlib 72 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.4678919251e+06 (2.2335 seconds)
2.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 1414780.7     3000 133.30544
NLP0014I             1      FAILED 1414780.7     3000 132.52496   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_we2irg/model.nl"
Constraints:         2450
Variables:           2416 (816 integer)
Auxiliaries:         1649 (0 integer)

Coin0506I Presolve 10389 (-52) rows, 4011 (-54) columns and 24687 (-155) elements
Clp0006I 0  Obj -1.0049264e+08 Primal inf 60684.493 (848)
Clp0006I 276  Obj -1.0049264e+08 Primal inf 26325.11 (848)
Clp0006I 552  Obj -1.0049264e+08 Primal inf 13103.63 (848)
Clp0006I 828  Obj -69821637 Primal inf 7968.9997 (884)
Clp0006I 1104  Obj -27282672 Primal inf 7240.4441 (947)
Clp0006I 1380  Obj -14614909 Primal inf 5954.7784 (910)
Clp0006I 1656  Obj -8181141.7 Primal inf 3544.7624 (661)
Clp0006I 1932  Obj -6487621 Primal inf 654.86253 (267)
Clp0006I 2208  Obj -5689670.7 Primal inf 220.56294 (181)
Clp0006I 2412  Obj -5620667.5
Clp0000I Optimal - objective value -5620667.5
Clp0032I Optimal objective -5620667.549 - 2412 iterations time 0.122, Presolve 0.03
Clp0000I Optimal - objective value -5620667.5
NLP Heuristic: NLP0014I             3      FAILED 3560606.1     3000 86.943053
no solution.
Clp0000I Optimal - objective value -5620667.5
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 420 added rows had average density of 2
Cbc0013I At root node, 420 cuts changed objective from -5620667.5 to -5368370.7 in 18 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2410 row cuts average 2.0 elements, 19154 column cuts (19558 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (186.49 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -5355057.8 (883.41 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -5355057.8 (896.39 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -5355057.8 (909.88 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -5355057.8 (923.37 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -5355057.8 (935.74 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -5355057.8 (947.27 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -5355057.8 (959.89 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -5355057.8 (972.09 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -5355057.8 (983.99 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -5355057.8 (996.27 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -5355057.8 (1007.80 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -5355057.8 (1019.39 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -5355057.8 (1031.12 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -5355057.8 (1042.70 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -5355057.8 (1054.06 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -5355057.8 (1066.27 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -5355057.8 (1080.10 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -5355057.8 (1093.94 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -5355057.8 (1107.59 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -5355057.8 (1121.00 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -5355057.8 (1133.73 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -5355057.8 (1144.96 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -5355057.8 (1155.69 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -5355057.8 (1166.20 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -5355057.8 (1176.20 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -5355057.8 (1185.13 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -5355057.8 (1193.92 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -5355057.8 (1202.65 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -5355057.8 (1211.29 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -5355057.8 (1220.02 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -5355057.8 (1228.61 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -5355057.8 (1237.52 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -5355057.8 (1246.31 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -5355057.8 (1255.26 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -5355057.8 (1264.21 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -5355057.8 (1273.01 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -5355057.8 (1281.87 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible -5355057.8 (1290.76 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible -5355057.8 (1299.64 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible -5355057.8 (1308.60 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible -5355057.8 (1317.95 seconds)
Couenne: new cutoff value 2.3912167045e+06 (1594.6 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 4200 nodes, 2098 on tree, 1e+50 best solution, best possible -5347822.8 (2008.15 seconds)
Cbc0010I After 4300 nodes, 2148 on tree, 1e+50 best solution, best possible -5347822.8 (2021.38 seconds)
Cbc0010I After 4400 nodes, 2198 on tree, 1e+50 best solution, best possible -5347822.8 (2034.77 seconds)
Cbc0010I After 4500 nodes, 2248 on tree, 1e+50 best solution, best possible -5347822.8 (2047.96 seconds)
Cbc0010I After 4600 nodes, 2298 on tree, 1e+50 best solution, best possible -5347822.8 (2061.56 seconds)
Cbc0010I After 4700 nodes, 2348 on tree, 1e+50 best solution, best possible -5347822.8 (2073.95 seconds)
Cbc0010I After 4800 nodes, 2398 on tree, 1e+50 best solution, best possible -5347822.8 (2087.14 seconds)
Cbc0010I After 4900 nodes, 2448 on tree, 1e+50 best solution, best possible -5347822.8 (2099.01 seconds)
Cbc0010I After 5000 nodes, 2498 on tree, 1e+50 best solution, best possible -5347822.8 (2110.49 seconds)
Cbc0010I After 5100 nodes, 2548 on tree, 1e+50 best solution, best possible -5347822.8 (2122.52 seconds)
Cbc0010I After 5200 nodes, 2598 on tree, 1e+50 best solution, best possible -5347822.8 (2134.51 seconds)
Cbc0010I After 5300 nodes, 2648 on tree, 1e+50 best solution, best possible -5347822.8 (2146.79 seconds)
Cbc0010I After 5400 nodes, 2698 on tree, 1e+50 best solution, best possible -5347822.8 (2157.59 seconds)
Cbc0010I After 5500 nodes, 2748 on tree, 1e+50 best solution, best possible -5347822.8 (2168.00 seconds)
Cbc0010I After 5600 nodes, 2798 on tree, 1e+50 best solution, best possible -5347822.8 (2179.36 seconds)
Cbc0010I After 5700 nodes, 2848 on tree, 1e+50 best solution, best possible -5347822.8 (2190.72 seconds)
Cbc0010I After 5800 nodes, 2898 on tree, 1e+50 best solution, best possible -5347822.8 (2205.22 seconds)
Cbc0010I After 5900 nodes, 2948 on tree, 1e+50 best solution, best possible -5347822.8 (2219.71 seconds)
Cbc0010I After 6000 nodes, 2998 on tree, 1e+50 best solution, best possible -5347822.8 (2234.01 seconds)
Cbc0010I After 6100 nodes, 3048 on tree, 1e+50 best solution, best possible -5347822.8 (2248.20 seconds)
Cbc0010I After 6200 nodes, 3096 on tree, 1e+50 best solution, best possible -5344610.1 (2617.43 seconds)
Cbc0010I After 6300 nodes, 3146 on tree, 1e+50 best solution, best possible -5344610.1 (2630.89 seconds)
Cbc0010I After 6400 nodes, 3196 on tree, 1e+50 best solution, best possible -5344610.1 (2644.24 seconds)
Cbc0010I After 6500 nodes, 3246 on tree, 1e+50 best solution, best possible -5344610.1 (2658.09 seconds)
Cbc0010I After 6600 nodes, 3296 on tree, 1e+50 best solution, best possible -5344610.1 (2671.67 seconds)
Cbc0010I After 6700 nodes, 3346 on tree, 1e+50 best solution, best possible -5344610.1 (2684.52 seconds)
Cbc0010I After 6800 nodes, 3396 on tree, 1e+50 best solution, best possible -5344610.1 (2696.63 seconds)
Cbc0010I After 6900 nodes, 3446 on tree, 1e+50 best solution, best possible -5344610.1 (2709.45 seconds)
Cbc0010I After 7000 nodes, 3496 on tree, 1e+50 best solution, best possible -5344610.1 (2721.68 seconds)
Cbc0010I After 7100 nodes, 3546 on tree, 1e+50 best solution, best possible -5344610.1 (2733.30 seconds)
Cbc0010I After 7200 nodes, 3596 on tree, 1e+50 best solution, best possible -5344610.1 (2744.91 seconds)
Cbc0010I After 7300 nodes, 3646 on tree, 1e+50 best solution, best possible -5344610.1 (2757.21 seconds)
Cbc0010I After 7400 nodes, 3696 on tree, 1e+50 best solution, best possible -5344610.1 (2769.58 seconds)
Cbc0010I After 7500 nodes, 3746 on tree, 1e+50 best solution, best possible -5344610.1 (2780.83 seconds)
Cbc0010I After 7600 nodes, 3796 on tree, 1e+50 best solution, best possible -5344610.1 (2791.73 seconds)
Cbc0010I After 7700 nodes, 3846 on tree, 1e+50 best solution, best possible -5344610.1 (2802.89 seconds)
Cbc0010I After 7800 nodes, 3896 on tree, 1e+50 best solution, best possible -5344610.1 (2814.93 seconds)
Cbc0010I After 7900 nodes, 3946 on tree, 1e+50 best solution, best possible -5344610.1 (2829.07 seconds)
Cbc0010I After 8000 nodes, 3996 on tree, 1e+50 best solution, best possible -5344610.1 (2843.26 seconds)
Cbc0010I After 8100 nodes, 4046 on tree, 1e+50 best solution, best possible -5344610.1 (2857.20 seconds)
Cbc0010I After 8200 nodes, 4096 on tree, 1e+50 best solution, best possible -5344610.1 (2870.99 seconds)
Cbc0010I After 8300 nodes, 4146 on tree, 1e+50 best solution, best possible -5344610.1 (2884.55 seconds)
Cbc0010I After 8400 nodes, 4196 on tree, 1e+50 best solution, best possible -5344610.1 (2896.79 seconds)
Cbc0010I After 8500 nodes, 4243 on tree, 1e+50 best solution, best possible -5344610.1 (2908.09 seconds)
Cbc0010I After 8600 nodes, 4293 on tree, 1e+50 best solution, best possible -5344610.1 (2919.15 seconds)
Cbc0010I After 8700 nodes, 4342 on tree, 1e+50 best solution, best possible -5344610.1 (2930.07 seconds)
Cbc0010I After 8800 nodes, 4391 on tree, 1e+50 best solution, best possible -5344610.1 (2940.00 seconds)
Cbc0010I After 8900 nodes, 4441 on tree, 1e+50 best solution, best possible -5344610.1 (2949.48 seconds)
Cbc0010I After 9000 nodes, 4491 on tree, 1e+50 best solution, best possible -5344610.1 (2958.63 seconds)
Cbc0010I After 9100 nodes, 4541 on tree, 1e+50 best solution, best possible -5344610.1 (2967.91 seconds)
Cbc0010I After 9200 nodes, 4591 on tree, 1e+50 best solution, best possible -5344610.1 (2977.11 seconds)
Cbc0010I After 9300 nodes, 4641 on tree, 1e+50 best solution, best possible -5344610.1 (2986.25 seconds)
Cbc0010I After 9400 nodes, 4691 on tree, 1e+50 best solution, best possible -5344610.1 (2995.53 seconds)
Cbc0010I After 9500 nodes, 4741 on tree, 1e+50 best solution, best possible -5344610.1 (3005.03 seconds)
Cbc0010I After 9600 nodes, 4791 on tree, 1e+50 best solution, best possible -5344610.1 (3014.70 seconds)
Cbc0010I After 9700 nodes, 4841 on tree, 1e+50 best solution, best possible -5344610.1 (3024.11 seconds)
Cbc0010I After 9800 nodes, 4891 on tree, 1e+50 best solution, best possible -5344610.1 (3033.41 seconds)
Cbc0010I After 9900 nodes, 4941 on tree, 1e+50 best solution, best possible -5344610.1 (3042.75 seconds)
Cbc0010I After 10000 nodes, 4991 on tree, 1e+50 best solution, best possible -5344610.1 (3052.19 seconds)
Cbc0010I After 10100 nodes, 5041 on tree, 1e+50 best solution, best possible -5344610.1 (3061.63 seconds)
Cbc0010I After 10200 nodes, 5091 on tree, 1e+50 best solution, best possible -5344610.1 (3071.24 seconds)
Cbc0010I After 10300 nodes, 5141 on tree, 1e+50 best solution, best possible -5344610.1 (3081.05 seconds)
Couenne: new cutoff value 2.3896807390e+06 (3359.32 seconds)
Cbc0004I Integer solution of 2389680.7 found after 419619 iterations and 10395 nodes (3090.90 seconds)
Cbc0010I After 10400 nodes, 4155 on tree, 2389680.7 best solution, best possible -5342824.5 (3149.05 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 10500 nodes, 4205 on tree, 2389680.7 best solution, best possible -5342824.5 (3163.99 seconds)
Cbc0010I After 10600 nodes, 4255 on tree, 2389680.7 best solution, best possible -5342824.5 (3178.29 seconds)
Cbc0010I After 10700 nodes, 4305 on tree, 2389680.7 best solution, best possible -5342824.5 (3191.70 seconds)
Cbc0010I After 10800 nodes, 4355 on tree, 2389680.7 best solution, best possible -5342824.5 (3204.94 seconds)
Cbc0010I After 10900 nodes, 4405 on tree, 2389680.7 best solution, best possible -5342824.5 (3218.37 seconds)
Cbc0010I After 11000 nodes, 4455 on tree, 2389680.7 best solution, best possible -5342824.5 (3231.33 seconds)
Cbc0010I After 11100 nodes, 4505 on tree, 2389680.7 best solution, best possible -5342824.5 (3244.63 seconds)
Cbc0010I After 11200 nodes, 4555 on tree, 2389680.7 best solution, best possible -5342824.5 (3256.73 seconds)
Cbc0010I After 11300 nodes, 4605 on tree, 2389680.7 best solution, best possible -5342824.5 (3268.25 seconds)
Cbc0010I After 11400 nodes, 4655 on tree, 2389680.7 best solution, best possible -5342824.5 (3280.87 seconds)
Cbc0010I After 11500 nodes, 4705 on tree, 2389680.7 best solution, best possible -5342824.5 (3292.45 seconds)
Cbc0010I After 11600 nodes, 4755 on tree, 2389680.7 best solution, best possible -5342824.5 (3304.12 seconds)
Cbc0010I After 11700 nodes, 4805 on tree, 2389680.7 best solution, best possible -5342824.5 (3314.90 seconds)
Cbc0010I After 11800 nodes, 4855 on tree, 2389680.7 best solution, best possible -5342824.5 (3326.26 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 2389680.7 (best possible -5342824.5), took 543938 iterations and 11847 nodes (3405.52 seconds)
Cbc0035I Maximum depth 2125, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.023456s)
Total solve time:                         3405.72s (3405.72s in branch-and-bound)
Lower bound:                           -5.34282e+06
Upper bound:                           2.38968e+06  (gap: 144.73%)
Branch-and-bound nodes:                     11847
Stats: /tmp/jl_we2irg/model.nl 2416 [var]  816 [int] 2450 [con] 1649 [aux]  10441 [root]    10441 [tot] 0.023456 [sep]  3405.72 [time]  3405.72 [bb]        -5.342825e+06 [lower]         2.389681e+06 [upper]   11847 [nodes]
Performance of                           FBBT:	    57.8032s,    17698 runs. fix:          0 shrnk:    37.2965 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    6.32081s,       10 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap72.txt
