solving instance uflp nlass orlib 62 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 278003.87       48 5.073463
NLP0014I             2      INFEAS 0.99999999       83 1.669031
Loaded instance "/tmp/jl_MsIE97/model.nl"
Constraints:         2450
Variables:           2416 (816 integer)
Auxiliaries:         3248 (0 integer)

Coin0506I Presolve 8691 (-1750) rows, 3911 (-1753) columns and 18880 (-4365) elements
Clp0006I 0  Obj 0 Primal inf 97.999951 (49)
Clp0006I 248  Obj 1.7659927e-16 Primal inf 130.5435 (198)
Clp0006I 496  Obj 2.0630236e-16 Primal inf 117.73464 (272)
Clp0006I 744  Obj 1.7576479e-16 Primal inf 133.13124 (303)
Clp0006I 992  Obj 1.8992807e-16 Primal inf 181.98727 (319)
Clp0006I 1240  Obj 1.8817731e-16 Primal inf 117.98406 (251)
Clp0006I 1488  Obj 1.7267672e-16 Primal inf 117.66337 (278)
Clp0006I 1736  Obj 1.7939013e-16 Primal inf 154.00846 (315)
Clp0006I 1984  Obj 1.9073146e-16 Primal inf 143.53764 (271)
Clp0006I 2232  Obj 1.9429019e-16 Primal inf 93.962362 (283)
Clp0006I 2480  Obj 1.819785e-16 Primal inf 126.01257 (324)
Clp0006I 2728  Obj 1.8926335e-16 Primal inf 115.0356 (277)
Clp0006I 2976  Obj 8693.9345 Primal inf 87.617436 (293)
Clp0006I 3019  Obj 10863.272
Clp0000I Optimal - objective value 10863.272
Clp0032I Optimal objective 10863.27229 - 3019 iterations time 0.132, Presolve 0.03
Clp0000I Optimal - objective value 10863.272
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10863.272
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1313 added rows had average density of 2
Cbc0013I At root node, 1313 cuts changed objective from 10863.272 to 122575.26 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 12144 row cuts average 2.0 elements, 839 column cuts (2132 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (75.39 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0496485919e+06 (236.845 seconds)
Cbc0012I Integer solution of 1049648.6 found by Couenne Rounding NLP after 11144 iterations and 1 nodes (208.22 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 6.1050455082e+05 (377.928 seconds)
Cbc0012I Integer solution of 610504.55 found by Couenne Rounding NLP after 11561 iterations and 2 nodes (349.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 610504.55 best solution, best possible 132297.63 (965.31 seconds)
Cbc0010I After 200 nodes, 100 on tree, 610504.55 best solution, best possible 132297.63 (992.73 seconds)
Cbc0010I After 300 nodes, 150 on tree, 610504.55 best solution, best possible 132297.63 (1015.70 seconds)
Cbc0010I After 400 nodes, 200 on tree, 610504.55 best solution, best possible 132297.63 (1041.22 seconds)
Cbc0010I After 500 nodes, 250 on tree, 610504.55 best solution, best possible 132297.63 (1066.03 seconds)
Cbc0010I After 600 nodes, 300 on tree, 610504.55 best solution, best possible 132297.63 (1090.74 seconds)
Cbc0010I After 700 nodes, 350 on tree, 610504.55 best solution, best possible 132297.63 (1113.77 seconds)
Cbc0010I After 800 nodes, 400 on tree, 610504.55 best solution, best possible 132297.63 (1136.12 seconds)
Cbc0010I After 900 nodes, 449 on tree, 610504.55 best solution, best possible 132297.63 (1160.25 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 1000 nodes, 493 on tree, 610504.55 best solution, best possible 133624.76 (1748.10 seconds)
Cbc0010I After 1100 nodes, 543 on tree, 610504.55 best solution, best possible 133624.76 (1775.16 seconds)
Cbc0010I After 1200 nodes, 593 on tree, 610504.55 best solution, best possible 133624.76 (1798.45 seconds)
Cbc0010I After 1300 nodes, 643 on tree, 610504.55 best solution, best possible 133624.76 (1818.88 seconds)
Cbc0010I After 1400 nodes, 693 on tree, 610504.55 best solution, best possible 133624.76 (1839.82 seconds)
Cbc0010I After 1500 nodes, 743 on tree, 610504.55 best solution, best possible 133624.76 (1863.35 seconds)
Cbc0010I After 1600 nodes, 793 on tree, 610504.55 best solution, best possible 133624.76 (1887.48 seconds)
Cbc0010I After 1700 nodes, 843 on tree, 610504.55 best solution, best possible 133624.76 (1911.92 seconds)
Cbc0010I After 1800 nodes, 881 on tree, 610504.55 best solution, best possible 135930.41 (2375.67 seconds)
Cbc0010I After 1900 nodes, 931 on tree, 610504.55 best solution, best possible 135930.41 (2402.60 seconds)
Cbc0010I After 2000 nodes, 981 on tree, 610504.55 best solution, best possible 135930.41 (2424.69 seconds)
Cbc0010I After 2100 nodes, 1031 on tree, 610504.55 best solution, best possible 135930.41 (2448.19 seconds)
Cbc0010I After 2200 nodes, 1081 on tree, 610504.55 best solution, best possible 135930.41 (2470.35 seconds)
Cbc0010I After 2300 nodes, 1131 on tree, 610504.55 best solution, best possible 135930.41 (2492.28 seconds)
Cbc0010I After 2400 nodes, 1181 on tree, 610504.55 best solution, best possible 135930.41 (2516.80 seconds)
Cbc0010I After 2500 nodes, 1231 on tree, 610504.55 best solution, best possible 135930.41 (2541.47 seconds)
Cbc0010I After 2600 nodes, 1274 on tree, 610504.55 best solution, best possible 136303.45 (2590.28 seconds)
Cbc0010I After 2700 nodes, 1324 on tree, 610504.55 best solution, best possible 136303.45 (2619.82 seconds)
Cbc0010I After 2800 nodes, 1374 on tree, 610504.55 best solution, best possible 136303.45 (2646.65 seconds)
Cbc0010I After 2900 nodes, 1424 on tree, 610504.55 best solution, best possible 136303.45 (2671.67 seconds)
Cbc0010I After 3000 nodes, 1474 on tree, 610504.55 best solution, best possible 136303.45 (2697.54 seconds)
Cbc0010I After 3100 nodes, 1524 on tree, 610504.55 best solution, best possible 136303.45 (2721.70 seconds)
Cbc0010I After 3200 nodes, 1574 on tree, 610504.55 best solution, best possible 136303.45 (2744.92 seconds)
Cbc0010I After 3300 nodes, 1624 on tree, 610504.55 best solution, best possible 136303.45 (2767.60 seconds)
Cbc0010I After 3400 nodes, 1674 on tree, 610504.55 best solution, best possible 136303.45 (2792.09 seconds)
Optimality Based BT: 2 improved bounds
Cbc0010I After 3500 nodes, 1716 on tree, 610504.55 best solution, best possible 136417.98 (3073.06 seconds)
Cbc0010I After 3600 nodes, 1766 on tree, 610504.55 best solution, best possible 136417.98 (3120.91 seconds)
Cbc0010I After 3700 nodes, 1816 on tree, 610504.55 best solution, best possible 136417.98 (3144.99 seconds)
Cbc0010I After 3800 nodes, 1866 on tree, 610504.55 best solution, best possible 136417.98 (3167.92 seconds)
Cbc0010I After 3900 nodes, 1916 on tree, 610504.55 best solution, best possible 136417.98 (3190.36 seconds)
Cbc0010I After 4000 nodes, 1966 on tree, 610504.55 best solution, best possible 136417.98 (3212.37 seconds)
Cbc0010I After 4100 nodes, 2015 on tree, 610504.55 best solution, best possible 136417.98 (3236.95 seconds)
Cbc0010I After 4200 nodes, 2062 on tree, 610504.55 best solution, best possible 138639.57 (3272.96 seconds)
Cbc0010I After 4300 nodes, 2112 on tree, 610504.55 best solution, best possible 138639.57 (3299.64 seconds)
Cbc0010I After 4400 nodes, 2162 on tree, 610504.55 best solution, best possible 138639.57 (3323.44 seconds)
Cbc0010I After 4500 nodes, 2212 on tree, 610504.55 best solution, best possible 138639.57 (3346.26 seconds)
Cbc0010I After 4600 nodes, 2262 on tree, 610504.55 best solution, best possible 138639.57 (3368.53 seconds)
Cbc0010I After 4700 nodes, 2312 on tree, 610504.55 best solution, best possible 138639.57 (3392.49 seconds)
Cbc0010I After 4800 nodes, 2362 on tree, 610504.55 best solution, best possible 138639.57 (3414.77 seconds)
Cbc0010I After 4900 nodes, 2412 on tree, 610504.55 best solution, best possible 138639.57 (3438.56 seconds)
Optimality Based BT: 2 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 610504.55 (best possible 138639.57), took 1749875 iterations and 4927 nodes (3577.12 seconds)
Cbc0035I Maximum depth 465, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.05437s)
Total solve time:                         3577.46s (3577.46s in branch-and-bound)
Lower bound:                               138640
Upper bound:                               610505  (gap: 340.35%)
Branch-and-bound nodes:                      4927
Stats: /tmp/jl_MsIE97/model.nl 2416 [var]  816 [int] 2450 [con] 3248 [aux]  10441 [root]    10441 [tot] 0.05437 [sep]  3577.46 [time]  3577.47 [bb]         1.386396e+05 [lower]         6.105046e+05 [upper]    4927 [nodes]
Performance of                           FBBT:	    180.828s,     9204 runs. fix:          0 shrnk:  0.0058287 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.2028s,        9 runs. fix:   0.477273 shrnk:    10.1574 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap62.txt
