solving instance uflp nlass holmberg 53 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.0745000001e+04 (16.5082 seconds)
16.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6087.3156      434 305.92364
NLP0014I             2      INFEAS 0.049075264       69 3.983579
Loaded instance "/tmp/jl_TB7NVX/model.nl"
Constraints:         6100
Variables:           6020 (2020 integer)
Auxiliaries:         4100 (0 integer)

Coin0506I Presolve 26096 (-5) rows, 10016 (-104) columns and 62007 (-113) elements
Clp0006I 0  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (2001)
Clp0006I 355  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (2001)
Clp0006I 710  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (2001)
Clp0006I 1065  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (2001)
Clp0006I 1420  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (2001)
Clp0006I 1775  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (2001)
Clp0029I End of values pass after 2000 iterations
Clp0006I 2000  Obj 0 Primal inf 166.35067 (100) Dual inf 2.469236e+13 (4000)
Clp0006I 2355  Obj 1908.7812 Primal inf 135.74652 (163) Dual inf 2.5270673e+13 (3974)
Clp0006I 2710  Obj 4663.3793 Primal inf 95.625322 (148) Dual inf 1.0124924e+09 (3959)
Clp0006I 3065  Obj 9306.8776 Primal inf 48.573835 (142) Dual inf 7.0082174e+08 (3754)
Clp0006I 3420  Obj 13157.152 Primal inf 12.12124 (72) Dual inf 2.4090669e+08 (3190)
Clp0006I 3775  Obj 12201.599 Dual inf 485360.14 (2928)
Clp0006I 4130  Obj 11581.482 Dual inf 522514.61 (2825)
Clp0006I 4485  Obj 10943.544 Dual inf 546911.59 (2757)
Clp0006I 4840  Obj 7709.6795 Dual inf 542263.97 (2581)
Clp0006I 5195  Obj 4426.512 Dual inf 902904.94 (2291)
Clp0006I 5550  Obj -848.54329 Dual inf 566752.11 (2234)
Clp0006I 5905  Obj -6115.4509 Dual inf 794368.96 (2159)
Clp0006I 6260  Obj -12551.637 Dual inf 663664.97 (2053)
Clp0006I 6615  Obj -17328.952 Dual inf 323914.16 (1934)
Clp0006I 6970  Obj -21482.561 Dual inf 305027.42 (1862)
Clp0006I 7325  Obj -25310.731 Dual inf 467927.07 (1882)
Clp0006I 7680  Obj -29452.975 Dual inf 627013.65 (1787)
Clp0006I 8035  Obj -33763.39 Dual inf 332337.56 (1650)
Clp0006I 8390  Obj -36152.525 Dual inf 171098.8 (1309)
Clp0006I 8745  Obj -38529.29 Dual inf 92542.765 (988)
Clp0006I 9100  Obj -39192.19 Dual inf 162370.79 (866)
Clp0006I 9455  Obj -40490.087 Dual inf 305791.92 (782)
Clp0006I 9810  Obj -42118.417 Dual inf 68365.562 (475)
Clp0006I 10165  Obj -42706.326 Dual inf 2637.2391 (156)
Clp0006I 10347  Obj -42762.664
Clp0000I Optimal - objective value -42762.664
Clp0000I Optimal - objective value -42762.646
Clp0032I Optimal objective -42762.64583 - 10347 iterations time 2.352, Presolve 0.06
Clp0000I Optimal - objective value -42762.646
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -42762.646
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1095 added rows had average density of 2
Cbc0013I At root node, 1095 cuts changed objective from -42762.646 to -41197.126 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9203 row cuts average 2.0 elements, 47042 column cuts (48137 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (153.56 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -40887.547 (1691.67 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -40887.547 (1752.78 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -40887.547 (1818.10 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -40887.547 (1881.03 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -40887.547 (1936.82 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -40887.547 (1991.26 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -40887.547 (2041.53 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -40887.547 (2085.98 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -40887.547 (2130.34 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -40887.547 (2172.39 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -40887.547 (2214.36 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -40887.547 (2254.71 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -40887.547 (2291.98 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -40887.547 (2328.93 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -40887.547 (2366.40 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -40887.547 (2404.33 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -40887.547 (2441.89 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -40887.547 (2479.93 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -40887.547 (2517.56 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -40887.547 (2555.17 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -40887.547 (2592.22 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -40887.547 (2628.36 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -40887.547 (2665.78 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -40887.547 (2703.11 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -40887.547 (2740.31 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -40887.547 (2775.73 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -40887.547 (2814.23 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -40887.547 (2857.26 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -40887.547 (2899.92 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -40887.547 (2942.92 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -40887.547 (2986.66 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -40887.547 (3030.47 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -40887.547 (3074.62 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -40887.547 (3118.71 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -40887.547 (3162.99 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -40887.547 (3207.46 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -40887.547 (3251.79 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -40887.547), took 763995 iterations and 3733 nodes (3348.29 seconds)
Cbc0035I Maximum depth 1867, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      26101
Linearization cuts added in total:          26101  (separation time: 0.063831s)
Total solve time:                         3350.67s (3350.67s in branch-and-bound)
Lower bound:                             -40887.5
Upper bound:                                20745  (gap: 150.73%)
Branch-and-bound nodes:                      3733
Stats: /tmp/jl_TB7NVX/model.nl 6020 [var] 2020 [int] 6100 [con] 4100 [aux]  26101 [root]    26101 [tot] 0.063831 [sep]  3350.67 [time]   3350.7 [bb]        -4.088755e+04 [lower]         2.074500e+04 [upper]    3733 [nodes]
Performance of                           FBBT:	    93.1061s,     7216 runs. fix:          0 shrnk:    403.982 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    17.2112s,        7 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p53
