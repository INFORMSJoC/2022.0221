solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 163.96824       32 2.498865
NLP0014I             2      INFEAS 0.99999999       33 0.69996
Loaded instance "/tmp/jl_qvl6iH/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 8800 (-1641) rows, 3980 (-1681) columns and 19120 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 79.99996 (40)
Clp0006I 251  Obj 1.6447034e-16 Primal inf 112.5629 (212)
Clp0006I 502  Obj 2.0690132e-16 Primal inf 127.47372 (236)
Clp0006I 753  Obj 1.6649364e-16 Primal inf 95.944109 (236)
Clp0006I 1004  Obj 1.8595935e-16 Primal inf 96.347942 (202)
Clp0006I 1255  Obj 1.6401314e-16 Primal inf 121.99312 (255)
Clp0006I 1506  Obj 1.8179674e-16 Primal inf 96.21729 (213)
Clp0006I 1757  Obj 1.7065961e-16 Primal inf 160.26801 (277)
Clp0006I 2008  Obj 1.7515027e-16 Primal inf 96.086639 (224)
Clp0006I 2259  Obj 1.7857812e-16 Primal inf 132.65739 (242)
Clp0006I 2510  Obj 1.6723176e-16 Primal inf 95.955987 (235)
Clp0006I 2761  Obj 1.8595935e-16 Primal inf 96.35982 (201)
Clp0006I 3012  Obj 1.6347587e-16 Primal inf 116.77381 (252)
Clp0006I 3247  Obj 21.347689
Clp0000I Optimal - objective value 21.347689
Clp0032I Optimal objective 21.34768853 - 3247 iterations time 0.152, Presolve 0.03
Clp0000I Optimal - objective value 21.347689
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 21.347689
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 945 added rows had average density of 2
Cbc0013I At root node, 945 cuts changed objective from 21.347689 to 94.037642 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14259 row cuts average 2.0 elements, 880 column cuts (1490 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (77.25 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.5245557282e+02 (339.444 seconds)
Cbc0012I Integer solution of 952.45557 found by Couenne Rounding NLP after 10772 iterations and 2 nodes (315.51 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 9.0503148437e+02 (581.317 seconds)
Cbc0012I Integer solution of 905.03148 found by Couenne Rounding NLP after 13510 iterations and 4 nodes (557.38 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.6948947015e+02 (795.172 seconds)
Cbc0012I Integer solution of 769.48947 found by Couenne Rounding NLP after 15779 iterations and 7 nodes (771.24 seconds)
Cbc0010I After 100 nodes, 50 on tree, 769.48947 best solution, best possible 95.006318 (807.38 seconds)
Cbc0010I After 200 nodes, 100 on tree, 769.48947 best solution, best possible 95.006318 (837.13 seconds)
Cbc0010I After 300 nodes, 150 on tree, 769.48947 best solution, best possible 95.006318 (861.82 seconds)
Cbc0010I After 400 nodes, 200 on tree, 769.48947 best solution, best possible 95.006318 (880.86 seconds)
Cbc0010I After 500 nodes, 250 on tree, 769.48947 best solution, best possible 95.006318 (899.18 seconds)
Cbc0010I After 600 nodes, 300 on tree, 769.48947 best solution, best possible 95.006318 (918.85 seconds)
Cbc0010I After 700 nodes, 350 on tree, 769.48947 best solution, best possible 95.006318 (938.99 seconds)
Cbc0010I After 800 nodes, 400 on tree, 769.48947 best solution, best possible 95.006318 (959.06 seconds)
Cbc0010I After 900 nodes, 450 on tree, 769.48947 best solution, best possible 95.006318 (978.67 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 769.48947 best solution, best possible 95.006318 (995.70 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 769.48947 best solution, best possible 95.006318 (1010.71 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 769.48947 best solution, best possible 95.006318 (1025.05 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 769.48947 best solution, best possible 95.006318 (1039.56 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 769.48947 best solution, best possible 95.006318 (1053.19 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 769.48947 best solution, best possible 95.006318 (1066.44 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 769.48947 best solution, best possible 95.006318 (1079.68 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 769.48947 best solution, best possible 95.006318 (1092.75 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 769.48947 best solution, best possible 95.006318 (1105.81 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 769.48947 best solution, best possible 95.006318 (1118.69 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 769.48947 best solution, best possible 95.006318 (1131.59 seconds)
Cbc0010I After 2100 nodes, 1049 on tree, 769.48947 best solution, best possible 95.006318 (1145.54 seconds)
Cbc0010I After 2200 nodes, 1099 on tree, 769.48947 best solution, best possible 95.006318 (1158.69 seconds)
Cbc0010I After 2300 nodes, 1149 on tree, 769.48947 best solution, best possible 95.006318 (1171.93 seconds)
Cbc0010I After 2400 nodes, 1199 on tree, 769.48947 best solution, best possible 95.006318 (1185.57 seconds)
Cbc0010I After 2500 nodes, 1249 on tree, 769.48947 best solution, best possible 95.006318 (1200.34 seconds)
Cbc0010I After 2600 nodes, 1299 on tree, 769.48947 best solution, best possible 95.006318 (1215.19 seconds)
Cbc0010I After 2700 nodes, 1349 on tree, 769.48947 best solution, best possible 95.006318 (1230.09 seconds)
Cbc0010I After 2800 nodes, 1399 on tree, 769.48947 best solution, best possible 95.006318 (1245.41 seconds)
Cbc0010I After 2900 nodes, 1449 on tree, 769.48947 best solution, best possible 95.006318 (1260.80 seconds)
Cbc0010I After 3000 nodes, 1499 on tree, 769.48947 best solution, best possible 95.006318 (1275.81 seconds)
Cbc0010I After 3100 nodes, 1549 on tree, 769.48947 best solution, best possible 95.006318 (1289.80 seconds)
Couenne: new cutoff value 7.3520519235e+02 (1326.88 seconds)
Cbc0004I Integer solution of 735.20519 found after 251982 iterations and 3200 nodes (1303.45 seconds)
Cbc0010I After 3200 nodes, 1022 on tree, 735.20519 best solution, best possible 95.006318 (1320.23 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3300 nodes, 1071 on tree, 735.20519 best solution, best possible 100.15504 (1476.89 seconds)
Cbc0010I After 3400 nodes, 1121 on tree, 735.20519 best solution, best possible 100.15504 (1500.06 seconds)
Cbc0010I After 3500 nodes, 1171 on tree, 735.20519 best solution, best possible 100.15504 (1519.18 seconds)
Cbc0010I After 3600 nodes, 1221 on tree, 735.20519 best solution, best possible 100.15504 (1538.48 seconds)
Cbc0010I After 3700 nodes, 1271 on tree, 735.20519 best solution, best possible 100.15504 (1555.86 seconds)
Cbc0010I After 3800 nodes, 1321 on tree, 735.20519 best solution, best possible 100.15504 (1575.61 seconds)
Cbc0010I After 3900 nodes, 1371 on tree, 735.20519 best solution, best possible 100.15504 (1595.76 seconds)
Cbc0010I After 4000 nodes, 1421 on tree, 735.20519 best solution, best possible 100.15504 (1615.71 seconds)
Cbc0010I After 4100 nodes, 1471 on tree, 735.20519 best solution, best possible 100.15504 (1635.77 seconds)
Cbc0010I After 4200 nodes, 1521 on tree, 735.20519 best solution, best possible 100.15504 (1655.17 seconds)
Cbc0010I After 4300 nodes, 1571 on tree, 735.20519 best solution, best possible 100.15504 (1672.68 seconds)
Cbc0010I After 4400 nodes, 1621 on tree, 735.20519 best solution, best possible 100.15504 (1689.51 seconds)
Cbc0010I After 4500 nodes, 1671 on tree, 735.20519 best solution, best possible 100.15504 (1704.97 seconds)
Cbc0010I After 4600 nodes, 1721 on tree, 735.20519 best solution, best possible 100.15504 (1719.94 seconds)
Cbc0010I After 4700 nodes, 1771 on tree, 735.20519 best solution, best possible 100.15504 (1735.16 seconds)
Cbc0010I After 4800 nodes, 1817 on tree, 735.20519 best solution, best possible 100.15504 (1749.72 seconds)
Cbc0010I After 4900 nodes, 1864 on tree, 735.20519 best solution, best possible 100.15504 (1764.43 seconds)
Cbc0010I After 5000 nodes, 1914 on tree, 735.20519 best solution, best possible 100.15504 (1779.68 seconds)
Cbc0010I After 5100 nodes, 1962 on tree, 735.20519 best solution, best possible 100.15504 (1793.95 seconds)
Cbc0010I After 5200 nodes, 2012 on tree, 735.20519 best solution, best possible 100.15504 (1809.03 seconds)
Cbc0010I After 5300 nodes, 2060 on tree, 735.20519 best solution, best possible 100.15504 (1823.73 seconds)
Cbc0010I After 5400 nodes, 2110 on tree, 735.20519 best solution, best possible 100.15504 (1838.55 seconds)
Cbc0010I After 5500 nodes, 2160 on tree, 735.20519 best solution, best possible 100.15504 (1853.28 seconds)
Cbc0010I After 5600 nodes, 2209 on tree, 735.20519 best solution, best possible 100.15504 (1868.12 seconds)
Cbc0010I After 5700 nodes, 2258 on tree, 735.20519 best solution, best possible 100.15504 (1883.05 seconds)
Cbc0010I After 5800 nodes, 2308 on tree, 735.20519 best solution, best possible 100.15504 (1897.95 seconds)
Cbc0010I After 5900 nodes, 2357 on tree, 735.20519 best solution, best possible 100.15504 (1913.00 seconds)
Cbc0010I After 6000 nodes, 2407 on tree, 735.20519 best solution, best possible 100.15504 (1927.98 seconds)
Cbc0010I After 6100 nodes, 2457 on tree, 735.20519 best solution, best possible 100.15504 (1943.11 seconds)
Cbc0010I After 6200 nodes, 2507 on tree, 735.20519 best solution, best possible 100.15504 (1958.29 seconds)
Cbc0010I After 6300 nodes, 2556 on tree, 735.20519 best solution, best possible 100.15504 (1973.62 seconds)
Cbc0010I After 6400 nodes, 2606 on tree, 735.20519 best solution, best possible 100.15504 (1989.36 seconds)
Cbc0010I After 6500 nodes, 2656 on tree, 735.20519 best solution, best possible 100.15504 (2004.66 seconds)
Cbc0010I After 6600 nodes, 2703 on tree, 735.20519 best solution, best possible 100.57178 (2026.73 seconds)
Cbc0010I After 6700 nodes, 2753 on tree, 735.20519 best solution, best possible 100.57178 (2064.86 seconds)
Cbc0010I After 6800 nodes, 2803 on tree, 735.20519 best solution, best possible 100.57178 (2099.79 seconds)
Cbc0010I After 6900 nodes, 2853 on tree, 735.20519 best solution, best possible 100.57178 (2125.90 seconds)
Cbc0010I After 7000 nodes, 2903 on tree, 735.20519 best solution, best possible 100.57178 (2148.85 seconds)
Cbc0010I After 7100 nodes, 2953 on tree, 735.20519 best solution, best possible 100.57178 (2170.75 seconds)
Cbc0010I After 7200 nodes, 2999 on tree, 735.20519 best solution, best possible 100.57379 (2201.70 seconds)
Cbc0010I After 7300 nodes, 3049 on tree, 735.20519 best solution, best possible 100.57379 (2238.24 seconds)
Cbc0010I After 7400 nodes, 3099 on tree, 735.20519 best solution, best possible 100.57379 (2269.42 seconds)
Cbc0010I After 7500 nodes, 3149 on tree, 735.20519 best solution, best possible 100.57379 (2296.65 seconds)
Cbc0010I After 7600 nodes, 3199 on tree, 735.20519 best solution, best possible 100.57379 (2321.90 seconds)
Cbc0010I After 7700 nodes, 3249 on tree, 735.20519 best solution, best possible 100.57379 (2345.33 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 7800 nodes, 3294 on tree, 735.20519 best solution, best possible 100.61135 (2466.82 seconds)
Cbc0010I After 7900 nodes, 3344 on tree, 735.20519 best solution, best possible 100.61135 (2505.20 seconds)
Cbc0010I After 8000 nodes, 3394 on tree, 735.20519 best solution, best possible 100.61135 (2533.94 seconds)
Cbc0010I After 8100 nodes, 3444 on tree, 735.20519 best solution, best possible 100.61135 (2564.11 seconds)
Cbc0010I After 8200 nodes, 3494 on tree, 735.20519 best solution, best possible 100.61135 (2581.69 seconds)
Cbc0010I After 8300 nodes, 3544 on tree, 735.20519 best solution, best possible 100.61135 (2600.54 seconds)
Cbc0010I After 8400 nodes, 3594 on tree, 735.20519 best solution, best possible 100.61135 (2619.00 seconds)
Cbc0010I After 8500 nodes, 3644 on tree, 735.20519 best solution, best possible 100.61135 (2635.43 seconds)
Cbc0010I After 8600 nodes, 3694 on tree, 735.20519 best solution, best possible 100.61135 (2649.77 seconds)
Cbc0010I After 8700 nodes, 3744 on tree, 735.20519 best solution, best possible 100.61135 (2663.23 seconds)
Cbc0010I After 8800 nodes, 3794 on tree, 735.20519 best solution, best possible 100.61135 (2676.67 seconds)
Cbc0010I After 8900 nodes, 3844 on tree, 735.20519 best solution, best possible 100.61135 (2689.84 seconds)
Cbc0010I After 9000 nodes, 3894 on tree, 735.20519 best solution, best possible 100.61135 (2702.93 seconds)
Cbc0010I After 9100 nodes, 3944 on tree, 735.20519 best solution, best possible 100.61135 (2715.98 seconds)
Cbc0010I After 9200 nodes, 3994 on tree, 735.20519 best solution, best possible 100.61135 (2728.95 seconds)
Cbc0010I After 9300 nodes, 4044 on tree, 735.20519 best solution, best possible 100.61135 (2741.91 seconds)
Cbc0010I After 9400 nodes, 4094 on tree, 735.20519 best solution, best possible 100.61135 (2754.79 seconds)
Cbc0010I After 9500 nodes, 4144 on tree, 735.20519 best solution, best possible 100.61135 (2767.88 seconds)
Cbc0010I After 9600 nodes, 4194 on tree, 735.20519 best solution, best possible 100.61135 (2781.07 seconds)
Cbc0010I After 9700 nodes, 4244 on tree, 735.20519 best solution, best possible 100.61135 (2795.14 seconds)
Cbc0010I After 9800 nodes, 4294 on tree, 735.20519 best solution, best possible 100.61135 (2808.60 seconds)
Cbc0010I After 9900 nodes, 4344 on tree, 735.20519 best solution, best possible 100.61135 (2820.50 seconds)
Couenne: new cutoff value 7.0201381463e+02 (2854.52 seconds)
Cbc0004I Integer solution of 702.01381 found after 1233328 iterations and 9984 nodes (2830.76 seconds)
Cbc0010I After 10000 nodes, 3607 on tree, 702.01381 best solution, best possible 100.86321 (2848.65 seconds)
Cbc0010I After 10100 nodes, 3657 on tree, 702.01381 best solution, best possible 100.86321 (2899.37 seconds)
Cbc0010I After 10200 nodes, 3707 on tree, 702.01381 best solution, best possible 100.86321 (2925.25 seconds)
Cbc0010I After 10300 nodes, 3757 on tree, 702.01381 best solution, best possible 100.86321 (2943.67 seconds)
Cbc0010I After 10400 nodes, 3807 on tree, 702.01381 best solution, best possible 100.86321 (2959.72 seconds)
Cbc0010I After 10500 nodes, 3857 on tree, 702.01381 best solution, best possible 100.86321 (2978.38 seconds)
Cbc0010I After 10600 nodes, 3902 on tree, 702.01381 best solution, best possible 101.271 (3002.59 seconds)
Cbc0010I After 10700 nodes, 3952 on tree, 702.01381 best solution, best possible 101.271 (3036.18 seconds)
Cbc0010I After 10800 nodes, 4002 on tree, 702.01381 best solution, best possible 101.271 (3070.39 seconds)
Cbc0010I After 10900 nodes, 4052 on tree, 702.01381 best solution, best possible 101.271 (3101.16 seconds)
Cbc0010I After 11000 nodes, 4102 on tree, 702.01381 best solution, best possible 101.271 (3125.33 seconds)
Cbc0010I After 11100 nodes, 4152 on tree, 702.01381 best solution, best possible 101.271 (3147.19 seconds)
Cbc0010I After 11200 nodes, 4199 on tree, 702.01381 best solution, best possible 101.31826 (3180.34 seconds)
Cbc0010I After 11300 nodes, 4249 on tree, 702.01381 best solution, best possible 101.31826 (3205.23 seconds)
Cbc0010I After 11400 nodes, 4299 on tree, 702.01381 best solution, best possible 101.31826 (3226.89 seconds)
Cbc0010I After 11500 nodes, 4349 on tree, 702.01381 best solution, best possible 101.31826 (3246.41 seconds)
Cbc0010I After 11600 nodes, 4399 on tree, 702.01381 best solution, best possible 101.31826 (3266.28 seconds)
Cbc0010I After 11700 nodes, 4449 on tree, 702.01381 best solution, best possible 101.31826 (3286.81 seconds)
Cbc0010I After 11800 nodes, 4499 on tree, 702.01381 best solution, best possible 101.31826 (3307.65 seconds)
Cbc0010I After 11900 nodes, 4549 on tree, 702.01381 best solution, best possible 101.31826 (3328.67 seconds)
Cbc0010I After 12000 nodes, 4599 on tree, 702.01381 best solution, best possible 101.31826 (3349.80 seconds)
Cbc0010I After 12100 nodes, 4649 on tree, 702.01381 best solution, best possible 101.31826 (3371.08 seconds)
Cbc0010I After 12200 nodes, 4699 on tree, 702.01381 best solution, best possible 101.31826 (3391.79 seconds)
Cbc0010I After 12300 nodes, 4749 on tree, 702.01381 best solution, best possible 101.31826 (3410.25 seconds)
Cbc0010I After 12400 nodes, 4799 on tree, 702.01381 best solution, best possible 101.31826 (3428.70 seconds)
Cbc0010I After 12500 nodes, 4849 on tree, 702.01381 best solution, best possible 101.31826 (3446.13 seconds)
Cbc0010I After 12600 nodes, 4898 on tree, 702.01381 best solution, best possible 101.31826 (3462.75 seconds)
Cbc0010I After 12700 nodes, 4948 on tree, 702.01381 best solution, best possible 101.31826 (3478.49 seconds)
Cbc0010I After 12800 nodes, 4998 on tree, 702.01381 best solution, best possible 101.31826 (3494.10 seconds)
Cbc0010I After 12900 nodes, 5048 on tree, 702.01381 best solution, best possible 101.31826 (3510.03 seconds)
Cbc0010I After 13000 nodes, 5097 on tree, 702.01381 best solution, best possible 101.31826 (3525.43 seconds)
Cbc0010I After 13100 nodes, 5145 on tree, 702.01381 best solution, best possible 101.31826 (3541.04 seconds)
Cbc0010I After 13200 nodes, 5193 on tree, 702.01381 best solution, best possible 101.31826 (3556.39 seconds)
Cbc0010I After 13300 nodes, 5243 on tree, 702.01381 best solution, best possible 101.31826 (3571.19 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 702.01381 (best possible 101.31826), took 1943903 iterations and 13335 nodes (3606.01 seconds)
Cbc0035I Maximum depth 1689, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.056435s)
Total solve time:                         3606.22s (3606.22s in branch-and-bound)
Lower bound:                              101.318
Upper bound:                              702.014  (gap: 587.09%)
Branch-and-bound nodes:                     13335
Stats: /tmp/jl_qvl6iH/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.056435 [sep]  3606.22 [time]  3606.23 [bb]         1.013183e+02 [lower]         7.020138e+02 [upper]   13335 [nodes]
Performance of                           FBBT:	     381.31s,    19573 runs. fix: 0.000865926 shrnk:  0.0019984 ubd:          0 2ubd:          0 infeas:          4
Performance of                           OBBT:	    10.8369s,        8 runs. fix:   0.219178 shrnk:   0.691921 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt
