solving instance uflp nlass holmberg 17 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4320.9601      919 51.216902
NLP0014I             2         OPT 7267.5975     1480 58.287789
Couenne: new cutoff value 7.2675975488e+03 (147.448 seconds)
Loaded instance "/tmp/jl_1v9QG8/model.nl"
Constraints:         3050
Variables:           3020 (1020 integer)
Auxiliaries:         4051 (0 integer)

Coin0506I Presolve 13991 (-1060) rows, 5961 (-1110) columns and 30901 (-2170) elements
Clp0006I 0  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 294  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 588  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 882  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 1176  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 1470  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 1764  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0029I End of values pass after 2000 iterations
Clp0006I 2000  Obj 0 Primal inf 271.51148 (50) Dual inf 5.4302306e+12 (1000)
Clp0006I 2294  Obj 658.98041 Primal inf 183.58904 (83) Dual inf 5.8546668e+12 (1007)
Clp0006I 2588  Obj 1338.0501 Primal inf 64.479467 (41) Dual inf 58646133 (818)
Clp0006I 2882  Obj 1370.6737 Dual inf 8134.2645 (64)
Clp0006I 3176  Obj 1065.1787 Dual inf 5425.5217 (55)
Clp0006I 3470  Obj 996.37012 Dual inf 6858.9291 (80)
Clp0006I 3764  Obj 879.01075 Dual inf 50929.857 (170)
Clp0006I 3994  Obj 587.64096 Dual inf 4907.3762 (69)
Clp0006I 4288  Obj 419.11116 Dual inf 1443.5653 (36)
Clp0006I 4582  Obj 341.18521 Dual inf 124.84684 (75)
Clp0006I 4626  Obj 340.46849
Clp0000I Optimal - objective value 340.46849
Clp0000I Optimal - objective value 340.46851
Clp0032I Optimal objective 340.4685065 - 4626 iterations time 0.702, Presolve 0.08
Clp0000I Optimal - objective value 340.46851
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 340.46851
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1018 added rows had average density of 2
Cbc0013I At root node, 1018 cuts changed objective from 340.46851 to 713.62577 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 18469 row cuts average 2.0 elements, 1057 column cuts (1613 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (245.74 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1020.7592 (2351.73 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1020.7592 (2378.27 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1020.7592 (2410.73 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1020.7592 (2443.50 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1020.7592 (2477.18 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1020.7592 (2508.53 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1020.7592 (2540.42 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 1020.7592 (2570.56 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 1020.7592 (2600.39 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 1020.7592 (2628.68 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 1020.7592 (2653.48 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 1020.7592 (2677.39 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 1020.7592 (2700.98 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 1020.7592 (2724.68 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 1020.7592 (2748.04 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 1020.7592 (2771.65 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 1020.7592 (2795.27 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 1020.7592 (2818.78 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 1020.7592 (2841.88 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 1020.7592 (2864.59 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 1020.7592 (2887.36 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 1020.7592 (2909.86 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 1020.7592 (2932.64 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 1020.7592 (2955.59 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible 1020.7592 (2977.30 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible 1020.7592 (2998.63 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible 1020.7592 (3017.39 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible 1020.7592 (3037.17 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible 1020.7592 (3057.16 seconds)
Couenne: new cutoff value 5.0089100078e+03 (3211.96 seconds)
Cbc0004I Integer solution of 5008.91 found after 164274 iterations and 2931 nodes (3063.43 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 5008.91 (best possible 1020.7592), took 169432 iterations and 2936 nodes (3472.87 seconds)
Cbc0035I Maximum depth 1465, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      15051
Linearization cuts added in total:          15051  (separation time: 0.090913s)
Total solve time:                          3473.7s (3473.7s in branch-and-bound)
Lower bound:                              1020.76
Upper bound:                              5008.91  (gap: 390.32%)
Branch-and-bound nodes:                      2936
Stats: /tmp/jl_1v9QG8/model.nl 3020 [var] 1020 [int] 3050 [con] 4051 [aux]  15051 [root]    15051 [tot] 0.090913 [sep]   3473.7 [time]  3473.72 [bb]         1.020759e+03 [lower]         5.008910e+03 [upper]    2936 [nodes]
Performance of                           FBBT:	    117.682s,     3872 runs. fix: 7.90232e-06 shrnk:    215.611 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    10.2539s,        5 runs. fix:        0.4 shrnk:    3.40804 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p17
