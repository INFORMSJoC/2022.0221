solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-10.txt sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 232.55201     1261 55.624034
NLP0014I             2         OPT 3810.9557     2498 87.253828
Couenne: new cutoff value 3.8109557341e+03 (163.444 seconds)
Loaded instance "/tmp/jl_NRISp3/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 11191 (-850) rows, 4771 (-890) columns and 24721 (-1740) elements
Clp0006I 0  Obj 0 Primal inf 2530.3995 (1640)
Clp0006I 280  Obj 0 Primal inf 2715.1602 (1682)
Clp0006I 560  Obj 3.1074857e-18 Primal inf 2633.5523 (1682)
Clp0006I 840  Obj 3.9944577e-17 Primal inf 2639.6129 (1714)
Clp0006I 1120  Obj 6.6353986e-16 Primal inf 3819.1039 (1822)
Clp0006I 1400  Obj 2.3503198e-15 Primal inf 4733.0919 (1767)
Clp0006I 1680  Obj 6.9750476e-15 Primal inf 3838.3573 (1597)
Clp0006I 1960  Obj 5.3994595e-15 Primal inf 17057.142 (1633)
Clp0006I 2240  Obj 2.0273803e-11 Primal inf 3678.4037 (1475)
Clp0006I 2520  Obj 8.9776663e-06 Primal inf 2635.3606 (1113)
Clp0006I 2800  Obj 3.0007418e-05 Primal inf 13454.173 (1330)
Clp0006I 3080  Obj 2.710284e-05 Primal inf 8520.0872 (1164)
Clp0006I 3360  Obj 1.4039018e-05 Primal inf 668.89078 (231)
Clp0006I 3640  Obj 11.752294 Primal inf 1.5853957 (7)
Clp0006I 3651  Obj 11.752294
Clp0000I Optimal - objective value 11.752299
Clp0032I Optimal objective 11.75229873 - 3651 iterations time 0.522, Presolve 0.06
Clp0000I Optimal - objective value 11.752299
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 11.752299
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 568 added rows had average density of 2
Cbc0013I At root node, 568 cuts changed objective from 11.752299 to 48.515081 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 6780 row cuts average 2.0 elements, 7540 column cuts (8108 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (108.64 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 48.991938 (1576.07 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 48.991938 (1608.98 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 48.991938 (1640.12 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 48.991938 (1666.11 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 48.991938 (1684.44 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 48.991938 (1704.32 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 48.991938 (1724.08 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 48.991938 (1743.03 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 48.991938 (1761.73 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 48.991938 (1780.93 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 48.991938 (1797.69 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 48.991938 (1813.80 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 48.991938 (1830.28 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 48.991938 (1846.02 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 48.991938 (1861.04 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 48.991938 (1876.05 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 48.991938 (1891.11 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 48.991938 (1906.44 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 48.991938 (1921.80 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 48.991938 (1937.26 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 48.991938 (1952.75 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 48.991938 (1968.18 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 48.991938 (1983.39 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 48.991938 (1998.62 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible 48.991938 (2013.93 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible 48.991938 (2029.33 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible 48.991938 (2044.52 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible 48.991938 (2059.53 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible 48.991938 (2073.97 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible 48.991938 (2088.30 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible 48.991938 (2101.81 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible 48.991938 (2115.02 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible 48.991938 (2128.31 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible 48.991938 (2141.60 seconds)
Couenne: new cutoff value 1.7910351542e+02 (2308.15 seconds)
Cbc0004I Integer solution of 179.10352 found after 198861 iterations and 3417 nodes (2143.94 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 3500 nodes, 1483 on tree, 179.10352 best solution, best possible 49.42874 (2971.21 seconds)
Cbc0010I After 3600 nodes, 1533 on tree, 179.10352 best solution, best possible 49.42874 (3002.92 seconds)
Cbc0010I After 3700 nodes, 1583 on tree, 179.10352 best solution, best possible 49.42874 (3033.52 seconds)
Cbc0010I After 3800 nodes, 1632 on tree, 179.10352 best solution, best possible 49.42874 (3067.49 seconds)
Cbc0010I After 3900 nodes, 1675 on tree, 179.10352 best solution, best possible 49.42874 (3099.14 seconds)
Cbc0010I After 4000 nodes, 1696 on tree, 179.10352 best solution, best possible 49.42874 (3121.61 seconds)
Cbc0010I After 4100 nodes, 1737 on tree, 179.10352 best solution, best possible 49.42874 (3141.26 seconds)
Cbc0010I After 4200 nodes, 1784 on tree, 179.10352 best solution, best possible 49.42874 (3163.81 seconds)
Cbc0010I After 4300 nodes, 1823 on tree, 179.10352 best solution, best possible 49.42874 (3186.38 seconds)
Cbc0010I After 4400 nodes, 1868 on tree, 179.10352 best solution, best possible 49.42874 (3212.54 seconds)
Cbc0010I After 4500 nodes, 1916 on tree, 179.10352 best solution, best possible 49.42874 (3242.53 seconds)
Cbc0010I After 4600 nodes, 1962 on tree, 179.10352 best solution, best possible 49.42874 (3274.14 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 179.10352 (best possible 49.42874), took 491572 iterations and 4686 nodes (3450.84 seconds)
Cbc0035I Maximum depth 1708, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.063874s)
Total solve time:                         3451.45s (3451.45s in branch-and-bound)
Lower bound:                              49.4287
Upper bound:                              179.104  (gap: 257.14%)
Branch-and-bound nodes:                      4686
Stats: /tmp/jl_NRISp3/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.063874 [sep]  3451.45 [time]  3451.47 [bb]         4.942874e+01 [lower]         1.791035e+02 [upper]    4686 [nodes]
Performance of                           FBBT:	    140.758s,     6664 runs. fix: 0.000135603 shrnk:    176.962 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     7.9692s,        7 runs. fix:   0.285714 shrnk: 0.00984396 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-10.txt
