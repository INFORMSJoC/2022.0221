solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-7.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 319.40567       49 3.182288
NLP0014I             2      INFEAS 0.99999999       35 0.752063
Loaded instance "/tmp/jl_lkgQ2c/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2370.2641 (1640)
Clp0006I 277  Obj 0 Primal inf 2389.5981 (1680)
Clp0006I 554  Obj 0 Primal inf 2110.4265 (1680)
Clp0006I 831  Obj 9.0895128e-17 Primal inf 2017.1785 (1697)
Clp0006I 1108  Obj 1.0626468e-15 Primal inf 3336.0136 (1788)
Clp0006I 1385  Obj 1.9566545e-15 Primal inf 4543.4051 (1883)
Clp0006I 1662  Obj 2.9495535e-15 Primal inf 5820.4369 (1970)
Clp0006I 1939  Obj 1.4928879e-15 Primal inf 6346.3079 (2007)
Clp0006I 2216  Obj 1.8383514e-15 Primal inf 6590.8021 (1976)
Clp0006I 2493  Obj 2.1102178e-15 Primal inf 3016.9649 (1708)
Clp0006I 2770  Obj 4.7881957e-16 Primal inf 201.24498 (640)
Clp0006I 3047  Obj 4.3145186e-16 Primal inf 56.973898 (443)
Clp0006I 3324  Obj 18.287192 Primal inf 57.049315 (240)
Clp0006I 3601  Obj 20.864956 Primal inf 126.6053 (217)
Clp0006I 3870  Obj 27.854865
Clp0000I Optimal - objective value 27.854865
Clp0032I Optimal objective 27.85486464 - 3870 iterations time 0.262, Presolve 0.03
Clp0000I Optimal - objective value 27.854865
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 27.854865
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 948 added rows had average density of 2
Cbc0013I At root node, 948 cuts changed objective from 27.854865 to 91.195668 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 12801 row cuts average 2.0 elements, 440 column cuts (1209 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (81.35 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.8478481395e+02 (352.148 seconds)
Cbc0012I Integer solution of 984.78481 found by Couenne Rounding NLP after 9689 iterations and 2 nodes (327.21 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 9.0084052326e+02 (454.609 seconds)
Cbc0012I Integer solution of 900.84052 found by Couenne Rounding NLP after 10129 iterations and 3 nodes (429.67 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.4873781929e+02 (1052.23 seconds)
Cbc0010I After 100 nodes, 50 on tree, 900.84052 best solution, best possible 95.228251 (1142.01 seconds)
Cbc0010I After 200 nodes, 100 on tree, 900.84052 best solution, best possible 95.228251 (1179.57 seconds)
Cbc0010I After 300 nodes, 150 on tree, 900.84052 best solution, best possible 95.228251 (1196.67 seconds)
Cbc0010I After 400 nodes, 200 on tree, 900.84052 best solution, best possible 95.228251 (1213.81 seconds)
Cbc0010I After 500 nodes, 250 on tree, 900.84052 best solution, best possible 95.228251 (1233.01 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.3841169897e+02 (1273.16 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 600 nodes, 297 on tree, 900.84052 best solution, best possible 95.480637 (1756.52 seconds)
Cbc0010I After 700 nodes, 347 on tree, 900.84052 best solution, best possible 95.480637 (1802.13 seconds)
Cbc0010I After 800 nodes, 397 on tree, 900.84052 best solution, best possible 95.480637 (1827.60 seconds)
Cbc0010I After 900 nodes, 447 on tree, 900.84052 best solution, best possible 95.480637 (1845.39 seconds)
Cbc0010I After 1000 nodes, 497 on tree, 900.84052 best solution, best possible 95.480637 (1864.96 seconds)
Cbc0010I After 1100 nodes, 547 on tree, 900.84052 best solution, best possible 95.480637 (1884.36 seconds)
Cbc0010I After 1200 nodes, 597 on tree, 900.84052 best solution, best possible 95.480637 (1903.77 seconds)
Cbc0010I After 1300 nodes, 647 on tree, 900.84052 best solution, best possible 95.480637 (1922.98 seconds)
Cbc0010I After 1400 nodes, 697 on tree, 900.84052 best solution, best possible 95.480637 (1942.25 seconds)
Cbc0010I After 1500 nodes, 747 on tree, 900.84052 best solution, best possible 95.480637 (1960.95 seconds)
Cbc0010I After 1600 nodes, 797 on tree, 900.84052 best solution, best possible 95.480637 (1978.53 seconds)
Cbc0010I After 1700 nodes, 847 on tree, 900.84052 best solution, best possible 95.480637 (1995.41 seconds)
Cbc0010I After 1800 nodes, 897 on tree, 900.84052 best solution, best possible 95.480637 (2012.24 seconds)
Cbc0010I After 1900 nodes, 947 on tree, 900.84052 best solution, best possible 95.480637 (2027.07 seconds)
Cbc0010I After 2000 nodes, 997 on tree, 900.84052 best solution, best possible 95.480637 (2041.38 seconds)
Cbc0010I After 2100 nodes, 1046 on tree, 900.84052 best solution, best possible 95.480637 (2055.23 seconds)
Cbc0010I After 2200 nodes, 1095 on tree, 900.84052 best solution, best possible 95.480637 (2069.15 seconds)
Cbc0010I After 2300 nodes, 1144 on tree, 900.84052 best solution, best possible 95.480637 (2083.09 seconds)
Cbc0010I After 2400 nodes, 1193 on tree, 900.84052 best solution, best possible 95.480637 (2099.93 seconds)
Cbc0010I After 2500 nodes, 1242 on tree, 900.84052 best solution, best possible 95.480637 (2114.11 seconds)
Cbc0010I After 2600 nodes, 1292 on tree, 900.84052 best solution, best possible 95.480637 (2128.37 seconds)
Cbc0010I After 2700 nodes, 1342 on tree, 900.84052 best solution, best possible 95.480637 (2142.58 seconds)
Cbc0010I After 2800 nodes, 1392 on tree, 900.84052 best solution, best possible 95.480637 (2156.66 seconds)
Cbc0010I After 2900 nodes, 1442 on tree, 900.84052 best solution, best possible 95.480637 (2170.73 seconds)
Cbc0010I After 3000 nodes, 1491 on tree, 900.84052 best solution, best possible 95.480637 (2184.73 seconds)
Cbc0010I After 3100 nodes, 1541 on tree, 900.84052 best solution, best possible 95.480637 (2198.90 seconds)
Cbc0010I After 3200 nodes, 1590 on tree, 900.84052 best solution, best possible 95.480637 (2213.13 seconds)
Cbc0010I After 3300 nodes, 1639 on tree, 900.84052 best solution, best possible 95.480637 (2227.52 seconds)
Cbc0010I After 3400 nodes, 1687 on tree, 900.84052 best solution, best possible 95.480637 (2241.89 seconds)
Cbc0010I After 3500 nodes, 1737 on tree, 900.84052 best solution, best possible 95.480637 (2256.17 seconds)
Cbc0010I After 3600 nodes, 1787 on tree, 900.84052 best solution, best possible 95.480637 (2270.55 seconds)
Cbc0010I After 3700 nodes, 1837 on tree, 900.84052 best solution, best possible 95.480637 (2285.38 seconds)
Cbc0010I After 3800 nodes, 1887 on tree, 900.84052 best solution, best possible 95.480637 (2300.78 seconds)
Cbc0010I After 3900 nodes, 1937 on tree, 900.84052 best solution, best possible 95.480637 (2315.31 seconds)
Cbc0010I After 4000 nodes, 1987 on tree, 900.84052 best solution, best possible 95.480637 (2330.23 seconds)
Cbc0010I After 4100 nodes, 2037 on tree, 900.84052 best solution, best possible 95.480637 (2344.17 seconds)
Cbc0010I After 4200 nodes, 2087 on tree, 900.84052 best solution, best possible 95.480637 (2357.35 seconds)
Cbc0010I After 4300 nodes, 2137 on tree, 900.84052 best solution, best possible 95.480637 (2370.28 seconds)
Cbc0010I After 4400 nodes, 2187 on tree, 900.84052 best solution, best possible 95.480637 (2383.13 seconds)
Cbc0010I After 4500 nodes, 2237 on tree, 900.84052 best solution, best possible 95.480637 (2396.03 seconds)
Cbc0010I After 4600 nodes, 2287 on tree, 900.84052 best solution, best possible 95.480637 (2408.97 seconds)
Couenne: new cutoff value 7.4290614467e+02 (2444.59 seconds)
Cbc0010I After 4700 nodes, 2335 on tree, 900.84052 best solution, best possible 95.555913 (2445.30 seconds)
Cbc0010I After 4800 nodes, 2385 on tree, 900.84052 best solution, best possible 95.555913 (2484.86 seconds)
Cbc0010I After 4900 nodes, 2435 on tree, 900.84052 best solution, best possible 95.555913 (2509.88 seconds)
Cbc0010I After 5000 nodes, 2485 on tree, 900.84052 best solution, best possible 95.555913 (2528.77 seconds)
Cbc0010I After 5100 nodes, 2535 on tree, 900.84052 best solution, best possible 95.555913 (2546.33 seconds)
Cbc0010I After 5200 nodes, 2585 on tree, 900.84052 best solution, best possible 95.555913 (2564.49 seconds)
Cbc0010I After 5300 nodes, 2635 on tree, 900.84052 best solution, best possible 95.555913 (2582.55 seconds)
Cbc0010I After 5400 nodes, 2685 on tree, 900.84052 best solution, best possible 95.555913 (2597.69 seconds)
Cbc0010I After 5500 nodes, 2735 on tree, 900.84052 best solution, best possible 95.555913 (2612.61 seconds)
Cbc0010I After 5600 nodes, 2785 on tree, 900.84052 best solution, best possible 95.555913 (2626.57 seconds)
Cbc0010I After 5700 nodes, 2835 on tree, 900.84052 best solution, best possible 95.555913 (2639.87 seconds)
Cbc0010I After 5800 nodes, 2885 on tree, 900.84052 best solution, best possible 95.555913 (2653.01 seconds)
Cbc0010I After 5900 nodes, 2935 on tree, 900.84052 best solution, best possible 95.555913 (2666.24 seconds)
Cbc0010I After 6000 nodes, 2985 on tree, 900.84052 best solution, best possible 95.555913 (2678.97 seconds)
Cbc0010I After 6100 nodes, 3035 on tree, 900.84052 best solution, best possible 95.555913 (2691.62 seconds)
Cbc0010I After 6200 nodes, 3084 on tree, 900.84052 best solution, best possible 95.555913 (2704.38 seconds)
Cbc0010I After 6300 nodes, 3134 on tree, 900.84052 best solution, best possible 95.555913 (2716.98 seconds)
Cbc0010I After 6400 nodes, 3184 on tree, 900.84052 best solution, best possible 95.555913 (2729.85 seconds)
Cbc0010I After 6500 nodes, 3234 on tree, 900.84052 best solution, best possible 95.555913 (2743.20 seconds)
Cbc0010I After 6600 nodes, 3284 on tree, 900.84052 best solution, best possible 95.555913 (2756.04 seconds)
Cbc0010I After 6700 nodes, 3334 on tree, 900.84052 best solution, best possible 95.555913 (2768.39 seconds)
Cbc0010I After 6800 nodes, 3384 on tree, 900.84052 best solution, best possible 95.555913 (2779.84 seconds)
Couenne: new cutoff value 7.2410497957e+02 (2808.81 seconds)
Cbc0010I After 6900 nodes, 3432 on tree, 900.84052 best solution, best possible 95.558439 (2807.07 seconds)
Cbc0010I After 7000 nodes, 3482 on tree, 900.84052 best solution, best possible 95.558439 (2849.82 seconds)
Cbc0010I After 7100 nodes, 3532 on tree, 900.84052 best solution, best possible 95.558439 (2867.16 seconds)
Cbc0010I After 7200 nodes, 3582 on tree, 900.84052 best solution, best possible 95.558439 (2884.58 seconds)
Cbc0010I After 7300 nodes, 3632 on tree, 900.84052 best solution, best possible 95.558439 (2902.47 seconds)
Cbc0010I After 7400 nodes, 3682 on tree, 900.84052 best solution, best possible 95.558439 (2920.25 seconds)
Cbc0010I After 7500 nodes, 3732 on tree, 900.84052 best solution, best possible 95.558439 (2938.12 seconds)
Cbc0010I After 7600 nodes, 3782 on tree, 900.84052 best solution, best possible 95.558439 (2956.12 seconds)
Cbc0010I After 7700 nodes, 3832 on tree, 900.84052 best solution, best possible 95.558439 (2973.32 seconds)
Cbc0010I After 7800 nodes, 3882 on tree, 900.84052 best solution, best possible 95.558439 (2989.88 seconds)
Cbc0010I After 7900 nodes, 3932 on tree, 900.84052 best solution, best possible 95.558439 (3004.53 seconds)
Cbc0010I After 8000 nodes, 3982 on tree, 900.84052 best solution, best possible 95.558439 (3019.24 seconds)
Cbc0010I After 8100 nodes, 4032 on tree, 900.84052 best solution, best possible 95.558439 (3033.19 seconds)
Cbc0010I After 8200 nodes, 4081 on tree, 900.84052 best solution, best possible 95.558439 (3046.46 seconds)
Cbc0010I After 8300 nodes, 4130 on tree, 900.84052 best solution, best possible 95.558439 (3059.75 seconds)
Cbc0010I After 8400 nodes, 4180 on tree, 900.84052 best solution, best possible 95.558439 (3072.84 seconds)
Cbc0010I After 8500 nodes, 4230 on tree, 900.84052 best solution, best possible 95.558439 (3087.90 seconds)
Cbc0010I After 8600 nodes, 4280 on tree, 900.84052 best solution, best possible 95.558439 (3101.28 seconds)
Cbc0010I After 8700 nodes, 4330 on tree, 900.84052 best solution, best possible 95.558439 (3114.80 seconds)
Cbc0010I After 8800 nodes, 4378 on tree, 900.84052 best solution, best possible 95.558439 (3128.21 seconds)
Cbc0010I After 8900 nodes, 4428 on tree, 900.84052 best solution, best possible 95.558439 (3141.68 seconds)
Cbc0010I After 9000 nodes, 4478 on tree, 900.84052 best solution, best possible 95.558439 (3155.12 seconds)
Cbc0010I After 9100 nodes, 4528 on tree, 900.84052 best solution, best possible 95.558439 (3168.45 seconds)
Cbc0010I After 9200 nodes, 4577 on tree, 900.84052 best solution, best possible 95.558439 (3181.78 seconds)
Cbc0010I After 9300 nodes, 4627 on tree, 900.84052 best solution, best possible 95.558439 (3195.06 seconds)
Cbc0010I After 9400 nodes, 4677 on tree, 900.84052 best solution, best possible 95.558439 (3208.51 seconds)
Cbc0010I After 9500 nodes, 4727 on tree, 900.84052 best solution, best possible 95.558439 (3221.98 seconds)
Cbc0010I After 9600 nodes, 4777 on tree, 900.84052 best solution, best possible 95.558439 (3235.56 seconds)
Cbc0010I After 9700 nodes, 4827 on tree, 900.84052 best solution, best possible 95.558439 (3249.15 seconds)
Cbc0010I After 9800 nodes, 4877 on tree, 900.84052 best solution, best possible 95.558439 (3263.01 seconds)
Cbc0010I After 9900 nodes, 4927 on tree, 900.84052 best solution, best possible 95.558439 (3276.92 seconds)
Cbc0010I After 10000 nodes, 4977 on tree, 900.84052 best solution, best possible 95.558439 (3291.31 seconds)
Cbc0010I After 10100 nodes, 5027 on tree, 900.84052 best solution, best possible 95.558439 (3306.09 seconds)
Cbc0010I After 10200 nodes, 5077 on tree, 900.84052 best solution, best possible 95.558439 (3319.98 seconds)
Cbc0010I After 10300 nodes, 5127 on tree, 900.84052 best solution, best possible 95.558439 (3334.54 seconds)
Cbc0010I After 10400 nodes, 5177 on tree, 900.84052 best solution, best possible 95.558439 (3348.51 seconds)
Cbc0010I After 10500 nodes, 5227 on tree, 900.84052 best solution, best possible 95.558439 (3361.84 seconds)
Cbc0010I After 10600 nodes, 5277 on tree, 900.84052 best solution, best possible 95.558439 (3374.57 seconds)
Cbc0010I After 10700 nodes, 5327 on tree, 900.84052 best solution, best possible 95.558439 (3387.14 seconds)
Cbc0010I After 10800 nodes, 5377 on tree, 900.84052 best solution, best possible 95.558439 (3399.74 seconds)
Cbc0010I After 10900 nodes, 5427 on tree, 900.84052 best solution, best possible 95.558439 (3412.39 seconds)
Couenne: new cutoff value 6.8558334874e+02 (3441.97 seconds)
Cbc0010I After 11000 nodes, 5475 on tree, 900.84052 best solution, best possible 95.561135 (3440.89 seconds)
Cbc0010I After 11100 nodes, 5525 on tree, 900.84052 best solution, best possible 95.561135 (3474.89 seconds)
Cbc0010I After 11200 nodes, 5575 on tree, 900.84052 best solution, best possible 95.561135 (3493.19 seconds)
Cbc0010I After 11300 nodes, 5620 on tree, 900.84052 best solution, best possible 95.561135 (3511.23 seconds)
Cbc0010I After 11400 nodes, 5669 on tree, 900.84052 best solution, best possible 95.609339 (3564.04 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 900.84052 (best possible 95.609339), took 1097723 iterations and 11426 nodes (3643.14 seconds)
Cbc0035I Maximum depth 2056, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.058371s)
Total solve time:                         3643.53s (3643.53s in branch-and-bound)
Lower bound:                              95.6093
Upper bound:                              685.583  (gap: 610.68%)
Branch-and-bound nodes:                     11426
Stats: /tmp/jl_lkgQ2c/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.058371 [sep]  3643.53 [time]  3643.54 [bb]         9.560934e+01 [lower]         6.855833e+02 [upper]   11426 [nodes]
Performance of                           FBBT:	    283.237s,    15270 runs. fix: 0.000426164 shrnk:   0.158721 ubd:          0 2ubd:          0 infeas:          7
Performance of                           OBBT:	    16.3574s,       11 runs. fix:   0.117188 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-7.txt
