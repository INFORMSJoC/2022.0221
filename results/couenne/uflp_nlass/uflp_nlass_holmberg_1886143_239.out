solving instance uflp nlass holmberg 24 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1673.8713       31 5.85427
NLP0014I             2      INFEAS 0.99999999       32 0.880456
Loaded instance "/tmp/jl_zWMMk3/model.nl"
Constraints:         3050
Variables:           3020 (1020 integer)
Auxiliaries:         1051 (0 integer)

Coin0506I Presolve 7000 (-1051) rows, 2970 (-1101) columns and 14900 (-3171) elements
Clp0006I 0  Obj 0 Primal inf 49.99995 (50)
Clp0006I 215  Obj 1.65e-16 Primal inf 206.24975 (250)
Clp0006I 430  Obj 2.15e-16 Primal inf 206.24975 (250)
Clp0006I 645  Obj 2.15e-16 Primal inf 206.24975 (250)
Clp0006I 860  Obj 2.15e-16 Primal inf 206.24975 (250)
Clp0006I 1075  Obj 2.15e-16 Primal inf 206.24975 (250)
Clp0006I 1290  Obj 3.6e-16 Primal inf 206.24975 (250)
Clp0006I 1505  Obj 2.88e-16 Primal inf 206.24975 (250)
Clp0006I 1720  Obj 3.14e-16 Primal inf 206.24975 (250)
Clp0006I 1935  Obj 3.13e-16 Primal inf 206.24975 (250)
Clp0006I 1958  Obj 700
Clp0000I Optimal - objective value 700
Clp0032I Optimal objective 700 - 1958 iterations time 0.092, Presolve 0.02
Clp0000I Optimal - objective value 700
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 700
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1100 added rows had average density of 2
Cbc0013I At root node, 1100 cuts changed objective from 700 to 1619.822 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 17797 row cuts average 2.0 elements, 1050 column cuts (1888 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (17.88 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.7816299057e+03 (77.1009 seconds)
Cbc0012I Integer solution of 9781.6299 found by Couenne Rounding NLP after 18556 iterations and 2 nodes (64.76 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.3439526134e+03 (126.356 seconds)
Cbc0012I Integer solution of 9343.9526 found by Couenne Rounding NLP after 23403 iterations and 4 nodes (114.01 seconds)
Cbc0010I After 100 nodes, 50 on tree, 9343.9526 best solution, best possible 2269.4873 (197.99 seconds)
Couenne: new cutoff value 7.7518857750e+03 (214.685 seconds)
Cbc0004I Integer solution of 7751.8858 found after 152104 iterations and 147 nodes (202.36 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 200 nodes, 79 on tree, 7751.8858 best solution, best possible 2301.2388 (333.42 seconds)
Couenne: new cutoff value 6.8365038586e+03 (349.604 seconds)
Cbc0004I Integer solution of 6836.5039 found after 229014 iterations and 240 nodes (337.27 seconds)
Cbc0010I After 300 nodes, 112 on tree, 6836.5039 best solution, best possible 2305.3708 (374.71 seconds)
Cbc0010I After 400 nodes, 156 on tree, 6836.5039 best solution, best possible 2315.2315 (448.57 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 500 nodes, 204 on tree, 6836.5039 best solution, best possible 2317.997 (489.29 seconds)
Cbc0010I After 600 nodes, 252 on tree, 6836.5039 best solution, best possible 2323.2335 (518.27 seconds)
Cbc0010I After 700 nodes, 300 on tree, 6836.5039 best solution, best possible 2323.7486 (549.42 seconds)
Cbc0010I After 800 nodes, 346 on tree, 6836.5039 best solution, best possible 2345.5382 (575.19 seconds)
Cbc0010I After 900 nodes, 388 on tree, 6836.5039 best solution, best possible 2371.2976 (596.84 seconds)
Cbc0010I After 1000 nodes, 435 on tree, 6836.5039 best solution, best possible 2389.8567 (627.49 seconds)
Cbc0010I After 1100 nodes, 480 on tree, 6836.5039 best solution, best possible 2426.6311 (655.42 seconds)
Cbc0010I After 1200 nodes, 526 on tree, 6836.5039 best solution, best possible 2481.8914 (682.99 seconds)
Cbc0010I After 1300 nodes, 571 on tree, 6836.5039 best solution, best possible 2567.5629 (710.19 seconds)
Cbc0010I After 1400 nodes, 619 on tree, 6836.5039 best solution, best possible 2587.9288 (737.62 seconds)
Cbc0010I After 1500 nodes, 664 on tree, 6836.5039 best solution, best possible 2595.4648 (760.86 seconds)
Cbc0010I After 1600 nodes, 709 on tree, 6836.5039 best solution, best possible 2644.3889 (783.40 seconds)
Cbc0010I After 1700 nodes, 752 on tree, 6836.5039 best solution, best possible 2914.8751 (806.84 seconds)
Cbc0010I After 1800 nodes, 800 on tree, 6836.5039 best solution, best possible 2924.6124 (876.36 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1900 nodes, 840 on tree, 6836.5039 best solution, best possible 2927.9962 (905.67 seconds)
Couenne: new cutoff value 6.4595438388e+03 (930.051 seconds)
Cbc0004I Integer solution of 6459.5438 found after 1827956 iterations and 1961 nodes (917.72 seconds)
Cbc0010I After 2000 nodes, 840 on tree, 6459.5438 best solution, best possible 2934.5821 (934.09 seconds)
Cbc0010I After 2100 nodes, 886 on tree, 6459.5438 best solution, best possible 2939.3263 (959.42 seconds)
Cbc0010I After 2200 nodes, 932 on tree, 6459.5438 best solution, best possible 2940.8099 (989.68 seconds)
Cbc0010I After 2300 nodes, 974 on tree, 6459.5438 best solution, best possible 2946.5795 (1017.69 seconds)
Cbc0010I After 2400 nodes, 1020 on tree, 6459.5438 best solution, best possible 2948.7479 (1042.89 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2500 nodes, 1064 on tree, 6459.5438 best solution, best possible 2948.8467 (1067.32 seconds)
Cbc0010I After 2600 nodes, 1109 on tree, 6459.5438 best solution, best possible 2949.5449 (1097.81 seconds)
Cbc0010I After 2700 nodes, 1149 on tree, 6459.5438 best solution, best possible 2949.8157 (1119.41 seconds)
Cbc0010I After 2800 nodes, 1194 on tree, 6459.5438 best solution, best possible 2952.7127 (1146.83 seconds)
Cbc0010I After 2900 nodes, 1241 on tree, 6459.5438 best solution, best possible 2952.886 (1170.59 seconds)
Cbc0010I After 3000 nodes, 1289 on tree, 6459.5438 best solution, best possible 2952.901 (1195.90 seconds)
Cbc0010I After 3100 nodes, 1337 on tree, 6459.5438 best solution, best possible 2954.3396 (1218.48 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3200 nodes, 1381 on tree, 6459.5438 best solution, best possible 2955.1505 (1262.03 seconds)
Cbc0010I After 3300 nodes, 1428 on tree, 6459.5438 best solution, best possible 2955.5093 (1287.48 seconds)
Cbc0010I After 3400 nodes, 1473 on tree, 6459.5438 best solution, best possible 2959.344 (1317.48 seconds)
Cbc0010I After 3500 nodes, 1512 on tree, 6459.5438 best solution, best possible 2959.6885 (1341.03 seconds)
Cbc0010I After 3600 nodes, 1560 on tree, 6459.5438 best solution, best possible 2960.1876 (1366.24 seconds)
Cbc0010I After 3700 nodes, 1604 on tree, 6459.5438 best solution, best possible 2961.4515 (1388.49 seconds)
Cbc0010I After 3800 nodes, 1651 on tree, 6459.5438 best solution, best possible 2965.8495 (1413.59 seconds)
Cbc0010I After 3900 nodes, 1698 on tree, 6459.5438 best solution, best possible 2966.1721 (1443.19 seconds)
Cbc0010I After 4000 nodes, 1746 on tree, 6459.5438 best solution, best possible 2970.9047 (1471.39 seconds)
Cbc0010I After 4100 nodes, 1791 on tree, 6459.5438 best solution, best possible 2971.196 (1494.17 seconds)
Cbc0010I After 4200 nodes, 1838 on tree, 6459.5438 best solution, best possible 2973.1019 (1518.20 seconds)
Cbc0010I After 4300 nodes, 1885 on tree, 6459.5438 best solution, best possible 2974.0287 (1547.87 seconds)
Cbc0010I After 4400 nodes, 1931 on tree, 6459.5438 best solution, best possible 2977.7592 (1572.96 seconds)
Cbc0010I After 4500 nodes, 1976 on tree, 6459.5438 best solution, best possible 2984.1378 (1612.37 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 4600 nodes, 2023 on tree, 6459.5438 best solution, best possible 2990.586 (1658.32 seconds)
Cbc0010I After 4700 nodes, 2070 on tree, 6459.5438 best solution, best possible 2995.183 (1684.74 seconds)
Cbc0010I After 4800 nodes, 2115 on tree, 6459.5438 best solution, best possible 3000.8486 (1708.81 seconds)
Cbc0010I After 4900 nodes, 2162 on tree, 6459.5438 best solution, best possible 3007.4646 (1733.08 seconds)
Cbc0010I After 5000 nodes, 2207 on tree, 6459.5438 best solution, best possible 3009.4546 (1759.89 seconds)
Cbc0010I After 5100 nodes, 2253 on tree, 6459.5438 best solution, best possible 3015.4801 (1783.13 seconds)
Cbc0010I After 5200 nodes, 2297 on tree, 6459.5438 best solution, best possible 3018.164 (1808.37 seconds)
Cbc0010I After 5300 nodes, 2342 on tree, 6459.5438 best solution, best possible 3021.3177 (1832.06 seconds)
Cbc0010I After 5400 nodes, 2386 on tree, 6459.5438 best solution, best possible 3022.8179 (1856.97 seconds)
Cbc0010I After 5500 nodes, 2430 on tree, 6459.5438 best solution, best possible 3026.0953 (1878.55 seconds)
Cbc0010I After 5600 nodes, 2475 on tree, 6459.5438 best solution, best possible 3028.2457 (1906.78 seconds)
Cbc0010I After 5700 nodes, 2521 on tree, 6459.5438 best solution, best possible 3031.4816 (1930.46 seconds)
Cbc0010I After 5800 nodes, 2568 on tree, 6459.5438 best solution, best possible 3035.3423 (1972.88 seconds)
Cbc0010I After 5900 nodes, 2614 on tree, 6459.5438 best solution, best possible 3038.5453 (1997.12 seconds)
Cbc0010I After 6000 nodes, 2659 on tree, 6459.5438 best solution, best possible 3056.9085 (2020.39 seconds)
Cbc0010I After 6100 nodes, 2707 on tree, 6459.5438 best solution, best possible 3061.2853 (2048.83 seconds)
Cbc0010I After 6200 nodes, 2751 on tree, 6459.5438 best solution, best possible 3061.6628 (2067.04 seconds)
Cbc0010I After 6300 nodes, 2794 on tree, 6459.5438 best solution, best possible 3063.983 (2092.20 seconds)
Cbc0010I After 6400 nodes, 2838 on tree, 6459.5438 best solution, best possible 3064.2787 (2118.66 seconds)
Cbc0010I After 6500 nodes, 2882 on tree, 6459.5438 best solution, best possible 3066.4537 (2139.16 seconds)
Cbc0010I After 6600 nodes, 2925 on tree, 6459.5438 best solution, best possible 3069.455 (2163.58 seconds)
Cbc0010I After 6700 nodes, 2971 on tree, 6459.5438 best solution, best possible 3076.9974 (2186.48 seconds)
Cbc0010I After 6800 nodes, 3018 on tree, 6459.5438 best solution, best possible 3077.4893 (2213.83 seconds)
Cbc0010I After 6900 nodes, 3064 on tree, 6459.5438 best solution, best possible 3082.234 (2237.75 seconds)
Cbc0010I After 7000 nodes, 3112 on tree, 6459.5438 best solution, best possible 3084.7986 (2264.73 seconds)
Cbc0010I After 7100 nodes, 3153 on tree, 6459.5438 best solution, best possible 3089.2458 (2289.02 seconds)
Cbc0010I After 7200 nodes, 3199 on tree, 6459.5438 best solution, best possible 3091.5907 (2311.72 seconds)
Cbc0010I After 7300 nodes, 3245 on tree, 6459.5438 best solution, best possible 3093.0189 (2351.58 seconds)
Cbc0010I After 7400 nodes, 3286 on tree, 6459.5438 best solution, best possible 3096.7087 (2374.76 seconds)
Cbc0010I After 7500 nodes, 3329 on tree, 6459.5438 best solution, best possible 3102.8733 (2411.67 seconds)
Cbc0010I After 7600 nodes, 3376 on tree, 6459.5438 best solution, best possible 3105.9213 (2435.66 seconds)
Cbc0010I After 7700 nodes, 3421 on tree, 6459.5438 best solution, best possible 3114.2548 (2458.06 seconds)
Cbc0010I After 7800 nodes, 3463 on tree, 6459.5438 best solution, best possible 3115.6027 (2477.81 seconds)
Cbc0010I After 7900 nodes, 3508 on tree, 6459.5438 best solution, best possible 3127.2735 (2505.19 seconds)
Cbc0010I After 8000 nodes, 3554 on tree, 6459.5438 best solution, best possible 3128.3771 (2528.30 seconds)
Cbc0010I After 8100 nodes, 3598 on tree, 6459.5438 best solution, best possible 3130.937 (2553.20 seconds)
Cbc0010I After 8200 nodes, 3641 on tree, 6459.5438 best solution, best possible 3134.1863 (2576.52 seconds)
Cbc0010I After 8300 nodes, 3683 on tree, 6459.5438 best solution, best possible 3135.946 (2596.18 seconds)
Cbc0010I After 8400 nodes, 3728 on tree, 6459.5438 best solution, best possible 3140.6244 (2621.85 seconds)
Cbc0010I After 8500 nodes, 3775 on tree, 6459.5438 best solution, best possible 3143.025 (2649.55 seconds)
Cbc0010I After 8600 nodes, 3820 on tree, 6459.5438 best solution, best possible 3146.3141 (2671.24 seconds)
Cbc0010I After 8700 nodes, 3865 on tree, 6459.5438 best solution, best possible 3146.7723 (2694.38 seconds)
Cbc0010I After 8800 nodes, 3907 on tree, 6459.5438 best solution, best possible 3148.9459 (2718.67 seconds)
Cbc0010I After 8900 nodes, 3952 on tree, 6459.5438 best solution, best possible 3149.8699 (2746.62 seconds)
Cbc0010I After 9000 nodes, 3999 on tree, 6459.5438 best solution, best possible 3153.1874 (2771.39 seconds)
Cbc0010I After 9100 nodes, 4042 on tree, 6459.5438 best solution, best possible 3159.0294 (2793.28 seconds)
Cbc0010I After 9200 nodes, 4086 on tree, 6459.5438 best solution, best possible 3170.3935 (2814.14 seconds)
Cbc0010I After 9300 nodes, 4126 on tree, 6459.5438 best solution, best possible 3182.7897 (2836.89 seconds)
Cbc0010I After 9400 nodes, 4171 on tree, 6459.5438 best solution, best possible 3187.6143 (2859.53 seconds)
Cbc0010I After 9500 nodes, 4216 on tree, 6459.5438 best solution, best possible 3192.3766 (2878.61 seconds)
Cbc0010I After 9600 nodes, 4262 on tree, 6459.5438 best solution, best possible 3199.6451 (2905.03 seconds)
Cbc0010I After 9700 nodes, 4308 on tree, 6459.5438 best solution, best possible 3202.6837 (2925.32 seconds)
Cbc0010I After 9800 nodes, 4350 on tree, 6459.5438 best solution, best possible 3206.7833 (2946.77 seconds)
Cbc0010I After 9900 nodes, 4392 on tree, 6459.5438 best solution, best possible 3211.7592 (2969.11 seconds)
Cbc0010I After 10000 nodes, 4436 on tree, 6459.5438 best solution, best possible 3212.3999 (2991.69 seconds)
Cbc0010I After 10100 nodes, 4482 on tree, 6459.5438 best solution, best possible 3216.8513 (3011.78 seconds)
Cbc0010I After 10200 nodes, 4529 on tree, 6459.5438 best solution, best possible 3220.6033 (3030.58 seconds)
Cbc0010I After 10300 nodes, 4571 on tree, 6459.5438 best solution, best possible 3223.558 (3052.70 seconds)
Cbc0010I After 10400 nodes, 4612 on tree, 6459.5438 best solution, best possible 3225.3029 (3074.06 seconds)
Cbc0010I After 10500 nodes, 4645 on tree, 6459.5438 best solution, best possible 3225.5678 (3090.38 seconds)
Cbc0010I After 10600 nodes, 4689 on tree, 6459.5438 best solution, best possible 3237.9413 (3110.77 seconds)
Cbc0010I After 10700 nodes, 4730 on tree, 6459.5438 best solution, best possible 3241.3562 (3130.56 seconds)
Cbc0010I After 10800 nodes, 4772 on tree, 6459.5438 best solution, best possible 3247.634 (3151.78 seconds)
Cbc0010I After 10900 nodes, 4813 on tree, 6459.5438 best solution, best possible 3251.315 (3172.79 seconds)
Cbc0010I After 11000 nodes, 4856 on tree, 6459.5438 best solution, best possible 3252.2966 (3192.23 seconds)
Cbc0010I After 11100 nodes, 4898 on tree, 6459.5438 best solution, best possible 3256.5637 (3213.67 seconds)
Cbc0010I After 11200 nodes, 4942 on tree, 6459.5438 best solution, best possible 3258.8473 (3234.16 seconds)
Cbc0010I After 11300 nodes, 4987 on tree, 6459.5438 best solution, best possible 3260.434 (3254.96 seconds)
Cbc0010I After 11400 nodes, 5031 on tree, 6459.5438 best solution, best possible 3263.5529 (3276.65 seconds)
Cbc0010I After 11500 nodes, 5074 on tree, 6459.5438 best solution, best possible 3271.8586 (3296.62 seconds)
Cbc0010I After 11600 nodes, 5117 on tree, 6459.5438 best solution, best possible 3275.7095 (3314.64 seconds)
Cbc0010I After 11700 nodes, 5162 on tree, 6459.5438 best solution, best possible 3276.7975 (3335.11 seconds)
Cbc0010I After 11800 nodes, 5200 on tree, 6459.5438 best solution, best possible 3280.2703 (3354.12 seconds)
Cbc0010I After 11900 nodes, 5241 on tree, 6459.5438 best solution, best possible 3287.4009 (3372.35 seconds)
Cbc0010I After 12000 nodes, 5286 on tree, 6459.5438 best solution, best possible 3289.3702 (3393.09 seconds)
Cbc0010I After 12100 nodes, 5332 on tree, 6459.5438 best solution, best possible 3291.7603 (3414.64 seconds)
Cbc0010I After 12200 nodes, 5376 on tree, 6459.5438 best solution, best possible 3299.3956 (3436.21 seconds)
Cbc0010I After 12300 nodes, 5421 on tree, 6459.5438 best solution, best possible 3303.9413 (3456.23 seconds)
Cbc0010I After 12400 nodes, 5465 on tree, 6459.5438 best solution, best possible 3305.0549 (3475.20 seconds)
Cbc0010I After 12500 nodes, 5501 on tree, 6459.5438 best solution, best possible 3313.3374 (3494.34 seconds)
Cbc0010I After 12600 nodes, 5546 on tree, 6459.5438 best solution, best possible 3316.3959 (3515.76 seconds)
Cbc0010I After 12700 nodes, 5585 on tree, 6459.5438 best solution, best possible 3319.168 (3534.02 seconds)
Cbc0010I After 12800 nodes, 5632 on tree, 6459.5438 best solution, best possible 3319.343 (3551.14 seconds)
Cbc0010I After 12900 nodes, 5675 on tree, 6459.5438 best solution, best possible 3321.2316 (3571.93 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 6459.5438 (best possible 3321.2316), took 11317990 iterations and 12988 nodes (3592.30 seconds)
Cbc0035I Maximum depth 73, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       8051
Linearization cuts added in total:           8051  (separation time: 0.019455s)
Total solve time:                         3592.45s (3592.45s in branch-and-bound)
Lower bound:                              3321.23
Upper bound:                              6459.54  (gap: 94.46%)
Branch-and-bound nodes:                     12988
Stats: /tmp/jl_zWMMk3/model.nl 3020 [var] 1020 [int] 3050 [con] 1051 [aux]   8051 [root]     8051 [tot] 0.019455 [sep]  3592.45 [time]  3592.46 [bb]         3.321232e+03 [lower]         6.459544e+03 [upper]   12988 [nodes]
Performance of                           FBBT:	    69.1719s,    24984 runs. fix:          0 shrnk: 7.71465e-05 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    17.4861s,       13 runs. fix:   0.372402 shrnk:    33.6155 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p24
