solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-3.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 28.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 95.564357       43 145.04606
NLP0014I             2         OPT 1180.2644       46 3.355342
Couenne: new cutoff value 1.1802644603e+03 (216.856 seconds)
Loaded instance "/tmp/jl_ctSX7K/model.nl"
Constraints:         9680
Variables:           9640 (3240 integer)
Auxiliaries:         3281 (0 integer)

Coin0506I Presolve 25591 (-90) rows, 12751 (-170) columns and 57461 (-260) elements
Clp0006I 0  Obj 0 Primal inf 79.99992 (80) Dual inf 1.6849827e+13 (3200)
Clp0006I 352  Obj 35.072292 Primal inf 76.01824 (82) Dual inf 1.7172042e+13 (3197)
Clp0006I 704  Obj 92.839328 Primal inf 63.013545 (78) Dual inf 24902130 (2934)
Clp0006I 1056  Obj 140.71903 Primal inf 52.080635 (78) Dual inf 23009930 (2669)
Clp0006I 1408  Obj 149.41789 Primal inf 47.822508 (85) Dual inf 23962244 (2667)
Clp0006I 1760  Obj 158.48426 Primal inf 43.426135 (90) Dual inf 24909445 (2667)
Clp0006I 2112  Obj 180.91821 Primal inf 35.425611 (90) Dual inf 23056013 (2520)
Clp0006I 2464  Obj 240.43515 Primal inf 25.48939 (77) Dual inf 21146716 (2424)
Clp0006I 2816  Obj 342.50129 Primal inf 10.348595 (59) Dual inf 10399571 (1914)
Clp0006I 3168  Obj 367.92079 Dual inf 13981.923 (1777)
Clp0006I 3520  Obj 272.914 Dual inf 8262.4593 (1004)
Clp0006I 3872  Obj 179.69261 Dual inf 4167.1859 (541)
Clp0006I 4224  Obj 131.44296 Dual inf 1831.4271 (283)
Clp0006I 4576  Obj 54.36526 Dual inf 1622.9532 (195)
Clp0006I 4928  Obj 20.864964 Dual inf 2567.4758 (224)
Clp0006I 5280  Obj 8.1249999 Dual inf 169.70992 (122)
Clp0006I 5632  Obj 8.1249999 Dual inf 38.585398 (86)
Clp0006I 5709  Obj 8.1249999
Clp0000I Optimal - objective value 8.1249999
Clp0032I Optimal objective 8.124999932 - 5709 iterations time 0.822, Presolve 0.14
Clp0000I Optimal - objective value 8.125
Cbc0012I Integer solution of 1180.2645 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.04 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 8.125
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 3587 added rows had average density of 2
Cbc0013I At root node, 3587 cuts changed objective from 8.125 to 81.563879 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 46009 row cuts average 2.0 elements, 14900 column cuts (17632 active)
Cbc0010I After 0 nodes, 1 on tree, 1180.2645 best solution, best possible 81.563879 (246.18 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0546101201e+03 (849.257 seconds)
Cbc0012I Integer solution of 1054.6101 found by Couenne Rounding NLP after 43113 iterations and 1 nodes (630.04 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.1136889304e+02 (1802.2 seconds)
Cbc0012I Integer solution of 911.36889 found by Couenne Rounding NLP after 58539 iterations and 5 nodes (1582.99 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 911.36889 best solution, best possible 91.847967 (2959.81 seconds)
Cbc0010I After 200 nodes, 100 on tree, 911.36889 best solution, best possible 91.847967 (3069.12 seconds)
Cbc0010I After 300 nodes, 150 on tree, 911.36889 best solution, best possible 91.847967 (3161.48 seconds)
Cbc0010I After 400 nodes, 200 on tree, 911.36889 best solution, best possible 91.847967 (3228.36 seconds)
Cbc0010I After 500 nodes, 250 on tree, 911.36889 best solution, best possible 91.847967 (3282.82 seconds)
Cbc0010I After 600 nodes, 300 on tree, 911.36889 best solution, best possible 91.847967 (3322.58 seconds)
Cbc0010I After 700 nodes, 350 on tree, 911.36889 best solution, best possible 91.847967 (3363.02 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 911.36889 (best possible 91.847967), took 1125944 iterations and 757 nodes (3382.24 seconds)
Cbc0035I Maximum depth 377, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      25681
Linearization cuts added in total:          25681  (separation time: 0.077452s)
Total solve time:                          3383.4s (3383.4s in branch-and-bound)
Lower bound:                               91.848
Upper bound:                              911.369  (gap: 882.65%)
Branch-and-bound nodes:                       757
Stats: /tmp/jl_ctSX7K/model.nl 9640 [var] 3240 [int] 9680 [con] 3281 [aux]  25681 [root]    25681 [tot] 0.077452 [sep]   3383.4 [time]  3383.43 [bb]         9.184797e+01 [lower]         9.113689e+02 [upper]     757 [nodes]
Performance of                           FBBT:	    16.1247s,     1542 runs. fix:          0 shrnk:    859.825 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    41.9254s,        7 runs. fix:   0.428571 shrnk:    121.172 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-3.txt
