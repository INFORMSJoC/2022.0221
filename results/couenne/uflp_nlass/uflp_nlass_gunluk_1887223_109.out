solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-10.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 97.633613       40 3.054472
NLP0014I             2         OPT 839.37825       42 0.734044
Couenne: new cutoff value 8.3937825684e+02 (7.05206 seconds)
Loaded instance "/tmp/jl_DerTo3/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:          841 (0 integer)

Coin0506I Presolve 6391 (-50) rows, 3171 (-90) columns and 14321 (-140) elements
Clp0006I 0  Obj 0 Primal inf 39.99996 (40)
Clp0006I 202  Obj 2.849027e-16 Primal inf 168.21978 (184)
Clp0006I 404  Obj 2.0498262e-15 Primal inf 246.40641 (254)
Clp0006I 606  Obj 1.6733887e-15 Primal inf 438.27515 (301)
Clp0006I 808  Obj 1.5779994e-15 Primal inf 534.83623 (324)
Clp0006I 1010  Obj 1.690267e-15 Primal inf 1066.7665 (411)
Clp0006I 1212  Obj 1.5804277e-15 Primal inf 1214.0649 (405)
Clp0006I 1385  Obj 2.5381496e-15 Primal inf 100.56197 (175)
Clp0006I 1587  Obj 9.625 Primal inf 18.588882 (93)
Clp0006I 1716  Obj 13.375
Clp0000I Optimal - objective value 13.375
Clp0032I Optimal objective 13.375 - 1716 iterations time 0.212, Presolve 0.04
Clp0000I Optimal - objective value 13.375
Cbc0012I Integer solution of 839.37826 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.01 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 13.375
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 992 added rows had average density of 2
Cbc0013I At root node, 992 cuts changed objective from 13.375 to 95.895433 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 13217 row cuts average 2.0 elements, 887 column cuts (1752 active)
Cbc0010I After 0 nodes, 1 on tree, 839.37826 best solution, best possible 95.895433 (12.29 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.3221502294e+02 (37.1201 seconds)
Cbc0012I Integer solution of 832.21502 found by Couenne Rounding NLP after 9839 iterations and 1 nodes (29.74 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 8.2693004417e+02 (50.0202 seconds)
Cbc0012I Integer solution of 826.93004 found by Couenne Rounding NLP after 10097 iterations and 2 nodes (42.64 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.2175917932e+02 (76.6785 seconds)
Cbc0012I Integer solution of 621.75918 found by Couenne Rounding NLP after 10764 iterations and 4 nodes (69.30 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 621.75918 best solution, best possible 96.524585 (141.79 seconds)
Cbc0010I After 200 nodes, 100 on tree, 621.75918 best solution, best possible 96.524585 (160.97 seconds)
Cbc0010I After 300 nodes, 150 on tree, 621.75918 best solution, best possible 96.524585 (178.81 seconds)
Cbc0010I After 400 nodes, 200 on tree, 621.75918 best solution, best possible 96.524585 (190.42 seconds)
Couenne: new cutoff value 3.8062715914e+02 (202.568 seconds)
Cbc0004I Integer solution of 380.62716 found after 230135 iterations and 470 nodes (195.21 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 500 nodes, 225 on tree, 380.62716 best solution, best possible 96.585186 (261.21 seconds)
Cbc0010I After 600 nodes, 275 on tree, 380.62716 best solution, best possible 96.585186 (285.99 seconds)
Cbc0010I After 700 nodes, 325 on tree, 380.62716 best solution, best possible 96.585186 (294.88 seconds)
Cbc0010I After 800 nodes, 372 on tree, 380.62716 best solution, best possible 96.585186 (302.98 seconds)
Cbc0010I After 900 nodes, 404 on tree, 380.62716 best solution, best possible 96.585186 (310.38 seconds)
Couenne: new cutoff value 3.5604387146e+02 (322.637 seconds)
Cbc0004I Integer solution of 356.04387 found after 425641 iterations and 976 nodes (315.27 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1000 nodes, 410 on tree, 356.04387 best solution, best possible 97.342742 (342.95 seconds)
Cbc0010I After 1100 nodes, 460 on tree, 356.04387 best solution, best possible 97.342742 (362.39 seconds)
Cbc0010I After 1200 nodes, 510 on tree, 356.04387 best solution, best possible 97.342742 (381.66 seconds)
Cbc0010I After 1300 nodes, 560 on tree, 356.04387 best solution, best possible 97.342742 (397.04 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1400 nodes, 602 on tree, 356.04387 best solution, best possible 97.566356 (457.11 seconds)
Cbc0010I After 1500 nodes, 652 on tree, 356.04387 best solution, best possible 97.566356 (480.49 seconds)
Cbc0010I After 1600 nodes, 702 on tree, 356.04387 best solution, best possible 97.566356 (499.50 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1700 nodes, 741 on tree, 356.04387 best solution, best possible 97.568188 (515.02 seconds)
Cbc0010I After 1800 nodes, 791 on tree, 356.04387 best solution, best possible 97.568188 (534.60 seconds)
Cbc0010I After 1900 nodes, 841 on tree, 356.04387 best solution, best possible 97.568188 (553.64 seconds)
Cbc0010I After 2000 nodes, 891 on tree, 356.04387 best solution, best possible 97.568188 (571.48 seconds)
Cbc0010I After 2100 nodes, 939 on tree, 356.04387 best solution, best possible 97.568188 (586.00 seconds)
Cbc0010I After 2200 nodes, 973 on tree, 356.04387 best solution, best possible 97.660366 (604.55 seconds)
Cbc0010I After 2300 nodes, 1023 on tree, 356.04387 best solution, best possible 97.660366 (624.01 seconds)
Cbc0010I After 2400 nodes, 1073 on tree, 356.04387 best solution, best possible 97.660366 (639.61 seconds)
Cbc0010I After 2500 nodes, 1113 on tree, 356.04387 best solution, best possible 97.784903 (677.62 seconds)
Cbc0010I After 2600 nodes, 1163 on tree, 356.04387 best solution, best possible 97.784903 (693.77 seconds)
Cbc0010I After 2700 nodes, 1208 on tree, 356.04387 best solution, best possible 97.784903 (707.35 seconds)
Cbc0010I After 2800 nodes, 1242 on tree, 356.04387 best solution, best possible 97.802085 (725.76 seconds)
Cbc0010I After 2900 nodes, 1292 on tree, 356.04387 best solution, best possible 97.802085 (747.91 seconds)
Cbc0010I After 3000 nodes, 1342 on tree, 356.04387 best solution, best possible 97.802085 (760.32 seconds)
Cbc0010I After 3100 nodes, 1378 on tree, 356.04387 best solution, best possible 97.802085 (769.99 seconds)
Cbc0010I After 3200 nodes, 1406 on tree, 356.04387 best solution, best possible 97.808874 (782.45 seconds)
Cbc0010I After 3300 nodes, 1456 on tree, 356.04387 best solution, best possible 97.808874 (801.07 seconds)
Cbc0010I After 3400 nodes, 1506 on tree, 356.04387 best solution, best possible 97.808874 (821.16 seconds)
Cbc0010I After 3500 nodes, 1556 on tree, 356.04387 best solution, best possible 97.808874 (837.06 seconds)
Cbc0010I After 3600 nodes, 1600 on tree, 356.04387 best solution, best possible 97.936748 (871.18 seconds)
Cbc0010I After 3700 nodes, 1650 on tree, 356.04387 best solution, best possible 97.936748 (890.05 seconds)
Cbc0010I After 3800 nodes, 1700 on tree, 356.04387 best solution, best possible 97.936748 (907.99 seconds)
Cbc0010I After 3900 nodes, 1750 on tree, 356.04387 best solution, best possible 97.936748 (921.22 seconds)
Cbc0010I After 4000 nodes, 1784 on tree, 356.04387 best solution, best possible 98.073229 (945.75 seconds)
Cbc0010I After 4100 nodes, 1834 on tree, 356.04387 best solution, best possible 98.073229 (966.26 seconds)
Cbc0010I After 4200 nodes, 1884 on tree, 356.04387 best solution, best possible 98.073229 (982.63 seconds)
Cbc0010I After 4300 nodes, 1934 on tree, 356.04387 best solution, best possible 98.073229 (995.13 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 4400 nodes, 1969 on tree, 356.04387 best solution, best possible 98.235279 (1009.73 seconds)
Cbc0010I After 4500 nodes, 2019 on tree, 356.04387 best solution, best possible 98.235279 (1029.39 seconds)
Cbc0010I After 4600 nodes, 2069 on tree, 356.04387 best solution, best possible 98.235279 (1046.33 seconds)
Cbc0010I After 4700 nodes, 2119 on tree, 356.04387 best solution, best possible 98.235279 (1060.85 seconds)
Cbc0010I After 4800 nodes, 2165 on tree, 356.04387 best solution, best possible 98.264088 (1087.30 seconds)
Cbc0010I After 4900 nodes, 2215 on tree, 356.04387 best solution, best possible 98.264088 (1106.78 seconds)
Cbc0010I After 5000 nodes, 2265 on tree, 356.04387 best solution, best possible 98.264088 (1121.65 seconds)
Cbc0010I After 5100 nodes, 2315 on tree, 356.04387 best solution, best possible 98.264088 (1134.44 seconds)
Cbc0010I After 5200 nodes, 2348 on tree, 356.04387 best solution, best possible 98.264088 (1144.36 seconds)
Cbc0010I After 5300 nodes, 2397 on tree, 356.04387 best solution, best possible 98.310955 (1171.49 seconds)
Cbc0010I After 5400 nodes, 2447 on tree, 356.04387 best solution, best possible 98.310955 (1182.00 seconds)
Cbc0010I After 5500 nodes, 2497 on tree, 356.04387 best solution, best possible 98.310955 (1194.33 seconds)
Cbc0010I After 5600 nodes, 2541 on tree, 356.04387 best solution, best possible 98.310955 (1202.95 seconds)
Couenne: new cutoff value 3.1550961912e+02 (1212.04 seconds)
Cbc0010I After 5700 nodes, 2588 on tree, 356.04387 best solution, best possible 98.488916 (1218.61 seconds)
Cbc0010I After 5800 nodes, 2638 on tree, 356.04387 best solution, best possible 98.488916 (1233.15 seconds)
Cbc0010I After 5900 nodes, 2681 on tree, 356.04387 best solution, best possible 98.488916 (1241.61 seconds)
Cbc0010I After 6000 nodes, 2713 on tree, 356.04387 best solution, best possible 98.569344 (1253.60 seconds)
Cbc0010I After 6100 nodes, 2763 on tree, 356.04387 best solution, best possible 98.569344 (1272.21 seconds)
Cbc0010I After 6200 nodes, 2813 on tree, 356.04387 best solution, best possible 98.569344 (1287.30 seconds)
Cbc0010I After 6300 nodes, 2854 on tree, 356.04387 best solution, best possible 98.640053 (1307.02 seconds)
Cbc0010I After 6400 nodes, 2904 on tree, 356.04387 best solution, best possible 98.640053 (1331.21 seconds)
Cbc0010I After 6500 nodes, 2953 on tree, 356.04387 best solution, best possible 98.640053 (1343.52 seconds)
Cbc0010I After 6600 nodes, 2993 on tree, 356.04387 best solution, best possible 98.640053 (1353.12 seconds)
Cbc0010I After 6700 nodes, 3027 on tree, 356.04387 best solution, best possible 98.714347 (1367.86 seconds)
Cbc0010I After 6800 nodes, 3077 on tree, 356.04387 best solution, best possible 98.714347 (1386.86 seconds)
Cbc0010I After 6900 nodes, 3127 on tree, 356.04387 best solution, best possible 98.714347 (1402.30 seconds)
Cbc0010I After 7000 nodes, 3168 on tree, 356.04387 best solution, best possible 98.714347 (1413.07 seconds)
Cbc0010I After 7100 nodes, 3204 on tree, 356.04387 best solution, best possible 98.75023 (1436.13 seconds)
Cbc0010I After 7200 nodes, 3254 on tree, 356.04387 best solution, best possible 98.75023 (1457.53 seconds)
Cbc0010I After 7300 nodes, 3296 on tree, 356.04387 best solution, best possible 98.75023 (1471.13 seconds)
Cbc0010I After 7400 nodes, 3338 on tree, 356.04387 best solution, best possible 98.825591 (1486.42 seconds)
Cbc0010I After 7500 nodes, 3388 on tree, 356.04387 best solution, best possible 98.825591 (1505.05 seconds)
Cbc0010I After 7600 nodes, 3438 on tree, 356.04387 best solution, best possible 98.825591 (1522.50 seconds)
Cbc0010I After 7700 nodes, 3476 on tree, 356.04387 best solution, best possible 98.825591 (1534.05 seconds)
Cbc0010I After 7800 nodes, 3521 on tree, 356.04387 best solution, best possible 98.87886 (1554.04 seconds)
Cbc0010I After 7900 nodes, 3570 on tree, 356.04387 best solution, best possible 98.87886 (1575.56 seconds)
Cbc0010I After 8000 nodes, 3613 on tree, 356.04387 best solution, best possible 98.923719 (1602.10 seconds)
Cbc0010I After 8100 nodes, 3663 on tree, 356.04387 best solution, best possible 98.923719 (1622.55 seconds)
Cbc0010I After 8200 nodes, 3713 on tree, 356.04387 best solution, best possible 98.923719 (1640.97 seconds)
Cbc0010I After 8300 nodes, 3753 on tree, 356.04387 best solution, best possible 98.928697 (1653.25 seconds)
Cbc0010I After 8400 nodes, 3803 on tree, 356.04387 best solution, best possible 98.928697 (1672.71 seconds)
Cbc0010I After 8500 nodes, 3853 on tree, 356.04387 best solution, best possible 98.928697 (1690.43 seconds)
Cbc0010I After 8600 nodes, 3903 on tree, 356.04387 best solution, best possible 98.928697 (1706.75 seconds)
Cbc0010I After 8700 nodes, 3938 on tree, 356.04387 best solution, best possible 98.938083 (1719.26 seconds)
Cbc0010I After 8800 nodes, 3988 on tree, 356.04387 best solution, best possible 98.938083 (1738.06 seconds)
Cbc0010I After 8900 nodes, 4038 on tree, 356.04387 best solution, best possible 98.938083 (1754.06 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 9000 nodes, 4068 on tree, 356.04387 best solution, best possible 98.943142 (1766.99 seconds)
Cbc0010I After 9100 nodes, 4118 on tree, 356.04387 best solution, best possible 98.943142 (1792.74 seconds)
Cbc0010I After 9200 nodes, 4166 on tree, 356.04387 best solution, best possible 98.973015 (1809.04 seconds)
Cbc0010I After 9300 nodes, 4216 on tree, 356.04387 best solution, best possible 98.973015 (1829.01 seconds)
Cbc0010I After 9400 nodes, 4266 on tree, 356.04387 best solution, best possible 98.973015 (1847.44 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 9500 nodes, 4301 on tree, 356.04387 best solution, best possible 98.989022 (1863.21 seconds)
Cbc0010I After 9600 nodes, 4351 on tree, 356.04387 best solution, best possible 98.989022 (1881.62 seconds)
Cbc0010I After 9700 nodes, 4401 on tree, 356.04387 best solution, best possible 98.989022 (1897.45 seconds)
Cbc0010I After 9800 nodes, 4436 on tree, 356.04387 best solution, best possible 98.989022 (1908.68 seconds)
Cbc0010I After 9900 nodes, 4472 on tree, 356.04387 best solution, best possible 99.049791 (1928.85 seconds)
Cbc0010I After 10000 nodes, 4521 on tree, 356.04387 best solution, best possible 99.049791 (1952.09 seconds)
Cbc0010I After 10100 nodes, 4567 on tree, 356.04387 best solution, best possible 99.049791 (1964.90 seconds)
Cbc0010I After 10200 nodes, 4612 on tree, 356.04387 best solution, best possible 99.083931 (1981.24 seconds)
Cbc0010I After 10300 nodes, 4662 on tree, 356.04387 best solution, best possible 99.083931 (2002.17 seconds)
Cbc0010I After 10400 nodes, 4712 on tree, 356.04387 best solution, best possible 99.083931 (2021.80 seconds)
Cbc0010I After 10500 nodes, 4762 on tree, 356.04387 best solution, best possible 99.083931 (2038.49 seconds)
Cbc0010I After 10600 nodes, 4808 on tree, 356.04387 best solution, best possible 99.083931 (2053.72 seconds)
Cbc0010I After 10700 nodes, 4842 on tree, 356.04387 best solution, best possible 99.126734 (2071.66 seconds)
Cbc0010I After 10800 nodes, 4892 on tree, 356.04387 best solution, best possible 99.126734 (2091.24 seconds)
Cbc0010I After 10900 nodes, 4929 on tree, 356.04387 best solution, best possible 99.126734 (2105.65 seconds)
Cbc0010I After 11000 nodes, 4961 on tree, 356.04387 best solution, best possible 99.130895 (2118.65 seconds)
Cbc0010I After 11100 nodes, 5011 on tree, 356.04387 best solution, best possible 99.130895 (2137.52 seconds)
Cbc0010I After 11200 nodes, 5061 on tree, 356.04387 best solution, best possible 99.130895 (2154.14 seconds)
Cbc0010I After 11300 nodes, 5111 on tree, 356.04387 best solution, best possible 99.130895 (2169.11 seconds)
Cbc0010I After 11400 nodes, 5142 on tree, 356.04387 best solution, best possible 99.161366 (2180.52 seconds)
Cbc0010I After 11500 nodes, 5192 on tree, 356.04387 best solution, best possible 99.161366 (2202.32 seconds)
Cbc0010I After 11600 nodes, 5237 on tree, 356.04387 best solution, best possible 99.190651 (2216.09 seconds)
Cbc0010I After 11700 nodes, 5287 on tree, 356.04387 best solution, best possible 99.190651 (2236.18 seconds)
Cbc0010I After 11800 nodes, 5337 on tree, 356.04387 best solution, best possible 99.190651 (2255.30 seconds)
Cbc0010I After 11900 nodes, 5364 on tree, 356.04387 best solution, best possible 99.225644 (2276.38 seconds)
Cbc0010I After 12000 nodes, 5414 on tree, 356.04387 best solution, best possible 99.225644 (2294.44 seconds)
Cbc0010I After 12100 nodes, 5464 on tree, 356.04387 best solution, best possible 99.225644 (2310.24 seconds)
Cbc0010I After 12200 nodes, 5510 on tree, 356.04387 best solution, best possible 99.225644 (2324.13 seconds)
Cbc0010I After 12300 nodes, 5549 on tree, 356.04387 best solution, best possible 99.303314 (2341.77 seconds)
Cbc0010I After 12400 nodes, 5598 on tree, 356.04387 best solution, best possible 99.303314 (2362.22 seconds)
Cbc0010I After 12500 nodes, 5641 on tree, 356.04387 best solution, best possible 99.303314 (2373.27 seconds)
Cbc0010I After 12600 nodes, 5687 on tree, 356.04387 best solution, best possible 99.309554 (2391.72 seconds)
Cbc0010I After 12700 nodes, 5737 on tree, 356.04387 best solution, best possible 99.309554 (2414.49 seconds)
Cbc0010I After 12800 nodes, 5785 on tree, 356.04387 best solution, best possible 99.309554 (2434.19 seconds)
Cbc0010I After 12900 nodes, 5826 on tree, 356.04387 best solution, best possible 99.333473 (2451.28 seconds)
Cbc0010I After 13000 nodes, 5876 on tree, 356.04387 best solution, best possible 99.333473 (2469.03 seconds)
Cbc0010I After 13100 nodes, 5926 on tree, 356.04387 best solution, best possible 99.333473 (2483.48 seconds)
Cbc0010I After 13200 nodes, 5972 on tree, 356.04387 best solution, best possible 99.377996 (2509.87 seconds)
Cbc0010I After 13300 nodes, 6022 on tree, 356.04387 best solution, best possible 99.377996 (2524.49 seconds)
Cbc0010I After 13400 nodes, 6065 on tree, 356.04387 best solution, best possible 99.377996 (2538.10 seconds)
Cbc0010I After 13500 nodes, 6101 on tree, 356.04387 best solution, best possible 99.377996 (2548.96 seconds)
Cbc0010I After 13600 nodes, 6124 on tree, 356.04387 best solution, best possible 99.397717 (2557.97 seconds)
Cbc0010I After 13700 nodes, 6174 on tree, 356.04387 best solution, best possible 99.397717 (2577.91 seconds)
Cbc0010I After 13800 nodes, 6224 on tree, 356.04387 best solution, best possible 99.397717 (2594.83 seconds)
Cbc0010I After 13900 nodes, 6254 on tree, 356.04387 best solution, best possible 99.441921 (2603.44 seconds)
Cbc0010I After 14000 nodes, 6304 on tree, 356.04387 best solution, best possible 99.441921 (2621.07 seconds)
Cbc0010I After 14100 nodes, 6354 on tree, 356.04387 best solution, best possible 99.441921 (2637.69 seconds)
Cbc0010I After 14200 nodes, 6404 on tree, 356.04387 best solution, best possible 99.441921 (2651.08 seconds)
Cbc0010I After 14300 nodes, 6440 on tree, 356.04387 best solution, best possible 99.441921 (2660.05 seconds)
Cbc0010I After 14400 nodes, 6480 on tree, 356.04387 best solution, best possible 99.445949 (2676.78 seconds)
Cbc0010I After 14500 nodes, 6530 on tree, 356.04387 best solution, best possible 99.445949 (2696.89 seconds)
Cbc0010I After 14600 nodes, 6580 on tree, 356.04387 best solution, best possible 99.445949 (2714.04 seconds)
Cbc0010I After 14700 nodes, 6612 on tree, 356.04387 best solution, best possible 99.445949 (2725.37 seconds)
Cbc0010I After 14800 nodes, 6661 on tree, 356.04387 best solution, best possible 99.446665 (2756.29 seconds)
Cbc0010I After 14900 nodes, 6711 on tree, 356.04387 best solution, best possible 99.446665 (2781.81 seconds)
Cbc0010I After 15000 nodes, 6746 on tree, 356.04387 best solution, best possible 99.446665 (2796.95 seconds)
Cbc0010I After 15100 nodes, 6787 on tree, 356.04387 best solution, best possible 99.496182 (2813.30 seconds)
Cbc0010I After 15200 nodes, 6837 on tree, 356.04387 best solution, best possible 99.496182 (2832.97 seconds)
Cbc0010I After 15300 nodes, 6880 on tree, 356.04387 best solution, best possible 99.511278 (2849.14 seconds)
Cbc0010I After 15400 nodes, 6930 on tree, 356.04387 best solution, best possible 99.511278 (2877.38 seconds)
Cbc0010I After 15500 nodes, 6978 on tree, 356.04387 best solution, best possible 99.511278 (2890.31 seconds)
Cbc0010I After 15600 nodes, 7016 on tree, 356.04387 best solution, best possible 99.511278 (2901.70 seconds)
Cbc0010I After 15700 nodes, 7036 on tree, 356.04387 best solution, best possible 99.609773 (2910.02 seconds)
Cbc0010I After 15800 nodes, 7086 on tree, 356.04387 best solution, best possible 99.609773 (2929.65 seconds)
Cbc0010I After 15900 nodes, 7136 on tree, 356.04387 best solution, best possible 99.609773 (2954.90 seconds)
Cbc0010I After 16000 nodes, 7178 on tree, 356.04387 best solution, best possible 99.61334 (2969.98 seconds)
Cbc0010I After 16100 nodes, 7228 on tree, 356.04387 best solution, best possible 99.61334 (2997.94 seconds)
Cbc0010I After 16200 nodes, 7278 on tree, 356.04387 best solution, best possible 99.61334 (3015.55 seconds)
Cbc0010I After 16300 nodes, 7323 on tree, 356.04387 best solution, best possible 99.61334 (3028.45 seconds)
Cbc0010I After 16400 nodes, 7351 on tree, 356.04387 best solution, best possible 99.636822 (3040.19 seconds)
Cbc0010I After 16500 nodes, 7401 on tree, 356.04387 best solution, best possible 99.636822 (3055.76 seconds)
Cbc0010I After 16600 nodes, 7451 on tree, 356.04387 best solution, best possible 99.636822 (3070.96 seconds)
Cbc0010I After 16700 nodes, 7488 on tree, 356.04387 best solution, best possible 99.636822 (3079.15 seconds)
Cbc0010I After 16800 nodes, 7529 on tree, 356.04387 best solution, best possible 99.666884 (3093.40 seconds)
Cbc0010I After 16900 nodes, 7579 on tree, 356.04387 best solution, best possible 99.666884 (3111.27 seconds)
Cbc0010I After 17000 nodes, 7629 on tree, 356.04387 best solution, best possible 99.666884 (3128.47 seconds)
Cbc0010I After 17100 nodes, 7673 on tree, 356.04387 best solution, best possible 99.666884 (3140.45 seconds)
Cbc0010I After 17200 nodes, 7721 on tree, 356.04387 best solution, best possible 99.672749 (3155.32 seconds)
Cbc0010I After 17300 nodes, 7771 on tree, 356.04387 best solution, best possible 99.672749 (3170.97 seconds)
Cbc0010I After 17400 nodes, 7821 on tree, 356.04387 best solution, best possible 99.672749 (3187.51 seconds)
Cbc0010I After 17500 nodes, 7868 on tree, 356.04387 best solution, best possible 99.672749 (3201.35 seconds)
Cbc0010I After 17600 nodes, 7896 on tree, 356.04387 best solution, best possible 99.716671 (3212.18 seconds)
Cbc0010I After 17700 nodes, 7946 on tree, 356.04387 best solution, best possible 99.716671 (3226.69 seconds)
Cbc0010I After 17800 nodes, 7996 on tree, 356.04387 best solution, best possible 99.716671 (3240.62 seconds)
Cbc0010I After 17900 nodes, 8041 on tree, 356.04387 best solution, best possible 99.716671 (3250.40 seconds)
Cbc0010I After 18000 nodes, 8061 on tree, 356.04387 best solution, best possible 99.736348 (3258.16 seconds)
Cbc0010I After 18100 nodes, 8111 on tree, 356.04387 best solution, best possible 99.736348 (3274.09 seconds)
Cbc0010I After 18200 nodes, 8161 on tree, 356.04387 best solution, best possible 99.736348 (3289.12 seconds)
Cbc0010I After 18300 nodes, 8211 on tree, 356.04387 best solution, best possible 99.736348 (3303.55 seconds)
Cbc0010I After 18400 nodes, 8256 on tree, 356.04387 best solution, best possible 99.745269 (3316.63 seconds)
Cbc0010I After 18500 nodes, 8306 on tree, 356.04387 best solution, best possible 99.745269 (3336.97 seconds)
Cbc0010I After 18600 nodes, 8348 on tree, 356.04387 best solution, best possible 99.748265 (3353.00 seconds)
Cbc0010I After 18700 nodes, 8398 on tree, 356.04387 best solution, best possible 99.748265 (3368.48 seconds)
Cbc0010I After 18800 nodes, 8447 on tree, 356.04387 best solution, best possible 99.748265 (3379.64 seconds)
Cbc0010I After 18900 nodes, 8475 on tree, 356.04387 best solution, best possible 99.758724 (3386.88 seconds)
Cbc0010I After 19000 nodes, 8525 on tree, 356.04387 best solution, best possible 99.758724 (3405.00 seconds)
Cbc0010I After 19100 nodes, 8575 on tree, 356.04387 best solution, best possible 99.758724 (3421.17 seconds)
Cbc0010I After 19200 nodes, 8616 on tree, 356.04387 best solution, best possible 99.776176 (3433.32 seconds)
Cbc0010I After 19300 nodes, 8666 on tree, 356.04387 best solution, best possible 99.776176 (3449.75 seconds)
Cbc0010I After 19400 nodes, 8716 on tree, 356.04387 best solution, best possible 99.776176 (3462.28 seconds)
Cbc0010I After 19500 nodes, 8751 on tree, 356.04387 best solution, best possible 99.790733 (3473.42 seconds)
Cbc0010I After 19600 nodes, 8801 on tree, 356.04387 best solution, best possible 99.790733 (3490.08 seconds)
Cbc0010I After 19700 nodes, 8851 on tree, 356.04387 best solution, best possible 99.790733 (3504.28 seconds)
Cbc0010I After 19800 nodes, 8890 on tree, 356.04387 best solution, best possible 99.796174 (3514.10 seconds)
Cbc0010I After 19900 nodes, 8940 on tree, 356.04387 best solution, best possible 99.796174 (3531.00 seconds)
Cbc0010I After 20000 nodes, 8990 on tree, 356.04387 best solution, best possible 99.796174 (3545.20 seconds)
Cbc0010I After 20100 nodes, 9040 on tree, 356.04387 best solution, best possible 99.796174 (3558.13 seconds)
Cbc0010I After 20200 nodes, 9066 on tree, 356.04387 best solution, best possible 99.799135 (3567.24 seconds)
Cbc0010I After 20300 nodes, 9116 on tree, 356.04387 best solution, best possible 99.799135 (3582.90 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 356.04387 (best possible 99.799135), took 10941359 iterations and 20365 nodes (3599.75 seconds)
Cbc0035I Maximum depth 267, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       6441
Linearization cuts added in total:           6441  (separation time: 0.015257s)
Total solve time:                            3600s (3600s in branch-and-bound)
Lower bound:                              99.7991
Upper bound:                               315.51  (gap: 214.00%)
Branch-and-bound nodes:                     20365
Stats: /tmp/jl_DerTo3/model.nl 2420 [var]  820 [int] 2440 [con]  841 [aux]   6441 [root]     6441 [tot] 0.015257 [sep]     3600 [time]  3600.01 [bb]         9.979913e+01 [lower]         3.155096e+02 [upper]   20365 [nodes]
Performance of                           FBBT:	    74.5797s,    37520 runs. fix: 0.000128327 shrnk:     23.293 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    16.3434s,       18 runs. fix:   0.285171 shrnk:    6.23338 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-10.txt
