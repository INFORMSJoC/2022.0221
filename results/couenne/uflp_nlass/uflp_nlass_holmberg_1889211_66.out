solving instance uflp nlass holmberg 7 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9147.9254      270 6.07146
NLP0014I             2      INFEAS 0.1322912       68 0.923042
Loaded instance "/tmp/jl_cca4SE/model.nl"
Constraints:         1550
Variables:           1510 (510 integer)
Auxiliaries:         3550 (0 integer)

Coin0506I Presolve 5051 (-2500) rows, 2510 (-2550) columns and 13400 (-4160) elements
Clp0006I 0  Obj -17204.447 Primal inf 5.0587549e+12 (1599)
Clp0006I 176  Obj -17204.447 Primal inf 2.2222054e+12 (1531)
Clp0006I 352  Obj -17204.447 Primal inf 1.2025767e+12 (1468)
Clp0006I 528  Obj -17204.447 Primal inf 4.9654328e+11 (1410)
Clp0006I 704  Obj -17204.447 Primal inf 2.6834562e+10 (1339)
Clp0006I 880  Obj -17204.447 Primal inf 9455.7096 (1220)
Clp0006I 1056  Obj -17204.447 Primal inf 3861.9744 (1254)
Clp0006I 1232  Obj -17204.447 Primal inf 3486.8118 (1292)
Clp0006I 1408  Obj -17204.447 Primal inf 3422.4126 (1278)
Clp0006I 1584  Obj -17051.843 Primal inf 3897.7078 (1257)
Clp0006I 1760  Obj -16263.692 Primal inf 6159.5149 (1284)
Clp0006I 1936  Obj -15091.594 Primal inf 7473.5157 (1268)
Clp0006I 2112  Obj -13464.632 Primal inf 7507.101 (1205)
Clp0006I 2288  Obj -10745.901 Primal inf 5927.6662 (1065)
Clp0006I 2464  Obj -7991.0893 Primal inf 3637.4592 (854)
Clp0006I 2640  Obj -7698.2726 Primal inf 170.57406 (530)
Clp0006I 2816  Obj -7483.9709 Primal inf 429.30908 (520)
Clp0006I 2992  Obj -7037.8503 Primal inf 1518.5771 (348)
Clp0006I 3126  Obj -6974.3792
Clp0000I Optimal - objective value -6974.3792
Clp0032I Optimal objective -6974.379167 - 3126 iterations time 0.192, Presolve 0.02
Clp0000I Optimal - objective value -6974.3792
NLP Heuristic: NLP0014I             3         OPT 14676.206      878 13.708677
no solution.
Clp0000I Optimal - objective value -6974.3792
Optimality Based BT: 500 improved bounds
Probing: 441 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from -6974.3792 to -775.63628 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (258.65 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -360.37994 (1413.22 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -319.79426 (1423.09 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -319.79426 (1432.15 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -319.79426 (1440.56 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -319.79426 (1448.33 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -319.79426 (1455.54 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -319.79426 (1462.78 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -319.79426 (1471.03 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -319.79426 (1482.22 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -319.79426 (1491.80 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -319.79426 (1502.54 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -319.79426 (1515.45 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -319.79426 (1529.67 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -319.79426 (1544.49 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -319.79426 (1559.45 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -319.79426 (1571.74 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -319.79426 (1583.29 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -319.79426 (1594.51 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -319.79426 (1604.83 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -319.79426 (1616.16 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -319.79426 (1627.46 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -319.79426 (1639.01 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -319.79426 (1650.57 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -319.79426 (1662.23 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -319.79426 (1673.61 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -319.79426 (1684.84 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -319.79426 (1695.28 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -319.79426 (1705.24 seconds)
Couenne: new cutoff value 1.6900162568e+04 (1727.42 seconds)
Cbc0010I After 2900 nodes, 1446 on tree, 1e+50 best solution, best possible -304.37439 (1715.76 seconds)
Cbc0010I After 3000 nodes, 1496 on tree, 1e+50 best solution, best possible -304.37439 (1728.73 seconds)
Cbc0010I After 3100 nodes, 1546 on tree, 1e+50 best solution, best possible -304.37439 (1739.59 seconds)
Cbc0010I After 3200 nodes, 1596 on tree, 1e+50 best solution, best possible -304.37439 (1750.19 seconds)
Cbc0010I After 3300 nodes, 1646 on tree, 1e+50 best solution, best possible -304.37439 (1760.47 seconds)
Cbc0010I After 3400 nodes, 1696 on tree, 1e+50 best solution, best possible -304.37439 (1770.46 seconds)
Cbc0010I After 3500 nodes, 1746 on tree, 1e+50 best solution, best possible -304.37439 (1781.23 seconds)
Cbc0010I After 3600 nodes, 1796 on tree, 1e+50 best solution, best possible -304.37439 (1792.02 seconds)
Cbc0010I After 3700 nodes, 1846 on tree, 1e+50 best solution, best possible -304.37439 (1808.62 seconds)
Cbc0010I After 3800 nodes, 1896 on tree, 1e+50 best solution, best possible -304.37439 (1826.57 seconds)
Cbc0010I After 3900 nodes, 1946 on tree, 1e+50 best solution, best possible -304.37439 (1842.68 seconds)
Cbc0010I After 4000 nodes, 1996 on tree, 1e+50 best solution, best possible -304.37439 (1861.06 seconds)
Cbc0010I After 4100 nodes, 2046 on tree, 1e+50 best solution, best possible -304.37439 (1878.62 seconds)
Cbc0010I After 4200 nodes, 2096 on tree, 1e+50 best solution, best possible -304.37439 (1898.72 seconds)
Cbc0010I After 4300 nodes, 2146 on tree, 1e+50 best solution, best possible -304.37439 (1918.98 seconds)
Cbc0010I After 4400 nodes, 2192 on tree, 1e+50 best solution, best possible -299.97215 (1965.77 seconds)
Cbc0010I After 4500 nodes, 2242 on tree, 1e+50 best solution, best possible -299.97215 (1977.63 seconds)
Cbc0010I After 4600 nodes, 2292 on tree, 1e+50 best solution, best possible -299.97215 (1989.87 seconds)
Cbc0010I After 4700 nodes, 2342 on tree, 1e+50 best solution, best possible -299.97215 (2001.15 seconds)
Cbc0010I After 4800 nodes, 2392 on tree, 1e+50 best solution, best possible -299.97215 (2012.11 seconds)
Cbc0010I After 4900 nodes, 2442 on tree, 1e+50 best solution, best possible -299.97215 (2023.32 seconds)
Cbc0010I After 5000 nodes, 2492 on tree, 1e+50 best solution, best possible -299.97215 (2034.60 seconds)
Cbc0010I After 5100 nodes, 2542 on tree, 1e+50 best solution, best possible -299.97215 (2045.60 seconds)
Cbc0010I After 5200 nodes, 2592 on tree, 1e+50 best solution, best possible -299.97215 (2063.43 seconds)
Cbc0010I After 5300 nodes, 2642 on tree, 1e+50 best solution, best possible -299.97215 (2081.28 seconds)
Cbc0010I After 5400 nodes, 2692 on tree, 1e+50 best solution, best possible -299.97215 (2100.76 seconds)
Cbc0010I After 5500 nodes, 2742 on tree, 1e+50 best solution, best possible -299.97215 (2120.89 seconds)
Cbc0010I After 5600 nodes, 2792 on tree, 1e+50 best solution, best possible -299.97215 (2141.19 seconds)
Cbc0010I After 5700 nodes, 2839 on tree, 1e+50 best solution, best possible -298.32286 (2159.75 seconds)
Cbc0010I After 5800 nodes, 2889 on tree, 1e+50 best solution, best possible -298.32286 (2172.43 seconds)
Cbc0010I After 5900 nodes, 2939 on tree, 1e+50 best solution, best possible -298.32286 (2185.93 seconds)
Cbc0010I After 6000 nodes, 2989 on tree, 1e+50 best solution, best possible -298.32286 (2198.38 seconds)
Cbc0010I After 6100 nodes, 3039 on tree, 1e+50 best solution, best possible -298.32286 (2210.15 seconds)
Cbc0010I After 6200 nodes, 3089 on tree, 1e+50 best solution, best possible -298.32286 (2221.35 seconds)
Cbc0010I After 6300 nodes, 3139 on tree, 1e+50 best solution, best possible -298.32286 (2232.58 seconds)
Cbc0010I After 6400 nodes, 3189 on tree, 1e+50 best solution, best possible -298.32286 (2243.60 seconds)
Cbc0010I After 6500 nodes, 3239 on tree, 1e+50 best solution, best possible -298.32286 (2255.23 seconds)
Cbc0010I After 6600 nodes, 3289 on tree, 1e+50 best solution, best possible -298.32286 (2274.78 seconds)
Cbc0010I After 6700 nodes, 3339 on tree, 1e+50 best solution, best possible -298.32286 (2292.57 seconds)
Cbc0010I After 6800 nodes, 3389 on tree, 1e+50 best solution, best possible -298.32286 (2312.73 seconds)
Cbc0010I After 6900 nodes, 3439 on tree, 1e+50 best solution, best possible -298.32286 (2332.61 seconds)
Cbc0010I After 7000 nodes, 3488 on tree, 1e+50 best solution, best possible -298.32286 (2352.78 seconds)
Cbc0010I After 7100 nodes, 3538 on tree, 1e+50 best solution, best possible -298.32286 (2369.87 seconds)
Cbc0010I After 7200 nodes, 3588 on tree, 1e+50 best solution, best possible -298.32286 (2385.48 seconds)
Cbc0010I After 7300 nodes, 3638 on tree, 1e+50 best solution, best possible -298.32286 (2399.50 seconds)
Cbc0010I After 7400 nodes, 3688 on tree, 1e+50 best solution, best possible -298.32286 (2414.86 seconds)
Cbc0010I After 7500 nodes, 3738 on tree, 1e+50 best solution, best possible -298.32286 (2430.58 seconds)
Cbc0010I After 7600 nodes, 3788 on tree, 1e+50 best solution, best possible -298.32286 (2446.46 seconds)
Cbc0010I After 7700 nodes, 3838 on tree, 1e+50 best solution, best possible -298.32286 (2462.06 seconds)
Cbc0010I After 7800 nodes, 3888 on tree, 1e+50 best solution, best possible -298.32286 (2477.22 seconds)
Couenne: new cutoff value 1.5440528697e+04 (2497.49 seconds)
Cbc0004I Integer solution of 15440.529 found after 156473 iterations and 7826 nodes (2480.73 seconds)
Cbc0010I After 7900 nodes, 3123 on tree, 15440.529 best solution, best possible -295.40242 (2493.53 seconds)
Cbc0010I After 8000 nodes, 3173 on tree, 15440.529 best solution, best possible -295.40242 (2506.70 seconds)
Cbc0010I After 8100 nodes, 3223 on tree, 15440.529 best solution, best possible -295.40242 (2518.19 seconds)
Cbc0010I After 8200 nodes, 3273 on tree, 15440.529 best solution, best possible -295.40242 (2529.29 seconds)
Cbc0010I After 8300 nodes, 3323 on tree, 15440.529 best solution, best possible -295.40242 (2539.96 seconds)
Cbc0010I After 8400 nodes, 3373 on tree, 15440.529 best solution, best possible -295.40242 (2551.25 seconds)
Cbc0010I After 8500 nodes, 3423 on tree, 15440.529 best solution, best possible -295.40242 (2562.50 seconds)
Cbc0010I After 8600 nodes, 3473 on tree, 15440.529 best solution, best possible -295.40242 (2573.83 seconds)
Cbc0010I After 8700 nodes, 3523 on tree, 15440.529 best solution, best possible -295.40242 (2591.14 seconds)
Cbc0010I After 8800 nodes, 3573 on tree, 15440.529 best solution, best possible -295.40242 (2607.89 seconds)
Cbc0010I After 8900 nodes, 3623 on tree, 15440.529 best solution, best possible -295.40242 (2624.88 seconds)
Cbc0010I After 9000 nodes, 3673 on tree, 15440.529 best solution, best possible -295.40242 (2644.30 seconds)
Cbc0010I After 9100 nodes, 3723 on tree, 15440.529 best solution, best possible -295.40242 (2665.02 seconds)
Cbc0010I After 9200 nodes, 3773 on tree, 15440.529 best solution, best possible -295.40242 (2685.99 seconds)
Cbc0010I After 9300 nodes, 3821 on tree, 15440.529 best solution, best possible -278.05516 (2700.94 seconds)
Cbc0010I After 9400 nodes, 3871 on tree, 15440.529 best solution, best possible -278.05516 (2714.82 seconds)
Cbc0010I After 9500 nodes, 3921 on tree, 15440.529 best solution, best possible -278.05516 (2726.54 seconds)
Cbc0010I After 9600 nodes, 3971 on tree, 15440.529 best solution, best possible -278.05516 (2738.59 seconds)
Cbc0010I After 9700 nodes, 4021 on tree, 15440.529 best solution, best possible -278.05516 (2750.14 seconds)
Cbc0010I After 9800 nodes, 4071 on tree, 15440.529 best solution, best possible -278.05516 (2761.33 seconds)
Cbc0010I After 9900 nodes, 4121 on tree, 15440.529 best solution, best possible -278.05516 (2772.42 seconds)
Cbc0010I After 10000 nodes, 4171 on tree, 15440.529 best solution, best possible -278.05516 (2788.99 seconds)
Cbc0010I After 10100 nodes, 4221 on tree, 15440.529 best solution, best possible -278.05516 (2806.72 seconds)
Cbc0010I After 10200 nodes, 4271 on tree, 15440.529 best solution, best possible -278.05516 (2821.32 seconds)
Cbc0010I After 10300 nodes, 4321 on tree, 15440.529 best solution, best possible -278.05516 (2837.56 seconds)
Cbc0010I After 10400 nodes, 4371 on tree, 15440.529 best solution, best possible -278.05516 (2854.96 seconds)
Cbc0010I After 10500 nodes, 4421 on tree, 15440.529 best solution, best possible -278.05516 (2874.41 seconds)
Cbc0010I After 10600 nodes, 4471 on tree, 15440.529 best solution, best possible -278.05516 (2894.74 seconds)
Cbc0010I After 10700 nodes, 4518 on tree, 15440.529 best solution, best possible -271.06803 (2912.35 seconds)
Cbc0010I After 10800 nodes, 4568 on tree, 15440.529 best solution, best possible -271.06803 (2927.07 seconds)
Cbc0010I After 10900 nodes, 4618 on tree, 15440.529 best solution, best possible -271.06803 (2940.64 seconds)
Cbc0010I After 11000 nodes, 4668 on tree, 15440.529 best solution, best possible -271.06803 (2950.80 seconds)
Cbc0010I After 11100 nodes, 4718 on tree, 15440.529 best solution, best possible -271.06803 (2961.68 seconds)
Cbc0010I After 11200 nodes, 4768 on tree, 15440.529 best solution, best possible -271.06803 (2972.46 seconds)
Cbc0010I After 11300 nodes, 4818 on tree, 15440.529 best solution, best possible -271.06803 (2983.43 seconds)
Cbc0010I After 11400 nodes, 4868 on tree, 15440.529 best solution, best possible -271.06803 (2995.48 seconds)
Cbc0010I After 11500 nodes, 4918 on tree, 15440.529 best solution, best possible -271.06803 (3012.11 seconds)
Cbc0010I After 11600 nodes, 4968 on tree, 15440.529 best solution, best possible -271.06803 (3028.08 seconds)
Cbc0010I After 11700 nodes, 5018 on tree, 15440.529 best solution, best possible -271.06803 (3044.79 seconds)
Cbc0010I After 11800 nodes, 5068 on tree, 15440.529 best solution, best possible -271.06803 (3064.59 seconds)
Cbc0010I After 11900 nodes, 5118 on tree, 15440.529 best solution, best possible -271.06803 (3084.74 seconds)
Cbc0010I After 12000 nodes, 5168 on tree, 15440.529 best solution, best possible -271.06803 (3105.71 seconds)
Cbc0010I After 12100 nodes, 5215 on tree, 15440.529 best solution, best possible -232.8371 (3157.79 seconds)
Cbc0010I After 12200 nodes, 5265 on tree, 15440.529 best solution, best possible -232.8371 (3171.98 seconds)
Cbc0010I After 12300 nodes, 5315 on tree, 15440.529 best solution, best possible -232.8371 (3184.72 seconds)
Cbc0010I After 12400 nodes, 5365 on tree, 15440.529 best solution, best possible -232.8371 (3196.60 seconds)
Cbc0010I After 12500 nodes, 5415 on tree, 15440.529 best solution, best possible -232.8371 (3207.62 seconds)
Cbc0010I After 12600 nodes, 5465 on tree, 15440.529 best solution, best possible -232.8371 (3218.85 seconds)
Cbc0010I After 12700 nodes, 5515 on tree, 15440.529 best solution, best possible -232.8371 (3230.05 seconds)
Cbc0010I After 12800 nodes, 5565 on tree, 15440.529 best solution, best possible -232.8371 (3241.15 seconds)
Cbc0010I After 12900 nodes, 5615 on tree, 15440.529 best solution, best possible -232.8371 (3255.50 seconds)
Cbc0010I After 13000 nodes, 5665 on tree, 15440.529 best solution, best possible -232.8371 (3275.64 seconds)
Cbc0010I After 13100 nodes, 5715 on tree, 15440.529 best solution, best possible -232.8371 (3295.72 seconds)
Cbc0010I After 13200 nodes, 5765 on tree, 15440.529 best solution, best possible -232.8371 (3317.89 seconds)
Cbc0010I After 13300 nodes, 5812 on tree, 15440.529 best solution, best possible -224.67597 (3334.42 seconds)
Cbc0010I After 13400 nodes, 5862 on tree, 15440.529 best solution, best possible -224.67597 (3347.76 seconds)
Cbc0010I After 13500 nodes, 5912 on tree, 15440.529 best solution, best possible -224.67597 (3360.14 seconds)
Cbc0010I After 13600 nodes, 5962 on tree, 15440.529 best solution, best possible -224.67597 (3371.58 seconds)
Cbc0010I After 13700 nodes, 6012 on tree, 15440.529 best solution, best possible -224.67597 (3382.79 seconds)
Cbc0010I After 13800 nodes, 6062 on tree, 15440.529 best solution, best possible -224.67597 (3394.05 seconds)
Cbc0010I After 13900 nodes, 6112 on tree, 15440.529 best solution, best possible -224.67597 (3405.10 seconds)
Cbc0010I After 14000 nodes, 6162 on tree, 15440.529 best solution, best possible -224.67597 (3423.14 seconds)
Cbc0010I After 14100 nodes, 6212 on tree, 15440.529 best solution, best possible -224.67597 (3439.08 seconds)
Cbc0010I After 14200 nodes, 6262 on tree, 15440.529 best solution, best possible -224.67597 (3454.71 seconds)
Cbc0010I After 14300 nodes, 6312 on tree, 15440.529 best solution, best possible -224.67597 (3473.54 seconds)
Cbc0010I After 14400 nodes, 6362 on tree, 15440.529 best solution, best possible -224.67597 (3493.34 seconds)
Cbc0010I After 14500 nodes, 6412 on tree, 15440.529 best solution, best possible -224.67597 (3513.65 seconds)
Cbc0010I After 14600 nodes, 6460 on tree, 15440.529 best solution, best possible -223.26611 (3534.37 seconds)
Cbc0010I After 14700 nodes, 6510 on tree, 15440.529 best solution, best possible -223.26611 (3579.07 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 15440.529 (best possible -223.26611), took 350795 iterations and 14734 nodes (3629.76 seconds)
Cbc0035I Maximum depth 1430, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7551
Linearization cuts added in total:           7551  (separation time: 0.050792s)
Total solve time:                         3630.06s (3630.06s in branch-and-bound)
Lower bound:                             -223.266
Upper bound:                              15440.5  (gap: 6984.47%)
Branch-and-bound nodes:                     14734
Stats: /tmp/jl_cca4SE/model.nl 1510 [var]  510 [int] 1550 [con] 3550 [aux]   7551 [root]     7551 [tot] 0.050792 [sep]  3630.06 [time]  3630.07 [bb]        -2.232661e+02 [lower]         1.544053e+04 [upper]   14734 [nodes]
Performance of                           FBBT:	    376.051s,    18831 runs. fix:          0 shrnk:     4.4745 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    147.063s,        6 runs. fix:          0 shrnk: 2.29032e-07 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p7
