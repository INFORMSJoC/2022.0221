solving instance uflp nlass holmberg 11 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9147.9254      270 6.749174
NLP0014I             2      INFEAS 0.1322912       68 1.048515
Loaded instance "/tmp/jl_CkAREj/model.nl"
Constraints:         1550
Variables:           1510 (510 integer)
Auxiliaries:         3550 (0 integer)

Coin0506I Presolve 5051 (-2500) rows, 2510 (-2550) columns and 13400 (-4160) elements
Clp0006I 0  Obj -17204.447 Primal inf 5.0587549e+12 (1599)
Clp0006I 176  Obj -17204.447 Primal inf 2.2222054e+12 (1531)
Clp0006I 352  Obj -17204.447 Primal inf 1.2025767e+12 (1468)
Clp0006I 528  Obj -17204.447 Primal inf 4.9654328e+11 (1410)
Clp0006I 704  Obj -17204.447 Primal inf 2.6834562e+10 (1339)
Clp0006I 880  Obj -17204.447 Primal inf 9455.7096 (1220)
Clp0006I 1056  Obj -17204.447 Primal inf 3861.9744 (1254)
Clp0006I 1232  Obj -17204.447 Primal inf 3486.8118 (1292)
Clp0006I 1408  Obj -17204.447 Primal inf 3422.4126 (1278)
Clp0006I 1584  Obj -17051.843 Primal inf 3897.7078 (1257)
Clp0006I 1760  Obj -16263.692 Primal inf 6159.5149 (1284)
Clp0006I 1936  Obj -15091.594 Primal inf 7473.5157 (1268)
Clp0006I 2112  Obj -13464.632 Primal inf 7507.101 (1205)
Clp0006I 2288  Obj -10745.901 Primal inf 5927.6662 (1065)
Clp0006I 2464  Obj -7991.0893 Primal inf 3637.4592 (854)
Clp0006I 2640  Obj -7698.2726 Primal inf 170.57406 (530)
Clp0006I 2816  Obj -7483.9709 Primal inf 429.30908 (520)
Clp0006I 2992  Obj -7037.8503 Primal inf 1518.5771 (348)
Clp0006I 3126  Obj -6974.3792
Clp0000I Optimal - objective value -6974.3792
Clp0032I Optimal objective -6974.379167 - 3126 iterations time 0.212, Presolve 0.03
Clp0000I Optimal - objective value -6974.3792
NLP Heuristic: NLP0014I             3         OPT 14676.206      878 14.609041
no solution.
Clp0000I Optimal - objective value -6974.3792
Optimality Based BT: 500 improved bounds
Probing: 441 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from -6974.3792 to -775.63628 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (274.40 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -360.37994 (1493.29 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -319.79426 (1503.34 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -319.79426 (1512.62 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -319.79426 (1521.28 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -319.79426 (1529.31 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -319.79426 (1536.72 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -319.79426 (1544.12 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -319.79426 (1552.55 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -319.79426 (1564.01 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -319.79426 (1573.63 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -319.79426 (1584.63 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -319.79426 (1598.05 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -319.79426 (1612.95 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -319.79426 (1628.46 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -319.79426 (1644.12 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -319.79426 (1656.96 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -319.79426 (1668.98 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -319.79426 (1680.64 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -319.79426 (1691.40 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -319.79426 (1703.19 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -319.79426 (1715.01 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -319.79426 (1727.07 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -319.79426 (1739.14 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -319.79426 (1751.31 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -319.79426 (1763.21 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -319.79426 (1774.95 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -319.79426 (1785.91 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -319.79426 (1796.43 seconds)
Couenne: new cutoff value 1.6900162568e+04 (1820.66 seconds)
Cbc0010I After 2900 nodes, 1446 on tree, 1e+50 best solution, best possible -304.37439 (1807.46 seconds)
Cbc0010I After 3000 nodes, 1496 on tree, 1e+50 best solution, best possible -304.37439 (1820.95 seconds)
Cbc0010I After 3100 nodes, 1546 on tree, 1e+50 best solution, best possible -304.37439 (1832.31 seconds)
Cbc0010I After 3200 nodes, 1596 on tree, 1e+50 best solution, best possible -304.37439 (1843.40 seconds)
Cbc0010I After 3300 nodes, 1646 on tree, 1e+50 best solution, best possible -304.37439 (1854.08 seconds)
Cbc0010I After 3400 nodes, 1696 on tree, 1e+50 best solution, best possible -304.37439 (1864.53 seconds)
Cbc0010I After 3500 nodes, 1746 on tree, 1e+50 best solution, best possible -304.37439 (1875.76 seconds)
Cbc0010I After 3600 nodes, 1796 on tree, 1e+50 best solution, best possible -304.37439 (1887.00 seconds)
Cbc0010I After 3700 nodes, 1846 on tree, 1e+50 best solution, best possible -304.37439 (1904.42 seconds)
Cbc0010I After 3800 nodes, 1896 on tree, 1e+50 best solution, best possible -304.37439 (1923.23 seconds)
Cbc0010I After 3900 nodes, 1946 on tree, 1e+50 best solution, best possible -304.37439 (1940.02 seconds)
Cbc0010I After 4000 nodes, 1996 on tree, 1e+50 best solution, best possible -304.37439 (1959.14 seconds)
Cbc0010I After 4100 nodes, 2046 on tree, 1e+50 best solution, best possible -304.37439 (1977.58 seconds)
Cbc0010I After 4200 nodes, 2096 on tree, 1e+50 best solution, best possible -304.37439 (1998.69 seconds)
Cbc0010I After 4300 nodes, 2146 on tree, 1e+50 best solution, best possible -304.37439 (2019.95 seconds)
Cbc0010I After 4400 nodes, 2192 on tree, 1e+50 best solution, best possible -299.97215 (2068.23 seconds)
Cbc0010I After 4500 nodes, 2242 on tree, 1e+50 best solution, best possible -299.97215 (2080.31 seconds)
Cbc0010I After 4600 nodes, 2292 on tree, 1e+50 best solution, best possible -299.97215 (2092.80 seconds)
Cbc0010I After 4700 nodes, 2342 on tree, 1e+50 best solution, best possible -299.97215 (2104.33 seconds)
Cbc0010I After 4800 nodes, 2392 on tree, 1e+50 best solution, best possible -299.97215 (2115.48 seconds)
Cbc0010I After 4900 nodes, 2442 on tree, 1e+50 best solution, best possible -299.97215 (2126.92 seconds)
Cbc0010I After 5000 nodes, 2492 on tree, 1e+50 best solution, best possible -299.97215 (2138.60 seconds)
Cbc0010I After 5100 nodes, 2542 on tree, 1e+50 best solution, best possible -299.97215 (2150.05 seconds)
Cbc0010I After 5200 nodes, 2592 on tree, 1e+50 best solution, best possible -299.97215 (2168.65 seconds)
Cbc0010I After 5300 nodes, 2642 on tree, 1e+50 best solution, best possible -299.97215 (2187.28 seconds)
Cbc0010I After 5400 nodes, 2692 on tree, 1e+50 best solution, best possible -299.97215 (2207.60 seconds)
Cbc0010I After 5500 nodes, 2742 on tree, 1e+50 best solution, best possible -299.97215 (2228.53 seconds)
Cbc0010I After 5600 nodes, 2792 on tree, 1e+50 best solution, best possible -299.97215 (2249.72 seconds)
Cbc0010I After 5700 nodes, 2839 on tree, 1e+50 best solution, best possible -298.32286 (2269.22 seconds)
Cbc0010I After 5800 nodes, 2889 on tree, 1e+50 best solution, best possible -298.32286 (2282.49 seconds)
Cbc0010I After 5900 nodes, 2939 on tree, 1e+50 best solution, best possible -298.32286 (2296.56 seconds)
Cbc0010I After 6000 nodes, 2989 on tree, 1e+50 best solution, best possible -298.32286 (2309.58 seconds)
Cbc0010I After 6100 nodes, 3039 on tree, 1e+50 best solution, best possible -298.32286 (2321.90 seconds)
Cbc0010I After 6200 nodes, 3089 on tree, 1e+50 best solution, best possible -298.32286 (2333.60 seconds)
Cbc0010I After 6300 nodes, 3139 on tree, 1e+50 best solution, best possible -298.32286 (2345.33 seconds)
Cbc0010I After 6400 nodes, 3189 on tree, 1e+50 best solution, best possible -298.32286 (2356.76 seconds)
Cbc0010I After 6500 nodes, 3239 on tree, 1e+50 best solution, best possible -298.32286 (2368.82 seconds)
Cbc0010I After 6600 nodes, 3289 on tree, 1e+50 best solution, best possible -298.32286 (2389.19 seconds)
Cbc0010I After 6700 nodes, 3339 on tree, 1e+50 best solution, best possible -298.32286 (2407.93 seconds)
Cbc0010I After 6800 nodes, 3389 on tree, 1e+50 best solution, best possible -298.32286 (2429.50 seconds)
Cbc0010I After 6900 nodes, 3439 on tree, 1e+50 best solution, best possible -298.32286 (2450.78 seconds)
Cbc0010I After 7000 nodes, 3488 on tree, 1e+50 best solution, best possible -298.32286 (2472.20 seconds)
Cbc0010I After 7100 nodes, 3538 on tree, 1e+50 best solution, best possible -298.32286 (2490.11 seconds)
Cbc0010I After 7200 nodes, 3588 on tree, 1e+50 best solution, best possible -298.32286 (2506.44 seconds)
Cbc0010I After 7300 nodes, 3638 on tree, 1e+50 best solution, best possible -298.32286 (2521.01 seconds)
Cbc0010I After 7400 nodes, 3688 on tree, 1e+50 best solution, best possible -298.32286 (2536.94 seconds)
Cbc0010I After 7500 nodes, 3738 on tree, 1e+50 best solution, best possible -298.32286 (2553.12 seconds)
Cbc0010I After 7600 nodes, 3788 on tree, 1e+50 best solution, best possible -298.32286 (2569.49 seconds)
Cbc0010I After 7700 nodes, 3838 on tree, 1e+50 best solution, best possible -298.32286 (2585.49 seconds)
Cbc0010I After 7800 nodes, 3888 on tree, 1e+50 best solution, best possible -298.32286 (2601.12 seconds)
Couenne: new cutoff value 1.5440528697e+04 (2623.24 seconds)
Cbc0004I Integer solution of 15440.529 found after 156473 iterations and 7826 nodes (2604.76 seconds)
Cbc0010I After 7900 nodes, 3123 on tree, 15440.529 best solution, best possible -295.40242 (2618.19 seconds)
Cbc0010I After 8000 nodes, 3173 on tree, 15440.529 best solution, best possible -295.40242 (2632.11 seconds)
Cbc0010I After 8100 nodes, 3223 on tree, 15440.529 best solution, best possible -295.40242 (2644.09 seconds)
Cbc0010I After 8200 nodes, 3273 on tree, 15440.529 best solution, best possible -295.40242 (2655.62 seconds)
Cbc0010I After 8300 nodes, 3323 on tree, 15440.529 best solution, best possible -295.40242 (2666.75 seconds)
Cbc0010I After 8400 nodes, 3373 on tree, 15440.529 best solution, best possible -295.40242 (2678.68 seconds)
Cbc0010I After 8500 nodes, 3423 on tree, 15440.529 best solution, best possible -295.40242 (2690.57 seconds)
Cbc0010I After 8600 nodes, 3473 on tree, 15440.529 best solution, best possible -295.40242 (2702.40 seconds)
Cbc0010I After 8700 nodes, 3523 on tree, 15440.529 best solution, best possible -295.40242 (2720.43 seconds)
Cbc0010I After 8800 nodes, 3573 on tree, 15440.529 best solution, best possible -295.40242 (2737.77 seconds)
Cbc0010I After 8900 nodes, 3623 on tree, 15440.529 best solution, best possible -295.40242 (2755.23 seconds)
Cbc0010I After 9000 nodes, 3673 on tree, 15440.529 best solution, best possible -295.40242 (2775.03 seconds)
Cbc0010I After 9100 nodes, 3723 on tree, 15440.529 best solution, best possible -295.40242 (2796.42 seconds)
Cbc0010I After 9200 nodes, 3773 on tree, 15440.529 best solution, best possible -295.40242 (2818.17 seconds)
Cbc0010I After 9300 nodes, 3821 on tree, 15440.529 best solution, best possible -278.05516 (2833.71 seconds)
Cbc0010I After 9400 nodes, 3871 on tree, 15440.529 best solution, best possible -278.05516 (2848.06 seconds)
Cbc0010I After 9500 nodes, 3921 on tree, 15440.529 best solution, best possible -278.05516 (2860.23 seconds)
Cbc0010I After 9600 nodes, 3971 on tree, 15440.529 best solution, best possible -278.05516 (2872.73 seconds)
Cbc0010I After 9700 nodes, 4021 on tree, 15440.529 best solution, best possible -278.05516 (2884.68 seconds)
Cbc0010I After 9800 nodes, 4071 on tree, 15440.529 best solution, best possible -278.05516 (2896.26 seconds)
Cbc0010I After 9900 nodes, 4121 on tree, 15440.529 best solution, best possible -278.05516 (2907.74 seconds)
Cbc0010I After 10000 nodes, 4171 on tree, 15440.529 best solution, best possible -278.05516 (2924.91 seconds)
Cbc0010I After 10100 nodes, 4221 on tree, 15440.529 best solution, best possible -278.05516 (2943.16 seconds)
Cbc0010I After 10200 nodes, 4271 on tree, 15440.529 best solution, best possible -278.05516 (2958.26 seconds)
Cbc0010I After 10300 nodes, 4321 on tree, 15440.529 best solution, best possible -278.05516 (2975.18 seconds)
Cbc0010I After 10400 nodes, 4371 on tree, 15440.529 best solution, best possible -278.05516 (2993.58 seconds)
Cbc0010I After 10500 nodes, 4421 on tree, 15440.529 best solution, best possible -278.05516 (3014.11 seconds)
Cbc0010I After 10600 nodes, 4471 on tree, 15440.529 best solution, best possible -278.05516 (3035.51 seconds)
Cbc0010I After 10700 nodes, 4518 on tree, 15440.529 best solution, best possible -271.06803 (3054.30 seconds)
Cbc0010I After 10800 nodes, 4568 on tree, 15440.529 best solution, best possible -271.06803 (3069.89 seconds)
Cbc0010I After 10900 nodes, 4618 on tree, 15440.529 best solution, best possible -271.06803 (3084.18 seconds)
Cbc0010I After 11000 nodes, 4668 on tree, 15440.529 best solution, best possible -271.06803 (3094.94 seconds)
Cbc0010I After 11100 nodes, 4718 on tree, 15440.529 best solution, best possible -271.06803 (3106.41 seconds)
Cbc0010I After 11200 nodes, 4768 on tree, 15440.529 best solution, best possible -271.06803 (3117.74 seconds)
Cbc0010I After 11300 nodes, 4818 on tree, 15440.529 best solution, best possible -271.06803 (3129.15 seconds)
Cbc0010I After 11400 nodes, 4868 on tree, 15440.529 best solution, best possible -271.06803 (3141.44 seconds)
Cbc0010I After 11500 nodes, 4918 on tree, 15440.529 best solution, best possible -271.06803 (3158.57 seconds)
Cbc0010I After 11600 nodes, 4968 on tree, 15440.529 best solution, best possible -271.06803 (3174.74 seconds)
Cbc0010I After 11700 nodes, 5018 on tree, 15440.529 best solution, best possible -271.06803 (3191.66 seconds)
Cbc0010I After 11800 nodes, 5068 on tree, 15440.529 best solution, best possible -271.06803 (3212.02 seconds)
Cbc0010I After 11900 nodes, 5118 on tree, 15440.529 best solution, best possible -271.06803 (3232.96 seconds)
Cbc0010I After 12000 nodes, 5168 on tree, 15440.529 best solution, best possible -271.06803 (3254.73 seconds)
Cbc0010I After 12100 nodes, 5215 on tree, 15440.529 best solution, best possible -232.8371 (3307.51 seconds)
Cbc0010I After 12200 nodes, 5265 on tree, 15440.529 best solution, best possible -232.8371 (3322.01 seconds)
Cbc0010I After 12300 nodes, 5315 on tree, 15440.529 best solution, best possible -232.8371 (3335.14 seconds)
Cbc0010I After 12400 nodes, 5365 on tree, 15440.529 best solution, best possible -232.8371 (3347.38 seconds)
Cbc0010I After 12500 nodes, 5415 on tree, 15440.529 best solution, best possible -232.8371 (3358.71 seconds)
Cbc0010I After 12600 nodes, 5465 on tree, 15440.529 best solution, best possible -232.8371 (3370.22 seconds)
Cbc0010I After 12700 nodes, 5515 on tree, 15440.529 best solution, best possible -232.8371 (3381.69 seconds)
Cbc0010I After 12800 nodes, 5565 on tree, 15440.529 best solution, best possible -232.8371 (3393.06 seconds)
Cbc0010I After 12900 nodes, 5615 on tree, 15440.529 best solution, best possible -232.8371 (3407.93 seconds)
Cbc0010I After 13000 nodes, 5665 on tree, 15440.529 best solution, best possible -232.8371 (3429.13 seconds)
Cbc0010I After 13100 nodes, 5715 on tree, 15440.529 best solution, best possible -232.8371 (3450.30 seconds)
Cbc0010I After 13200 nodes, 5765 on tree, 15440.529 best solution, best possible -232.8371 (3473.44 seconds)
Cbc0010I After 13300 nodes, 5812 on tree, 15440.529 best solution, best possible -224.67597 (3490.46 seconds)
Cbc0010I After 13400 nodes, 5862 on tree, 15440.529 best solution, best possible -224.67597 (3504.23 seconds)
Cbc0010I After 13500 nodes, 5912 on tree, 15440.529 best solution, best possible -224.67597 (3516.93 seconds)
Cbc0010I After 13600 nodes, 5962 on tree, 15440.529 best solution, best possible -224.67597 (3528.74 seconds)
Cbc0010I After 13700 nodes, 6012 on tree, 15440.529 best solution, best possible -224.67597 (3540.24 seconds)
Cbc0010I After 13800 nodes, 6062 on tree, 15440.529 best solution, best possible -224.67597 (3551.81 seconds)
Cbc0010I After 13900 nodes, 6112 on tree, 15440.529 best solution, best possible -224.67597 (3563.18 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 15440.529 (best possible -224.67597), took 330889 iterations and 13999 nodes (3625.82 seconds)
Cbc0035I Maximum depth 1430, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7551
Linearization cuts added in total:           7551  (separation time: 0.061562s)
Total solve time:                         3626.16s (3626.16s in branch-and-bound)
Lower bound:                             -224.676
Upper bound:                              15440.5  (gap: 6941.46%)
Branch-and-bound nodes:                     13999
Stats: /tmp/jl_CkAREj/model.nl 1510 [var]  510 [int] 1550 [con] 3550 [aux]   7551 [root]     7551 [tot] 0.061562 [sep]  3626.16 [time]  3626.17 [bb]        -2.246760e+02 [lower]         1.544053e+04 [upper]   13999 [nodes]
Performance of                           FBBT:	    363.881s,    17674 runs. fix:          0 shrnk:     4.7129 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    154.057s,        6 runs. fix:          0 shrnk: 2.29032e-07 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p11
