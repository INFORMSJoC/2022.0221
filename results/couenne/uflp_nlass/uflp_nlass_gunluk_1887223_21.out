solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-2.txt exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 496.58132       95 0.856496
Couenne: new cutoff value 4.9658133018e+02 (1.00513 seconds)
NLP0014I             2         OPT 496.58133       31 0.153325
Loaded instance "/tmp/jl_g5fnU0/model.nl"
Constraints:          620
Variables:            610 (210 integer)
Auxiliaries:         1220 (0 integer)

Coin0506I Presolve 3037 (-784) rows, 1009 (-821) columns and 7186 (-1244) elements
Clp0006I 0  Obj 0 Primal inf 14574.575 (1223)
Clp0006I 135  Obj 2.0539806e-15 Primal inf 8568.6977 (1293)
Clp0006I 270  Obj 8.0344061e-16 Primal inf 8738.1937 (1484)
Clp0006I 405  Obj 2.728467e-15 Primal inf 5519.0695 (2009)
Clp0006I 540  Obj 5.7924489e-15 Primal inf 4166.3824 (1748)
Clp0006I 675  Obj 2.5304597e-14 Primal inf 1865.4522 (1478)
Clp0006I 810  Obj 2.0814411e-13 Primal inf 852.06655 (1316)
Clp0006I 945  Obj 1.5268401e-07 Primal inf 759.73495 (1096)
Clp0006I 1080  Obj 0.00032128669 Primal inf 1597.7379 (848)
Clp0006I 1215  Obj 0.00047435464 Primal inf 1447.8371 (606)
Clp0006I 1350  Obj 17.342863 Primal inf 1149.719 (367)
Clp0006I 1485  Obj 278.68744 Primal inf 169.0852 (202)
Clp0006I 1620  Obj 429.84494 Primal inf 6.0832229 (22)
Clp0006I 1634  Obj 430.7152
Clp0000I Optimal - objective value 430.71482
Clp0032I Optimal objective 430.7148228 - 1634 iterations time 0.092, Presolve 0.01
Clp0000I Optimal - objective value 430.71482
NLP Heuristic: NLP0014I             3      INFEAS 0.91865169       60 0.327637
no solution.
Clp0000I Optimal - objective value 430.71482
Optimality Based BT: 169 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 69 added rows had average density of 2
Cbc0013I At root node, 69 cuts changed objective from 430.71482 to 433.05241 in 18 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 542 row cuts average 2.0 elements, 19 column cuts (19 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (11.79 seconds)
Optimality Based BT: 62 improved bounds
Optimality Based BT: 68 improved bounds
Optimality Based BT: 71 improved bounds
Optimality Based BT: 72 improved bounds
Optimality Based BT: 68 improved bounds
Optimality Based BT: 67 improved bounds
Optimality Based BT: 73 improved bounds
Optimality Based BT: 91 improved bounds
Cbc0010I After 100 nodes, 37 on tree, 1e+50 best solution, best possible 449.85924 (159.91 seconds)
Optimality Based BT: 69 improved bounds
Cbc0010I After 200 nodes, 70 on tree, 1e+50 best solution, best possible 454.68805 (215.91 seconds)
Optimality Based BT: 74 improved bounds
Optimality Based BT: 96 improved bounds
Cbc0010I After 300 nodes, 101 on tree, 1e+50 best solution, best possible 459.86295 (244.84 seconds)
Couenne: new cutoff value 4.8100017264e+02 (247.259 seconds)
Optimality Based BT: 141 improved bounds
Cbc0010I After 400 nodes, 121 on tree, 1e+50 best solution, best possible 462.648 (266.45 seconds)
Couenne: new cutoff value 4.7956006591e+02 (267.836 seconds)
Optimality Based BT: 99 improved bounds
Cbc0010I After 500 nodes, 135 on tree, 1e+50 best solution, best possible 465.49601 (299.53 seconds)
Optimality Based BT: 187 improved bounds
Optimality Based BT: 99 improved bounds
Cbc0010I After 600 nodes, 141 on tree, 1e+50 best solution, best possible 467.93839 (318.25 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 110 improved bounds
Cbc0010I After 700 nodes, 147 on tree, 1e+50 best solution, best possible 469.35066 (333.34 seconds)
Optimality Based BT: 102 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 144 on tree, 1e+50 best solution, best possible 471.26804 (356.44 seconds)
Optimality Based BT: 161 improved bounds
Cbc0010I After 900 nodes, 137 on tree, 1e+50 best solution, best possible 473.41631 (370.14 seconds)
Cbc0010I After 1000 nodes, 116 on tree, 1e+50 best solution, best possible 475.89696 (374.48 seconds)
Cbc0010I After 1100 nodes, 81 on tree, 1e+50 best solution, best possible 477.91792 (377.14 seconds)
Cbc0010I After 1200 nodes, 32 on tree, 1e+50 best solution, best possible 483.72841 (378.59 seconds)
Cbc0001I Search completed - best objective 1e+50, took 102945 iterations and 1264 nodes (379.29 seconds)
Cbc0035I Maximum depth 21, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3821
Linearization cuts added in total:           3821  (separation time: 0.013924s)
Total solve time:                         379.388s (379.388s in branch-and-bound)
Lower bound:                               479.56
Upper bound:                               479.56  (gap: 0.00%)
Branch-and-bound nodes:                      1264
Stats: /tmp/jl_g5fnU0/model.nl  610 [var]  210 [int]  620 [con] 1220 [aux]   3821 [root]     3821 [tot] 0.013924 [sep]  379.388 [time]  379.391 [bb]         4.795601e+02 [lower]         4.795601e+02 [upper]    1264 [nodes]
Performance of                           FBBT:	    9.35717s,     2567 runs. fix:  0.0449394 shrnk:    20.7229 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    111.979s,       21 runs. fix:    26.9636 shrnk:    47.2317 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-2.txt
