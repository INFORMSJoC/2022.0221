solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-1.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 99.557708       41 25.408866
NLP0014I             2      INFEAS 0.99999999       33 1.438064
Loaded instance "/tmp/jl_aMQEup/model.nl"
Constraints:         5460
Variables:           5430 (1830 integer)
Auxiliaries:         1861 (0 integer)

Coin0506I Presolve 12600 (-1861) rows, 5370 (-1921) columns and 26880 (-5611) elements
Clp0006I 0  Obj 0 Primal inf 59.99994 (60) Dual inf 1.8e+13 (1800)
Clp0006I 288  Obj 90.409125 Primal inf 55.124936 (64) Dual inf 1.806e+13 (1800)
Clp0006I 576  Obj 237.47283 Primal inf 46.874924 (76) Dual inf 1.1993765e+08 (1800)
Clp0006I 864  Obj 336.90085 Primal inf 41.374916 (84) Dual inf 1.2020202e+08 (1800)
Clp0006I 1152  Obj 420.62551 Primal inf 37.24991 (90) Dual inf 1.2040026e+08 (1800)
Clp0006I 1440  Obj 530.32453 Primal inf 29.687399 (101) Dual inf 1.2076387e+08 (1800)
Clp0006I 1728  Obj 663.47832 Primal inf 22.812389 (111) Dual inf 1.2109429e+08 (1800)
Clp0006I 2016  Obj 988.07702 Primal inf 3.562443 (57) Dual inf 5732309.8 (567)
Clp0006I 2304  Obj 824.84321 Dual inf 58587.22 (1272)
Clp0006I 2587  Obj 492.08125 Dual inf 14500.352 (270)
Clp0006I 2853  Obj 347.89457 Dual inf 247624.29 (355)
Clp0006I 3121  Obj 95.174516 Dual inf 52245.971 (438)
Clp0006I 3409  Obj 62.468878 Dual inf 6125.4138 (283)
Clp0006I 3685  Obj 44.698544 Dual inf 2354.9159 (113)
Clp0006I 3973  Obj 33.795688 Dual inf 1392.7873 (63)
Clp0006I 4261  Obj 25.54569 Dual inf 734.60879 (28)
Clp0006I 4409  Obj 17.374735
Clp0000I Optimal - objective value 17.374735
Clp0000I Optimal - objective value 17.375
Clp0032I Optimal objective 17.375 - 4409 iterations time 0.792, Presolve 0.03
Clp0000I Optimal - objective value 17.375
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 17.375
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2048 added rows had average density of 2
Cbc0013I At root node, 2048 cuts changed objective from 17.375 to 89.615538 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 30700 row cuts average 2.0 elements, 4260 column cuts (5564 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (54.51 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 9.5930165041e+02 (187.259 seconds)
Cbc0012I Integer solution of 959.30165 found by Couenne Rounding NLP after 17675 iterations and 1 nodes (142.19 seconds)
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 8.7870956375e+02 (253.906 seconds)
Cbc0012I Integer solution of 878.70956 found by Couenne Rounding NLP after 18609 iterations and 2 nodes (208.83 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 878.70956 best solution, best possible 96.557414 (761.25 seconds)
Cbc0010I After 200 nodes, 100 on tree, 878.70956 best solution, best possible 96.557414 (827.46 seconds)
Cbc0010I After 300 nodes, 150 on tree, 878.70956 best solution, best possible 96.557414 (877.54 seconds)
Cbc0010I After 400 nodes, 200 on tree, 878.70956 best solution, best possible 96.557414 (910.35 seconds)
Cbc0010I After 500 nodes, 250 on tree, 878.70956 best solution, best possible 96.557414 (938.53 seconds)
Cbc0010I After 600 nodes, 300 on tree, 878.70956 best solution, best possible 96.557414 (964.37 seconds)
Cbc0010I After 700 nodes, 350 on tree, 878.70956 best solution, best possible 96.557414 (988.41 seconds)
Cbc0010I After 800 nodes, 400 on tree, 878.70956 best solution, best possible 96.557414 (1009.24 seconds)
Couenne: new cutoff value 7.9175190724e+02 (1059.86 seconds)
Cbc0010I After 900 nodes, 439 on tree, 878.70956 best solution, best possible 97.333107 (1247.15 seconds)
Cbc0010I After 1000 nodes, 489 on tree, 878.70956 best solution, best possible 97.333107 (1305.64 seconds)
Cbc0010I After 1100 nodes, 539 on tree, 878.70956 best solution, best possible 97.333107 (1350.63 seconds)
Cbc0010I After 1200 nodes, 589 on tree, 878.70956 best solution, best possible 97.333107 (1390.57 seconds)
Cbc0010I After 1300 nodes, 639 on tree, 878.70956 best solution, best possible 97.333107 (1423.89 seconds)
Cbc0010I After 1400 nodes, 689 on tree, 878.70956 best solution, best possible 97.333107 (1451.96 seconds)
Cbc0010I After 1500 nodes, 739 on tree, 878.70956 best solution, best possible 97.333107 (1476.72 seconds)
Cbc0010I After 1600 nodes, 789 on tree, 878.70956 best solution, best possible 97.333107 (1498.33 seconds)
Cbc0010I After 1700 nodes, 839 on tree, 878.70956 best solution, best possible 97.333107 (1516.89 seconds)
Cbc0010I After 1800 nodes, 889 on tree, 878.70956 best solution, best possible 97.333107 (1534.97 seconds)
Couenne: new cutoff value 7.1313275561e+02 (1591.29 seconds)
Cbc0004I Integer solution of 713.13276 found after 1565478 iterations and 1867 nodes (1546.24 seconds)
Cbc0010I After 1900 nodes, 847 on tree, 713.13276 best solution, best possible 98.065149 (1566.91 seconds)
Cbc0010I After 2000 nodes, 897 on tree, 713.13276 best solution, best possible 98.065149 (1627.15 seconds)
Cbc0010I After 2100 nodes, 947 on tree, 713.13276 best solution, best possible 98.065149 (1677.27 seconds)
Cbc0010I After 2200 nodes, 997 on tree, 713.13276 best solution, best possible 98.065149 (1712.36 seconds)
Cbc0010I After 2300 nodes, 1047 on tree, 713.13276 best solution, best possible 98.065149 (1743.82 seconds)
Cbc0010I After 2400 nodes, 1097 on tree, 713.13276 best solution, best possible 98.065149 (1777.39 seconds)
Cbc0010I After 2500 nodes, 1147 on tree, 713.13276 best solution, best possible 98.065149 (1806.70 seconds)
Cbc0010I After 2600 nodes, 1197 on tree, 713.13276 best solution, best possible 98.065149 (1834.68 seconds)
Cbc0010I After 2700 nodes, 1238 on tree, 713.13276 best solution, best possible 98.125772 (1886.73 seconds)
Cbc0010I After 2800 nodes, 1288 on tree, 713.13276 best solution, best possible 98.125772 (1939.50 seconds)
Cbc0010I After 2900 nodes, 1338 on tree, 713.13276 best solution, best possible 98.125772 (1970.39 seconds)
Cbc0010I After 3000 nodes, 1388 on tree, 713.13276 best solution, best possible 98.125772 (1994.58 seconds)
Cbc0010I After 3100 nodes, 1438 on tree, 713.13276 best solution, best possible 98.125772 (2017.59 seconds)
Cbc0010I After 3200 nodes, 1488 on tree, 713.13276 best solution, best possible 98.125772 (2038.81 seconds)
Cbc0010I After 3300 nodes, 1538 on tree, 713.13276 best solution, best possible 98.125772 (2057.77 seconds)
Cbc0010I After 3400 nodes, 1588 on tree, 713.13276 best solution, best possible 98.125772 (2074.31 seconds)
Couenne: new cutoff value 5.4953813314e+02 (2122.49 seconds)
Cbc0004I Integer solution of 549.53813 found after 2880146 iterations and 3421 nodes (2077.44 seconds)
Cbc0010I After 3500 nodes, 1382 on tree, 549.53813 best solution, best possible 98.339241 (2128.06 seconds)
Cbc0010I After 3600 nodes, 1432 on tree, 549.53813 best solution, best possible 98.339241 (2189.02 seconds)
Cbc0010I After 3700 nodes, 1482 on tree, 549.53813 best solution, best possible 98.339241 (2234.60 seconds)
Cbc0010I After 3800 nodes, 1532 on tree, 549.53813 best solution, best possible 98.339241 (2260.52 seconds)
Cbc0010I After 3900 nodes, 1582 on tree, 549.53813 best solution, best possible 98.339241 (2278.61 seconds)
Cbc0010I After 4000 nodes, 1619 on tree, 549.53813 best solution, best possible 98.623047 (2306.46 seconds)
Cbc0010I After 4100 nodes, 1669 on tree, 549.53813 best solution, best possible 98.623047 (2359.69 seconds)
Cbc0010I After 4200 nodes, 1719 on tree, 549.53813 best solution, best possible 98.623047 (2414.68 seconds)
Cbc0010I After 4300 nodes, 1769 on tree, 549.53813 best solution, best possible 98.623047 (2455.70 seconds)
Cbc0010I After 4400 nodes, 1819 on tree, 549.53813 best solution, best possible 98.623047 (2487.96 seconds)
Cbc0010I After 4500 nodes, 1869 on tree, 549.53813 best solution, best possible 98.623047 (2518.10 seconds)
Cbc0010I After 4600 nodes, 1912 on tree, 549.53813 best solution, best possible 98.752738 (2544.52 seconds)
Cbc0010I After 4700 nodes, 1962 on tree, 549.53813 best solution, best possible 98.752738 (2604.92 seconds)
Cbc0010I After 4800 nodes, 2012 on tree, 549.53813 best solution, best possible 98.752738 (2662.28 seconds)
Cbc0010I After 4900 nodes, 2062 on tree, 549.53813 best solution, best possible 98.752738 (2712.63 seconds)
Cbc0010I After 5000 nodes, 2112 on tree, 549.53813 best solution, best possible 98.752738 (2748.87 seconds)
Cbc0010I After 5100 nodes, 2162 on tree, 549.53813 best solution, best possible 98.752738 (2779.29 seconds)
Cbc0010I After 5200 nodes, 2212 on tree, 549.53813 best solution, best possible 98.752738 (2806.82 seconds)
Cbc0010I After 5300 nodes, 2253 on tree, 549.53813 best solution, best possible 98.752738 (2831.02 seconds)
Cbc0010I After 5400 nodes, 2279 on tree, 549.53813 best solution, best possible 98.965615 (2858.74 seconds)
Cbc0010I After 5500 nodes, 2329 on tree, 549.53813 best solution, best possible 98.965615 (2914.03 seconds)
Cbc0010I After 5600 nodes, 2379 on tree, 549.53813 best solution, best possible 98.965615 (2962.48 seconds)
Cbc0010I After 5700 nodes, 2429 on tree, 549.53813 best solution, best possible 98.965615 (2998.76 seconds)
Cbc0010I After 5800 nodes, 2479 on tree, 549.53813 best solution, best possible 98.965615 (3024.15 seconds)
Cbc0010I After 5900 nodes, 2529 on tree, 549.53813 best solution, best possible 98.965615 (3048.29 seconds)
Cbc0010I After 6000 nodes, 2573 on tree, 549.53813 best solution, best possible 98.965615 (3070.41 seconds)
Cbc0010I After 6100 nodes, 2607 on tree, 549.53813 best solution, best possible 98.981241 (3108.66 seconds)
Cbc0010I After 6200 nodes, 2657 on tree, 549.53813 best solution, best possible 98.981241 (3172.17 seconds)
Cbc0010I After 6300 nodes, 2707 on tree, 549.53813 best solution, best possible 98.981241 (3233.99 seconds)
Cbc0010I After 6400 nodes, 2757 on tree, 549.53813 best solution, best possible 98.981241 (3279.21 seconds)
Cbc0010I After 6500 nodes, 2807 on tree, 549.53813 best solution, best possible 98.981241 (3306.19 seconds)
Cbc0010I After 6600 nodes, 2857 on tree, 549.53813 best solution, best possible 98.981241 (3331.77 seconds)
Cbc0010I After 6700 nodes, 2896 on tree, 549.53813 best solution, best possible 98.981241 (3352.55 seconds)
Cbc0010I After 6800 nodes, 2936 on tree, 549.53813 best solution, best possible 99.042817 (3400.31 seconds)
Cbc0010I After 6900 nodes, 2986 on tree, 549.53813 best solution, best possible 99.042817 (3451.39 seconds)
Cbc0010I After 7000 nodes, 3036 on tree, 549.53813 best solution, best possible 99.042817 (3490.90 seconds)
Cbc0010I After 7100 nodes, 3086 on tree, 549.53813 best solution, best possible 99.042817 (3515.04 seconds)
Cbc0010I After 7200 nodes, 3136 on tree, 549.53813 best solution, best possible 99.042817 (3536.44 seconds)
Cbc0010I After 7300 nodes, 3170 on tree, 549.53813 best solution, best possible 99.042817 (3554.13 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 549.53813 (best possible 99.042817), took 6669590 iterations and 7308 nodes (3564.93 seconds)
Cbc0035I Maximum depth 517, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      14461
Linearization cuts added in total:          14461  (separation time: 0.037241s)
Total solve time:                         3565.83s (3565.83s in branch-and-bound)
Lower bound:                              99.0428
Upper bound:                              549.538  (gap: 450.30%)
Branch-and-bound nodes:                      7308
Stats: /tmp/jl_aMQEup/model.nl 5430 [var] 1830 [int] 5460 [con] 1861 [aux]  14461 [root]    14461 [tot] 0.037241 [sep]  3565.83 [time]  3565.85 [bb]         9.904282e+01 [lower]         5.495381e+02 [upper]    7308 [nodes]
Performance of                           FBBT:	    74.4049s,    14270 runs. fix:          0 shrnk:   0.741225 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    18.5612s,        6 runs. fix:   0.363636 shrnk:    47.5829 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-1.txt
