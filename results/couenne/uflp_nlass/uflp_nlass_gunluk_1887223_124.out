solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-2.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 282.58416       95 4.78065
NLP0014I             2         OPT 801.92886      121 3.313986
Couenne: new cutoff value 8.0192886228e+02 (28.3571 seconds)
Loaded instance "/tmp/jl_VMzHmH/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 11191 (-850) rows, 4771 (-890) columns and 24721 (-1740) elements
Clp0006I 0  Obj 0 Primal inf 2421.5039 (1640)
Clp0006I 280  Obj 0 Primal inf 2437.8143 (1680)
Clp0006I 560  Obj 0 Primal inf 2155.6192 (1680)
Clp0006I 840  Obj 1.4353114e-16 Primal inf 2054.7268 (1706)
Clp0006I 1120  Obj 1.5016808e-12 Primal inf 2611.6186 (1780)
Clp0006I 1400  Obj 1.2956396e-12 Primal inf 2606.6664 (1693)
Clp0006I 1680  Obj 2.4426785e-12 Primal inf 3431.9486 (1696)
Clp0006I 1960  Obj 3.1540338e-12 Primal inf 2404.1533 (1552)
Clp0006I 2240  Obj 5.0545875e-11 Primal inf 2541.0798 (1467)
Clp0006I 2520  Obj 2.7306703e-09 Primal inf 2005.6748 (1391)
Clp0006I 2800  Obj 1.177659e-05 Primal inf 2203.7195 (1438)
Clp0006I 3080  Obj 4.7989841e-05 Primal inf 2267.3275 (1346)
Clp0006I 3360  Obj 5.8279532e-05 Primal inf 3503.7299 (1561)
Clp0006I 3640  Obj 2.1473396e-05 Primal inf 938.24609 (806)
Clp0006I 3920  Obj 10.814462 Primal inf 158.91605 (503)
Clp0006I 4200  Obj 22.406899 Primal inf 111.47691 (292)
Clp0006I 4480  Obj 24.501158 Primal inf 61.355051 (109)
Clp0006I 4610  Obj 25.112548
Clp0000I Optimal - objective value 25.112542
Clp0032I Optimal objective 25.11254164 - 4610 iterations time 0.612, Presolve 0.06
Clp0000I Optimal - objective value 25.112542
Cbc0012I Integer solution of 801.92886 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.02 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 25.112542
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 977 added rows had average density of 2
Cbc0013I At root node, 977 cuts changed objective from 25.112542 to 81.501831 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 13967 row cuts average 2.0 elements, 446 column cuts (1243 active)
Cbc0010I After 0 nodes, 1 on tree, 801.92886 best solution, best possible 81.501831 (86.99 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.7313867672e+02 (477.866 seconds)
Cbc0012I Integer solution of 773.13868 found by Couenne Rounding NLP after 17119 iterations and 3 nodes (448.53 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.6211179632e+02 (960.152 seconds)
Cbc0012I Integer solution of 762.1118 found by Couenne Rounding NLP after 22282 iterations and 12 nodes (930.81 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.9054047795e+02 (1209.32 seconds)
Cbc0012I Integer solution of 690.54048 found by Couenne Rounding NLP after 23456 iterations and 14 nodes (1179.98 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 690.54048 best solution, best possible 84.625429 (1694.06 seconds)
Cbc0010I After 200 nodes, 100 on tree, 690.54048 best solution, best possible 84.625429 (1734.64 seconds)
Cbc0010I After 300 nodes, 150 on tree, 690.54048 best solution, best possible 84.625429 (1757.57 seconds)
Cbc0010I After 400 nodes, 200 on tree, 690.54048 best solution, best possible 84.625429 (1776.62 seconds)
Cbc0010I After 500 nodes, 250 on tree, 690.54048 best solution, best possible 84.625429 (1797.13 seconds)
Cbc0010I After 600 nodes, 300 on tree, 690.54048 best solution, best possible 84.625429 (1817.45 seconds)
Cbc0010I After 700 nodes, 350 on tree, 690.54048 best solution, best possible 84.625429 (1837.78 seconds)
Cbc0010I After 800 nodes, 400 on tree, 690.54048 best solution, best possible 84.625429 (1858.27 seconds)
Cbc0010I After 900 nodes, 450 on tree, 690.54048 best solution, best possible 84.625429 (1878.95 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 690.54048 best solution, best possible 84.625429 (1897.97 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 690.54048 best solution, best possible 84.625429 (1916.56 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 690.54048 best solution, best possible 84.625429 (1933.87 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 690.54048 best solution, best possible 84.625429 (1951.56 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 690.54048 best solution, best possible 84.625429 (1967.52 seconds)
Cbc0010I After 1500 nodes, 749 on tree, 690.54048 best solution, best possible 84.625429 (1983.45 seconds)
Cbc0010I After 1600 nodes, 797 on tree, 690.54048 best solution, best possible 84.625429 (1998.61 seconds)
Cbc0010I After 1700 nodes, 845 on tree, 690.54048 best solution, best possible 84.625429 (2013.50 seconds)
Cbc0010I After 1800 nodes, 894 on tree, 690.54048 best solution, best possible 84.625429 (2030.73 seconds)
Cbc0010I After 1900 nodes, 944 on tree, 690.54048 best solution, best possible 84.625429 (2045.92 seconds)
Cbc0010I After 2000 nodes, 992 on tree, 690.54048 best solution, best possible 84.625429 (2063.14 seconds)
Cbc0010I After 2100 nodes, 1041 on tree, 690.54048 best solution, best possible 84.625429 (2078.54 seconds)
Cbc0010I After 2200 nodes, 1091 on tree, 690.54048 best solution, best possible 84.625429 (2094.00 seconds)
Cbc0010I After 2300 nodes, 1141 on tree, 690.54048 best solution, best possible 84.625429 (2109.37 seconds)
Cbc0010I After 2400 nodes, 1191 on tree, 690.54048 best solution, best possible 84.625429 (2124.56 seconds)
Cbc0010I After 2500 nodes, 1241 on tree, 690.54048 best solution, best possible 84.625429 (2139.89 seconds)
Cbc0010I After 2600 nodes, 1291 on tree, 690.54048 best solution, best possible 84.625429 (2155.27 seconds)
Cbc0010I After 2700 nodes, 1340 on tree, 690.54048 best solution, best possible 84.625429 (2170.81 seconds)
Cbc0010I After 2800 nodes, 1389 on tree, 690.54048 best solution, best possible 84.625429 (2186.27 seconds)
Cbc0010I After 2900 nodes, 1439 on tree, 690.54048 best solution, best possible 84.625429 (2201.82 seconds)
Cbc0010I After 3000 nodes, 1489 on tree, 690.54048 best solution, best possible 84.625429 (2217.45 seconds)
Cbc0010I After 3100 nodes, 1539 on tree, 690.54048 best solution, best possible 84.625429 (2233.51 seconds)
Cbc0010I After 3200 nodes, 1589 on tree, 690.54048 best solution, best possible 84.625429 (2250.15 seconds)
Cbc0010I After 3300 nodes, 1639 on tree, 690.54048 best solution, best possible 84.625429 (2266.12 seconds)
Cbc0010I After 3400 nodes, 1689 on tree, 690.54048 best solution, best possible 84.625429 (2282.06 seconds)
Cbc0010I After 3500 nodes, 1738 on tree, 690.54048 best solution, best possible 84.625429 (2296.98 seconds)
Cbc0010I After 3600 nodes, 1786 on tree, 690.54048 best solution, best possible 84.625429 (2311.19 seconds)
Cbc0010I After 3700 nodes, 1835 on tree, 690.54048 best solution, best possible 84.625429 (2325.21 seconds)
Cbc0010I After 3800 nodes, 1885 on tree, 690.54048 best solution, best possible 84.625429 (2339.17 seconds)
Couenne: new cutoff value 6.1564113632e+02 (2376.42 seconds)
Cbc0010I After 3900 nodes, 1933 on tree, 690.54048 best solution, best possible 84.792002 (2365.83 seconds)
Cbc0010I After 4000 nodes, 1983 on tree, 690.54048 best solution, best possible 84.792002 (2402.57 seconds)
Cbc0010I After 4100 nodes, 2033 on tree, 690.54048 best solution, best possible 84.792002 (2424.81 seconds)
Cbc0010I After 4200 nodes, 2083 on tree, 690.54048 best solution, best possible 84.792002 (2441.28 seconds)
Cbc0010I After 4300 nodes, 2130 on tree, 690.54048 best solution, best possible 84.835358 (2490.92 seconds)
Cbc0010I After 4400 nodes, 2180 on tree, 690.54048 best solution, best possible 84.835358 (2530.24 seconds)
Cbc0010I After 4500 nodes, 2230 on tree, 690.54048 best solution, best possible 84.835358 (2557.80 seconds)
Cbc0010I After 4600 nodes, 2280 on tree, 690.54048 best solution, best possible 84.835358 (2575.77 seconds)
Cbc0010I After 4700 nodes, 2330 on tree, 690.54048 best solution, best possible 84.835358 (2596.16 seconds)
Cbc0010I After 4800 nodes, 2380 on tree, 690.54048 best solution, best possible 84.835358 (2616.44 seconds)
Cbc0010I After 4900 nodes, 2430 on tree, 690.54048 best solution, best possible 84.835358 (2636.81 seconds)
Cbc0010I After 5000 nodes, 2480 on tree, 690.54048 best solution, best possible 84.835358 (2655.47 seconds)
Cbc0010I After 5100 nodes, 2530 on tree, 690.54048 best solution, best possible 84.835358 (2673.51 seconds)
Cbc0010I After 5200 nodes, 2580 on tree, 690.54048 best solution, best possible 84.835358 (2691.14 seconds)
Cbc0010I After 5300 nodes, 2630 on tree, 690.54048 best solution, best possible 84.835358 (2707.92 seconds)
Cbc0010I After 5400 nodes, 2680 on tree, 690.54048 best solution, best possible 84.835358 (2723.33 seconds)
Cbc0010I After 5500 nodes, 2730 on tree, 690.54048 best solution, best possible 84.835358 (2739.10 seconds)
Cbc0010I After 5600 nodes, 2780 on tree, 690.54048 best solution, best possible 84.835358 (2753.47 seconds)
Cbc0010I After 5700 nodes, 2829 on tree, 690.54048 best solution, best possible 84.835358 (2767.99 seconds)
Cbc0010I After 5800 nodes, 2878 on tree, 690.54048 best solution, best possible 84.835358 (2782.21 seconds)
Cbc0010I After 5900 nodes, 2927 on tree, 690.54048 best solution, best possible 84.835358 (2796.59 seconds)
Cbc0010I After 6000 nodes, 2975 on tree, 690.54048 best solution, best possible 84.835358 (2810.82 seconds)
Cbc0010I After 6100 nodes, 3024 on tree, 690.54048 best solution, best possible 84.835358 (2825.03 seconds)
Cbc0010I After 6200 nodes, 3074 on tree, 690.54048 best solution, best possible 84.835358 (2839.15 seconds)
Cbc0010I After 6300 nodes, 3124 on tree, 690.54048 best solution, best possible 84.835358 (2853.30 seconds)
Cbc0010I After 6400 nodes, 3174 on tree, 690.54048 best solution, best possible 84.835358 (2867.45 seconds)
Cbc0010I After 6500 nodes, 3224 on tree, 690.54048 best solution, best possible 84.835358 (2881.70 seconds)
Cbc0010I After 6600 nodes, 3273 on tree, 690.54048 best solution, best possible 84.835358 (2896.07 seconds)
Cbc0010I After 6700 nodes, 3322 on tree, 690.54048 best solution, best possible 84.835358 (2910.58 seconds)
Cbc0010I After 6800 nodes, 3372 on tree, 690.54048 best solution, best possible 84.835358 (2925.19 seconds)
Cbc0010I After 6900 nodes, 3422 on tree, 690.54048 best solution, best possible 84.835358 (2940.31 seconds)
Cbc0010I After 7000 nodes, 3472 on tree, 690.54048 best solution, best possible 84.835358 (2955.67 seconds)
Cbc0010I After 7100 nodes, 3522 on tree, 690.54048 best solution, best possible 84.835358 (2970.25 seconds)
Cbc0010I After 7200 nodes, 3572 on tree, 690.54048 best solution, best possible 84.835358 (2985.08 seconds)
Cbc0010I After 7300 nodes, 3622 on tree, 690.54048 best solution, best possible 84.835358 (2999.57 seconds)
Cbc0010I After 7400 nodes, 3671 on tree, 690.54048 best solution, best possible 84.835358 (3013.29 seconds)
Cbc0010I After 7500 nodes, 3721 on tree, 690.54048 best solution, best possible 84.835358 (3026.19 seconds)
Cbc0010I After 7600 nodes, 3771 on tree, 690.54048 best solution, best possible 84.835358 (3039.06 seconds)
Cbc0010I After 7700 nodes, 3821 on tree, 690.54048 best solution, best possible 84.835358 (3051.95 seconds)
Cbc0010I After 7800 nodes, 3871 on tree, 690.54048 best solution, best possible 84.835358 (3064.63 seconds)
Cbc0010I After 7900 nodes, 3921 on tree, 690.54048 best solution, best possible 84.835358 (3077.42 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 8000 nodes, 3969 on tree, 690.54048 best solution, best possible 84.856699 (3285.21 seconds)
Cbc0010I After 8100 nodes, 4019 on tree, 690.54048 best solution, best possible 84.856699 (3319.16 seconds)
Cbc0010I After 8200 nodes, 4069 on tree, 690.54048 best solution, best possible 84.856699 (3340.52 seconds)
Cbc0010I After 8300 nodes, 4119 on tree, 690.54048 best solution, best possible 84.856699 (3356.98 seconds)
Cbc0010I After 8400 nodes, 4169 on tree, 690.54048 best solution, best possible 84.856699 (3373.19 seconds)
Cbc0010I After 8500 nodes, 4217 on tree, 690.54048 best solution, best possible 85.033268 (3537.45 seconds)
Cbc0010I After 8600 nodes, 4267 on tree, 690.54048 best solution, best possible 85.033268 (3566.95 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 690.54048 (best possible 85.033268), took 954527 iterations and 8622 nodes (3620.70 seconds)
Cbc0035I Maximum depth 1923, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.06286s)
Total solve time:                         3621.43s (3621.43s in branch-and-bound)
Lower bound:                              85.0333
Upper bound:                              615.641  (gap: 616.75%)
Branch-and-bound nodes:                      8622
Stats: /tmp/jl_VMzHmH/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.06286 [sep]  3621.43 [time]  3621.45 [bb]         8.503327e+01 [lower]         6.156411e+02 [upper]    8622 [nodes]
Performance of                           FBBT:	    232.708s,    11649 runs. fix: 0.000327519 shrnk:    124.068 ubd:          0 2ubd:          0 infeas:          6
Performance of                           OBBT:	    15.8632s,       10 runs. fix:   0.117647 shrnk:  0.0645028 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-2.txt
