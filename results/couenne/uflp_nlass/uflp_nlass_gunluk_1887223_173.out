solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-7.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 166.60174       32 2.499478
NLP0014I             2      INFEAS 0.99999999       33 0.695946
Loaded instance "/tmp/jl_mG4rsW/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 8800 (-1641) rows, 3980 (-1681) columns and 19120 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 79.99996 (40)
Clp0006I 251  Obj 1.6447034e-16 Primal inf 112.5629 (212)
Clp0006I 502  Obj 2.0690132e-16 Primal inf 127.47372 (236)
Clp0006I 753  Obj 1.6649364e-16 Primal inf 95.944109 (236)
Clp0006I 1004  Obj 1.8595935e-16 Primal inf 96.347942 (202)
Clp0006I 1255  Obj 1.6401314e-16 Primal inf 121.99312 (255)
Clp0006I 1506  Obj 1.8179674e-16 Primal inf 96.21729 (213)
Clp0006I 1757  Obj 1.7065961e-16 Primal inf 160.26801 (277)
Clp0006I 2008  Obj 1.7515027e-16 Primal inf 96.086639 (224)
Clp0006I 2259  Obj 1.7857812e-16 Primal inf 132.65739 (242)
Clp0006I 2510  Obj 1.6723176e-16 Primal inf 95.955987 (235)
Clp0006I 2761  Obj 1.8595935e-16 Primal inf 96.35982 (201)
Clp0006I 3012  Obj 1.6347587e-16 Primal inf 116.77381 (252)
Clp0006I 3263  Obj 17.355463 Primal inf 54.334157 (181)
Clp0006I 3386  Obj 20.871441
Clp0000I Optimal - objective value 20.871441
Clp0032I Optimal objective 20.8714414 - 3386 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 20.871441
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 20.871441
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 937 added rows had average density of 2
Cbc0013I At root node, 937 cuts changed objective from 20.871441 to 92.780508 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14273 row cuts average 2.0 elements, 840 column cuts (1529 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (77.79 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.4853763360e+02 (102.965 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.1351604828e+02 (346.91 seconds)
Cbc0012I Integer solution of 813.51605 found by Couenne Rounding NLP after 11577 iterations and 2 nodes (323.18 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 813.51605 best solution, best possible 105.05371 (753.65 seconds)
Cbc0010I After 200 nodes, 100 on tree, 813.51605 best solution, best possible 105.05371 (787.05 seconds)
Cbc0010I After 300 nodes, 150 on tree, 813.51605 best solution, best possible 105.05371 (816.31 seconds)
Cbc0010I After 400 nodes, 200 on tree, 813.51605 best solution, best possible 105.05371 (841.88 seconds)
Cbc0010I After 500 nodes, 247 on tree, 813.51605 best solution, best possible 105.25884 (883.94 seconds)
Cbc0010I After 600 nodes, 297 on tree, 813.51605 best solution, best possible 105.77357 (923.82 seconds)
Cbc0010I After 700 nodes, 347 on tree, 813.51605 best solution, best possible 105.77357 (958.94 seconds)
Cbc0010I After 800 nodes, 397 on tree, 813.51605 best solution, best possible 105.77357 (988.12 seconds)
Cbc0010I After 900 nodes, 447 on tree, 813.51605 best solution, best possible 105.77357 (1012.62 seconds)
Cbc0010I After 1000 nodes, 490 on tree, 813.51605 best solution, best possible 105.7797 (1036.75 seconds)
Cbc0010I After 1100 nodes, 540 on tree, 813.51605 best solution, best possible 105.7797 (1069.44 seconds)
Cbc0010I After 1200 nodes, 590 on tree, 813.51605 best solution, best possible 105.7797 (1090.25 seconds)
Cbc0010I After 1300 nodes, 640 on tree, 813.51605 best solution, best possible 105.7797 (1110.23 seconds)
Cbc0010I After 1400 nodes, 690 on tree, 813.51605 best solution, best possible 105.7797 (1132.15 seconds)
Cbc0010I After 1500 nodes, 736 on tree, 813.51605 best solution, best possible 105.85545 (1164.09 seconds)
Cbc0010I After 1600 nodes, 786 on tree, 813.51605 best solution, best possible 105.85545 (1196.28 seconds)
Cbc0010I After 1700 nodes, 836 on tree, 813.51605 best solution, best possible 105.85545 (1218.01 seconds)
Cbc0010I After 1800 nodes, 886 on tree, 813.51605 best solution, best possible 105.85545 (1238.25 seconds)
Cbc0010I After 1900 nodes, 933 on tree, 813.51605 best solution, best possible 106.01687 (1264.00 seconds)
Cbc0010I After 2000 nodes, 983 on tree, 813.51605 best solution, best possible 106.01687 (1297.30 seconds)
Cbc0010I After 2100 nodes, 1033 on tree, 813.51605 best solution, best possible 106.01687 (1319.47 seconds)
Cbc0010I After 2200 nodes, 1083 on tree, 813.51605 best solution, best possible 106.01687 (1338.37 seconds)
Cbc0010I After 2300 nodes, 1133 on tree, 813.51605 best solution, best possible 106.01687 (1357.28 seconds)
Cbc0010I After 2400 nodes, 1183 on tree, 813.51605 best solution, best possible 106.01687 (1377.59 seconds)
Cbc0010I After 2500 nodes, 1226 on tree, 813.51605 best solution, best possible 106.21055 (1413.71 seconds)
Cbc0010I After 2600 nodes, 1276 on tree, 813.51605 best solution, best possible 106.21055 (1448.83 seconds)
Cbc0010I After 2700 nodes, 1326 on tree, 813.51605 best solution, best possible 106.21055 (1476.26 seconds)
Cbc0010I After 2800 nodes, 1376 on tree, 813.51605 best solution, best possible 106.21055 (1497.45 seconds)
Cbc0010I After 2900 nodes, 1426 on tree, 813.51605 best solution, best possible 106.21055 (1516.87 seconds)
Cbc0010I After 3000 nodes, 1472 on tree, 813.51605 best solution, best possible 106.28286 (1544.26 seconds)
Cbc0010I After 3100 nodes, 1522 on tree, 813.51605 best solution, best possible 106.28286 (1571.90 seconds)
Cbc0010I After 3200 nodes, 1572 on tree, 813.51605 best solution, best possible 106.28286 (1590.85 seconds)
Cbc0010I After 3300 nodes, 1622 on tree, 813.51605 best solution, best possible 106.28286 (1610.98 seconds)
Cbc0010I After 3400 nodes, 1667 on tree, 813.51605 best solution, best possible 106.30061 (1642.94 seconds)
Cbc0010I After 3500 nodes, 1717 on tree, 813.51605 best solution, best possible 106.30061 (1670.24 seconds)
Cbc0010I After 3600 nodes, 1767 on tree, 813.51605 best solution, best possible 106.30061 (1689.95 seconds)
Cbc0010I After 3700 nodes, 1817 on tree, 813.51605 best solution, best possible 106.30061 (1710.04 seconds)
Cbc0010I After 3800 nodes, 1863 on tree, 813.51605 best solution, best possible 106.55571 (1744.26 seconds)
Cbc0010I After 3900 nodes, 1913 on tree, 813.51605 best solution, best possible 106.55571 (1775.81 seconds)
Cbc0010I After 4000 nodes, 1963 on tree, 813.51605 best solution, best possible 106.55571 (1796.64 seconds)
Cbc0010I After 4100 nodes, 2013 on tree, 813.51605 best solution, best possible 106.55571 (1816.44 seconds)
Cbc0010I After 4200 nodes, 2063 on tree, 813.51605 best solution, best possible 106.55571 (1836.90 seconds)
Cbc0010I After 4300 nodes, 2113 on tree, 813.51605 best solution, best possible 106.55571 (1857.47 seconds)
Cbc0010I After 4400 nodes, 2163 on tree, 813.51605 best solution, best possible 106.55571 (1878.17 seconds)
Cbc0010I After 4500 nodes, 2213 on tree, 813.51605 best solution, best possible 106.55571 (1899.07 seconds)
Cbc0010I After 4600 nodes, 2263 on tree, 813.51605 best solution, best possible 106.55571 (1920.04 seconds)
Cbc0010I After 4700 nodes, 2313 on tree, 813.51605 best solution, best possible 106.55571 (1940.83 seconds)
Cbc0010I After 4800 nodes, 2363 on tree, 813.51605 best solution, best possible 106.55571 (1959.99 seconds)
Cbc0010I After 4900 nodes, 2413 on tree, 813.51605 best solution, best possible 106.55571 (1977.18 seconds)
Cbc0010I After 5000 nodes, 2463 on tree, 813.51605 best solution, best possible 106.55571 (1996.23 seconds)
Cbc0010I After 5100 nodes, 2513 on tree, 813.51605 best solution, best possible 106.55571 (2013.59 seconds)
Cbc0010I After 5200 nodes, 2563 on tree, 813.51605 best solution, best possible 106.55571 (2029.81 seconds)
Cbc0010I After 5300 nodes, 2613 on tree, 813.51605 best solution, best possible 106.55571 (2045.51 seconds)
Cbc0010I After 5400 nodes, 2663 on tree, 813.51605 best solution, best possible 106.55571 (2060.66 seconds)
Cbc0010I After 5500 nodes, 2712 on tree, 813.51605 best solution, best possible 106.55571 (2075.70 seconds)
Cbc0010I After 5600 nodes, 2762 on tree, 813.51605 best solution, best possible 106.55571 (2090.66 seconds)
Cbc0010I After 5700 nodes, 2812 on tree, 813.51605 best solution, best possible 106.55571 (2105.84 seconds)
Cbc0010I After 5800 nodes, 2861 on tree, 813.51605 best solution, best possible 106.55571 (2119.95 seconds)
Cbc0010I After 5900 nodes, 2911 on tree, 813.51605 best solution, best possible 106.55571 (2134.10 seconds)
Cbc0010I After 6000 nodes, 2960 on tree, 813.51605 best solution, best possible 106.55571 (2148.01 seconds)
Cbc0010I After 6100 nodes, 3009 on tree, 813.51605 best solution, best possible 106.55571 (2162.22 seconds)
Cbc0010I After 6200 nodes, 3058 on tree, 813.51605 best solution, best possible 106.55571 (2176.25 seconds)
Cbc0010I After 6300 nodes, 3107 on tree, 813.51605 best solution, best possible 106.55571 (2190.29 seconds)
Cbc0010I After 6400 nodes, 3156 on tree, 813.51605 best solution, best possible 106.55571 (2204.82 seconds)
Cbc0010I After 6500 nodes, 3206 on tree, 813.51605 best solution, best possible 106.55571 (2219.70 seconds)
Cbc0010I After 6600 nodes, 3255 on tree, 813.51605 best solution, best possible 106.55571 (2234.37 seconds)
Cbc0010I After 6700 nodes, 3305 on tree, 813.51605 best solution, best possible 106.55571 (2249.25 seconds)
Cbc0010I After 6800 nodes, 3354 on tree, 813.51605 best solution, best possible 106.55571 (2264.33 seconds)
Cbc0010I After 6900 nodes, 3403 on tree, 813.51605 best solution, best possible 106.55571 (2279.42 seconds)
Cbc0010I After 7000 nodes, 3452 on tree, 813.51605 best solution, best possible 106.55571 (2294.73 seconds)
Cbc0010I After 7100 nodes, 3502 on tree, 813.51605 best solution, best possible 106.55571 (2309.89 seconds)
Cbc0010I After 7200 nodes, 3552 on tree, 813.51605 best solution, best possible 106.55571 (2325.09 seconds)
Cbc0010I After 7300 nodes, 3602 on tree, 813.51605 best solution, best possible 106.55571 (2340.47 seconds)
Cbc0010I After 7400 nodes, 3651 on tree, 813.51605 best solution, best possible 106.55571 (2355.88 seconds)
Cbc0010I After 7500 nodes, 3701 on tree, 813.51605 best solution, best possible 106.55571 (2371.35 seconds)
Cbc0010I After 7600 nodes, 3749 on tree, 813.51605 best solution, best possible 106.55571 (2386.89 seconds)
Cbc0010I After 7700 nodes, 3799 on tree, 813.51605 best solution, best possible 106.55571 (2402.62 seconds)
Cbc0010I After 7800 nodes, 3849 on tree, 813.51605 best solution, best possible 106.55571 (2418.46 seconds)
Cbc0010I After 7900 nodes, 3899 on tree, 813.51605 best solution, best possible 106.55571 (2434.46 seconds)
Cbc0010I After 8000 nodes, 3949 on tree, 813.51605 best solution, best possible 106.55571 (2450.50 seconds)
Cbc0010I After 8100 nodes, 3999 on tree, 813.51605 best solution, best possible 106.55571 (2466.73 seconds)
Cbc0010I After 8200 nodes, 4049 on tree, 813.51605 best solution, best possible 106.55571 (2482.94 seconds)
Cbc0010I After 8300 nodes, 4099 on tree, 813.51605 best solution, best possible 106.55571 (2498.38 seconds)
Cbc0010I After 8400 nodes, 4149 on tree, 813.51605 best solution, best possible 106.55571 (2513.64 seconds)
Cbc0010I After 8500 nodes, 4199 on tree, 813.51605 best solution, best possible 106.55571 (2528.56 seconds)
Cbc0010I After 8600 nodes, 4245 on tree, 813.51605 best solution, best possible 106.55571 (2543.53 seconds)
Couenne: new cutoff value 7.2033156410e+02 (2575.5 seconds)
Cbc0004I Integer solution of 720.33156 found after 1679733 iterations and 8657 nodes (2551.78 seconds)
Cbc0010I After 8700 nodes, 2324 on tree, 720.33156 best solution, best possible 106.57462 (2617.44 seconds)
Cbc0010I After 8800 nodes, 2374 on tree, 720.33156 best solution, best possible 106.57462 (2647.13 seconds)
Cbc0010I After 8900 nodes, 2424 on tree, 720.33156 best solution, best possible 106.57462 (2665.50 seconds)
Cbc0010I After 9000 nodes, 2472 on tree, 720.33156 best solution, best possible 106.57462 (2684.95 seconds)
Cbc0010I After 9100 nodes, 2520 on tree, 720.33156 best solution, best possible 106.60047 (2717.61 seconds)
Cbc0010I After 9200 nodes, 2570 on tree, 720.33156 best solution, best possible 106.60047 (2736.04 seconds)
Cbc0010I After 9300 nodes, 2620 on tree, 720.33156 best solution, best possible 106.60047 (2753.18 seconds)
Cbc0010I After 9400 nodes, 2670 on tree, 720.33156 best solution, best possible 106.60047 (2772.79 seconds)
Cbc0010I After 9500 nodes, 2716 on tree, 720.33156 best solution, best possible 106.64944 (2799.30 seconds)
Cbc0010I After 9600 nodes, 2766 on tree, 720.33156 best solution, best possible 106.64944 (2822.29 seconds)
Cbc0010I After 9700 nodes, 2816 on tree, 720.33156 best solution, best possible 106.64944 (2840.59 seconds)
Cbc0010I After 9800 nodes, 2866 on tree, 720.33156 best solution, best possible 106.64944 (2860.71 seconds)
Cbc0010I After 9900 nodes, 2914 on tree, 720.33156 best solution, best possible 106.67311 (2891.74 seconds)
Cbc0010I After 10000 nodes, 2964 on tree, 720.33156 best solution, best possible 106.67311 (2916.35 seconds)
Cbc0010I After 10100 nodes, 3014 on tree, 720.33156 best solution, best possible 106.67311 (2936.11 seconds)
Cbc0010I After 10200 nodes, 3064 on tree, 720.33156 best solution, best possible 106.67311 (2956.01 seconds)
Cbc0010I After 10300 nodes, 3113 on tree, 720.33156 best solution, best possible 106.67311 (2975.86 seconds)
Cbc0010I After 10400 nodes, 3161 on tree, 720.33156 best solution, best possible 106.79866 (3010.39 seconds)
Cbc0010I After 10500 nodes, 3211 on tree, 720.33156 best solution, best possible 106.79866 (3040.04 seconds)
Cbc0010I After 10600 nodes, 3261 on tree, 720.33156 best solution, best possible 106.79866 (3061.60 seconds)
Cbc0010I After 10700 nodes, 3311 on tree, 720.33156 best solution, best possible 106.79866 (3080.59 seconds)
Cbc0010I After 10800 nodes, 3358 on tree, 720.33156 best solution, best possible 106.85098 (3113.88 seconds)
Cbc0010I After 10900 nodes, 3408 on tree, 720.33156 best solution, best possible 106.85098 (3138.80 seconds)
Cbc0010I After 11000 nodes, 3458 on tree, 720.33156 best solution, best possible 106.85098 (3157.73 seconds)
Cbc0010I After 11100 nodes, 3508 on tree, 720.33156 best solution, best possible 106.85098 (3177.74 seconds)
Cbc0010I After 11200 nodes, 3554 on tree, 720.33156 best solution, best possible 106.8517 (3211.66 seconds)
Cbc0010I After 11300 nodes, 3604 on tree, 720.33156 best solution, best possible 106.8517 (3244.38 seconds)
Cbc0010I After 11400 nodes, 3654 on tree, 720.33156 best solution, best possible 106.8517 (3266.42 seconds)
Cbc0010I After 11500 nodes, 3702 on tree, 720.33156 best solution, best possible 106.88364 (3286.72 seconds)
Cbc0010I After 11600 nodes, 3752 on tree, 720.33156 best solution, best possible 106.88364 (3320.00 seconds)
Cbc0010I After 11700 nodes, 3802 on tree, 720.33156 best solution, best possible 106.88364 (3343.35 seconds)
Cbc0010I After 11800 nodes, 3852 on tree, 720.33156 best solution, best possible 106.88364 (3365.63 seconds)
Cbc0010I After 11900 nodes, 3902 on tree, 720.33156 best solution, best possible 106.88364 (3386.54 seconds)
Cbc0010I After 12000 nodes, 3952 on tree, 720.33156 best solution, best possible 106.88364 (3406.49 seconds)
Cbc0010I After 12100 nodes, 4002 on tree, 720.33156 best solution, best possible 106.88364 (3427.03 seconds)
Cbc0010I After 12200 nodes, 4046 on tree, 720.33156 best solution, best possible 106.89086 (3452.19 seconds)
Cbc0010I After 12300 nodes, 4096 on tree, 720.33156 best solution, best possible 106.89086 (3485.07 seconds)
Cbc0010I After 12400 nodes, 4146 on tree, 720.33156 best solution, best possible 106.89086 (3507.03 seconds)
Cbc0010I After 12500 nodes, 4196 on tree, 720.33156 best solution, best possible 106.89086 (3526.67 seconds)
Cbc0010I After 12600 nodes, 4242 on tree, 720.33156 best solution, best possible 106.96805 (3553.82 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 720.33156 (best possible 106.96805), took 3129992 iterations and 12670 nodes (3581.31 seconds)
Cbc0035I Maximum depth 2484, 1 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.056699s)
Total solve time:                         3581.55s (3581.55s in branch-and-bound)
Lower bound:                              106.968
Upper bound:                              720.332  (gap: 568.10%)
Branch-and-bound nodes:                     12670
Stats: /tmp/jl_mG4rsW/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.056699 [sep]  3581.55 [time]  3581.56 [bb]         1.069680e+02 [lower]         7.203316e+02 [upper]   12670 [nodes]
Performance of                           FBBT:	     382.75s,    21422 runs. fix: 0.000535743 shrnk:  0.0019268 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.72494s,        6 runs. fix:     0.1875 shrnk:    23.5847 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-7.txt
