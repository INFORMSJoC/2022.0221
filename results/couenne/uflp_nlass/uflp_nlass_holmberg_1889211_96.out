solving instance uflp nlass holmberg 10 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 7620.1955      294 7.227896
NLP0014I             2      INFEAS 0.10146983       52 0.843128
Loaded instance "/tmp/jl_MW0Zkb/model.nl"
Constraints:         1550
Variables:           1510 (510 integer)
Auxiliaries:         3550 (0 integer)

Coin0506I Presolve 5051 (-2500) rows, 2510 (-2550) columns and 13400 (-4160) elements
Clp0006I 0  Obj -17204.447 Primal inf 5.0587549e+12 (1599)
Clp0006I 176  Obj -17204.447 Primal inf 2.2222054e+12 (1531)
Clp0006I 352  Obj -17204.447 Primal inf 1.2025767e+12 (1468)
Clp0006I 528  Obj -17204.447 Primal inf 4.9654328e+11 (1410)
Clp0006I 704  Obj -17204.447 Primal inf 2.6834562e+10 (1339)
Clp0006I 880  Obj -17204.447 Primal inf 9455.7096 (1220)
Clp0006I 1056  Obj -17204.447 Primal inf 3861.9744 (1254)
Clp0006I 1232  Obj -17204.447 Primal inf 3486.8118 (1292)
Clp0006I 1408  Obj -17204.447 Primal inf 3422.4126 (1278)
Clp0006I 1584  Obj -17051.843 Primal inf 3897.7078 (1257)
Clp0006I 1760  Obj -16263.692 Primal inf 6159.5149 (1284)
Clp0006I 1936  Obj -15091.594 Primal inf 7473.5157 (1268)
Clp0006I 2112  Obj -13464.632 Primal inf 7507.101 (1205)
Clp0006I 2288  Obj -10745.901 Primal inf 5927.6662 (1065)
Clp0006I 2464  Obj -7991.0893 Primal inf 3637.4592 (854)
Clp0006I 2640  Obj -7698.2726 Primal inf 170.57406 (530)
Clp0006I 2816  Obj -7367.1239 Primal inf 194.47703 (327)
Clp0006I 2992  Obj -7234.4864 Primal inf 130.10461 (192)
Clp0006I 3017  Obj -7218.6937
Clp0000I Optimal - objective value -7218.6937
Clp0032I Optimal objective -7218.693669 - 3017 iterations time 0.192, Presolve 0.02
Clp0000I Optimal - objective value -7218.6937
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -7218.6937
Optimality Based BT: 500 improved bounds
Probing: 359 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from -7218.6937 to -7218.6937 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (159.92 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -6967.3923 (1379.38 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -6967.3923 (1387.26 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -6967.3923 (1394.99 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -6967.3923 (1402.78 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -6967.3923 (1410.40 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -6967.3923 (1418.08 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -6967.3923 (1425.78 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -6967.3923 (1433.49 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -6967.3923 (1441.16 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -6967.3923 (1453.26 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -6967.3923 (1467.42 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -6967.3923 (1481.57 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -6967.3923 (1495.65 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -6967.3923 (1509.58 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -6967.3923 (1523.86 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -6967.3923 (1539.10 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -6967.3923 (1554.74 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -6967.3923 (1570.64 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -6967.3923 (1586.67 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -6967.3923 (1603.34 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -6967.3923 (1618.76 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -6967.3923 (1634.04 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -6967.3923 (1649.47 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -6967.3923 (1662.70 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -6967.3923 (1674.66 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -6967.3923 (1689.11 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -6967.3923 (1704.55 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -6967.3923 (1719.91 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -6967.3923 (1734.85 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -6967.3923 (1749.66 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -6967.3923 (1765.30 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -6967.3923 (1781.02 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -6967.3923 (1796.80 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -6967.3923 (1812.94 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -6967.3923 (1828.76 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -6967.3923 (1844.41 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -6967.3923 (1860.08 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible -6967.3923 (1875.50 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible -6967.3923 (1890.99 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible -6967.3923 (1906.64 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible -6967.3923 (1922.54 seconds)
Cbc0010I After 4200 nodes, 2100 on tree, 1e+50 best solution, best possible -6967.3923 (1938.33 seconds)
Cbc0010I After 4300 nodes, 2150 on tree, 1e+50 best solution, best possible -6967.3923 (1954.13 seconds)
Cbc0010I After 4400 nodes, 2200 on tree, 1e+50 best solution, best possible -6967.3923 (1969.26 seconds)
Cbc0010I After 4500 nodes, 2250 on tree, 1e+50 best solution, best possible -6967.3923 (1984.71 seconds)
Cbc0010I After 4600 nodes, 2300 on tree, 1e+50 best solution, best possible -6967.3923 (1999.62 seconds)
Cbc0010I After 4700 nodes, 2350 on tree, 1e+50 best solution, best possible -6967.3923 (2014.06 seconds)
Cbc0010I After 4800 nodes, 2400 on tree, 1e+50 best solution, best possible -6967.3923 (2027.70 seconds)
Cbc0010I After 4900 nodes, 2450 on tree, 1e+50 best solution, best possible -6967.3923 (2041.26 seconds)
Cbc0010I After 5000 nodes, 2500 on tree, 1e+50 best solution, best possible -6967.3923 (2054.86 seconds)
Cbc0010I After 5100 nodes, 2550 on tree, 1e+50 best solution, best possible -6967.3923 (2065.29 seconds)
Couenne: new cutoff value 1.6630863715e+04 (2089.04 seconds)
Optimality Based BT: 135 improved bounds
Optimality Based BT: 263 improved bounds
Cbc0010I After 5200 nodes, 2598 on tree, 1e+50 best solution, best possible -6939.4336 (2914.88 seconds)
Cbc0010I After 5300 nodes, 2648 on tree, 1e+50 best solution, best possible -6939.4336 (2957.62 seconds)
Cbc0010I After 5400 nodes, 2698 on tree, 1e+50 best solution, best possible -6939.4336 (2969.47 seconds)
Cbc0010I After 5500 nodes, 2748 on tree, 1e+50 best solution, best possible -6939.4336 (2980.90 seconds)
Cbc0010I After 5600 nodes, 2798 on tree, 1e+50 best solution, best possible -6939.4336 (2992.39 seconds)
Cbc0010I After 5700 nodes, 2848 on tree, 1e+50 best solution, best possible -6939.4336 (3003.65 seconds)
Cbc0010I After 5800 nodes, 2898 on tree, 1e+50 best solution, best possible -6939.4336 (3014.91 seconds)
Cbc0010I After 5900 nodes, 2948 on tree, 1e+50 best solution, best possible -6939.4336 (3026.16 seconds)
Cbc0010I After 6000 nodes, 2998 on tree, 1e+50 best solution, best possible -6939.4336 (3037.70 seconds)
Cbc0010I After 6100 nodes, 3048 on tree, 1e+50 best solution, best possible -6939.4336 (3049.07 seconds)
Cbc0010I After 6200 nodes, 3098 on tree, 1e+50 best solution, best possible -6939.4336 (3065.72 seconds)
Cbc0010I After 6300 nodes, 3148 on tree, 1e+50 best solution, best possible -6939.4336 (3087.39 seconds)
Cbc0010I After 6400 nodes, 3198 on tree, 1e+50 best solution, best possible -6939.4336 (3108.91 seconds)
Cbc0010I After 6500 nodes, 3248 on tree, 1e+50 best solution, best possible -6939.4336 (3130.83 seconds)
Cbc0010I After 6600 nodes, 3298 on tree, 1e+50 best solution, best possible -6939.4336 (3152.77 seconds)
Cbc0010I After 6700 nodes, 3348 on tree, 1e+50 best solution, best possible -6939.4336 (3174.74 seconds)
Cbc0010I After 6800 nodes, 3398 on tree, 1e+50 best solution, best possible -6939.4336 (3196.58 seconds)
Cbc0010I After 6900 nodes, 3448 on tree, 1e+50 best solution, best possible -6939.4336 (3218.25 seconds)
Cbc0010I After 7000 nodes, 3498 on tree, 1e+50 best solution, best possible -6939.4336 (3240.64 seconds)
Cbc0010I After 7100 nodes, 3548 on tree, 1e+50 best solution, best possible -6939.4336 (3263.50 seconds)
Cbc0010I After 7200 nodes, 3598 on tree, 1e+50 best solution, best possible -6939.4336 (3287.07 seconds)
Cbc0010I After 7300 nodes, 3648 on tree, 1e+50 best solution, best possible -6939.4336 (3310.39 seconds)
Cbc0010I After 7400 nodes, 3698 on tree, 1e+50 best solution, best possible -6939.4336 (3333.96 seconds)
Cbc0010I After 7500 nodes, 3748 on tree, 1e+50 best solution, best possible -6939.4336 (3357.47 seconds)
Cbc0010I After 7600 nodes, 3798 on tree, 1e+50 best solution, best possible -6939.4336 (3380.96 seconds)
Cbc0010I After 7700 nodes, 3848 on tree, 1e+50 best solution, best possible -6939.4336 (3404.12 seconds)
Cbc0010I After 7800 nodes, 3898 on tree, 1e+50 best solution, best possible -6939.4336 (3422.23 seconds)
Cbc0010I After 7900 nodes, 3948 on tree, 1e+50 best solution, best possible -6939.4336 (3440.53 seconds)
Cbc0010I After 8000 nodes, 3998 on tree, 1e+50 best solution, best possible -6939.4336 (3463.66 seconds)
Cbc0010I After 8100 nodes, 4048 on tree, 1e+50 best solution, best possible -6939.4336 (3490.47 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -6939.4336), took 79707 iterations and 8131 nodes (3609.72 seconds)
Cbc0035I Maximum depth 2595, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7551
Linearization cuts added in total:           7551  (separation time: 0.059766s)
Total solve time:                         3609.92s (3609.92s in branch-and-bound)
Lower bound:                             -6939.43
Upper bound:                              16630.9  (gap: 339.61%)
Branch-and-bound nodes:                      8131
Stats: /tmp/jl_MW0Zkb/model.nl 1510 [var]  510 [int] 1550 [con] 3550 [aux]   7551 [root]     7551 [tot] 0.059766 [sep]  3609.92 [time]  3609.93 [bb]        -6.939434e+03 [lower]         1.663086e+04 [upper]    8131 [nodes]
Performance of                           FBBT:	    279.457s,    13724 runs. fix:          0 shrnk:    11.2779 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    237.735s,        9 runs. fix:          0 shrnk:   0.976681 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p10
