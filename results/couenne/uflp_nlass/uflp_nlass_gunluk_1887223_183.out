solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 172.62744       30 2.511183
NLP0014I             2      INFEAS 0.99999999       33 0.705438
Loaded instance "/tmp/jl_O0G6F0/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 8800 (-1641) rows, 3980 (-1681) columns and 19120 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 79.99996 (40)
Clp0006I 251  Obj 1.6447034e-16 Primal inf 112.5629 (212)
Clp0006I 502  Obj 2.0690132e-16 Primal inf 127.47372 (236)
Clp0006I 753  Obj 1.6649364e-16 Primal inf 95.944109 (236)
Clp0006I 1004  Obj 1.8595935e-16 Primal inf 96.347942 (202)
Clp0006I 1255  Obj 1.6401314e-16 Primal inf 121.99312 (255)
Clp0006I 1506  Obj 1.8179674e-16 Primal inf 96.21729 (213)
Clp0006I 1757  Obj 1.7065961e-16 Primal inf 160.26801 (277)
Clp0006I 2008  Obj 1.7515027e-16 Primal inf 96.086639 (224)
Clp0006I 2259  Obj 1.7857812e-16 Primal inf 132.65739 (242)
Clp0006I 2510  Obj 1.6723176e-16 Primal inf 95.955987 (235)
Clp0006I 2761  Obj 1.8595935e-16 Primal inf 96.35982 (201)
Clp0006I 3012  Obj 1.6347587e-16 Primal inf 116.77381 (252)
Clp0006I 3263  Obj 18.011024 Primal inf 45.259153 (143)
Clp0006I 3376  Obj 22.788009
Clp0000I Optimal - objective value 22.788009
Clp0032I Optimal objective 22.78800891 - 3376 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 22.788009
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 22.788009
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 924 added rows had average density of 2
Cbc0013I At root node, 924 cuts changed objective from 22.788009 to 96.298492 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14860 row cuts average 2.0 elements, 880 column cuts (1425 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (79.06 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.6479461429e+02 (346.265 seconds)
Cbc0012I Integer solution of 964.79461 found by Couenne Rounding NLP after 15181 iterations and 2 nodes (322.16 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 8.7626929578e+02 (588.959 seconds)
Cbc0012I Integer solution of 876.2693 found by Couenne Rounding NLP after 18113 iterations and 4 nodes (564.86 seconds)
Cbc0010I After 100 nodes, 50 on tree, 876.2693 best solution, best possible 102.77414 (860.85 seconds)
Cbc0010I After 200 nodes, 100 on tree, 876.2693 best solution, best possible 102.77414 (890.03 seconds)
Cbc0010I After 300 nodes, 150 on tree, 876.2693 best solution, best possible 102.77414 (911.46 seconds)
Cbc0010I After 400 nodes, 198 on tree, 876.2693 best solution, best possible 102.77414 (933.93 seconds)
Cbc0010I After 500 nodes, 247 on tree, 876.2693 best solution, best possible 103.02985 (1045.38 seconds)
Cbc0010I After 600 nodes, 297 on tree, 876.2693 best solution, best possible 103.02985 (1084.05 seconds)
Cbc0010I After 700 nodes, 347 on tree, 876.2693 best solution, best possible 103.02985 (1117.05 seconds)
Cbc0010I After 800 nodes, 397 on tree, 876.2693 best solution, best possible 103.02985 (1141.76 seconds)
Cbc0010I After 900 nodes, 447 on tree, 876.2693 best solution, best possible 103.02985 (1162.64 seconds)
Cbc0010I After 1000 nodes, 494 on tree, 876.2693 best solution, best possible 103.21449 (1207.88 seconds)
Cbc0010I After 1100 nodes, 544 on tree, 876.2693 best solution, best possible 103.21449 (1245.34 seconds)
Cbc0010I After 1200 nodes, 594 on tree, 876.2693 best solution, best possible 103.21449 (1274.06 seconds)
Cbc0010I After 1300 nodes, 644 on tree, 876.2693 best solution, best possible 103.21449 (1293.85 seconds)
Cbc0010I After 1400 nodes, 694 on tree, 876.2693 best solution, best possible 103.21449 (1315.54 seconds)
Cbc0010I After 1500 nodes, 744 on tree, 876.2693 best solution, best possible 103.21449 (1337.52 seconds)
Cbc0010I After 1600 nodes, 794 on tree, 876.2693 best solution, best possible 103.21449 (1359.50 seconds)
Cbc0010I After 1700 nodes, 844 on tree, 876.2693 best solution, best possible 103.21449 (1381.36 seconds)
Cbc0010I After 1800 nodes, 894 on tree, 876.2693 best solution, best possible 103.21449 (1402.08 seconds)
Cbc0010I After 1900 nodes, 944 on tree, 876.2693 best solution, best possible 103.21449 (1419.97 seconds)
Cbc0010I After 2000 nodes, 994 on tree, 876.2693 best solution, best possible 103.21449 (1435.94 seconds)
Cbc0010I After 2100 nodes, 1044 on tree, 876.2693 best solution, best possible 103.21449 (1450.78 seconds)
Cbc0010I After 2200 nodes, 1094 on tree, 876.2693 best solution, best possible 103.21449 (1465.40 seconds)
Cbc0010I After 2300 nodes, 1144 on tree, 876.2693 best solution, best possible 103.21449 (1479.08 seconds)
Cbc0010I After 2400 nodes, 1194 on tree, 876.2693 best solution, best possible 103.21449 (1492.96 seconds)
Cbc0010I After 2500 nodes, 1244 on tree, 876.2693 best solution, best possible 103.21449 (1507.46 seconds)
Cbc0010I After 2600 nodes, 1294 on tree, 876.2693 best solution, best possible 103.21449 (1521.43 seconds)
Cbc0010I After 2700 nodes, 1344 on tree, 876.2693 best solution, best possible 103.21449 (1535.70 seconds)
Cbc0010I After 2800 nodes, 1394 on tree, 876.2693 best solution, best possible 103.21449 (1549.77 seconds)
Cbc0010I After 2900 nodes, 1444 on tree, 876.2693 best solution, best possible 103.21449 (1564.10 seconds)
Cbc0010I After 3000 nodes, 1494 on tree, 876.2693 best solution, best possible 103.21449 (1578.44 seconds)
Cbc0010I After 3100 nodes, 1544 on tree, 876.2693 best solution, best possible 103.21449 (1592.83 seconds)
Cbc0010I After 3200 nodes, 1594 on tree, 876.2693 best solution, best possible 103.21449 (1607.36 seconds)
Cbc0010I After 3300 nodes, 1644 on tree, 876.2693 best solution, best possible 103.21449 (1622.00 seconds)
Cbc0010I After 3400 nodes, 1694 on tree, 876.2693 best solution, best possible 103.21449 (1636.88 seconds)
Cbc0010I After 3500 nodes, 1744 on tree, 876.2693 best solution, best possible 103.21449 (1652.00 seconds)
Cbc0010I After 3600 nodes, 1794 on tree, 876.2693 best solution, best possible 103.21449 (1666.55 seconds)
Cbc0010I After 3700 nodes, 1843 on tree, 876.2693 best solution, best possible 103.21449 (1680.06 seconds)
Couenne: new cutoff value 8.2344671035e+02 (1713.38 seconds)
Cbc0010I After 3800 nodes, 1887 on tree, 876.2693 best solution, best possible 103.24518 (1782.45 seconds)
Cbc0010I After 3900 nodes, 1937 on tree, 876.2693 best solution, best possible 103.24518 (1827.64 seconds)
Cbc0010I After 4000 nodes, 1987 on tree, 876.2693 best solution, best possible 103.24518 (1856.83 seconds)
Cbc0010I After 4100 nodes, 2037 on tree, 876.2693 best solution, best possible 103.24518 (1878.60 seconds)
Cbc0010I After 4200 nodes, 2087 on tree, 876.2693 best solution, best possible 103.24518 (1898.40 seconds)
Cbc0010I After 4300 nodes, 2137 on tree, 876.2693 best solution, best possible 103.24518 (1918.43 seconds)
Cbc0010I After 4400 nodes, 2187 on tree, 876.2693 best solution, best possible 103.24518 (1939.13 seconds)
Cbc0010I After 4500 nodes, 2232 on tree, 876.2693 best solution, best possible 103.24808 (1967.40 seconds)
Cbc0010I After 4600 nodes, 2282 on tree, 876.2693 best solution, best possible 103.24808 (1990.22 seconds)
Cbc0010I After 4700 nodes, 2332 on tree, 876.2693 best solution, best possible 103.24808 (2013.08 seconds)
Cbc0010I After 4800 nodes, 2382 on tree, 876.2693 best solution, best possible 103.24808 (2031.87 seconds)
Cbc0010I After 4900 nodes, 2429 on tree, 876.2693 best solution, best possible 103.30525 (2056.47 seconds)
Cbc0010I After 5000 nodes, 2479 on tree, 876.2693 best solution, best possible 103.30525 (2087.16 seconds)
Cbc0010I After 5100 nodes, 2529 on tree, 876.2693 best solution, best possible 103.30525 (2112.47 seconds)
Cbc0010I After 5200 nodes, 2579 on tree, 876.2693 best solution, best possible 103.30525 (2131.07 seconds)
Cbc0010I After 5300 nodes, 2629 on tree, 876.2693 best solution, best possible 103.30525 (2149.21 seconds)
Cbc0010I After 5400 nodes, 2679 on tree, 876.2693 best solution, best possible 103.30525 (2169.33 seconds)
Cbc0010I After 5500 nodes, 2729 on tree, 876.2693 best solution, best possible 103.30525 (2189.74 seconds)
Cbc0010I After 5600 nodes, 2779 on tree, 876.2693 best solution, best possible 103.30525 (2210.25 seconds)
Cbc0010I After 5700 nodes, 2829 on tree, 876.2693 best solution, best possible 103.30525 (2230.94 seconds)
Cbc0010I After 5800 nodes, 2879 on tree, 876.2693 best solution, best possible 103.30525 (2249.66 seconds)
Cbc0010I After 5900 nodes, 2929 on tree, 876.2693 best solution, best possible 103.30525 (2267.25 seconds)
Cbc0010I After 6000 nodes, 2979 on tree, 876.2693 best solution, best possible 103.30525 (2283.59 seconds)
Cbc0010I After 6100 nodes, 3029 on tree, 876.2693 best solution, best possible 103.30525 (2298.56 seconds)
Cbc0010I After 6200 nodes, 3079 on tree, 876.2693 best solution, best possible 103.30525 (2313.61 seconds)
Cbc0010I After 6300 nodes, 3128 on tree, 876.2693 best solution, best possible 103.30525 (2328.27 seconds)
Cbc0010I After 6400 nodes, 3178 on tree, 876.2693 best solution, best possible 103.30525 (2343.02 seconds)
Cbc0010I After 6500 nodes, 3228 on tree, 876.2693 best solution, best possible 103.30525 (2356.01 seconds)
Cbc0010I After 6600 nodes, 3277 on tree, 876.2693 best solution, best possible 103.30525 (2369.04 seconds)
Cbc0010I After 6700 nodes, 3325 on tree, 876.2693 best solution, best possible 103.30525 (2381.51 seconds)
Cbc0010I After 6800 nodes, 3374 on tree, 876.2693 best solution, best possible 103.30525 (2394.14 seconds)
Cbc0010I After 6900 nodes, 3423 on tree, 876.2693 best solution, best possible 103.30525 (2406.94 seconds)
Cbc0010I After 7000 nodes, 3472 on tree, 876.2693 best solution, best possible 103.30525 (2419.75 seconds)
Cbc0010I After 7100 nodes, 3519 on tree, 876.2693 best solution, best possible 103.30525 (2432.82 seconds)
Cbc0010I After 7200 nodes, 3568 on tree, 876.2693 best solution, best possible 103.30525 (2445.66 seconds)
Cbc0010I After 7300 nodes, 3618 on tree, 876.2693 best solution, best possible 103.30525 (2458.75 seconds)
Cbc0010I After 7400 nodes, 3668 on tree, 876.2693 best solution, best possible 103.30525 (2472.01 seconds)
Cbc0010I After 7500 nodes, 3718 on tree, 876.2693 best solution, best possible 103.30525 (2485.10 seconds)
Cbc0010I After 7600 nodes, 3768 on tree, 876.2693 best solution, best possible 103.30525 (2498.30 seconds)
Cbc0010I After 7700 nodes, 3818 on tree, 876.2693 best solution, best possible 103.30525 (2511.54 seconds)
Cbc0010I After 7800 nodes, 3868 on tree, 876.2693 best solution, best possible 103.30525 (2524.82 seconds)
Cbc0010I After 7900 nodes, 3918 on tree, 876.2693 best solution, best possible 103.30525 (2538.29 seconds)
Cbc0010I After 8000 nodes, 3968 on tree, 876.2693 best solution, best possible 103.30525 (2551.79 seconds)
Cbc0010I After 8100 nodes, 4018 on tree, 876.2693 best solution, best possible 103.30525 (2564.45 seconds)
Cbc0010I After 8200 nodes, 4068 on tree, 876.2693 best solution, best possible 103.30525 (2576.84 seconds)
Cbc0010I After 8300 nodes, 4112 on tree, 876.2693 best solution, best possible 103.30525 (2589.40 seconds)
Couenne: new cutoff value 7.7860237529e+02 (2617.15 seconds)
Cbc0004I Integer solution of 778.60238 found after 1247919 iterations and 8326 nodes (2593.25 seconds)
Cbc0010I After 8400 nodes, 1751 on tree, 778.60238 best solution, best possible 103.3346 (2664.66 seconds)
Cbc0010I After 8500 nodes, 1801 on tree, 778.60238 best solution, best possible 103.3346 (2700.79 seconds)
Cbc0010I After 8600 nodes, 1851 on tree, 778.60238 best solution, best possible 103.3346 (2723.71 seconds)
Cbc0010I After 8700 nodes, 1901 on tree, 778.60238 best solution, best possible 103.3346 (2745.84 seconds)
Cbc0010I After 8800 nodes, 1951 on tree, 778.60238 best solution, best possible 103.3346 (2768.37 seconds)
Cbc0010I After 8900 nodes, 2001 on tree, 778.60238 best solution, best possible 103.3346 (2791.04 seconds)
Cbc0010I After 9000 nodes, 2049 on tree, 778.60238 best solution, best possible 103.40228 (2897.10 seconds)
Cbc0010I After 9100 nodes, 2099 on tree, 778.60238 best solution, best possible 103.40228 (2927.12 seconds)
Cbc0010I After 9200 nodes, 2149 on tree, 778.60238 best solution, best possible 103.40228 (2952.50 seconds)
Cbc0010I After 9300 nodes, 2199 on tree, 778.60238 best solution, best possible 103.40228 (2969.92 seconds)
Cbc0010I After 9400 nodes, 2249 on tree, 778.60238 best solution, best possible 103.40228 (2990.49 seconds)
Cbc0010I After 9500 nodes, 2290 on tree, 778.60238 best solution, best possible 103.45953 (3024.55 seconds)
Cbc0010I After 9600 nodes, 2340 on tree, 778.60238 best solution, best possible 103.45953 (3059.00 seconds)
Cbc0010I After 9700 nodes, 2390 on tree, 778.60238 best solution, best possible 103.45953 (3092.47 seconds)
Cbc0010I After 9800 nodes, 2440 on tree, 778.60238 best solution, best possible 103.45953 (3115.16 seconds)
Cbc0010I After 9900 nodes, 2488 on tree, 778.60238 best solution, best possible 103.45953 (3134.02 seconds)
Cbc0010I After 10000 nodes, 2531 on tree, 778.60238 best solution, best possible 103.60473 (3171.97 seconds)
Cbc0010I After 10100 nodes, 2581 on tree, 778.60238 best solution, best possible 103.60473 (3197.01 seconds)
Cbc0010I After 10200 nodes, 2631 on tree, 778.60238 best solution, best possible 103.60473 (3220.11 seconds)
Cbc0010I After 10300 nodes, 2681 on tree, 778.60238 best solution, best possible 103.60473 (3238.44 seconds)
Cbc0010I After 10400 nodes, 2731 on tree, 778.60238 best solution, best possible 103.60473 (3258.44 seconds)
Cbc0010I After 10500 nodes, 2777 on tree, 778.60238 best solution, best possible 103.67735 (3285.64 seconds)
Cbc0010I After 10600 nodes, 2827 on tree, 778.60238 best solution, best possible 103.67735 (3321.06 seconds)
Cbc0010I After 10700 nodes, 2877 on tree, 778.60238 best solution, best possible 103.67735 (3339.57 seconds)
Cbc0010I After 10800 nodes, 2927 on tree, 778.60238 best solution, best possible 103.67735 (3358.56 seconds)
Cbc0010I After 10900 nodes, 2977 on tree, 778.60238 best solution, best possible 103.67735 (3377.25 seconds)
Cbc0010I After 11000 nodes, 3027 on tree, 778.60238 best solution, best possible 103.67735 (3397.32 seconds)
Cbc0010I After 11100 nodes, 3077 on tree, 778.60238 best solution, best possible 103.67735 (3417.62 seconds)
Cbc0010I After 11200 nodes, 3122 on tree, 778.60238 best solution, best possible 103.70587 (3446.17 seconds)
Cbc0010I After 11300 nodes, 3172 on tree, 778.60238 best solution, best possible 103.70587 (3477.12 seconds)
Cbc0010I After 11400 nodes, 3222 on tree, 778.60238 best solution, best possible 103.70587 (3503.74 seconds)
Cbc0010I After 11500 nodes, 3272 on tree, 778.60238 best solution, best possible 103.70587 (3523.24 seconds)
Cbc0010I After 11600 nodes, 3322 on tree, 778.60238 best solution, best possible 103.70587 (3542.99 seconds)
Cbc0010I After 11700 nodes, 3366 on tree, 778.60238 best solution, best possible 103.74014 (3567.40 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 778.60238 (best possible 103.74014), took 2491345 iterations and 11724 nodes (3580.12 seconds)
Cbc0035I Maximum depth 1734, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.05921s)
Total solve time:                         3580.36s (3580.36s in branch-and-bound)
Lower bound:                               103.74
Upper bound:                              778.602  (gap: 644.32%)
Branch-and-bound nodes:                     11724
Stats: /tmp/jl_O0G6F0/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.05921 [sep]  3580.36 [time]  3580.37 [bb]         1.037401e+02 [lower]         7.786024e+02 [upper]   11724 [nodes]
Performance of                           FBBT:	    342.967s,    18814 runs. fix: 3.25842e-05 shrnk: 0.000485394 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.12531s,        5 runs. fix:        0.4 shrnk:    18.9395 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt
