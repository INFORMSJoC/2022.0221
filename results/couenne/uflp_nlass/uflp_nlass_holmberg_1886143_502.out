solving instance uflp nlass holmberg 51 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.5693000000e+04 (24.037 seconds)
24.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4750.0947      404 80.777432
NLP0014I             2      INFEAS 0.049430388       57 3.423167
Loaded instance "/tmp/jl_Oih4kB/model.nl"
Constraints:         6100
Variables:           6020 (2020 integer)
Auxiliaries:         4100 (0 integer)

Coin0506I Presolve 26090 (-11) rows, 10010 (-110) columns and 61989 (-131) elements
Clp0006I 0  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (2001)
Clp0006I 355  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (2001)
Clp0006I 710  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (2001)
Clp0006I 1065  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (2001)
Clp0006I 1420  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (2001)
Clp0006I 1775  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (2001)
Clp0029I End of values pass after 2000 iterations
Clp0006I 2000  Obj 0 Primal inf 158.13212 (100) Dual inf 2.4827102e+13 (4000)
Clp0006I 2355  Obj 1735.2874 Primal inf 129.11237 (212) Dual inf 2.5028186e+13 (3956)
Clp0006I 2710  Obj 3937.8787 Primal inf 89.122741 (137) Dual inf 1.4721319e+09 (3914)
Clp0006I 3065  Obj 7202.45 Primal inf 50.707758 (133) Dual inf 1.2660949e+09 (3745)
Clp0006I 3420  Obj 10542.863 Primal inf 12.062066 (91) Dual inf 5.0755936e+08 (3303)
Clp0006I 3775  Obj 10853.28 Dual inf 398547.23 (2959)
Clp0006I 4130  Obj 9718.4029 Dual inf 404692.26 (2824)
Clp0006I 4485  Obj 6962.8803 Dual inf 413871.58 (2665)
Clp0006I 4840  Obj 4935.4858 Dual inf 490224.27 (2629)
Clp0006I 5195  Obj 2530.2444 Dual inf 453872.34 (2546)
Clp0006I 5550  Obj 430.11079 Dual inf 712300.88 (2516)
Clp0006I 5905  Obj -4427.7013 Dual inf 427710.36 (2387)
Clp0006I 6260  Obj -6529.1904 Dual inf 442066.29 (2249)
Clp0006I 6615  Obj -8904.4064 Dual inf 391199.02 (2257)
Clp0006I 6970  Obj -11841.242 Dual inf 340510.1 (2073)
Clp0006I 7325  Obj -14497.394 Dual inf 610770.07 (1917)
Clp0006I 7680  Obj -17326.488 Dual inf 324080.37 (1852)
Clp0006I 8035  Obj -19312.905 Dual inf 731253.54 (1690)
Clp0006I 8374  Obj -22161.272 Dual inf 449116.77 (1648)
Clp0006I 8729  Obj -25326.855 Dual inf 159617.14 (1369)
Clp0006I 9084  Obj -27059.971 Dual inf 738378.68 (1111)
Clp0006I 9422  Obj -28578.712 Dual inf 923551.21 (926)
Clp0006I 9777  Obj -30113.72 Dual inf 113379.11 (723)
Clp0006I 10132  Obj -31182.182 Dual inf 111676.82 (626)
Clp0006I 10487  Obj -32434.687 Dual inf 13857.235 (354)
Clp0006I 10842  Obj -32715.152 Dual inf 424.03022 (55)
Clp0006I 10895  Obj -32728.917
Clp0000I Optimal - objective value -32728.917
Clp0000I Optimal - objective value -32728.896
Clp0032I Optimal objective -32728.89583 - 10895 iterations time 3.312, Presolve 0.07
Clp0000I Optimal - objective value -32728.896
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -32728.896
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 1081 added rows had average density of 2
Cbc0013I At root node, 1081 cuts changed objective from -32728.896 to -31505.266 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9509 row cuts average 2.0 elements, 46762 column cuts (47843 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (179.24 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -31173.73 (2108.62 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -31173.73 (2174.86 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -31173.73 (2243.64 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -31173.73 (2315.74 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -31173.73 (2383.65 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -31173.73 (2441.84 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -31173.73 (2495.51 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -31173.73 (2542.24 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -31173.73 (2585.52 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -31173.73 (2627.75 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -31173.73 (2668.10 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -31173.73 (2707.79 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -31173.73 (2747.19 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -31173.73 (2785.19 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -31173.73 (2823.05 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -31173.73 (2860.53 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -31173.73 (2898.50 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -31173.73 (2936.54 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -31173.73 (2975.00 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -31173.73 (3012.65 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -31173.73 (3050.69 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -31173.73 (3087.60 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -31173.73 (3121.00 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -31173.73 (3161.27 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -31173.73 (3203.26 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -31173.73 (3245.59 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -31173.73 (3288.36 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -31173.73 (3330.98 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -31173.73 (3373.97 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -31173.73 (3417.37 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -31173.73 (3460.99 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -31173.73), took 791964 iterations and 3152 nodes (3546.92 seconds)
Cbc0035I Maximum depth 1576, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      26101
Linearization cuts added in total:          26101  (separation time: 0.067314s)
Total solve time:                         3550.25s (3550.25s in branch-and-bound)
Lower bound:                             -31173.7
Upper bound:                                15693  (gap: 150.34%)
Branch-and-bound nodes:                      3152
Stats: /tmp/jl_Oih4kB/model.nl 6020 [var] 2020 [int] 6100 [con] 4100 [aux]  26101 [root]    26101 [tot] 0.067314 [sep]  3550.25 [time]  3550.28 [bb]        -3.117373e+04 [lower]         1.569300e+04 [upper]    3152 [nodes]
Performance of                           FBBT:	    79.3503s,     6186 runs. fix:          0 shrnk:     399.52 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    13.0321s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p51
