solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-9.txt exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 666.75203       86 0.762098
NLP0014I             2      INFEAS 0.092229824       50 0.301795
Loaded instance "/tmp/jl_3nKZaQ/model.nl"
Constraints:          620
Variables:            610 (210 integer)
Auxiliaries:         1220 (0 integer)

Coin0506I Presolve 3020 (-801) rows, 1010 (-820) columns and 6999 (-1431) elements
Clp0006I 0  Obj 0 Primal inf 2.090803e+11 (1221)
Clp0006I 135  Obj 3.1707036e-16 Primal inf 3.7984731e+10 (1356)
Clp0006I 270  Obj 2.7055888e-15 Primal inf 7640.4199 (1704)
Clp0006I 405  Obj 1.7092747e-15 Primal inf 4690.3339 (1946)
Clp0006I 540  Obj 2.1379129e-15 Primal inf 2428.9622 (1646)
Clp0006I 675  Obj 5.9000341e-15 Primal inf 1434.1677 (1335)
Clp0006I 810  Obj 1.4923085e-14 Primal inf 1794.2232 (999)
Clp0006I 945  Obj 2.2168325e-14 Primal inf 2357.9813 (694)
Clp0006I 1080  Obj 2.6661944e-14 Primal inf 1906.6191 (393)
Clp0006I 1215  Obj 125.84169 Primal inf 975.82891 (183)
Clp0006I 1350  Obj 522.60949 Primal inf 8.790428 (58)
Clp0006I 1377  Obj 529.06553
Clp0000I Optimal - objective value 529.06553
Clp0032I Optimal objective 529.065526 - 1377 iterations time 0.072, Presolve 0.01
Clp0000I Optimal - objective value 529.06553
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 529.06553
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 53 added rows had average density of 2
Cbc0013I At root node, 53 cuts changed objective from 529.06553 to 530.75588 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 376 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (8.07 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 7.3491391846e+02 (62.7991 seconds)
Optimality Based BT: 181 improved bounds
Optimality Based BT: 177 improved bounds
Optimality Based BT: 97 improved bounds
Optimality Based BT: 79 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 553.28792 (107.87 seconds)
Cbc0010I After 200 nodes, 93 on tree, 1e+50 best solution, best possible 553.31348 (120.58 seconds)
Optimality Based BT: 170 improved bounds
Optimality Based BT: 102 improved bounds
Cbc0010I After 300 nodes, 139 on tree, 1e+50 best solution, best possible 560.375 (160.19 seconds)
Couenne: new cutoff value 6.3496388655e+02 (177.006 seconds)
Cbc0010I After 400 nodes, 180 on tree, 1e+50 best solution, best possible 568.33234 (185.68 seconds)
Couenne: new cutoff value 6.1999617816e+02 (203.539 seconds)
Cbc0010I After 500 nodes, 216 on tree, 1e+50 best solution, best possible 572.75368 (204.62 seconds)
Optimality Based BT: 117 improved bounds
Optimality Based BT: 114 improved bounds
Cbc0010I After 600 nodes, 245 on tree, 1e+50 best solution, best possible 575.48811 (236.56 seconds)
Optimality Based BT: 102 improved bounds
Cbc0010I After 700 nodes, 275 on tree, 1e+50 best solution, best possible 579.0028 (266.86 seconds)
Cbc0010I After 800 nodes, 305 on tree, 1e+50 best solution, best possible 580.51284 (278.21 seconds)
Cbc0010I After 900 nodes, 328 on tree, 1e+50 best solution, best possible 582.88211 (289.07 seconds)
Cbc0010I After 1000 nodes, 357 on tree, 1e+50 best solution, best possible 585.70876 (309.45 seconds)
Optimality Based BT: 120 improved bounds
Cbc0010I After 1100 nodes, 381 on tree, 1e+50 best solution, best possible 587.01771 (331.82 seconds)
Couenne: new cutoff value 5.9729600598e+02 (335.896 seconds)
Cbc0010I After 1200 nodes, 383 on tree, 1e+50 best solution, best possible 588.74113 (338.17 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1300 nodes, 356 on tree, 1e+50 best solution, best possible 594.53843 (353.45 seconds)
Cbc0010I After 1400 nodes, 308 on tree, 1e+50 best solution, best possible 600.76376 (355.08 seconds)
Cbc0010I After 1500 nodes, 258 on tree, 1e+50 best solution, best possible 606.22086 (356.31 seconds)
Cbc0010I After 1600 nodes, 208 on tree, 1e+50 best solution, best possible 611.58013 (357.43 seconds)
Cbc0010I After 1700 nodes, 158 on tree, 1e+50 best solution, best possible 616.66938 (358.49 seconds)
Cbc0010I After 1800 nodes, 108 on tree, 1e+50 best solution, best possible 628.37598 (359.53 seconds)
Cbc0010I After 1900 nodes, 58 on tree, 1e+50 best solution, best possible 669.22365 (360.72 seconds)
Cbc0010I After 2000 nodes, 8 on tree, 1e+50 best solution, best possible 740.28048 (361.81 seconds)
Cbc0001I Search completed - best objective 1e+50, took 142293 iterations and 2016 nodes (361.96 seconds)
Cbc0035I Maximum depth 42, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3821
Linearization cuts added in total:           3821  (separation time: 0.013609s)
Total solve time:                         362.031s (362.031s in branch-and-bound)
Lower bound:                              597.296
Upper bound:                              597.296  (gap: 0.00%)
Branch-and-bound nodes:                      2016
Stats: /tmp/jl_3nKZaQ/model.nl  610 [var]  210 [int]  620 [con] 1220 [aux]   3821 [root]     3821 [tot] 0.013609 [sep]  362.031 [time]  362.034 [bb]         5.972960e+02 [lower]         5.972960e+02 [upper]    2016 [nodes]
Performance of                           FBBT:	    12.3329s,     3446 runs. fix:  0.0101092 shrnk:   0.377966 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    71.6647s,       16 runs. fix:    11.5381 shrnk:    52.1093 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-9.txt
