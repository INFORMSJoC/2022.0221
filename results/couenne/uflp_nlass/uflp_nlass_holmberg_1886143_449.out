solving instance uflp nlass holmberg 45 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1064.2557       30 18.162809
NLP0014I             2      INFEAS 0.99999999       33 1.381193
Loaded instance "/tmp/jl_KrPcMf/model.nl"
Constraints:         4880
Variables:           4820 (1620 integer)
Auxiliaries:         1681 (0 integer)

Coin0506I Presolve 11200 (-1681) rows, 4740 (-1761) columns and 23840 (-5061) elements
Clp0006I 0  Obj 0 Primal inf 79.99992 (80)
Clp0006I 281  Obj 2.01e-16 Primal inf 329.9996 (400)
Clp0006I 562  Obj 2.81e-16 Primal inf 329.9996 (400)
Clp0006I 843  Obj 2.81e-16 Primal inf 329.9996 (400)
Clp0006I 1124  Obj 2.81e-16 Primal inf 329.9996 (400)
Clp0006I 1405  Obj 2.81e-16 Primal inf 329.9996 (400)
Clp0006I 1686  Obj 2.88e-16 Primal inf 329.9996 (400)
Clp0006I 1967  Obj 4.92e-16 Primal inf 329.9996 (400)
Clp0006I 2248  Obj 4.9e-16 Primal inf 329.9996 (400)
Clp0006I 2529  Obj 4.65e-16 Primal inf 329.9996 (400)
Clp0006I 2810  Obj 5.09e-16 Primal inf 329.9996 (400)
Clp0006I 3091  Obj 4.05e-16 Primal inf 329.9996 (400)
Clp0006I 3212  Obj 330
Clp0000I Optimal - objective value 330
Clp0032I Optimal objective 330 - 3212 iterations time 0.172, Presolve 0.03
Clp0000I Optimal - objective value 330
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 330
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1962 added rows had average density of 2
Cbc0013I At root node, 1962 cuts changed objective from 330 to 1043.0893 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 29156 row cuts average 2.0 elements, 1680 column cuts (3285 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (49.82 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 6.3140962855e+03 (220.977 seconds)
Cbc0012I Integer solution of 6314.0963 found by Couenne Rounding NLP after 33494 iterations and 2 nodes (185.62 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 5.9402301628e+03 (510.908 seconds)
Cbc0012I Integer solution of 5940.2302 found by Couenne Rounding NLP after 44701 iterations and 6 nodes (475.55 seconds)
Cbc0010I After 100 nodes, 50 on tree, 5940.2302 best solution, best possible 1356.1892 (594.63 seconds)
Cbc0010I After 200 nodes, 100 on tree, 5940.2302 best solution, best possible 1356.1892 (637.42 seconds)
Cbc0010I After 300 nodes, 150 on tree, 5940.2302 best solution, best possible 1356.1892 (673.10 seconds)
Cbc0010I After 400 nodes, 200 on tree, 5940.2302 best solution, best possible 1356.1892 (702.71 seconds)
Cbc0010I After 500 nodes, 224 on tree, 5940.2302 best solution, best possible 1371.2843 (728.39 seconds)
Cbc0010I After 600 nodes, 274 on tree, 5940.2302 best solution, best possible 1371.2843 (799.70 seconds)
Cbc0010I After 700 nodes, 324 on tree, 5940.2302 best solution, best possible 1371.2843 (842.66 seconds)
Cbc0010I After 800 nodes, 374 on tree, 5940.2302 best solution, best possible 1371.2843 (875.05 seconds)
Cbc0010I After 900 nodes, 400 on tree, 5940.2302 best solution, best possible 1386.9437 (913.60 seconds)
Cbc0010I After 1000 nodes, 450 on tree, 5940.2302 best solution, best possible 1386.9437 (968.57 seconds)
Cbc0010I After 1100 nodes, 500 on tree, 5940.2302 best solution, best possible 1386.9437 (1014.64 seconds)
Cbc0010I After 1200 nodes, 550 on tree, 5940.2302 best solution, best possible 1386.9437 (1059.08 seconds)
Cbc0010I After 1300 nodes, 600 on tree, 5940.2302 best solution, best possible 1386.9437 (1100.67 seconds)
Cbc0010I After 1400 nodes, 650 on tree, 5940.2302 best solution, best possible 1386.9437 (1138.24 seconds)
Cbc0010I After 1500 nodes, 689 on tree, 5940.2302 best solution, best possible 1386.9437 (1169.64 seconds)
Couenne: new cutoff value 5.4379800124e+03 (1279.12 seconds)
Cbc0012I Integer solution of 5437.98 found by Couenne Rounding NLP after 1899417 iterations and 1534 nodes (1243.76 seconds)
Cbc0010I After 1600 nodes, 646 on tree, 5437.98 best solution, best possible 1396.9342 (1291.69 seconds)
Cbc0010I After 1700 nodes, 696 on tree, 5437.98 best solution, best possible 1396.9342 (1345.02 seconds)
Cbc0010I After 1800 nodes, 746 on tree, 5437.98 best solution, best possible 1396.9342 (1389.51 seconds)
Cbc0010I After 1900 nodes, 786 on tree, 5437.98 best solution, best possible 1396.9342 (1427.37 seconds)
Cbc0010I After 2000 nodes, 833 on tree, 5437.98 best solution, best possible 1428.0705 (1487.12 seconds)
Cbc0010I After 2100 nodes, 883 on tree, 5437.98 best solution, best possible 1428.0705 (1523.52 seconds)
Cbc0010I After 2200 nodes, 933 on tree, 5437.98 best solution, best possible 1428.0705 (1554.48 seconds)
Cbc0010I After 2300 nodes, 976 on tree, 5437.98 best solution, best possible 1444.8406 (1586.89 seconds)
Cbc0010I After 2400 nodes, 1026 on tree, 5437.98 best solution, best possible 1444.8406 (1640.99 seconds)
Cbc0010I After 2500 nodes, 1076 on tree, 5437.98 best solution, best possible 1444.8406 (1675.33 seconds)
Cbc0010I After 2600 nodes, 1126 on tree, 5437.98 best solution, best possible 1444.8406 (1702.12 seconds)
Cbc0010I After 2700 nodes, 1167 on tree, 5437.98 best solution, best possible 1450.7787 (1726.92 seconds)
Cbc0010I After 2800 nodes, 1217 on tree, 5437.98 best solution, best possible 1450.7787 (1794.50 seconds)
Cbc0010I After 2900 nodes, 1267 on tree, 5437.98 best solution, best possible 1450.7787 (1837.05 seconds)
Cbc0010I After 3000 nodes, 1308 on tree, 5437.98 best solution, best possible 1450.7787 (1866.78 seconds)
Cbc0010I After 3100 nodes, 1357 on tree, 5437.98 best solution, best possible 1466.5231 (1930.59 seconds)
Cbc0010I After 3200 nodes, 1407 on tree, 5437.98 best solution, best possible 1466.5231 (1966.81 seconds)
Cbc0010I After 3300 nodes, 1453 on tree, 5437.98 best solution, best possible 1485.4708 (2021.54 seconds)
Cbc0010I After 3400 nodes, 1503 on tree, 5437.98 best solution, best possible 1485.4708 (2062.41 seconds)
Cbc0010I After 3500 nodes, 1553 on tree, 5437.98 best solution, best possible 1485.4708 (2090.32 seconds)
Cbc0010I After 3600 nodes, 1603 on tree, 5437.98 best solution, best possible 1485.4708 (2112.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 3700 nodes, 1644 on tree, 5437.98 best solution, best possible 1485.7688 (2335.07 seconds)
Cbc0010I After 3800 nodes, 1694 on tree, 5437.98 best solution, best possible 1485.7688 (2386.86 seconds)
Cbc0010I After 3900 nodes, 1744 on tree, 5437.98 best solution, best possible 1485.7688 (2424.40 seconds)
Cbc0010I After 4000 nodes, 1794 on tree, 5437.98 best solution, best possible 1485.7688 (2460.45 seconds)
Cbc0010I After 4100 nodes, 1832 on tree, 5437.98 best solution, best possible 1489.9241 (2601.22 seconds)
Cbc0010I After 4200 nodes, 1882 on tree, 5437.98 best solution, best possible 1489.9241 (2644.51 seconds)
Cbc0010I After 4300 nodes, 1932 on tree, 5437.98 best solution, best possible 1489.9241 (2678.08 seconds)
Cbc0010I After 4400 nodes, 1982 on tree, 5437.98 best solution, best possible 1489.9241 (2707.42 seconds)
Cbc0010I After 4500 nodes, 2032 on tree, 5437.98 best solution, best possible 1489.9241 (2731.22 seconds)
Cbc0010I After 4600 nodes, 2073 on tree, 5437.98 best solution, best possible 1498.3934 (2780.64 seconds)
Cbc0010I After 4700 nodes, 2123 on tree, 5437.98 best solution, best possible 1498.3934 (2835.85 seconds)
Cbc0010I After 4800 nodes, 2173 on tree, 5437.98 best solution, best possible 1498.3934 (2875.88 seconds)
Cbc0010I After 4900 nodes, 2223 on tree, 5437.98 best solution, best possible 1498.3934 (2912.22 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 5.4322014220e+03 (3207.96 seconds)
Cbc0012I Integer solution of 5432.2014 found by Couenne Rounding NLP after 6106795 iterations and 4988 nodes (3172.61 seconds)
Cbc0010I After 5000 nodes, 2255 on tree, 5432.2014 best solution, best possible 1524.205 (3183.30 seconds)
Cbc0010I After 5100 nodes, 2305 on tree, 5432.2014 best solution, best possible 1524.205 (3246.95 seconds)
Cbc0010I After 5200 nodes, 2355 on tree, 5432.2014 best solution, best possible 1524.205 (3290.74 seconds)
Cbc0010I After 5300 nodes, 2405 on tree, 5432.2014 best solution, best possible 1524.205 (3326.58 seconds)
Cbc0010I After 5400 nodes, 2451 on tree, 5432.2014 best solution, best possible 1542.4933 (3431.52 seconds)
Cbc0010I After 5500 nodes, 2501 on tree, 5432.2014 best solution, best possible 1542.4933 (3469.66 seconds)
Cbc0010I After 5600 nodes, 2541 on tree, 5432.2014 best solution, best possible 1559.8003 (3512.78 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 5432.2014 (best possible 1559.8003), took 7061863 iterations and 5680 nodes (3571.89 seconds)
Cbc0035I Maximum depth 332, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12881
Linearization cuts added in total:          12881  (separation time: 0.034373s)
Total solve time:                         3572.25s (3572.25s in branch-and-bound)
Lower bound:                               1559.8
Upper bound:                               5432.2  (gap: 248.10%)
Branch-and-bound nodes:                      5680
Stats: /tmp/jl_KrPcMf/model.nl 4820 [var] 1620 [int] 4880 [con] 1681 [aux]  12881 [root]    12881 [tot] 0.034373 [sep]  3572.25 [time]  3572.26 [bb]         1.559800e+03 [lower]         5.432201e+03 [upper]    5680 [nodes]
Performance of                           FBBT:	    60.0936s,    11130 runs. fix: 4.40516e-05 shrnk: 0.000124643 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    26.7816s,       12 runs. fix:   0.321429 shrnk:    41.7987 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p45
