solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-9.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 180.78978       31 2.466967
NLP0014I             2      INFEAS 0.99999999       33 0.694185
Loaded instance "/tmp/jl_JcA7nt/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 8800 (-1641) rows, 3980 (-1681) columns and 19120 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 79.99996 (40)
Clp0006I 251  Obj 1.6447034e-16 Primal inf 112.5629 (212)
Clp0006I 502  Obj 2.0690132e-16 Primal inf 127.47372 (236)
Clp0006I 753  Obj 1.6649364e-16 Primal inf 95.944109 (236)
Clp0006I 1004  Obj 1.8595935e-16 Primal inf 96.347942 (202)
Clp0006I 1255  Obj 1.6401314e-16 Primal inf 121.99312 (255)
Clp0006I 1506  Obj 1.8179674e-16 Primal inf 96.21729 (213)
Clp0006I 1757  Obj 1.7065961e-16 Primal inf 160.26801 (277)
Clp0006I 2008  Obj 1.7515027e-16 Primal inf 96.086639 (224)
Clp0006I 2259  Obj 1.7857812e-16 Primal inf 132.65739 (242)
Clp0006I 2510  Obj 1.6723176e-16 Primal inf 95.955987 (235)
Clp0006I 2761  Obj 1.8595935e-16 Primal inf 96.35982 (201)
Clp0006I 3012  Obj 1.6347587e-16 Primal inf 116.77381 (252)
Clp0006I 3263  Obj 22.83938 Primal inf 7.9646008 (81)
Clp0006I 3280  Obj 23.277025
Clp0000I Optimal - objective value 23.277025
Clp0032I Optimal objective 23.27702484 - 3280 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 23.277025
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 23.277025
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 983 added rows had average density of 2
Cbc0013I At root node, 983 cuts changed objective from 23.277025 to 103.05131 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14564 row cuts average 2.0 elements, 840 column cuts (1460 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (77.34 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 1.5491064724e+03 (332.679 seconds)
Couenne: new cutoff value 9.7949604869e+02 (333.124 seconds)
Cbc0012I Integer solution of 979.49605 found by Couenne Rounding NLP after 12381 iterations and 2 nodes (309.33 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 979.49605 best solution, best possible 110.74511 (892.65 seconds)
Cbc0010I After 200 nodes, 100 on tree, 979.49605 best solution, best possible 110.74511 (923.41 seconds)
Cbc0010I After 300 nodes, 150 on tree, 979.49605 best solution, best possible 110.74511 (947.74 seconds)
Cbc0010I After 400 nodes, 200 on tree, 979.49605 best solution, best possible 110.74511 (970.86 seconds)
Cbc0010I After 500 nodes, 250 on tree, 979.49605 best solution, best possible 110.74511 (990.11 seconds)
Cbc0010I After 600 nodes, 300 on tree, 979.49605 best solution, best possible 110.74511 (1011.81 seconds)
Cbc0010I After 700 nodes, 350 on tree, 979.49605 best solution, best possible 110.74511 (1033.85 seconds)
Cbc0010I After 800 nodes, 400 on tree, 979.49605 best solution, best possible 110.74511 (1056.08 seconds)
Cbc0010I After 900 nodes, 450 on tree, 979.49605 best solution, best possible 110.74511 (1078.48 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 979.49605 best solution, best possible 110.74511 (1099.53 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 979.49605 best solution, best possible 110.74511 (1119.46 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 979.49605 best solution, best possible 110.74511 (1135.98 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 979.49605 best solution, best possible 110.74511 (1151.11 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 979.49605 best solution, best possible 110.74511 (1166.18 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 979.49605 best solution, best possible 110.74511 (1181.08 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 979.49605 best solution, best possible 110.74511 (1195.16 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 979.49605 best solution, best possible 110.74511 (1209.12 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 979.49605 best solution, best possible 110.74511 (1223.64 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 979.49605 best solution, best possible 110.74511 (1237.95 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 979.49605 best solution, best possible 110.74511 (1252.70 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 979.49605 best solution, best possible 110.74511 (1267.26 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 979.49605 best solution, best possible 110.74511 (1281.79 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 979.49605 best solution, best possible 110.74511 (1296.52 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 979.49605 best solution, best possible 110.74511 (1311.48 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 979.49605 best solution, best possible 110.74511 (1326.41 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 979.49605 best solution, best possible 110.74511 (1341.67 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 979.49605 best solution, best possible 110.74511 (1356.99 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 979.49605 best solution, best possible 110.74511 (1372.37 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 979.49605 best solution, best possible 110.74511 (1387.89 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 979.49605 best solution, best possible 110.74511 (1403.87 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 979.49605 best solution, best possible 110.74511 (1419.90 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 979.49605 best solution, best possible 110.74511 (1435.76 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 979.49605 best solution, best possible 110.74511 (1450.47 seconds)
Cbc0010I After 3400 nodes, 1698 on tree, 979.49605 best solution, best possible 110.74511 (1464.50 seconds)
Cbc0010I After 3500 nodes, 1740 on tree, 979.49605 best solution, best possible 111.1309 (1487.50 seconds)
Cbc0010I After 3600 nodes, 1790 on tree, 979.49605 best solution, best possible 111.1309 (1516.67 seconds)
Cbc0010I After 3700 nodes, 1840 on tree, 979.49605 best solution, best possible 111.1309 (1547.33 seconds)
Cbc0010I After 3800 nodes, 1890 on tree, 979.49605 best solution, best possible 111.1309 (1576.11 seconds)
Cbc0010I After 3900 nodes, 1940 on tree, 979.49605 best solution, best possible 111.1309 (1597.15 seconds)
Cbc0010I After 4000 nodes, 1990 on tree, 979.49605 best solution, best possible 111.1309 (1617.90 seconds)
Cbc0010I After 4100 nodes, 2040 on tree, 979.49605 best solution, best possible 111.1309 (1638.99 seconds)
Cbc0010I After 4200 nodes, 2090 on tree, 979.49605 best solution, best possible 111.1309 (1660.04 seconds)
Cbc0010I After 4300 nodes, 2140 on tree, 979.49605 best solution, best possible 111.1309 (1677.35 seconds)
Cbc0010I After 4400 nodes, 2190 on tree, 979.49605 best solution, best possible 111.1309 (1692.53 seconds)
Cbc0010I After 4500 nodes, 2240 on tree, 979.49605 best solution, best possible 111.1309 (1707.03 seconds)
Cbc0010I After 4600 nodes, 2290 on tree, 979.49605 best solution, best possible 111.1309 (1721.09 seconds)
Cbc0010I After 4700 nodes, 2340 on tree, 979.49605 best solution, best possible 111.1309 (1734.36 seconds)
Cbc0010I After 4800 nodes, 2390 on tree, 979.49605 best solution, best possible 111.1309 (1748.07 seconds)
Cbc0010I After 4900 nodes, 2440 on tree, 979.49605 best solution, best possible 111.1309 (1762.17 seconds)
Cbc0010I After 5000 nodes, 2490 on tree, 979.49605 best solution, best possible 111.1309 (1776.22 seconds)
Cbc0010I After 5100 nodes, 2540 on tree, 979.49605 best solution, best possible 111.1309 (1790.26 seconds)
Cbc0010I After 5200 nodes, 2590 on tree, 979.49605 best solution, best possible 111.1309 (1804.33 seconds)
Cbc0010I After 5300 nodes, 2640 on tree, 979.49605 best solution, best possible 111.1309 (1818.63 seconds)
Cbc0010I After 5400 nodes, 2690 on tree, 979.49605 best solution, best possible 111.1309 (1833.76 seconds)
Cbc0010I After 5500 nodes, 2740 on tree, 979.49605 best solution, best possible 111.1309 (1849.78 seconds)
Cbc0010I After 5600 nodes, 2790 on tree, 979.49605 best solution, best possible 111.1309 (1863.10 seconds)
Cbc0010I After 5700 nodes, 2840 on tree, 979.49605 best solution, best possible 111.1309 (1876.56 seconds)
Couenne: new cutoff value 8.6702282174e+02 (1902.55 seconds)
Cbc0004I Integer solution of 867.02282 found after 519001 iterations and 5716 nodes (1878.77 seconds)
Cbc0010I After 5800 nodes, 2150 on tree, 867.02282 best solution, best possible 111.16859 (1934.39 seconds)
Cbc0010I After 5900 nodes, 2200 on tree, 867.02282 best solution, best possible 111.16859 (1963.81 seconds)
Cbc0010I After 6000 nodes, 2250 on tree, 867.02282 best solution, best possible 111.16859 (1988.56 seconds)
Cbc0010I After 6100 nodes, 2300 on tree, 867.02282 best solution, best possible 111.16859 (2009.56 seconds)
Cbc0010I After 6200 nodes, 2350 on tree, 867.02282 best solution, best possible 111.16859 (2029.74 seconds)
Cbc0010I After 6300 nodes, 2400 on tree, 867.02282 best solution, best possible 111.16859 (2050.72 seconds)
Cbc0010I After 6400 nodes, 2450 on tree, 867.02282 best solution, best possible 111.16859 (2071.59 seconds)
Cbc0010I After 6500 nodes, 2500 on tree, 867.02282 best solution, best possible 111.16859 (2089.54 seconds)
Cbc0010I After 6600 nodes, 2550 on tree, 867.02282 best solution, best possible 111.16859 (2105.06 seconds)
Cbc0010I After 6700 nodes, 2600 on tree, 867.02282 best solution, best possible 111.16859 (2119.30 seconds)
Cbc0010I After 6800 nodes, 2650 on tree, 867.02282 best solution, best possible 111.16859 (2133.53 seconds)
Cbc0010I After 6900 nodes, 2700 on tree, 867.02282 best solution, best possible 111.16859 (2146.91 seconds)
Cbc0010I After 7000 nodes, 2750 on tree, 867.02282 best solution, best possible 111.16859 (2160.48 seconds)
Cbc0010I After 7100 nodes, 2800 on tree, 867.02282 best solution, best possible 111.16859 (2174.35 seconds)
Cbc0010I After 7200 nodes, 2850 on tree, 867.02282 best solution, best possible 111.16859 (2187.92 seconds)
Cbc0010I After 7300 nodes, 2900 on tree, 867.02282 best solution, best possible 111.16859 (2201.69 seconds)
Cbc0010I After 7400 nodes, 2950 on tree, 867.02282 best solution, best possible 111.16859 (2215.59 seconds)
Cbc0010I After 7500 nodes, 3000 on tree, 867.02282 best solution, best possible 111.16859 (2229.48 seconds)
Cbc0010I After 7600 nodes, 3050 on tree, 867.02282 best solution, best possible 111.16859 (2243.51 seconds)
Cbc0010I After 7700 nodes, 3100 on tree, 867.02282 best solution, best possible 111.16859 (2258.86 seconds)
Cbc0010I After 7800 nodes, 3150 on tree, 867.02282 best solution, best possible 111.16859 (2272.84 seconds)
Cbc0010I After 7900 nodes, 3200 on tree, 867.02282 best solution, best possible 111.16859 (2284.37 seconds)
Couenne: new cutoff value 8.6260497936e+02 (2318.49 seconds)
Cbc0004I Integer solution of 862.60498 found after 731114 iterations and 7986 nodes (2294.71 seconds)
Cbc0010I After 8000 nodes, 2443 on tree, 862.60498 best solution, best possible 111.3833 (2311.25 seconds)
Cbc0010I After 8100 nodes, 2493 on tree, 862.60498 best solution, best possible 111.3833 (2347.28 seconds)
Cbc0010I After 8200 nodes, 2543 on tree, 862.60498 best solution, best possible 111.3833 (2376.32 seconds)
Cbc0010I After 8300 nodes, 2593 on tree, 862.60498 best solution, best possible 111.3833 (2396.70 seconds)
Cbc0010I After 8400 nodes, 2641 on tree, 862.60498 best solution, best possible 111.47178 (2416.90 seconds)
Cbc0010I After 8500 nodes, 2691 on tree, 862.60498 best solution, best possible 111.47178 (2465.22 seconds)
Cbc0010I After 8600 nodes, 2741 on tree, 862.60498 best solution, best possible 111.47178 (2489.68 seconds)
Cbc0010I After 8700 nodes, 2791 on tree, 862.60498 best solution, best possible 111.47178 (2510.54 seconds)
Cbc0010I After 8800 nodes, 2841 on tree, 862.60498 best solution, best possible 111.47178 (2530.26 seconds)
Cbc0010I After 8900 nodes, 2891 on tree, 862.60498 best solution, best possible 111.47178 (2550.70 seconds)
Cbc0010I After 9000 nodes, 2941 on tree, 862.60498 best solution, best possible 111.47178 (2571.37 seconds)
Cbc0010I After 9100 nodes, 2991 on tree, 862.60498 best solution, best possible 111.47178 (2592.13 seconds)
Cbc0010I After 9200 nodes, 3041 on tree, 862.60498 best solution, best possible 111.47178 (2612.93 seconds)
Cbc0010I After 9300 nodes, 3091 on tree, 862.60498 best solution, best possible 111.47178 (2632.75 seconds)
Cbc0010I After 9400 nodes, 3141 on tree, 862.60498 best solution, best possible 111.47178 (2651.53 seconds)
Cbc0010I After 9500 nodes, 3191 on tree, 862.60498 best solution, best possible 111.47178 (2667.79 seconds)
Cbc0010I After 9600 nodes, 3241 on tree, 862.60498 best solution, best possible 111.47178 (2682.62 seconds)
Cbc0010I After 9700 nodes, 3291 on tree, 862.60498 best solution, best possible 111.47178 (2697.22 seconds)
Cbc0010I After 9800 nodes, 3341 on tree, 862.60498 best solution, best possible 111.47178 (2711.14 seconds)
Cbc0010I After 9900 nodes, 3391 on tree, 862.60498 best solution, best possible 111.47178 (2724.50 seconds)
Cbc0010I After 10000 nodes, 3441 on tree, 862.60498 best solution, best possible 111.47178 (2737.90 seconds)
Cbc0010I After 10100 nodes, 3491 on tree, 862.60498 best solution, best possible 111.47178 (2751.23 seconds)
Cbc0010I After 10200 nodes, 3541 on tree, 862.60498 best solution, best possible 111.47178 (2765.20 seconds)
Cbc0010I After 10300 nodes, 3591 on tree, 862.60498 best solution, best possible 111.47178 (2779.37 seconds)
Cbc0010I After 10400 nodes, 3641 on tree, 862.60498 best solution, best possible 111.47178 (2793.35 seconds)
Cbc0010I After 10500 nodes, 3691 on tree, 862.60498 best solution, best possible 111.47178 (2807.68 seconds)
Cbc0010I After 10600 nodes, 3741 on tree, 862.60498 best solution, best possible 111.47178 (2822.43 seconds)
Cbc0010I After 10700 nodes, 3791 on tree, 862.60498 best solution, best possible 111.47178 (2836.74 seconds)
Cbc0010I After 10800 nodes, 3841 on tree, 862.60498 best solution, best possible 111.47178 (2851.26 seconds)
Cbc0010I After 10900 nodes, 3891 on tree, 862.60498 best solution, best possible 111.47178 (2865.87 seconds)
Cbc0010I After 11000 nodes, 3941 on tree, 862.60498 best solution, best possible 111.47178 (2880.68 seconds)
Cbc0010I After 11100 nodes, 3991 on tree, 862.60498 best solution, best possible 111.47178 (2895.63 seconds)
Cbc0010I After 11200 nodes, 4041 on tree, 862.60498 best solution, best possible 111.47178 (2910.70 seconds)
Cbc0010I After 11300 nodes, 4091 on tree, 862.60498 best solution, best possible 111.47178 (2925.92 seconds)
Cbc0010I After 11400 nodes, 4141 on tree, 862.60498 best solution, best possible 111.47178 (2940.06 seconds)
Cbc0010I After 11500 nodes, 4189 on tree, 862.60498 best solution, best possible 111.47178 (2953.58 seconds)
Couenne: new cutoff value 8.1201003132e+02 (2985.15 seconds)
Cbc0010I After 11600 nodes, 4236 on tree, 862.60498 best solution, best possible 111.55182 (2977.44 seconds)
Cbc0010I After 11700 nodes, 4286 on tree, 862.60498 best solution, best possible 111.55182 (3008.12 seconds)
Cbc0010I After 11800 nodes, 4336 on tree, 862.60498 best solution, best possible 111.55182 (3030.41 seconds)
Cbc0010I After 11900 nodes, 4386 on tree, 862.60498 best solution, best possible 111.55182 (3048.39 seconds)
Cbc0010I After 12000 nodes, 4436 on tree, 862.60498 best solution, best possible 111.55182 (3068.18 seconds)
Cbc0010I After 12100 nodes, 4482 on tree, 862.60498 best solution, best possible 111.67403 (3093.09 seconds)
Cbc0010I After 12200 nodes, 4532 on tree, 862.60498 best solution, best possible 111.67403 (3129.36 seconds)
Cbc0010I After 12300 nodes, 4582 on tree, 862.60498 best solution, best possible 111.67403 (3153.46 seconds)
Cbc0010I After 12400 nodes, 4632 on tree, 862.60498 best solution, best possible 111.67403 (3172.96 seconds)
Cbc0010I After 12500 nodes, 4677 on tree, 862.60498 best solution, best possible 111.96319 (3194.65 seconds)
Cbc0010I After 12600 nodes, 4727 on tree, 862.60498 best solution, best possible 111.96319 (3229.64 seconds)
Cbc0010I After 12700 nodes, 4777 on tree, 862.60498 best solution, best possible 111.96319 (3258.65 seconds)
Cbc0010I After 12800 nodes, 4827 on tree, 862.60498 best solution, best possible 111.96319 (3277.46 seconds)
Cbc0010I After 12900 nodes, 4873 on tree, 862.60498 best solution, best possible 112.00009 (3298.47 seconds)
Cbc0010I After 13000 nodes, 4923 on tree, 862.60498 best solution, best possible 112.00009 (3329.58 seconds)
Cbc0010I After 13100 nodes, 4973 on tree, 862.60498 best solution, best possible 112.00009 (3357.15 seconds)
Cbc0010I After 13200 nodes, 5023 on tree, 862.60498 best solution, best possible 112.00009 (3380.03 seconds)
Cbc0010I After 13300 nodes, 5073 on tree, 862.60498 best solution, best possible 112.00009 (3397.83 seconds)
Cbc0010I After 13400 nodes, 5123 on tree, 862.60498 best solution, best possible 112.00009 (3418.69 seconds)
Cbc0010I After 13500 nodes, 5173 on tree, 862.60498 best solution, best possible 112.00009 (3439.29 seconds)
Cbc0010I After 13600 nodes, 5221 on tree, 862.60498 best solution, best possible 112.11418 (3533.90 seconds)
Cbc0010I After 13700 nodes, 5271 on tree, 862.60498 best solution, best possible 112.11418 (3563.33 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 862.60498 (best possible 112.11418), took 1951192 iterations and 13760 nodes (3614.81 seconds)
Cbc0035I Maximum depth 1728, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.054716s)
Total solve time:                         3615.04s (3615.04s in branch-and-bound)
Lower bound:                              112.114
Upper bound:                               812.01  (gap: 618.75%)
Branch-and-bound nodes:                     13760
Stats: /tmp/jl_JcA7nt/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  10441 [root]    10441 [tot] 0.054716 [sep]  3615.04 [time]  3615.04 [bb]         1.121142e+02 [lower]         8.120100e+02 [upper]   13760 [nodes]
Performance of                           FBBT:	    353.804s,    19779 runs. fix: 0.000106467 shrnk: 0.000196679 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.15047s,        6 runs. fix:   0.387097 shrnk:    24.0561 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-9.txt
