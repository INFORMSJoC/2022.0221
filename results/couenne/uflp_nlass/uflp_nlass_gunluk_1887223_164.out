solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 318.0532       78 4.121523
NLP0014I             2      INFEAS 0.99999999       52 1.052291
Loaded instance "/tmp/jl_JsqbGd/model.nl"
Constraints:         2440
Variables:           2420 (820 integer)
Auxiliaries:         3241 (0 integer)

Coin0506I Presolve 10400 (-1641) rows, 3980 (-1681) columns and 22320 (-4141) elements
Clp0006I 0  Obj 0 Primal inf 2370.2641 (1640)
Clp0006I 277  Obj 0 Primal inf 2389.5981 (1680)
Clp0006I 554  Obj 0 Primal inf 2110.4265 (1680)
Clp0006I 831  Obj 9.0895128e-17 Primal inf 2017.1785 (1697)
Clp0006I 1108  Obj 1.0626468e-15 Primal inf 3336.0136 (1788)
Clp0006I 1385  Obj 1.9566545e-15 Primal inf 4543.4051 (1883)
Clp0006I 1662  Obj 2.9495535e-15 Primal inf 5820.4369 (1970)
Clp0006I 1939  Obj 1.4928879e-15 Primal inf 6346.3079 (2007)
Clp0006I 2216  Obj 1.8383514e-15 Primal inf 6590.8021 (1976)
Clp0006I 2493  Obj 2.1102178e-15 Primal inf 3016.9649 (1708)
Clp0006I 2770  Obj 4.7881957e-16 Primal inf 201.24498 (640)
Clp0006I 3047  Obj 4.3145186e-16 Primal inf 56.973898 (443)
Clp0006I 3324  Obj 18.752438 Primal inf 56.635931 (318)
Clp0006I 3601  Obj 30.282071 Primal inf 42.342314 (198)
Clp0006I 3878  Obj 37.109453 Primal inf 128.68059 (170)
Clp0006I 3923  Obj 37.668812
Clp0000I Optimal - objective value 37.668812
Clp0032I Optimal objective 37.66881245 - 3923 iterations time 0.242, Presolve 0.03
Clp0000I Optimal - objective value 37.668812
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 37.668812
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 927 added rows had average density of 2
Cbc0013I At root node, 927 cuts changed objective from 37.668812 to 95.50162 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14397 row cuts average 2.0 elements, 440 column cuts (1214 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (76.86 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 9.7579517864e+02 (340.479 seconds)
Cbc0012I Integer solution of 975.79518 found by Couenne Rounding NLP after 10381 iterations and 2 nodes (314.85 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 9.3528107644e+02 (652.712 seconds)
Cbc0012I Integer solution of 935.28108 found by Couenne Rounding NLP after 12519 iterations and 5 nodes (627.08 seconds)
Couenne: new cutoff value 7.9029667465e+02 (835.754 seconds)
Cbc0010I After 100 nodes, 50 on tree, 935.28108 best solution, best possible 96.478192 (919.59 seconds)
Cbc0010I After 200 nodes, 100 on tree, 935.28108 best solution, best possible 96.478192 (952.20 seconds)
Cbc0010I After 300 nodes, 150 on tree, 935.28108 best solution, best possible 96.478192 (972.44 seconds)
Cbc0010I After 400 nodes, 200 on tree, 935.28108 best solution, best possible 96.478192 (988.25 seconds)
Cbc0010I After 500 nodes, 250 on tree, 935.28108 best solution, best possible 96.478192 (1004.67 seconds)
Cbc0010I After 600 nodes, 300 on tree, 935.28108 best solution, best possible 96.478192 (1023.02 seconds)
Cbc0010I After 700 nodes, 350 on tree, 935.28108 best solution, best possible 96.478192 (1041.23 seconds)
Cbc0010I After 800 nodes, 400 on tree, 935.28108 best solution, best possible 96.478192 (1059.35 seconds)
Cbc0010I After 900 nodes, 450 on tree, 935.28108 best solution, best possible 96.478192 (1077.01 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 935.28108 best solution, best possible 96.478192 (1093.38 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 935.28108 best solution, best possible 96.478192 (1109.15 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 935.28108 best solution, best possible 96.478192 (1124.30 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 935.28108 best solution, best possible 96.478192 (1138.12 seconds)
Cbc0010I After 1400 nodes, 699 on tree, 935.28108 best solution, best possible 96.478192 (1151.64 seconds)
Cbc0010I After 1500 nodes, 748 on tree, 935.28108 best solution, best possible 96.478192 (1164.88 seconds)
Cbc0010I After 1600 nodes, 797 on tree, 935.28108 best solution, best possible 96.478192 (1177.93 seconds)
Cbc0010I After 1700 nodes, 846 on tree, 935.28108 best solution, best possible 96.478192 (1190.86 seconds)
Cbc0010I After 1800 nodes, 894 on tree, 935.28108 best solution, best possible 96.478192 (1204.08 seconds)
Cbc0010I After 1900 nodes, 944 on tree, 935.28108 best solution, best possible 96.478192 (1217.27 seconds)
Cbc0010I After 2000 nodes, 994 on tree, 935.28108 best solution, best possible 96.478192 (1230.23 seconds)
Cbc0010I After 2100 nodes, 1043 on tree, 935.28108 best solution, best possible 96.478192 (1243.19 seconds)
Cbc0010I After 2200 nodes, 1093 on tree, 935.28108 best solution, best possible 96.478192 (1256.14 seconds)
Cbc0010I After 2300 nodes, 1143 on tree, 935.28108 best solution, best possible 96.478192 (1269.16 seconds)
Cbc0010I After 2400 nodes, 1192 on tree, 935.28108 best solution, best possible 96.478192 (1282.31 seconds)
Cbc0010I After 2500 nodes, 1242 on tree, 935.28108 best solution, best possible 96.478192 (1295.47 seconds)
Cbc0010I After 2600 nodes, 1292 on tree, 935.28108 best solution, best possible 96.478192 (1308.89 seconds)
Cbc0010I After 2700 nodes, 1342 on tree, 935.28108 best solution, best possible 96.478192 (1322.62 seconds)
Cbc0010I After 2800 nodes, 1392 on tree, 935.28108 best solution, best possible 96.478192 (1336.51 seconds)
Cbc0010I After 2900 nodes, 1442 on tree, 935.28108 best solution, best possible 96.478192 (1349.62 seconds)
Cbc0010I After 3000 nodes, 1492 on tree, 935.28108 best solution, best possible 96.478192 (1363.60 seconds)
Cbc0010I After 3100 nodes, 1542 on tree, 935.28108 best solution, best possible 96.478192 (1376.42 seconds)
Cbc0010I After 3200 nodes, 1592 on tree, 935.28108 best solution, best possible 96.478192 (1388.57 seconds)
Cbc0010I After 3300 nodes, 1642 on tree, 935.28108 best solution, best possible 96.478192 (1400.45 seconds)
Cbc0010I After 3400 nodes, 1692 on tree, 935.28108 best solution, best possible 96.478192 (1412.28 seconds)
Cbc0010I After 3500 nodes, 1742 on tree, 935.28108 best solution, best possible 96.478192 (1424.18 seconds)
Cbc0010I After 3600 nodes, 1792 on tree, 935.28108 best solution, best possible 96.478192 (1436.07 seconds)
Cbc0010I After 3700 nodes, 1842 on tree, 935.28108 best solution, best possible 96.478192 (1448.00 seconds)
Couenne: new cutoff value 6.8097139697e+02 (1477.05 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 3800 nodes, 1890 on tree, 935.28108 best solution, best possible 96.538154 (2002.53 seconds)
Cbc0010I After 3900 nodes, 1940 on tree, 935.28108 best solution, best possible 96.538154 (2037.42 seconds)
Cbc0010I After 4000 nodes, 1990 on tree, 935.28108 best solution, best possible 96.538154 (2065.19 seconds)
Cbc0010I After 4100 nodes, 2040 on tree, 935.28108 best solution, best possible 96.538154 (2080.54 seconds)
Cbc0010I After 4200 nodes, 2090 on tree, 935.28108 best solution, best possible 96.538154 (2095.42 seconds)
Cbc0010I After 4300 nodes, 2140 on tree, 935.28108 best solution, best possible 96.538154 (2112.95 seconds)
Cbc0010I After 4400 nodes, 2190 on tree, 935.28108 best solution, best possible 96.538154 (2130.12 seconds)
Cbc0010I After 4500 nodes, 2240 on tree, 935.28108 best solution, best possible 96.538154 (2147.35 seconds)
Cbc0010I After 4600 nodes, 2290 on tree, 935.28108 best solution, best possible 96.538154 (2164.60 seconds)
Cbc0010I After 4700 nodes, 2340 on tree, 935.28108 best solution, best possible 96.538154 (2180.45 seconds)
Cbc0010I After 4800 nodes, 2390 on tree, 935.28108 best solution, best possible 96.538154 (2195.54 seconds)
Cbc0010I After 4900 nodes, 2440 on tree, 935.28108 best solution, best possible 96.538154 (2211.08 seconds)
Cbc0010I After 5000 nodes, 2490 on tree, 935.28108 best solution, best possible 96.538154 (2225.10 seconds)
Cbc0010I After 5100 nodes, 2540 on tree, 935.28108 best solution, best possible 96.538154 (2238.44 seconds)
Cbc0010I After 5200 nodes, 2589 on tree, 935.28108 best solution, best possible 96.538154 (2251.56 seconds)
Cbc0010I After 5300 nodes, 2637 on tree, 935.28108 best solution, best possible 96.538154 (2264.58 seconds)
Cbc0010I After 5400 nodes, 2687 on tree, 935.28108 best solution, best possible 96.538154 (2277.33 seconds)
Cbc0010I After 5500 nodes, 2736 on tree, 935.28108 best solution, best possible 96.538154 (2290.22 seconds)
Cbc0010I After 5600 nodes, 2785 on tree, 935.28108 best solution, best possible 96.538154 (2303.26 seconds)
Cbc0010I After 5700 nodes, 2835 on tree, 935.28108 best solution, best possible 96.538154 (2316.32 seconds)
Cbc0010I After 5800 nodes, 2885 on tree, 935.28108 best solution, best possible 96.538154 (2329.19 seconds)
Cbc0010I After 5900 nodes, 2935 on tree, 935.28108 best solution, best possible 96.538154 (2342.02 seconds)
Cbc0010I After 6000 nodes, 2985 on tree, 935.28108 best solution, best possible 96.538154 (2355.00 seconds)
Cbc0010I After 6100 nodes, 3034 on tree, 935.28108 best solution, best possible 96.538154 (2368.01 seconds)
Cbc0010I After 6200 nodes, 3084 on tree, 935.28108 best solution, best possible 96.538154 (2381.06 seconds)
Cbc0010I After 6300 nodes, 3132 on tree, 935.28108 best solution, best possible 96.538154 (2394.21 seconds)
Cbc0010I After 6400 nodes, 3182 on tree, 935.28108 best solution, best possible 96.538154 (2407.72 seconds)
Cbc0010I After 6500 nodes, 3232 on tree, 935.28108 best solution, best possible 96.538154 (2421.30 seconds)
Cbc0010I After 6600 nodes, 3282 on tree, 935.28108 best solution, best possible 96.538154 (2434.79 seconds)
Cbc0010I After 6700 nodes, 3332 on tree, 935.28108 best solution, best possible 96.538154 (2448.01 seconds)
Cbc0010I After 6800 nodes, 3382 on tree, 935.28108 best solution, best possible 96.538154 (2461.57 seconds)
Cbc0010I After 6900 nodes, 3432 on tree, 935.28108 best solution, best possible 96.538154 (2474.29 seconds)
Cbc0010I After 7000 nodes, 3482 on tree, 935.28108 best solution, best possible 96.538154 (2486.31 seconds)
Cbc0010I After 7100 nodes, 3532 on tree, 935.28108 best solution, best possible 96.538154 (2498.09 seconds)
Cbc0010I After 7200 nodes, 3582 on tree, 935.28108 best solution, best possible 96.538154 (2509.93 seconds)
Cbc0010I After 7300 nodes, 3632 on tree, 935.28108 best solution, best possible 96.538154 (2521.85 seconds)
Cbc0010I After 7400 nodes, 3682 on tree, 935.28108 best solution, best possible 96.538154 (2533.75 seconds)
Cbc0010I After 7500 nodes, 3732 on tree, 935.28108 best solution, best possible 96.538154 (2545.83 seconds)
Cbc0004I Integer solution of 641.31649 found after 414889 iterations and 7535 nodes (2550.04 seconds)
Cbc0010I After 7600 nodes, 873 on tree, 641.31649 best solution, best possible 96.592254 (2634.51 seconds)
Cbc0010I After 7700 nodes, 923 on tree, 641.31649 best solution, best possible 96.592254 (2670.48 seconds)
Cbc0010I After 7800 nodes, 973 on tree, 641.31649 best solution, best possible 96.592254 (2694.58 seconds)
Cbc0010I After 7900 nodes, 1023 on tree, 641.31649 best solution, best possible 96.592254 (2712.48 seconds)
Cbc0010I After 8000 nodes, 1073 on tree, 641.31649 best solution, best possible 96.592254 (2731.82 seconds)
Cbc0010I After 8100 nodes, 1123 on tree, 641.31649 best solution, best possible 96.592254 (2750.98 seconds)
Cbc0010I After 8200 nodes, 1173 on tree, 641.31649 best solution, best possible 96.592254 (2770.20 seconds)
Cbc0010I After 8300 nodes, 1223 on tree, 641.31649 best solution, best possible 96.592254 (2789.52 seconds)
Cbc0010I After 8400 nodes, 1273 on tree, 641.31649 best solution, best possible 96.592254 (2806.75 seconds)
Cbc0010I After 8500 nodes, 1323 on tree, 641.31649 best solution, best possible 96.592254 (2825.09 seconds)
Cbc0010I After 8600 nodes, 1373 on tree, 641.31649 best solution, best possible 96.592254 (2841.37 seconds)
Cbc0010I After 8700 nodes, 1423 on tree, 641.31649 best solution, best possible 96.592254 (2856.24 seconds)
Cbc0010I After 8800 nodes, 1473 on tree, 641.31649 best solution, best possible 96.592254 (2870.65 seconds)
Cbc0010I After 8900 nodes, 1523 on tree, 641.31649 best solution, best possible 96.592254 (2884.39 seconds)
Cbc0010I After 9000 nodes, 1573 on tree, 641.31649 best solution, best possible 96.592254 (2897.52 seconds)
Cbc0010I After 9100 nodes, 1622 on tree, 641.31649 best solution, best possible 96.592254 (2910.76 seconds)
Cbc0010I After 9200 nodes, 1671 on tree, 641.31649 best solution, best possible 96.592254 (2923.91 seconds)
Cbc0010I After 9300 nodes, 1717 on tree, 641.31649 best solution, best possible 96.592254 (2936.96 seconds)
Cbc0010I After 9400 nodes, 1765 on tree, 641.31649 best solution, best possible 96.592254 (2950.14 seconds)
Cbc0010I After 9500 nodes, 1815 on tree, 641.31649 best solution, best possible 96.592254 (2963.42 seconds)
Cbc0010I After 9600 nodes, 1865 on tree, 641.31649 best solution, best possible 96.592254 (2976.61 seconds)
Cbc0010I After 9700 nodes, 1915 on tree, 641.31649 best solution, best possible 96.592254 (2989.66 seconds)
Cbc0010I After 9800 nodes, 1965 on tree, 641.31649 best solution, best possible 96.592254 (3002.63 seconds)
Cbc0010I After 9900 nodes, 2015 on tree, 641.31649 best solution, best possible 96.592254 (3015.67 seconds)
Cbc0010I After 10000 nodes, 2065 on tree, 641.31649 best solution, best possible 96.592254 (3028.81 seconds)
Cbc0010I After 10100 nodes, 2111 on tree, 641.31649 best solution, best possible 96.592254 (3042.00 seconds)
Cbc0010I After 10200 nodes, 2161 on tree, 641.31649 best solution, best possible 96.592254 (3055.38 seconds)
Cbc0010I After 10300 nodes, 2211 on tree, 641.31649 best solution, best possible 96.592254 (3068.81 seconds)
Cbc0010I After 10400 nodes, 2261 on tree, 641.31649 best solution, best possible 96.592254 (3082.21 seconds)
Cbc0010I After 10500 nodes, 2311 on tree, 641.31649 best solution, best possible 96.592254 (3095.82 seconds)
Cbc0010I After 10600 nodes, 2361 on tree, 641.31649 best solution, best possible 96.592254 (3110.20 seconds)
Cbc0010I After 10700 nodes, 2411 on tree, 641.31649 best solution, best possible 96.592254 (3123.79 seconds)
Cbc0010I After 10800 nodes, 2461 on tree, 641.31649 best solution, best possible 96.592254 (3138.12 seconds)
Cbc0010I After 10900 nodes, 2511 on tree, 641.31649 best solution, best possible 96.592254 (3151.89 seconds)
Cbc0010I After 11000 nodes, 2560 on tree, 641.31649 best solution, best possible 96.592254 (3164.76 seconds)
Cbc0010I After 11100 nodes, 2610 on tree, 641.31649 best solution, best possible 96.592254 (3177.08 seconds)
Cbc0010I After 11200 nodes, 2660 on tree, 641.31649 best solution, best possible 96.592254 (3189.35 seconds)
Cbc0010I After 11300 nodes, 2710 on tree, 641.31649 best solution, best possible 96.592254 (3201.51 seconds)
Cbc0010I After 11400 nodes, 2760 on tree, 641.31649 best solution, best possible 96.592254 (3213.67 seconds)
Cbc0010I After 11500 nodes, 2810 on tree, 641.31649 best solution, best possible 96.592254 (3225.80 seconds)
Couenne: new cutoff value 6.4028200670e+02 (3256.24 seconds)
Cbc0004I Integer solution of 640.28201 found after 606120 iterations and 11540 nodes (3230.78 seconds)
Cbc0010I After 11600 nodes, 1320 on tree, 640.28201 best solution, best possible 96.660582 (3284.59 seconds)
Cbc0010I After 11700 nodes, 1370 on tree, 640.28201 best solution, best possible 96.660582 (3315.62 seconds)
Cbc0010I After 11800 nodes, 1420 on tree, 640.28201 best solution, best possible 96.660582 (3336.47 seconds)
Cbc0010I After 11900 nodes, 1470 on tree, 640.28201 best solution, best possible 96.660582 (3354.08 seconds)
Cbc0010I After 12000 nodes, 1520 on tree, 640.28201 best solution, best possible 96.660582 (3371.85 seconds)
Cbc0010I After 12100 nodes, 1570 on tree, 640.28201 best solution, best possible 96.660582 (3389.40 seconds)
Cbc0010I After 12200 nodes, 1620 on tree, 640.28201 best solution, best possible 96.660582 (3406.97 seconds)
Cbc0010I After 12300 nodes, 1670 on tree, 640.28201 best solution, best possible 96.660582 (3424.63 seconds)
Cbc0010I After 12400 nodes, 1720 on tree, 640.28201 best solution, best possible 96.660582 (3440.96 seconds)
Cbc0010I After 12500 nodes, 1770 on tree, 640.28201 best solution, best possible 96.660582 (3457.21 seconds)
Cbc0010I After 12600 nodes, 1820 on tree, 640.28201 best solution, best possible 96.660582 (3472.71 seconds)
Cbc0010I After 12700 nodes, 1870 on tree, 640.28201 best solution, best possible 96.660582 (3487.86 seconds)
Cbc0010I After 12800 nodes, 1920 on tree, 640.28201 best solution, best possible 96.660582 (3501.82 seconds)
Cbc0010I After 12900 nodes, 1970 on tree, 640.28201 best solution, best possible 96.660582 (3515.79 seconds)
Cbc0010I After 13000 nodes, 2019 on tree, 640.28201 best solution, best possible 96.660582 (3528.87 seconds)
Cbc0010I After 13100 nodes, 2068 on tree, 640.28201 best solution, best possible 96.660582 (3541.59 seconds)
Cbc0010I After 13200 nodes, 2117 on tree, 640.28201 best solution, best possible 96.660582 (3554.36 seconds)
Cbc0010I After 13300 nodes, 2166 on tree, 640.28201 best solution, best possible 96.660582 (3567.17 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 640.28201 (best possible 96.660582), took 758355 iterations and 13356 nodes (3581.12 seconds)
Cbc0035I Maximum depth 2011, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      12041
Linearization cuts added in total:          12041  (separation time: 0.055683s)
Total solve time:                         3581.45s (3581.45s in branch-and-bound)
Lower bound:                              96.6606
Upper bound:                              640.282  (gap: 556.64%)
Branch-and-bound nodes:                     13356
Stats: /tmp/jl_JsqbGd/model.nl 2420 [var]  820 [int] 2440 [con] 3241 [aux]  12041 [root]    12041 [tot] 0.055683 [sep]  3581.45 [time]  3581.46 [bb]         9.666058e+01 [lower]         6.402820e+02 [upper]   13356 [nodes]
Performance of                           FBBT:	    318.424s,    17490 runs. fix: 0.000497114 shrnk:   0.469861 ubd:          0 2ubd:          0 infeas:         16
Performance of                           OBBT:	     10.947s,        8 runs. fix:   0.272727 shrnk:   0.231285 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt
