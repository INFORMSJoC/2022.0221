solving instance uflp nlass orlib 41 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 270404.12       49 5.934404
NLP0014I             2         OPT 927222.89       45 0.967397
Couenne: new cutoff value 9.2722289049e+05 (33.1386 seconds)
Loaded instance "/tmp/jl_dnF8eC/model.nl"
Constraints:         2450
Variables:           2416 (816 integer)
Auxiliaries:         3248 (0 integer)

Coin0506I Presolve 9481 (-960) rows, 4701 (-963) columns and 21273 (-1972) elements
Clp0006I 0  Obj 0 Primal inf 97.999951 (49)
Clp0006I 264  Obj 2.1056418e-16 Primal inf 207.97567 (251)
Clp0006I 528  Obj 3.0366303e-15 Primal inf 168.68386 (259)
Clp0006I 792  Obj 6.2231323e-15 Primal inf 109.11049 (195)
Clp0006I 1056  Obj 5.6074694e-15 Primal inf 98.016526 (203)
Clp0006I 1320  Obj 1.5172695e-15 Primal inf 262.20001 (356)
Clp0006I 1584  Obj 1.0374993e-15 Primal inf 292.79707 (481)
Clp0006I 1848  Obj 1.0537714e-15 Primal inf 226.60705 (399)
Clp0006I 2112  Obj 1.0069608e-15 Primal inf 253.29257 (377)
Clp0006I 2376  Obj 5388.9914 Primal inf 24.283333 (146)
Clp0006I 2640  Obj 6517.9634 Primal inf 4.2142286 (34)
Clp0006I 2746  Obj 6517.9634
Clp0000I Optimal - objective value 6517.9634
Clp0032I Optimal objective 6517.963376 - 2746 iterations time 0.362, Presolve 0.06
Clp0000I Optimal - objective value 6517.9634
Cbc0012I Integer solution of 927222.89 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.02 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 6517.9634
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1354 added rows had average density of 2
Cbc0013I At root node, 1354 cuts changed objective from 6517.9634 to 116353.21 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 12241 row cuts average 2.0 elements, 810 column cuts (2148 active)
Cbc0010I After 0 nodes, 1 on tree, 927222.89 best solution, best possible 116353.21 (142.63 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 5.5050455082e+05 (547.327 seconds)
Cbc0012I Integer solution of 550504.55 found by Couenne Rounding NLP after 15223 iterations and 2 nodes (513.42 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 550504.55 best solution, best possible 122121.13 (1412.34 seconds)
Cbc0010I After 200 nodes, 100 on tree, 550504.55 best solution, best possible 122121.13 (1444.18 seconds)
Cbc0010I After 300 nodes, 150 on tree, 550504.55 best solution, best possible 122121.13 (1477.23 seconds)
Cbc0010I After 400 nodes, 200 on tree, 550504.55 best solution, best possible 122121.13 (1507.59 seconds)
Cbc0010I After 500 nodes, 246 on tree, 550504.55 best solution, best possible 122121.13 (1535.99 seconds)
Cbc0010I After 600 nodes, 289 on tree, 550504.55 best solution, best possible 122121.13 (1563.24 seconds)
Cbc0010I After 700 nodes, 333 on tree, 550504.55 best solution, best possible 122121.13 (1590.99 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 359 on tree, 550504.55 best solution, best possible 123915.66 (2438.12 seconds)
Cbc0010I After 900 nodes, 409 on tree, 550504.55 best solution, best possible 123915.66 (2472.17 seconds)
Cbc0010I After 1000 nodes, 459 on tree, 550504.55 best solution, best possible 123915.66 (2504.54 seconds)
Cbc0010I After 1100 nodes, 509 on tree, 550504.55 best solution, best possible 123915.66 (2536.75 seconds)
Cbc0010I After 1200 nodes, 559 on tree, 550504.55 best solution, best possible 123915.66 (2567.53 seconds)
Cbc0010I After 1300 nodes, 609 on tree, 550504.55 best solution, best possible 123915.66 (2595.15 seconds)
Cbc0010I After 1400 nodes, 659 on tree, 550504.55 best solution, best possible 123915.66 (2624.30 seconds)
Cbc0010I After 1500 nodes, 707 on tree, 550504.55 best solution, best possible 123915.66 (2654.84 seconds)
Cbc0010I After 1600 nodes, 757 on tree, 550504.55 best solution, best possible 123915.66 (2685.13 seconds)
Cbc0010I After 1700 nodes, 805 on tree, 550504.55 best solution, best possible 123915.66 (2716.07 seconds)
Cbc0010I After 1800 nodes, 854 on tree, 550504.55 best solution, best possible 123915.66 (2748.68 seconds)
Cbc0010I After 1900 nodes, 903 on tree, 550504.55 best solution, best possible 123915.66 (2779.61 seconds)
Cbc0010I After 2000 nodes, 953 on tree, 550504.55 best solution, best possible 123915.66 (2810.93 seconds)
Cbc0010I After 2100 nodes, 1003 on tree, 550504.55 best solution, best possible 123915.66 (2839.77 seconds)
Cbc0010I After 2200 nodes, 1053 on tree, 550504.55 best solution, best possible 123915.66 (2869.50 seconds)
Cbc0010I After 2300 nodes, 1103 on tree, 550504.55 best solution, best possible 123915.66 (2900.49 seconds)
Cbc0010I After 2400 nodes, 1153 on tree, 550504.55 best solution, best possible 123915.66 (2929.97 seconds)
Cbc0010I After 2500 nodes, 1203 on tree, 550504.55 best solution, best possible 123915.66 (2957.92 seconds)
Cbc0010I After 2600 nodes, 1253 on tree, 550504.55 best solution, best possible 123915.66 (2988.68 seconds)
Cbc0010I After 2700 nodes, 1303 on tree, 550504.55 best solution, best possible 123915.66 (3019.85 seconds)
Cbc0010I After 2800 nodes, 1353 on tree, 550504.55 best solution, best possible 123915.66 (3049.40 seconds)
Cbc0010I After 2900 nodes, 1403 on tree, 550504.55 best solution, best possible 123915.66 (3075.10 seconds)
Cbc0010I After 3000 nodes, 1453 on tree, 550504.55 best solution, best possible 123915.66 (3099.25 seconds)
Cbc0010I After 3100 nodes, 1503 on tree, 550504.55 best solution, best possible 123915.66 (3123.38 seconds)
Cbc0010I After 3200 nodes, 1553 on tree, 550504.55 best solution, best possible 123915.66 (3150.23 seconds)
Cbc0010I After 3300 nodes, 1603 on tree, 550504.55 best solution, best possible 123915.66 (3177.46 seconds)
Cbc0010I After 3400 nodes, 1653 on tree, 550504.55 best solution, best possible 123915.66 (3203.13 seconds)
Cbc0010I After 3500 nodes, 1703 on tree, 550504.55 best solution, best possible 123915.66 (3230.25 seconds)
Cbc0010I After 3600 nodes, 1753 on tree, 550504.55 best solution, best possible 123915.66 (3256.51 seconds)
Cbc0010I After 3700 nodes, 1803 on tree, 550504.55 best solution, best possible 123915.66 (3283.69 seconds)
Cbc0010I After 3800 nodes, 1853 on tree, 550504.55 best solution, best possible 123915.66 (3311.16 seconds)
Cbc0010I After 3900 nodes, 1903 on tree, 550504.55 best solution, best possible 123915.66 (3338.27 seconds)
Cbc0010I After 4000 nodes, 1953 on tree, 550504.55 best solution, best possible 123915.66 (3366.03 seconds)
Cbc0010I After 4100 nodes, 2003 on tree, 550504.55 best solution, best possible 123915.66 (3392.47 seconds)
Cbc0010I After 4200 nodes, 2053 on tree, 550504.55 best solution, best possible 123915.66 (3418.86 seconds)
Cbc0010I After 4300 nodes, 2103 on tree, 550504.55 best solution, best possible 123915.66 (3445.94 seconds)
Cbc0010I After 4400 nodes, 2153 on tree, 550504.55 best solution, best possible 123915.66 (3472.69 seconds)
Cbc0010I After 4500 nodes, 2203 on tree, 550504.55 best solution, best possible 123915.66 (3499.26 seconds)
Cbc0010I After 4600 nodes, 2253 on tree, 550504.55 best solution, best possible 123915.66 (3524.99 seconds)
Cbc0010I After 4700 nodes, 2303 on tree, 550504.55 best solution, best possible 123915.66 (3551.70 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 550504.55 (best possible 123915.66), took 1097427 iterations and 4756 nodes (3593.24 seconds)
Cbc0035I Maximum depth 1987, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      10441
Linearization cuts added in total:          10441  (separation time: 0.087231s)
Total solve time:                         3593.85s (3593.85s in branch-and-bound)
Lower bound:                               123916
Upper bound:                               550505  (gap: 344.25%)
Branch-and-bound nodes:                      4756
Stats: /tmp/jl_dnF8eC/model.nl 2416 [var]  816 [int] 2450 [con] 3248 [aux]  10441 [root]    10441 [tot] 0.087231 [sep]  3593.85 [time]  3593.87 [bb]         1.239157e+05 [lower]         5.505046e+05 [upper]    4756 [nodes]
Performance of                           FBBT:	    176.555s,     7707 runs. fix:          0 shrnk:    116.152 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.0683s,        9 runs. fix:    0.25974 shrnk:    2.13295 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap41.txt
