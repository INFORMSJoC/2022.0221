solving instance uflp nlass gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-4.txt square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 90.524005       44 25.644339
NLP0014I             2         OPT 730.93967       33 1.263446
Couenne: new cutoff value 7.3093968821e+02 (43.8425 seconds)
Loaded instance "/tmp/jl_rDx9XD/model.nl"
Constraints:         5460
Variables:           5430 (1830 integer)
Auxiliaries:         1861 (0 integer)

Coin0506I Presolve 14391 (-70) rows, 7161 (-130) columns and 32291 (-200) elements
Clp0006I 0  Obj 0 Primal inf 59.99994 (60) Dual inf 9.4584737e+12 (1800)
Clp0006I 296  Obj 1.625 Primal inf 59.37494 (60) Dual inf 9.8036001e+12 (1800)
Clp0006I 592  Obj 16.442477 Primal inf 56.670686 (59) Dual inf 9985868.1 (1745)
Clp0006I 888  Obj 38.524783 Primal inf 52.367458 (58) Dual inf 10174013 (1717)
Clp0006I 1184  Obj 44.790997 Primal inf 48.452006 (59) Dual inf 10560110 (1715)
Clp0006I 1480  Obj 114.41543 Primal inf 38.201703 (57) Dual inf 10118571 (1630)
Clp0006I 1776  Obj 185.17802 Primal inf 25.338258 (43) Dual inf 7103836.8 (1339)
Clp0006I 2072  Obj 318.10038 Primal inf 1.8814636 (19) Dual inf 213501.06 (944)
Clp0006I 2368  Obj 195.12171 Dual inf 8987.1864 (669)
Clp0006I 2664  Obj 74.655225 Dual inf 2995.5036 (260)
Clp0006I 2960  Obj 17.482147 Dual inf 917.11488 (124)
Clp0006I 3256  Obj 10.25 Dual inf 138.31231 (60)
Clp0006I 3552  Obj 10.25 Dual inf 19.466045 (30)
Clp0006I 3565  Obj 10.125
Clp0000I Optimal - objective value 10.125
Clp0032I Optimal objective 10.12499994 - 3565 iterations time 0.422, Presolve 0.08
Clp0000I Optimal - objective value 10.125
Cbc0012I Integer solution of 730.93969 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.02 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10.125
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2204 added rows had average density of 2
Cbc0013I At root node, 2204 cuts changed objective from 10.125 to 82.551002 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 30574 row cuts average 2.0 elements, 4577 column cuts (6465 active)
Cbc0010I After 0 nodes, 1 on tree, 730.93969 best solution, best possible 82.551002 (64.37 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.5145997014e+02 (373.247 seconds)
Cbc0012I Integer solution of 651.45997 found by Couenne Rounding NLP after 35014 iterations and 3 nodes (328.45 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 651.45997 best solution, best possible 83.140714 (661.46 seconds)
Cbc0010I After 200 nodes, 100 on tree, 651.45997 best solution, best possible 83.140714 (711.89 seconds)
Cbc0010I After 300 nodes, 150 on tree, 651.45997 best solution, best possible 83.140714 (759.28 seconds)
Cbc0010I After 400 nodes, 200 on tree, 651.45997 best solution, best possible 83.140714 (798.36 seconds)
Cbc0010I After 500 nodes, 250 on tree, 651.45997 best solution, best possible 83.140714 (834.73 seconds)
Cbc0010I After 600 nodes, 300 on tree, 651.45997 best solution, best possible 83.140714 (864.96 seconds)
Cbc0010I After 700 nodes, 350 on tree, 651.45997 best solution, best possible 83.140714 (892.88 seconds)
Cbc0010I After 800 nodes, 400 on tree, 651.45997 best solution, best possible 83.140714 (919.24 seconds)
Cbc0010I After 900 nodes, 450 on tree, 651.45997 best solution, best possible 83.140714 (939.56 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 651.45997 best solution, best possible 83.140714 (957.40 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1100 nodes, 537 on tree, 651.45997 best solution, best possible 91.276097 (1253.51 seconds)
Cbc0010I After 1200 nodes, 587 on tree, 651.45997 best solution, best possible 91.276097 (1311.00 seconds)
Cbc0010I After 1300 nodes, 637 on tree, 651.45997 best solution, best possible 91.276097 (1355.54 seconds)
Cbc0010I After 1400 nodes, 687 on tree, 651.45997 best solution, best possible 91.276097 (1388.39 seconds)
Cbc0010I After 1500 nodes, 737 on tree, 651.45997 best solution, best possible 91.276097 (1417.87 seconds)
Cbc0010I After 1600 nodes, 787 on tree, 651.45997 best solution, best possible 91.276097 (1442.67 seconds)
Cbc0010I After 1700 nodes, 837 on tree, 651.45997 best solution, best possible 91.276097 (1467.26 seconds)
Cbc0010I After 1800 nodes, 887 on tree, 651.45997 best solution, best possible 91.276097 (1489.73 seconds)
Cbc0010I After 1900 nodes, 937 on tree, 651.45997 best solution, best possible 91.276097 (1507.75 seconds)
Cbc0010I After 2000 nodes, 981 on tree, 651.45997 best solution, best possible 91.846259 (1542.19 seconds)
Cbc0010I After 2100 nodes, 1031 on tree, 651.45997 best solution, best possible 91.846259 (1590.82 seconds)
Cbc0010I After 2200 nodes, 1081 on tree, 651.45997 best solution, best possible 91.846259 (1626.70 seconds)
Cbc0010I After 2300 nodes, 1131 on tree, 651.45997 best solution, best possible 91.846259 (1660.67 seconds)
Cbc0010I After 2400 nodes, 1181 on tree, 651.45997 best solution, best possible 91.846259 (1693.65 seconds)
Cbc0010I After 2500 nodes, 1231 on tree, 651.45997 best solution, best possible 91.846259 (1724.25 seconds)
Cbc0010I After 2600 nodes, 1281 on tree, 651.45997 best solution, best possible 91.846259 (1755.28 seconds)
Cbc0010I After 2700 nodes, 1331 on tree, 651.45997 best solution, best possible 91.846259 (1782.59 seconds)
Cbc0010I After 2800 nodes, 1374 on tree, 651.45997 best solution, best possible 91.961598 (1811.26 seconds)
Cbc0010I After 2900 nodes, 1424 on tree, 651.45997 best solution, best possible 91.961598 (1864.53 seconds)
Cbc0010I After 3000 nodes, 1474 on tree, 651.45997 best solution, best possible 91.961598 (1909.69 seconds)
Cbc0010I After 3100 nodes, 1524 on tree, 651.45997 best solution, best possible 91.961598 (1938.96 seconds)
Cbc0010I After 3200 nodes, 1574 on tree, 651.45997 best solution, best possible 91.961598 (1967.26 seconds)
Cbc0010I After 3300 nodes, 1624 on tree, 651.45997 best solution, best possible 91.961598 (1994.52 seconds)
Cbc0010I After 3400 nodes, 1674 on tree, 651.45997 best solution, best possible 91.961598 (2019.37 seconds)
Cbc0010I After 3500 nodes, 1724 on tree, 651.45997 best solution, best possible 91.961598 (2042.27 seconds)
Cbc0010I After 3600 nodes, 1774 on tree, 651.45997 best solution, best possible 91.961598 (2064.73 seconds)
Cbc0010I After 3700 nodes, 1824 on tree, 651.45997 best solution, best possible 91.961598 (2084.70 seconds)
Cbc0010I After 3800 nodes, 1874 on tree, 651.45997 best solution, best possible 91.961598 (2101.47 seconds)
Couenne: new cutoff value 5.5009314433e+02 (2157.53 seconds)
Cbc0004I Integer solution of 550.09314 found after 3161405 iterations and 3872 nodes (2112.76 seconds)
Cbc0010I After 3900 nodes, 1740 on tree, 550.09314 best solution, best possible 91.964745 (2132.58 seconds)
Cbc0010I After 4000 nodes, 1790 on tree, 550.09314 best solution, best possible 91.964745 (2183.65 seconds)
Cbc0010I After 4100 nodes, 1840 on tree, 550.09314 best solution, best possible 91.964745 (2216.47 seconds)
Cbc0010I After 4200 nodes, 1890 on tree, 550.09314 best solution, best possible 91.964745 (2246.18 seconds)
Cbc0010I After 4300 nodes, 1940 on tree, 550.09314 best solution, best possible 91.964745 (2272.51 seconds)
Cbc0010I After 4400 nodes, 1990 on tree, 550.09314 best solution, best possible 91.964745 (2290.95 seconds)
Cbc0010I After 4500 nodes, 2040 on tree, 550.09314 best solution, best possible 91.964745 (2307.26 seconds)
Cbc0010I After 4600 nodes, 2078 on tree, 550.09314 best solution, best possible 92.113414 (2324.65 seconds)
Cbc0010I After 4700 nodes, 2128 on tree, 550.09314 best solution, best possible 92.113414 (2375.39 seconds)
Cbc0010I After 4800 nodes, 2178 on tree, 550.09314 best solution, best possible 92.113414 (2421.07 seconds)
Cbc0010I After 4900 nodes, 2228 on tree, 550.09314 best solution, best possible 92.113414 (2463.69 seconds)
Cbc0010I After 5000 nodes, 2278 on tree, 550.09314 best solution, best possible 92.113414 (2503.88 seconds)
Cbc0010I After 5100 nodes, 2328 on tree, 550.09314 best solution, best possible 92.113414 (2535.90 seconds)
Cbc0010I After 5200 nodes, 2378 on tree, 550.09314 best solution, best possible 92.113414 (2566.99 seconds)
Cbc0010I After 5300 nodes, 2424 on tree, 550.09314 best solution, best possible 92.113414 (2590.90 seconds)
Cbc0010I After 5400 nodes, 2460 on tree, 550.09314 best solution, best possible 92.195243 (2631.39 seconds)
Cbc0010I After 5500 nodes, 2510 on tree, 550.09314 best solution, best possible 92.195243 (2674.15 seconds)
Cbc0010I After 5600 nodes, 2560 on tree, 550.09314 best solution, best possible 92.195243 (2706.51 seconds)
Cbc0010I After 5700 nodes, 2610 on tree, 550.09314 best solution, best possible 92.195243 (2741.15 seconds)
Cbc0010I After 5800 nodes, 2660 on tree, 550.09314 best solution, best possible 92.195243 (2770.62 seconds)
Cbc0010I After 5900 nodes, 2710 on tree, 550.09314 best solution, best possible 92.195243 (2792.92 seconds)
Cbc0010I After 6000 nodes, 2760 on tree, 550.09314 best solution, best possible 92.195243 (2809.00 seconds)
Cbc0010I After 6100 nodes, 2801 on tree, 550.09314 best solution, best possible 92.232754 (2829.49 seconds)
Cbc0010I After 6200 nodes, 2851 on tree, 550.09314 best solution, best possible 92.232754 (2881.07 seconds)
Cbc0010I After 6300 nodes, 2901 on tree, 550.09314 best solution, best possible 92.232754 (2922.51 seconds)
Cbc0010I After 6400 nodes, 2951 on tree, 550.09314 best solution, best possible 92.232754 (2954.14 seconds)
Cbc0010I After 6500 nodes, 3001 on tree, 550.09314 best solution, best possible 92.232754 (2980.16 seconds)
Cbc0010I After 6600 nodes, 3051 on tree, 550.09314 best solution, best possible 92.232754 (3005.00 seconds)
Cbc0010I After 6700 nodes, 3091 on tree, 550.09314 best solution, best possible 92.232754 (3026.71 seconds)
Cbc0010I After 6800 nodes, 3138 on tree, 550.09314 best solution, best possible 92.346471 (3077.43 seconds)
Cbc0010I After 6900 nodes, 3188 on tree, 550.09314 best solution, best possible 92.346471 (3111.42 seconds)
Cbc0010I After 7000 nodes, 3238 on tree, 550.09314 best solution, best possible 92.346471 (3140.06 seconds)
Cbc0010I After 7100 nodes, 3288 on tree, 550.09314 best solution, best possible 92.346471 (3165.92 seconds)
Cbc0010I After 7200 nodes, 3338 on tree, 550.09314 best solution, best possible 92.346471 (3187.80 seconds)
Cbc0010I After 7300 nodes, 3387 on tree, 550.09314 best solution, best possible 92.346471 (3208.30 seconds)
Cbc0010I After 7400 nodes, 3428 on tree, 550.09314 best solution, best possible 92.45154 (3253.07 seconds)
Cbc0010I After 7500 nodes, 3478 on tree, 550.09314 best solution, best possible 92.45154 (3293.75 seconds)
Cbc0010I After 7600 nodes, 3528 on tree, 550.09314 best solution, best possible 92.45154 (3327.04 seconds)
Cbc0010I After 7700 nodes, 3578 on tree, 550.09314 best solution, best possible 92.45154 (3364.53 seconds)
Cbc0010I After 7800 nodes, 3628 on tree, 550.09314 best solution, best possible 92.45154 (3397.28 seconds)
Cbc0010I After 7900 nodes, 3678 on tree, 550.09314 best solution, best possible 92.45154 (3428.29 seconds)
Cbc0010I After 8000 nodes, 3728 on tree, 550.09314 best solution, best possible 92.45154 (3452.38 seconds)
Cbc0010I After 8100 nodes, 3774 on tree, 550.09314 best solution, best possible 92.45154 (3471.47 seconds)
Cbc0010I After 8200 nodes, 3819 on tree, 550.09314 best solution, best possible 92.509239 (3518.01 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 550.09314 (best possible 92.509239), took 7008611 iterations and 8279 nodes (3569.21 seconds)
Cbc0035I Maximum depth 561, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:      14461
Linearization cuts added in total:          14461  (separation time: 0.038722s)
Total solve time:                         3569.74s (3569.74s in branch-and-bound)
Lower bound:                              92.5092
Upper bound:                              550.093  (gap: 489.35%)
Branch-and-bound nodes:                      8279
Stats: /tmp/jl_rDx9XD/model.nl 5430 [var] 1830 [int] 5460 [con] 1861 [aux]  14461 [root]    14461 [tot] 0.038722 [sep]  3569.74 [time]  3569.75 [bb]         9.250924e+01 [lower]         5.500931e+02 [upper]    8279 [nodes]
Performance of                           FBBT:	    79.1378s,    16016 runs. fix:          0 shrnk:    204.803 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    17.8461s,        6 runs. fix:      0.375 shrnk:    65.3805 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nlass(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:885
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nlass/script.jl:14
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-4.txt
