solving instance transportation 20 3 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 987.96549      169 2.60996
NLP0014I             2         OPT 3003.3594       98 1.283601
Couenne: new cutoff value 3.0033593987e+03 (16.992 seconds)
Loaded instance "/tmp/jl_eYc0je/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 15125.486 (4131)
Clp0006I 195  Obj 4.4111207e-14 Primal inf 19043.224 (4108)
Clp0006I 390  Obj 2.4699094e-10 Primal inf 21915.143 (3719)
Clp0006I 585  Obj 5.6227936e-08 Primal inf 22171.169 (3444)
Clp0006I 780  Obj 0.00025543172 Primal inf 18111.611 (3073)
Clp0006I 975  Obj 0.0004414933 Primal inf 10328.615 (2671)
Clp0006I 1170  Obj 0.00064005836 Primal inf 10574.213 (2131)
Clp0006I 1365  Obj 0.00096570779 Primal inf 14120.438 (1791)
Clp0006I 1560  Obj 0.0012920201 Primal inf 4977.9348 (1432)
Clp0006I 1755  Obj 0.0017850451 Primal inf 108226.99 (1318)
Clp0006I 1950  Obj 0.0029104589 Primal inf 747640.23 (1310)
Clp0006I 2145  Obj 0.0045745222 Primal inf 734279.18 (1369)
Clp0006I 2336  Obj 0.0069900968 Primal inf 836327.49 (1320)
Clp0006I 2531  Obj 0.0092108064 Primal inf 405751.94 (1238)
Clp0006I 2694  Obj 0.012550064 Primal inf 1133094.9 (1118)
Clp0006I 2835  Obj 0.016103174 Primal inf 428227.24 (1039)
Clp0006I 3019  Obj 0.020943742 Primal inf 1258683.5 (889)
Clp0006I 3214  Obj 0.02948672 Primal inf 1470579.3 (743)
Clp0006I 3398  Obj 0.051465045 Primal inf 1876029.6 (584)
Clp0006I 3585  Obj 0.16869054 Primal inf 929512.33 (401)
Clp0006I 3780  Obj 249.07703 Primal inf 52004.196 (264)
Clp0006I 3975  Obj 347.96992 Primal inf 39542.111 (201)
Clp0006I 4056  Obj 389.03094 Primal inf 5586.0372 (108)
Clp0006I 4163  Obj 420.43538
Clp0000I Optimal - objective value 420.42416
Clp0032I Optimal objective 420.4241589 - 4163 iterations time 1.082, Presolve 0.02
Clp0000I Optimal - objective value 420.42416
NLP Heuristic: NLP0014I             3      INFEAS 37.870576       47 0.55298
no solution.
Clp0000I Optimal - objective value 420.42416
Optimality Based BT: 328 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 106 added rows had average density of 2
Cbc0013I At root node, 106 cuts changed objective from 420.42416 to 424.02473 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 560 row cuts average 2.0 elements, 14 column cuts (14 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (126.57 seconds)
Optimality Based BT: 106 improved bounds
Optimality Based BT: 115 improved bounds
Optimality Based BT: 127 improved bounds
Optimality Based BT: 99 improved bounds
Optimality Based BT: 123 improved bounds
Optimality Based BT: 106 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 429.24762 (990.90 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 429.24762 (1009.53 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 429.24762 (1027.83 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 429.24762 (1045.24 seconds)
Cbc0010I After 500 nodes, 242 on tree, 1e+50 best solution, best possible 429.24762 (1061.13 seconds)
Cbc0010I After 600 nodes, 291 on tree, 1e+50 best solution, best possible 429.24762 (1076.95 seconds)
Cbc0010I After 700 nodes, 335 on tree, 1e+50 best solution, best possible 429.24762 (1093.30 seconds)
Optimality Based BT: 99 improved bounds
Optimality Based BT: 109 improved bounds
Optimality Based BT: 104 improved bounds
Cbc0010I After 800 nodes, 381 on tree, 1e+50 best solution, best possible 432.44732 (1828.76 seconds)
Cbc0010I After 900 nodes, 431 on tree, 1e+50 best solution, best possible 432.44732 (1846.58 seconds)
Cbc0010I After 1000 nodes, 481 on tree, 1e+50 best solution, best possible 432.44732 (1865.50 seconds)
Cbc0010I After 1100 nodes, 531 on tree, 1e+50 best solution, best possible 432.44732 (1884.34 seconds)
Cbc0010I After 1200 nodes, 579 on tree, 1e+50 best solution, best possible 432.44732 (1901.28 seconds)
Cbc0010I After 1300 nodes, 627 on tree, 1e+50 best solution, best possible 432.44732 (1917.63 seconds)
Cbc0010I After 1400 nodes, 672 on tree, 1e+50 best solution, best possible 432.44732 (1933.55 seconds)
Cbc0010I After 1500 nodes, 705 on tree, 1e+50 best solution, best possible 433.18031 (2032.56 seconds)
Cbc0010I After 1600 nodes, 755 on tree, 1e+50 best solution, best possible 433.18031 (2050.68 seconds)
Cbc0010I After 1700 nodes, 805 on tree, 1e+50 best solution, best possible 433.18031 (2069.18 seconds)
Cbc0010I After 1800 nodes, 855 on tree, 1e+50 best solution, best possible 433.18031 (2087.68 seconds)
Cbc0010I After 1900 nodes, 901 on tree, 1e+50 best solution, best possible 433.18031 (2104.25 seconds)
Cbc0010I After 2000 nodes, 950 on tree, 1e+50 best solution, best possible 433.18031 (2120.58 seconds)
Cbc0010I After 2100 nodes, 997 on tree, 1e+50 best solution, best possible 433.18031 (2135.93 seconds)
Cbc0010I After 2200 nodes, 1041 on tree, 1e+50 best solution, best possible 433.18031 (2151.53 seconds)
Cbc0010I After 2300 nodes, 1087 on tree, 1e+50 best solution, best possible 433.61368 (2525.89 seconds)
Cbc0010I After 2400 nodes, 1137 on tree, 1e+50 best solution, best possible 433.61368 (2550.50 seconds)
Cbc0010I After 2500 nodes, 1187 on tree, 1e+50 best solution, best possible 433.61368 (2568.70 seconds)
Cbc0010I After 2600 nodes, 1236 on tree, 1e+50 best solution, best possible 433.61368 (2587.00 seconds)
Cbc0010I After 2700 nodes, 1283 on tree, 1e+50 best solution, best possible 433.61368 (2603.51 seconds)
Cbc0010I After 2800 nodes, 1326 on tree, 1e+50 best solution, best possible 433.61368 (2618.64 seconds)
Cbc0010I After 2900 nodes, 1370 on tree, 1e+50 best solution, best possible 433.61368 (2634.20 seconds)
Cbc0010I After 3000 nodes, 1406 on tree, 1e+50 best solution, best possible 435.79984 (2832.50 seconds)
Cbc0010I After 3100 nodes, 1456 on tree, 1e+50 best solution, best possible 435.79984 (2851.10 seconds)
Cbc0010I After 3200 nodes, 1506 on tree, 1e+50 best solution, best possible 435.79984 (2869.60 seconds)
Cbc0010I After 3300 nodes, 1555 on tree, 1e+50 best solution, best possible 435.79984 (2887.72 seconds)
Cbc0010I After 3400 nodes, 1602 on tree, 1e+50 best solution, best possible 435.79984 (2904.61 seconds)
Cbc0010I After 3500 nodes, 1650 on tree, 1e+50 best solution, best possible 435.79984 (2920.87 seconds)
Cbc0010I After 3600 nodes, 1693 on tree, 1e+50 best solution, best possible 435.79984 (2936.17 seconds)
Cbc0010I After 3700 nodes, 1735 on tree, 1e+50 best solution, best possible 435.79984 (2951.76 seconds)
Cbc0010I After 3800 nodes, 1777 on tree, 1e+50 best solution, best possible 436.24487 (3061.09 seconds)
Cbc0010I After 3900 nodes, 1827 on tree, 1e+50 best solution, best possible 436.24487 (3079.20 seconds)
Cbc0010I After 4000 nodes, 1876 on tree, 1e+50 best solution, best possible 436.24487 (3097.35 seconds)
Cbc0010I After 4100 nodes, 1925 on tree, 1e+50 best solution, best possible 436.24487 (3114.53 seconds)
Cbc0010I After 4200 nodes, 1971 on tree, 1e+50 best solution, best possible 436.24487 (3130.07 seconds)
Cbc0010I After 4300 nodes, 2010 on tree, 1e+50 best solution, best possible 436.24487 (3145.35 seconds)
Cbc0010I After 4400 nodes, 2042 on tree, 1e+50 best solution, best possible 436.24487 (3159.66 seconds)
Optimality Based BT: 75 improved bounds
Cbc0010I After 4500 nodes, 2083 on tree, 1e+50 best solution, best possible 437.08133 (3228.11 seconds)
Cbc0010I After 4600 nodes, 2133 on tree, 1e+50 best solution, best possible 437.08133 (3247.31 seconds)
Cbc0010I After 4700 nodes, 2183 on tree, 1e+50 best solution, best possible 437.08133 (3265.64 seconds)
Cbc0010I After 4800 nodes, 2230 on tree, 1e+50 best solution, best possible 437.08133 (3282.83 seconds)
Cbc0010I After 4900 nodes, 2278 on tree, 1e+50 best solution, best possible 437.08133 (3299.37 seconds)
Cbc0010I After 5000 nodes, 2324 on tree, 1e+50 best solution, best possible 437.08133 (3315.45 seconds)
Cbc0010I After 5100 nodes, 2371 on tree, 1e+50 best solution, best possible 437.08133 (3331.70 seconds)
Cbc0010I After 5200 nodes, 2407 on tree, 1e+50 best solution, best possible 437.41688 (3530.47 seconds)
Cbc0010I After 5300 nodes, 2457 on tree, 1e+50 best solution, best possible 437.41688 (3548.35 seconds)
Cbc0010I After 5400 nodes, 2507 on tree, 1e+50 best solution, best possible 437.41688 (3566.32 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 437.41688), took 654986 iterations and 5486 nodes (3588.57 seconds)
Cbc0035I Maximum depth 394, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.047887s)
Total solve time:                         3589.65s (3589.65s in branch-and-bound)
Lower bound:                              437.417
Upper bound:                              3003.36  (gap: 585.27%)
Branch-and-bound nodes:                      5486
Stats: /tmp/jl_eYc0je/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.047887 [sep]  3589.65 [time]  3589.66 [bb]         4.374169e+02 [lower]         3.003359e+03 [upper]    5486 [nodes]
Performance of                           FBBT:	    134.985s,    10918 runs. fix:          0 shrnk:    62.7162 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    399.531s,       11 runs. fix:          0 shrnk:    12.4719 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
