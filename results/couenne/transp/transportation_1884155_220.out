solving instance transportation 15 2 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 107.59152       37 0.199138
NLP0014I             2      INFEAS 2.0676872       59 0.311697
Loaded instance "/tmp/jl_KHvUoB/model.nl"
Constraints:          480
Variables:            675 (225 integer)
Auxiliaries:          226 (0 integer)

Coin0506I Presolve 1154 (-450) rows, 450 (-451) columns and 2698 (-1125) elements
Clp0006I 0  Obj 0 Primal inf 999.99999 (15)
Clp0006I 96  Obj 6.9780875e-14 Primal inf 6548.6249 (85)
Clp0006I 187  Obj 19.691406 Primal inf 3400.3332 (97)
Clp0006I 285  Obj 33.535688 Primal inf 82.624966 (34)
Clp0006I 338  Obj 34.521252
Clp0000I Optimal - objective value 34.521252
Clp0032I Optimal objective 34.5212521 - 338 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 34.521252
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 34.521252
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 414 added rows had average density of 2
Cbc0013I At root node, 414 cuts changed objective from 34.521252 to 107.42114 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 4110 row cuts average 2.0 elements, 70 column cuts (339 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3.14 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 11 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 107.44953 (36.34 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 107.46999 (39.18 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 107.47193 (42.10 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 107.47193 (44.97 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 107.47193 (47.76 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 107.47193 (50.54 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 107.47193 (53.42 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 107.47193 (56.27 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 107.47193 (58.99 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 107.47193 (61.64 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 107.47193 (64.28 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 107.47193 (67.03 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 107.47193 (69.60 seconds)
Couenne: new cutoff value 1.0762847086e+02 (72.4109 seconds)
Cbc0010I After 1400 nodes, 684 on tree, 1e+50 best solution, best possible 107.4793 (71.75 seconds)
Cbc0010I After 1500 nodes, 692 on tree, 1e+50 best solution, best possible 107.484 (73.46 seconds)
Cbc0010I After 1600 nodes, 710 on tree, 1e+50 best solution, best possible 107.484 (75.37 seconds)
Cbc0010I After 1700 nodes, 719 on tree, 1e+50 best solution, best possible 107.484 (77.19 seconds)
Cbc0010I After 1800 nodes, 732 on tree, 1e+50 best solution, best possible 107.484 (79.15 seconds)
Cbc0010I After 1900 nodes, 744 on tree, 1e+50 best solution, best possible 107.484 (81.22 seconds)
Cbc0010I After 2000 nodes, 756 on tree, 1e+50 best solution, best possible 107.484 (83.37 seconds)
Cbc0010I After 2100 nodes, 769 on tree, 1e+50 best solution, best possible 107.48618 (85.26 seconds)
Cbc0010I After 2200 nodes, 776 on tree, 1e+50 best solution, best possible 107.48618 (86.94 seconds)
Cbc0010I After 2300 nodes, 785 on tree, 1e+50 best solution, best possible 107.48618 (88.79 seconds)
Cbc0010I After 2400 nodes, 793 on tree, 1e+50 best solution, best possible 107.48618 (90.66 seconds)
Cbc0010I After 2500 nodes, 802 on tree, 1e+50 best solution, best possible 107.48724 (92.47 seconds)
Cbc0010I After 2600 nodes, 813 on tree, 1e+50 best solution, best possible 107.48724 (94.27 seconds)
Cbc0010I After 2700 nodes, 826 on tree, 1e+50 best solution, best possible 107.48724 (96.15 seconds)
Cbc0010I After 2800 nodes, 833 on tree, 1e+50 best solution, best possible 107.48724 (97.92 seconds)
Cbc0010I After 2900 nodes, 845 on tree, 1e+50 best solution, best possible 107.48724 (99.96 seconds)
Cbc0010I After 3000 nodes, 863 on tree, 1e+50 best solution, best possible 107.48724 (102.15 seconds)
Cbc0010I After 3100 nodes, 881 on tree, 1e+50 best solution, best possible 107.48724 (104.43 seconds)
Cbc0010I After 3200 nodes, 895 on tree, 1e+50 best solution, best possible 107.4899 (106.50 seconds)
Cbc0010I After 3300 nodes, 906 on tree, 1e+50 best solution, best possible 107.4899 (108.31 seconds)
Cbc0010I After 3400 nodes, 915 on tree, 1e+50 best solution, best possible 107.4899 (110.14 seconds)
Cbc0010I After 3500 nodes, 922 on tree, 1e+50 best solution, best possible 107.4899 (111.94 seconds)
Cbc0010I After 3600 nodes, 934 on tree, 1e+50 best solution, best possible 107.4899 (113.98 seconds)
Cbc0010I After 3700 nodes, 942 on tree, 1e+50 best solution, best possible 107.4899 (116.12 seconds)
Cbc0010I After 3800 nodes, 966 on tree, 1e+50 best solution, best possible 107.4899 (118.56 seconds)
Cbc0010I After 3900 nodes, 992 on tree, 1e+50 best solution, best possible 107.4899 (121.00 seconds)
Cbc0010I After 4000 nodes, 1027 on tree, 1e+50 best solution, best possible 107.4899 (123.64 seconds)
Cbc0010I After 4100 nodes, 1059 on tree, 1e+50 best solution, best possible 107.4899 (126.30 seconds)
Cbc0010I After 4200 nodes, 1095 on tree, 1e+50 best solution, best possible 107.4899 (129.04 seconds)
Couenne: new cutoff value 1.0761949968e+02 (132.845 seconds)
Cbc0004I Integer solution of 107.6195 found after 519724 iterations and 4297 nodes (131.61 seconds)
Cbc0001I Search completed - best objective 107.6194998892034, took 519724 iterations and 4297 nodes (134.57 seconds)
Cbc0035I Maximum depth 694, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1604
Linearization cuts added in total:           1604  (separation time: 0.002829s)
Total solve time:                         134.607s (134.607s in branch-and-bound)
Lower bound:                              107.619
Upper bound:                              107.619  (gap: 0.00%)
Branch-and-bound nodes:                      4297
Stats: /tmp/jl_KHvUoB/model.nl  675 [var]  225 [int]  480 [con]  226 [aux]   1604 [root]     1604 [tot] 0.002829 [sep]  134.607 [time]  134.608 [bb]         1.076195e+02 [lower]         1.076195e+02 [upper]    4297 [nodes]
Performance of                           FBBT:	    1.69235s,     3964 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     20.352s,        7 runs. fix:          0 shrnk:    4.61255 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
