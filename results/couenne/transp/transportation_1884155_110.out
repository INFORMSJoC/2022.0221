solving instance transportation 10 1 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 130.45839       48 0.158583
NLP0014I             2         OPT 286.18401       73 0.198958
Couenne: new cutoff value 2.8618400918e+02 (0.538283 seconds)
Loaded instance "/tmp/jl_aDJbB2/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          102 (0 integer)

Coin0506I Presolve 611 (-110) rows, 291 (-111) columns and 1481 (-221) elements
Clp0006I 0  Obj 0 Primal inf 999.99999 (10)
Clp0006I 84  Obj 1.6518364e-14 Primal inf 795.99306 (65)
Clp0006I 162  Obj 7.603711e-15 Primal inf 2881.4871 (36)
Clp0006I 227  Obj 1.391349e-12 Primal inf 2644.3484 (38)
Clp0006I 296  Obj 6.496188e-09 Primal inf 7736.2275 (27)
Clp0006I 335  Obj 78.07907
Clp0000I Optimal - objective value 78.07907
Clp0032I Optimal objective 78.07906997 - 335 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 78.07907
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 78.07907
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 181 added rows had average density of 2
Cbc0013I At root node, 181 cuts changed objective from 78.07907 to 130.45657 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1806 row cuts average 2.0 elements, 15 column cuts (136 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.88 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 130.45831 (6.99 seconds)
Couenne: new cutoff value 1.3045835510e+02 (8.29518 seconds)
Cbc0004I Integer solution of 130.45836 found after 15976 iterations and 182 nodes (7.73 seconds)
Cbc0001I Search completed - best objective 130.4583550989883, took 16246 iterations and 196 nodes (7.82 seconds)
Cbc0035I Maximum depth 91, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        721
Linearization cuts added in total:            721  (separation time: 0.001775s)
Total solve time:                         7.84085s (7.84085s in branch-and-bound)
Lower bound:                              130.458
Upper bound:                              130.458  (gap: 0.00%)
Branch-and-bound nodes:                       196
Stats: /tmp/jl_aDJbB2/model.nl  300 [var]  100 [int]  220 [con]  102 [aux]    721 [root]      721 [tot] 0.001775 [sep]  7.84085 [time]  7.84142 [bb]         1.304584e+02 [lower]         1.304584e+02 [upper]     196 [nodes]
Performance of                           FBBT:	    0.05528s,      290 runs. fix:          0 shrnk:    48.9491 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.30732s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
