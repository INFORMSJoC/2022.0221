solving instance transportation 10 7 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 87.860912       39 0.110189
NLP0014I             2         OPT 202.55458       48 0.123297
Couenne: new cutoff value 2.0255458112e+02 (0.423903 seconds)
Loaded instance "/tmp/jl_Vdkd5N/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          100 (0 integer)

Coin0506I Presolve 607 (-110) rows, 289 (-111) columns and 1473 (-221) elements
Clp0006I 0  Obj 0 Primal inf 2779.5486 (10)
Clp0006I 76  Obj 2.5511476e-13 Primal inf 11177.672 (62)
Clp0006I 152  Obj 35.942524 Primal inf 2015.5458 (57)
Clp0006I 223  Obj 42.573053
Clp0000I Optimal - objective value 42.573053
Clp0032I Optimal objective 42.57305345 - 223 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 42.573053
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 42.573053
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 177 added rows had average density of 2
Cbc0013I At root node, 177 cuts changed objective from 42.573053 to 87.835966 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1883 row cuts average 2.0 elements, 65 column cuts (164 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.84 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 87.848117 (7.77 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 87.848117 (8.93 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 87.848117 (10.05 seconds)
Couenne: new cutoff value 8.7861197159e+01 (11.4222 seconds)
Cbc0004I Integer solution of 87.861197 found after 39939 iterations and 396 nodes (10.98 seconds)
Cbc0010I After 400 nodes, 12 on tree, 87.861197 best solution, best possible 87.849182 (11.05 seconds)
Cbc0010I After 500 nodes, 17 on tree, 87.861197 best solution, best possible 87.849182 (11.72 seconds)
Cbc0010I After 600 nodes, 20 on tree, 87.861197 best solution, best possible 87.852843 (12.33 seconds)
Cbc0010I After 700 nodes, 25 on tree, 87.861197 best solution, best possible 87.852843 (13.02 seconds)
Cbc0010I After 800 nodes, 33 on tree, 87.861197 best solution, best possible 87.85355 (13.75 seconds)
Cbc0010I After 900 nodes, 38 on tree, 87.861197 best solution, best possible 87.85355 (14.38 seconds)
Cbc0010I After 1000 nodes, 39 on tree, 87.861197 best solution, best possible 87.853771 (15.05 seconds)
Cbc0010I After 1100 nodes, 40 on tree, 87.861197 best solution, best possible 87.853956 (15.67 seconds)
Cbc0010I After 1200 nodes, 40 on tree, 87.861197 best solution, best possible 87.85433 (16.30 seconds)
Cbc0010I After 1300 nodes, 43 on tree, 87.861197 best solution, best possible 87.854446 (16.93 seconds)
Cbc0010I After 1400 nodes, 49 on tree, 87.861197 best solution, best possible 87.854446 (17.57 seconds)
Cbc0010I After 1500 nodes, 53 on tree, 87.861197 best solution, best possible 87.855345 (18.23 seconds)
Cbc0010I After 1600 nodes, 58 on tree, 87.861197 best solution, best possible 87.855345 (18.93 seconds)
Cbc0010I After 1700 nodes, 59 on tree, 87.861197 best solution, best possible 87.855518 (19.56 seconds)
Cbc0010I After 1800 nodes, 64 on tree, 87.861197 best solution, best possible 87.855811 (20.19 seconds)
Cbc0010I After 1900 nodes, 66 on tree, 87.861197 best solution, best possible 87.856178 (20.80 seconds)
Cbc0010I After 2000 nodes, 72 on tree, 87.861197 best solution, best possible 87.856927 (21.45 seconds)
Cbc0010I After 2100 nodes, 80 on tree, 87.861197 best solution, best possible 87.856927 (22.10 seconds)
Cbc0010I After 2200 nodes, 84 on tree, 87.861197 best solution, best possible 87.85724 (22.75 seconds)
Cbc0010I After 2300 nodes, 87 on tree, 87.861197 best solution, best possible 87.85724 (23.41 seconds)
Cbc0010I After 2400 nodes, 98 on tree, 87.861197 best solution, best possible 87.85724 (24.14 seconds)
Couenne: new cutoff value 8.7861107770e+01 (24.7787 seconds)
Cbc0004I Integer solution of 87.861108 found after 111379 iterations and 2427 nodes (24.34 seconds)
Cbc0010I After 2500 nodes, 92 on tree, 87.861108 best solution, best possible 87.857289 (24.80 seconds)
Cbc0010I After 2600 nodes, 92 on tree, 87.861108 best solution, best possible 87.857459 (25.40 seconds)
Cbc0010I After 2700 nodes, 94 on tree, 87.861108 best solution, best possible 87.857614 (26.01 seconds)
Cbc0010I After 2800 nodes, 100 on tree, 87.861108 best solution, best possible 87.857765 (26.64 seconds)
Cbc0010I After 2900 nodes, 101 on tree, 87.861108 best solution, best possible 87.85783 (27.25 seconds)
Cbc0010I After 3000 nodes, 103 on tree, 87.861108 best solution, best possible 87.857901 (27.87 seconds)
Cbc0010I After 3100 nodes, 106 on tree, 87.861108 best solution, best possible 87.857914 (28.51 seconds)
Cbc0010I After 3200 nodes, 109 on tree, 87.861108 best solution, best possible 87.85792 (29.19 seconds)
Cbc0010I After 3300 nodes, 115 on tree, 87.861108 best solution, best possible 87.857926 (29.89 seconds)
Cbc0010I After 3400 nodes, 119 on tree, 87.861108 best solution, best possible 87.857962 (30.54 seconds)
Cbc0010I After 3500 nodes, 126 on tree, 87.861108 best solution, best possible 87.857963 (31.24 seconds)
Cbc0010I After 3600 nodes, 130 on tree, 87.861108 best solution, best possible 87.857993 (31.91 seconds)
Cbc0010I After 3700 nodes, 136 on tree, 87.861108 best solution, best possible 87.858033 (32.58 seconds)
Cbc0010I After 3800 nodes, 138 on tree, 87.861108 best solution, best possible 87.858063 (33.25 seconds)
Cbc0010I After 3900 nodes, 140 on tree, 87.861108 best solution, best possible 87.858063 (33.96 seconds)
Cbc0010I After 4000 nodes, 143 on tree, 87.861108 best solution, best possible 87.858082 (34.60 seconds)
Cbc0010I After 4100 nodes, 147 on tree, 87.861108 best solution, best possible 87.858156 (35.25 seconds)
Cbc0010I After 4200 nodes, 151 on tree, 87.861108 best solution, best possible 87.85818 (35.93 seconds)
Cbc0010I After 4300 nodes, 154 on tree, 87.861108 best solution, best possible 87.858198 (36.60 seconds)
Cbc0010I After 4400 nodes, 157 on tree, 87.861108 best solution, best possible 87.858202 (37.25 seconds)
Cbc0010I After 4500 nodes, 164 on tree, 87.861108 best solution, best possible 87.858437 (37.94 seconds)
Cbc0010I After 4600 nodes, 167 on tree, 87.861108 best solution, best possible 87.858438 (38.63 seconds)
Cbc0010I After 4700 nodes, 171 on tree, 87.861108 best solution, best possible 87.85846 (39.30 seconds)
Cbc0010I After 4800 nodes, 176 on tree, 87.861108 best solution, best possible 87.8585 (40.01 seconds)
Cbc0010I After 4900 nodes, 177 on tree, 87.861108 best solution, best possible 87.858525 (40.69 seconds)
Cbc0010I After 5000 nodes, 179 on tree, 87.861108 best solution, best possible 87.858565 (41.37 seconds)
Cbc0010I After 5100 nodes, 184 on tree, 87.861108 best solution, best possible 87.858565 (42.04 seconds)
Cbc0010I After 5200 nodes, 185 on tree, 87.861108 best solution, best possible 87.858603 (42.71 seconds)
Cbc0010I After 5300 nodes, 185 on tree, 87.861108 best solution, best possible 87.858697 (43.36 seconds)
Cbc0010I After 5400 nodes, 187 on tree, 87.861108 best solution, best possible 87.858701 (44.02 seconds)
Cbc0010I After 5500 nodes, 188 on tree, 87.861108 best solution, best possible 87.858754 (44.66 seconds)
Cbc0010I After 5600 nodes, 191 on tree, 87.861108 best solution, best possible 87.858782 (45.32 seconds)
Cbc0010I After 5700 nodes, 192 on tree, 87.861108 best solution, best possible 87.858819 (45.94 seconds)
Cbc0010I After 5800 nodes, 194 on tree, 87.861108 best solution, best possible 87.85883 (46.60 seconds)
Cbc0010I After 5900 nodes, 195 on tree, 87.861108 best solution, best possible 87.858977 (47.26 seconds)
Cbc0010I After 6000 nodes, 194 on tree, 87.861108 best solution, best possible 87.859066 (47.88 seconds)
Cbc0010I After 6100 nodes, 195 on tree, 87.861108 best solution, best possible 87.859097 (48.54 seconds)
Cbc0010I After 6200 nodes, 195 on tree, 87.861108 best solution, best possible 87.85925 (49.18 seconds)
Cbc0010I After 6300 nodes, 201 on tree, 87.861108 best solution, best possible 87.85925 (49.92 seconds)
Cbc0010I After 6400 nodes, 199 on tree, 87.861108 best solution, best possible 87.859284 (50.56 seconds)
Cbc0010I After 6500 nodes, 200 on tree, 87.861108 best solution, best possible 87.859355 (51.24 seconds)
Cbc0010I After 6600 nodes, 201 on tree, 87.861108 best solution, best possible 87.859454 (51.89 seconds)
Cbc0010I After 6700 nodes, 202 on tree, 87.861108 best solution, best possible 87.859477 (52.57 seconds)
Cbc0010I After 6800 nodes, 203 on tree, 87.861108 best solution, best possible 87.859497 (53.24 seconds)
Cbc0010I After 6900 nodes, 207 on tree, 87.861108 best solution, best possible 87.859534 (53.97 seconds)
Cbc0010I After 7000 nodes, 210 on tree, 87.861108 best solution, best possible 87.859562 (54.64 seconds)
Cbc0010I After 7100 nodes, 211 on tree, 87.861108 best solution, best possible 87.859573 (55.29 seconds)
Cbc0010I After 7200 nodes, 212 on tree, 87.861108 best solution, best possible 87.859607 (55.94 seconds)
Cbc0010I After 7300 nodes, 208 on tree, 87.861108 best solution, best possible 87.859695 (56.53 seconds)
Cbc0010I After 7400 nodes, 209 on tree, 87.861108 best solution, best possible 87.859695 (57.18 seconds)
Cbc0010I After 7500 nodes, 206 on tree, 87.861108 best solution, best possible 87.859722 (57.82 seconds)
Cbc0010I After 7600 nodes, 205 on tree, 87.861108 best solution, best possible 87.859741 (58.46 seconds)
Cbc0010I After 7700 nodes, 207 on tree, 87.861108 best solution, best possible 87.85975 (59.12 seconds)
Cbc0010I After 7800 nodes, 207 on tree, 87.861108 best solution, best possible 87.859801 (59.81 seconds)
Cbc0010I After 7900 nodes, 204 on tree, 87.861108 best solution, best possible 87.859873 (60.46 seconds)
Cbc0010I After 8000 nodes, 202 on tree, 87.861108 best solution, best possible 87.859914 (61.13 seconds)
Cbc0010I After 8100 nodes, 208 on tree, 87.861108 best solution, best possible 87.859916 (61.87 seconds)
Cbc0010I After 8200 nodes, 208 on tree, 87.861108 best solution, best possible 87.859959 (62.55 seconds)
Couenne: new cutoff value 8.7860932822e+01 (63.5415 seconds)
Cbc0004I Integer solution of 87.860933 found after 297786 iterations and 8279 nodes (63.10 seconds)
Cbc0010I After 8300 nodes, 155 on tree, 87.860933 best solution, best possible 87.85999 (63.29 seconds)
Cbc0010I After 8400 nodes, 153 on tree, 87.860933 best solution, best possible 87.860024 (63.95 seconds)
Cbc0010I After 8500 nodes, 153 on tree, 87.860933 best solution, best possible 87.860043 (64.65 seconds)
Cbc0010I After 8600 nodes, 153 on tree, 87.860933 best solution, best possible 87.860111 (65.37 seconds)
Cbc0010I After 8700 nodes, 154 on tree, 87.860933 best solution, best possible 87.860135 (66.10 seconds)
Cbc0010I After 8800 nodes, 155 on tree, 87.860933 best solution, best possible 87.86015 (66.83 seconds)
Cbc0010I After 8900 nodes, 156 on tree, 87.860933 best solution, best possible 87.860172 (67.56 seconds)
Cbc0010I After 9000 nodes, 158 on tree, 87.860933 best solution, best possible 87.860201 (68.27 seconds)
Cbc0010I After 9100 nodes, 156 on tree, 87.860933 best solution, best possible 87.860214 (68.94 seconds)
Cbc0010I After 9200 nodes, 157 on tree, 87.860933 best solution, best possible 87.860221 (69.63 seconds)
Cbc0010I After 9300 nodes, 155 on tree, 87.860933 best solution, best possible 87.860267 (70.27 seconds)
Cbc0010I After 9400 nodes, 154 on tree, 87.860933 best solution, best possible 87.860288 (70.96 seconds)
Cbc0010I After 9500 nodes, 158 on tree, 87.860933 best solution, best possible 87.860302 (71.67 seconds)
Cbc0010I After 9600 nodes, 163 on tree, 87.860933 best solution, best possible 87.860312 (72.42 seconds)
Cbc0010I After 9700 nodes, 165 on tree, 87.860933 best solution, best possible 87.860328 (73.14 seconds)
Cbc0010I After 9800 nodes, 163 on tree, 87.860933 best solution, best possible 87.860362 (73.86 seconds)
Cbc0010I After 9900 nodes, 164 on tree, 87.860933 best solution, best possible 87.860368 (74.56 seconds)
Cbc0010I After 10000 nodes, 158 on tree, 87.860933 best solution, best possible 87.860409 (75.25 seconds)
Cbc0010I After 10100 nodes, 152 on tree, 87.860933 best solution, best possible 87.860444 (75.94 seconds)
Cbc0010I After 10200 nodes, 148 on tree, 87.860933 best solution, best possible 87.860462 (76.65 seconds)
Cbc0010I After 10300 nodes, 145 on tree, 87.860933 best solution, best possible 87.860485 (77.35 seconds)
Cbc0010I After 10400 nodes, 144 on tree, 87.860933 best solution, best possible 87.860492 (78.05 seconds)
Cbc0010I After 10500 nodes, 144 on tree, 87.860933 best solution, best possible 87.860501 (78.78 seconds)
Cbc0010I After 10600 nodes, 141 on tree, 87.860933 best solution, best possible 87.860523 (79.48 seconds)
Cbc0010I After 10700 nodes, 139 on tree, 87.860933 best solution, best possible 87.860538 (80.17 seconds)
Cbc0010I After 10800 nodes, 138 on tree, 87.860933 best solution, best possible 87.86056 (80.87 seconds)
Cbc0010I After 10900 nodes, 136 on tree, 87.860933 best solution, best possible 87.860568 (81.59 seconds)
Cbc0010I After 11000 nodes, 130 on tree, 87.860933 best solution, best possible 87.86061 (82.27 seconds)
Cbc0010I After 11100 nodes, 127 on tree, 87.860933 best solution, best possible 87.860645 (83.01 seconds)
Cbc0010I After 11200 nodes, 117 on tree, 87.860933 best solution, best possible 87.860675 (83.69 seconds)
Cbc0010I After 11300 nodes, 111 on tree, 87.860933 best solution, best possible 87.8607 (84.41 seconds)
Cbc0010I After 11400 nodes, 101 on tree, 87.860933 best solution, best possible 87.860736 (85.09 seconds)
Cbc0010I After 11500 nodes, 96 on tree, 87.860933 best solution, best possible 87.860755 (85.81 seconds)
Cbc0010I After 11600 nodes, 80 on tree, 87.860933 best solution, best possible 87.860785 (86.49 seconds)
Cbc0010I After 11700 nodes, 65 on tree, 87.860933 best solution, best possible 87.860809 (87.20 seconds)
Cbc0010I After 11800 nodes, 50 on tree, 87.860933 best solution, best possible 87.860848 (87.90 seconds)
Cbc0010I After 11900 nodes, 27 on tree, 87.860933 best solution, best possible 87.860886 (88.55 seconds)
Cbc0001I Search completed - best objective 87.860932822281, took 391448 iterations and 11967 nodes (88.96 seconds)
Cbc0035I Maximum depth 211, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        717
Linearization cuts added in total:            717  (separation time: 0.001822s)
Total solve time:                         88.9824s (88.9824s in branch-and-bound)
Lower bound:                              87.8609
Upper bound:                              87.8609  (gap: 0.00%)
Branch-and-bound nodes:                     11967
Stats: /tmp/jl_Vdkd5N/model.nl  300 [var]  100 [int]  220 [con]  100 [aux]    717 [root]      717 [tot] 0.001822 [sep]  88.9824 [time]   88.983 [bb]         8.786093e+01 [lower]         8.786093e+01 [upper]   11967 [nodes]
Performance of                           FBBT:	    1.76178s,     9382 runs. fix:          0 shrnk:    18.7565 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.91642s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
