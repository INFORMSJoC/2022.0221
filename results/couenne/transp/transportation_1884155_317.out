solving instance transportation 20 2 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 50.750387       56 0.638324
NLP0014I             2         OPT 664.82904      105 1.214336
Couenne: new cutoff value 6.6482904090e+02 (31.819 seconds)
Loaded instance "/tmp/jl_5Crc6q/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 21141.164 (3320)
Clp0006I 195  Obj 1.425625e-13 Primal inf 40315.879 (3782)
Clp0006I 390  Obj 2.382119e-13 Primal inf 52764.994 (4192)
Clp0006I 585  Obj 3.847182e-13 Primal inf 34443.62 (3931)
Clp0006I 780  Obj 2.5205803e-13 Primal inf 12597.14 (3087)
Clp0006I 975  Obj 3.3670035e-13 Primal inf 6207.6346 (2143)
Clp0006I 1170  Obj 3.0561493e-13 Primal inf 26652.088 (1727)
Clp0006I 1365  Obj 3.0864161e-13 Primal inf 21594.974 (1338)
Clp0006I 1560  Obj 5.8217709e-13 Primal inf 239351.53 (1087)
Clp0006I 1755  Obj 4.2255826e-13 Primal inf 3094.0361 (910)
Clp0006I 1932  Obj 3.8485471e-06 Primal inf 9536.8734 (807)
Clp0006I 1960  Obj 0.0014203588 Primal inf 3349543.1 (826)
Clp0006I 2054  Obj 0.010481193 Primal inf 2.5946202e+08 (905)
Clp0006I 2249  Obj 0.014242561 Primal inf 21610134 (1119)
Clp0006I 2444  Obj 0.014528824 Primal inf 22053902 (1430)
Clp0006I 2639  Obj 0.019385337 Primal inf 67796376 (1478)
Clp0006I 2834  Obj 0.023249451 Primal inf 2.5489588e+08 (1456)
Clp0006I 2997  Obj 0.025984338 Primal inf 40535726 (1340)
Clp0006I 3169  Obj 0.030606 Primal inf 1.3563047e+08 (1224)
Clp0006I 3217  Obj 0.031548665 Primal inf 24215607 (1177)
Clp0006I 3412  Obj 0.036091957 Primal inf 1.426206e+08 (1062)
Clp0006I 3607  Obj 0.052508513 Primal inf 1.1922715e+08 (887)
Clp0006I 3794  Obj 0.10121515 Primal inf 37201933 (783)
Clp0006I 3989  Obj 0.22905237 Primal inf 55737868 (634)
Clp0006I 4184  Obj 0.58344238 Primal inf 60474147 (519)
Clp0006I 4340  Obj 0.95856903 Primal inf 46468691 (386)
Clp0006I 4521  Obj 1.2260016 Primal inf 4720904.3 (250)
Clp0006I 4682  Obj 1.3892573 Primal inf 587435.16 (51)
Clp0006I 4745  Obj 1.4341773
Clp0006I 4745  Obj 1.4026813 Dual inf 0.045852786 (3)
Clp0006I 4748  Obj 1.4025222
Clp0000I Optimal - objective value 1.4025222
Clp0032I Optimal objective 1.402522165 - 4748 iterations time 0.962, Presolve 0.02
Clp0000I Optimal - objective value 1.4025222
NLP Heuristic: NLP0014I             3      INFEAS 38.808395      151 2.456664
no solution.
Clp0000I Optimal - objective value 1.4025222
Optimality Based BT: 331 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 158 added rows had average density of 2
Cbc0013I At root node, 158 cuts changed objective from 1.4025222 to 1.4541719 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 532 row cuts average 2.0 elements, 14 column cuts (14 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (132.07 seconds)
Optimality Based BT: 307 improved bounds
Optimality Based BT: 268 improved bounds
Optimality Based BT: 300 improved bounds
Optimality Based BT: 263 improved bounds
Optimality Based BT: 305 improved bounds
Optimality Based BT: 284 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.4911766 (958.19 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.4911766 (976.06 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.4911766 (993.34 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.4911766 (1010.20 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1.4911766 (1025.84 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1.4911766 (1041.24 seconds)
Cbc0010I After 700 nodes, 349 on tree, 1e+50 best solution, best possible 1.4911766 (1057.21 seconds)
Cbc0010I After 800 nodes, 398 on tree, 1e+50 best solution, best possible 1.4911766 (1073.91 seconds)
Cbc0010I After 900 nodes, 448 on tree, 1e+50 best solution, best possible 1.4911766 (1090.99 seconds)
Cbc0010I After 1000 nodes, 489 on tree, 1e+50 best solution, best possible 1.4911766 (1106.85 seconds)
Optimality Based BT: 313 improved bounds
Optimality Based BT: 279 improved bounds
Optimality Based BT: 296 improved bounds
Optimality Based BT: 317 improved bounds
Cbc0010I After 1100 nodes, 530 on tree, 1e+50 best solution, best possible 1.5090612 (1684.40 seconds)
Cbc0010I After 1200 nodes, 580 on tree, 1e+50 best solution, best possible 1.5090612 (1702.18 seconds)
Cbc0010I After 1300 nodes, 630 on tree, 1e+50 best solution, best possible 1.5090612 (1719.64 seconds)
Cbc0010I After 1400 nodes, 680 on tree, 1e+50 best solution, best possible 1.5090612 (1736.01 seconds)
Cbc0010I After 1500 nodes, 730 on tree, 1e+50 best solution, best possible 1.5090612 (1751.67 seconds)
Cbc0010I After 1600 nodes, 779 on tree, 1e+50 best solution, best possible 1.5090612 (1767.29 seconds)
Cbc0010I After 1700 nodes, 828 on tree, 1e+50 best solution, best possible 1.5090612 (1783.13 seconds)
Cbc0010I After 1800 nodes, 878 on tree, 1e+50 best solution, best possible 1.5090612 (1798.78 seconds)
Cbc0010I After 1900 nodes, 910 on tree, 1e+50 best solution, best possible 1.5090612 (1813.66 seconds)
Cbc0010I After 2000 nodes, 953 on tree, 1e+50 best solution, best possible 1.5145278 (1851.41 seconds)
Cbc0010I After 2100 nodes, 1003 on tree, 1e+50 best solution, best possible 1.5145278 (1869.10 seconds)
Cbc0010I After 2200 nodes, 1053 on tree, 1e+50 best solution, best possible 1.5145278 (1886.67 seconds)
Cbc0010I After 2300 nodes, 1103 on tree, 1e+50 best solution, best possible 1.5145278 (1903.35 seconds)
Cbc0010I After 2400 nodes, 1153 on tree, 1e+50 best solution, best possible 1.5145278 (1919.19 seconds)
Cbc0010I After 2500 nodes, 1203 on tree, 1e+50 best solution, best possible 1.5145278 (1934.51 seconds)
Cbc0010I After 2600 nodes, 1251 on tree, 1e+50 best solution, best possible 1.5145278 (1950.37 seconds)
Cbc0010I After 2700 nodes, 1300 on tree, 1e+50 best solution, best possible 1.5145278 (1966.62 seconds)
Cbc0010I After 2800 nodes, 1342 on tree, 1e+50 best solution, best possible 1.5145278 (1982.79 seconds)
Cbc0010I After 2900 nodes, 1380 on tree, 1e+50 best solution, best possible 1.5155566 (1999.20 seconds)
Cbc0010I After 3000 nodes, 1430 on tree, 1e+50 best solution, best possible 1.5155566 (2016.75 seconds)
Cbc0010I After 3100 nodes, 1480 on tree, 1e+50 best solution, best possible 1.5155566 (2034.26 seconds)
Cbc0010I After 3200 nodes, 1530 on tree, 1e+50 best solution, best possible 1.5155566 (2051.30 seconds)
Cbc0010I After 3300 nodes, 1580 on tree, 1e+50 best solution, best possible 1.5155566 (2067.62 seconds)
Cbc0010I After 3400 nodes, 1630 on tree, 1e+50 best solution, best possible 1.5155566 (2083.31 seconds)
Cbc0010I After 3500 nodes, 1678 on tree, 1e+50 best solution, best possible 1.5155566 (2098.61 seconds)
Cbc0010I After 3600 nodes, 1725 on tree, 1e+50 best solution, best possible 1.5155566 (2114.77 seconds)
Cbc0010I After 3700 nodes, 1774 on tree, 1e+50 best solution, best possible 1.5155566 (2131.65 seconds)
Cbc0010I After 3800 nodes, 1817 on tree, 1e+50 best solution, best possible 1.5155566 (2149.43 seconds)
Cbc0010I After 3900 nodes, 1857 on tree, 1e+50 best solution, best possible 1.5206603 (2177.02 seconds)
Cbc0010I After 4000 nodes, 1907 on tree, 1e+50 best solution, best possible 1.5206603 (2194.84 seconds)
Cbc0010I After 4100 nodes, 1957 on tree, 1e+50 best solution, best possible 1.5206603 (2212.26 seconds)
Cbc0010I After 4200 nodes, 2007 on tree, 1e+50 best solution, best possible 1.5206603 (2229.18 seconds)
Cbc0010I After 4300 nodes, 2057 on tree, 1e+50 best solution, best possible 1.5206603 (2244.72 seconds)
Cbc0010I After 4400 nodes, 2107 on tree, 1e+50 best solution, best possible 1.5206603 (2260.30 seconds)
Cbc0010I After 4500 nodes, 2153 on tree, 1e+50 best solution, best possible 1.5206603 (2276.20 seconds)
Cbc0010I After 4600 nodes, 2199 on tree, 1e+50 best solution, best possible 1.5206603 (2292.41 seconds)
Cbc0010I After 4700 nodes, 2244 on tree, 1e+50 best solution, best possible 1.5206603 (2309.43 seconds)
Cbc0010I After 4800 nodes, 2284 on tree, 1e+50 best solution, best possible 1.5237293 (2325.43 seconds)
Cbc0010I After 4900 nodes, 2334 on tree, 1e+50 best solution, best possible 1.5237293 (2343.12 seconds)
Cbc0010I After 5000 nodes, 2384 on tree, 1e+50 best solution, best possible 1.5237293 (2360.83 seconds)
Cbc0010I After 5100 nodes, 2434 on tree, 1e+50 best solution, best possible 1.5237293 (2377.57 seconds)
Cbc0010I After 5200 nodes, 2484 on tree, 1e+50 best solution, best possible 1.5237293 (2393.23 seconds)
Cbc0010I After 5300 nodes, 2532 on tree, 1e+50 best solution, best possible 1.5237293 (2408.41 seconds)
Cbc0010I After 5400 nodes, 2582 on tree, 1e+50 best solution, best possible 1.5237293 (2424.73 seconds)
Cbc0010I After 5500 nodes, 2624 on tree, 1e+50 best solution, best possible 1.5237293 (2440.28 seconds)
Cbc0010I After 5600 nodes, 2665 on tree, 1e+50 best solution, best possible 1.5263171 (2465.58 seconds)
Cbc0010I After 5700 nodes, 2715 on tree, 1e+50 best solution, best possible 1.5263171 (2483.13 seconds)
Cbc0010I After 5800 nodes, 2765 on tree, 1e+50 best solution, best possible 1.5263171 (2500.93 seconds)
Cbc0010I After 5900 nodes, 2815 on tree, 1e+50 best solution, best possible 1.5263171 (2517.86 seconds)
Cbc0010I After 6000 nodes, 2865 on tree, 1e+50 best solution, best possible 1.5263171 (2534.14 seconds)
Cbc0010I After 6100 nodes, 2915 on tree, 1e+50 best solution, best possible 1.5263171 (2549.54 seconds)
Cbc0010I After 6200 nodes, 2963 on tree, 1e+50 best solution, best possible 1.5263171 (2565.36 seconds)
Cbc0010I After 6300 nodes, 3011 on tree, 1e+50 best solution, best possible 1.5263171 (2581.66 seconds)
Cbc0010I After 6400 nodes, 3059 on tree, 1e+50 best solution, best possible 1.5263171 (2599.40 seconds)
Cbc0010I After 6500 nodes, 3102 on tree, 1e+50 best solution, best possible 1.5263171 (2615.94 seconds)
Cbc0010I After 6600 nodes, 3150 on tree, 1e+50 best solution, best possible 1.526351 (2633.33 seconds)
Cbc0010I After 6700 nodes, 3200 on tree, 1e+50 best solution, best possible 1.526351 (2650.80 seconds)
Cbc0010I After 6800 nodes, 3250 on tree, 1e+50 best solution, best possible 1.526351 (2667.61 seconds)
Cbc0010I After 6900 nodes, 3300 on tree, 1e+50 best solution, best possible 1.526351 (2684.04 seconds)
Cbc0010I After 7000 nodes, 3350 on tree, 1e+50 best solution, best possible 1.526351 (2699.64 seconds)
Cbc0010I After 7100 nodes, 3399 on tree, 1e+50 best solution, best possible 1.526351 (2715.75 seconds)
Cbc0010I After 7200 nodes, 3449 on tree, 1e+50 best solution, best possible 1.526351 (2732.45 seconds)
Cbc0010I After 7300 nodes, 3498 on tree, 1e+50 best solution, best possible 1.526351 (2748.77 seconds)
Cbc0010I After 7400 nodes, 3538 on tree, 1e+50 best solution, best possible 1.526351 (2765.05 seconds)
Cbc0010I After 7500 nodes, 3579 on tree, 1e+50 best solution, best possible 1.5283238 (2781.26 seconds)
Cbc0010I After 7600 nodes, 3629 on tree, 1e+50 best solution, best possible 1.5283238 (2799.27 seconds)
Cbc0010I After 7700 nodes, 3679 on tree, 1e+50 best solution, best possible 1.5283238 (2816.14 seconds)
Cbc0010I After 7800 nodes, 3729 on tree, 1e+50 best solution, best possible 1.5283238 (2832.49 seconds)
Cbc0010I After 7900 nodes, 3779 on tree, 1e+50 best solution, best possible 1.5283238 (2848.44 seconds)
Cbc0010I After 8000 nodes, 3829 on tree, 1e+50 best solution, best possible 1.5283238 (2863.82 seconds)
Cbc0010I After 8100 nodes, 3879 on tree, 1e+50 best solution, best possible 1.5283238 (2881.38 seconds)
Cbc0010I After 8200 nodes, 3928 on tree, 1e+50 best solution, best possible 1.5283238 (2898.43 seconds)
Cbc0010I After 8300 nodes, 3973 on tree, 1e+50 best solution, best possible 1.5283238 (2915.87 seconds)
Cbc0010I After 8400 nodes, 4013 on tree, 1e+50 best solution, best possible 1.5285697 (3122.06 seconds)
Cbc0010I After 8500 nodes, 4063 on tree, 1e+50 best solution, best possible 1.5285697 (3139.65 seconds)
Cbc0010I After 8600 nodes, 4113 on tree, 1e+50 best solution, best possible 1.5285697 (3157.22 seconds)
Cbc0010I After 8700 nodes, 4163 on tree, 1e+50 best solution, best possible 1.5285697 (3174.21 seconds)
Cbc0010I After 8800 nodes, 4213 on tree, 1e+50 best solution, best possible 1.5285697 (3190.31 seconds)
Cbc0010I After 8900 nodes, 4263 on tree, 1e+50 best solution, best possible 1.5285697 (3205.83 seconds)
Cbc0010I After 9000 nodes, 4311 on tree, 1e+50 best solution, best possible 1.5285697 (3221.60 seconds)
Cbc0010I After 9100 nodes, 4359 on tree, 1e+50 best solution, best possible 1.5285697 (3237.86 seconds)
Cbc0010I After 9200 nodes, 4407 on tree, 1e+50 best solution, best possible 1.5285697 (3255.00 seconds)
Cbc0010I After 9300 nodes, 4443 on tree, 1e+50 best solution, best possible 1.5285697 (3270.50 seconds)
Cbc0010I After 9400 nodes, 4489 on tree, 1e+50 best solution, best possible 1.5285924 (3287.69 seconds)
Cbc0010I After 9500 nodes, 4539 on tree, 1e+50 best solution, best possible 1.5285924 (3305.50 seconds)
Cbc0010I After 9600 nodes, 4589 on tree, 1e+50 best solution, best possible 1.5285924 (3322.72 seconds)
Cbc0010I After 9700 nodes, 4639 on tree, 1e+50 best solution, best possible 1.5285924 (3339.51 seconds)
Cbc0010I After 9800 nodes, 4689 on tree, 1e+50 best solution, best possible 1.5285924 (3355.27 seconds)
Cbc0010I After 9900 nodes, 4739 on tree, 1e+50 best solution, best possible 1.5285924 (3370.56 seconds)
Cbc0010I After 10000 nodes, 4787 on tree, 1e+50 best solution, best possible 1.5285924 (3387.16 seconds)
Cbc0010I After 10100 nodes, 4835 on tree, 1e+50 best solution, best possible 1.5285924 (3403.76 seconds)
Cbc0010I After 10200 nodes, 4881 on tree, 1e+50 best solution, best possible 1.5285924 (3420.74 seconds)
Cbc0010I After 10300 nodes, 4923 on tree, 1e+50 best solution, best possible 1.5299141 (3455.78 seconds)
Cbc0010I After 10400 nodes, 4973 on tree, 1e+50 best solution, best possible 1.5299141 (3473.49 seconds)
Cbc0010I After 10500 nodes, 5023 on tree, 1e+50 best solution, best possible 1.5299141 (3491.27 seconds)
Cbc0010I After 10600 nodes, 5073 on tree, 1e+50 best solution, best possible 1.5299141 (3507.82 seconds)
Cbc0010I After 10700 nodes, 5123 on tree, 1e+50 best solution, best possible 1.5299141 (3523.56 seconds)
Cbc0010I After 10800 nodes, 5173 on tree, 1e+50 best solution, best possible 1.5299141 (3539.46 seconds)
Cbc0010I After 10900 nodes, 5220 on tree, 1e+50 best solution, best possible 1.5299141 (3555.55 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1.5299141), took 1025628 iterations and 10970 nodes (3582.73 seconds)
Cbc0035I Maximum depth 513, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.047784s)
Total solve time:                          3583.7s (3583.7s in branch-and-bound)
Lower bound:                              1.52991
Upper bound:                              664.829  (gap: 26218.25%)
Branch-and-bound nodes:                     10970
Stats: /tmp/jl_5Crc6q/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.047784 [sep]   3583.7 [time]  3583.71 [bb]         1.529914e+00 [lower]         6.648290e+02 [upper]   10970 [nodes]
Performance of                           FBBT:	    263.773s,    21608 runs. fix:          0 shrnk:    64.0177 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    420.259s,       11 runs. fix:          0 shrnk:   0.272532 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.06793255863415887
f0 = 0.03881860493380505
f0 = 0.07940169191005579
f0 = 0.01764482042445684
f0 = 0.04587653310358777
f0 = 0.08998858416472989
f0 = 0.06969704067660455
f0 = 0.00794016919100558
f0 = 0.01588033838201116
f0 = 0.0688147996553817
f0 = 0.04675877412481063
f0 = 0.05911014842193046
f0 = 0.057345666379484725
f0 = 0.06087463046437613
f0 = 0.052052220252147695
f0 = 0.07410824578271875
f0 = 0.06175687148559897
f0 = 0.04764101514603349
f0 = 0.046758774124810644
f0 = 0.06263911250682179
f0 = 0.059992389443153306
f0 = 0.010586892254674105
f0 = 0.05116997923092483
f0 = 0.025584989615462437
f0 = 0.0105868922546741
f0 = 0.057345666379484725
f0 = 0.052052220252147695
f0 = 0.03881860493380507
f0 = 0.03528964084891369
f0 = 0.036171881870136535
f0 = 0.033525158806467996
f0 = 0.029996194721576653
f0 = 0.025584989615462437
f0 = 0.03793636391258222
f0 = 0.04146532799747359
f0 = 0.03970084595502791
f0 = 0.03881860493380507
f0 = 0.013233615318342636
f0 = 0.008822410212228423
f0 = 0.0608746304643761
f0 = 0.08204841497372431
f0 = 0.04852325616725631
f0 = 0.09351754824962126
f0 = 0.019409302466902523
f0 = 0.05205222025214765
f0 = 0.100575476419404
f0 = 0.0688147996553817
f0 = 0.021173784509348217
f0 = 0.00352896408489137
f0 = 0.0776372098676101
f0 = 0.05999238944315326
f0 = 0.06440359454926753
f0 = 0.06440359454926747
f0 = 0.07410824578271873
f0 = 0.06528583557049034
f0 = 0.07940169191005579
f0 = 0.06352135352804462
f0 = 0.053816702294593365
f0 = 0.04675877412481063
f0 = 0.07587272782516441
f0 = 0.06528583557049031
f0 = 0.01852706144567968
f0 = 0.04587653310358778
f0 = 0.02999619472157663
f0 = 0.007940169191005575
f0 = 0.049405497188479156
f0 = 0.042347569018696435
f0 = 0.05028773820970202
f0 = 0.042347569018696435
f0 = 0.03528964084891369
f0 = 0.04146532799747357
f0 = 0.015880338382011167
f0 = 0.02117378450934821
f0 = 0.04058308697625075
f0 = 0.0458765331035878
f0 = 0.02999619472157664
f0 = 0.027349471657908114
f0 = 0.002646723063668527
f0 = 0.0026467230636685263
f0 = 0.06352135352804462
f0 = 0.07410824578271875
f0 = 0.04411205106114212
f0 = 0.08822410212228424
f0 = 0.0229382665517939
f0 = 0.05028773820970202
f0 = 0.09969323539818119
f0 = 0.0811661739525015
f0 = 0.008822410212228423
f0 = 0.01499809736078832
f0 = 0.07410824578271875
f0 = 0.053816702294593385
f0 = 0.06705031761293602
f0 = 0.06528583557049034
f0 = 0.0688147996553817
f0 = 0.059110148421930436
f0 = 0.08204841497372434
f0 = 0.06616807659171318
f0 = 0.052934461273370544
f0 = 0.04940549718847917
f0 = 0.06793255863415887
f0 = 0.07675496884638726
f0 = 0.037936363912582205
f0 = 0.04852325616725631
f0 = 0.05116997923092483
f0 = 0.023820507573016736
f0 = 0.03881860493380505
f0 = 0.032642917785245154
f0 = 0.07234376374027307
f0 = 0.06175687148559894
f0 = 0.03617188187013652
f0 = 0.052052220252147674
f0 = 0.014998097360788314
f0 = 0.016762579403233998
f0 = 0.044994292082364946
f0 = 0.053816702294593365
f0 = 0.012351374297119789
f0 = 0.02205602553057105
f0 = 0.02029154348812537
f0 = 0.02029154348812537
f0 = 0.0776372098676101
f0 = 0.05293446127337052
f0 = 0.00882241021222842
f0 = 0.05822790740070758
f0 = 0.024702748594239578
f0 = 0.025584989615462416
f0 = 0.06969704067660452
f0 = 0.06616807659171316
f0 = 0.028231712679130945
f0 = 0.03528964084891368
f0 = 0.039700845955027896
f0 = 0.023820507573016736
f0 = 0.0441120510611421
f0 = 0.03705412289135936
f0 = 0.033525158806467996
f0 = 0.02911395370035379
f0 = 0.052052220252147674
f0 = 0.054698943315816206
f0 = 0.02911395370035379
f0 = 0.02646723063668526
f0 = 0.04587653310358778
f0 = 0.03176067676402232
f0 = 0.019409302466902523
f0 = 0.04411205106114212
f0 = 0.04058308697625075
f0 = 0.03264291778524514
f0 = 0.06263911250682179
f0 = 0.08028393293127865
f0 = 0.04058308697625075
f0 = 0.046758774124810644
f0 = 0.03352515880646801
f0 = 0.0026467230636685263
f0 = 0.057345666379484767
f0 = 0.03793636391258222
f0 = 0.02205602553057106
f0 = 0.013233615318342636
f0 = 0.05999238944315328
f0 = 0.06528583557049034
f0 = 0.03440739982769085
f0 = 0.03793636391258222
f0 = 0.02999619472157663
f0 = 0.09704651233451266
f0 = 0.05116997923092483
f0 = 0.09175306620717556
f0 = 0.026467230636685272
f0 = 0.04322981003991925
f0 = 0.08557737905861568
f0 = 0.04146532799747359
f0 = 0.04852325616725633
f0 = 0.027349471657908114
f0 = 0.07675496884638729
f0 = 0.06616807659171316
f0 = 0.0432298100399193
f0 = 0.057345666379484725
f0 = 0.07763720986761014
f0 = 0.07675496884638729
f0 = 0.06528583557049034
f0 = 0.03264291778524517
f0 = 0.043229810039919284
f0 = 0.042347569018696435
f0 = 0.09087082518595273
f0 = 0.06616807659171318
f0 = 0.030878435742799484
f0 = 0.07234376374027307
f0 = 0.009704651233451267
f0 = 0.03970084595502791
f0 = 0.08469513803739284
f0 = 0.0688147996553817
f0 = 0.013233615318342636
f0 = 0.01588033838201116
f0 = 0.06352135352804464
f0 = 0.039700845955027896
f0 = 0.052934461273370544
f0 = 0.052934461273370544
f0 = 0.053816702294593385
f0 = 0.04852325616725633
f0 = 0.06969704067660455
f0 = 0.057345666379484746
f0 = 0.04058308697625075
f0 = 0.03970084595502791
f0 = 0.06263911250682182
f0 = 0.02205602553057106
f0 = 0.03528964084891368
f0 = 0.02999619472157664
f0 = 0.06352135352804464
f0 = 0.04587653310358777
f0 = 0.05822790740070758
f0 = 0.08734186110106139
f0 = 0.06263911250682182
f0 = 0.07410824578271875
f0 = 0.02205602553057106
f0 = 0.02117378450934821
f0 = 0.06087463046437615
f0 = 0.03881860493380507
f0 = 0.012351374297119792
f0 = 0.013233615318342636
f0 = 0.06087463046437613
f0 = 0.07675496884638729
f0 = 0.043229810039919284
f0 = 0.05028773820970202
f0 = 0.02205602553057105
f0 = 0.11204460969530097
f0 = 0.06793255863415884
f0 = 0.0943997892708441
f0 = 0.052934461273370544
f0 = 0.050287738209701976
f0 = 0.08116617395250147
f0 = 0.017644820424456847
f0 = 0.07587272782516444
f0 = 0.0582279074007076
f0 = 0.07851945088883297
f0 = 0.08734186110106136
f0 = 0.033525158806468024
f0 = 0.06352135352804462
f0 = 0.08469513803739287
f0 = 0.08910634314350709
f0 = 0.053816702294593385
f0 = 0.020291543488125376
f0 = 0.052052220252147695
f0 = 0.04764101514603349
f0 = 0.11116236867407811
f0 = 0.08116617395250154
f0 = 0.06175687148559894
f0 = 0.030878435742799498
f0 = 0.08734186110106143
f0 = 0.0529344612733705
f0 = 0.00441120510611421
f0 = 0.0661680765917132
f0 = 0.09881099437695834
f0 = 0.09792875335573555
f0 = 0.03970084595502792
f0 = 0.07146152271905021
f0 = 0.04940549718847919
f0 = 0.036171881870136556
f0 = 0.052052220252147716
f0 = 0.06528583557049036
f0 = 0.030878435742799498
f0 = 0.06440359454926753
f0 = 0.05381670229459341
f0 = 0.05381670229459341
f0 = 0.08381289701617006
f0 = 0.07146152271905018
f0 = 0.04146532799747357
f0 = 0.02999619472157663
f0 = 0.05999238944315323
f0 = 0.02646723063668525
f0 = 0.02293826655179389
f0 = 0.04764101514603349
f0 = 0.0749904868039416
f0 = 0.0749904868039416
f0 = 0.024702748594239585
f0 = 0.050287738209702
f0 = 0.024702748594239595
f0 = 0.014998097360788307
f0 = 0.03617188187013651
f0 = 0.04764101514603349
f0 = 0.009704651233451267
f0 = 0.03617188187013651
f0 = 0.02646723063668525
f0 = 0.0317606767640223
f0 = 0.07146152271905021
f0 = 0.03440739982769085
f0 = 0.016762579403234005
f0 = 0.042347569018696435
f0 = 0.042347569018696435
f0 = 0.02999619472157664
f0 = 0.06263911250682182
f0 = 0.07675496884638729
f0 = 0.04146532799747359
f0 = 0.04940549718847917
f0 = 0.03440739982769085
f0 = 0.00794016919100558
f0 = 0.05469894331581623
f0 = 0.03440739982769085
f0 = 0.01852706144567969
f0 = 0.01146913327589695
f0 = 0.052934461273370544
f0 = 0.05999238944315328
f0 = 0.02999619472157664
f0 = 0.03528964084891369
f0 = 0.03352515880646801
f0 = 0.11292685071652384
f0 = 0.06263911250682182
f0 = 0.09263530722839845
f0 = 0.05469894331581623
f0 = 0.04940549718847917
f0 = 0.08293065599494714
f0 = 0.013233615318342636
f0 = 0.07940169191005582
f0 = 0.0582279074007076
f0 = 0.08028393293127865
f0 = 0.08293065599494714
f0 = 0.03352515880646801
f0 = 0.0644035945492675
f0 = 0.08381289701617003
f0 = 0.0917530662071756
f0 = 0.055581184337039076
f0 = 0.021173784509348217
f0 = 0.053816702294593385
f0 = 0.04499429208236496
f0 = 0.1102801276528553
f0 = 0.05028773820970202
f0 = 0.014998097360788314
f0 = 0.05911014842193041
f0 = 0.0229382665517939
f0 = 0.025584989615462406
f0 = 0.07057928169782736
f0 = 0.06793255863415887
f0 = 0.027349471657908114
f0 = 0.03176067676402232
f0 = 0.043229810039919284
f0 = 0.024702748594239578
f0 = 0.05028773820970204
f0 = 0.03705412289135938
f0 = 0.03440739982769085
f0 = 0.02999619472157664
f0 = 0.05469894331581623
f0 = 0.052934461273370544
f0 = 0.030878435742799484
f0 = 0.03176067676402232
f0 = 0.04234756901869642
f0 = 0.09969323539818119
f0 = 0.05116997923092485
f0 = 0.07322600476149592
f0 = 0.05028773820970202
f0 = 0.03881860493380507
f0 = 0.06087463046437613
f0 = 0.012351374297119792
f0 = 0.07234376374027307
f0 = 0.05469894331581623
f0 = 0.06263911250682182
f0 = 0.07234376374027307
f0 = 0.01499809736078832
f0 = 0.04499429208236496
f0 = 0.06793255863415887
f0 = 0.07410824578271875
f0 = 0.03176067676402232
f0 = 0.001764482042445685
f0 = 0.03440739982769085
f0 = 0.02999619472157664
f0 = 0.09616427131328982
f0 = 0.0996932353981811
f0 = 0.04852325616725631
f0 = 0.07763720986761007
f0 = 0.03705412289135935
f0 = 0.03705412289135935
f0 = 0.07234376374027304
f0 = 0.020291543488125376
f0 = 0.06263911250682182
f0 = 0.044112051061142084
f0 = 0.06881479965538165
f0 = 0.07234376374027304
f0 = 0.025584989615462437
f0 = 0.050287738209701976
f0 = 0.07234376374027301
f0 = 0.07234376374027301
f0 = 0.044994292082364926
f0 = 0.012351374297119784
f0 = 0.035289640848913666
f0 = 0.03087843574279946
f0 = 0.09263530722839837
f0 = 0.052052220252147674
f0 = 0.005293446127337053
f0 = 0.0441120510611421
f0 = 0.02911395370035379
f0 = 0.014115856339565473
f0 = 0.055581184337039055
f0 = 0.057345666379484725
f0 = 0.037936363912582205
f0 = 0.04322981003991926
f0 = 0.03087843574279947
f0 = 0.02205602553057105
f0 = 0.032642917785245154
f0 = 0.023820507573016736
f0 = 0.03087843574279947
f0 = 0.02999619472157663
f0 = 0.04058308697625074
f0 = 0.04675877412481063
f0 = 0.01852706144567968
f0 = 0.014998097360788314
f0 = 0.04675877412481063
