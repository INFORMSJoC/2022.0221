solving instance transportation 10 10 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 85.181602       34 0.09789
NLP0014I             2         OPT 204.97649       44 0.11497
Couenne: new cutoff value 2.0497648815e+02 (0.404449 seconds)
Loaded instance "/tmp/jl_Sn8Yd7/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          102 (0 integer)

Coin0506I Presolve 611 (-110) rows, 291 (-111) columns and 1481 (-221) elements
Clp0006I 0  Obj 0 Primal inf 2379.3949 (10)
Clp0006I 80  Obj 3.7723067e-13 Primal inf 35218.5 (92)
Clp0006I 144  Obj 4.9294849e-13 Primal inf 31389.117 (86)
Clp0006I 217  Obj 32.748277 Primal inf 1244.7523 (48)
Clp0006I 280  Obj 34.64681
Clp0000I Optimal - objective value 34.64681
Clp0032I Optimal objective 34.64681047 - 280 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 34.64681
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 34.64681
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 181 added rows had average density of 2
Cbc0013I At root node, 181 cuts changed objective from 34.64681 to 85.176838 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1937 row cuts average 2.0 elements, 14 column cuts (106 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.89 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 7 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 85.178728 (8.04 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 85.178728 (9.22 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 85.178728 (10.30 seconds)
Couenne: new cutoff value 8.5181752845e+01 (10.9062 seconds)
Cbc0004I Integer solution of 85.181753 found after 32428 iterations and 332 nodes (10.53 seconds)
Cbc0010I After 400 nodes, 10 on tree, 85.181753 best solution, best possible 85.179281 (11.01 seconds)
Cbc0010I After 500 nodes, 9 on tree, 85.181753 best solution, best possible 85.179395 (11.64 seconds)
Cbc0010I After 600 nodes, 14 on tree, 85.181753 best solution, best possible 85.179585 (12.31 seconds)
Cbc0010I After 700 nodes, 15 on tree, 85.181753 best solution, best possible 85.179752 (12.94 seconds)
Cbc0010I After 800 nodes, 17 on tree, 85.181753 best solution, best possible 85.180375 (13.58 seconds)
Cbc0010I After 900 nodes, 20 on tree, 85.181753 best solution, best possible 85.180417 (14.24 seconds)
Cbc0010I After 1000 nodes, 22 on tree, 85.181753 best solution, best possible 85.180554 (14.90 seconds)
Cbc0010I After 1100 nodes, 24 on tree, 85.181753 best solution, best possible 85.180841 (15.56 seconds)
Cbc0010I After 1200 nodes, 24 on tree, 85.181753 best solution, best possible 85.181055 (16.19 seconds)
Cbc0010I After 1300 nodes, 27 on tree, 85.181753 best solution, best possible 85.181073 (16.88 seconds)
Cbc0010I After 1400 nodes, 27 on tree, 85.181753 best solution, best possible 85.181227 (17.54 seconds)
Cbc0010I After 1500 nodes, 25 on tree, 85.181753 best solution, best possible 85.18128 (18.17 seconds)
Cbc0010I After 1600 nodes, 33 on tree, 85.181753 best solution, best possible 85.18128 (18.82 seconds)
Couenne: new cutoff value 8.5181709597e+01 (19.2756 seconds)
Cbc0004I Integer solution of 85.18171 found after 75567 iterations and 1612 nodes (18.89 seconds)
Cbc0010I After 1700 nodes, 28 on tree, 85.18171 best solution, best possible 85.18131 (19.47 seconds)
Cbc0010I After 1800 nodes, 25 on tree, 85.18171 best solution, best possible 85.181422 (20.09 seconds)
Cbc0010I After 1900 nodes, 18 on tree, 85.18171 best solution, best possible 85.181552 (20.72 seconds)
Cbc0010I After 2000 nodes, 16 on tree, 85.18171 best solution, best possible 85.181611 (21.39 seconds)
Cbc0010I After 2100 nodes, 16 on tree, 85.18171 best solution, best possible 85.181612 (22.04 seconds)
Cbc0010I After 2200 nodes, 4 on tree, 85.18171 best solution, best possible 85.18169 (22.64 seconds)
Cbc0001I Search completed - best objective 85.18170962210677, took 93115 iterations and 2240 nodes (22.89 seconds)
Cbc0035I Maximum depth 186, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        721
Linearization cuts added in total:            721  (separation time: 0.001844s)
Total solve time:                         22.9153s (22.9153s in branch-and-bound)
Lower bound:                              85.1817
Upper bound:                              85.1817  (gap: 0.00%)
Branch-and-bound nodes:                      2240
Stats: /tmp/jl_Sn8Yd7/model.nl  300 [var]  100 [int]  220 [con]  102 [aux]    721 [root]      721 [tot] 0.001844 [sep]  22.9153 [time]  22.9159 [bb]         8.518171e+01 [lower]         8.518171e+01 [upper]    2240 [nodes]
Performance of                           FBBT:	   0.354083s,     1831 runs. fix:          0 shrnk:    34.9952 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.31079s,        6 runs. fix:          0 shrnk:    3.96488 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
