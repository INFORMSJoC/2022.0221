solving instance transportation 5 5 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 271.15539      110 0.194435
NLP0014I             2         OPT 332.29264       89 0.133305
Couenne: new cutoff value 3.3229264285e+02 (0.346519 seconds)
Loaded instance "/tmp/jl_HUzTMO/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           52 (0 integer)

Coin0506I Presolve 185 (-51) rows, 75 (-52) columns and 424 (-103) elements
Clp0006I 0  Obj 46.090921 Primal inf 1214.9771 (5)
Clp0006I 46  Obj 157.88571 Primal inf 34.214142 (5)
Clp0006I 61  Obj 231.07349
Clp0000I Optimal - objective value 231.07349
Clp0032I Optimal objective 231.0734916 - 61 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 231.07349
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 231.07349
Optimality Based BT: 1 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 231.07349 to 231.23859 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.15 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 6 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible 258.52794 (1.40 seconds)
Cbc0010I After 200 nodes, 99 on tree, 1e+50 best solution, best possible 258.52794 (1.60 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1e+50 best solution, best possible 258.52794 (1.79 seconds)
Cbc0010I After 400 nodes, 199 on tree, 1e+50 best solution, best possible 258.52794 (1.99 seconds)
Couenne: new cutoff value 2.5853817779e+02 (2.43019 seconds)
Cbc0010I After 500 nodes, 219 on tree, 1e+50 best solution, best possible 258.5381 (2.15 seconds)
Cbc0010I After 600 nodes, 261 on tree, 1e+50 best solution, best possible 258.5381 (2.29 seconds)
Couenne: new cutoff value 2.5853816938e+02 (2.7773 seconds)
Cbc0010I After 700 nodes, 299 on tree, 1e+50 best solution, best possible 258.53811 (2.43 seconds)
Couenne: new cutoff value 2.5853813241e+02 (2.91241 seconds)
Cbc0004I Integer solution of 258.53813 found after 3673 iterations and 789 nodes (2.56 seconds)
Cbc0010I After 800 nodes, 9 on tree, 258.53813 best solution, best possible 258.53812 (2.61 seconds)
Cbc0010I After 900 nodes, 7 on tree, 258.53813 best solution, best possible 258.53812 (2.72 seconds)
Cbc0001I Search completed - best objective 258.5381324097746, took 4052 iterations and 985 nodes (2.81 seconds)
Cbc0035I Maximum depth 224, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        236
Linearization cuts added in total:            236  (separation time: 0.000562s)
Total solve time:                          2.8085s (2.8085s in branch-and-bound)
Lower bound:                              258.538
Upper bound:                              258.538  (gap: 0.00%)
Branch-and-bound nodes:                       985
Stats: /tmp/jl_HUzTMO/model.nl   75 [var]   25 [int]   60 [con]   52 [aux]    236 [root]      236 [tot] 0.000562 [sep]   2.8085 [time]  2.80869 [bb]         2.585381e+02 [lower]         2.585381e+02 [upper]     985 [nodes]
Performance of                           FBBT:	   0.073723s,     1020 runs. fix:  0.0348323 shrnk:     18.384 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	   0.126716s,        6 runs. fix:   0.238095 shrnk:    2.94777 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
