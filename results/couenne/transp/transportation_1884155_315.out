solving instance transportation 20 2 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 139.926     1806 30.665587
NLP0014I             2         OPT 264.44924     2713 42.212909
Couenne: new cutoff value 2.6444924137e+02 (86.4111 seconds)
Loaded instance "/tmp/jl_i3Oc05/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         1602 (0 integer)

Coin0506I Presolve 4831 (-810) rows, 1991 (-811) columns and 11181 (-1621) elements
Clp0006I 0  Obj 0 Primal inf 3952.7416 (820)
Clp0006I 171  Obj 2.8069982e-14 Primal inf 2986.9005 (879)
Clp0006I 342  Obj 3.3455122e-14 Primal inf 3150.673 (869)
Clp0006I 513  Obj 2.5042105e-14 Primal inf 1538.2519 (748)
Clp0006I 684  Obj 2.7343494e-14 Primal inf 1415.7727 (621)
Clp0006I 855  Obj 1.6355566e-14 Primal inf 1362.3548 (526)
Clp0006I 1026  Obj 1.4163865e-10 Primal inf 1380.4308 (456)
Clp0006I 1197  Obj 6.1053431e-05 Primal inf 1538.9096 (387)
Clp0006I 1368  Obj 7.12905e-05 Primal inf 557.5455 (164)
Clp0006I 1539  Obj 0.00012397946 Primal inf 1141.9651 (145)
Clp0006I 1710  Obj 0.00033116942 Primal inf 7227.9563 (80)
Clp0006I 1809  Obj 4.399185
Clp0000I Optimal - objective value 4.3990911
Clp0032I Optimal objective 4.399091057 - 1809 iterations time 0.232, Presolve 0.03
Clp0000I Optimal - objective value 4.3990911
NLP Heuristic: NLP0014I             3         OPT 154.70502      728 12.330331
no solution.
Clp0000I Optimal - objective value 4.3990911
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 744 added rows had average density of 2
Cbc0013I At root node, 744 cuts changed objective from 4.3990911 to 34.673549 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 6442 row cuts average 2.0 elements, 370 column cuts (1020 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (56.09 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 34.725904 (428.28 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 34.882104 (441.17 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 34.882104 (454.50 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 34.882104 (468.30 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 34.882104 (482.46 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 34.882104 (498.59 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 34.882104 (516.05 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 34.882104 (532.94 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 34.882104 (550.16 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 34.882104 (567.41 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 34.882104 (584.57 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 34.882104 (602.52 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 34.882104 (620.35 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 34.882104 (637.41 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 34.882104 (655.69 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 34.882104 (674.72 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 34.882104 (694.09 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 34.882104 (713.53 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 34.882104 (732.71 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 34.882104 (752.27 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 34.882104 (772.30 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 34.882104 (793.73 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 34.882104 (814.10 seconds)
Cbc0010I After 2400 nodes, 1199 on tree, 1e+50 best solution, best possible 34.882104 (835.59 seconds)
Cbc0010I After 2500 nodes, 1245 on tree, 1e+50 best solution, best possible 34.904108 (854.82 seconds)
Cbc0010I After 2600 nodes, 1295 on tree, 1e+50 best solution, best possible 34.937743 (867.49 seconds)
Cbc0010I After 2700 nodes, 1345 on tree, 1e+50 best solution, best possible 34.937743 (880.23 seconds)
Cbc0010I After 2800 nodes, 1395 on tree, 1e+50 best solution, best possible 34.937743 (894.58 seconds)
Cbc0010I After 2900 nodes, 1445 on tree, 1e+50 best solution, best possible 34.937743 (908.44 seconds)
Cbc0010I After 3000 nodes, 1495 on tree, 1e+50 best solution, best possible 34.937743 (925.31 seconds)
Cbc0010I After 3100 nodes, 1545 on tree, 1e+50 best solution, best possible 34.937743 (943.04 seconds)
Cbc0010I After 3200 nodes, 1595 on tree, 1e+50 best solution, best possible 34.937743 (960.39 seconds)
Cbc0010I After 3300 nodes, 1645 on tree, 1e+50 best solution, best possible 34.937743 (977.73 seconds)
Cbc0010I After 3400 nodes, 1695 on tree, 1e+50 best solution, best possible 34.937743 (996.10 seconds)
Cbc0010I After 3500 nodes, 1745 on tree, 1e+50 best solution, best possible 34.937743 (1013.06 seconds)
Cbc0010I After 3600 nodes, 1795 on tree, 1e+50 best solution, best possible 34.937743 (1030.61 seconds)
Cbc0010I After 3700 nodes, 1845 on tree, 1e+50 best solution, best possible 34.937743 (1048.71 seconds)
Cbc0010I After 3800 nodes, 1895 on tree, 1e+50 best solution, best possible 34.937743 (1065.88 seconds)
Cbc0010I After 3900 nodes, 1945 on tree, 1e+50 best solution, best possible 34.937743 (1083.81 seconds)
Cbc0010I After 4000 nodes, 1995 on tree, 1e+50 best solution, best possible 34.937743 (1103.25 seconds)
Cbc0010I After 4100 nodes, 2045 on tree, 1e+50 best solution, best possible 34.937743 (1122.80 seconds)
Cbc0010I After 4200 nodes, 2095 on tree, 1e+50 best solution, best possible 34.937743 (1141.17 seconds)
Cbc0010I After 4300 nodes, 2145 on tree, 1e+50 best solution, best possible 34.937743 (1159.63 seconds)
Cbc0010I After 4400 nodes, 2195 on tree, 1e+50 best solution, best possible 34.937743 (1179.63 seconds)
Cbc0010I After 4500 nodes, 2245 on tree, 1e+50 best solution, best possible 34.937743 (1199.32 seconds)
Cbc0010I After 4600 nodes, 2295 on tree, 1e+50 best solution, best possible 34.937743 (1219.79 seconds)
Cbc0010I After 4700 nodes, 2345 on tree, 1e+50 best solution, best possible 34.937743 (1239.63 seconds)
Cbc0010I After 4800 nodes, 2395 on tree, 1e+50 best solution, best possible 34.937743 (1258.46 seconds)
Cbc0010I After 4900 nodes, 2445 on tree, 1e+50 best solution, best possible 34.937743 (1278.08 seconds)
Cbc0010I After 5000 nodes, 2495 on tree, 1e+50 best solution, best possible 34.937743 (1297.61 seconds)
Cbc0010I After 5100 nodes, 2545 on tree, 1e+50 best solution, best possible 34.937743 (1317.38 seconds)
Cbc0010I After 5200 nodes, 2595 on tree, 1e+50 best solution, best possible 34.937743 (1337.77 seconds)
Cbc0010I After 5300 nodes, 2645 on tree, 1e+50 best solution, best possible 34.937743 (1358.94 seconds)
Cbc0010I After 5400 nodes, 2695 on tree, 1e+50 best solution, best possible 34.937743 (1379.89 seconds)
Cbc0010I After 5500 nodes, 2744 on tree, 1e+50 best solution, best possible 34.937743 (1400.77 seconds)
Cbc0010I After 5600 nodes, 2792 on tree, 1e+50 best solution, best possible 34.937743 (1418.98 seconds)
Cbc0010I After 5700 nodes, 2838 on tree, 1e+50 best solution, best possible 34.937743 (1438.02 seconds)
Cbc0010I After 5800 nodes, 2881 on tree, 1e+50 best solution, best possible 34.972313 (1451.87 seconds)
Cbc0010I After 5900 nodes, 2931 on tree, 1e+50 best solution, best possible 34.972313 (1465.57 seconds)
Cbc0010I After 6000 nodes, 2981 on tree, 1e+50 best solution, best possible 34.972313 (1479.57 seconds)
Cbc0010I After 6100 nodes, 3031 on tree, 1e+50 best solution, best possible 34.972313 (1494.09 seconds)
Cbc0010I After 6200 nodes, 3081 on tree, 1e+50 best solution, best possible 34.972313 (1510.51 seconds)
Cbc0010I After 6300 nodes, 3131 on tree, 1e+50 best solution, best possible 34.972313 (1526.90 seconds)
Cbc0010I After 6400 nodes, 3181 on tree, 1e+50 best solution, best possible 34.972313 (1543.42 seconds)
Cbc0010I After 6500 nodes, 3231 on tree, 1e+50 best solution, best possible 34.972313 (1560.18 seconds)
Cbc0010I After 6600 nodes, 3281 on tree, 1e+50 best solution, best possible 34.972313 (1578.25 seconds)
Cbc0010I After 6700 nodes, 3331 on tree, 1e+50 best solution, best possible 34.972313 (1595.98 seconds)
Cbc0010I After 6800 nodes, 3381 on tree, 1e+50 best solution, best possible 34.972313 (1613.79 seconds)
Cbc0010I After 6900 nodes, 3431 on tree, 1e+50 best solution, best possible 34.972313 (1633.30 seconds)
Cbc0010I After 7000 nodes, 3481 on tree, 1e+50 best solution, best possible 34.972313 (1651.32 seconds)
Cbc0010I After 7100 nodes, 3531 on tree, 1e+50 best solution, best possible 34.972313 (1670.55 seconds)
Cbc0010I After 7200 nodes, 3581 on tree, 1e+50 best solution, best possible 34.972313 (1690.00 seconds)
Cbc0010I After 7300 nodes, 3631 on tree, 1e+50 best solution, best possible 34.972313 (1710.83 seconds)
Cbc0010I After 7400 nodes, 3681 on tree, 1e+50 best solution, best possible 34.972313 (1730.63 seconds)
Cbc0010I After 7500 nodes, 3731 on tree, 1e+50 best solution, best possible 34.972313 (1750.64 seconds)
Cbc0010I After 7600 nodes, 3781 on tree, 1e+50 best solution, best possible 34.972313 (1770.24 seconds)
Cbc0010I After 7700 nodes, 3831 on tree, 1e+50 best solution, best possible 34.972313 (1790.27 seconds)
Cbc0010I After 7800 nodes, 3881 on tree, 1e+50 best solution, best possible 34.972313 (1809.97 seconds)
Cbc0010I After 7900 nodes, 3931 on tree, 1e+50 best solution, best possible 34.972313 (1830.64 seconds)
Cbc0010I After 8000 nodes, 3981 on tree, 1e+50 best solution, best possible 34.972313 (1848.58 seconds)
Cbc0010I After 8100 nodes, 4031 on tree, 1e+50 best solution, best possible 34.972313 (1867.91 seconds)
Cbc0010I After 8200 nodes, 4081 on tree, 1e+50 best solution, best possible 34.972313 (1887.95 seconds)
Cbc0010I After 8300 nodes, 4131 on tree, 1e+50 best solution, best possible 34.972313 (1907.97 seconds)
Cbc0010I After 8400 nodes, 4181 on tree, 1e+50 best solution, best possible 34.972313 (1928.91 seconds)
Cbc0010I After 8500 nodes, 4229 on tree, 1e+50 best solution, best possible 34.972313 (1949.76 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 6 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 8600 nodes, 4266 on tree, 1e+50 best solution, best possible 34.990925 (2253.98 seconds)
Cbc0010I After 8700 nodes, 4316 on tree, 1e+50 best solution, best possible 34.990925 (2266.79 seconds)
Cbc0010I After 8800 nodes, 4366 on tree, 1e+50 best solution, best possible 34.990925 (2281.44 seconds)
Cbc0010I After 8900 nodes, 4416 on tree, 1e+50 best solution, best possible 34.990925 (2295.74 seconds)
Cbc0010I After 9000 nodes, 4466 on tree, 1e+50 best solution, best possible 34.990925 (2310.79 seconds)
Cbc0010I After 9100 nodes, 4516 on tree, 1e+50 best solution, best possible 34.990925 (2327.78 seconds)
Cbc0010I After 9200 nodes, 4566 on tree, 1e+50 best solution, best possible 34.990925 (2345.17 seconds)
Cbc0010I After 9300 nodes, 4616 on tree, 1e+50 best solution, best possible 34.990925 (2362.93 seconds)
Cbc0010I After 9400 nodes, 4666 on tree, 1e+50 best solution, best possible 34.990925 (2380.09 seconds)
Cbc0010I After 9500 nodes, 4716 on tree, 1e+50 best solution, best possible 34.990925 (2397.19 seconds)
Cbc0010I After 9600 nodes, 4766 on tree, 1e+50 best solution, best possible 34.990925 (2413.86 seconds)
Cbc0010I After 9700 nodes, 4816 on tree, 1e+50 best solution, best possible 34.990925 (2432.20 seconds)
Cbc0010I After 9800 nodes, 4866 on tree, 1e+50 best solution, best possible 34.990925 (2450.29 seconds)
Cbc0010I After 9900 nodes, 4916 on tree, 1e+50 best solution, best possible 34.990925 (2469.55 seconds)
Cbc0010I After 10000 nodes, 4966 on tree, 1e+50 best solution, best possible 34.990925 (2488.55 seconds)
Cbc0010I After 10100 nodes, 5016 on tree, 1e+50 best solution, best possible 34.990925 (2509.17 seconds)
Cbc0010I After 10200 nodes, 5066 on tree, 1e+50 best solution, best possible 34.990925 (2529.73 seconds)
Cbc0010I After 10300 nodes, 5116 on tree, 1e+50 best solution, best possible 34.990925 (2550.17 seconds)
Cbc0010I After 10400 nodes, 5166 on tree, 1e+50 best solution, best possible 34.990925 (2569.34 seconds)
Cbc0010I After 10500 nodes, 5216 on tree, 1e+50 best solution, best possible 34.990925 (2588.55 seconds)
Cbc0010I After 10600 nodes, 5266 on tree, 1e+50 best solution, best possible 34.990925 (2608.08 seconds)
Cbc0010I After 10700 nodes, 5316 on tree, 1e+50 best solution, best possible 34.990925 (2629.29 seconds)
Cbc0010I After 10800 nodes, 5366 on tree, 1e+50 best solution, best possible 34.990925 (2649.60 seconds)
Cbc0010I After 10900 nodes, 5416 on tree, 1e+50 best solution, best possible 34.990925 (2668.90 seconds)
Cbc0010I After 11000 nodes, 5466 on tree, 1e+50 best solution, best possible 34.990925 (2689.46 seconds)
Cbc0010I After 11100 nodes, 5516 on tree, 1e+50 best solution, best possible 34.990925 (2710.43 seconds)
Cbc0010I After 11200 nodes, 5565 on tree, 1e+50 best solution, best possible 34.990925 (2731.75 seconds)
Cbc0010I After 11300 nodes, 5608 on tree, 1e+50 best solution, best possible 35.018992 (2745.91 seconds)
Cbc0010I After 11400 nodes, 5658 on tree, 1e+50 best solution, best possible 35.018992 (2759.40 seconds)
Cbc0010I After 11500 nodes, 5708 on tree, 1e+50 best solution, best possible 35.018992 (2772.33 seconds)
Cbc0010I After 11600 nodes, 5758 on tree, 1e+50 best solution, best possible 35.018992 (2785.81 seconds)
Cbc0010I After 11700 nodes, 5808 on tree, 1e+50 best solution, best possible 35.018992 (2801.82 seconds)
Cbc0010I After 11800 nodes, 5858 on tree, 1e+50 best solution, best possible 35.018992 (2818.50 seconds)
Cbc0010I After 11900 nodes, 5908 on tree, 1e+50 best solution, best possible 35.018992 (2836.58 seconds)
Cbc0010I After 12000 nodes, 5958 on tree, 1e+50 best solution, best possible 35.018992 (2855.15 seconds)
Cbc0010I After 12100 nodes, 6008 on tree, 1e+50 best solution, best possible 35.018992 (2874.18 seconds)
Cbc0010I After 12200 nodes, 6057 on tree, 1e+50 best solution, best possible 35.018992 (2891.19 seconds)
Cbc0010I After 12300 nodes, 6106 on tree, 1e+50 best solution, best possible 35.018992 (2908.30 seconds)
Cbc0010I After 12400 nodes, 6156 on tree, 1e+50 best solution, best possible 35.018992 (2924.42 seconds)
Cbc0010I After 12500 nodes, 6206 on tree, 1e+50 best solution, best possible 35.018992 (2940.84 seconds)
Cbc0010I After 12600 nodes, 6253 on tree, 1e+50 best solution, best possible 35.018992 (2958.68 seconds)
Cbc0010I After 12700 nodes, 6298 on tree, 1e+50 best solution, best possible 35.018992 (2977.88 seconds)
Cbc0010I After 12800 nodes, 6348 on tree, 1e+50 best solution, best possible 35.018992 (2998.04 seconds)
Cbc0010I After 12900 nodes, 6398 on tree, 1e+50 best solution, best possible 35.018992 (3017.70 seconds)
Cbc0010I After 13000 nodes, 6448 on tree, 1e+50 best solution, best possible 35.018992 (3037.28 seconds)
Cbc0010I After 13100 nodes, 6498 on tree, 1e+50 best solution, best possible 35.018992 (3057.32 seconds)
Cbc0010I After 13200 nodes, 6548 on tree, 1e+50 best solution, best possible 35.018992 (3076.72 seconds)
Cbc0010I After 13300 nodes, 6598 on tree, 1e+50 best solution, best possible 35.018992 (3096.57 seconds)
Cbc0010I After 13400 nodes, 6648 on tree, 1e+50 best solution, best possible 35.018992 (3116.00 seconds)
Cbc0010I After 13500 nodes, 6698 on tree, 1e+50 best solution, best possible 35.018992 (3135.46 seconds)
Cbc0010I After 13600 nodes, 6748 on tree, 1e+50 best solution, best possible 35.018992 (3155.80 seconds)
Cbc0010I After 13700 nodes, 6798 on tree, 1e+50 best solution, best possible 35.018992 (3176.36 seconds)
Cbc0010I After 13800 nodes, 6848 on tree, 1e+50 best solution, best possible 35.018992 (3197.95 seconds)
Cbc0010I After 13900 nodes, 6897 on tree, 1e+50 best solution, best possible 35.018992 (3222.09 seconds)
Cbc0010I After 14000 nodes, 6928 on tree, 1e+50 best solution, best possible 35.030299 (3239.11 seconds)
Cbc0010I After 14100 nodes, 6978 on tree, 1e+50 best solution, best possible 35.030299 (3252.61 seconds)
Cbc0010I After 14200 nodes, 7028 on tree, 1e+50 best solution, best possible 35.030299 (3265.28 seconds)
Cbc0010I After 14300 nodes, 7078 on tree, 1e+50 best solution, best possible 35.030299 (3279.52 seconds)
Cbc0010I After 14400 nodes, 7128 on tree, 1e+50 best solution, best possible 35.030299 (3294.94 seconds)
Cbc0010I After 14500 nodes, 7178 on tree, 1e+50 best solution, best possible 35.030299 (3312.17 seconds)
Cbc0010I After 14600 nodes, 7228 on tree, 1e+50 best solution, best possible 35.030299 (3330.41 seconds)
Cbc0010I After 14700 nodes, 7278 on tree, 1e+50 best solution, best possible 35.030299 (3348.64 seconds)
Cbc0010I After 14800 nodes, 7328 on tree, 1e+50 best solution, best possible 35.030299 (3366.50 seconds)
Cbc0010I After 14900 nodes, 7378 on tree, 1e+50 best solution, best possible 35.030299 (3384.62 seconds)
Cbc0010I After 15000 nodes, 7428 on tree, 1e+50 best solution, best possible 35.030299 (3402.91 seconds)
Cbc0010I After 15100 nodes, 7478 on tree, 1e+50 best solution, best possible 35.030299 (3421.69 seconds)
Cbc0010I After 15200 nodes, 7528 on tree, 1e+50 best solution, best possible 35.030299 (3439.72 seconds)
Cbc0010I After 15300 nodes, 7578 on tree, 1e+50 best solution, best possible 35.030299 (3457.73 seconds)
Cbc0010I After 15400 nodes, 7628 on tree, 1e+50 best solution, best possible 35.030299 (3478.26 seconds)
Cbc0010I After 15500 nodes, 7678 on tree, 1e+50 best solution, best possible 35.030299 (3499.57 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 35.030299), took 8621170 iterations and 15566 nodes (3531.44 seconds)
Cbc0035I Maximum depth 1632, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5641
Linearization cuts added in total:           5641  (separation time: 0.018963s)
Total solve time:                         3531.68s (3531.68s in branch-and-bound)
Lower bound:                              35.0303
Upper bound:                              264.449  (gap: 636.74%)
Branch-and-bound nodes:                     15566
Stats: /tmp/jl_i3Oc05/model.nl 1200 [var]  400 [int]  840 [con] 1602 [aux]   5641 [root]     5641 [tot] 0.018963 [sep]  3531.68 [time]  3531.68 [bb]         3.503030e+01 [lower]         2.644492e+02 [upper]   15566 [nodes]
Performance of                           FBBT:	    172.595s,    29712 runs. fix: 5.54365e-06 shrnk:    66.8158 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    147.217s,       10 runs. fix:          0 shrnk:    5.29789 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
