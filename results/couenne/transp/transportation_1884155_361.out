solving instance transportation 20 7 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 734.18249       83 1.071445
NLP0014I             2      INFEAS 75.9406      118 1.711482
Loaded instance "/tmp/jl_df8sHt/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6040 (-1201) rows, 2000 (-1602) columns and 13200 (-3202) elements
Clp0006I 0  Obj 0 Primal inf 14566.141 (3781)
Clp0006I 195  Obj 2.6844677e-14 Primal inf 21347.242 (3820)
Clp0006I 390  Obj 2.2792464e-13 Primal inf 44477.851 (3749)
Clp0006I 585  Obj 6.3633631e-13 Primal inf 17725.448 (3416)
Clp0006I 780  Obj 2.6967764e-12 Primal inf 15286.439 (3009)
Clp0006I 975  Obj 4.9825378e-12 Primal inf 47975.937 (2772)
Clp0006I 1170  Obj 3.235117e-12 Primal inf 83722.686 (2552)
Clp0006I 1365  Obj 1.0757986e-11 Primal inf 7021.2593 (2313)
Clp0006I 1560  Obj 9.3071118e-12 Primal inf 6901.0143 (1849)
Clp0006I 1755  Obj 9.1465757e-08 Primal inf 283302.72 (1849)
Clp0006I 1950  Obj 0.0014851685 Primal inf 271293.06 (1794)
Clp0006I 2145  Obj 0.0029398692 Primal inf 311553.47 (1607)
Clp0006I 2319  Obj 0.0057060426 Primal inf 257773.39 (1387)
Clp0006I 2514  Obj 0.011546035 Primal inf 262534.01 (1216)
Clp0006I 2709  Obj 54.260436 Primal inf 156310.2 (908)
Clp0006I 2904  Obj 61.7389 Primal inf 134071.18 (681)
Clp0006I 3056  Obj 88.647372 Primal inf 146354.73 (592)
Clp0006I 3224  Obj 103.88509 Primal inf 125919.67 (450)
Clp0006I 3342  Obj 117.95024 Primal inf 96405.176 (392)
Clp0006I 3490  Obj 129.33407 Primal inf 52682.051 (366)
Clp0006I 3668  Obj 147.51672 Primal inf 41690.396 (344)
Clp0006I 3863  Obj 171.94628 Primal inf 14536.843 (276)
Clp0006I 4058  Obj 235.91421 Primal inf 2501.1925 (222)
Clp0006I 4141  Obj 272.62449 Primal inf 2212.6208 (135)
Clp0006I 4230  Obj 323.46711 Primal inf 53.067453 (16)
Clp0006I 4244  Obj 325.00414
Clp0000I Optimal - objective value 324.99989
Clp0032I Optimal objective 324.9998943 - 4244 iterations time 0.822, Presolve 0.02
Clp0000I Optimal - objective value 324.99989
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 324.99989
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 93 added rows had average density of 2
Cbc0013I At root node, 93 cuts changed objective from 324.99989 to 332.69209 in 19 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 639 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (83.13 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 337.63115 (711.57 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 337.63115 (725.95 seconds)
Cbc0010I After 300 nodes, 148 on tree, 1e+50 best solution, best possible 337.63115 (739.40 seconds)
Cbc0010I After 400 nodes, 196 on tree, 1e+50 best solution, best possible 337.63115 (752.42 seconds)
Cbc0010I After 500 nodes, 245 on tree, 1e+50 best solution, best possible 337.63115 (765.02 seconds)
Cbc0010I After 600 nodes, 279 on tree, 1e+50 best solution, best possible 337.63115 (776.31 seconds)
Cbc0010I After 700 nodes, 308 on tree, 1e+50 best solution, best possible 337.63115 (786.46 seconds)
Cbc0010I After 800 nodes, 336 on tree, 1e+50 best solution, best possible 337.63115 (797.13 seconds)
Cbc0010I After 900 nodes, 351 on tree, 1e+50 best solution, best possible 337.63115 (805.21 seconds)
Cbc0010I After 1000 nodes, 367 on tree, 1e+50 best solution, best possible 337.63115 (812.92 seconds)
Couenne: new cutoff value 2.4338553700e+03 (831.825 seconds)
Cbc0004I Integer solution of 2433.8554 found after 71741 iterations and 1065 nodes (818.51 seconds)
Optimality Based BT: 204 improved bounds
Optimality Based BT: 196 improved bounds
Cbc0010I After 1100 nodes, 355 on tree, 2433.8554 best solution, best possible 339.256 (1245.65 seconds)
Cbc0010I After 1200 nodes, 405 on tree, 2433.8554 best solution, best possible 339.256 (1264.32 seconds)
Cbc0010I After 1300 nodes, 454 on tree, 2433.8554 best solution, best possible 339.256 (1282.58 seconds)
Cbc0010I After 1400 nodes, 504 on tree, 2433.8554 best solution, best possible 339.256 (1299.39 seconds)
Cbc0010I After 1500 nodes, 554 on tree, 2433.8554 best solution, best possible 339.256 (1315.84 seconds)
Cbc0010I After 1600 nodes, 599 on tree, 2433.8554 best solution, best possible 339.256 (1331.38 seconds)
Cbc0010I After 1700 nodes, 633 on tree, 2433.8554 best solution, best possible 339.256 (1346.51 seconds)
Cbc0010I After 1800 nodes, 675 on tree, 2433.8554 best solution, best possible 339.256 (1361.97 seconds)
Cbc0010I After 1900 nodes, 722 on tree, 2433.8554 best solution, best possible 339.256 (1377.33 seconds)
Optimality Based BT: 202 improved bounds
Cbc0010I After 2000 nodes, 757 on tree, 2433.8554 best solution, best possible 339.66968 (1705.89 seconds)
Cbc0010I After 2100 nodes, 807 on tree, 2433.8554 best solution, best possible 339.66968 (1723.97 seconds)
Cbc0010I After 2200 nodes, 857 on tree, 2433.8554 best solution, best possible 339.66968 (1741.58 seconds)
Cbc0010I After 2300 nodes, 907 on tree, 2433.8554 best solution, best possible 339.66968 (1758.83 seconds)
Cbc0010I After 2400 nodes, 954 on tree, 2433.8554 best solution, best possible 339.66968 (1775.56 seconds)
Cbc0010I After 2500 nodes, 1003 on tree, 2433.8554 best solution, best possible 339.66968 (1792.07 seconds)
Cbc0010I After 2600 nodes, 1050 on tree, 2433.8554 best solution, best possible 339.66968 (1807.88 seconds)
Cbc0010I After 2700 nodes, 1097 on tree, 2433.8554 best solution, best possible 339.66968 (1824.15 seconds)
Cbc0010I After 2800 nodes, 1140 on tree, 2433.8554 best solution, best possible 341.47155 (1849.83 seconds)
Cbc0010I After 2900 nodes, 1190 on tree, 2433.8554 best solution, best possible 341.47155 (1868.35 seconds)
Cbc0010I After 3000 nodes, 1240 on tree, 2433.8554 best solution, best possible 341.47155 (1885.57 seconds)
Cbc0010I After 3100 nodes, 1287 on tree, 2433.8554 best solution, best possible 341.47155 (1902.08 seconds)
Cbc0010I After 3200 nodes, 1335 on tree, 2433.8554 best solution, best possible 341.47155 (1918.25 seconds)
Cbc0010I After 3300 nodes, 1380 on tree, 2433.8554 best solution, best possible 341.47155 (1934.47 seconds)
Cbc0010I After 3400 nodes, 1425 on tree, 2433.8554 best solution, best possible 341.47155 (1951.51 seconds)
Cbc0010I After 3500 nodes, 1470 on tree, 2433.8554 best solution, best possible 342.8165 (2138.41 seconds)
Cbc0010I After 3600 nodes, 1520 on tree, 2433.8554 best solution, best possible 342.8165 (2156.74 seconds)
Cbc0010I After 3700 nodes, 1570 on tree, 2433.8554 best solution, best possible 342.8165 (2174.56 seconds)
Cbc0010I After 3800 nodes, 1616 on tree, 2433.8554 best solution, best possible 342.8165 (2191.86 seconds)
Cbc0010I After 3900 nodes, 1664 on tree, 2433.8554 best solution, best possible 342.8165 (2208.43 seconds)
Cbc0010I After 4000 nodes, 1711 on tree, 2433.8554 best solution, best possible 342.8165 (2224.49 seconds)
Cbc0010I After 4100 nodes, 1761 on tree, 2433.8554 best solution, best possible 342.8165 (2241.86 seconds)
Optimality Based BT: 191 improved bounds
Cbc0010I After 4200 nodes, 1807 on tree, 2433.8554 best solution, best possible 343.08327 (2315.21 seconds)
Cbc0010I After 4300 nodes, 1857 on tree, 2433.8554 best solution, best possible 343.08327 (2333.12 seconds)
Cbc0010I After 4400 nodes, 1906 on tree, 2433.8554 best solution, best possible 343.08327 (2351.11 seconds)
Cbc0010I After 4500 nodes, 1955 on tree, 2433.8554 best solution, best possible 343.08327 (2367.26 seconds)
Cbc0010I After 4600 nodes, 2000 on tree, 2433.8554 best solution, best possible 343.08327 (2382.47 seconds)
Cbc0010I After 4700 nodes, 2039 on tree, 2433.8554 best solution, best possible 343.08327 (2397.92 seconds)
Cbc0010I After 4800 nodes, 2072 on tree, 2433.8554 best solution, best possible 343.08327 (2412.28 seconds)
Optimality Based BT: 139 improved bounds
Cbc0010I After 4900 nodes, 2115 on tree, 2433.8554 best solution, best possible 343.54609 (2556.15 seconds)
Cbc0010I After 5000 nodes, 2165 on tree, 2433.8554 best solution, best possible 343.54609 (2574.82 seconds)
Cbc0010I After 5100 nodes, 2215 on tree, 2433.8554 best solution, best possible 343.54609 (2592.28 seconds)
Cbc0010I After 5200 nodes, 2264 on tree, 2433.8554 best solution, best possible 343.54609 (2608.87 seconds)
Cbc0010I After 5300 nodes, 2313 on tree, 2433.8554 best solution, best possible 343.54609 (2625.10 seconds)
Cbc0010I After 5400 nodes, 2361 on tree, 2433.8554 best solution, best possible 343.54609 (2640.69 seconds)
Cbc0010I After 5500 nodes, 2399 on tree, 2433.8554 best solution, best possible 343.54609 (2656.01 seconds)
Cbc0010I After 5600 nodes, 2433 on tree, 2433.8554 best solution, best possible 343.54609 (2671.01 seconds)
Cbc0010I After 5700 nodes, 2458 on tree, 2433.8554 best solution, best possible 343.54609 (2684.39 seconds)
Cbc0010I After 5800 nodes, 2485 on tree, 2433.8554 best solution, best possible 343.54609 (2696.08 seconds)
Cbc0010I After 5900 nodes, 2515 on tree, 2433.8554 best solution, best possible 343.54609 (2706.66 seconds)
Couenne: new cutoff value 2.0492878978e+03 (2722.99 seconds)
Cbc0004I Integer solution of 2049.2879 found after 542317 iterations and 5928 nodes (2709.68 seconds)
Cbc0010I After 6000 nodes, 2225 on tree, 2049.2879 best solution, best possible 343.88744 (2828.40 seconds)
Cbc0010I After 6100 nodes, 2275 on tree, 2049.2879 best solution, best possible 343.88744 (2847.81 seconds)
Cbc0010I After 6200 nodes, 2325 on tree, 2049.2879 best solution, best possible 343.88744 (2866.69 seconds)
Cbc0010I After 6300 nodes, 2375 on tree, 2049.2879 best solution, best possible 343.88744 (2884.64 seconds)
Cbc0010I After 6400 nodes, 2423 on tree, 2049.2879 best solution, best possible 343.88744 (2901.48 seconds)
Cbc0010I After 6500 nodes, 2470 on tree, 2049.2879 best solution, best possible 343.88744 (2918.08 seconds)
Optimality Based BT: 185 improved bounds
Cbc0010I After 6600 nodes, 2514 on tree, 2049.2879 best solution, best possible 344.83859 (3240.49 seconds)
Cbc0010I After 6700 nodes, 2564 on tree, 2049.2879 best solution, best possible 344.83859 (3259.65 seconds)
Cbc0010I After 6800 nodes, 2614 on tree, 2049.2879 best solution, best possible 344.83859 (3277.53 seconds)
Cbc0010I After 6900 nodes, 2663 on tree, 2049.2879 best solution, best possible 344.83859 (3294.37 seconds)
Cbc0010I After 7000 nodes, 2712 on tree, 2049.2879 best solution, best possible 344.83859 (3310.90 seconds)
Cbc0010I After 7100 nodes, 2761 on tree, 2049.2879 best solution, best possible 344.83859 (3326.72 seconds)
Cbc0010I After 7200 nodes, 2806 on tree, 2049.2879 best solution, best possible 344.83859 (3342.86 seconds)
Optimality Based BT: 214 improved bounds
Cbc0010I After 7300 nodes, 2840 on tree, 2049.2879 best solution, best possible 345.14157 (3401.62 seconds)
Cbc0010I After 7400 nodes, 2890 on tree, 2049.2879 best solution, best possible 345.14157 (3420.21 seconds)
Cbc0010I After 7500 nodes, 2940 on tree, 2049.2879 best solution, best possible 345.14157 (3438.15 seconds)
Cbc0010I After 7600 nodes, 2990 on tree, 2049.2879 best solution, best possible 345.14157 (3455.47 seconds)
Cbc0010I After 7700 nodes, 3036 on tree, 2049.2879 best solution, best possible 345.14157 (3471.70 seconds)
Cbc0010I After 7800 nodes, 3085 on tree, 2049.2879 best solution, best possible 345.14157 (3487.75 seconds)
Cbc0010I After 7900 nodes, 3128 on tree, 2049.2879 best solution, best possible 345.14157 (3503.41 seconds)
Cbc0010I After 8000 nodes, 3170 on tree, 2049.2879 best solution, best possible 345.70557 (3527.01 seconds)
Cbc0010I After 8100 nodes, 3220 on tree, 2049.2879 best solution, best possible 345.70557 (3545.32 seconds)
Cbc0010I After 8200 nodes, 3270 on tree, 2049.2879 best solution, best possible 345.70557 (3562.97 seconds)
Cbc0010I After 8300 nodes, 3318 on tree, 2049.2879 best solution, best possible 345.70557 (3579.16 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 2049.2879 (best possible 345.70557), took 813265 iterations and 8347 nodes (3594.56 seconds)
Cbc0035I Maximum depth 548, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.033098s)
Total solve time:                         3595.44s (3595.44s in branch-and-bound)
Lower bound:                              345.706
Upper bound:                              2049.29  (gap: 491.36%)
Branch-and-bound nodes:                      8347
Stats: /tmp/jl_df8sHt/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.033098 [sep]  3595.44 [time]  3595.44 [bb]         3.457056e+02 [lower]         2.049288e+03 [upper]    8347 [nodes]
Performance of                           FBBT:	    194.893s,    15808 runs. fix: 0.00042838 shrnk:    1.19348 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	     387.64s,       12 runs. fix:          0 shrnk:    19.0168 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
