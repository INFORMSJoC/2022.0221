solving instance transportation 20 6 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 40.466103       44 0.478976
NLP0014I             2         OPT 209.29338       61 0.550094
Couenne: new cutoff value 2.0929338528e+02 (29.8394 seconds)
Loaded instance "/tmp/jl_knArFy/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 24808.651 (3862)
Clp0006I 195  Obj 4.8946432e-14 Primal inf 34974.997 (4159)
Clp0006I 390  Obj 7.2886243e-13 Primal inf 49675.417 (3966)
Clp0006I 585  Obj 9.5467277e-13 Primal inf 54888.647 (3643)
Clp0006I 780  Obj 8.1296388e-13 Primal inf 46598.014 (2882)
Clp0006I 975  Obj 1.4370043e-12 Primal inf 16735.797 (2028)
Clp0006I 1170  Obj 1.3758137e-12 Primal inf 11488.117 (1595)
Clp0006I 1365  Obj 1.2326841e-12 Primal inf 8530.0301 (1222)
Clp0006I 1560  Obj 1.5654811e-12 Primal inf 16504.541 (1037)
Clp0006I 1755  Obj 4.8154111e-12 Primal inf 167335.64 (843)
Clp0006I 1870  Obj 0.0018294067 Primal inf 70989407 (878)
Clp0006I 2035  Obj 0.00813233 Primal inf 1.0486406e+08 (957)
Clp0006I 2230  Obj 0.033590434 Primal inf 95619537 (1043)
Clp0006I 2425  Obj 0.036396763 Primal inf 78324580 (1268)
Clp0006I 2620  Obj 0.037104402 Primal inf 1.9723765e+08 (1539)
Clp0006I 2697  Obj 0.040339919 Primal inf 52302547 (1504)
Clp0006I 2892  Obj 0.043360077 Primal inf 15769607 (1417)
Clp0006I 3087  Obj 0.073662311 Primal inf 19634142 (1335)
Clp0006I 3280  Obj 0.076715753 Primal inf 15331179 (1237)
Clp0006I 3471  Obj 0.078970799 Primal inf 25201742 (1104)
Clp0006I 3662  Obj 0.082037456 Primal inf 38722326 (947)
Clp0006I 3857  Obj 0.090081183 Primal inf 46360624 (826)
Clp0006I 4012  Obj 0.10741062 Primal inf 23961334 (692)
Clp0006I 4113  Obj 0.23451657 Primal inf 24732134 (620)
Clp0006I 4194  Obj 0.49720707 Primal inf 15049820 (522)
Clp0006I 4310  Obj 0.83365594 Primal inf 9092382.8 (465)
Clp0006I 4505  Obj 1.1134353 Primal inf 2434538.4 (293)
Clp0006I 4574  Obj 1.1393839 Primal inf 1790430.3 (283)
Clp0006I 4764  Obj 1.4028332 Primal inf 162021.47 (69)
Clp0006I 4804  Obj 1.4108848
Clp0006I 4804  Obj 1.3351693 Dual inf 0.002259016 (4)
Clp0006I 4809  Obj 1.3349477
Clp0000I Optimal - objective value 1.3349477
Clp0032I Optimal objective 1.334947668 - 4809 iterations time 1.032, Presolve 0.02
Clp0000I Optimal - objective value 1.3349477
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1.3349477
Optimality Based BT: 165 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 194 added rows had average density of 2
Cbc0013I At root node, 194 cuts changed objective from 1.3349477 to 1.4050277 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 697 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (124.11 seconds)
Optimality Based BT: 159 improved bounds
Optimality Based BT: 127 improved bounds
Optimality Based BT: 131 improved bounds
Optimality Based BT: 91 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.422599 (995.58 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.422599 (1012.99 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.422599 (1030.00 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.422599 (1047.23 seconds)
Cbc0010I After 500 nodes, 249 on tree, 1e+50 best solution, best possible 1.422599 (1063.33 seconds)
Cbc0010I After 600 nodes, 299 on tree, 1e+50 best solution, best possible 1.422599 (1079.28 seconds)
Optimality Based BT: 126 improved bounds
Optimality Based BT: 100 improved bounds
Cbc0010I After 700 nodes, 346 on tree, 1e+50 best solution, best possible 1.4281207 (1743.14 seconds)
Cbc0010I After 800 nodes, 396 on tree, 1e+50 best solution, best possible 1.4281207 (1761.28 seconds)
Cbc0010I After 900 nodes, 446 on tree, 1e+50 best solution, best possible 1.4281207 (1779.21 seconds)
Cbc0010I After 1000 nodes, 496 on tree, 1e+50 best solution, best possible 1.4281207 (1796.80 seconds)
Cbc0010I After 1100 nodes, 546 on tree, 1e+50 best solution, best possible 1.4281207 (1813.43 seconds)
Cbc0010I After 1200 nodes, 596 on tree, 1e+50 best solution, best possible 1.4281207 (1829.11 seconds)
Cbc0010I After 1300 nodes, 643 on tree, 1e+50 best solution, best possible 1.4281207 (1844.80 seconds)
Cbc0010I After 1400 nodes, 687 on tree, 1e+50 best solution, best possible 1.4281207 (1860.65 seconds)
Optimality Based BT: 147 improved bounds
Optimality Based BT: 87 improved bounds
Cbc0010I After 1500 nodes, 729 on tree, 1e+50 best solution, best possible 1.439349 (2264.06 seconds)
Cbc0010I After 1600 nodes, 779 on tree, 1e+50 best solution, best possible 1.439349 (2281.22 seconds)
Cbc0010I After 1700 nodes, 829 on tree, 1e+50 best solution, best possible 1.439349 (2298.30 seconds)
Cbc0010I After 1800 nodes, 879 on tree, 1e+50 best solution, best possible 1.439349 (2315.23 seconds)
Cbc0010I After 1900 nodes, 929 on tree, 1e+50 best solution, best possible 1.439349 (2332.24 seconds)
Cbc0010I After 2000 nodes, 979 on tree, 1e+50 best solution, best possible 1.439349 (2348.54 seconds)
Cbc0010I After 2100 nodes, 1029 on tree, 1e+50 best solution, best possible 1.439349 (2364.36 seconds)
Cbc0010I After 2200 nodes, 1078 on tree, 1e+50 best solution, best possible 1.439349 (2381.13 seconds)
Optimality Based BT: 132 improved bounds
Cbc0010I After 2300 nodes, 1117 on tree, 1e+50 best solution, best possible 1.4448965 (2727.79 seconds)
Cbc0010I After 2400 nodes, 1167 on tree, 1e+50 best solution, best possible 1.4448965 (2745.08 seconds)
Cbc0010I After 2500 nodes, 1217 on tree, 1e+50 best solution, best possible 1.4448965 (2762.28 seconds)
Cbc0010I After 2600 nodes, 1267 on tree, 1e+50 best solution, best possible 1.4448965 (2779.46 seconds)
Cbc0010I After 2700 nodes, 1317 on tree, 1e+50 best solution, best possible 1.4448965 (2796.50 seconds)
Cbc0010I After 2800 nodes, 1366 on tree, 1e+50 best solution, best possible 1.4448965 (2812.37 seconds)
Cbc0010I After 2900 nodes, 1416 on tree, 1e+50 best solution, best possible 1.4448965 (2828.11 seconds)
Optimality Based BT: 96 improved bounds
Cbc0010I After 3000 nodes, 1457 on tree, 1e+50 best solution, best possible 1.4480077 (2888.04 seconds)
Cbc0010I After 3100 nodes, 1507 on tree, 1e+50 best solution, best possible 1.4480077 (2905.06 seconds)
Cbc0010I After 3200 nodes, 1557 on tree, 1e+50 best solution, best possible 1.4480077 (2921.74 seconds)
Cbc0010I After 3300 nodes, 1607 on tree, 1e+50 best solution, best possible 1.4480077 (2939.19 seconds)
Cbc0010I After 3400 nodes, 1657 on tree, 1e+50 best solution, best possible 1.4480077 (2956.17 seconds)
Cbc0010I After 3500 nodes, 1707 on tree, 1e+50 best solution, best possible 1.4480077 (2972.13 seconds)
Cbc0010I After 3600 nodes, 1757 on tree, 1e+50 best solution, best possible 1.4480077 (2988.19 seconds)
Cbc0010I After 3700 nodes, 1803 on tree, 1e+50 best solution, best possible 1.4530265 (3099.83 seconds)
Cbc0010I After 3800 nodes, 1853 on tree, 1e+50 best solution, best possible 1.4530265 (3117.32 seconds)
Cbc0010I After 3900 nodes, 1903 on tree, 1e+50 best solution, best possible 1.4530265 (3135.44 seconds)
Cbc0010I After 4000 nodes, 1953 on tree, 1e+50 best solution, best possible 1.4530265 (3152.26 seconds)
Cbc0010I After 4100 nodes, 2002 on tree, 1e+50 best solution, best possible 1.4530265 (3168.45 seconds)
Cbc0010I After 4200 nodes, 2052 on tree, 1e+50 best solution, best possible 1.4530265 (3183.93 seconds)
Cbc0010I After 4300 nodes, 2102 on tree, 1e+50 best solution, best possible 1.4530265 (3200.20 seconds)
Cbc0010I After 4400 nodes, 2150 on tree, 1e+50 best solution, best possible 1.4530265 (3216.41 seconds)
Cbc0010I After 4500 nodes, 2195 on tree, 1e+50 best solution, best possible 1.4530265 (3232.06 seconds)
Cbc0010I After 4600 nodes, 2244 on tree, 1e+50 best solution, best possible 1.4544687 (3333.66 seconds)
Cbc0010I After 4700 nodes, 2294 on tree, 1e+50 best solution, best possible 1.4544687 (3351.52 seconds)
Cbc0010I After 4800 nodes, 2344 on tree, 1e+50 best solution, best possible 1.4544687 (3368.50 seconds)
Cbc0010I After 4900 nodes, 2394 on tree, 1e+50 best solution, best possible 1.4544687 (3385.66 seconds)
Cbc0010I After 5000 nodes, 2444 on tree, 1e+50 best solution, best possible 1.4544687 (3401.67 seconds)
Cbc0010I After 5100 nodes, 2493 on tree, 1e+50 best solution, best possible 1.4544687 (3417.49 seconds)
Cbc0010I After 5200 nodes, 2541 on tree, 1e+50 best solution, best possible 1.4544687 (3433.45 seconds)
Cbc0010I After 5300 nodes, 2586 on tree, 1e+50 best solution, best possible 1.4544687 (3449.39 seconds)
Cbc0010I After 5400 nodes, 2622 on tree, 1e+50 best solution, best possible 1.4547818 (3476.63 seconds)
Cbc0010I After 5500 nodes, 2672 on tree, 1e+50 best solution, best possible 1.4547818 (3493.90 seconds)
Cbc0010I After 5600 nodes, 2722 on tree, 1e+50 best solution, best possible 1.4547818 (3510.91 seconds)
Cbc0010I After 5700 nodes, 2772 on tree, 1e+50 best solution, best possible 1.4547818 (3528.45 seconds)
Cbc0010I After 5800 nodes, 2822 on tree, 1e+50 best solution, best possible 1.4547818 (3545.79 seconds)
Cbc0010I After 5900 nodes, 2872 on tree, 1e+50 best solution, best possible 1.4547818 (3562.02 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1.4547818), took 573773 iterations and 5944 nodes (3576.51 seconds)
Cbc0035I Maximum depth 440, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.047783s)
Total solve time:                         3577.55s (3577.55s in branch-and-bound)
Lower bound:                              1.45478
Upper bound:                              209.293  (gap: 8466.68%)
Branch-and-bound nodes:                      5944
Stats: /tmp/jl_knArFy/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.047783 [sep]  3577.55 [time]  3577.55 [bb]         1.454782e+00 [lower]         2.092934e+02 [upper]    5944 [nodes]
Performance of                           FBBT:	    145.893s,    11908 runs. fix:          0 shrnk:    83.6256 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	    471.177s,       11 runs. fix:   0.705882 shrnk:   0.506067 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.007940169191005578
f0 = 0.013233615318342636
f0 = 0.052052220252147674
f0 = 0.052052220252147674
f0 = 0.037936363912582205
f0 = 0.08204841497372431
f0 = 0.05646342535826189
f0 = 0.04587653310358778
f0 = 0.04322981003991926
f0 = 0.014998097360788314
f0 = 0.02029154348812537
f0 = 0.024702748594239578
f0 = 0.053816702294593365
f0 = 0.037936363912582205
f0 = 0.07057928169782736
f0 = 0.021173784509348217
f0 = 0.04764101514603347
f0 = 0.04764101514603347
f0 = 0.050287738209702
f0 = 0.04587653310358778
f0 = 0.04058308697625075
f0 = 0.03352515880646801
f0 = 0.01146913327589695
f0 = 0.04499429208236496
f0 = 0.023820507573016746
f0 = 0.06616807659171318
f0 = 0.07410824578271875
f0 = 0.06528583557049034
f0 = 0.08293065599494719
f0 = 0.055581184337039055
f0 = 0.06087463046437613
f0 = 0.052934461273370544
f0 = 0.043229810039919284
f0 = 0.03970084595502791
f0 = 0.06969704067660455
f0 = 0.04940549718847917
f0 = 0.06263911250682179
f0 = 0.08381289701617003
f0 = 0.06969704067660455
f0 = 0.01499809736078832
f0 = 0.06528583557049034
f0 = 0.0644035945492675
f0 = 0.08910634314350704
f0 = 0.053816702294593385
f0 = 0.06263911250682182
f0 = 0.07057928169782739
f0 = 0.01499809736078832
f0 = 0.026467230636685272
f0 = 0.012351374297119789
f0 = 0.044994292082364946
f0 = 0.03881860493380507
f0 = 0.03705412289135938
f0 = 0.052934461273370544
f0 = 0.04940549718847917
f0 = 0.052052220252147695
f0 = 0.03970084595502791
f0 = 0.027349471657908103
f0 = 0.01588033838201116
f0 = 0.024702748594239578
f0 = 0.08028393293127858
f0 = 0.07675496884638729
f0 = 0.0688147996553817
f0 = 0.08469513803739287
f0 = 0.03705412289135938
f0 = 0.05116997923092485
f0 = 0.03881860493380507
f0 = 0.02205602553057106
f0 = 0.024702748594239585
f0 = 0.046758774124810644
f0 = 0.05911014842193041
f0 = 0.053816702294593385
f0 = 0.04411205106114212
f0 = 0.03528964084891369
f0 = 0.03793636391258222
f0 = 0.02205602553057106
f0 = 0.04764101514603349
f0 = 0.01764482042445684
f0 = 0.04764101514603349
f0 = 0.016762579403234005
f0 = 0.06263911250682182
f0 = 0.07322600476149592
f0 = 0.06705031761293602
f0 = 0.08293065599494719
f0 = 0.02999619472157664
f0 = 0.04940549718847917
f0 = 0.030878435742799484
f0 = 0.025584989615462427
f0 = 0.024702748594239585
f0 = 0.04852325616725633
f0 = 0.057345666379484725
f0 = 0.052934461273370544
f0 = 0.04411205106114212
f0 = 0.02999619472157664
f0 = 0.036171881870136535
f0 = 0.016762579403234005
f0 = 0.04499429208236496
f0 = 0.01852706144567968
f0 = 0.05028773820970202
f0 = 0.0229382665517939
f0 = 0.059110148421930436
f0 = 0.027349471657908114
f0 = 0.03793636391258222
f0 = 0.07234376374027304
f0 = 0.06705031761293602
f0 = 0.053816702294593385
f0 = 0.09263530722839845
f0 = 0.053816702294593385
f0 = 0.04852325616725633
f0 = 0.03440739982769084
f0 = 0.016762579403233998
f0 = 0.019409302466902534
f0 = 0.03440739982769085
f0 = 0.06528583557049034
f0 = 0.04940549718847917
f0 = 0.07940169191005582
f0 = 0.0291139537003538
f0 = 0.057345666379484725
f0 = 0.03528964084891369
f0 = 0.057345666379484725
f0 = 0.06705031761293602
f0 = 0.03176067676402232
f0 = 0.02205602553057106
f0 = 0.013233615318342636
f0 = 0.03881860493380507
f0 = 0.017644820424456847
f0 = 0.0644035945492675
f0 = 0.06263911250682182
f0 = 0.052934461273370544
f0 = 0.06969704067660455
f0 = 0.04587653310358778
f0 = 0.04499429208236496
f0 = 0.04058308697625075
f0 = 0.04146532799747359
f0 = 0.02999619472157664
f0 = 0.06793255863415887
f0 = 0.03881860493380507
f0 = 0.05293446127337052
f0 = 0.07410824578271875
f0 = 0.06352135352804464
f0 = 0.01499809736078832
f0 = 0.04058308697625074
f0 = 0.03352515880646801
f0 = 0.049405497188479156
f0 = 0.010586892254674105
f0 = 0.016762579403233998
f0 = 0.044994292082364946
f0 = 0.03881860493380505
f0 = 0.026467230636685272
f0 = 0.04852325616725631
f0 = 0.03440739982769084
f0 = 0.03617188187013652
f0 = 0.02029154348812537
f0 = 0.011469133275896945
f0 = 0.00441120510611421
f0 = 0.03528964084891368
f0 = 0.0229382665517939
f0 = 0.025584989615462416
f0 = 0.049405497188479156
f0 = 0.02911395370035379
f0 = 0.027349471657908103
f0 = 0.06616807659171316
f0 = 0.06087463046437613
f0 = 0.08381289701617
f0 = 0.037936363912582205
f0 = 0.05293446127337052
f0 = 0.052052220252147674
f0 = 0.007940169191005578
f0 = 0.014115856339565473
f0 = 0.032642917785245154
f0 = 0.044994292082364946
f0 = 0.04146532799747357
f0 = 0.03440739982769084
f0 = 0.03617188187013652
f0 = 0.03881860493380505
f0 = 0.03087843574279947
f0 = 0.04146532799747357
f0 = 0.011469133275896945
f0 = 0.033525158806467996
f0 = 0.007940169191005578
f0 = 0.06705031761293599
f0 = 0.059110148421930436
f0 = 0.052934461273370544
f0 = 0.07940169191005579
f0 = 0.04146532799747359
f0 = 0.052934461273370544
f0 = 0.06087463046437613
f0 = 0.010586892254674109
f0 = 0.01499809736078832
f0 = 0.017644820424456847
f0 = 0.032642917785245154
f0 = 0.027349471657908114
f0 = 0.02823171267913096
f0 = 0.04058308697625075
f0 = 0.036171881870136535
f0 = 0.04764101514603349
f0 = 0.030878435742799484
f0 = 0.01852706144567968
f0 = 0.023820507573016746
f0 = 0.009704651233451267
f0 = 0.06528583557049034
f0 = 0.07851945088883297
f0 = 0.06969704067660455
f0 = 0.08293065599494719
f0 = 0.02999619472157664
f0 = 0.055581184337039076
f0 = 0.03176067676402232
f0 = 0.025584989615462427
f0 = 0.0291139537003538
f0 = 0.052934461273370544
f0 = 0.05999238944315326
f0 = 0.0582279074007076
f0 = 0.04852325616725633
f0 = 0.03176067676402232
f0 = 0.03793636391258222
f0 = 0.013233615318342636
f0 = 0.04940549718847917
f0 = 0.023820507573016736
f0 = 0.0582279074007076
f0 = 0.025584989615462427
f0 = 0.06616807659171318
f0 = 0.044994292082364946
f0 = 0.036171881870136535
f0 = 0.0026467230636685263
f0 = 0.05469894331581623
f0 = 0.03440739982769084
f0 = 0.07499048680394158
f0 = 0.08557737905861568
f0 = 0.07410824578271875
f0 = 0.08998858416472989
f0 = 0.05999238944315326
f0 = 0.06263911250682179
f0 = 0.0582279074007076
f0 = 0.057345666379484725
f0 = 0.04940549718847917
f0 = 0.08204841497372431
f0 = 0.05469894331581623
f0 = 0.07234376374027304
f0 = 0.09263530722839841
f0 = 0.07675496884638726
f0 = 0.023820507573016736
f0 = 0.02293826655179389
f0 = 0.02205602553057106
f0 = 0.0608746304643761
f0 = 0.054698943315816206
f0 = 0.04587653310358778
f0 = 0.08469513803739284
f0 = 0.04764101514603347
f0 = 0.04146532799747359
f0 = 0.03528964084891368
f0 = 0.00882241021222842
f0 = 0.01323361531834263
f0 = 0.02117378450934821
f0 = 0.05646342535826189
f0 = 0.039700845955027896
f0 = 0.07322600476149589
f0 = 0.01852706144567969
f0 = 0.05116997923092483
f0 = 0.03705412289135936
f0 = 0.04852325616725631
f0 = 0.05646342535826189
f0 = 0.05646342535826189
f0 = 0.046758774124810644
f0 = 0.06969704067660452
f0 = 0.023820507573016746
f0 = 0.03528964084891368
f0 = 0.04234756901869642
f0 = 0.015880338382011156
f0 = 0.00352896408489137
f0 = 0.03528964084891368
f0 = 0.03705412289135936
f0 = 0.033525158806467996
f0 = 0.02205602553057106
f0 = 0.024702748594239578
f0 = 0.020291543488125376
f0 = 0.02646723063668526
f0 = 0.02999619472157664
f0 = 0.0061756871485598944
f0 = 0.04146532799747357
f0 = 0.00882241021222842
f0 = 0.050287738209702
f0 = 0.053816702294593385
f0 = 0.055581184337039076
f0 = 0.08645962007983853
f0 = 0.055581184337039076
f0 = 0.05999238944315328
f0 = 0.07675496884638729
f0 = 0.025584989615462427
f0 = 0.030878435742799484
f0 = 0.000882241021222842
f0 = 0.03087843574279947
f0 = 0.027349471657908114
f0 = 0.027349471657908114
f0 = 0.055581184337039076
f0 = 0.043229810039919284
f0 = 0.06087463046437613
f0 = 0.03352515880646801
f0 = 0.03617188187013652
f0 = 0.004411205106114212
f0 = 0.02999619472157663
f0 = 0.07587272782516438
f0 = 0.05646342535826189
f0 = 0.05116997923092485
f0 = 0.02029154348812537
f0 = 0.05999238944315326
f0 = 0.04058308697625074
f0 = 0.07675496884638726
f0 = 0.09175306620717556
f0 = 0.07851945088883297
f0 = 0.10322219948307253
f0 = 0.07675496884638726
f0 = 0.07587272782516441
f0 = 0.07234376374027304
f0 = 0.05911014842193041
f0 = 0.05911014842193041
f0 = 0.08204841497372431
f0 = 0.0688147996553817
f0 = 0.08381289701617
f0 = 0.100575476419404
f0 = 0.08557737905861568
f0 = 0.02999619472157663
f0 = 0.04058308697625074
f0 = 0.04411205106114212
f0 = 0.07410824578271873
f0 = 0.04852325616725633
f0 = 0.04764101514603347
f0 = 0.07587272782516441
f0 = 0.02999619472157663
f0 = 0.027349471657908114
f0 = 0.014115856339565473
f0 = 0.016762579403233998
f0 = 0.01323361531834263
f0 = 0.020291543488125376
f0 = 0.052052220252147674
f0 = 0.03881860493380507
f0 = 0.06352135352804464
f0 = 0.024702748594239585
f0 = 0.03176067676402231
f0 = 0.016762579403233998
f0 = 0.032642917785245154
f0 = 0.06616807659171316
f0 = 0.0741082457827187
f0 = 0.06087463046437613
f0 = 0.06087463046437608
f0 = 0.020291543488125376
f0 = 0.040583086976250723
f0 = 0.009704651233451258
f0 = 0.048523256167256286
f0 = 0.042347569018696435
f0 = 0.07587272782516438
f0 = 0.06969704067660452
f0 = 0.06528583557049028
f0 = 0.04940549718847917
f0 = 0.018527061445679675
f0 = 0.03881860493380507
f0 = 0.022938266551793884
f0 = 0.057345666379484746
f0 = 0.04058308697625074
f0 = 0.0741082457827187
f0 = 0.0423475690186964
f0 = 0.039700845955027875
f0 = 0.07940169191005582
f0 = 0.07410824578271875
f0 = 0.10233995846184966
f0 = 0.0644035945492675
f0 = 0.07146152271905024
f0 = 0.07675496884638729
f0 = 0.027349471657908114
f0 = 0.036171881870136535
f0 = 0.02293826655179389
f0 = 0.053816702294593365
f0 = 0.04852325616725633
f0 = 0.05028773820970202
f0 = 0.06352135352804464
f0 = 0.057345666379484746
f0 = 0.057345666379484746
f0 = 0.053816702294593385
f0 = 0.039700845955027896
f0 = 0.027349471657908114
f0 = 0.03176067676402232
f0 = 0.08910634314350709
f0 = 0.0688147996553817
f0 = 0.06528583557049034
f0 = 0.08557737905861568
f0 = 0.046758774124810644
f0 = 0.059110148421930436
f0 = 0.05999238944315328
f0 = 0.008822410212228423
f0 = 0.016762579403234005
f0 = 0.024702748594239578
f0 = 0.0441120510611421
f0 = 0.0432298100399193
f0 = 0.03528964084891369
f0 = 0.0458765331035878
f0 = 0.03881860493380507
f0 = 0.04058308697625075
f0 = 0.043229810039919284
f0 = 0.01764482042445684
f0 = 0.02823171267913096
f0 = 0.010586892254674105
f0 = 0.07146152271905018
