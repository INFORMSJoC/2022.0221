solving instance transportation 20 3 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 559.25497      508 8.70548
NLP0014I             2      INFEAS 43.057188       52 0.579425
Loaded instance "/tmp/jl_8VgVTn/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2802 (0 integer)

Coin0506I Presolve 4040 (-1601) rows, 2000 (-2002) columns and 9600 (-4002) elements
Clp0006I 0  Obj -1883.0695 Primal inf 31245.479 (1220)
Clp0006I 155  Obj -1883.0695 Primal inf 24530.665 (1162)
Clp0006I 310  Obj -1883.0695 Primal inf 15474.824 (1005)
Clp0006I 465  Obj -1883.0695 Primal inf 7036.2123 (861)
Clp0006I 620  Obj -1883.0695 Primal inf 5866.5368 (870)
Clp0006I 775  Obj -1883.0695 Primal inf 4384.7507 (878)
Clp0006I 930  Obj -1883.0695 Primal inf 3940.201 (934)
Clp0006I 1085  Obj -1883.0695 Primal inf 19489.79 (1002)
Clp0006I 1240  Obj -1746.5548 Primal inf 18495.254 (944)
Clp0006I 1393  Obj -1627.1174 Primal inf 11013.467 (880)
Clp0006I 1548  Obj -1545.8526 Primal inf 8287.2241 (802)
Clp0006I 1703  Obj -1432.2371 Primal inf 14617.134 (746)
Clp0006I 1858  Obj -1353.6221 Primal inf 2345.6962 (674)
Clp0006I 2013  Obj -1088.2462 Primal inf 1573.1452 (590)
Clp0006I 2168  Obj -825.55058 Primal inf 1558.3546 (373)
Clp0006I 2323  Obj -781.54895 Primal inf 818.71557 (277)
Clp0006I 2478  Obj -764.35933 Primal inf 125.95723 (209)
Clp0006I 2633  Obj -761.08542 Primal inf 36.545362 (40)
Clp0006I 2671  Obj -760.05846
Clp0000I Optimal - objective value -760.05846
Clp0032I Optimal objective -760.0584613 - 2671 iterations time 0.272, Presolve 0.02
Clp0000I Optimal - objective value -760.05846
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -760.05846
Optimality Based BT: 400 improved bounds
Probing: 357 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from -760.05846 to -760.05846 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (116.78 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 3 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -757.71953 (1156.71 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -757.71953 (1162.73 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -757.71953 (1168.39 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -757.71953 (1174.19 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -757.71953 (1180.02 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -757.71953 (1185.90 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -757.71953 (1191.72 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -757.71953 (1198.21 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -757.71953 (1209.14 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -757.71953 (1220.08 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -757.71953 (1231.14 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -757.71953 (1242.04 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -757.71953 (1253.04 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -757.71953 (1264.01 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -757.71953 (1275.08 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -757.71953 (1287.13 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -757.71953 (1299.79 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -757.71953 (1312.32 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -757.71953 (1324.93 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -757.71953 (1337.83 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -757.71953 (1349.82 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -757.71953 (1362.09 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -757.71953 (1374.17 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -757.71953 (1386.02 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -757.71953 (1397.53 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -757.71953 (1409.45 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -757.71953 (1419.45 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -757.71953 (1428.74 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -757.71953 (1437.87 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -757.71953 (1448.82 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -757.71953 (1460.67 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -757.71953 (1472.78 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -757.71953 (1484.50 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -757.71953 (1495.51 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -757.71953 (1507.05 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -757.71953 (1516.52 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -757.71953 (1527.88 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible -757.71953 (1537.45 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible -757.71953 (1548.65 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible -757.71953 (1560.37 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible -757.71953 (1572.98 seconds)
Cbc0010I After 4200 nodes, 2100 on tree, 1e+50 best solution, best possible -757.71953 (1585.23 seconds)
Cbc0010I After 4300 nodes, 2150 on tree, 1e+50 best solution, best possible -757.71953 (1597.23 seconds)
Cbc0010I After 4400 nodes, 2200 on tree, 1e+50 best solution, best possible -757.71953 (1609.63 seconds)
Cbc0010I After 4500 nodes, 2250 on tree, 1e+50 best solution, best possible -757.71953 (1622.42 seconds)
Cbc0010I After 4600 nodes, 2300 on tree, 1e+50 best solution, best possible -757.71953 (1634.41 seconds)
Cbc0010I After 4700 nodes, 2350 on tree, 1e+50 best solution, best possible -757.71953 (1646.93 seconds)
Cbc0010I After 4800 nodes, 2400 on tree, 1e+50 best solution, best possible -757.71953 (1659.72 seconds)
Cbc0010I After 4900 nodes, 2450 on tree, 1e+50 best solution, best possible -757.71953 (1672.62 seconds)
Cbc0010I After 5000 nodes, 2500 on tree, 1e+50 best solution, best possible -757.71953 (1685.54 seconds)
Cbc0010I After 5100 nodes, 2550 on tree, 1e+50 best solution, best possible -757.71953 (1698.09 seconds)
Cbc0010I After 5200 nodes, 2600 on tree, 1e+50 best solution, best possible -757.71953 (1710.56 seconds)
Cbc0010I After 5300 nodes, 2650 on tree, 1e+50 best solution, best possible -757.71953 (1723.42 seconds)
Cbc0010I After 5400 nodes, 2700 on tree, 1e+50 best solution, best possible -757.71953 (1736.69 seconds)
Cbc0010I After 5500 nodes, 2750 on tree, 1e+50 best solution, best possible -757.71953 (1750.49 seconds)
Cbc0010I After 5600 nodes, 2800 on tree, 1e+50 best solution, best possible -757.71953 (1763.74 seconds)
Cbc0010I After 5700 nodes, 2850 on tree, 1e+50 best solution, best possible -757.71953 (1776.69 seconds)
Cbc0010I After 5800 nodes, 2900 on tree, 1e+50 best solution, best possible -757.71953 (1789.67 seconds)
Cbc0010I After 5900 nodes, 2950 on tree, 1e+50 best solution, best possible -757.71953 (1803.25 seconds)
Cbc0010I After 6000 nodes, 3000 on tree, 1e+50 best solution, best possible -757.71953 (1816.98 seconds)
Cbc0010I After 6100 nodes, 3050 on tree, 1e+50 best solution, best possible -757.71953 (1830.70 seconds)
Cbc0010I After 6200 nodes, 3100 on tree, 1e+50 best solution, best possible -757.71953 (1843.79 seconds)
Cbc0010I After 6300 nodes, 3150 on tree, 1e+50 best solution, best possible -757.71953 (1857.20 seconds)
Cbc0010I After 6400 nodes, 3200 on tree, 1e+50 best solution, best possible -757.71953 (1870.52 seconds)
Cbc0010I After 6500 nodes, 3250 on tree, 1e+50 best solution, best possible -757.71953 (1884.15 seconds)
Cbc0010I After 6600 nodes, 3300 on tree, 1e+50 best solution, best possible -757.71953 (1897.03 seconds)
Cbc0010I After 6700 nodes, 3350 on tree, 1e+50 best solution, best possible -757.71953 (1909.71 seconds)
Cbc0010I After 6800 nodes, 3400 on tree, 1e+50 best solution, best possible -757.71953 (1922.70 seconds)
Cbc0010I After 6900 nodes, 3450 on tree, 1e+50 best solution, best possible -757.71953 (1935.68 seconds)
Cbc0010I After 7000 nodes, 3500 on tree, 1e+50 best solution, best possible -757.71953 (1949.23 seconds)
Cbc0010I After 7100 nodes, 3550 on tree, 1e+50 best solution, best possible -757.71953 (1961.71 seconds)
Cbc0010I After 7200 nodes, 3600 on tree, 1e+50 best solution, best possible -757.71953 (1974.16 seconds)
Cbc0010I After 7300 nodes, 3650 on tree, 1e+50 best solution, best possible -757.71953 (1987.38 seconds)
Cbc0010I After 7400 nodes, 3700 on tree, 1e+50 best solution, best possible -757.71953 (2000.37 seconds)
Cbc0010I After 7500 nodes, 3750 on tree, 1e+50 best solution, best possible -757.71953 (2012.72 seconds)
Cbc0010I After 7600 nodes, 3800 on tree, 1e+50 best solution, best possible -757.71953 (2025.49 seconds)
Cbc0010I After 7700 nodes, 3850 on tree, 1e+50 best solution, best possible -757.71953 (2038.06 seconds)
Cbc0010I After 7800 nodes, 3900 on tree, 1e+50 best solution, best possible -757.71953 (2050.11 seconds)
Cbc0010I After 7900 nodes, 3950 on tree, 1e+50 best solution, best possible -757.71953 (2061.20 seconds)
Cbc0010I After 8000 nodes, 4000 on tree, 1e+50 best solution, best possible -757.71953 (2072.58 seconds)
Cbc0010I After 8100 nodes, 4050 on tree, 1e+50 best solution, best possible -757.71953 (2084.01 seconds)
Cbc0010I After 8200 nodes, 4100 on tree, 1e+50 best solution, best possible -757.71953 (2092.29 seconds)
Cbc0010I After 8300 nodes, 4150 on tree, 1e+50 best solution, best possible -757.71953 (2100.36 seconds)
Couenne: new cutoff value 1.3015138472e+03 (2131.36 seconds)
Optimality Based BT: 111 improved bounds
Optimality Based BT: 105 improved bounds
Optimality Based BT: 116 improved bounds
Cbc0010I After 8400 nodes, 4198 on tree, 1e+50 best solution, best possible -756.64328 (3348.46 seconds)
Cbc0010I After 8500 nodes, 4248 on tree, 1e+50 best solution, best possible -756.64328 (3356.86 seconds)
Cbc0010I After 8600 nodes, 4298 on tree, 1e+50 best solution, best possible -756.64328 (3363.81 seconds)
Cbc0010I After 8700 nodes, 4348 on tree, 1e+50 best solution, best possible -756.64328 (3370.90 seconds)
Cbc0010I After 8800 nodes, 4398 on tree, 1e+50 best solution, best possible -756.64328 (3378.14 seconds)
Cbc0010I After 8900 nodes, 4448 on tree, 1e+50 best solution, best possible -756.64328 (3385.53 seconds)
Cbc0010I After 9000 nodes, 4498 on tree, 1e+50 best solution, best possible -756.64328 (3393.00 seconds)
Cbc0010I After 9100 nodes, 4548 on tree, 1e+50 best solution, best possible -756.64328 (3400.50 seconds)
Cbc0010I After 9200 nodes, 4598 on tree, 1e+50 best solution, best possible -756.64328 (3412.17 seconds)
Cbc0010I After 9300 nodes, 4648 on tree, 1e+50 best solution, best possible -756.64328 (3426.91 seconds)
Cbc0010I After 9400 nodes, 4698 on tree, 1e+50 best solution, best possible -756.64328 (3441.36 seconds)
Cbc0010I After 9500 nodes, 4748 on tree, 1e+50 best solution, best possible -756.64328 (3456.27 seconds)
Cbc0010I After 9600 nodes, 4798 on tree, 1e+50 best solution, best possible -756.64328 (3471.10 seconds)
Cbc0010I After 9700 nodes, 4848 on tree, 1e+50 best solution, best possible -756.64328 (3486.08 seconds)
Cbc0010I After 9800 nodes, 4898 on tree, 1e+50 best solution, best possible -756.64328 (3500.93 seconds)
Cbc0010I After 9900 nodes, 4948 on tree, 1e+50 best solution, best possible -756.64328 (3516.26 seconds)
Cbc0010I After 10000 nodes, 4998 on tree, 1e+50 best solution, best possible -756.64328 (3532.60 seconds)
Cbc0010I After 10100 nodes, 5048 on tree, 1e+50 best solution, best possible -756.64328 (3549.06 seconds)
Cbc0010I After 10200 nodes, 5098 on tree, 1e+50 best solution, best possible -756.64328 (3565.47 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -756.64328), took 140712 iterations and 10249 nodes (3585.40 seconds)
Cbc0035I Maximum depth 4176, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5641
Linearization cuts added in total:           5641  (separation time: 0.037694s)
Total solve time:                         3585.67s (3585.67s in branch-and-bound)
Lower bound:                             -756.643
Upper bound:                              1301.51  (gap: 271.65%)
Branch-and-bound nodes:                     10249
Stats: /tmp/jl_8VgVTn/model.nl 1200 [var]  400 [int]  840 [con] 2802 [aux]   5641 [root]     5641 [tot] 0.037694 [sep]  3585.67 [time]  3585.68 [bb]        -7.566433e+02 [lower]         1.301514e+03 [upper]   10249 [nodes]
Performance of                           FBBT:	     236.46s,    18199 runs. fix:          0 shrnk:    8.94593 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    247.539s,        9 runs. fix:          0 shrnk:  0.0758973 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
