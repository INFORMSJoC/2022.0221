solving instance transportation 20 1 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 45.228598       44 0.474235
NLP0014I             2         OPT 254.60796       73 0.775103
Couenne: new cutoff value 2.5460796348e+02 (32.2177 seconds)
Loaded instance "/tmp/jl_g7gzjB/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 21119.432 (3394)
Clp0006I 195  Obj 3.3287237e-13 Primal inf 67616.033 (3775)
Clp0006I 390  Obj 4.4232783e-13 Primal inf 39607.123 (4112)
Clp0006I 585  Obj 4.7914035e-11 Primal inf 22540.491 (3720)
Clp0006I 780  Obj 4.9822846e-06 Primal inf 34411.295 (3223)
Clp0006I 975  Obj 0.0007888266 Primal inf 38657.43 (2227)
Clp0006I 1170  Obj 0.00085226655 Primal inf 5867.6254 (1749)
Clp0006I 1365  Obj 0.00085264101 Primal inf 22374.364 (1344)
Clp0006I 1560  Obj 0.0010873092 Primal inf 3695.0794 (1065)
Clp0006I 1755  Obj 0.00231331 Primal inf 20900.634 (893)
Clp0006I 1917  Obj 0.0080661948 Primal inf 49311495 (862)
Clp0006I 1972  Obj 0.012876702 Primal inf 26152418 (895)
Clp0006I 2167  Obj 0.019167316 Primal inf 2086199.3 (1124)
Clp0006I 2362  Obj 0.020603963 Primal inf 2142791.6 (1449)
Clp0006I 2557  Obj 0.024781465 Primal inf 62468933 (1611)
Clp0006I 2650  Obj 0.027303481 Primal inf 68553937 (1546)
Clp0006I 2845  Obj 0.032742572 Primal inf 29894589 (1439)
Clp0006I 3040  Obj 0.038756648 Primal inf 30781686 (1334)
Clp0006I 3235  Obj 0.045936458 Primal inf 69572776 (1187)
Clp0006I 3427  Obj 0.056172525 Primal inf 33372904 (1095)
Clp0006I 3622  Obj 0.084721095 Primal inf 34825902 (970)
Clp0006I 3798  Obj 0.1042171 Primal inf 26869778 (813)
Clp0006I 3985  Obj 0.41878478 Primal inf 9096999.5 (600)
Clp0006I 4142  Obj 0.50700986 Primal inf 6830756.1 (509)
Clp0006I 4282  Obj 0.62728099 Primal inf 3473277.6 (439)
Clp0006I 4413  Obj 0.91952673 Primal inf 674986.28 (350)
Clp0006I 4538  Obj 1.2417134 Primal inf 695696.01 (179)
Clp0006I 4640  Obj 1.4101015 Primal inf 120.89204 (41)
Clp0006I 4666  Obj 1.4158636
Clp0000I Optimal - objective value 1.3705874
Clp0032I Optimal objective 1.370587394 - 4666 iterations time 0.902, Presolve 0.02
Clp0000I Optimal - objective value 1.3705874
NLP Heuristic: NLP0014I             3      INFEAS 48.821039      173 2.790065
no solution.
Clp0000I Optimal - objective value 1.3705874
Optimality Based BT: 171 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 197 added rows had average density of 2
Cbc0013I At root node, 197 cuts changed objective from 1.3705874 to 1.4402912 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 576 row cuts average 2.0 elements, 13 column cuts (13 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (137.18 seconds)
Optimality Based BT: 141 improved bounds
Optimality Based BT: 108 improved bounds
Optimality Based BT: 143 improved bounds
Optimality Based BT: 117 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.455964 (1014.92 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.455964 (1031.41 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.455964 (1048.15 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.455964 (1065.05 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1.455964 (1081.05 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1.455964 (1096.78 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1.455964 (1113.37 seconds)
Cbc0010I After 800 nodes, 392 on tree, 1e+50 best solution, best possible 1.455964 (1129.83 seconds)
Optimality Based BT: 159 improved bounds
Optimality Based BT: 119 improved bounds
Optimality Based BT: 116 improved bounds
Optimality Based BT: 142 improved bounds
Cbc0010I After 900 nodes, 438 on tree, 1e+50 best solution, best possible 1.4653529 (1747.76 seconds)
Cbc0010I After 1000 nodes, 488 on tree, 1e+50 best solution, best possible 1.4653529 (1764.19 seconds)
Cbc0010I After 1100 nodes, 538 on tree, 1e+50 best solution, best possible 1.4653529 (1780.27 seconds)
Cbc0010I After 1200 nodes, 588 on tree, 1e+50 best solution, best possible 1.4653529 (1797.31 seconds)
Cbc0010I After 1300 nodes, 638 on tree, 1e+50 best solution, best possible 1.4653529 (1813.78 seconds)
Cbc0010I After 1400 nodes, 688 on tree, 1e+50 best solution, best possible 1.4653529 (1829.61 seconds)
Cbc0010I After 1500 nodes, 735 on tree, 1e+50 best solution, best possible 1.4653529 (1845.17 seconds)
Cbc0010I After 1600 nodes, 783 on tree, 1e+50 best solution, best possible 1.4653529 (1861.40 seconds)
Cbc0010I After 1700 nodes, 827 on tree, 1e+50 best solution, best possible 1.4694152 (2080.15 seconds)
Cbc0010I After 1800 nodes, 877 on tree, 1e+50 best solution, best possible 1.4694152 (2097.22 seconds)
Cbc0010I After 1900 nodes, 927 on tree, 1e+50 best solution, best possible 1.4694152 (2114.02 seconds)
Cbc0010I After 2000 nodes, 977 on tree, 1e+50 best solution, best possible 1.4694152 (2130.87 seconds)
Cbc0010I After 2100 nodes, 1027 on tree, 1e+50 best solution, best possible 1.4694152 (2146.90 seconds)
Cbc0010I After 2200 nodes, 1077 on tree, 1e+50 best solution, best possible 1.4694152 (2163.00 seconds)
Cbc0010I After 2300 nodes, 1127 on tree, 1e+50 best solution, best possible 1.4694152 (2178.88 seconds)
Cbc0010I After 2400 nodes, 1171 on tree, 1e+50 best solution, best possible 1.4694152 (2194.87 seconds)
Optimality Based BT: 150 improved bounds
Cbc0010I After 2500 nodes, 1214 on tree, 1e+50 best solution, best possible 1.4698503 (2637.17 seconds)
Cbc0010I After 2600 nodes, 1264 on tree, 1e+50 best solution, best possible 1.4698503 (2654.54 seconds)
Cbc0010I After 2700 nodes, 1314 on tree, 1e+50 best solution, best possible 1.4698503 (2671.67 seconds)
Cbc0010I After 2800 nodes, 1364 on tree, 1e+50 best solution, best possible 1.4698503 (2688.75 seconds)
Cbc0010I After 2900 nodes, 1414 on tree, 1e+50 best solution, best possible 1.4698503 (2704.99 seconds)
Cbc0010I After 3000 nodes, 1464 on tree, 1e+50 best solution, best possible 1.4698503 (2721.01 seconds)
Cbc0010I After 3100 nodes, 1514 on tree, 1e+50 best solution, best possible 1.4698503 (2736.74 seconds)
Cbc0010I After 3200 nodes, 1563 on tree, 1e+50 best solution, best possible 1.4698503 (2753.15 seconds)
Cbc0010I After 3300 nodes, 1607 on tree, 1e+50 best solution, best possible 1.4765438 (2869.59 seconds)
Cbc0010I After 3400 nodes, 1657 on tree, 1e+50 best solution, best possible 1.4765438 (2886.45 seconds)
Cbc0010I After 3500 nodes, 1707 on tree, 1e+50 best solution, best possible 1.4765438 (2902.73 seconds)
Cbc0010I After 3600 nodes, 1757 on tree, 1e+50 best solution, best possible 1.4765438 (2919.06 seconds)
Cbc0010I After 3700 nodes, 1807 on tree, 1e+50 best solution, best possible 1.4765438 (2935.41 seconds)
Cbc0010I After 3800 nodes, 1857 on tree, 1e+50 best solution, best possible 1.4765438 (2951.67 seconds)
Cbc0010I After 3900 nodes, 1905 on tree, 1e+50 best solution, best possible 1.4765438 (2967.62 seconds)
Optimality Based BT: 128 improved bounds
Cbc0010I After 4000 nodes, 1952 on tree, 1e+50 best solution, best possible 1.4777145 (3200.55 seconds)
Cbc0010I After 4100 nodes, 2002 on tree, 1e+50 best solution, best possible 1.4777145 (3217.59 seconds)
Cbc0010I After 4200 nodes, 2052 on tree, 1e+50 best solution, best possible 1.4777145 (3234.35 seconds)
Cbc0010I After 4300 nodes, 2102 on tree, 1e+50 best solution, best possible 1.4777145 (3250.46 seconds)
Cbc0010I After 4400 nodes, 2152 on tree, 1e+50 best solution, best possible 1.4777145 (3266.74 seconds)
Cbc0010I After 4500 nodes, 2202 on tree, 1e+50 best solution, best possible 1.4777145 (3282.78 seconds)
Cbc0010I After 4600 nodes, 2252 on tree, 1e+50 best solution, best possible 1.4777145 (3298.43 seconds)
Cbc0010I After 4700 nodes, 2299 on tree, 1e+50 best solution, best possible 1.4788335 (3315.36 seconds)
Cbc0010I After 4800 nodes, 2349 on tree, 1e+50 best solution, best possible 1.4788335 (3342.15 seconds)
Cbc0010I After 4900 nodes, 2399 on tree, 1e+50 best solution, best possible 1.4788335 (3359.28 seconds)
Cbc0010I After 5000 nodes, 2449 on tree, 1e+50 best solution, best possible 1.4788335 (3375.72 seconds)
Cbc0010I After 5100 nodes, 2499 on tree, 1e+50 best solution, best possible 1.4788335 (3392.43 seconds)
Cbc0010I After 5200 nodes, 2549 on tree, 1e+50 best solution, best possible 1.4788335 (3408.89 seconds)
Cbc0010I After 5300 nodes, 2599 on tree, 1e+50 best solution, best possible 1.4788335 (3424.70 seconds)
Cbc0010I After 5400 nodes, 2641 on tree, 1e+50 best solution, best possible 1.4788335 (3440.52 seconds)
Cbc0010I After 5500 nodes, 2680 on tree, 1e+50 best solution, best possible 1.4813945 (3457.83 seconds)
Cbc0010I After 5600 nodes, 2730 on tree, 1e+50 best solution, best possible 1.4813945 (3475.03 seconds)
Cbc0010I After 5700 nodes, 2780 on tree, 1e+50 best solution, best possible 1.4813945 (3491.26 seconds)
Cbc0010I After 5800 nodes, 2830 on tree, 1e+50 best solution, best possible 1.4813945 (3507.88 seconds)
Cbc0010I After 5900 nodes, 2880 on tree, 1e+50 best solution, best possible 1.4813945 (3524.73 seconds)
Cbc0010I After 6000 nodes, 2930 on tree, 1e+50 best solution, best possible 1.4813945 (3540.60 seconds)
Cbc0010I After 6100 nodes, 2980 on tree, 1e+50 best solution, best possible 1.4813945 (3556.42 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1.4813945), took 531407 iterations and 6163 nodes (3574.60 seconds)
Cbc0035I Maximum depth 432, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.047962s)
Total solve time:                          3575.5s (3575.5s in branch-and-bound)
Lower bound:                              1.48139
Upper bound:                              254.608  (gap: 10200.98%)
Branch-and-bound nodes:                      6163
Stats: /tmp/jl_g7gzjB/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.047962 [sep]   3575.5 [time]  3575.51 [bb]         1.481394e+00 [lower]         2.546080e+02 [upper]    6163 [nodes]
Performance of                           FBBT:	     152.02s,    12317 runs. fix:          0 shrnk:     86.931 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	    457.447s,       11 runs. fix:          0 shrnk:   0.415683 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.025584989615462416
f0 = 0.026467230636685272
f0 = 0.08028393293127865
f0 = 0.04411205106114212
f0 = 0.03087843574279947
f0 = 0.05999238944315326
f0 = 0.03970084595502791
f0 = 0.06705031761293602
f0 = 0.027349471657908114
f0 = 0.012351374297119792
f0 = 0.03440739982769085
f0 = 0.03352515880646801
f0 = 0.04764101514603349
f0 = 0.03528964084891369
f0 = 0.04499429208236496
f0 = 0.036171881870136535
f0 = 0.04146532799747359
f0 = 0.026467230636685272
f0 = 0.04146532799747359
f0 = 0.0688147996553817
f0 = 0.03176067676402231
f0 = 0.0291139537003538
f0 = 0.07146152271905021
f0 = 0.036171881870136535
f0 = 0.02999619472157663
f0 = 0.05293446127337052
f0 = 0.03970084595502791
f0 = 0.06263911250682179
f0 = 0.03352515880646801
f0 = 0.023820507573016736
f0 = 0.03528964084891368
f0 = 0.02911395370035379
f0 = 0.04146532799747356
f0 = 0.02293826655179389
f0 = 0.03176067676402231
f0 = 0.0458765331035878
f0 = 0.0441120510611421
f0 = 0.02646723063668526
f0 = 0.03881860493380505
f0 = 0.05999238944315326
f0 = 0.023820507573016746
f0 = 0.021173784509348217
f0 = 0.07322600476149592
f0 = 0.05469894331581623
f0 = 0.01852706144567969
f0 = 0.0582279074007076
f0 = 0.01499809736078832
f0 = 0.04940549718847917
f0 = 0.016762579403234005
f0 = 0.03440739982769085
f0 = 0.05469894331581623
f0 = 0.010586892254674109
f0 = 0.059110148421930436
f0 = 0.03970084595502791
f0 = 0.04058308697625075
f0 = 0.03705412289135938
f0 = 0.023820507573016746
f0 = 0.01499809736078832
f0 = 0.016762579403234005
f0 = 0.06087463046437613
f0 = 0.06440359454926747
f0 = 0.05911014842193041
f0 = 0.03087843574279947
f0 = 0.03970084595502791
f0 = 0.053816702294593365
f0 = 0.023820507573016736
f0 = 0.053816702294593385
f0 = 0.02999619472157663
f0 = 0.05646342535826192
f0 = 0.06705031761293599
f0 = 0.06263911250682179
f0 = 0.04234756901869642
f0 = 0.04587653310358777
f0 = 0.03440739982769084
f0 = 0.016762579403233998
f0 = 0.07851945088883297
f0 = 0.06440359454926747
f0 = 0.055581184337039055
f0 = 0.04675877412481063
f0 = 0.01852706144567968
f0 = 0.07410824578271873
f0 = 0.06528583557049034
f0 = 0.025584989615462427
f0 = 0.04058308697625075
f0 = 0.05999238944315326
f0 = 0.027349471657908103
f0 = 0.05469894331581623
f0 = 0.03264291778524517
f0 = 0.0644035945492675
f0 = 0.07322600476149592
f0 = 0.06352135352804464
f0 = 0.052052220252147695
f0 = 0.05205222025214765
f0 = 0.03617188187013652
f0 = 0.02293826655179389
f0 = 0.08381289701617003
f0 = 0.07234376374027304
f0 = 0.06175687148559897
f0 = 0.052934461273370544
f0 = 0.01323361531834263
f0 = 0.06705031761293599
f0 = 0.06263911250682182
f0 = 0.057345666379484746
f0 = 0.006175687148559896
f0 = 0.06616807659171316
f0 = 0.03176067676402231
f0 = 0.07146152271905024
f0 = 0.0749904868039416
f0 = 0.06528583557049034
f0 = 0.05646342535826192
f0 = 0.019409302466902534
f0 = 0.05999238944315328
f0 = 0.006175687148559892
f0 = 0.016762579403234005
f0 = 0.027349471657908114
f0 = 0.07940169191005582
f0 = 0.07851945088883297
f0 = 0.06263911250682182
f0 = 0.07234376374027307
f0 = 0.04852325616725633
f0 = 0.09087082518595273
f0 = 0.08734186110106139
f0 = 0.004411205106114212
f0 = 0.053816702294593385
f0 = 0.08469513803739284
f0 = 0.028231712679130945
f0 = 0.07940169191005582
f0 = 0.03705412289135938
f0 = 0.08381289701617003
f0 = 0.09087082518595276
f0 = 0.07587272782516444
f0 = 0.0688147996553817
f0 = 0.05911014842193039
f0 = 0.05116997923092483
f0 = 0.03440739982769084
f0 = 0.09969323539818119
f0 = 0.09087082518595273
f0 = 0.0811661739525015
f0 = 0.07587272782516444
f0 = 0.0061756871485598944
f0 = 0.0776372098676101
f0 = 0.07675496884638729
f0 = 0.0229382665517939
f0 = 0.052052220252147695
f0 = 0.06793255863415884
f0 = 0.03440739982769084
f0 = 0.06352135352804464
f0 = 0.026467230636685272
f0 = 0.0749904868039416
f0 = 0.08028393293127865
f0 = 0.0749904868039416
f0 = 0.057345666379484746
f0 = 0.05999238944315323
f0 = 0.049405497188479156
f0 = 0.030878435742799484
f0 = 0.0917530662071756
f0 = 0.07940169191005579
f0 = 0.06969704067660455
f0 = 0.06087463046437613
f0 = 0.012351374297119792
f0 = 0.039700845955027896
f0 = 0.036171881870136535
f0 = 0.07587272782516441
f0 = 0.07410824578271875
f0 = 0.02646723063668526
f0 = 0.06969704067660452
f0 = 0.01588033838201116
f0 = 0.04058308697625074
f0 = 0.030878435742799484
f0 = 0.05911014842193041
f0 = 0.08116617395250147
f0 = 0.014115856339565473
f0 = 0.07940169191005575
f0 = 0.05822790740070758
f0 = 0.05822790740070758
f0 = 0.04146532799747359
f0 = 0.03087843574279947
f0 = 0.027349471657908103
f0 = 0.011469133275896945
f0 = 0.06881479965538168
f0 = 0.06087463046437613
f0 = 0.053816702294593385
f0 = 0.0749904868039416
f0 = 0.0855773790586157
f0 = 0.04411205106114212
f0 = 0.07675496884638729
f0 = 0.036171881870136535
f0 = 0.026467230636685272
f0 = 0.05116997923092485
f0 = 0.07763720986761014
f0 = 0.09263530722839845
f0 = 0.03793636391258222
f0 = 0.08822410212228424
f0 = 0.06969704067660455
f0 = 0.06352135352804464
f0 = 0.06528583557049034
f0 = 0.04499429208236496
f0 = 0.04940549718847917
f0 = 0.03352515880646801
f0 = 0.06175687148559897
f0 = 0.049405497188479156
f0 = 0.03793636391258222
f0 = 0.053816702294593385
f0 = 0.053816702294593385
f0 = 0.03617188187013652
f0 = 0.05293446127337052
f0 = 0.0291139537003538
f0 = 0.02823171267913096
f0 = 0.03528964084891369
f0 = 0.055581184337039055
f0 = 0.06793255863415887
f0 = 0.019409302466902523
f0 = 0.05822790740070756
f0 = 0.03881860493380505
f0 = 0.037936363912582205
f0 = 0.053816702294593385
f0 = 0.04058308697625074
f0 = 0.032642917785245154
f0 = 0.024702748594239578
f0 = 0.04675877412481063
f0 = 0.04675877412481063
f0 = 0.044994292082364946
f0 = 0.08293065599494714
f0 = 0.032642917785245154
f0 = 0.054698943315816206
f0 = 0.057345666379484725
f0 = 0.057345666379484725
f0 = 0.08204841497372431
f0 = 0.05116997923092483
f0 = 0.028231712679130945
f0 = 0.014115856339565473
f0 = 0.05646342535826189
f0 = 0.033525158806467996
f0 = 0.028231712679130945
f0 = 0.04675877412481063
f0 = 0.05999238944315326
f0 = 0.06352135352804462
f0 = 0.050287738209702
f0 = 0.06263911250682179
f0 = 0.07499048680394158
f0 = 0.03617188187013652
f0 = 0.03793636391258222
f0 = 0.08998858416472989
f0 = 0.046758774124810644
f0 = 0.044994292082364946
f0 = 0.06440359454926747
f0 = 0.0582279074007076
f0 = 0.08645962007983853
f0 = 0.042347569018696435
f0 = 0.016762579403233998
f0 = 0.025584989615462416
f0 = 0.052052220252147674
f0 = 0.04322981003991925
f0 = 0.03705412289135936
f0 = 0.052052220252147674
f0 = 0.04940549718847917
f0 = 0.05646342535826189
f0 = 0.04234756901869642
f0 = 0.05646342535826189
f0 = 0.08116617395250147
f0 = 0.01764482042445684
f0 = 0.013233615318342636
f0 = 0.10322219948307257
f0 = 0.07851945088883297
f0 = 0.014115856339565473
f0 = 0.08910634314350704
f0 = 0.02205602553057106
f0 = 0.06793255863415887
f0 = 0.012351374297119792
f0 = 0.03440739982769085
f0 = 0.07763720986761014
f0 = 0.02999619472157664
f0 = 0.08293065599494712
f0 = 0.06352135352804462
f0 = 0.07234376374027304
f0 = 0.008822410212228423
f0 = 0.007057928169782736
f0 = 0.01411585633956548
f0 = 0.02205602553057105
f0 = 0.08734186110106136
f0 = 0.09263530722839841
f0 = 0.08381289701616997
f0 = 0.009704651233451258
f0 = 0.055581184337039076
f0 = 0.08028393293127861
f0 = 0.02911395370035379
f0 = 0.07675496884638729
f0 = 0.03793636391258219
f0 = 0.08204841497372434
f0 = 0.09263530722839837
f0 = 0.07587272782516438
f0 = 0.06705031761293596
f0 = 0.057345666379484704
f0 = 0.05205222025214765
f0 = 0.03617188187013651
f0 = 0.09881099437695827
f0 = 0.08822410212228417
f0 = 0.07763720986761007
f0 = 0.0741082457827187
f0 = 0.00529344612733705
f0 = 0.06616807659171316
f0 = 0.06528583557049034
f0 = 0.0441120510611421
f0 = 0.004411205106114212
f0 = 0.06705031761293599
f0 = 0.01852706144567968
f0 = 0.06969704067660455
f0 = 0.06263911250682179
f0 = 0.07057928169782739
f0 = 0.05999238944315326
f0 = 0.032642917785245154
f0 = 0.057345666379484725
f0 = 0.011469133275896942
f0 = 0.016762579403233998
f0 = 0.015880338382011156
f0 = 0.07940169191005582
f0 = 0.07675496884638726
f0 = 0.06352135352804462
f0 = 0.06881479965538168
f0 = 0.039700845955027896
f0 = 0.05999238944315326
f0 = 0.055581184337039076
f0 = 0.03617188187013652
f0 = 0.036171881870136535
f0 = 0.05116997923092483
f0 = 0.025584989615462416
f0 = 0.04764101514603349
f0 = 0.03264291778524517
f0 = 0.05646342535826192
f0 = 0.05822790740070758
f0 = 0.054698943315816206
f0 = 0.03881860493380505
f0 = 0.03881860493380503
f0 = 0.028231712679130945
f0 = 0.014998097360788314
f0 = 0.07057928169782739
f0 = 0.0608746304643761
f0 = 0.050287738209702
f0 = 0.04322981003991926
f0 = 0.02646723063668526
f0 = 0.04587653310358778
f0 = 0.03881860493380507
f0 = 0.07940169191005582
f0 = 0.07675496884638729
f0 = 0.027349471657908103
f0 = 0.07410824578271873
f0 = 0.01499809736078832
f0 = 0.03970084595502791
f0 = 0.02999619472157664
f0 = 0.06175687148559894
f0 = 0.08469513803739287
f0 = 0.021173784509348217
f0 = 0.0846951380373928
f0 = 0.05911014842193041
f0 = 0.05822790740070758
f0 = 0.0458765331035878
f0 = 0.02999619472157663
f0 = 0.03440739982769085
f0 = 0.014998097360788314
f0 = 0.06969704067660452
f0 = 0.02999619472157663
f0 = 0.03528964084891369
f0 = 0.07675496884638729
f0 = 0.04146532799747359
f0 = 0.03440739982769084
f0 = 0.054698943315816206
f0 = 0.042347569018696435
f0 = 0.07234376374027307
f0 = 0.03352515880646801
f0 = 0.016762579403234005
f0 = 0.030878435742799484
f0 = 0.03881860493380507
f0 = 0.044112051061142084
f0 = 0.025584989615462427
f0 = 0.043229810039919284
f0 = 0.04499429208236496
f0 = 0.04411205106114212
f0 = 0.02999619472157664
f0 = 0.043229810039919284
f0 = 0.0688147996553817
f0 = 0.049405497188479156
f0 = 0.04058308697625075
f0 = 0.08293065599494719
f0 = 0.08734186110106139
f0 = 0.03440739982769084
f0 = 0.08028393293127861
f0 = 0.0229382665517939
f0 = 0.043229810039919284
f0 = 0.03970084595502791
f0 = 0.06528583557049031
f0 = 0.0917530662071756
f0 = 0.025584989615462427
f0 = 0.09263530722839837
f0 = 0.07057928169782736
f0 = 0.06616807659171316
f0 = 0.05116997923092485
f0 = 0.03440739982769084
f0 = 0.04146532799747359
f0 = 0.02205602553057105
f0 = 0.07499048680394158
