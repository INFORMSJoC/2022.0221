solving instance transportation 5 8 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 288.99886      105 0.16881
NLP0014I             2         OPT 445.57141      100 0.15123
Couenne: new cutoff value 4.4557141436e+02 (0.342427 seconds)
Loaded instance "/tmp/jl_nLGnXR/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           52 (0 integer)

Coin0506I Presolve 176 (-60) rows, 66 (-61) columns and 406 (-121) elements
Clp0006I 0  Obj 0 Primal inf 291.62102 (5)
Clp0006I 50  Obj 229.49793 Primal inf 0.70334891 (1)
Clp0006I 51  Obj 230.45462
Clp0000I Optimal - objective value 230.45462
Clp0032I Optimal objective 230.4546237 - 51 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 230.45462
NLP Heuristic: NLP0014I             3         OPT 303.10352       15 0.021437
no solution.
Clp0000I Optimal - objective value 230.45462
Optimality Based BT: 0 improved bounds
Probing: Couenne: new cutoff value 3.0310351885e+02 (0.389128 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from 230.45462 to 230.45462 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.12 seconds)
Optimality Based BT: 3 improved bounds
Optimality Based BT: 10 improved bounds
Optimality Based BT: 4 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 6 improved bounds
Couenne: new cutoff value 2.9090228601e+02 (1.01589 seconds)
Optimality Based BT: 8 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 4 improved bounds
Couenne: new cutoff value 2.8679381478e+02 (1.61351 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 3 improved bounds
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 280.91733 (2.49 seconds)
Cbc0010I After 200 nodes, 16 on tree, 1e+50 best solution, best possible 286.79375 (2.65 seconds)
Cbc0010I After 300 nodes, 19 on tree, 1e+50 best solution, best possible 286.7938 (2.79 seconds)
Cbc0010I After 400 nodes, 8 on tree, 1e+50 best solution, best possible 286.79381 (2.93 seconds)
Couenne: new cutoff value 2.8679381095e+02 (3.31132 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2551 iterations and 452 nodes (3.00 seconds)
Cbc0035I Maximum depth 41, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        236
Linearization cuts added in total:            236  (separation time: 0.000586s)
Total solve time:                         3.00283s (3.00283s in branch-and-bound)
Lower bound:                              286.794
Upper bound:                              286.794  (gap: 0.00%)
Branch-and-bound nodes:                       452
Stats: /tmp/jl_nLGnXR/model.nl   75 [var]   25 [int]   60 [con]   52 [aux]    236 [root]      236 [tot] 0.000586 [sep]  3.00283 [time]  3.00304 [bb]         2.867938e+02 [lower]         2.867938e+02 [upper]     452 [nodes]
Performance of                           FBBT:	   0.042793s,      561 runs. fix: 0.00982654 shrnk:    6.66442 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	   0.242798s,       11 runs. fix:   0.558824 shrnk:    5.59081 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
