solving instance transportation 20 7 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 406.26773      465 7.271729
NLP0014I             2      INFEAS 148.60902       51 0.546134
Loaded instance "/tmp/jl_MmGMsX/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2802 (0 integer)

Coin0506I Presolve 4040 (-1601) rows, 2000 (-2002) columns and 9600 (-4002) elements
Clp0006I 0  Obj -1635.6608 Primal inf 33543.394 (1220)
Clp0006I 155  Obj -1635.6608 Primal inf 22967.762 (1158)
Clp0006I 310  Obj -1635.6608 Primal inf 14071.008 (1001)
Clp0006I 465  Obj -1635.6608 Primal inf 5169.2862 (845)
Clp0006I 620  Obj -1635.6608 Primal inf 4198.5224 (852)
Clp0006I 775  Obj -1635.6608 Primal inf 3231.8422 (856)
Clp0006I 930  Obj -1635.6608 Primal inf 11306.078 (925)
Clp0006I 1085  Obj -1635.6608 Primal inf 89546.995 (974)
Clp0006I 1235  Obj -1522.3917 Primal inf 15026.637 (904)
Clp0006I 1390  Obj -1427.6822 Primal inf 11441.533 (861)
Clp0006I 1545  Obj -1318.3048 Primal inf 19724.818 (795)
Clp0006I 1695  Obj -1211.5943 Primal inf 6071.3888 (658)
Clp0006I 1850  Obj -1159.7687 Primal inf 2542.4724 (618)
Clp0006I 2005  Obj -901.93525 Primal inf 2746.6042 (512)
Clp0006I 2160  Obj -693.38583 Primal inf 1742.7805 (366)
Clp0006I 2315  Obj -675.67202 Primal inf 212.05465 (248)
Clp0006I 2470  Obj -669.67329 Primal inf 51.979536 (121)
Clp0006I 2582  Obj -667.47348
Clp0000I Optimal - objective value -667.47348
Clp0032I Optimal objective -667.4734842 - 2582 iterations time 0.242, Presolve 0.02
Clp0000I Optimal - objective value -667.47348
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -667.47348
Optimality Based BT: 400 improved bounds
Probing: 349 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from -667.47348 to -667.47348 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (150.71 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -665.27854 (1182.00 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -665.27854 (1188.20 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -665.27854 (1193.89 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -665.27854 (1199.68 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -665.27854 (1205.46 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -665.27854 (1211.24 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -665.27854 (1217.03 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -665.27854 (1224.03 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -665.27854 (1234.95 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -665.27854 (1245.88 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -665.27854 (1256.81 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -665.27854 (1267.90 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -665.27854 (1278.66 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -665.27854 (1289.78 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -665.27854 (1300.57 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -665.27854 (1312.73 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -665.27854 (1325.10 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -665.27854 (1337.30 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -665.27854 (1349.88 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -665.27854 (1362.01 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -665.27854 (1373.86 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -665.27854 (1385.97 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -665.27854 (1398.00 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -665.27854 (1410.19 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -665.27854 (1422.27 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -665.27854 (1432.77 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -665.27854 (1442.29 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -665.27854 (1451.24 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -665.27854 (1462.09 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -665.27854 (1473.97 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -665.27854 (1485.87 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -665.27854 (1497.80 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -665.27854 (1508.59 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -665.27854 (1518.85 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -665.27854 (1529.18 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -665.27854 (1540.10 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -665.27854 (1549.63 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible -665.27854 (1560.80 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible -665.27854 (1572.42 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible -665.27854 (1584.86 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible -665.27854 (1596.99 seconds)
Cbc0010I After 4200 nodes, 2100 on tree, 1e+50 best solution, best possible -665.27854 (1609.39 seconds)
Cbc0010I After 4300 nodes, 2150 on tree, 1e+50 best solution, best possible -665.27854 (1621.39 seconds)
Cbc0010I After 4400 nodes, 2200 on tree, 1e+50 best solution, best possible -665.27854 (1633.50 seconds)
Cbc0010I After 4500 nodes, 2250 on tree, 1e+50 best solution, best possible -665.27854 (1646.00 seconds)
Cbc0010I After 4600 nodes, 2300 on tree, 1e+50 best solution, best possible -665.27854 (1658.72 seconds)
Cbc0010I After 4700 nodes, 2350 on tree, 1e+50 best solution, best possible -665.27854 (1671.64 seconds)
Cbc0010I After 4800 nodes, 2400 on tree, 1e+50 best solution, best possible -665.27854 (1684.09 seconds)
Cbc0010I After 4900 nodes, 2450 on tree, 1e+50 best solution, best possible -665.27854 (1696.59 seconds)
Cbc0010I After 5000 nodes, 2500 on tree, 1e+50 best solution, best possible -665.27854 (1709.20 seconds)
Cbc0010I After 5100 nodes, 2550 on tree, 1e+50 best solution, best possible -665.27854 (1721.55 seconds)
Cbc0010I After 5200 nodes, 2600 on tree, 1e+50 best solution, best possible -665.27854 (1734.69 seconds)
Cbc0010I After 5300 nodes, 2650 on tree, 1e+50 best solution, best possible -665.27854 (1747.74 seconds)
Cbc0010I After 5400 nodes, 2700 on tree, 1e+50 best solution, best possible -665.27854 (1760.38 seconds)
Cbc0010I After 5500 nodes, 2750 on tree, 1e+50 best solution, best possible -665.27854 (1773.29 seconds)
Cbc0010I After 5600 nodes, 2800 on tree, 1e+50 best solution, best possible -665.27854 (1786.24 seconds)
Cbc0010I After 5700 nodes, 2850 on tree, 1e+50 best solution, best possible -665.27854 (1799.55 seconds)
Cbc0010I After 5800 nodes, 2900 on tree, 1e+50 best solution, best possible -665.27854 (1812.75 seconds)
Cbc0010I After 5900 nodes, 2949 on tree, 1e+50 best solution, best possible -665.27854 (1825.91 seconds)
Cbc0010I After 6000 nodes, 2999 on tree, 1e+50 best solution, best possible -665.27854 (1838.76 seconds)
Cbc0010I After 6100 nodes, 3049 on tree, 1e+50 best solution, best possible -665.27854 (1852.38 seconds)
Cbc0010I After 6200 nodes, 3099 on tree, 1e+50 best solution, best possible -665.27854 (1865.55 seconds)
Cbc0010I After 6300 nodes, 3149 on tree, 1e+50 best solution, best possible -665.27854 (1879.04 seconds)
Cbc0010I After 6400 nodes, 3199 on tree, 1e+50 best solution, best possible -665.27854 (1891.90 seconds)
Cbc0010I After 6500 nodes, 3249 on tree, 1e+50 best solution, best possible -665.27854 (1905.44 seconds)
Cbc0010I After 6600 nodes, 3299 on tree, 1e+50 best solution, best possible -665.27854 (1918.89 seconds)
Cbc0010I After 6700 nodes, 3349 on tree, 1e+50 best solution, best possible -665.27854 (1932.33 seconds)
Cbc0010I After 6800 nodes, 3399 on tree, 1e+50 best solution, best possible -665.27854 (1945.68 seconds)
Cbc0010I After 6900 nodes, 3449 on tree, 1e+50 best solution, best possible -665.27854 (1958.76 seconds)
Cbc0010I After 7000 nodes, 3499 on tree, 1e+50 best solution, best possible -665.27854 (1972.45 seconds)
Cbc0010I After 7100 nodes, 3549 on tree, 1e+50 best solution, best possible -665.27854 (1985.97 seconds)
Cbc0010I After 7200 nodes, 3599 on tree, 1e+50 best solution, best possible -665.27854 (1998.93 seconds)
Cbc0010I After 7300 nodes, 3649 on tree, 1e+50 best solution, best possible -665.27854 (2012.06 seconds)
Cbc0010I After 7400 nodes, 3699 on tree, 1e+50 best solution, best possible -665.27854 (2025.00 seconds)
Cbc0010I After 7500 nodes, 3749 on tree, 1e+50 best solution, best possible -665.27854 (2038.72 seconds)
Cbc0010I After 7600 nodes, 3799 on tree, 1e+50 best solution, best possible -665.27854 (2051.27 seconds)
Cbc0010I After 7700 nodes, 3849 on tree, 1e+50 best solution, best possible -665.27854 (2063.51 seconds)
Cbc0010I After 7800 nodes, 3899 on tree, 1e+50 best solution, best possible -665.27854 (2075.87 seconds)
Cbc0010I After 7900 nodes, 3949 on tree, 1e+50 best solution, best possible -665.27854 (2086.87 seconds)
Cbc0010I After 8000 nodes, 3999 on tree, 1e+50 best solution, best possible -665.27854 (2095.08 seconds)
Couenne: new cutoff value 1.1186922372e+03 (2120.58 seconds)
Optimality Based BT: 256 improved bounds
Optimality Based BT: 255 improved bounds
Optimality Based BT: 257 improved bounds
Cbc0010I After 8100 nodes, 4047 on tree, 1e+50 best solution, best possible -663.25976 (2965.68 seconds)
Cbc0010I After 8200 nodes, 4097 on tree, 1e+50 best solution, best possible -663.25976 (3021.95 seconds)
Cbc0010I After 8300 nodes, 4147 on tree, 1e+50 best solution, best possible -663.25976 (3029.33 seconds)
Cbc0010I After 8400 nodes, 4197 on tree, 1e+50 best solution, best possible -663.25976 (3036.54 seconds)
Cbc0010I After 8500 nodes, 4247 on tree, 1e+50 best solution, best possible -663.25976 (3043.92 seconds)
Cbc0010I After 8600 nodes, 4297 on tree, 1e+50 best solution, best possible -663.25976 (3051.33 seconds)
Cbc0010I After 8700 nodes, 4347 on tree, 1e+50 best solution, best possible -663.25976 (3058.90 seconds)
Cbc0010I After 8800 nodes, 4397 on tree, 1e+50 best solution, best possible -663.25976 (3066.53 seconds)
Cbc0010I After 8900 nodes, 4447 on tree, 1e+50 best solution, best possible -663.25976 (3078.96 seconds)
Cbc0010I After 9000 nodes, 4497 on tree, 1e+50 best solution, best possible -663.25976 (3093.56 seconds)
Cbc0010I After 9100 nodes, 4547 on tree, 1e+50 best solution, best possible -663.25976 (3108.61 seconds)
Cbc0010I After 9200 nodes, 4597 on tree, 1e+50 best solution, best possible -663.25976 (3123.42 seconds)
Cbc0010I After 9300 nodes, 4647 on tree, 1e+50 best solution, best possible -663.25976 (3138.27 seconds)
Cbc0010I After 9400 nodes, 4697 on tree, 1e+50 best solution, best possible -663.25976 (3153.28 seconds)
Cbc0010I After 9500 nodes, 4747 on tree, 1e+50 best solution, best possible -663.25976 (3168.36 seconds)
Cbc0010I After 9600 nodes, 4797 on tree, 1e+50 best solution, best possible -663.25976 (3183.67 seconds)
Cbc0010I After 9700 nodes, 4847 on tree, 1e+50 best solution, best possible -663.25976 (3200.53 seconds)
Cbc0010I After 9800 nodes, 4897 on tree, 1e+50 best solution, best possible -663.25976 (3216.97 seconds)
Cbc0010I After 9900 nodes, 4947 on tree, 1e+50 best solution, best possible -663.25976 (3233.45 seconds)
Cbc0010I After 10000 nodes, 4997 on tree, 1e+50 best solution, best possible -663.25976 (3249.96 seconds)
Cbc0010I After 10100 nodes, 5047 on tree, 1e+50 best solution, best possible -663.25976 (3266.25 seconds)
Cbc0010I After 10200 nodes, 5097 on tree, 1e+50 best solution, best possible -663.25976 (3282.67 seconds)
Cbc0010I After 10300 nodes, 5147 on tree, 1e+50 best solution, best possible -663.25976 (3299.64 seconds)
Cbc0010I After 10400 nodes, 5197 on tree, 1e+50 best solution, best possible -663.25976 (3317.02 seconds)
Cbc0010I After 10500 nodes, 5247 on tree, 1e+50 best solution, best possible -663.25976 (3333.92 seconds)
Cbc0010I After 10600 nodes, 5297 on tree, 1e+50 best solution, best possible -663.25976 (3351.03 seconds)
Cbc0010I After 10700 nodes, 5347 on tree, 1e+50 best solution, best possible -663.25976 (3364.30 seconds)
Cbc0010I After 10800 nodes, 5397 on tree, 1e+50 best solution, best possible -663.25976 (3377.13 seconds)
Cbc0010I After 10900 nodes, 5447 on tree, 1e+50 best solution, best possible -663.25976 (3389.80 seconds)
Cbc0010I After 11000 nodes, 5497 on tree, 1e+50 best solution, best possible -663.25976 (3406.61 seconds)
Cbc0010I After 11100 nodes, 5547 on tree, 1e+50 best solution, best possible -663.25976 (3424.07 seconds)
Cbc0010I After 11200 nodes, 5597 on tree, 1e+50 best solution, best possible -663.25976 (3441.07 seconds)
Cbc0010I After 11300 nodes, 5647 on tree, 1e+50 best solution, best possible -663.25976 (3458.41 seconds)
Cbc0010I After 11400 nodes, 5697 on tree, 1e+50 best solution, best possible -663.25976 (3475.09 seconds)
Cbc0010I After 11500 nodes, 5747 on tree, 1e+50 best solution, best possible -663.25976 (3489.92 seconds)
Cbc0010I After 11600 nodes, 5797 on tree, 1e+50 best solution, best possible -663.25976 (3505.42 seconds)
Cbc0010I After 11700 nodes, 5847 on tree, 1e+50 best solution, best possible -663.25976 (3520.32 seconds)
Cbc0010I After 11800 nodes, 5897 on tree, 1e+50 best solution, best possible -663.25976 (3535.58 seconds)
Cbc0010I After 11900 nodes, 5947 on tree, 1e+50 best solution, best possible -663.25976 (3552.56 seconds)
Cbc0010I After 12000 nodes, 5997 on tree, 1e+50 best solution, best possible -663.25976 (3569.86 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -663.25976), took 164385 iterations and 12053 nodes (3617.60 seconds)
Cbc0035I Maximum depth 4028, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5641
Linearization cuts added in total:           5641  (separation time: 0.039301s)
Total solve time:                         3617.85s (3617.85s in branch-and-bound)
Lower bound:                              -663.26
Upper bound:                              1118.69  (gap: 268.26%)
Branch-and-bound nodes:                     12053
Stats: /tmp/jl_MmGMsX/model.nl 1200 [var]  400 [int]  840 [con] 2802 [aux]   5641 [root]     5641 [tot] 0.039301 [sep]  3617.85 [time]  3617.85 [bb]        -6.632598e+02 [lower]         1.118692e+03 [upper]   12053 [nodes]
Performance of                           FBBT:	    278.716s,    21549 runs. fix:          0 shrnk:    8.44876 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    268.222s,       10 runs. fix:          0 shrnk:   0.254008 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
