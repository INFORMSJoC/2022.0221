solving instance transportation 20 10 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 140.2926       64 0.720294
NLP0014I             2      INFEAS 9.7007337       73 0.636323
Loaded instance "/tmp/jl_D1yoyV/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6040 (-1201) rows, 2000 (-1602) columns and 13200 (-3202) elements
Clp0006I 0  Obj 0 Primal inf 22154.041 (3606)
Clp0006I 195  Obj 8.701985e-13 Primal inf 55532.668 (3814)
Clp0006I 390  Obj 3.1552527e-13 Primal inf 47395.744 (4111)
Clp0006I 585  Obj 9.6150637e-12 Primal inf 19981.594 (3730)
Clp0006I 780  Obj 2.0530446e-11 Primal inf 16473.962 (3382)
Clp0006I 975  Obj 1.6426592e-11 Primal inf 49256.597 (2539)
Clp0006I 1170  Obj 7.0291804e-11 Primal inf 10335.138 (1910)
Clp0006I 1365  Obj 2.8989423e-10 Primal inf 5383.5372 (1485)
Clp0006I 1560  Obj 5.239135e-09 Primal inf 7282.768 (1159)
Clp0006I 1755  Obj 7.9110133e-09 Primal inf 46085.258 (984)
Clp0006I 1950  Obj 1.0762384e-06 Primal inf 1.8293477e+08 (889)
Clp0006I 2063  Obj 4.0150218e-06 Primal inf 5277887.8 (876)
Clp0006I 2258  Obj 4.4018523e-06 Primal inf 1766.2424 (1178)
Clp0006I 2453  Obj 4.4810103e-06 Primal inf 2499.1817 (1525)
Clp0006I 2648  Obj 9.1777123e-05 Primal inf 2688817.8 (1467)
Clp0006I 2843  Obj 0.33728567 Primal inf 1470434 (1347)
Clp0006I 3038  Obj 0.34066262 Primal inf 3204480 (1327)
Clp0006I 3233  Obj 0.35797006 Primal inf 3280625.6 (1154)
Clp0006I 3404  Obj 0.3746897 Primal inf 9107390.4 (1107)
Clp0006I 3563  Obj 0.37555564 Primal inf 8187889.4 (978)
Clp0006I 3756  Obj 0.3799774 Primal inf 4861541.4 (849)
Clp0006I 3940  Obj 0.56152156 Primal inf 22935192 (763)
Clp0006I 4135  Obj 0.63164606 Primal inf 11884753 (613)
Clp0006I 4330  Obj 0.95507128 Primal inf 7265909.6 (436)
Clp0006I 4446  Obj 1.0186321 Primal inf 8644383.4 (382)
Clp0006I 4623  Obj 1.3837558 Primal inf 3197.522 (291)
Clp0006I 4818  Obj 1.7399059 Primal inf 218.81101 (42)
Clp0006I 4837  Obj 1.7430351
Clp0000I Optimal - objective value 1.7410383
Clp0032I Optimal objective 1.74103826 - 4837 iterations time 0.792, Presolve 0.02
Clp0000I Optimal - objective value 1.7410383
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1.7410383
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 203 added rows had average density of 2
Cbc0013I At root node, 203 cuts changed objective from 1.7410383 to 1.818115 in 18 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 721 row cuts average 2.0 elements, 13 column cuts (13 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (84.57 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.8978499 (675.11 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.8978499 (687.93 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.8978499 (700.49 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.8978499 (713.24 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1.8978499 (725.81 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1.8978499 (737.55 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 1.8978499 (750.13 seconds)
Cbc0010I After 800 nodes, 399 on tree, 1e+50 best solution, best possible 1.8978499 (762.29 seconds)
Cbc0010I After 900 nodes, 446 on tree, 1e+50 best solution, best possible 1.8978499 (774.40 seconds)
Cbc0010I After 1000 nodes, 481 on tree, 1e+50 best solution, best possible 1.8978499 (786.00 seconds)
Cbc0010I After 1100 nodes, 520 on tree, 1e+50 best solution, best possible 1.8978499 (797.80 seconds)
Cbc0010I After 1200 nodes, 552 on tree, 1e+50 best solution, best possible 1.8978499 (808.33 seconds)
Cbc0010I After 1300 nodes, 579 on tree, 1e+50 best solution, best possible 1.8978499 (817.97 seconds)
Cbc0010I After 1400 nodes, 603 on tree, 1e+50 best solution, best possible 1.8978499 (827.13 seconds)
Cbc0010I After 1500 nodes, 626 on tree, 1e+50 best solution, best possible 1.8978499 (835.37 seconds)
Cbc0010I After 1600 nodes, 640 on tree, 1e+50 best solution, best possible 1.8978499 (842.18 seconds)
Couenne: new cutoff value 1.3130304936e+03 (877.127 seconds)
Optimality Based BT: 309 improved bounds
Cbc0010I After 1700 nodes, 665 on tree, 1e+50 best solution, best possible 1.9001363 (1145.17 seconds)
Cbc0010I After 1800 nodes, 715 on tree, 1e+50 best solution, best possible 1.9001363 (1161.49 seconds)
Cbc0010I After 1900 nodes, 765 on tree, 1e+50 best solution, best possible 1.9001363 (1177.94 seconds)
Cbc0010I After 2000 nodes, 815 on tree, 1e+50 best solution, best possible 1.9001363 (1193.73 seconds)
Cbc0010I After 2100 nodes, 865 on tree, 1e+50 best solution, best possible 1.9001363 (1209.76 seconds)
Cbc0010I After 2200 nodes, 915 on tree, 1e+50 best solution, best possible 1.9001363 (1225.50 seconds)
Cbc0010I After 2300 nodes, 965 on tree, 1e+50 best solution, best possible 1.9001363 (1240.29 seconds)
Cbc0010I After 2400 nodes, 1015 on tree, 1e+50 best solution, best possible 1.9001363 (1255.55 seconds)
Cbc0010I After 2500 nodes, 1065 on tree, 1e+50 best solution, best possible 1.9001363 (1271.32 seconds)
Cbc0010I After 2600 nodes, 1112 on tree, 1e+50 best solution, best possible 1.9001363 (1287.48 seconds)
Cbc0010I After 2700 nodes, 1150 on tree, 1e+50 best solution, best possible 1.9001363 (1302.90 seconds)
Cbc0010I After 2800 nodes, 1188 on tree, 1e+50 best solution, best possible 1.9001363 (1317.66 seconds)
Cbc0010I After 2900 nodes, 1223 on tree, 1e+50 best solution, best possible 1.9001363 (1332.00 seconds)
Cbc0010I After 3000 nodes, 1258 on tree, 1e+50 best solution, best possible 1.9001363 (1346.04 seconds)
Cbc0010I After 3100 nodes, 1297 on tree, 1e+50 best solution, best possible 1.9001363 (1359.80 seconds)
Cbc0010I After 3200 nodes, 1335 on tree, 1e+50 best solution, best possible 1.9001363 (1372.36 seconds)
Cbc0010I After 3300 nodes, 1368 on tree, 1e+50 best solution, best possible 1.9001363 (1383.74 seconds)
Couenne: new cutoff value 1.1819425651e+03 (1418.92 seconds)
Cbc0004I Integer solution of 1181.9426 found after 218124 iterations and 3347 nodes (1389.08 seconds)
Optimality Based BT: 317 improved bounds
Optimality Based BT: 341 improved bounds
Optimality Based BT: 376 improved bounds
Cbc0010I After 3400 nodes, 1215 on tree, 1181.9426 best solution, best possible 1.9010487 (1909.98 seconds)
Cbc0010I After 3500 nodes, 1265 on tree, 1181.9426 best solution, best possible 1.9010487 (1926.71 seconds)
Cbc0010I After 3600 nodes, 1315 on tree, 1181.9426 best solution, best possible 1.9010487 (1943.80 seconds)
Cbc0010I After 3700 nodes, 1365 on tree, 1181.9426 best solution, best possible 1.9010487 (1960.20 seconds)
Cbc0010I After 3800 nodes, 1415 on tree, 1181.9426 best solution, best possible 1.9010487 (1976.26 seconds)
Cbc0010I After 3900 nodes, 1465 on tree, 1181.9426 best solution, best possible 1.9010487 (1991.66 seconds)
Cbc0010I After 4000 nodes, 1515 on tree, 1181.9426 best solution, best possible 1.9010487 (2006.61 seconds)
Cbc0010I After 4100 nodes, 1565 on tree, 1181.9426 best solution, best possible 1.9010487 (2022.49 seconds)
Cbc0010I After 4200 nodes, 1612 on tree, 1181.9426 best solution, best possible 1.9010487 (2037.79 seconds)
Cbc0010I After 4300 nodes, 1649 on tree, 1181.9426 best solution, best possible 1.9010487 (2052.87 seconds)
Cbc0010I After 4400 nodes, 1677 on tree, 1181.9426 best solution, best possible 1.9010487 (2068.86 seconds)
Cbc0010I After 4500 nodes, 1725 on tree, 1181.9426 best solution, best possible 1.906365 (2086.20 seconds)
Cbc0010I After 4600 nodes, 1775 on tree, 1181.9426 best solution, best possible 1.906365 (2102.59 seconds)
Cbc0010I After 4700 nodes, 1825 on tree, 1181.9426 best solution, best possible 1.906365 (2118.88 seconds)
Cbc0010I After 4800 nodes, 1875 on tree, 1181.9426 best solution, best possible 1.906365 (2134.94 seconds)
Cbc0010I After 4900 nodes, 1925 on tree, 1181.9426 best solution, best possible 1.906365 (2150.54 seconds)
Cbc0010I After 5000 nodes, 1975 on tree, 1181.9426 best solution, best possible 1.906365 (2165.42 seconds)
Cbc0010I After 5100 nodes, 2024 on tree, 1181.9426 best solution, best possible 1.906365 (2180.94 seconds)
Cbc0010I After 5200 nodes, 2074 on tree, 1181.9426 best solution, best possible 1.906365 (2196.52 seconds)
Cbc0010I After 5300 nodes, 2118 on tree, 1181.9426 best solution, best possible 1.906365 (2211.77 seconds)
Cbc0010I After 5400 nodes, 2157 on tree, 1181.9426 best solution, best possible 1.906365 (2226.95 seconds)
Cbc0010I After 5500 nodes, 2193 on tree, 1181.9426 best solution, best possible 1.906365 (2242.21 seconds)
Cbc0010I After 5600 nodes, 2234 on tree, 1181.9426 best solution, best possible 1.9077203 (2269.44 seconds)
Cbc0010I After 5700 nodes, 2284 on tree, 1181.9426 best solution, best possible 1.9077203 (2285.41 seconds)
Cbc0010I After 5800 nodes, 2334 on tree, 1181.9426 best solution, best possible 1.9077203 (2302.98 seconds)
Cbc0010I After 5900 nodes, 2384 on tree, 1181.9426 best solution, best possible 1.9077203 (2319.20 seconds)
Cbc0010I After 6000 nodes, 2434 on tree, 1181.9426 best solution, best possible 1.9077203 (2335.00 seconds)
Cbc0010I After 6100 nodes, 2484 on tree, 1181.9426 best solution, best possible 1.9077203 (2350.52 seconds)
Cbc0010I After 6200 nodes, 2534 on tree, 1181.9426 best solution, best possible 1.9077203 (2365.65 seconds)
Cbc0010I After 6300 nodes, 2584 on tree, 1181.9426 best solution, best possible 1.9077203 (2381.51 seconds)
Cbc0010I After 6400 nodes, 2632 on tree, 1181.9426 best solution, best possible 1.9077203 (2396.76 seconds)
Cbc0010I After 6500 nodes, 2677 on tree, 1181.9426 best solution, best possible 1.9077203 (2412.70 seconds)
Cbc0010I After 6600 nodes, 2710 on tree, 1181.9426 best solution, best possible 1.9101266 (2428.12 seconds)
Cbc0010I After 6700 nodes, 2760 on tree, 1181.9426 best solution, best possible 1.9134627 (2455.63 seconds)
Cbc0010I After 6800 nodes, 2810 on tree, 1181.9426 best solution, best possible 1.9134627 (2471.41 seconds)
Cbc0010I After 6900 nodes, 2860 on tree, 1181.9426 best solution, best possible 1.9134627 (2487.52 seconds)
Cbc0010I After 7000 nodes, 2910 on tree, 1181.9426 best solution, best possible 1.9134627 (2503.79 seconds)
Cbc0010I After 7100 nodes, 2960 on tree, 1181.9426 best solution, best possible 1.9134627 (2519.66 seconds)
Cbc0010I After 7200 nodes, 3010 on tree, 1181.9426 best solution, best possible 1.9134627 (2534.77 seconds)
Cbc0010I After 7300 nodes, 3059 on tree, 1181.9426 best solution, best possible 1.9134627 (2549.86 seconds)
Cbc0010I After 7400 nodes, 3108 on tree, 1181.9426 best solution, best possible 1.9134627 (2566.00 seconds)
Cbc0010I After 7500 nodes, 3153 on tree, 1181.9426 best solution, best possible 1.9134627 (2581.54 seconds)
Cbc0010I After 7600 nodes, 3187 on tree, 1181.9426 best solution, best possible 1.9134627 (2596.29 seconds)
Cbc0010I After 7700 nodes, 3233 on tree, 1181.9426 best solution, best possible 1.9151177 (2634.97 seconds)
Cbc0010I After 7800 nodes, 3283 on tree, 1181.9426 best solution, best possible 1.9151177 (2651.72 seconds)
Cbc0010I After 7900 nodes, 3333 on tree, 1181.9426 best solution, best possible 1.9151177 (2667.89 seconds)
Cbc0010I After 8000 nodes, 3383 on tree, 1181.9426 best solution, best possible 1.9151177 (2683.68 seconds)
Cbc0010I After 8100 nodes, 3433 on tree, 1181.9426 best solution, best possible 1.9151177 (2699.81 seconds)
Cbc0010I After 8200 nodes, 3483 on tree, 1181.9426 best solution, best possible 1.9151177 (2715.36 seconds)
Cbc0010I After 8300 nodes, 3533 on tree, 1181.9426 best solution, best possible 1.9151177 (2730.63 seconds)
Cbc0010I After 8400 nodes, 3583 on tree, 1181.9426 best solution, best possible 1.9151177 (2746.56 seconds)
Cbc0010I After 8500 nodes, 3631 on tree, 1181.9426 best solution, best possible 1.9151177 (2762.05 seconds)
Cbc0010I After 8600 nodes, 3678 on tree, 1181.9426 best solution, best possible 1.9151177 (2777.75 seconds)
Cbc0010I After 8700 nodes, 3712 on tree, 1181.9426 best solution, best possible 1.9151177 (2791.94 seconds)
Cbc0010I After 8800 nodes, 3753 on tree, 1181.9426 best solution, best possible 1.9151177 (2807.37 seconds)
Cbc0010I After 8900 nodes, 3788 on tree, 1181.9426 best solution, best possible 1.9151177 (2821.60 seconds)
Cbc0010I After 9000 nodes, 3819 on tree, 1181.9426 best solution, best possible 1.9151177 (2835.28 seconds)
Cbc0010I After 9100 nodes, 3848 on tree, 1181.9426 best solution, best possible 1.9151177 (2847.60 seconds)
Cbc0010I After 9200 nodes, 3878 on tree, 1181.9426 best solution, best possible 1.9151177 (2859.25 seconds)
Cbc0010I After 9300 nodes, 3911 on tree, 1181.9426 best solution, best possible 1.9151177 (2869.93 seconds)
Couenne: new cutoff value 1.0657384081e+03 (2900.95 seconds)
Cbc0004I Integer solution of 1065.7384 found after 721084 iterations and 9311 nodes (2871.10 seconds)
Cbc0010I After 9400 nodes, 3680 on tree, 1065.7384 best solution, best possible 1.9156028 (2890.66 seconds)
Cbc0010I After 9500 nodes, 3730 on tree, 1065.7384 best solution, best possible 1.9156028 (2908.09 seconds)
Cbc0010I After 9600 nodes, 3780 on tree, 1065.7384 best solution, best possible 1.9156028 (2925.40 seconds)
Cbc0010I After 9700 nodes, 3830 on tree, 1065.7384 best solution, best possible 1.9156028 (2942.10 seconds)
Cbc0010I After 9800 nodes, 3880 on tree, 1065.7384 best solution, best possible 1.9156028 (2957.99 seconds)
Cbc0010I After 9900 nodes, 3930 on tree, 1065.7384 best solution, best possible 1.9156028 (2973.10 seconds)
Cbc0010I After 10000 nodes, 3977 on tree, 1065.7384 best solution, best possible 1.9156028 (2988.66 seconds)
Cbc0010I After 10100 nodes, 4026 on tree, 1065.7384 best solution, best possible 1.9156028 (3004.58 seconds)
Cbc0010I After 10200 nodes, 4065 on tree, 1065.7384 best solution, best possible 1.9156028 (3019.62 seconds)
Cbc0010I After 10300 nodes, 4095 on tree, 1065.7384 best solution, best possible 1.9156028 (3033.84 seconds)
Cbc0010I After 10400 nodes, 4141 on tree, 1065.7384 best solution, best possible 1.9186965 (3050.26 seconds)
Cbc0010I After 10500 nodes, 4191 on tree, 1065.7384 best solution, best possible 1.9186965 (3066.33 seconds)
Cbc0010I After 10600 nodes, 4241 on tree, 1065.7384 best solution, best possible 1.9186965 (3082.56 seconds)
Cbc0010I After 10700 nodes, 4291 on tree, 1065.7384 best solution, best possible 1.9186965 (3098.87 seconds)
Cbc0010I After 10800 nodes, 4341 on tree, 1065.7384 best solution, best possible 1.9186965 (3114.72 seconds)
Cbc0010I After 10900 nodes, 4391 on tree, 1065.7384 best solution, best possible 1.9186965 (3129.84 seconds)
Cbc0010I After 11000 nodes, 4440 on tree, 1065.7384 best solution, best possible 1.9186965 (3145.29 seconds)
Cbc0010I After 11100 nodes, 4489 on tree, 1065.7384 best solution, best possible 1.9186965 (3160.62 seconds)
Cbc0010I After 11200 nodes, 4538 on tree, 1065.7384 best solution, best possible 1.9186965 (3175.94 seconds)
Cbc0010I After 11300 nodes, 4574 on tree, 1065.7384 best solution, best possible 1.9186965 (3191.19 seconds)
Cbc0010I After 11400 nodes, 4620 on tree, 1065.7384 best solution, best possible 1.9188504 (3207.93 seconds)
Cbc0010I After 11500 nodes, 4670 on tree, 1065.7384 best solution, best possible 1.9188504 (3224.35 seconds)
Cbc0010I After 11600 nodes, 4720 on tree, 1065.7384 best solution, best possible 1.9188504 (3249.34 seconds)
Cbc0010I After 11700 nodes, 4770 on tree, 1065.7384 best solution, best possible 1.9188504 (3265.52 seconds)
Cbc0010I After 11800 nodes, 4820 on tree, 1065.7384 best solution, best possible 1.9188504 (3281.33 seconds)
Cbc0010I After 11900 nodes, 4870 on tree, 1065.7384 best solution, best possible 1.9188504 (3296.63 seconds)
Cbc0010I After 12000 nodes, 4920 on tree, 1065.7384 best solution, best possible 1.9188504 (3311.87 seconds)
Cbc0010I After 12100 nodes, 4969 on tree, 1065.7384 best solution, best possible 1.9188504 (3327.64 seconds)
Cbc0010I After 12200 nodes, 5017 on tree, 1065.7384 best solution, best possible 1.9188504 (3343.55 seconds)
Cbc0010I After 12300 nodes, 5060 on tree, 1065.7384 best solution, best possible 1.9188504 (3359.03 seconds)
Cbc0010I After 12400 nodes, 5102 on tree, 1065.7384 best solution, best possible 1.9188504 (3374.61 seconds)
Cbc0010I After 12500 nodes, 5139 on tree, 1065.7384 best solution, best possible 1.9190952 (3390.34 seconds)
Cbc0010I After 12600 nodes, 5189 on tree, 1065.7384 best solution, best possible 1.9190952 (3406.60 seconds)
Cbc0010I After 12700 nodes, 5239 on tree, 1065.7384 best solution, best possible 1.9190952 (3422.71 seconds)
Cbc0010I After 12800 nodes, 5289 on tree, 1065.7384 best solution, best possible 1.9190952 (3438.96 seconds)
Cbc0010I After 12900 nodes, 5339 on tree, 1065.7384 best solution, best possible 1.9190952 (3455.05 seconds)
Cbc0010I After 13000 nodes, 5389 on tree, 1065.7384 best solution, best possible 1.9190952 (3470.77 seconds)
Cbc0010I After 13100 nodes, 5439 on tree, 1065.7384 best solution, best possible 1.9190952 (3485.58 seconds)
Cbc0010I After 13200 nodes, 5486 on tree, 1065.7384 best solution, best possible 1.9190952 (3501.12 seconds)
Cbc0010I After 13300 nodes, 5536 on tree, 1065.7384 best solution, best possible 1.9190952 (3517.05 seconds)
Cbc0010I After 13400 nodes, 5580 on tree, 1065.7384 best solution, best possible 1.9190952 (3532.09 seconds)
Cbc0010I After 13500 nodes, 5614 on tree, 1065.7384 best solution, best possible 1.9195774 (3547.57 seconds)
Cbc0010I After 13600 nodes, 5664 on tree, 1065.7384 best solution, best possible 1.9195774 (3562.71 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1065.7384 (best possible 1.9195774), took 1124954 iterations and 13655 nodes (3588.01 seconds)
Cbc0035I Maximum depth 852, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.033484s)
Total solve time:                         3588.85s (3588.85s in branch-and-bound)
Lower bound:                              1.91958
Upper bound:                              1065.74  (gap: 36437.43%)
Branch-and-bound nodes:                     13655
Stats: /tmp/jl_D1yoyV/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.033484 [sep]  3588.85 [time]  3588.86 [bb]         1.919577e+00 [lower]         1.065738e+03 [upper]   13655 [nodes]
Performance of                           FBBT:	    303.916s,    26003 runs. fix:          0 shrnk:    1.19965 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    309.555s,       10 runs. fix:          0 shrnk:    0.34837 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.049405497188479156
f0 = 0.04146532799747359
f0 = 0.009704651233451267
f0 = 0.05999238944315328
f0 = 0.02205602553057106
f0 = 0.06616807659171318
f0 = 0.050287738209702
f0 = 0.03881860493380505
f0 = 0.07851945088883297
f0 = 0.03881860493380505
f0 = 0.0441120510611421
f0 = 0.00882241021222842
f0 = 0.03705412289135938
f0 = 0.04058308697625075
f0 = 0.05999238944315328
f0 = 0.06528583557049034
f0 = 0.07851945088883297
f0 = 0.09704651233451266
f0 = 0.0882241021222842
f0 = 0.07057928169782739
f0 = 0.02117378450934821
f0 = 0.043229810039919284
f0 = 0.07499048680394158
f0 = 0.016762579403233998
f0 = 0.07057928169782736
f0 = 0.0582279074007076
f0 = 0.015880338382011156
f0 = 0.037936363912582205
f0 = 0.06352135352804464
f0 = 0.04146532799747357
f0 = 0.037936363912582205
f0 = 0.07057928169782736
f0 = 0.04058308697625074
f0 = 0.07322600476149592
f0 = 0.05116997923092485
f0 = 0.08381289701617
f0 = 0.08998858416472992
f0 = 0.04058308697625075
f0 = 0.028231712679130945
f0 = 0.07057928169782739
f0 = 0.027349471657908103
f0 = 0.04146532799747359
f0 = 0.07587272782516444
f0 = 0.01411585633956548
f0 = 0.06969704067660455
f0 = 0.0582279074007076
f0 = 0.01764482042445684
f0 = 0.03440739982769085
f0 = 0.059110148421930436
f0 = 0.042347569018696435
f0 = 0.03793636391258222
f0 = 0.06705031761293599
f0 = 0.04146532799747359
f0 = 0.07057928169782739
f0 = 0.04852325616725633
f0 = 0.08293065599494719
f0 = 0.08645962007983857
f0 = 0.03440739982769085
f0 = 0.026467230636685272
f0 = 0.06352135352804464
f0 = 0.05293446127337052
f0 = 0.04764101514603347
f0 = 0.014998097360788314
f0 = 0.06969704067660452
f0 = 0.02117378450934821
f0 = 0.07146152271905021
f0 = 0.06175687148559894
f0 = 0.04675877412481063
f0 = 0.08293065599494719
f0 = 0.04764101514603347
f0 = 0.04764101514603347
f0 = 0.00882241021222842
f0 = 0.03881860493380505
f0 = 0.03881860493380505
f0 = 0.06528583557049034
f0 = 0.06881479965538168
f0 = 0.07587272782516441
f0 = 0.10057547641940404
f0 = 0.09263530722839841
f0 = 0.07234376374027304
f0 = 0.027349471657908103
f0 = 0.05469894331581623
f0 = 0.07322600476149589
f0 = 0.03793636391258222
f0 = 0.07234376374027307
f0 = 0.07851945088883297
f0 = 0.02205602553057105
f0 = 0.04764101514603347
f0 = 0.0855773790586157
f0 = 0.03176067676402231
f0 = 0.027349471657908103
f0 = 0.07057928169782736
f0 = 0.05116997923092483
f0 = 0.0811661739525015
f0 = 0.07057928169782739
f0 = 0.10057547641940404
f0 = 0.10851564561040962
f0 = 0.05999238944315328
f0 = 0.05293446127337052
f0 = 0.08734186110106139
f0 = 0.0441120510611421
f0 = 0.03881860493380507
f0 = 0.09263530722839841
f0 = 0.02646723063668526
f0 = 0.07146152271905021
f0 = 0.03176067676402232
f0 = 0.04587653310358778
f0 = 0.03705412289135936
f0 = 0.0291139537003538
f0 = 0.06881479965538168
f0 = 0.06175687148559894
f0 = 0.07587272782516441
f0 = 0.04234756901869642
f0 = 0.0644035945492675
f0 = 0.024702748594239585
f0 = 0.054698943315816206
f0 = 0.059110148421930436
f0 = 0.016762579403234005
f0 = 0.024702748594239578
f0 = 0.03705412289135938
f0 = 0.02646723063668526
f0 = 0.005293446127337054
f0 = 0.05646342535826192
f0 = 0.027349471657908114
f0 = 0.03440739982769085
f0 = 0.02823171267913096
f0 = 0.03528964084891368
f0 = 0.00794016919100558
f0 = 0.03705412289135938
f0 = 0.04852325616725633
f0 = 0.03970084595502791
f0 = 0.039700845955027896
f0 = 0.01146913327589695
f0 = 0.03264291778524517
f0 = 0.017644820424456847
f0 = 0.04058308697625075
f0 = 0.04940549718847917
f0 = 0.052052220252147695
f0 = 0.04499429208236496
f0 = 0.02999619472157664
f0 = 0.03087843574279947
f0 = 0.024702748594239585
f0 = 0.027349471657908103
f0 = 0.04675877412481063
f0 = 0.015880338382011156
f0 = 0.053816702294593385
f0 = 0.04058308697625074
f0 = 0.02293826655179389
f0 = 0.06705031761293602
f0 = 0.03528964084891368
f0 = 0.032642917785245154
f0 = 0.012351374297119789
f0 = 0.02293826655179389
f0 = 0.03264291778524517
f0 = 0.046758774124810644
f0 = 0.05999238944315326
f0 = 0.0688147996553817
f0 = 0.07675496884638729
f0 = 0.06969704067660452
f0 = 0.0582279074007076
f0 = 0.06263911250682179
f0 = 0.05116997923092485
f0 = 0.10675116356796388
f0 = 0.04764101514603349
f0 = 0.08028393293127865
f0 = 0.036171881870136535
f0 = 0.06440359454926747
f0 = 0.05646342535826189
f0 = 0.02205602553057106
f0 = 0.08293065599494714
f0 = 0.08204841497372431
f0 = 0.09087082518595273
f0 = 0.057345666379484725
f0 = 0.0749904868039416
f0 = 0.03440739982769085
f0 = 0.06087463046437613
f0 = 0.05999238944315328
f0 = 0.019409302466902534
f0 = 0.032642917785245154
f0 = 0.042347569018696435
f0 = 0.0441120510611421
f0 = 0.04764101514603349
f0 = 0.09616427131328979
f0 = 0.027349471657908124
f0 = 0.08116617395250147
f0 = 0.052934461273370544
f0 = 0.04146532799747357
f0 = 0.05116997923092483
f0 = 0.04411205106114212
f0 = 0.06881479965538168
f0 = 0.06440359454926747
f0 = 0.08734186110106136
f0 = 0.054698943315816206
f0 = 0.07851945088883297
f0 = 0.04411205106114212
f0 = 0.07851945088883294
f0 = 0.07940169191005582
f0 = 0.01146913327589695
f0 = 0.003528964084891368
f0 = 0.05646342535826192
f0 = 0.050287738209702
f0 = 0.027349471657908114
f0 = 0.06352135352804464
f0 = 0.05028773820970202
f0 = 0.03440739982769085
f0 = 0.017644820424456847
f0 = 0.05911014842193041
f0 = 0.02999619472157663
f0 = 0.03176067676402232
f0 = 0.06969704067660452
f0 = 0.06263911250682179
f0 = 0.04675877412481063
f0 = 0.03176067676402232
f0 = 0.020291543488125376
f0 = 0.01852706144567969
f0 = 0.020291543488125376
f0 = 0.026467230636685272
f0 = 0.06528583557049034
f0 = 0.06705031761293599
f0 = 0.019409302466902534
f0 = 0.014998097360788314
f0 = 0.010586892254674109
f0 = 0.057345666379484746
f0 = 0.017644820424456847
f0 = 0.04411205106114212
f0 = 0.03352515880646801
f0 = 0.02293826655179389
f0 = 0.00882241021222842
f0 = 0.043229810039919284
f0 = 0.03705412289135936
f0 = 0.03440739982769084
f0 = 0.0441120510611421
f0 = 0.012351374297119792
f0 = 0.046758774124810644
f0 = 0.025584989615462427
f0 = 0.05646342535826192
f0 = 0.06352135352804464
f0 = 0.046758774124810644
f0 = 0.037936363912582205
f0 = 0.04058308697625075
f0 = 0.03528964084891368
f0 = 0.023820507573016746
f0 = 0.07322600476149592
f0 = 0.01852706144567969
f0 = 0.05116997923092485
f0 = 0.027349471657908114
f0 = 0.03881860493380505
f0 = 0.0229382665517939
f0 = 0.0291139537003538
f0 = 0.057345666379484746
f0 = 0.04852325616725633
f0 = 0.0608746304643761
f0 = 0.02999619472157664
f0 = 0.04852325616725633
f0 = 0.01499809736078832
f0 = 0.04940549718847917
f0 = 0.055581184337039076
f0 = 0.030878435742799484
f0 = 0.03352515880646801
f0 = 0.03264291778524517
f0 = 0.019409302466902523
f0 = 0.009704651233451267
f0 = 0.044994292082364946
f0 = 0.03264291778524518
f0 = 0.02646723063668526
f0 = 0.042347569018696435
f0 = 0.028231712679130945
f0 = 0.011469133275896945
f0 = 0.0582279074007076
f0 = 0.033525158806467996
f0 = 0.02911395370035379
f0 = 0.02911395370035379
f0 = 0.005293446127337053
f0 = 0.03970084595502791
f0 = 0.03176067676402232
f0 = 0.055581184337039055
f0 = 0.06263911250682182
f0 = 0.05999238944315328
f0 = 0.05293446127337052
f0 = 0.046758774124810644
f0 = 0.028231712679130945
f0 = 0.019409302466902523
f0 = 0.03440739982769084
f0 = 0.04234756901869642
f0 = 0.02117378450934821
f0 = 0.04587653310358778
f0 = 0.03528964084891368
f0 = 0.02117378450934821
f0 = 0.0582279074007076
f0 = 0.03617188187013652
f0 = 0.03528964084891368
f0 = 0.015880338382011156
f0 = 0.014998097360788314
f0 = 0.02999619472157663
f0 = 0.03970084595502791
f0 = 0.053816702294593365
f0 = 0.06175687148559894
f0 = 0.07146152271905024
f0 = 0.06705031761293599
f0 = 0.05116997923092483
f0 = 0.0688147996553817
f0 = 0.046758774124810644
f0 = 0.07675496884638729
f0 = 0.06969704067660455
f0 = 0.04411205106114212
f0 = 0.02823171267913096
f0 = 0.07675496884638729
f0 = 0.04852325616725633
f0 = 0.042347569018696435
f0 = 0.08734186110106139
f0 = 0.08293065599494719
f0 = 0.059110148421930436
f0 = 0.052934461273370544
f0 = 0.025584989615462427
f0 = 0.03793636391258222
f0 = 0.005293446127337054
f0 = 0.01499809736078832
f0 = 0.07940169191005582
f0 = 0.08204841497372434
f0 = 0.026467230636685272
f0 = 0.04764101514603347
f0 = 0.025584989615462437
f0 = 0.04764101514603351
f0 = 0.05646342535826194
f0 = 0.01940930246690254
f0 = 0.03881860493380508
f0 = 0.054698943315816206
f0 = 0.03264291778524518
f0 = 0.04940549718847917
f0 = 0.05911014842193046
f0 = 0.053816702294593365
f0 = 0.02646723063668526
f0 = 0.027349471657908124
f0 = 0.008822410212228427
f0 = 0.03176067676402232
f0 = 0.036171881870136556
f0 = 0.043229810039919284
f0 = 0.07763720986761014
f0 = 0.07587272782516441
f0 = 0.03881860493380508
f0 = 0.054698943315816206
f0 = 0.03528964084891369
f0 = 0.06352135352804464
f0 = 0.055581184337039076
f0 = 0.030878435742799484
f0 = 0.021173784509348217
f0 = 0.06440359454926747
f0 = 0.03528964084891368
f0 = 0.03881860493380507
f0 = 0.07146152271905021
f0 = 0.06705031761293599
f0 = 0.04764101514603347
f0 = 0.03705412289135938
f0 = 0.017644820424456847
f0 = 0.0291139537003538
f0 = 0.01852706144567969
f0 = 0.025584989615462427
f0 = 0.0688147996553817
f0 = 0.06969704067660452
f0 = 0.0229382665517939
f0 = 0.05822790740070758
f0 = 0.04852325616725633
f0 = 0.009704651233451267
f0 = 0.07234376374027307
f0 = 0.020291543488125376
f0 = 0.07057928169782739
f0 = 0.0608746304643761
f0 = 0.049405497188479156
f0 = 0.08734186110106139
f0 = 0.05116997923092483
f0 = 0.05116997923092483
f0 = 0.014115856339565473
f0 = 0.04499429208236496
f0 = 0.03705412289135938
f0 = 0.06616807659171318
f0 = 0.06705031761293602
f0 = 0.0749904868039416
f0 = 0.1023399584618497
f0 = 0.09528203029206694
f0 = 0.0749904868039416
f0 = 0.04852325616725631
f0 = 0.03528964084891369
f0 = 0.08381289701617003
f0 = 0.02999619472157664
f0 = 0.05999238944315328
f0 = 0.017644820424456847
f0 = 0.04764101514603347
f0 = 0.032642917785245154
f0 = 0.01411585633956548
f0 = 0.06969704067660452
f0 = 0.06352135352804462
f0 = 0.06969704067660452
f0 = 0.03705412289135938
f0 = 0.05469894331581623
f0 = 0.01499809736078832
f0 = 0.042347569018696435
f0 = 0.04852325616725633
f0 = 0.03352515880646801
f0 = 0.03705412289135936
f0 = 0.027349471657908114
slurmstepd: error: *** JOB 1884552 ON optimum05 CANCELLED AT 2025-01-12T15:58:47 DUE TO TIME LIMIT ***
