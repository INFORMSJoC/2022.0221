solving instance transportation 20 8 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 576.54478      438 7.517977
NLP0014I             2      INFEAS 11.061105       69 0.731412
Loaded instance "/tmp/jl_rkAuHX/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2802 (0 integer)

Coin0506I Presolve 4041 (-1600) rows, 2001 (-2001) columns and 10001 (-3601) elements
Clp0006I 0  Obj -1897.3181 Primal inf 33250.206 (1220)
Clp0006I 155  Obj -1897.3181 Primal inf 24061.928 (1189)
Clp0006I 310  Obj -1897.3181 Primal inf 16104.563 (1051)
Clp0006I 465  Obj -1897.3181 Primal inf 8606.4026 (921)
Clp0006I 620  Obj -1897.3181 Primal inf 5439.882 (856)
Clp0006I 745  Obj -1897.3181 Primal inf 6003.2378 (865)
Clp0006I 900  Obj -1897.3181 Primal inf 11356.587 (866)
Clp0006I 1050  Obj -1897.3181 Primal inf 76120.255 (926)
Clp0006I 1205  Obj -1768.6422 Primal inf 11600.753 (921)
Clp0006I 1360  Obj -1683.241 Primal inf 40077.345 (896)
Clp0006I 1515  Obj -1597.8953 Primal inf 22836.827 (867)
Clp0006I 1670  Obj -1446.6124 Primal inf 5145.1067 (724)
Clp0006I 1825  Obj -1165.552 Primal inf 2482.9452 (594)
Clp0006I 1980  Obj -847.09028 Primal inf 2231.7378 (478)
Clp0006I 2135  Obj -771.15294 Primal inf 316.22564 (273)
Clp0006I 2290  Obj -754.44913 Primal inf 106.19696 (240)
Clp0006I 2445  Obj -750.97629 Primal inf 22.486334 (64)
Clp0006I 2506  Obj -749.61384
Clp0000I Optimal - objective value -749.61384
Clp0032I Optimal objective -749.6138414 - 2506 iterations time 0.242, Presolve 0.02
Clp0000I Optimal - objective value -749.61384
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -749.61384
Optimality Based BT: 400 improved bounds
Probing: 345 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from -749.61384 to -749.61384 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (150.21 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -746.92778 (1202.66 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -746.92778 (1208.74 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -746.92778 (1214.34 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -746.92778 (1220.11 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -746.92778 (1225.97 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -746.92778 (1231.83 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -746.92778 (1237.59 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -746.92778 (1244.51 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -746.92778 (1255.02 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -746.92778 (1265.98 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -746.92778 (1276.86 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -746.92778 (1287.80 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -746.92778 (1298.43 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -746.92778 (1309.66 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -746.92778 (1321.95 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -746.92778 (1334.51 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -746.92778 (1346.27 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -746.92778 (1358.14 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -746.92778 (1369.98 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -746.92778 (1382.20 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -746.92778 (1394.10 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -746.92778 (1406.25 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -746.92778 (1418.42 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -746.92778 (1430.30 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -746.92778 (1442.16 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -746.92778 (1453.39 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -746.92778 (1462.35 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -746.92778 (1471.07 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -746.92778 (1482.59 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -746.92778 (1494.07 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -746.92778 (1505.29 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -746.92778 (1516.24 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -746.92778 (1527.92 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -746.92778 (1537.64 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -746.92778 (1548.87 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -746.92778 (1558.79 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -746.92778 (1568.36 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible -746.92778 (1579.31 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible -746.92778 (1590.91 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible -746.92778 (1602.91 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible -746.92778 (1614.46 seconds)
Cbc0010I After 4200 nodes, 2100 on tree, 1e+50 best solution, best possible -746.92778 (1626.37 seconds)
Cbc0010I After 4300 nodes, 2150 on tree, 1e+50 best solution, best possible -746.92778 (1638.29 seconds)
Cbc0010I After 4400 nodes, 2200 on tree, 1e+50 best solution, best possible -746.92778 (1650.28 seconds)
Cbc0010I After 4500 nodes, 2250 on tree, 1e+50 best solution, best possible -746.92778 (1661.98 seconds)
Cbc0010I After 4600 nodes, 2300 on tree, 1e+50 best solution, best possible -746.92778 (1674.91 seconds)
Cbc0010I After 4700 nodes, 2350 on tree, 1e+50 best solution, best possible -746.92778 (1687.72 seconds)
Cbc0010I After 4800 nodes, 2400 on tree, 1e+50 best solution, best possible -746.92778 (1700.61 seconds)
Cbc0010I After 4900 nodes, 2450 on tree, 1e+50 best solution, best possible -746.92778 (1713.17 seconds)
Cbc0010I After 5000 nodes, 2500 on tree, 1e+50 best solution, best possible -746.92778 (1725.43 seconds)
Cbc0010I After 5100 nodes, 2550 on tree, 1e+50 best solution, best possible -746.92778 (1737.95 seconds)
Cbc0010I After 5200 nodes, 2600 on tree, 1e+50 best solution, best possible -746.92778 (1750.65 seconds)
Cbc0010I After 5300 nodes, 2650 on tree, 1e+50 best solution, best possible -746.92778 (1763.98 seconds)
Cbc0010I After 5400 nodes, 2700 on tree, 1e+50 best solution, best possible -746.92778 (1776.80 seconds)
Cbc0010I After 5500 nodes, 2750 on tree, 1e+50 best solution, best possible -746.92778 (1789.75 seconds)
Cbc0010I After 5600 nodes, 2800 on tree, 1e+50 best solution, best possible -746.92778 (1802.47 seconds)
Cbc0010I After 5700 nodes, 2850 on tree, 1e+50 best solution, best possible -746.92778 (1814.90 seconds)
Cbc0010I After 5800 nodes, 2900 on tree, 1e+50 best solution, best possible -746.92778 (1827.43 seconds)
Cbc0010I After 5900 nodes, 2950 on tree, 1e+50 best solution, best possible -746.92778 (1840.60 seconds)
Cbc0010I After 6000 nodes, 3000 on tree, 1e+50 best solution, best possible -746.92778 (1853.07 seconds)
Cbc0010I After 6100 nodes, 3050 on tree, 1e+50 best solution, best possible -746.92778 (1865.99 seconds)
Cbc0010I After 6200 nodes, 3100 on tree, 1e+50 best solution, best possible -746.92778 (1879.06 seconds)
Cbc0010I After 6300 nodes, 3150 on tree, 1e+50 best solution, best possible -746.92778 (1892.10 seconds)
Cbc0010I After 6400 nodes, 3200 on tree, 1e+50 best solution, best possible -746.92778 (1904.45 seconds)
Cbc0010I After 6500 nodes, 3250 on tree, 1e+50 best solution, best possible -746.92778 (1917.16 seconds)
Cbc0010I After 6600 nodes, 3300 on tree, 1e+50 best solution, best possible -746.92778 (1930.24 seconds)
Cbc0010I After 6700 nodes, 3350 on tree, 1e+50 best solution, best possible -746.92778 (1943.24 seconds)
Cbc0010I After 6800 nodes, 3400 on tree, 1e+50 best solution, best possible -746.92778 (1955.91 seconds)
Cbc0010I After 6900 nodes, 3450 on tree, 1e+50 best solution, best possible -746.92778 (1968.29 seconds)
Cbc0010I After 7000 nodes, 3500 on tree, 1e+50 best solution, best possible -746.92778 (1981.24 seconds)
Cbc0010I After 7100 nodes, 3550 on tree, 1e+50 best solution, best possible -746.92778 (1994.00 seconds)
Cbc0010I After 7200 nodes, 3600 on tree, 1e+50 best solution, best possible -746.92778 (2006.14 seconds)
Cbc0010I After 7300 nodes, 3650 on tree, 1e+50 best solution, best possible -746.92778 (2018.60 seconds)
Cbc0010I After 7400 nodes, 3700 on tree, 1e+50 best solution, best possible -746.92778 (2031.07 seconds)
Cbc0010I After 7500 nodes, 3750 on tree, 1e+50 best solution, best possible -746.92778 (2043.56 seconds)
Cbc0010I After 7600 nodes, 3800 on tree, 1e+50 best solution, best possible -746.92778 (2054.96 seconds)
Cbc0010I After 7700 nodes, 3850 on tree, 1e+50 best solution, best possible -746.92778 (2067.12 seconds)
Cbc0010I After 7800 nodes, 3900 on tree, 1e+50 best solution, best possible -746.92778 (2078.52 seconds)
Cbc0010I After 7900 nodes, 3950 on tree, 1e+50 best solution, best possible -746.92778 (2087.21 seconds)
Couenne: new cutoff value 1.3204978603e+03 (2115.95 seconds)
Optimality Based BT: 318 improved bounds
Cbc0010I After 8000 nodes, 3998 on tree, 1e+50 best solution, best possible -746.90188 (2585.57 seconds)
Optimality Based BT: 315 improved bounds
Cbc0010I After 8100 nodes, 4048 on tree, 1e+50 best solution, best possible -746.90188 (2749.33 seconds)
Cbc0010I After 8200 nodes, 4098 on tree, 1e+50 best solution, best possible -746.90188 (2757.07 seconds)
Cbc0010I After 8300 nodes, 4148 on tree, 1e+50 best solution, best possible -746.90188 (2764.23 seconds)
Cbc0010I After 8400 nodes, 4198 on tree, 1e+50 best solution, best possible -746.90188 (2771.58 seconds)
Cbc0010I After 8500 nodes, 4248 on tree, 1e+50 best solution, best possible -746.90188 (2779.16 seconds)
Cbc0010I After 8600 nodes, 4298 on tree, 1e+50 best solution, best possible -746.90188 (2786.83 seconds)
Cbc0010I After 8700 nodes, 4348 on tree, 1e+50 best solution, best possible -746.90188 (2794.46 seconds)
Cbc0010I After 8800 nodes, 4398 on tree, 1e+50 best solution, best possible -746.90188 (2804.15 seconds)
Cbc0010I After 8900 nodes, 4448 on tree, 1e+50 best solution, best possible -746.90188 (2818.61 seconds)
Cbc0010I After 9000 nodes, 4498 on tree, 1e+50 best solution, best possible -746.90188 (2833.78 seconds)
Cbc0010I After 9100 nodes, 4548 on tree, 1e+50 best solution, best possible -746.90188 (2848.71 seconds)
Cbc0010I After 9200 nodes, 4598 on tree, 1e+50 best solution, best possible -746.90188 (2863.88 seconds)
Cbc0010I After 9300 nodes, 4648 on tree, 1e+50 best solution, best possible -746.90188 (2878.86 seconds)
Cbc0010I After 9400 nodes, 4698 on tree, 1e+50 best solution, best possible -746.90188 (2894.06 seconds)
Cbc0010I After 9500 nodes, 4748 on tree, 1e+50 best solution, best possible -746.90188 (2910.34 seconds)
Cbc0010I After 9600 nodes, 4798 on tree, 1e+50 best solution, best possible -746.90188 (2926.79 seconds)
Cbc0010I After 9700 nodes, 4848 on tree, 1e+50 best solution, best possible -746.90188 (2943.14 seconds)
Cbc0010I After 9800 nodes, 4898 on tree, 1e+50 best solution, best possible -746.90188 (2959.99 seconds)
Cbc0010I After 9900 nodes, 4948 on tree, 1e+50 best solution, best possible -746.90188 (2976.75 seconds)
Cbc0010I After 10000 nodes, 4998 on tree, 1e+50 best solution, best possible -746.90188 (2993.38 seconds)
Cbc0010I After 10100 nodes, 5048 on tree, 1e+50 best solution, best possible -746.90188 (3010.38 seconds)
Cbc0010I After 10200 nodes, 5098 on tree, 1e+50 best solution, best possible -746.90188 (3027.74 seconds)
Cbc0010I After 10300 nodes, 5148 on tree, 1e+50 best solution, best possible -746.90188 (3044.91 seconds)
Cbc0010I After 10400 nodes, 5198 on tree, 1e+50 best solution, best possible -746.90188 (3062.10 seconds)
Cbc0010I After 10500 nodes, 5248 on tree, 1e+50 best solution, best possible -746.90188 (3079.67 seconds)
Cbc0010I After 10600 nodes, 5298 on tree, 1e+50 best solution, best possible -746.90188 (3094.78 seconds)
Cbc0010I After 10700 nodes, 5348 on tree, 1e+50 best solution, best possible -746.90188 (3107.92 seconds)
Cbc0010I After 10800 nodes, 5398 on tree, 1e+50 best solution, best possible -746.90188 (3121.11 seconds)
Cbc0010I After 10900 nodes, 5448 on tree, 1e+50 best solution, best possible -746.90188 (3138.52 seconds)
Cbc0010I After 11000 nodes, 5498 on tree, 1e+50 best solution, best possible -746.90188 (3156.99 seconds)
Optimality Based BT: 319 improved bounds
Cbc0010I After 11100 nodes, 5545 on tree, 1e+50 best solution, best possible -745.88522 (3370.08 seconds)
Cbc0010I After 11200 nodes, 5595 on tree, 1e+50 best solution, best possible -745.88522 (3378.37 seconds)
Cbc0010I After 11300 nodes, 5645 on tree, 1e+50 best solution, best possible -745.88522 (3385.48 seconds)
Cbc0010I After 11400 nodes, 5695 on tree, 1e+50 best solution, best possible -745.88522 (3392.62 seconds)
Cbc0010I After 11500 nodes, 5745 on tree, 1e+50 best solution, best possible -745.88522 (3399.96 seconds)
Cbc0010I After 11600 nodes, 5795 on tree, 1e+50 best solution, best possible -745.88522 (3407.44 seconds)
Cbc0010I After 11700 nodes, 5845 on tree, 1e+50 best solution, best possible -745.88522 (3414.96 seconds)
Cbc0010I After 11800 nodes, 5895 on tree, 1e+50 best solution, best possible -745.88522 (3422.46 seconds)
Cbc0010I After 11900 nodes, 5945 on tree, 1e+50 best solution, best possible -745.88522 (3435.52 seconds)
Cbc0010I After 12000 nodes, 5995 on tree, 1e+50 best solution, best possible -745.88522 (3449.96 seconds)
Cbc0010I After 12100 nodes, 6045 on tree, 1e+50 best solution, best possible -745.88522 (3464.84 seconds)
Cbc0010I After 12200 nodes, 6095 on tree, 1e+50 best solution, best possible -745.88522 (3479.33 seconds)
Cbc0010I After 12300 nodes, 6145 on tree, 1e+50 best solution, best possible -745.88522 (3493.83 seconds)
Cbc0010I After 12400 nodes, 6195 on tree, 1e+50 best solution, best possible -745.88522 (3508.77 seconds)
Cbc0010I After 12500 nodes, 6245 on tree, 1e+50 best solution, best possible -745.88522 (3524.00 seconds)
Cbc0010I After 12600 nodes, 6295 on tree, 1e+50 best solution, best possible -745.88522 (3540.17 seconds)
Cbc0010I After 12700 nodes, 6345 on tree, 1e+50 best solution, best possible -745.88522 (3556.05 seconds)
Cbc0010I After 12800 nodes, 6395 on tree, 1e+50 best solution, best possible -745.88522 (3572.11 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -745.88522), took 179545 iterations and 12842 nodes (3610.24 seconds)
Cbc0035I Maximum depth 3997, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5641
Linearization cuts added in total:           5641  (separation time: 0.037276s)
Total solve time:                         3610.49s (3610.49s in branch-and-bound)
Lower bound:                             -745.885
Upper bound:                               1320.5  (gap: 276.67%)
Branch-and-bound nodes:                     12842
Stats: /tmp/jl_rkAuHX/model.nl 1200 [var]  400 [int]  840 [con] 2802 [aux]   5641 [root]     5641 [tot] 0.037276 [sep]  3610.49 [time]  3610.49 [bb]        -7.458852e+02 [lower]         1.320498e+03 [upper]   12842 [nodes]
Performance of                           FBBT:	    290.931s,    22498 runs. fix:          0 shrnk:    6.93039 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    215.425s,        8 runs. fix:          0 shrnk:   0.915011 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
