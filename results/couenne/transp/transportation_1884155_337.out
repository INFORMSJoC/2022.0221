solving instance transportation 20 4 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 34.178757       42 0.45298
NLP0014I             2         OPT 141.06546       56 0.531662
Couenne: new cutoff value 1.4106546675e+02 (31.5226 seconds)
Loaded instance "/tmp/jl_0e9iXP/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 23710.314 (3690)
Clp0006I 195  Obj 1.3195257e-13 Primal inf 38509.069 (3947)
Clp0006I 390  Obj 2.6040869e-13 Primal inf 36375.343 (4151)
Clp0006I 585  Obj 3.078101e-11 Primal inf 45884.656 (3814)
Clp0006I 780  Obj 2.2813848e-09 Primal inf 125720.1 (3541)
Clp0006I 975  Obj 7.0061173e-08 Primal inf 67269.451 (2918)
Clp0006I 1170  Obj 1.8314665e-07 Primal inf 40160.554 (2030)
Clp0006I 1365  Obj 3.6201153e-06 Primal inf 14488.44 (1586)
Clp0006I 1560  Obj 8.1191877e-06 Primal inf 6818.0725 (1212)
Clp0006I 1755  Obj 0.00032988264 Primal inf 25872.65 (1024)
Clp0006I 1950  Obj 0.00033087634 Primal inf 27598.493 (835)
Clp0006I 2054  Obj 0.0031265322 Primal inf 357809.17 (871)
Clp0006I 2247  Obj 0.012408226 Primal inf 120509.89 (1023)
Clp0006I 2442  Obj 0.012728587 Primal inf 2372400.2 (1311)
Clp0006I 2591  Obj 0.01290577 Primal inf 4302.5775 (1472)
Clp0006I 2786  Obj 0.016537541 Primal inf 13232375 (1461)
Clp0006I 2802  Obj 0.016591267 Primal inf 10853072 (1454)
Clp0006I 2858  Obj 0.017652769 Primal inf 56534888 (1479)
Clp0006I 3053  Obj 0.020548285 Primal inf 20778397 (1408)
Clp0006I 3193  Obj 0.022527078 Primal inf 17038111 (1333)
Clp0006I 3388  Obj 0.026878564 Primal inf 14558749 (1193)
Clp0006I 3546  Obj 0.028499628 Primal inf 10202466 (1066)
Clp0006I 3725  Obj 0.030912351 Primal inf 28391374 (996)
Clp0006I 3882  Obj 0.034026556 Primal inf 1.510547e+08 (861)
Clp0006I 4077  Obj 0.064047787 Primal inf 19696623 (677)
Clp0006I 4272  Obj 0.34451046 Primal inf 17387998 (530)
Clp0006I 4396  Obj 0.59455975 Primal inf 4783167.6 (395)
Clp0006I 4576  Obj 0.89605177 Primal inf 2342081.7 (303)
Clp0006I 4749  Obj 1.1613836 Primal inf 345779.32 (148)
Clp0006I 4816  Obj 1.2386087 Primal inf 169.13306 (36)
Clp0006I 4832  Obj 1.2431336
Clp0006I 4832  Obj 1.2136743 Dual inf 0.0094818755 (3)
Clp0006I 4835  Obj 1.2134667
Clp0000I Optimal - objective value 1.2134667
Clp0006I 0  Obj 1.2134667 Dual inf 1.0590658e-05 (1)
Clp0006I 1  Obj 1.2134538
Clp0000I Optimal - objective value 1.2134538
Clp0032I Optimal objective 1.213453788 - 4836 iterations time 1.002, Presolve 0.02
Clp0000I Optimal - objective value 1.2134538
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1.2134538
Optimality Based BT: 114 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 158 added rows had average density of 2
Cbc0013I At root node, 158 cuts changed objective from 1.2134538 to 1.2648626 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 559 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (135.89 seconds)
Optimality Based BT: 137 improved bounds
Optimality Based BT: 94 improved bounds
Optimality Based BT: 117 improved bounds
Optimality Based BT: 66 improved bounds
Optimality Based BT: 67 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.2864257 (952.83 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.2864257 (970.83 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.2864257 (988.30 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.2864257 (1004.95 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1.2864257 (1021.25 seconds)
Cbc0010I After 600 nodes, 299 on tree, 1e+50 best solution, best possible 1.2864257 (1037.70 seconds)
Cbc0010I After 700 nodes, 342 on tree, 1e+50 best solution, best possible 1.2864257 (1054.30 seconds)
Cbc0010I After 800 nodes, 382 on tree, 1e+50 best solution, best possible 1.2876091 (1083.74 seconds)
Cbc0010I After 900 nodes, 432 on tree, 1e+50 best solution, best possible 1.2876091 (1100.99 seconds)
Cbc0010I After 1000 nodes, 482 on tree, 1e+50 best solution, best possible 1.2876091 (1118.89 seconds)
Cbc0010I After 1100 nodes, 532 on tree, 1e+50 best solution, best possible 1.2876091 (1136.34 seconds)
Cbc0010I After 1200 nodes, 582 on tree, 1e+50 best solution, best possible 1.2876091 (1153.38 seconds)
Cbc0010I After 1300 nodes, 632 on tree, 1e+50 best solution, best possible 1.2876091 (1169.37 seconds)
Cbc0010I After 1400 nodes, 682 on tree, 1e+50 best solution, best possible 1.2876091 (1185.46 seconds)
Cbc0010I After 1500 nodes, 722 on tree, 1e+50 best solution, best possible 1.2876091 (1202.87 seconds)
Optimality Based BT: 125 improved bounds
Optimality Based BT: 79 improved bounds
Cbc0010I After 1600 nodes, 760 on tree, 1e+50 best solution, best possible 1.2890744 (1955.65 seconds)
Cbc0010I After 1700 nodes, 810 on tree, 1e+50 best solution, best possible 1.2890744 (1973.61 seconds)
Cbc0010I After 1800 nodes, 860 on tree, 1e+50 best solution, best possible 1.2890744 (1991.04 seconds)
Cbc0010I After 1900 nodes, 910 on tree, 1e+50 best solution, best possible 1.2890744 (2008.26 seconds)
Cbc0010I After 2000 nodes, 960 on tree, 1e+50 best solution, best possible 1.2890744 (2025.12 seconds)
Cbc0010I After 2100 nodes, 1010 on tree, 1e+50 best solution, best possible 1.2890744 (2041.29 seconds)
Cbc0010I After 2200 nodes, 1057 on tree, 1e+50 best solution, best possible 1.2890744 (2057.58 seconds)
Cbc0010I After 2300 nodes, 1099 on tree, 1e+50 best solution, best possible 1.2890744 (2074.31 seconds)
Optimality Based BT: 113 improved bounds
Optimality Based BT: 82 improved bounds
Cbc0010I After 2400 nodes, 1139 on tree, 1e+50 best solution, best possible 1.2972896 (2546.33 seconds)
Cbc0010I After 2500 nodes, 1189 on tree, 1e+50 best solution, best possible 1.2972896 (2564.07 seconds)
Cbc0010I After 2600 nodes, 1239 on tree, 1e+50 best solution, best possible 1.2972896 (2582.01 seconds)
Cbc0010I After 2700 nodes, 1289 on tree, 1e+50 best solution, best possible 1.2972896 (2599.01 seconds)
Cbc0010I After 2800 nodes, 1338 on tree, 1e+50 best solution, best possible 1.2972896 (2615.19 seconds)
Cbc0010I After 2900 nodes, 1388 on tree, 1e+50 best solution, best possible 1.2972896 (2631.19 seconds)
Cbc0010I After 3000 nodes, 1430 on tree, 1e+50 best solution, best possible 1.2972896 (2650.12 seconds)
Cbc0010I After 3100 nodes, 1471 on tree, 1e+50 best solution, best possible 1.3069933 (2678.74 seconds)
Cbc0010I After 3200 nodes, 1521 on tree, 1e+50 best solution, best possible 1.3069933 (2696.87 seconds)
Cbc0010I After 3300 nodes, 1571 on tree, 1e+50 best solution, best possible 1.3069933 (2714.50 seconds)
Cbc0010I After 3400 nodes, 1621 on tree, 1e+50 best solution, best possible 1.3069933 (2731.33 seconds)
Cbc0010I After 3500 nodes, 1670 on tree, 1e+50 best solution, best possible 1.3069933 (2747.32 seconds)
Cbc0010I After 3600 nodes, 1720 on tree, 1e+50 best solution, best possible 1.3069933 (2763.42 seconds)
Cbc0010I After 3700 nodes, 1760 on tree, 1e+50 best solution, best possible 1.3083262 (2877.11 seconds)
Cbc0010I After 3800 nodes, 1810 on tree, 1e+50 best solution, best possible 1.3083262 (2904.86 seconds)
Cbc0010I After 3900 nodes, 1860 on tree, 1e+50 best solution, best possible 1.3083262 (2922.29 seconds)
Cbc0010I After 4000 nodes, 1910 on tree, 1e+50 best solution, best possible 1.3083262 (2939.57 seconds)
Cbc0010I After 4100 nodes, 1959 on tree, 1e+50 best solution, best possible 1.3083262 (2955.94 seconds)
Cbc0010I After 4200 nodes, 2008 on tree, 1e+50 best solution, best possible 1.3083262 (2972.20 seconds)
Cbc0010I After 4300 nodes, 2053 on tree, 1e+50 best solution, best possible 1.3083262 (2987.93 seconds)
Cbc0010I After 4400 nodes, 2099 on tree, 1e+50 best solution, best possible 1.3083262 (3004.14 seconds)
Cbc0010I After 4500 nodes, 2144 on tree, 1e+50 best solution, best possible 1.3091367 (3288.88 seconds)
Cbc0010I After 4600 nodes, 2194 on tree, 1e+50 best solution, best possible 1.3091367 (3305.88 seconds)
Cbc0010I After 4700 nodes, 2244 on tree, 1e+50 best solution, best possible 1.3091367 (3323.97 seconds)
Cbc0010I After 4800 nodes, 2294 on tree, 1e+50 best solution, best possible 1.3091367 (3341.41 seconds)
Cbc0010I After 4900 nodes, 2344 on tree, 1e+50 best solution, best possible 1.3091367 (3357.73 seconds)
Cbc0010I After 5000 nodes, 2394 on tree, 1e+50 best solution, best possible 1.3091367 (3374.01 seconds)
Cbc0010I After 5100 nodes, 2444 on tree, 1e+50 best solution, best possible 1.3091367 (3390.31 seconds)
Cbc0010I After 5200 nodes, 2485 on tree, 1e+50 best solution, best possible 1.3091367 (3407.94 seconds)
Cbc0010I After 5300 nodes, 2529 on tree, 1e+50 best solution, best possible 1.3109082 (3426.60 seconds)
Cbc0010I After 5400 nodes, 2579 on tree, 1e+50 best solution, best possible 1.3109082 (3443.94 seconds)
Cbc0010I After 5500 nodes, 2629 on tree, 1e+50 best solution, best possible 1.3109082 (3460.78 seconds)
Cbc0010I After 5600 nodes, 2678 on tree, 1e+50 best solution, best possible 1.3109082 (3477.33 seconds)
Cbc0010I After 5700 nodes, 2728 on tree, 1e+50 best solution, best possible 1.3109082 (3494.17 seconds)
Cbc0010I After 5800 nodes, 2778 on tree, 1e+50 best solution, best possible 1.3109082 (3510.33 seconds)
Cbc0010I After 5900 nodes, 2827 on tree, 1e+50 best solution, best possible 1.3109082 (3527.32 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1.3109082), took 579204 iterations and 5965 nodes (3574.69 seconds)
Cbc0035I Maximum depth 393, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.049029s)
Total solve time:                         3575.69s (3575.69s in branch-and-bound)
Lower bound:                              1.31091
Upper bound:                              141.065  (gap: 6047.60%)
Branch-and-bound nodes:                      5965
Stats: /tmp/jl_0e9iXP/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.049029 [sep]  3575.69 [time]   3575.7 [bb]         1.310908e+00 [lower]         1.410655e+02 [upper]    5965 [nodes]
Performance of                           FBBT:	    153.068s,    11909 runs. fix:          0 shrnk:    80.4679 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	    466.702s,       11 runs. fix:          0 shrnk:   0.480914 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.01764482042445684
f0 = 0.02823171267913096
f0 = 0.019409302466902534
f0 = 0.05116997923092481
f0 = 0.06705031761293599
f0 = 0.03881860493380507
f0 = 0.02911395370035379
f0 = 0.02646723063668526
f0 = 0.032642917785245154
f0 = 0.012351374297119789
f0 = 0.06881479965538168
f0 = 0.00882241021222842
f0 = 0.037936363912582205
f0 = 0.03087843574279947
f0 = 0.00882241021222842
f0 = 0.057345666379484725
f0 = 0.017644820424456847
f0 = 0.07675496884638726
f0 = 0.0608746304643761
f0 = 0.05646342535826189
f0 = 0.06175687148559894
f0 = 0.03970084595502791
f0 = 0.06528583557049034
f0 = 0.009704651233451258
f0 = 0.008822410212228423
f0 = 0.05028773820970202
f0 = 0.0582279074007076
f0 = 0.03793636391258222
f0 = 0.046758774124810644
f0 = 0.06793255863415884
f0 = 0.012351374297119792
f0 = 0.05646342535826192
f0 = 0.046758774124810644
f0 = 0.03176067676402231
f0 = 0.06705031761293602
f0 = 0.011469133275896956
f0 = 0.05028773820970202
f0 = 0.08028393293127865
f0 = 0.052052220252147674
f0 = 0.02646723063668526
f0 = 0.057345666379484725
f0 = 0.052934461273370544
f0 = 0.09087082518595276
f0 = 0.057345666379484704
f0 = 0.07675496884638729
f0 = 0.04058308697625075
f0 = 0.09792875335573552
f0 = 0.0749904868039416
f0 = 0.04499429208236496
f0 = 0.08998858416472989
f0 = 0.0688147996553817
f0 = 0.06705031761293602
f0 = 0.08910634314350709
f0 = 0.07587272782516441
f0 = 0.0855773790586157
f0 = 0.05469894331581623
f0 = 0.06263911250682182
f0 = 0.01852706144567969
f0 = 0.01852706144567969
f0 = 0.0441120510611421
f0 = 0.052052220252147695
f0 = 0.036171881870136535
f0 = 0.07940169191005582
f0 = 0.030878435742799484
f0 = 0.04058308697625075
f0 = 0.03705412289135938
f0 = 0.07940169191005582
f0 = 0.053816702294593385
f0 = 0.03440739982769085
f0 = 0.07763720986761014
f0 = 0.030878435742799484
f0 = 0.05646342535826192
f0 = 0.06616807659171318
f0 = 0.052052220252147695
f0 = 0.07410824578271875
f0 = 0.02205602553057106
f0 = 0.04940549718847917
f0 = 0.05028773820970202
f0 = 0.019409302466902534
f0 = 0.01146913327589695
f0 = 0.02646723063668526
f0 = 0.03970084595502791
f0 = 0.01852706144567969
f0 = 0.0635213535280446
f0 = 0.08381289701617003
f0 = 0.04852325616725633
f0 = 0.036171881870136535
f0 = 0.03793636391258222
f0 = 0.04058308697625075
f0 = 0.012351374297119789
f0 = 0.08645962007983857
f0 = 0.025584989615462427
f0 = 0.04058308697625075
f0 = 0.04146532799747357
f0 = 0.010586892254674109
f0 = 0.07234376374027307
f0 = 0.030878435742799484
f0 = 0.08645962007983857
f0 = 0.07146152271905021
f0 = 0.06969704067660452
f0 = 0.039700845955027896
f0 = 0.04411205106114212
f0 = 0.07234376374027307
f0 = 0.06263911250682176
f0 = 0.08204841497372438
f0 = 0.02205602553057106
f0 = 0.08734186110106143
f0 = 0.06263911250682185
f0 = 0.033525158806468024
f0 = 0.06793255863415884
f0 = 0.07146152271905026
f0 = 0.04764101514603351
f0 = 0.08293065599494721
f0 = 0.06263911250682179
f0 = 0.06616807659171318
f0 = 0.059992389443153306
f0 = 0.04411205106114212
f0 = 0.02293826655179391
f0 = 0.025584989615462416
f0 = 0.050287738209702
f0 = 0.050287738209702
f0 = 0.02823171267913096
f0 = 0.04411205106114212
f0 = 0.022938266551793884
f0 = 0.0291139537003538
f0 = 0.04499429208236496
f0 = 0.03881860493380507
f0 = 0.017644820424456854
f0 = 0.04058308697625074
f0 = 0.050287738209702
f0 = 0.033525158806467996
f0 = 0.036171881870136535
f0 = 0.026467230636685272
f0 = 0.011469133275896945
f0 = 0.04499429208236496
f0 = 0.029113953700353815
f0 = 0.03352515880646801
f0 = 0.08734186110106136
f0 = 0.054698943315816206
f0 = 0.033525158806467996
f0 = 0.049405497188479156
f0 = 0.030878435742799484
f0 = 0.07234376374027307
f0 = 0.019409302466902516
f0 = 0.03264291778524517
f0 = 0.03528964084891369
f0 = 0.06705031761293602
f0 = 0.04411205106114212
f0 = 0.03352515880646801
f0 = 0.07234376374027304
f0 = 0.0291139537003538
f0 = 0.05028773820970202
f0 = 0.05646342535826192
f0 = 0.04058308697625074
f0 = 0.07057928169782739
f0 = 0.015880338382011167
f0 = 0.042347569018696435
f0 = 0.057345666379484746
f0 = 0.025584989615462416
f0 = 0.00441120510611421
f0 = 0.027349471657908093
f0 = 0.04146532799747359
f0 = 0.06793255863415881
f0 = 0.0696970406766045
f0 = 0.08910634314350702
f0 = 0.028231712679130935
f0 = 0.07675496884638723
f0 = 0.06440359454926745
f0 = 0.034407399827690824
f0 = 0.057345666379484725
f0 = 0.08204841497372427
f0 = 0.040583086976250723
f0 = 0.07763720986761007
f0 = 0.06440359454926745
f0 = 0.06087463046437608
f0 = 0.0696970406766045
f0 = 0.04322981003991925
f0 = 0.03705412289135935
f0 = 0.04146532799747356
f0 = 0.05999238944315323
f0 = 0.052052220252147674
f0 = 0.03352515880646801
f0 = 0.0582279074007076
f0 = 0.006175687148559892
f0 = 0.020291543488125376
f0 = 0.046758774124810644
f0 = 0.04940549718847917
f0 = 0.02823171267913097
f0 = 0.042347569018696435
f0 = 0.06175687148559894
f0 = 0.021173784509348217
f0 = 0.046758774124810644
f0 = 0.03970084595502791
f0 = 0.027349471657908103
f0 = 0.0582279074007076
f0 = 0.01940930246690254
f0 = 0.03793636391258222
f0 = 0.0811661739525015
f0 = 0.049405497188479156
f0 = 0.02911395370035379
f0 = 0.04234756901869642
f0 = 0.03528964084891369
f0 = 0.07234376374027307
f0 = 0.049405497188479135
f0 = 0.0688147996553817
f0 = 0.023820507573016746
f0 = 0.08204841497372434
f0 = 0.05911014842193046
f0 = 0.030878435742799484
f0 = 0.06881479965538168
f0 = 0.05822790740070756
f0 = 0.046758774124810644
f0 = 0.0749904868039416
f0 = 0.05911014842193041
f0 = 0.06969704067660455
f0 = 0.051169979230924874
f0 = 0.04058308697625075
f0 = 0.02646723063668526
f0 = 0.009704651233451262
f0 = 0.04058308697625074
f0 = 0.037936363912582205
f0 = 0.03352515880646801
f0 = 0.016762579403234005
f0 = 0.049405497188479135
f0 = 0.06175687148559897
f0 = 0.04940549718847917
f0 = 0.01411585633956548
f0 = 0.015880338382011167
f0 = 0.03970084595502791
f0 = 0.023820507573016736
f0 = 0.06528583557049034
f0 = 0.0291139537003538
f0 = 0.01146913327589695
f0 = 0.02117378450934821
f0 = 0.019409302466902534
f0 = 0.05646342535826194
f0 = 0.0291139537003538
f0 = 0.0917530662071756
f0 = 0.06705031761293599
f0 = 0.06263911250682179
f0 = 0.07940169191005579
f0 = 0.06087463046437613
f0 = 0.09704651233451266
f0 = 0.034407399827690824
f0 = 0.027349471657908103
f0 = 0.06616807659171318
f0 = 0.08734186110106136
f0 = 0.06705031761293599
f0 = 0.06440359454926747
f0 = 0.09528203029206694
f0 = 0.019409302466902523
f0 = 0.07675496884638726
f0 = 0.07499048680394158
f0 = 0.06440359454926747
f0 = 0.09704651233451266
f0 = 0.029113953700353815
f0 = 0.07410824578271875
f0 = 0.08028393293127861
f0 = 0.050287738209702
f0 = 0.028231712679130945
f0 = 0.027349471657908114
f0 = 0.02999619472157664
f0 = 0.013233615318342636
f0 = 0.05028773820970202
f0 = 0.06616807659171318
f0 = 0.0458765331035878
f0 = 0.019409302466902534
f0 = 0.02205602553057106
f0 = 0.03970084595502791
f0 = 0.014115856339565473
f0 = 0.06616807659171318
f0 = 0.019409302466902534
f0 = 0.026467230636685272
f0 = 0.026467230636685272
f0 = 0.012351374297119792
f0 = 0.06087463046437613
f0 = 0.025584989615462427
f0 = 0.08822410212228424
f0 = 0.06528583557049034
f0 = 0.06175687148559897
f0 = 0.04764101514603351
f0 = 0.03705412289135938
f0 = 0.034407399827690865
f0 = 0.03793636391258223
f0 = 0.04764101514603351
f0 = 0.057345666379484746
f0 = 0.020291543488125386
f0 = 0.018527061445679695
f0 = 0.04499429208236498
f0 = 0.03617188187013652
f0 = 0.052052220252147716
f0 = 0.03793636391258223
f0 = 0.005293446127337057
f0 = 0.018527061445679695
f0 = 0.04058308697625077
f0 = 0.04499429208236498
f0 = 0.036171881870136556
f0 = 0.09616427131328986
f0 = 0.07057928169782741
f0 = 0.055581184337039055
f0 = 0.023820507573016736
f0 = 0.030878435742799484
f0 = 0.06087463046437613
f0 = 0.05205222025214765
f0 = 0.06705031761293605
f0 = 0.010586892254674109
f0 = 0.06881479965538173
f0 = 0.051169979230924874
f0 = 0.016762579403234012
f0 = 0.05822790740070758
f0 = 0.06263911250682185
f0 = 0.03705412289135939
f0 = 0.06528583557049036
f0 = 0.04675877412481063
f0 = 0.05469894331581623
f0 = 0.05381670229459341
f0 = 0.02823171267913096
f0 = 0.03793636391258223
f0 = 0.023820507573016736
f0 = 0.0441120510611421
f0 = 0.02205602553057105
f0 = 0.03881860493380507
f0 = 0.05116997923092485
f0 = 0.06881479965538165
f0 = 0.0917530662071756
f0 = 0.02823171267913096
f0 = 0.07057928169782739
f0 = 0.05646342535826192
f0 = 0.03176067676402232
f0 = 0.049405497188479156
f0 = 0.0855773790586157
f0 = 0.036171881870136535
f0 = 0.07057928169782739
f0 = 0.055581184337039055
f0 = 0.04499429208236496
f0 = 0.0749904868039416
f0 = 0.03970084595502791
f0 = 0.05116997923092485
f0 = 0.04940549718847917
f0 = 0.06352135352804462
f0 = 0.0582279074007076
f0 = 0.03881860493380507
f0 = 0.0458765331035878
f0 = 0.03176067676402232
f0 = 0.0291139537003538
f0 = 0.059110148421930436
f0 = 0.03440739982769085
f0 = 0.021173784509348217
f0 = 0.04852325616725633
f0 = 0.052934461273370544
f0 = 0.04058308697625075
f0 = 0.0458765331035878
f0 = 0.0229382665517939
f0 = 0.02205602553057106
f0 = 0.05028773820970202
f0 = 0.03528964084891369
f0 = 0.0458765331035878
f0 = 0.09704651233451266
f0 = 0.0644035945492675
f0 = 0.04411205106114212
f0 = 0.014998097360788314
f0 = 0.009704651233451267
f0 = 0.03705412289135938
f0 = 0.03793636391258219
f0 = 0.052934461273370544
f0 = 0.02205602553057106
f0 = 0.042347569018696435
f0 = 0.023820507573016753
f0 = 0.012351374297119784
f0 = 0.032642917785245154
f0 = 0.0529344612733705
f0 = 0.008822410212228423
f0 = 0.03705412289135938
f0 = 0.019409302466902523
f0 = 0.03440739982769085
f0 = 0.03970084595502792
f0 = 0.005293446127337054
f0 = 0.06087463046437608
f0 = 0.04234756901869642
f0 = 0.04058308697625074
f0 = 0.044994292082364946
f0 = 0.05028773820970202
f0 = 0.07940169191005579
f0 = 0.06528583557049031
f0 = 0.08381289701617
f0 = 0.03087843574279947
f0 = 0.08998858416472989
f0 = 0.07322600476149589
f0 = 0.039700845955027896
f0 = 0.07322600476149589
f0 = 0.07499048680394158
f0 = 0.057345666379484725
f0 = 0.08734186110106136
f0 = 0.07057928169782736
f0 = 0.07675496884638726
f0 = 0.06705031761293599
f0 = 0.053816702294593365
f0 = 0.01764482042445684
f0 = 0.025584989615462416
f0 = 0.05116997923092483
