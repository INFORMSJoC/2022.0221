solving instance transportation 20 3 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 35.098441       42 0.458063
NLP0014I             2         OPT 130.69263       61 0.591152
Couenne: new cutoff value 1.3069262739e+02 (31.3963 seconds)
Loaded instance "/tmp/jl_Rm4HAs/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 24260.583 (3620)
Clp0006I 195  Obj 2.7182466e-14 Primal inf 29672.878 (4044)
Clp0006I 390  Obj 3.2625938e-13 Primal inf 34446.443 (4096)
Clp0006I 585  Obj 7.1389845e-11 Primal inf 34800.586 (3733)
Clp0006I 780  Obj 3.2867233e-06 Primal inf 26835.004 (3353)
Clp0006I 975  Obj 6.1706835e-06 Primal inf 29546.962 (2301)
Clp0006I 1170  Obj 1.1728748e-05 Primal inf 9626.7772 (1785)
Clp0006I 1365  Obj 1.1728748e-05 Primal inf 7414.5403 (1386)
Clp0006I 1560  Obj 2.4823548e-05 Primal inf 2851.4903 (1113)
Clp0006I 1755  Obj 2.5096062e-05 Primal inf 2880.3494 (915)
Clp0006I 1927  Obj 0.000305404 Primal inf 2421650.7 (873)
Clp0006I 1952  Obj 0.0014569766 Primal inf 734975.29 (855)
Clp0006I 2112  Obj 0.016845442 Primal inf 1375651.7 (960)
Clp0006I 2307  Obj 0.017221931 Primal inf 2168094.3 (1268)
Clp0006I 2487  Obj 0.018380981 Primal inf 17339103 (1497)
Clp0006I 2682  Obj 0.02153916 Primal inf 86431500 (1590)
Clp0006I 2875  Obj 0.026472463 Primal inf 95041462 (1487)
Clp0006I 2892  Obj 0.026747441 Primal inf 48571794 (1464)
Clp0006I 3080  Obj 0.030640147 Primal inf 47759636 (1324)
Clp0006I 3275  Obj 0.038531431 Primal inf 32877025 (1195)
Clp0006I 3436  Obj 0.041373183 Primal inf 21904507 (1073)
Clp0006I 3631  Obj 0.045670416 Primal inf 20492507 (946)
Clp0006I 3786  Obj 0.049486209 Primal inf 52546367 (845)
Clp0006I 3823  Obj 0.050715129 Primal inf 19619426 (834)
Clp0006I 3954  Obj 0.05688547 Primal inf 26366136 (765)
Clp0006I 4010  Obj 0.06097985 Primal inf 17926636 (697)
Clp0006I 4205  Obj 0.43062341 Primal inf 9518407.4 (535)
Clp0006I 4334  Obj 0.78078729 Primal inf 2525490.8 (375)
Clp0006I 4481  Obj 1.051377 Primal inf 182126.19 (319)
Clp0006I 4663  Obj 1.4565717
Clp0006I 4663  Obj 1.4165311 Dual inf 0.65920023 (6)
Clp0006I 4668  Obj 1.416446
Clp0000I Optimal - objective value 1.416446
Clp0032I Optimal objective 1.416446026 - 4668 iterations time 0.972, Presolve 0.02
Clp0000I Optimal - objective value 1.416446
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1.416446
Optimality Based BT: 129 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 197 added rows had average density of 2
Cbc0013I At root node, 197 cuts changed objective from 1.416446 to 1.4749071 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 658 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (123.38 seconds)
Optimality Based BT: 114 improved bounds
Optimality Based BT: 72 improved bounds
Optimality Based BT: 123 improved bounds
Optimality Based BT: 59 improved bounds
Optimality Based BT: 78 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.4981149 (952.42 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.4981149 (969.79 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.4981149 (987.79 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.4981149 (1004.79 seconds)
Cbc0010I After 500 nodes, 248 on tree, 1e+50 best solution, best possible 1.4981149 (1020.85 seconds)
Cbc0010I After 600 nodes, 297 on tree, 1e+50 best solution, best possible 1.4981149 (1037.14 seconds)
Optimality Based BT: 134 improved bounds
Optimality Based BT: 73 improved bounds
Optimality Based BT: 130 improved bounds
Cbc0010I After 700 nodes, 326 on tree, 1e+50 best solution, best possible 1.5045429 (1666.26 seconds)
Cbc0010I After 800 nodes, 376 on tree, 1e+50 best solution, best possible 1.5045429 (1694.01 seconds)
Cbc0010I After 900 nodes, 426 on tree, 1e+50 best solution, best possible 1.5045429 (1711.51 seconds)
Cbc0010I After 1000 nodes, 476 on tree, 1e+50 best solution, best possible 1.5045429 (1728.64 seconds)
Cbc0010I After 1100 nodes, 526 on tree, 1e+50 best solution, best possible 1.5045429 (1745.94 seconds)
Cbc0010I After 1200 nodes, 574 on tree, 1e+50 best solution, best possible 1.5045429 (1762.38 seconds)
Cbc0010I After 1300 nodes, 622 on tree, 1e+50 best solution, best possible 1.5045429 (1778.47 seconds)
Cbc0010I After 1400 nodes, 662 on tree, 1e+50 best solution, best possible 1.5070728 (1808.85 seconds)
Cbc0010I After 1500 nodes, 712 on tree, 1e+50 best solution, best possible 1.5070728 (1826.91 seconds)
Cbc0010I After 1600 nodes, 762 on tree, 1e+50 best solution, best possible 1.5070728 (1843.94 seconds)
Cbc0010I After 1700 nodes, 812 on tree, 1e+50 best solution, best possible 1.5070728 (1861.83 seconds)
Cbc0010I After 1800 nodes, 862 on tree, 1e+50 best solution, best possible 1.5070728 (1879.10 seconds)
Cbc0010I After 1900 nodes, 911 on tree, 1e+50 best solution, best possible 1.5070728 (1895.04 seconds)
Optimality Based BT: 120 improved bounds
Optimality Based BT: 129 improved bounds
Optimality Based BT: 81 improved bounds
Cbc0010I After 2000 nodes, 950 on tree, 1e+50 best solution, best possible 1.5178192 (2351.43 seconds)
Cbc0010I After 2100 nodes, 1000 on tree, 1e+50 best solution, best possible 1.5178192 (2369.29 seconds)
Cbc0010I After 2200 nodes, 1050 on tree, 1e+50 best solution, best possible 1.5178192 (2387.68 seconds)
Cbc0010I After 2300 nodes, 1099 on tree, 1e+50 best solution, best possible 1.5178192 (2404.93 seconds)
Cbc0010I After 2400 nodes, 1149 on tree, 1e+50 best solution, best possible 1.5178192 (2421.88 seconds)
Cbc0010I After 2500 nodes, 1198 on tree, 1e+50 best solution, best possible 1.5178192 (2437.73 seconds)
Cbc0010I After 2600 nodes, 1244 on tree, 1e+50 best solution, best possible 1.5178192 (2453.80 seconds)
Cbc0010I After 2700 nodes, 1277 on tree, 1e+50 best solution, best possible 1.5178192 (2470.15 seconds)
Optimality Based BT: 129 improved bounds
Optimality Based BT: 80 improved bounds
Cbc0010I After 2800 nodes, 1325 on tree, 1e+50 best solution, best possible 1.5185525 (2684.98 seconds)
Cbc0010I After 2900 nodes, 1375 on tree, 1e+50 best solution, best possible 1.5185525 (2702.57 seconds)
Cbc0010I After 3000 nodes, 1425 on tree, 1e+50 best solution, best possible 1.5185525 (2719.60 seconds)
Cbc0010I After 3100 nodes, 1473 on tree, 1e+50 best solution, best possible 1.5185525 (2736.76 seconds)
Cbc0010I After 3200 nodes, 1522 on tree, 1e+50 best solution, best possible 1.5185525 (2753.48 seconds)
Cbc0010I After 3300 nodes, 1572 on tree, 1e+50 best solution, best possible 1.5185525 (2769.54 seconds)
Cbc0010I After 3400 nodes, 1611 on tree, 1e+50 best solution, best possible 1.5188693 (2981.84 seconds)
Cbc0010I After 3500 nodes, 1661 on tree, 1e+50 best solution, best possible 1.5188693 (3035.92 seconds)
Cbc0010I After 3600 nodes, 1711 on tree, 1e+50 best solution, best possible 1.5188693 (3052.98 seconds)
Cbc0010I After 3700 nodes, 1761 on tree, 1e+50 best solution, best possible 1.5188693 (3070.66 seconds)
Cbc0010I After 3800 nodes, 1809 on tree, 1e+50 best solution, best possible 1.5188693 (3088.20 seconds)
Cbc0010I After 3900 nodes, 1858 on tree, 1e+50 best solution, best possible 1.5188693 (3104.91 seconds)
Cbc0010I After 4000 nodes, 1907 on tree, 1e+50 best solution, best possible 1.5188693 (3121.93 seconds)
Optimality Based BT: 118 improved bounds
Optimality Based BT: 124 improved bounds
Cbc0010I After 4100 nodes, 1947 on tree, 1e+50 best solution, best possible 1.5188951 (3228.23 seconds)
Cbc0010I After 4200 nodes, 1997 on tree, 1e+50 best solution, best possible 1.5188951 (3245.59 seconds)
Cbc0010I After 4300 nodes, 2047 on tree, 1e+50 best solution, best possible 1.5188951 (3263.34 seconds)
Cbc0010I After 4400 nodes, 2097 on tree, 1e+50 best solution, best possible 1.5188951 (3281.56 seconds)
Cbc0010I After 4500 nodes, 2147 on tree, 1e+50 best solution, best possible 1.5188951 (3298.32 seconds)
Cbc0010I After 4600 nodes, 2197 on tree, 1e+50 best solution, best possible 1.5188951 (3314.73 seconds)
Cbc0010I After 4700 nodes, 2241 on tree, 1e+50 best solution, best possible 1.5225112 (3442.06 seconds)
Cbc0010I After 4800 nodes, 2291 on tree, 1e+50 best solution, best possible 1.5225112 (3459.31 seconds)
Cbc0010I After 4900 nodes, 2341 on tree, 1e+50 best solution, best possible 1.5225112 (3477.69 seconds)
Cbc0010I After 5000 nodes, 2391 on tree, 1e+50 best solution, best possible 1.5225112 (3495.37 seconds)
Cbc0010I After 5100 nodes, 2441 on tree, 1e+50 best solution, best possible 1.5225112 (3512.88 seconds)
Cbc0010I After 5200 nodes, 2490 on tree, 1e+50 best solution, best possible 1.5225112 (3529.15 seconds)
Cbc0010I After 5300 nodes, 2530 on tree, 1e+50 best solution, best possible 1.5225112 (3544.77 seconds)
Cbc0010I After 5400 nodes, 2578 on tree, 1e+50 best solution, best possible 1.5250866 (3562.42 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1.5250866), took 559437 iterations and 5428 nodes (3573.05 seconds)
Cbc0035I Maximum depth 366, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.050563s)
Total solve time:                         3574.02s (3574.02s in branch-and-bound)
Lower bound:                              1.52509
Upper bound:                              130.693  (gap: 5115.37%)
Branch-and-bound nodes:                      5428
Stats: /tmp/jl_Rm4HAs/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.050563 [sep]  3574.02 [time]  3574.03 [bb]         1.525087e+00 [lower]         1.306926e+02 [upper]    5428 [nodes]
Performance of                           FBBT:	    135.535s,    10859 runs. fix:          0 shrnk:    76.9761 ubd:          0 2ubd:          0 infeas:         12
Performance of                           OBBT:	    699.812s,       16 runs. fix:          0 shrnk:   0.422481 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.07146152271905024
f0 = 0.07675496884638726
f0 = 0.052934461273370544
f0 = 0.044994292082364946
f0 = 0.0458765331035878
f0 = 0.05469894331581623
f0 = 0.0749904868039416
f0 = 0.019409302466902534
f0 = 0.05028773820970202
f0 = 0.053816702294593385
f0 = 0.055581184337039076
f0 = 0.027349471657908103
f0 = 0.05469894331581623
f0 = 0.0229382665517939
f0 = 0.03970084595502791
f0 = 0.06528583557049034
f0 = 0.01852706144567969
f0 = 0.030878435742799484
f0 = 0.06528583557049031
f0 = 0.02029154348812537
f0 = 0.0582279074007076
f0 = 0.05999238944315326
f0 = 0.026467230636685272
f0 = 0.04234756901869642
f0 = 0.03528964084891369
f0 = 0.037936363912582205
f0 = 0.057345666379484746
f0 = 0.03440739982769085
f0 = 0.03264291778524517
f0 = 0.04411205106114212
f0 = 0.03793636391258222
f0 = 0.03440739982769084
f0 = 0.03264291778524517
f0 = 0.02117378450934821
f0 = 0.025584989615462427
f0 = 0.06263911250682182
f0 = 0.008822410212228423
f0 = 0.032642917785245154
f0 = 0.04234756901869642
f0 = 0.016762579403233998
f0 = 0.05646342535826189
f0 = 0.0608746304643761
f0 = 0.016762579403233998
f0 = 0.04058308697625074
f0 = 0.023820507573016746
f0 = 0.03617188187013652
f0 = 0.04058308697625075
f0 = 0.04499429208236496
f0 = 0.023820507573016736
f0 = 0.037936363912582205
f0 = 0.04146532799747357
f0 = 0.04146532799747357
f0 = 0.015880338382011156
f0 = 0.03440739982769084
f0 = 0.023820507573016736
f0 = 0.053816702294593365
f0 = 0.023820507573016736
f0 = 0.04234756901869642
f0 = 0.02911395370035379
f0 = 0.02911395370035379
f0 = 0.10675116356796392
f0 = 0.11028012765285525
f0 = 0.0582279074007076
f0 = 0.023820507573016736
f0 = 0.023820507573016746
f0 = 0.08734186110106139
f0 = 0.03176067676402232
f0 = 0.08381289701617003
f0 = 0.07057928169782739
f0 = 0.013233615318342636
f0 = 0.08734186110106139
f0 = 0.04146532799747359
f0 = 0.03970084595502791
f0 = 0.07322600476149592
f0 = 0.07322600476149592
f0 = 0.01588033838201116
f0 = 0.0644035945492675
f0 = 0.04146532799747359
f0 = 0.052052220252147674
f0 = 0.07499048680394158
f0 = 0.059110148421930436
f0 = 0.06440359454926747
f0 = 0.02823171267913096
f0 = 0.033525158806467996
f0 = 0.020291543488125376
f0 = 0.044994292082364946
f0 = 0.042347569018696435
f0 = 0.0458765331035878
f0 = 0.0291139537003538
f0 = 0.03440739982769084
f0 = 0.04322981003991926
f0 = 0.03440739982769084
f0 = 0.023820507573016736
f0 = 0.032642917785245154
f0 = 0.02911395370035379
f0 = 0.05028773820970202
f0 = 0.02029154348812537
f0 = 0.032642917785245154
f0 = 0.03705412289135936
f0 = 0.03087843574279947
f0 = 0.04764101514603349
f0 = 0.049405497188479156
f0 = 0.03176067676402232
f0 = 0.052052220252147674
f0 = 0.04852325616725633
f0 = 0.02911395370035379
f0 = 0.06616807659171318
f0 = 0.025584989615462427
f0 = 0.027349471657908114
f0 = 0.057345666379484746
f0 = 0.028231712679130945
f0 = 0.04675877412481063
f0 = 0.04146532799747359
f0 = 0.007057928169782736
f0 = 0.021173784509348217
f0 = 0.07234376374027307
f0 = 0.004411205106114212
f0 = 0.04852325616725631
f0 = 0.055581184337039055
f0 = 0.00882241021222842
f0 = 0.07763720986761014
f0 = 0.08204841497372434
f0 = 0.04764101514603349
f0 = 0.02646723063668526
f0 = 0.02823171267913096
f0 = 0.06087463046437613
f0 = 0.06175687148559897
f0 = 0.03881860493380507
f0 = 0.04940549718847917
f0 = 0.03793636391258222
f0 = 0.06087463046437613
f0 = 0.01146913327589695
f0 = 0.0458765331035878
f0 = 0.03440739982769085
f0 = 0.04764101514603349
f0 = 0.05028773820970202
f0 = 0.027349471657908114
f0 = 0.016762579403234005
f0 = 0.05646342535826189
f0 = 0.03087843574279947
f0 = 0.07851945088883297
f0 = 0.08469513803739284
f0 = 0.059110148421930436
f0 = 0.049405497188479156
f0 = 0.053816702294593385
f0 = 0.06352135352804467
f0 = 0.07851945088883297
f0 = 0.02205602553057106
f0 = 0.0582279074007076
f0 = 0.0582279074007076
f0 = 0.06263911250682185
f0 = 0.030878435742799498
f0 = 0.06352135352804464
f0 = 0.033525158806468024
f0 = 0.05469894331581625
f0 = 0.06705031761293602
f0 = 0.03264291778524518
f0 = 0.029996194721576653
f0 = 0.07587272782516441
f0 = 0.02646723063668526
f0 = 0.01588033838201116
f0 = 0.016762579403233998
f0 = 0.030878435742799484
f0 = 0.08557737905861568
f0 = 0.06616807659171318
f0 = 0.005293446127337054
f0 = 0.07587272782516444
f0 = 0.04940549718847917
f0 = 0.01852706144567969
f0 = 0.08469513803739287
f0 = 0.004411205106114212
f0 = 0.0749904868039416
f0 = 0.052934461273370544
f0 = 0.04058308697625075
f0 = 0.021173784509348217
f0 = 0.09792875335573552
f0 = 0.04058308697625075
f0 = 0.08204841497372434
f0 = 0.052052220252147674
f0 = 0.039700845955027896
f0 = 0.08204841497372431
f0 = 0.08645962007983853
f0 = 0.05822790740070758
f0 = 0.04058308697625074
f0 = 0.04499429208236496
f0 = 0.06440359454926747
f0 = 0.07322600476149592
f0 = 0.030878435742799484
f0 = 0.057345666379484725
f0 = 0.049405497188479156
f0 = 0.06175687148559894
f0 = 0.019409302466902523
f0 = 0.05911014842193041
f0 = 0.03528964084891368
f0 = 0.049405497188479156
f0 = 0.05911014842193041
f0 = 0.02999619472157663
f0 = 0.024702748594239578
f0 = 0.07410824578271873
f0 = 0.032642917785245154
f0 = 0.1102801276528553
f0 = 0.1155735737801923
f0 = 0.06793255863415887
f0 = 0.01764482042445684
f0 = 0.03176067676402232
f0 = 0.09263530722839841
f0 = 0.0458765331035878
f0 = 0.07940169191005582
f0 = 0.08028393293127865
f0 = 0.012351374297119792
f0 = 0.09616427131328979
f0 = 0.03617188187013652
f0 = 0.05646342535826192
f0 = 0.07410824578271873
f0 = 0.0749904868039416
f0 = 0.004411205106114212
f0 = 0.06352135352804464
f0 = 0.02911395370035379
f0 = 0.06175687148559894
f0 = 0.07057928169782736
f0 = 0.037936363912582205
f0 = 0.039700845955027896
f0 = 0.009704651233451262
f0 = 0.06616807659171316
f0 = 0.046758774124810644
f0 = 0.02205602553057105
f0 = 0.04852325616725633
f0 = 0.052052220252147695
f0 = 0.009704651233451262
f0 = 0.06175687148559894
f0 = 0.025584989615462416
f0 = 0.06440359454926747
f0 = 0.02911395370035379
f0 = 0.03705412289135936
f0 = 0.016762579403233998
f0 = 0.07940169191005579
f0 = 0.03176067676402231
f0 = 0.06616807659171316
f0 = 0.027349471657908103
f0 = 0.039700845955027896
f0 = 0.05646342535826192
f0 = 0.06352135352804462
f0 = 0.04058308697625075
f0 = 0.05293446127337052
f0 = 0.043229810039919284
f0 = 0.04146532799747359
f0 = 0.0688147996553817
f0 = 0.01588033838201116
f0 = 0.03440739982769085
f0 = 0.0582279074007076
f0 = 0.03970084595502791
f0 = 0.03705412289135936
f0 = 0.04940549718847917
f0 = 0.012351374297119792
f0 = 0.026467230636685272
f0 = 0.0688147996553817
f0 = 0.006175687148559896
f0 = 0.03970084595502791
f0 = 0.057345666379484725
f0 = 0.009704651233451262
f0 = 0.035289640848913666
f0 = 0.03705412289135935
f0 = 0.02911395370035378
f0 = 0.08116617395250147
f0 = 0.06616807659171318
f0 = 0.034407399827690824
f0 = 0.05646342535826187
f0 = 0.07851945088883297
f0 = 0.024702748594239567
f0 = 0.08116617395250145
f0 = 0.03264291778524514
f0 = 0.0864596200798385
f0 = 0.039700845955027875
f0 = 0.06263911250682176
f0 = 0.03793636391258219
f0 = 0.09616427131328975
f0 = 0.053816702294593344
f0 = 0.08381289701616997
f0 = 0.0317606767640223
f0 = 0.06175687148559894
f0 = 0.025584989615462416
f0 = 0.028231712679130945
f0 = 0.024702748594239578
f0 = 0.08204841497372431
f0 = 0.05999238944315328
f0 = 0.016762579403233998
f0 = 0.0608746304643761
f0 = 0.0608746304643761
f0 = 0.014998097360788314
f0 = 0.08028393293127861
f0 = 0.02029154348812537
f0 = 0.07940169191005579
f0 = 0.037936363912582205
f0 = 0.050287738209702
f0 = 0.024702748594239578
f0 = 0.09087082518595273
f0 = 0.04764101514603347
f0 = 0.07675496884638726
f0 = 0.03617188187013652
f0 = 0.04852325616725631
f0 = 0.08998858416472992
f0 = 0.08998858416472989
f0 = 0.04852325616725633
f0 = 0.052052220252147674
f0 = 0.03705412289135938
f0 = 0.07410824578271878
f0 = 0.00794016919100558
f0 = 0.0917530662071756
f0 = 0.057345666379484746
f0 = 0.04411205106114212
f0 = 0.07587272782516447
f0 = 0.06528583557049036
f0 = 0.03176067676402232
f0 = 0.07675496884638731
f0 = 0.06440359454926753
f0 = 0.04940549718847917
f0 = 0.06881479965538173
f0 = 0.06440359454926753
f0 = 0.027349471657908103
f0 = 0.07587272782516441
f0 = 0.06616807659171318
f0 = 0.06793255863415884
f0 = 0.02823171267913096
f0 = 0.055581184337039055
f0 = 0.04058308697625075
f0 = 0.054698943315816206
f0 = 0.020291543488125376
f0 = 0.08204841497372434
f0 = 0.04146532799747359
f0 = 0.05028773820970202
f0 = 0.05469894331581623
f0 = 0.06793255863415884
f0 = 0.016762579403234005
f0 = 0.06175687148559897
f0 = 0.0458765331035878
f0 = 0.06705031761293602
f0 = 0.055581184337039076
f0 = 0.06352135352804464
f0 = 0.00441120510611421
f0 = 0.06263911250682179
f0 = 0.06705031761293602
f0 = 0.06793255863415887
f0 = 0.053816702294593385
f0 = 0.05469894331581623
f0 = 0.05646342535826192
f0 = 0.053816702294593385
f0 = 0.08028393293127865
f0 = 0.01146913327589695
f0 = 0.04764101514603349
f0 = 0.0644035945492675
f0 = 0.052934461273370544
f0 = 0.03970084595502791
f0 = 0.05999238944315328
f0 = 0.020291543488125376
f0 = 0.04146532799747359
f0 = 0.07587272782516444
f0 = 0.024702748594239585
f0 = 0.043229810039919284
f0 = 0.0688147996553817
f0 = 0.01852706144567969
f0 = 0.07146152271905021
f0 = 0.07234376374027304
f0 = 0.03881860493380505
f0 = 0.0776372098676101
f0 = 0.053816702294593385
f0 = 0.06352135352804462
f0 = 0.03440739982769085
f0 = 0.09792875335573552
f0 = 0.052052220252147674
f0 = 0.06793255863415884
f0 = 0.06440359454926747
f0 = 0.0882241021222842
f0 = 0.037936363912582205
f0 = 0.07940169191005579
f0 = 0.057345666379484725
f0 = 0.07940169191005579
f0 = 0.07057928169782736
f0 = 0.08645962007983853
f0 = 0.025584989615462416
f0 = 0.07675496884638726
f0 = 0.052052220252147674
f0 = 0.05646342535826189
f0 = 0.007057928169782736
f0 = 0.04764101514603347
f0 = 0.02823171267913096
f0 = 0.03617188187013652
f0 = 0.03617188187013652
f0 = 0.05469894331581623
f0 = 0.02205602553057105
f0 = 0.04587653310358778
f0 = 0.03705412289135936
f0 = 0.050287738209702
f0 = 0.011469133275896945
f0 = 0.04322981003991926
f0 = 0.02205602553057105
f0 = 0.06352135352804462
f0 = 0.03087843574279947
f0 = 0.054698943315816206
f0 = 0.016762579403233998
f0 = 0.03881860493380505
