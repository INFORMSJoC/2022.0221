solving instance transportation 20 10 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1259.6383      151 2.150124
NLP0014I             2      INFEAS 24.808985      205 3.180015
Loaded instance "/tmp/jl_ZbidxU/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6040 (-1201) rows, 2000 (-1602) columns and 13200 (-3202) elements
Clp0006I 0  Obj 0 Primal inf 13747.442 (3942)
Clp0006I 195  Obj 2.8372163e-14 Primal inf 18808.473 (3870)
Clp0006I 390  Obj 5.7791571e-13 Primal inf 16305.88 (3784)
Clp0006I 585  Obj 2.6454e-10 Primal inf 16401.244 (3385)
Clp0006I 780  Obj 5.0377068e-07 Primal inf 158626.86 (3133)
Clp0006I 970  Obj 0.00069753174 Primal inf 159507.55 (2949)
Clp0006I 1165  Obj 0.0015856682 Primal inf 195982.64 (2762)
Clp0006I 1360  Obj 0.0027659397 Primal inf 349774.08 (2556)
Clp0006I 1555  Obj 67.694684 Primal inf 339582.67 (2063)
Clp0006I 1750  Obj 67.696689 Primal inf 308067.38 (1903)
Clp0006I 1928  Obj 67.699368 Primal inf 186692.95 (1745)
Clp0006I 2123  Obj 67.70544 Primal inf 308936.22 (1446)
Clp0006I 2318  Obj 111.28467 Primal inf 289151.36 (1195)
Clp0006I 2513  Obj 131.77889 Primal inf 252532.15 (983)
Clp0006I 2708  Obj 156.01176 Primal inf 129013.89 (794)
Clp0006I 2903  Obj 184.66708 Primal inf 64578.557 (642)
Clp0006I 3032  Obj 205.44016 Primal inf 320736.57 (554)
Clp0006I 3153  Obj 219.72141 Primal inf 44635.097 (488)
Clp0006I 3348  Obj 247.51599 Primal inf 211999.32 (466)
Clp0006I 3543  Obj 285.50743 Primal inf 93189.437 (391)
Clp0006I 3738  Obj 409.88138 Primal inf 650.11411 (263)
Clp0006I 3893  Obj 445.79589 Primal inf 88.422092 (98)
Clp0006I 3952  Obj 460.69448
Clp0000I Optimal - objective value 460.6886
Clp0032I Optimal objective 460.6886043 - 3952 iterations time 0.642, Presolve 0.02
Clp0000I Optimal - objective value 460.6886
NLP Heuristic: NLP0014I             3      INFEAS 96.788043       51 0.498313
no solution.
Clp0000I Optimal - objective value 460.6886
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 102 added rows had average density of 2
Cbc0013I At root node, 102 cuts changed objective from 460.6886 to 470.29982 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 678 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (85.75 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 476.44712 (643.06 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 476.44712 (657.12 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1e+50 best solution, best possible 476.44712 (670.11 seconds)
Cbc0010I After 400 nodes, 197 on tree, 1e+50 best solution, best possible 476.44712 (682.76 seconds)
Cbc0010I After 500 nodes, 245 on tree, 1e+50 best solution, best possible 476.44712 (695.03 seconds)
Cbc0010I After 600 nodes, 294 on tree, 1e+50 best solution, best possible 476.44712 (707.01 seconds)
Cbc0010I After 700 nodes, 338 on tree, 1e+50 best solution, best possible 476.44712 (719.33 seconds)
Cbc0010I After 800 nodes, 380 on tree, 1e+50 best solution, best possible 476.44712 (731.20 seconds)
Cbc0010I After 900 nodes, 426 on tree, 1e+50 best solution, best possible 476.44712 (743.56 seconds)
Cbc0010I After 1000 nodes, 458 on tree, 1e+50 best solution, best possible 476.44712 (753.79 seconds)
Cbc0010I After 1100 nodes, 482 on tree, 1e+50 best solution, best possible 476.44712 (761.67 seconds)
Cbc0010I After 1200 nodes, 514 on tree, 1e+50 best solution, best possible 476.44712 (769.22 seconds)
Couenne: new cutoff value 3.4539117346e+03 (788.018 seconds)
Cbc0004I Integer solution of 3453.9117 found after 94366 iterations and 1216 nodes (770.46 seconds)
Optimality Based BT: 239 improved bounds
Optimality Based BT: 198 improved bounds
Cbc0010I After 1300 nodes, 494 on tree, 3453.9117 best solution, best possible 480.19059 (1525.66 seconds)
Cbc0010I After 1400 nodes, 544 on tree, 3453.9117 best solution, best possible 480.19059 (1542.81 seconds)
Cbc0010I After 1500 nodes, 594 on tree, 3453.9117 best solution, best possible 480.19059 (1559.85 seconds)
Cbc0010I After 1600 nodes, 644 on tree, 3453.9117 best solution, best possible 480.19059 (1576.64 seconds)
Cbc0010I After 1700 nodes, 690 on tree, 3453.9117 best solution, best possible 480.19059 (1592.07 seconds)
Cbc0010I After 1800 nodes, 735 on tree, 3453.9117 best solution, best possible 480.19059 (1607.30 seconds)
Cbc0010I After 1900 nodes, 775 on tree, 3453.9117 best solution, best possible 480.19059 (1622.45 seconds)
Optimality Based BT: 163 improved bounds
Optimality Based BT: 107 improved bounds
Cbc0010I After 2000 nodes, 802 on tree, 3453.9117 best solution, best possible 480.9592 (1957.06 seconds)
Cbc0010I After 2100 nodes, 852 on tree, 3453.9117 best solution, best possible 480.9592 (1980.87 seconds)
Cbc0010I After 2200 nodes, 900 on tree, 3453.9117 best solution, best possible 480.9592 (1997.37 seconds)
Cbc0010I After 2300 nodes, 950 on tree, 3453.9117 best solution, best possible 480.9592 (2014.20 seconds)
Cbc0010I After 2400 nodes, 997 on tree, 3453.9117 best solution, best possible 480.9592 (2030.07 seconds)
Cbc0010I After 2500 nodes, 1045 on tree, 3453.9117 best solution, best possible 480.9592 (2045.28 seconds)
Cbc0010I After 2600 nodes, 1091 on tree, 3453.9117 best solution, best possible 480.9592 (2060.84 seconds)
Cbc0010I After 2700 nodes, 1128 on tree, 3453.9117 best solution, best possible 480.9592 (2075.26 seconds)
Cbc0010I After 2800 nodes, 1167 on tree, 3453.9117 best solution, best possible 480.9592 (2090.55 seconds)
Cbc0010I After 2900 nodes, 1197 on tree, 3453.9117 best solution, best possible 480.9592 (2106.25 seconds)
Cbc0010I After 3000 nodes, 1227 on tree, 3453.9117 best solution, best possible 480.9592 (2123.46 seconds)
Cbc0010I After 3100 nodes, 1252 on tree, 3453.9117 best solution, best possible 480.9592 (2137.17 seconds)
Cbc0010I After 3200 nodes, 1278 on tree, 3453.9117 best solution, best possible 480.9592 (2148.42 seconds)
Couenne: new cutoff value 3.3994262588e+03 (2175.91 seconds)
Cbc0004I Integer solution of 3399.4263 found after 278416 iterations and 3291 nodes (2158.35 seconds)
Optimality Based BT: 225 improved bounds
Optimality Based BT: 216 improved bounds
Optimality Based BT: 160 improved bounds
Cbc0010I After 3300 nodes, 1173 on tree, 3399.4263 best solution, best possible 481.42159 (2546.26 seconds)
Cbc0010I After 3400 nodes, 1223 on tree, 3399.4263 best solution, best possible 481.42159 (2563.81 seconds)
Cbc0010I After 3500 nodes, 1273 on tree, 3399.4263 best solution, best possible 481.42159 (2580.81 seconds)
Cbc0010I After 3600 nodes, 1322 on tree, 3399.4263 best solution, best possible 481.42159 (2597.57 seconds)
Cbc0010I After 3700 nodes, 1370 on tree, 3399.4263 best solution, best possible 481.42159 (2613.09 seconds)
Cbc0010I After 3800 nodes, 1420 on tree, 3399.4263 best solution, best possible 481.42159 (2628.44 seconds)
Cbc0010I After 3900 nodes, 1465 on tree, 3399.4263 best solution, best possible 481.42159 (2643.51 seconds)
Cbc0010I After 4000 nodes, 1500 on tree, 3399.4263 best solution, best possible 481.42159 (2658.88 seconds)
Cbc0010I After 4100 nodes, 1536 on tree, 3399.4263 best solution, best possible 481.42159 (2675.72 seconds)
Cbc0010I After 4200 nodes, 1571 on tree, 3399.4263 best solution, best possible 481.71933 (2929.87 seconds)
Cbc0010I After 4300 nodes, 1621 on tree, 3399.4263 best solution, best possible 481.71933 (2946.78 seconds)
Cbc0010I After 4400 nodes, 1671 on tree, 3399.4263 best solution, best possible 481.71933 (2963.45 seconds)
Cbc0010I After 4500 nodes, 1720 on tree, 3399.4263 best solution, best possible 481.71933 (2979.51 seconds)
Cbc0010I After 4600 nodes, 1770 on tree, 3399.4263 best solution, best possible 481.71933 (2995.37 seconds)
Cbc0010I After 4700 nodes, 1818 on tree, 3399.4263 best solution, best possible 481.71933 (3010.88 seconds)
Cbc0010I After 4800 nodes, 1864 on tree, 3399.4263 best solution, best possible 481.71933 (3026.80 seconds)
Cbc0010I After 4900 nodes, 1903 on tree, 3399.4263 best solution, best possible 481.71933 (3041.09 seconds)
Cbc0010I After 5000 nodes, 1950 on tree, 3399.4263 best solution, best possible 482.07545 (3158.06 seconds)
Cbc0010I After 5100 nodes, 2000 on tree, 3399.4263 best solution, best possible 482.07545 (3175.30 seconds)
Cbc0010I After 5200 nodes, 2050 on tree, 3399.4263 best solution, best possible 482.07545 (3192.07 seconds)
Cbc0010I After 5300 nodes, 2099 on tree, 3399.4263 best solution, best possible 482.07545 (3208.45 seconds)
Cbc0010I After 5400 nodes, 2146 on tree, 3399.4263 best solution, best possible 482.07545 (3224.34 seconds)
Cbc0010I After 5500 nodes, 2194 on tree, 3399.4263 best solution, best possible 482.07545 (3239.75 seconds)
Cbc0010I After 5600 nodes, 2235 on tree, 3399.4263 best solution, best possible 482.07545 (3255.70 seconds)
Cbc0010I After 5700 nodes, 2278 on tree, 3399.4263 best solution, best possible 483.5327 (3273.57 seconds)
Cbc0010I After 5800 nodes, 2328 on tree, 3399.4263 best solution, best possible 483.5327 (3297.38 seconds)
Cbc0010I After 5900 nodes, 2378 on tree, 3399.4263 best solution, best possible 483.5327 (3314.99 seconds)
Cbc0010I After 6000 nodes, 2428 on tree, 3399.4263 best solution, best possible 483.5327 (3331.82 seconds)
Cbc0010I After 6100 nodes, 2475 on tree, 3399.4263 best solution, best possible 483.5327 (3347.50 seconds)
Cbc0010I After 6200 nodes, 2522 on tree, 3399.4263 best solution, best possible 483.5327 (3362.58 seconds)
Cbc0010I After 6300 nodes, 2570 on tree, 3399.4263 best solution, best possible 483.5327 (3377.75 seconds)
Cbc0010I After 6400 nodes, 2615 on tree, 3399.4263 best solution, best possible 483.5327 (3393.04 seconds)
Cbc0010I After 6500 nodes, 2643 on tree, 3399.4263 best solution, best possible 483.5327 (3407.12 seconds)
Cbc0010I After 6600 nodes, 2664 on tree, 3399.4263 best solution, best possible 483.5327 (3426.80 seconds)
Cbc0010I After 6700 nodes, 2687 on tree, 3399.4263 best solution, best possible 483.5327 (3448.10 seconds)
Cbc0010I After 6800 nodes, 2712 on tree, 3399.4263 best solution, best possible 483.5327 (3463.54 seconds)
Couenne: new cutoff value 3.3930812735e+03 (3483.05 seconds)
Cbc0004I Integer solution of 3393.0813 found after 603308 iterations and 6814 nodes (3465.49 seconds)
Cbc0010I After 6900 nodes, 2678 on tree, 3393.0813 best solution, best possible 484.29771 (3490.07 seconds)
Cbc0010I After 7000 nodes, 2728 on tree, 3393.0813 best solution, best possible 484.29771 (3507.89 seconds)
Cbc0010I After 7100 nodes, 2777 on tree, 3393.0813 best solution, best possible 484.29771 (3524.34 seconds)
Cbc0010I After 7200 nodes, 2825 on tree, 3393.0813 best solution, best possible 484.29771 (3540.29 seconds)
Cbc0010I After 7300 nodes, 2874 on tree, 3393.0813 best solution, best possible 484.29771 (3555.83 seconds)
Cbc0010I After 7400 nodes, 2923 on tree, 3393.0813 best solution, best possible 484.29771 (3571.13 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 3393.0813 (best possible 484.29771), took 677301 iterations and 7475 nodes (3590.19 seconds)
Cbc0035I Maximum depth 655, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.033357s)
Total solve time:                         3590.89s (3590.89s in branch-and-bound)
Lower bound:                              484.298
Upper bound:                              3393.08  (gap: 599.38%)
Branch-and-bound nodes:                      7475
Stats: /tmp/jl_ZbidxU/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.033357 [sep]  3590.89 [time]   3590.9 [bb]         4.842977e+02 [lower]         3.393081e+03 [upper]    7475 [nodes]
Performance of                           FBBT:	     170.71s,    13885 runs. fix:  0.0013871 shrnk:    1.43535 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    426.216s,       14 runs. fix:          0 shrnk:    18.8941 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
