solving instance transportation 10 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 89.802336       35 0.096937
NLP0014I             2         OPT 245.86311       50 0.133112
Couenne: new cutoff value 2.4586311422e+02 (0.420733 seconds)
Loaded instance "/tmp/jl_cfGkDf/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          101 (0 integer)

Coin0506I Presolve 609 (-110) rows, 290 (-111) columns and 1477 (-221) elements
Clp0006I 0  Obj 0 Primal inf 3121.6382 (10)
Clp0006I 76  Obj 7.3221403e-13 Primal inf 18810.044 (70)
Clp0006I 136  Obj 3.7015185e-13 Primal inf 13181.336 (81)
Clp0006I 219  Obj 33.905628 Primal inf 1297.0519 (56)
Clp0006I 281  Obj 38.910669
Clp0000I Optimal - objective value 38.910669
Clp0032I Optimal objective 38.91066916 - 281 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 38.910669
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 38.910669
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 181 added rows had average density of 2
Cbc0013I At root node, 181 cuts changed objective from 38.910669 to 89.774823 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1894 row cuts average 2.0 elements, 10 column cuts (115 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.85 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 89.790462 (7.60 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 89.790462 (8.71 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 89.790462 (9.65 seconds)
Couenne: new cutoff value 8.9802489749e+01 (10.5397 seconds)
Cbc0004I Integer solution of 89.80249 found after 29509 iterations and 350 nodes (10.10 seconds)
Cbc0010I After 400 nodes, 12 on tree, 89.80249 best solution, best possible 89.792921 (10.43 seconds)
Cbc0010I After 500 nodes, 18 on tree, 89.80249 best solution, best possible 89.793307 (11.09 seconds)
Cbc0010I After 600 nodes, 16 on tree, 89.80249 best solution, best possible 89.796233 (11.71 seconds)
Cbc0010I After 700 nodes, 14 on tree, 89.80249 best solution, best possible 89.800093 (12.32 seconds)
Cbc0010I After 800 nodes, 19 on tree, 89.80249 best solution, best possible 89.800093 (12.96 seconds)
Couenne: new cutoff value 8.9802373460e+01 (13.8343 seconds)
Cbc0004I Integer solution of 89.802373 found after 43622 iterations and 872 nodes (13.40 seconds)
Cbc0010I After 900 nodes, 18 on tree, 89.802373 best solution, best possible 89.800341 (13.57 seconds)
Cbc0010I After 1000 nodes, 21 on tree, 89.802373 best solution, best possible 89.801212 (14.26 seconds)
Cbc0010I After 1100 nodes, 20 on tree, 89.802373 best solution, best possible 89.801814 (14.90 seconds)
Cbc0010I After 1200 nodes, 23 on tree, 89.802373 best solution, best possible 89.801857 (15.51 seconds)
Couenne: new cutoff value 8.9802351713e+01 (16.155 seconds)
Cbc0004I Integer solution of 89.802352 found after 51377 iterations and 1235 nodes (15.72 seconds)
Cbc0010I After 1300 nodes, 21 on tree, 89.802352 best solution, best possible 89.80193 (16.13 seconds)
Cbc0010I After 1400 nodes, 16 on tree, 89.802352 best solution, best possible 89.802171 (16.72 seconds)
Cbc0010I After 1500 nodes, 14 on tree, 89.802352 best solution, best possible 89.802223 (17.31 seconds)
Cbc0010I After 1600 nodes, 6 on tree, 89.802352 best solution, best possible 89.802306 (17.91 seconds)
Cbc0001I Search completed - best objective 89.8023517130933, took 57983 iterations and 1649 nodes (18.17 seconds)
Cbc0035I Maximum depth 180, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        719
Linearization cuts added in total:            719  (separation time: 0.00087s)
Total solve time:                         18.1968s (18.1968s in branch-and-bound)
Lower bound:                              89.8024
Upper bound:                              89.8024  (gap: 0.00%)
Branch-and-bound nodes:                      1649
Stats: /tmp/jl_cfGkDf/model.nl  300 [var]  100 [int]  220 [con]  101 [aux]    719 [root]      719 [tot] 0.00087 [sep]  18.1968 [time]  18.1974 [bb]         8.980235e+01 [lower]         8.980235e+01 [upper]    1649 [nodes]
Performance of                           FBBT:	   0.291331s,     1500 runs. fix:          0 shrnk:    39.9326 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.99399s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
