solving instance transportation 10 3 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 89.51668       51 0.164627
NLP0014I             2         OPT 316.76199       49 0.125867
Couenne: new cutoff value 3.1676198885e+02 (0.474058 seconds)
Loaded instance "/tmp/jl_ojj48i/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          101 (0 integer)

Coin0506I Presolve 609 (-110) rows, 290 (-111) columns and 1477 (-221) elements
Clp0006I 0  Obj 0 Primal inf 2048.4678 (10)
Clp0006I 79  Obj 7.9242957e-13 Primal inf 13211.902 (88)
Clp0006I 144  Obj 5.5051632e-12 Primal inf 63691.641 (87)
Clp0006I 214  Obj 24.045131 Primal inf 409.70586 (62)
Clp0006I 283  Obj 32.456867
Clp0000I Optimal - objective value 32.456867
Clp0032I Optimal objective 32.45686748 - 283 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 32.456867
NLP Heuristic: NLP0014I             3         OPT 89.516503       17 0.050723
no solution.
Clp0000I Optimal - objective value 32.456867
Optimality Based BT: 0 improved bounds
Probing: Couenne: new cutoff value 1.0221190085e+02 (0.929661 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 179 added rows had average density of 2
Cbc0013I At root node, 179 cuts changed objective from 32.456867 to 89.501759 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1836 row cuts average 2.0 elements, 44 column cuts (153 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.89 seconds)
Optimality Based BT: 67 improved bounds
Optimality Based BT: 17 improved bounds
Optimality Based BT: 69 improved bounds
Couenne: new cutoff value 8.9664876169e+01 (3.68244 seconds)
Cbc0010I After 100 nodes, 17 on tree, 1e+50 best solution, best possible 89.511021 (4.53 seconds)
Cbc0010I After 200 nodes, 32 on tree, 1e+50 best solution, best possible 89.511021 (5.20 seconds)
Cbc0010I After 300 nodes, 67 on tree, 1e+50 best solution, best possible 89.511021 (6.07 seconds)
Couenne: new cutoff value 8.9516668452e+01 (6.76844 seconds)
Cbc0004I Integer solution of 89.516668 found after 16266 iterations and 326 nodes (6.28 seconds)
Cbc0010I After 400 nodes, 17 on tree, 89.516668 best solution, best possible 89.512456 (6.81 seconds)
Cbc0010I After 500 nodes, 23 on tree, 89.516668 best solution, best possible 89.513144 (7.48 seconds)
Cbc0010I After 600 nodes, 28 on tree, 89.516668 best solution, best possible 89.513553 (8.12 seconds)
Cbc0010I After 700 nodes, 29 on tree, 89.516668 best solution, best possible 89.513622 (8.76 seconds)
Cbc0010I After 800 nodes, 29 on tree, 89.516668 best solution, best possible 89.513696 (9.38 seconds)
Cbc0010I After 900 nodes, 31 on tree, 89.516668 best solution, best possible 89.513968 (10.01 seconds)
Cbc0010I After 1000 nodes, 33 on tree, 89.516668 best solution, best possible 89.514493 (10.64 seconds)
Cbc0010I After 1100 nodes, 34 on tree, 89.516668 best solution, best possible 89.514635 (11.27 seconds)
Cbc0010I After 1200 nodes, 36 on tree, 89.516668 best solution, best possible 89.514805 (11.91 seconds)
Cbc0010I After 1300 nodes, 31 on tree, 89.516668 best solution, best possible 89.515286 (12.51 seconds)
Cbc0010I After 1400 nodes, 31 on tree, 89.516668 best solution, best possible 89.515699 (13.16 seconds)
Cbc0010I After 1500 nodes, 32 on tree, 89.516668 best solution, best possible 89.515947 (13.80 seconds)
Cbc0010I After 1600 nodes, 32 on tree, 89.516668 best solution, best possible 89.516004 (14.45 seconds)
Cbc0010I After 1700 nodes, 27 on tree, 89.516668 best solution, best possible 89.516197 (15.06 seconds)
Cbc0010I After 1800 nodes, 23 on tree, 89.516668 best solution, best possible 89.516271 (15.68 seconds)
Cbc0010I After 1900 nodes, 23 on tree, 89.516668 best solution, best possible 89.516307 (16.32 seconds)
Cbc0010I After 2000 nodes, 17 on tree, 89.516668 best solution, best possible 89.516376 (16.94 seconds)
Cbc0010I After 2100 nodes, 16 on tree, 89.516668 best solution, best possible 89.516407 (17.59 seconds)
Cbc0010I After 2200 nodes, 15 on tree, 89.516668 best solution, best possible 89.516441 (18.25 seconds)
Cbc0010I After 2300 nodes, 12 on tree, 89.516668 best solution, best possible 89.516513 (18.88 seconds)
Cbc0001I Search completed - best objective 89.51666845246541, took 77754 iterations and 2384 nodes (19.39 seconds)
Cbc0035I Maximum depth 163, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        719
Linearization cuts added in total:            719  (separation time: 0.00085s)
Total solve time:                         19.4057s (19.4057s in branch-and-bound)
Lower bound:                              89.5167
Upper bound:                              89.5167  (gap: 0.00%)
Branch-and-bound nodes:                      2384
Stats: /tmp/jl_ojj48i/model.nl  300 [var]  100 [int]  220 [con]  101 [aux]    719 [root]      719 [tot] 0.00085 [sep]  19.4057 [time]  19.4063 [bb]         8.951667e+01 [lower]         8.951667e+01 [upper]    2384 [nodes]
Performance of                           FBBT:	   0.358273s,     1888 runs. fix:          0 shrnk:    44.1389 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.12113s,        4 runs. fix:          0 shrnk:    45.4524 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
