solving instance transportation 10 2 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 134.70756       34 0.093946
NLP0014I             2         OPT 248.10478       46 0.119
Couenne: new cutoff value 2.4810478078e+02 (0.401594 seconds)
Loaded instance "/tmp/jl_MtKpx6/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          102 (0 integer)

Coin0506I Presolve 611 (-110) rows, 291 (-111) columns and 1481 (-221) elements
Clp0006I 0  Obj 0 Primal inf 3078.2415 (10)
Clp0006I 80  Obj 33.063517 Primal inf 8776.0963 (69)
Clp0006I 167  Obj 69.735383 Primal inf 1335.101 (48)
Clp0006I 231  Obj 75.387309
Clp0000I Optimal - objective value 75.387309
Clp0032I Optimal objective 75.38730855 - 231 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 75.387309
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 75.387309
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 177 added rows had average density of 2
Cbc0013I At root node, 177 cuts changed objective from 75.387309 to 134.662 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1951 row cuts average 2.0 elements, 36 column cuts (110 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.85 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 134.67759 (7.62 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 134.67759 (8.78 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 134.67759 (9.89 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 134.67759 (10.94 seconds)
Couenne: new cutoff value 1.3471484465e+02 (12.1828 seconds)
Cbc0004I Integer solution of 134.71484 found after 49469 iterations and 494 nodes (11.78 seconds)
Cbc0010I After 500 nodes, 17 on tree, 134.71484 best solution, best possible 134.67902 (11.89 seconds)
Cbc0010I After 600 nodes, 23 on tree, 134.71484 best solution, best possible 134.67902 (12.52 seconds)
Cbc0010I After 700 nodes, 31 on tree, 134.71484 best solution, best possible 134.67902 (13.22 seconds)
Cbc0010I After 800 nodes, 33 on tree, 134.71484 best solution, best possible 134.68301 (13.90 seconds)
Cbc0010I After 900 nodes, 41 on tree, 134.71484 best solution, best possible 134.68976 (14.53 seconds)
Cbc0010I After 1000 nodes, 54 on tree, 134.71484 best solution, best possible 134.68976 (15.22 seconds)
Cbc0010I After 1100 nodes, 72 on tree, 134.71484 best solution, best possible 134.68976 (15.93 seconds)
Couenne: new cutoff value 1.3470871452e+02 (16.6757 seconds)
Cbc0004I Integer solution of 134.70871 found after 75693 iterations and 1150 nodes (16.28 seconds)
Cbc0010I After 1200 nodes, 28 on tree, 134.70871 best solution, best possible 134.6911 (16.61 seconds)
Cbc0010I After 1300 nodes, 32 on tree, 134.70871 best solution, best possible 134.69163 (17.23 seconds)
Cbc0010I After 1400 nodes, 36 on tree, 134.70871 best solution, best possible 134.69328 (17.86 seconds)
Cbc0010I After 1500 nodes, 40 on tree, 134.70871 best solution, best possible 134.69732 (18.49 seconds)
Cbc0010I After 1600 nodes, 45 on tree, 134.70871 best solution, best possible 134.69788 (19.11 seconds)
Cbc0010I After 1700 nodes, 52 on tree, 134.70871 best solution, best possible 134.69788 (19.80 seconds)
Cbc0010I After 1800 nodes, 54 on tree, 134.70871 best solution, best possible 134.6983 (20.48 seconds)
Cbc0010I After 1900 nodes, 59 on tree, 134.70871 best solution, best possible 134.70066 (21.13 seconds)
Cbc0010I After 2000 nodes, 67 on tree, 134.70871 best solution, best possible 134.701 (21.80 seconds)
Cbc0010I After 2100 nodes, 70 on tree, 134.70871 best solution, best possible 134.70158 (22.43 seconds)
Cbc0010I After 2200 nodes, 73 on tree, 134.70871 best solution, best possible 134.70181 (23.09 seconds)
Cbc0010I After 2300 nodes, 76 on tree, 134.70871 best solution, best possible 134.70277 (23.75 seconds)
Cbc0010I After 2400 nodes, 85 on tree, 134.70871 best solution, best possible 134.7031 (24.42 seconds)
Cbc0010I After 2500 nodes, 96 on tree, 134.70871 best solution, best possible 134.7031 (25.13 seconds)
Couenne: new cutoff value 1.3470791290e+02 (25.9624 seconds)
Cbc0004I Integer solution of 134.70791 found after 133216 iterations and 2566 nodes (25.59 seconds)
Cbc0010I After 2600 nodes, 70 on tree, 134.70791 best solution, best possible 134.7031 (25.84 seconds)
Cbc0010I After 2700 nodes, 75 on tree, 134.70791 best solution, best possible 134.7032 (26.54 seconds)
Cbc0010I After 2800 nodes, 79 on tree, 134.70791 best solution, best possible 134.70339 (27.18 seconds)
Cbc0010I After 2900 nodes, 86 on tree, 134.70791 best solution, best possible 134.70357 (27.88 seconds)
Cbc0010I After 3000 nodes, 91 on tree, 134.70791 best solution, best possible 134.70357 (28.56 seconds)
Cbc0010I After 3100 nodes, 92 on tree, 134.70791 best solution, best possible 134.70361 (29.22 seconds)
Cbc0010I After 3200 nodes, 96 on tree, 134.70791 best solution, best possible 134.70379 (29.87 seconds)
Cbc0010I After 3300 nodes, 102 on tree, 134.70791 best solution, best possible 134.70379 (30.58 seconds)
Cbc0010I After 3400 nodes, 109 on tree, 134.70791 best solution, best possible 134.70379 (31.30 seconds)
Couenne: new cutoff value 1.3470773051e+02 (31.7559 seconds)
Cbc0004I Integer solution of 134.70773 found after 164976 iterations and 3416 nodes (31.39 seconds)
Cbc0010I After 3500 nodes, 91 on tree, 134.70773 best solution, best possible 134.70393 (31.95 seconds)
Cbc0010I After 3600 nodes, 94 on tree, 134.70773 best solution, best possible 134.70439 (32.62 seconds)
Cbc0010I After 3700 nodes, 98 on tree, 134.70773 best solution, best possible 134.70456 (33.30 seconds)
Cbc0010I After 3800 nodes, 99 on tree, 134.70773 best solution, best possible 134.70472 (33.96 seconds)
Cbc0010I After 3900 nodes, 100 on tree, 134.70773 best solution, best possible 134.70492 (34.62 seconds)
Cbc0010I After 4000 nodes, 101 on tree, 134.70773 best solution, best possible 134.70494 (35.25 seconds)
Cbc0010I After 4100 nodes, 101 on tree, 134.70773 best solution, best possible 134.70511 (35.90 seconds)
Cbc0010I After 4200 nodes, 101 on tree, 134.70773 best solution, best possible 134.70514 (36.54 seconds)
Cbc0010I After 4300 nodes, 103 on tree, 134.70773 best solution, best possible 134.70518 (37.21 seconds)
Cbc0010I After 4400 nodes, 105 on tree, 134.70773 best solution, best possible 134.70526 (37.90 seconds)
Cbc0010I After 4500 nodes, 104 on tree, 134.70773 best solution, best possible 134.70548 (38.55 seconds)
Cbc0010I After 4600 nodes, 105 on tree, 134.70773 best solution, best possible 134.70556 (39.19 seconds)
Cbc0010I After 4700 nodes, 107 on tree, 134.70773 best solution, best possible 134.70566 (39.88 seconds)
Cbc0010I After 4800 nodes, 112 on tree, 134.70773 best solution, best possible 134.70572 (40.57 seconds)
Cbc0010I After 4900 nodes, 113 on tree, 134.70773 best solution, best possible 134.7059 (41.25 seconds)
Cbc0010I After 5000 nodes, 115 on tree, 134.70773 best solution, best possible 134.70601 (41.92 seconds)
Cbc0010I After 5100 nodes, 116 on tree, 134.70773 best solution, best possible 134.70604 (42.58 seconds)
Cbc0010I After 5200 nodes, 116 on tree, 134.70773 best solution, best possible 134.7061 (43.21 seconds)
Cbc0010I After 5300 nodes, 116 on tree, 134.70773 best solution, best possible 134.70611 (43.86 seconds)
Cbc0010I After 5400 nodes, 121 on tree, 134.70773 best solution, best possible 134.70611 (44.53 seconds)
Couenne: new cutoff value 1.3470757626e+02 (44.9703 seconds)
Cbc0004I Integer solution of 134.70758 found after 242038 iterations and 5408 nodes (44.58 seconds)
Cbc0010I After 5500 nodes, 96 on tree, 134.70758 best solution, best possible 134.70626 (45.19 seconds)
Cbc0010I After 5600 nodes, 94 on tree, 134.70758 best solution, best possible 134.7063 (45.87 seconds)
Cbc0010I After 5700 nodes, 91 on tree, 134.70758 best solution, best possible 134.70645 (46.52 seconds)
Cbc0010I After 5800 nodes, 92 on tree, 134.70758 best solution, best possible 134.70645 (47.23 seconds)
Cbc0010I After 5900 nodes, 89 on tree, 134.70758 best solution, best possible 134.70655 (47.89 seconds)
Cbc0010I After 6000 nodes, 87 on tree, 134.70758 best solution, best possible 134.70664 (48.56 seconds)
Cbc0010I After 6100 nodes, 88 on tree, 134.70758 best solution, best possible 134.70669 (49.25 seconds)
Cbc0010I After 6200 nodes, 82 on tree, 134.70758 best solution, best possible 134.70684 (49.90 seconds)
Cbc0010I After 6300 nodes, 78 on tree, 134.70758 best solution, best possible 134.7069 (50.57 seconds)
Cbc0010I After 6400 nodes, 83 on tree, 134.70758 best solution, best possible 134.70692 (51.30 seconds)
Cbc0010I After 6500 nodes, 80 on tree, 134.70758 best solution, best possible 134.70694 (51.98 seconds)
Cbc0010I After 6600 nodes, 74 on tree, 134.70758 best solution, best possible 134.707 (52.63 seconds)
Cbc0010I After 6700 nodes, 74 on tree, 134.70758 best solution, best possible 134.70701 (53.34 seconds)
Cbc0010I After 6800 nodes, 70 on tree, 134.70758 best solution, best possible 134.70711 (54.03 seconds)
Cbc0010I After 6900 nodes, 67 on tree, 134.70758 best solution, best possible 134.7072 (54.73 seconds)
Cbc0010I After 7000 nodes, 66 on tree, 134.70758 best solution, best possible 134.70724 (55.41 seconds)
Cbc0010I After 7100 nodes, 63 on tree, 134.70758 best solution, best possible 134.70729 (56.09 seconds)
Cbc0010I After 7200 nodes, 55 on tree, 134.70758 best solution, best possible 134.70734 (56.78 seconds)
Cbc0010I After 7300 nodes, 51 on tree, 134.70758 best solution, best possible 134.70737 (57.50 seconds)
Cbc0010I After 7400 nodes, 37 on tree, 134.70758 best solution, best possible 134.70744 (58.14 seconds)
Cbc0010I After 7500 nodes, 36 on tree, 134.70758 best solution, best possible 134.70745 (58.84 seconds)
Cbc0010I After 7600 nodes, 29 on tree, 134.70758 best solution, best possible 134.70748 (59.54 seconds)
Cbc0010I After 7700 nodes, 25 on tree, 134.70758 best solution, best possible 134.70749 (60.26 seconds)
Cbc0010I After 7800 nodes, 9 on tree, 134.70758 best solution, best possible 134.70755 (60.93 seconds)
Cbc0001I Search completed - best objective 134.7075763198972, took 318481 iterations and 7850 nodes (61.27 seconds)
Cbc0035I Maximum depth 246, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        721
Linearization cuts added in total:            721  (separation time: 0.00124s)
Total solve time:                         61.2845s (61.2845s in branch-and-bound)
Lower bound:                              134.708
Upper bound:                              134.708  (gap: 0.00%)
Branch-and-bound nodes:                      7850
Stats: /tmp/jl_MtKpx6/model.nl  300 [var]  100 [int]  220 [con]  102 [aux]    721 [root]      721 [tot] 0.00124 [sep]  61.2845 [time]  61.2847 [bb]         1.347076e+02 [lower]         1.347076e+02 [upper]    7850 [nodes]
Performance of                           FBBT:	    1.16323s,     6204 runs. fix: 8.28302e-05 shrnk:    25.1294 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.04463s,        6 runs. fix:          0 shrnk:   0.816105 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
