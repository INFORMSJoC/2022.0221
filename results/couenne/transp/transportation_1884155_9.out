solving instance transportation 5 1 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 238.91742      117 0.208699
NLP0014I             2         OPT 370.79147       89 0.132628
Couenne: new cutoff value 3.7079146666e+02 (0.362968 seconds)
Loaded instance "/tmp/jl_tYdC3W/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           52 (0 integer)

Coin0506I Presolve 176 (-60) rows, 66 (-61) columns and 406 (-121) elements
Clp0006I 0  Obj 0 Primal inf 921.41798 (5)
Clp0006I 40  Obj 9.157417e-15 Primal inf 4706.8223 (26)
Clp0006I 57  Obj 187.75856
Clp0000I Optimal - objective value 187.75856
Clp0032I Optimal objective 187.7585643 - 57 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 187.75856
NLP Heuristic: NLP0014I             3         OPT 238.91742       20 0.0284
no solution.
Clp0000I Optimal - objective value 187.75856
Optimality Based BT: 0 improved bounds
Probing: Couenne: new cutoff value 2.3891743621e+02 (0.419766 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from 187.75856 to 187.75856 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.16 seconds)
Optimality Based BT: 3 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 4 improved bounds
Optimality Based BT: 5 improved bounds
Cbc0010I After 100 nodes, 35 on tree, 1e+50 best solution, best possible 221.08018 (1.22 seconds)
Cbc0010I After 200 nodes, 81 on tree, 1e+50 best solution, best possible 221.08018 (1.50 seconds)
Cbc0010I After 300 nodes, 119 on tree, 1e+50 best solution, best possible 221.08018 (1.71 seconds)
Couenne: new cutoff value 2.3714435158e+02 (2.14348 seconds)
Cbc0010I After 400 nodes, 142 on tree, 1e+50 best solution, best possible 237.14412 (1.92 seconds)
Couenne: new cutoff value 2.3714430280e+02 (2.44778 seconds)
Cbc0010I After 500 nodes, 167 on tree, 1e+50 best solution, best possible 237.14413 (2.12 seconds)
Cbc0010I After 600 nodes, 178 on tree, 1e+50 best solution, best possible 237.14418 (2.29 seconds)
Cbc0010I After 700 nodes, 193 on tree, 1e+50 best solution, best possible 237.14419 (2.48 seconds)
Cbc0010I After 800 nodes, 216 on tree, 1e+50 best solution, best possible 237.14421 (2.64 seconds)
Cbc0010I After 900 nodes, 244 on tree, 1e+50 best solution, best possible 237.14421 (2.82 seconds)
Cbc0010I After 1000 nodes, 246 on tree, 1e+50 best solution, best possible 237.14422 (3.00 seconds)
Couenne: new cutoff value 2.3714430072e+02 (3.54781 seconds)
Cbc0010I After 1100 nodes, 267 on tree, 1e+50 best solution, best possible 237.14422 (3.19 seconds)
Couenne: new cutoff value 2.3714429555e+02 (3.67446 seconds)
Cbc0004I Integer solution of 237.1443 found after 5207 iterations and 1163 nodes (3.31 seconds)
Cbc0010I After 1200 nodes, 101 on tree, 237.1443 best solution, best possible 237.14423 (3.41 seconds)
Couenne: new cutoff value 2.3714428363e+02 (3.85526 seconds)
Cbc0010I After 1300 nodes, 124 on tree, 237.1443 best solution, best possible 237.14423 (3.59 seconds)
Cbc0010I After 1400 nodes, 120 on tree, 237.1443 best solution, best possible 237.14424 (3.75 seconds)
Couenne: new cutoff value 2.3714427898e+02 (4.22781 seconds)
Cbc0010I After 1500 nodes, 141 on tree, 237.1443 best solution, best possible 237.14425 (3.92 seconds)
Couenne: new cutoff value 2.3714426853e+02 (4.34882 seconds)
Cbc0010I After 1600 nodes, 160 on tree, 237.1443 best solution, best possible 237.14425 (4.10 seconds)
Cbc0004I Integer solution of 237.14427 found after 6488 iterations and 1642 nodes (4.18 seconds)
Cbc0010I After 1700 nodes, 65 on tree, 237.14427 best solution, best possible 237.14425 (4.29 seconds)
Cbc0010I After 1800 nodes, 85 on tree, 237.14427 best solution, best possible 237.14425 (4.44 seconds)
Cbc0010I After 1900 nodes, 97 on tree, 237.14427 best solution, best possible 237.14425 (4.59 seconds)
Cbc0010I After 2000 nodes, 106 on tree, 237.14427 best solution, best possible 237.14425 (4.73 seconds)
Couenne: new cutoff value 2.3714425961e+02 (5.22191 seconds)
Cbc0004I Integer solution of 237.14426 found after 7318 iterations and 2079 nodes (4.86 seconds)
Cbc0001I Search completed - best objective 237.1442596910838, took 7318 iterations and 2079 nodes (4.88 seconds)
Cbc0035I Maximum depth 166, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        236
Linearization cuts added in total:            236  (separation time: 0.000593s)
Total solve time:                          4.8887s (4.8887s in branch-and-bound)
Lower bound:                              237.144
Upper bound:                              237.144  (gap: 0.00%)
Branch-and-bound nodes:                      2079
Stats: /tmp/jl_tYdC3W/model.nl   75 [var]   25 [int]   60 [con]   52 [aux]    236 [root]      236 [tot] 0.000593 [sep]   4.8887 [time]  4.88893 [bb]         2.371443e+02 [lower]         2.371443e+02 [upper]    2079 [nodes]
Performance of                           FBBT:	   0.197871s,     1989 runs. fix:  0.0192459 shrnk:    11.4758 ubd:          0 2ubd:          0 infeas:         19
Performance of                           OBBT:	   0.139441s,        6 runs. fix:   0.574468 shrnk:    3.98807 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
