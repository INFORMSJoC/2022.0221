solving instance transportation 20 5 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 172.20459     2826 49.646594
NLP0014I             2      FAILED 2091.1884     3000 53.140735
NLP0014I             1      FAILED 281.18339     3000 49.865286   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_lmRGzs/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         1602 (0 integer)

Coin0506I Presolve 4440 (-1201) rows, 1600 (-1202) columns and 10000 (-2802) elements
Clp0006I 0  Obj 0 Primal inf 3777.0506 (820)
Clp0006I 163  Obj 9.4358297e-15 Primal inf 3325.9573 (883)
Clp0006I 326  Obj 5.6958322e-15 Primal inf 3424.997 (878)
Clp0006I 489  Obj 5.2500794e-15 Primal inf 3859.6048 (758)
Clp0006I 652  Obj 10.329409 Primal inf 1376.9031 (598)
Clp0006I 815  Obj 10.595425 Primal inf 1283.9668 (506)
Clp0006I 978  Obj 14.123761 Primal inf 364.45171 (180)
Clp0006I 1141  Obj 22.472456 Primal inf 2145.0891 (70)
Clp0006I 1223  Obj 22.683337
Clp0000I Optimal - objective value 22.683337
Clp0032I Optimal objective 22.6833367 - 1223 iterations time 0.092, Presolve 0.01
Clp0000I Optimal - objective value 22.683337
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 22.683337
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 743 added rows had average density of 2
Cbc0013I At root node, 743 cuts changed objective from 22.683337 to 50.030088 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 6583 row cuts average 2.0 elements, 350 column cuts (990 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (37.47 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 50.321779 (383.95 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 50.59419 (396.50 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 50.59419 (409.37 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 50.59419 (422.11 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 50.59419 (436.55 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 50.59419 (452.29 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible 50.59419 (469.17 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible 50.59419 (485.46 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible 50.59419 (503.36 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible 50.59419 (521.84 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible 50.59419 (538.60 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible 50.59419 (556.03 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible 50.59419 (574.66 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible 50.59419 (593.19 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible 50.59419 (611.88 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible 50.59419 (631.34 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible 50.59419 (650.27 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible 50.59419 (668.79 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible 50.59419 (687.61 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible 50.59419 (706.35 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible 50.59419 (725.82 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible 50.59419 (744.97 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible 50.59419 (763.44 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible 50.59419 (781.98 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible 50.59419 (800.62 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible 50.59419 (819.98 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible 50.59419 (839.06 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible 50.59419 (858.55 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible 50.59419 (878.27 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible 50.59419 (897.93 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible 50.59419 (915.35 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible 50.59419 (933.59 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible 50.59419 (952.77 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible 50.59419 (971.83 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible 50.59419 (989.44 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible 50.59419 (1007.78 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible 50.59419 (1025.73 seconds)
Cbc0010I After 3800 nodes, 1899 on tree, 1e+50 best solution, best possible 50.59419 (1043.32 seconds)
Cbc0010I After 3900 nodes, 1949 on tree, 1e+50 best solution, best possible 50.59419 (1061.58 seconds)
Cbc0010I After 4000 nodes, 1999 on tree, 1e+50 best solution, best possible 50.59419 (1079.28 seconds)
Cbc0010I After 4100 nodes, 2049 on tree, 1e+50 best solution, best possible 50.59419 (1097.34 seconds)
Cbc0010I After 4200 nodes, 2099 on tree, 1e+50 best solution, best possible 50.59419 (1116.25 seconds)
Cbc0010I After 4300 nodes, 2149 on tree, 1e+50 best solution, best possible 50.59419 (1134.12 seconds)
Cbc0010I After 4400 nodes, 2199 on tree, 1e+50 best solution, best possible 50.59419 (1151.84 seconds)
Cbc0010I After 4500 nodes, 2249 on tree, 1e+50 best solution, best possible 50.59419 (1169.82 seconds)
Cbc0010I After 4600 nodes, 2299 on tree, 1e+50 best solution, best possible 50.59419 (1187.80 seconds)
Cbc0010I After 4700 nodes, 2349 on tree, 1e+50 best solution, best possible 50.59419 (1205.25 seconds)
Cbc0010I After 4800 nodes, 2399 on tree, 1e+50 best solution, best possible 50.59419 (1222.96 seconds)
Cbc0010I After 4900 nodes, 2449 on tree, 1e+50 best solution, best possible 50.59419 (1241.14 seconds)
Cbc0010I After 5000 nodes, 2499 on tree, 1e+50 best solution, best possible 50.59419 (1259.22 seconds)
Cbc0010I After 5100 nodes, 2549 on tree, 1e+50 best solution, best possible 50.59419 (1277.51 seconds)
Cbc0010I After 5200 nodes, 2599 on tree, 1e+50 best solution, best possible 50.59419 (1295.40 seconds)
Cbc0010I After 5300 nodes, 2649 on tree, 1e+50 best solution, best possible 50.59419 (1313.14 seconds)
Cbc0010I After 5400 nodes, 2699 on tree, 1e+50 best solution, best possible 50.59419 (1331.07 seconds)
Cbc0010I After 5500 nodes, 2749 on tree, 1e+50 best solution, best possible 50.59419 (1349.03 seconds)
Cbc0010I After 5600 nodes, 2799 on tree, 1e+50 best solution, best possible 50.59419 (1367.37 seconds)
Cbc0010I After 5700 nodes, 2849 on tree, 1e+50 best solution, best possible 50.59419 (1385.70 seconds)
Cbc0010I After 5800 nodes, 2899 on tree, 1e+50 best solution, best possible 50.59419 (1404.16 seconds)
Cbc0010I After 5900 nodes, 2949 on tree, 1e+50 best solution, best possible 50.59419 (1422.90 seconds)
Cbc0010I After 6000 nodes, 2999 on tree, 1e+50 best solution, best possible 50.59419 (1441.45 seconds)
Cbc0010I After 6100 nodes, 3049 on tree, 1e+50 best solution, best possible 50.59419 (1460.33 seconds)
Cbc0010I After 6200 nodes, 3099 on tree, 1e+50 best solution, best possible 50.59419 (1479.42 seconds)
Cbc0010I After 6300 nodes, 3149 on tree, 1e+50 best solution, best possible 50.59419 (1498.96 seconds)
Cbc0010I After 6400 nodes, 3199 on tree, 1e+50 best solution, best possible 50.59419 (1518.33 seconds)
Cbc0010I After 6500 nodes, 3249 on tree, 1e+50 best solution, best possible 50.59419 (1537.91 seconds)
Cbc0010I After 6600 nodes, 3299 on tree, 1e+50 best solution, best possible 50.59419 (1557.65 seconds)
Cbc0010I After 6700 nodes, 3349 on tree, 1e+50 best solution, best possible 50.59419 (1577.41 seconds)
Cbc0010I After 6800 nodes, 3399 on tree, 1e+50 best solution, best possible 50.59419 (1597.40 seconds)
Cbc0010I After 6900 nodes, 3449 on tree, 1e+50 best solution, best possible 50.59419 (1617.87 seconds)
Cbc0010I After 7000 nodes, 3499 on tree, 1e+50 best solution, best possible 50.59419 (1638.20 seconds)
Cbc0010I After 7100 nodes, 3549 on tree, 1e+50 best solution, best possible 50.59419 (1658.60 seconds)
Cbc0010I After 7200 nodes, 3599 on tree, 1e+50 best solution, best possible 50.59419 (1679.18 seconds)
Cbc0010I After 7300 nodes, 3649 on tree, 1e+50 best solution, best possible 50.59419 (1700.44 seconds)
Cbc0010I After 7400 nodes, 3699 on tree, 1e+50 best solution, best possible 50.59419 (1721.60 seconds)
Cbc0010I After 7500 nodes, 3749 on tree, 1e+50 best solution, best possible 50.59419 (1743.00 seconds)
Cbc0010I After 7600 nodes, 3799 on tree, 1e+50 best solution, best possible 50.59419 (1764.48 seconds)
Cbc0010I After 7700 nodes, 3849 on tree, 1e+50 best solution, best possible 50.59419 (1786.32 seconds)
Cbc0010I After 7800 nodes, 3899 on tree, 1e+50 best solution, best possible 50.59419 (1808.24 seconds)
Cbc0010I After 7900 nodes, 3949 on tree, 1e+50 best solution, best possible 50.59419 (1830.25 seconds)
Cbc0010I After 8000 nodes, 3999 on tree, 1e+50 best solution, best possible 50.59419 (1852.48 seconds)
Cbc0010I After 8100 nodes, 4049 on tree, 1e+50 best solution, best possible 50.59419 (1874.96 seconds)
Cbc0010I After 8200 nodes, 4099 on tree, 1e+50 best solution, best possible 50.59419 (1897.57 seconds)
Cbc0010I After 8300 nodes, 4149 on tree, 1e+50 best solution, best possible 50.59419 (1920.47 seconds)
Cbc0010I After 8400 nodes, 4199 on tree, 1e+50 best solution, best possible 50.59419 (1943.63 seconds)
Cbc0010I After 8500 nodes, 4249 on tree, 1e+50 best solution, best possible 50.59419 (1966.90 seconds)
Cbc0010I After 8600 nodes, 4299 on tree, 1e+50 best solution, best possible 50.59419 (1990.33 seconds)
Cbc0010I After 8700 nodes, 4349 on tree, 1e+50 best solution, best possible 50.59419 (2014.00 seconds)
Cbc0010I After 8800 nodes, 4398 on tree, 1e+50 best solution, best possible 50.59419 (2037.88 seconds)
Cbc0010I After 8900 nodes, 4448 on tree, 1e+50 best solution, best possible 50.59419 (2062.13 seconds)
Cbc0010I After 9000 nodes, 4498 on tree, 1e+50 best solution, best possible 50.59419 (2086.48 seconds)
Cbc0010I After 9100 nodes, 4548 on tree, 1e+50 best solution, best possible 50.59419 (2111.02 seconds)
Cbc0010I After 9200 nodes, 4598 on tree, 1e+50 best solution, best possible 50.59419 (2135.55 seconds)
Cbc0010I After 9300 nodes, 4647 on tree, 1e+50 best solution, best possible 50.59419 (2160.33 seconds)
Cbc0010I After 9400 nodes, 4697 on tree, 1e+50 best solution, best possible 50.59419 (2185.42 seconds)
Cbc0010I After 9500 nodes, 4747 on tree, 1e+50 best solution, best possible 50.59419 (2210.70 seconds)
Cbc0010I After 9600 nodes, 4797 on tree, 1e+50 best solution, best possible 50.59419 (2236.20 seconds)
Cbc0010I After 9700 nodes, 4847 on tree, 1e+50 best solution, best possible 50.59419 (2261.87 seconds)
Cbc0010I After 9800 nodes, 4896 on tree, 1e+50 best solution, best possible 50.59419 (2287.59 seconds)
Cbc0010I After 9900 nodes, 4946 on tree, 1e+50 best solution, best possible 50.59419 (2313.63 seconds)
Cbc0010I After 10000 nodes, 4996 on tree, 1e+50 best solution, best possible 50.59419 (2339.75 seconds)
Cbc0010I After 10100 nodes, 5046 on tree, 1e+50 best solution, best possible 50.59419 (2365.91 seconds)
Cbc0010I After 10200 nodes, 5095 on tree, 1e+50 best solution, best possible 50.59419 (2392.39 seconds)
Cbc0010I After 10300 nodes, 5144 on tree, 1e+50 best solution, best possible 50.59419 (2418.53 seconds)
Cbc0010I After 10400 nodes, 5194 on tree, 1e+50 best solution, best possible 50.59419 (2445.03 seconds)
Cbc0010I After 10500 nodes, 5241 on tree, 1e+50 best solution, best possible 50.59419 (2471.67 seconds)
Cbc0010I After 10600 nodes, 5289 on tree, 1e+50 best solution, best possible 50.59419 (2498.57 seconds)
Cbc0010I After 10700 nodes, 5337 on tree, 1e+50 best solution, best possible 50.59419 (2526.03 seconds)
Cbc0010I After 10800 nodes, 5381 on tree, 1e+50 best solution, best possible 50.59419 (2556.62 seconds)
Cbc0010I After 10900 nodes, 5428 on tree, 1e+50 best solution, best possible 50.59893 (2582.89 seconds)
Cbc0010I After 11000 nodes, 5478 on tree, 1e+50 best solution, best possible 50.59893 (2595.64 seconds)
Cbc0010I After 11100 nodes, 5528 on tree, 1e+50 best solution, best possible 50.59893 (2609.21 seconds)
Cbc0010I After 11200 nodes, 5578 on tree, 1e+50 best solution, best possible 50.59893 (2622.75 seconds)
Cbc0010I After 11300 nodes, 5628 on tree, 1e+50 best solution, best possible 50.59893 (2637.30 seconds)
Cbc0010I After 11400 nodes, 5678 on tree, 1e+50 best solution, best possible 50.59893 (2652.93 seconds)
Cbc0010I After 11500 nodes, 5728 on tree, 1e+50 best solution, best possible 50.59893 (2669.90 seconds)
Cbc0010I After 11600 nodes, 5778 on tree, 1e+50 best solution, best possible 50.59893 (2686.83 seconds)
Cbc0010I After 11700 nodes, 5828 on tree, 1e+50 best solution, best possible 50.59893 (2703.81 seconds)
Cbc0010I After 11800 nodes, 5878 on tree, 1e+50 best solution, best possible 50.59893 (2722.58 seconds)
Cbc0010I After 11900 nodes, 5928 on tree, 1e+50 best solution, best possible 50.59893 (2741.00 seconds)
Cbc0010I After 12000 nodes, 5978 on tree, 1e+50 best solution, best possible 50.59893 (2758.99 seconds)
Cbc0010I After 12100 nodes, 6028 on tree, 1e+50 best solution, best possible 50.59893 (2777.69 seconds)
Cbc0010I After 12200 nodes, 6078 on tree, 1e+50 best solution, best possible 50.59893 (2796.87 seconds)
Cbc0010I After 12300 nodes, 6128 on tree, 1e+50 best solution, best possible 50.59893 (2816.11 seconds)
Cbc0010I After 12400 nodes, 6178 on tree, 1e+50 best solution, best possible 50.59893 (2835.83 seconds)
Cbc0010I After 12500 nodes, 6228 on tree, 1e+50 best solution, best possible 50.59893 (2855.76 seconds)
Cbc0010I After 12600 nodes, 6278 on tree, 1e+50 best solution, best possible 50.59893 (2874.60 seconds)
Cbc0010I After 12700 nodes, 6328 on tree, 1e+50 best solution, best possible 50.59893 (2893.32 seconds)
Cbc0010I After 12800 nodes, 6378 on tree, 1e+50 best solution, best possible 50.59893 (2912.51 seconds)
Cbc0010I After 12900 nodes, 6428 on tree, 1e+50 best solution, best possible 50.59893 (2930.76 seconds)
Cbc0010I After 13000 nodes, 6478 on tree, 1e+50 best solution, best possible 50.59893 (2949.79 seconds)
Cbc0010I After 13100 nodes, 6528 on tree, 1e+50 best solution, best possible 50.59893 (2969.68 seconds)
Cbc0010I After 13200 nodes, 6578 on tree, 1e+50 best solution, best possible 50.59893 (2988.00 seconds)
Cbc0010I After 13300 nodes, 6628 on tree, 1e+50 best solution, best possible 50.59893 (3006.92 seconds)
Cbc0010I After 13400 nodes, 6678 on tree, 1e+50 best solution, best possible 50.59893 (3025.93 seconds)
Cbc0010I After 13500 nodes, 6728 on tree, 1e+50 best solution, best possible 50.59893 (3045.33 seconds)
Cbc0010I After 13600 nodes, 6778 on tree, 1e+50 best solution, best possible 50.59893 (3064.88 seconds)
Cbc0010I After 13700 nodes, 6828 on tree, 1e+50 best solution, best possible 50.59893 (3083.96 seconds)
Cbc0010I After 13800 nodes, 6878 on tree, 1e+50 best solution, best possible 50.59893 (3102.66 seconds)
Cbc0010I After 13900 nodes, 6928 on tree, 1e+50 best solution, best possible 50.59893 (3120.40 seconds)
Cbc0010I After 14000 nodes, 6978 on tree, 1e+50 best solution, best possible 50.59893 (3138.64 seconds)
Cbc0010I After 14100 nodes, 7028 on tree, 1e+50 best solution, best possible 50.59893 (3157.54 seconds)
Cbc0010I After 14200 nodes, 7078 on tree, 1e+50 best solution, best possible 50.59893 (3176.04 seconds)
Cbc0010I After 14300 nodes, 7127 on tree, 1e+50 best solution, best possible 50.59893 (3194.02 seconds)
Cbc0010I After 14400 nodes, 7177 on tree, 1e+50 best solution, best possible 50.59893 (3212.34 seconds)
Cbc0010I After 14500 nodes, 7227 on tree, 1e+50 best solution, best possible 50.59893 (3230.41 seconds)
Cbc0010I After 14600 nodes, 7277 on tree, 1e+50 best solution, best possible 50.59893 (3247.90 seconds)
Cbc0010I After 14700 nodes, 7327 on tree, 1e+50 best solution, best possible 50.59893 (3265.85 seconds)
Cbc0010I After 14800 nodes, 7377 on tree, 1e+50 best solution, best possible 50.59893 (3283.96 seconds)
Cbc0010I After 14900 nodes, 7427 on tree, 1e+50 best solution, best possible 50.59893 (3301.88 seconds)
Cbc0010I After 15000 nodes, 7477 on tree, 1e+50 best solution, best possible 50.59893 (3319.71 seconds)
Cbc0010I After 15100 nodes, 7527 on tree, 1e+50 best solution, best possible 50.59893 (3337.26 seconds)
Cbc0010I After 15200 nodes, 7577 on tree, 1e+50 best solution, best possible 50.59893 (3355.16 seconds)
Cbc0010I After 15300 nodes, 7627 on tree, 1e+50 best solution, best possible 50.59893 (3373.21 seconds)
Cbc0010I After 15400 nodes, 7677 on tree, 1e+50 best solution, best possible 50.59893 (3391.04 seconds)
Cbc0010I After 15500 nodes, 7727 on tree, 1e+50 best solution, best possible 50.59893 (3409.09 seconds)
Cbc0010I After 15600 nodes, 7777 on tree, 1e+50 best solution, best possible 50.59893 (3426.78 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 50.59893), took 4230500 iterations and 15638 nodes (3473.95 seconds)
Cbc0035I Maximum depth 5436, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5641
Linearization cuts added in total:           5641  (separation time: 0.018752s)
Total solve time:                         3474.04s (3474.04s in branch-and-bound)
Lower bound:                              50.5989
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                     15638
Stats: /tmp/jl_lmRGzs/model.nl 1200 [var]  400 [int]  840 [con] 1602 [aux]   5641 [root]     5641 [tot] 0.018752 [sep]  3474.04 [time]  3474.04 [bb]         5.059893e+01 [lower]         1.000000e+50 [upper]   15638 [nodes]
Performance of                           FBBT:	    141.991s,    23275 runs. fix: 1.08947e-05 shrnk: 0.000253053 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    117.521s,        8 runs. fix:          0 shrnk:    13.1162 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
