solving instance transportation 20 4 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 442.8068      475 7.5404
NLP0014I             2      INFEAS 70.363511       53 0.564991
Loaded instance "/tmp/jl_oBJE2v/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2802 (0 integer)

Coin0506I Presolve 4040 (-1601) rows, 2000 (-2002) columns and 9600 (-4002) elements
Clp0006I 0  Obj -1845.7639 Primal inf 33797.181 (1220)
Clp0006I 155  Obj -1845.7639 Primal inf 24865.004 (1182)
Clp0006I 310  Obj -1845.7639 Primal inf 16009.237 (1024)
Clp0006I 465  Obj -1845.7639 Primal inf 6937.3539 (867)
Clp0006I 620  Obj -1845.7639 Primal inf 5103.3418 (871)
Clp0006I 775  Obj -1845.7639 Primal inf 4589.7086 (890)
Clp0006I 930  Obj -1845.7639 Primal inf 3862.7578 (904)
Clp0006I 1085  Obj -1845.7639 Primal inf 9774.4093 (976)
Clp0006I 1240  Obj -1770.9422 Primal inf 30169.132 (978)
Clp0006I 1389  Obj -1670.0583 Primal inf 18715.77 (909)
Clp0006I 1544  Obj -1561.9817 Primal inf 24851.781 (868)
Clp0006I 1699  Obj -1417.5852 Primal inf 7140.3726 (763)
Clp0006I 1854  Obj -1325.802 Primal inf 7902.0435 (666)
Clp0006I 2009  Obj -1213.9721 Primal inf 3024.314 (597)
Clp0006I 2164  Obj -1024.6165 Primal inf 1630.2867 (517)
Clp0006I 2319  Obj -775.86166 Primal inf 1382.6035 (352)
Clp0006I 2474  Obj -751.20476 Primal inf 178.57413 (267)
Clp0006I 2629  Obj -748.1156 Primal inf 47.636467 (92)
Clp0006I 2715  Obj -745.94108
Clp0000I Optimal - objective value -745.94108
Clp0032I Optimal objective -745.9410818 - 2715 iterations time 0.292, Presolve 0.02
Clp0000I Optimal - objective value -745.94108
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -745.94108
Optimality Based BT: 400 improved bounds
Probing: 360 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from -745.94108 to -745.94108 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (117.95 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -742.53462 (1064.88 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible -742.53462 (1070.88 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible -742.53462 (1076.61 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible -742.53462 (1082.32 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible -742.53462 (1088.04 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible -742.53462 (1093.86 seconds)
Cbc0010I After 700 nodes, 350 on tree, 1e+50 best solution, best possible -742.53462 (1099.75 seconds)
Cbc0010I After 800 nodes, 400 on tree, 1e+50 best solution, best possible -742.53462 (1106.20 seconds)
Cbc0010I After 900 nodes, 450 on tree, 1e+50 best solution, best possible -742.53462 (1117.24 seconds)
Cbc0010I After 1000 nodes, 500 on tree, 1e+50 best solution, best possible -742.53462 (1128.47 seconds)
Cbc0010I After 1100 nodes, 550 on tree, 1e+50 best solution, best possible -742.53462 (1139.24 seconds)
Cbc0010I After 1200 nodes, 600 on tree, 1e+50 best solution, best possible -742.53462 (1150.27 seconds)
Cbc0010I After 1300 nodes, 650 on tree, 1e+50 best solution, best possible -742.53462 (1161.21 seconds)
Cbc0010I After 1400 nodes, 700 on tree, 1e+50 best solution, best possible -742.53462 (1172.22 seconds)
Cbc0010I After 1500 nodes, 750 on tree, 1e+50 best solution, best possible -742.53462 (1183.89 seconds)
Cbc0010I After 1600 nodes, 800 on tree, 1e+50 best solution, best possible -742.53462 (1196.35 seconds)
Cbc0010I After 1700 nodes, 850 on tree, 1e+50 best solution, best possible -742.53462 (1208.50 seconds)
Cbc0010I After 1800 nodes, 900 on tree, 1e+50 best solution, best possible -742.53462 (1221.06 seconds)
Cbc0010I After 1900 nodes, 950 on tree, 1e+50 best solution, best possible -742.53462 (1233.69 seconds)
Cbc0010I After 2000 nodes, 1000 on tree, 1e+50 best solution, best possible -742.53462 (1245.99 seconds)
Cbc0010I After 2100 nodes, 1050 on tree, 1e+50 best solution, best possible -742.53462 (1258.57 seconds)
Cbc0010I After 2200 nodes, 1100 on tree, 1e+50 best solution, best possible -742.53462 (1271.10 seconds)
Cbc0010I After 2300 nodes, 1150 on tree, 1e+50 best solution, best possible -742.53462 (1283.77 seconds)
Cbc0010I After 2400 nodes, 1200 on tree, 1e+50 best solution, best possible -742.53462 (1295.85 seconds)
Cbc0010I After 2500 nodes, 1250 on tree, 1e+50 best solution, best possible -742.53462 (1308.24 seconds)
Cbc0010I After 2600 nodes, 1300 on tree, 1e+50 best solution, best possible -742.53462 (1318.34 seconds)
Cbc0010I After 2700 nodes, 1350 on tree, 1e+50 best solution, best possible -742.53462 (1327.82 seconds)
Cbc0010I After 2800 nodes, 1400 on tree, 1e+50 best solution, best possible -742.53462 (1336.76 seconds)
Cbc0010I After 2900 nodes, 1450 on tree, 1e+50 best solution, best possible -742.53462 (1348.00 seconds)
Cbc0010I After 3000 nodes, 1500 on tree, 1e+50 best solution, best possible -742.53462 (1359.68 seconds)
Cbc0010I After 3100 nodes, 1550 on tree, 1e+50 best solution, best possible -742.53462 (1371.78 seconds)
Cbc0010I After 3200 nodes, 1600 on tree, 1e+50 best solution, best possible -742.53462 (1383.29 seconds)
Cbc0010I After 3300 nodes, 1650 on tree, 1e+50 best solution, best possible -742.53462 (1394.44 seconds)
Cbc0010I After 3400 nodes, 1700 on tree, 1e+50 best solution, best possible -742.53462 (1405.34 seconds)
Cbc0010I After 3500 nodes, 1750 on tree, 1e+50 best solution, best possible -742.53462 (1415.34 seconds)
Cbc0010I After 3600 nodes, 1800 on tree, 1e+50 best solution, best possible -742.53462 (1425.82 seconds)
Cbc0010I After 3700 nodes, 1850 on tree, 1e+50 best solution, best possible -742.53462 (1435.39 seconds)
Cbc0010I After 3800 nodes, 1900 on tree, 1e+50 best solution, best possible -742.53462 (1447.45 seconds)
Cbc0010I After 3900 nodes, 1950 on tree, 1e+50 best solution, best possible -742.53462 (1459.68 seconds)
Cbc0010I After 4000 nodes, 2000 on tree, 1e+50 best solution, best possible -742.53462 (1472.13 seconds)
Cbc0010I After 4100 nodes, 2050 on tree, 1e+50 best solution, best possible -742.53462 (1484.45 seconds)
Cbc0010I After 4200 nodes, 2100 on tree, 1e+50 best solution, best possible -742.53462 (1496.87 seconds)
Cbc0010I After 4300 nodes, 2150 on tree, 1e+50 best solution, best possible -742.53462 (1509.51 seconds)
Cbc0010I After 4400 nodes, 2200 on tree, 1e+50 best solution, best possible -742.53462 (1522.10 seconds)
Cbc0010I After 4500 nodes, 2250 on tree, 1e+50 best solution, best possible -742.53462 (1534.39 seconds)
Cbc0010I After 4600 nodes, 2300 on tree, 1e+50 best solution, best possible -742.53462 (1547.26 seconds)
Cbc0010I After 4700 nodes, 2350 on tree, 1e+50 best solution, best possible -742.53462 (1560.19 seconds)
Cbc0010I After 4800 nodes, 2400 on tree, 1e+50 best solution, best possible -742.53462 (1573.20 seconds)
Cbc0010I After 4900 nodes, 2450 on tree, 1e+50 best solution, best possible -742.53462 (1585.93 seconds)
Cbc0010I After 5000 nodes, 2500 on tree, 1e+50 best solution, best possible -742.53462 (1598.13 seconds)
Cbc0010I After 5100 nodes, 2550 on tree, 1e+50 best solution, best possible -742.53462 (1610.48 seconds)
Cbc0010I After 5200 nodes, 2600 on tree, 1e+50 best solution, best possible -742.53462 (1623.54 seconds)
Cbc0010I After 5300 nodes, 2650 on tree, 1e+50 best solution, best possible -742.53462 (1636.81 seconds)
Cbc0010I After 5400 nodes, 2700 on tree, 1e+50 best solution, best possible -742.53462 (1649.71 seconds)
Cbc0010I After 5500 nodes, 2750 on tree, 1e+50 best solution, best possible -742.53462 (1662.52 seconds)
Cbc0010I After 5600 nodes, 2800 on tree, 1e+50 best solution, best possible -742.53462 (1674.97 seconds)
Cbc0010I After 5700 nodes, 2850 on tree, 1e+50 best solution, best possible -742.53462 (1688.01 seconds)
Cbc0010I After 5800 nodes, 2900 on tree, 1e+50 best solution, best possible -742.53462 (1701.57 seconds)
Cbc0010I After 5900 nodes, 2950 on tree, 1e+50 best solution, best possible -742.53462 (1714.55 seconds)
Cbc0010I After 6000 nodes, 3000 on tree, 1e+50 best solution, best possible -742.53462 (1727.86 seconds)
Cbc0010I After 6100 nodes, 3050 on tree, 1e+50 best solution, best possible -742.53462 (1741.28 seconds)
Cbc0010I After 6200 nodes, 3100 on tree, 1e+50 best solution, best possible -742.53462 (1754.50 seconds)
Cbc0010I After 6300 nodes, 3150 on tree, 1e+50 best solution, best possible -742.53462 (1768.35 seconds)
Cbc0010I After 6400 nodes, 3200 on tree, 1e+50 best solution, best possible -742.53462 (1781.66 seconds)
Cbc0010I After 6500 nodes, 3250 on tree, 1e+50 best solution, best possible -742.53462 (1795.27 seconds)
Cbc0010I After 6600 nodes, 3300 on tree, 1e+50 best solution, best possible -742.53462 (1808.78 seconds)
Cbc0010I After 6700 nodes, 3350 on tree, 1e+50 best solution, best possible -742.53462 (1822.08 seconds)
Cbc0010I After 6800 nodes, 3400 on tree, 1e+50 best solution, best possible -742.53462 (1835.71 seconds)
Cbc0010I After 6900 nodes, 3450 on tree, 1e+50 best solution, best possible -742.53462 (1849.38 seconds)
Cbc0010I After 7000 nodes, 3500 on tree, 1e+50 best solution, best possible -742.53462 (1862.61 seconds)
Cbc0010I After 7100 nodes, 3550 on tree, 1e+50 best solution, best possible -742.53462 (1876.13 seconds)
Cbc0010I After 7200 nodes, 3600 on tree, 1e+50 best solution, best possible -742.53462 (1889.89 seconds)
Cbc0010I After 7300 nodes, 3650 on tree, 1e+50 best solution, best possible -742.53462 (1903.48 seconds)
Cbc0010I After 7400 nodes, 3700 on tree, 1e+50 best solution, best possible -742.53462 (1916.10 seconds)
Cbc0010I After 7500 nodes, 3750 on tree, 1e+50 best solution, best possible -742.53462 (1929.24 seconds)
Cbc0010I After 7600 nodes, 3800 on tree, 1e+50 best solution, best possible -742.53462 (1942.27 seconds)
Cbc0010I After 7700 nodes, 3850 on tree, 1e+50 best solution, best possible -742.53462 (1954.99 seconds)
Cbc0010I After 7800 nodes, 3900 on tree, 1e+50 best solution, best possible -742.53462 (1967.35 seconds)
Cbc0010I After 7900 nodes, 3950 on tree, 1e+50 best solution, best possible -742.53462 (1979.91 seconds)
Cbc0010I After 8000 nodes, 4000 on tree, 1e+50 best solution, best possible -742.53462 (1992.29 seconds)
Cbc0010I After 8100 nodes, 4050 on tree, 1e+50 best solution, best possible -742.53462 (2002.51 seconds)
Cbc0010I After 8200 nodes, 4100 on tree, 1e+50 best solution, best possible -742.53462 (2010.37 seconds)
Couenne: new cutoff value 1.1108923171e+03 (2031.81 seconds)
Optimality Based BT: 66 improved bounds
Optimality Based BT: 61 improved bounds
Cbc0010I After 8300 nodes, 4148 on tree, 1e+50 best solution, best possible -742.06041 (2936.77 seconds)
Cbc0010I After 8400 nodes, 4198 on tree, 1e+50 best solution, best possible -742.06041 (2945.08 seconds)
Cbc0010I After 8500 nodes, 4248 on tree, 1e+50 best solution, best possible -742.06041 (2952.92 seconds)
Cbc0010I After 8600 nodes, 4298 on tree, 1e+50 best solution, best possible -742.06041 (2960.78 seconds)
Cbc0010I After 8700 nodes, 4348 on tree, 1e+50 best solution, best possible -742.06041 (2968.73 seconds)
Cbc0010I After 8800 nodes, 4398 on tree, 1e+50 best solution, best possible -742.06041 (2976.94 seconds)
Cbc0010I After 8900 nodes, 4448 on tree, 1e+50 best solution, best possible -742.06041 (2985.21 seconds)
Cbc0010I After 9000 nodes, 4498 on tree, 1e+50 best solution, best possible -742.06041 (2993.42 seconds)
Cbc0010I After 9100 nodes, 4548 on tree, 1e+50 best solution, best possible -742.06041 (3007.70 seconds)
Cbc0010I After 9200 nodes, 4598 on tree, 1e+50 best solution, best possible -742.06041 (3022.90 seconds)
Cbc0010I After 9300 nodes, 4648 on tree, 1e+50 best solution, best possible -742.06041 (3037.99 seconds)
Cbc0010I After 9400 nodes, 4698 on tree, 1e+50 best solution, best possible -742.06041 (3052.98 seconds)
Cbc0010I After 9500 nodes, 4748 on tree, 1e+50 best solution, best possible -742.06041 (3068.09 seconds)
Cbc0010I After 9600 nodes, 4798 on tree, 1e+50 best solution, best possible -742.06041 (3083.27 seconds)
Cbc0010I After 9700 nodes, 4848 on tree, 1e+50 best solution, best possible -742.06041 (3098.97 seconds)
Cbc0010I After 9800 nodes, 4898 on tree, 1e+50 best solution, best possible -742.06041 (3115.43 seconds)
Cbc0010I After 9900 nodes, 4948 on tree, 1e+50 best solution, best possible -742.06041 (3132.11 seconds)
Cbc0010I After 10000 nodes, 4998 on tree, 1e+50 best solution, best possible -742.06041 (3149.05 seconds)
Cbc0010I After 10100 nodes, 5048 on tree, 1e+50 best solution, best possible -742.06041 (3166.33 seconds)
Cbc0010I After 10200 nodes, 5098 on tree, 1e+50 best solution, best possible -742.06041 (3183.46 seconds)
Cbc0010I After 10300 nodes, 5148 on tree, 1e+50 best solution, best possible -742.06041 (3200.56 seconds)
Cbc0010I After 10400 nodes, 5198 on tree, 1e+50 best solution, best possible -742.06041 (3217.95 seconds)
Cbc0010I After 10500 nodes, 5248 on tree, 1e+50 best solution, best possible -742.06041 (3235.50 seconds)
Cbc0010I After 10600 nodes, 5298 on tree, 1e+50 best solution, best possible -742.06041 (3252.57 seconds)
Cbc0010I After 10700 nodes, 5348 on tree, 1e+50 best solution, best possible -742.06041 (3269.52 seconds)
Cbc0010I After 10800 nodes, 5398 on tree, 1e+50 best solution, best possible -742.06041 (3284.72 seconds)
Cbc0010I After 10900 nodes, 5448 on tree, 1e+50 best solution, best possible -742.06041 (3297.74 seconds)
Cbc0010I After 11000 nodes, 5498 on tree, 1e+50 best solution, best possible -742.06041 (3310.52 seconds)
Cbc0010I After 11100 nodes, 5548 on tree, 1e+50 best solution, best possible -742.06041 (3325.22 seconds)
Cbc0010I After 11200 nodes, 5598 on tree, 1e+50 best solution, best possible -742.06041 (3342.52 seconds)
Cbc0010I After 11300 nodes, 5648 on tree, 1e+50 best solution, best possible -742.06041 (3359.78 seconds)
Cbc0010I After 11400 nodes, 5698 on tree, 1e+50 best solution, best possible -742.06041 (3377.24 seconds)
Cbc0010I After 11500 nodes, 5748 on tree, 1e+50 best solution, best possible -742.06041 (3393.89 seconds)
Cbc0010I After 11600 nodes, 5798 on tree, 1e+50 best solution, best possible -742.06041 (3411.23 seconds)
Cbc0010I After 11700 nodes, 5848 on tree, 1e+50 best solution, best possible -742.06041 (3426.15 seconds)
Cbc0010I After 11800 nodes, 5898 on tree, 1e+50 best solution, best possible -742.06041 (3442.66 seconds)
Cbc0010I After 11900 nodes, 5948 on tree, 1e+50 best solution, best possible -742.06041 (3457.41 seconds)
Cbc0010I After 12000 nodes, 5998 on tree, 1e+50 best solution, best possible -742.06041 (3472.93 seconds)
Cbc0010I After 12100 nodes, 6048 on tree, 1e+50 best solution, best possible -742.06041 (3490.29 seconds)
Cbc0010I After 12200 nodes, 6098 on tree, 1e+50 best solution, best possible -742.06041 (3508.88 seconds)
Cbc0010I After 12300 nodes, 6148 on tree, 1e+50 best solution, best possible -742.06041 (3526.89 seconds)
Cbc0010I After 12400 nodes, 6198 on tree, 1e+50 best solution, best possible -742.06041 (3545.08 seconds)
Cbc0010I After 12500 nodes, 6248 on tree, 1e+50 best solution, best possible -742.06041 (3564.02 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -742.06041), took 182336 iterations and 12588 nodes (3625.79 seconds)
Cbc0035I Maximum depth 4110, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5641
Linearization cuts added in total:           5641  (separation time: 0.036181s)
Total solve time:                         3626.09s (3626.09s in branch-and-bound)
Lower bound:                              -742.06
Upper bound:                              1110.89  (gap: 249.37%)
Branch-and-bound nodes:                     12588
Stats: /tmp/jl_oBJE2v/model.nl 1200 [var]  400 [int]  840 [con] 2802 [aux]   5641 [root]     5641 [tot] 0.036181 [sep]  3626.09 [time]   3626.1 [bb]        -7.420604e+02 [lower]         1.110892e+03 [upper]   12588 [nodes]
Performance of                           FBBT:	    293.763s,    22649 runs. fix:          0 shrnk:    8.37288 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    243.773s,        9 runs. fix:          0 shrnk:  0.0464182 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
