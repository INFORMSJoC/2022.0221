solving instance transportation 5 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 277.55056      164 0.265303
NLP0014I             2         OPT 258.58646       91 0.130398
Couenne: new cutoff value 2.5858646356e+02 (0.415751 seconds)
Loaded instance "/tmp/jl_iVobjC/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           52 (0 integer)

Coin0506I Presolve 176 (-60) rows, 66 (-61) columns and 406 (-121) elements
Clp0006I 0  Obj 0 Primal inf 281.18278 (5)
Clp0006I 42  Obj 106.45854 Primal inf 197.54358 (13)
Clp0006I 58  Obj 210.4105
Clp0000I Optimal - objective value 210.4105
Clp0032I Optimal objective 210.4104998 - 58 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 210.4105
NLP Heuristic: NLP0014I             3         OPT 262.8288       13 0.017179
no solution.
Clp0000I Optimal - objective value 210.4105
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from 210.4105 to 210.4105 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.11 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 4 improved bounds
Couenne: new cutoff value 2.4204944147e+02 (0.80863 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 4 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 4 improved bounds
Cbc0010I After 100 nodes, 11 on tree, 1e+50 best solution, best possible 242.04941 (1.90 seconds)
Cbc0010I After 200 nodes, 13 on tree, 1e+50 best solution, best possible 242.04943 (2.03 seconds)
Cbc0010I After 300 nodes, 25 on tree, 1e+50 best solution, best possible 242.04943 (2.16 seconds)
Cbc0010I After 400 nodes, 33 on tree, 1e+50 best solution, best possible 242.04943 (2.30 seconds)
Cbc0010I After 500 nodes, 36 on tree, 1e+50 best solution, best possible 242.04944 (2.44 seconds)
Cbc0010I After 600 nodes, 40 on tree, 1e+50 best solution, best possible 242.04944 (2.58 seconds)
Cbc0010I After 700 nodes, 56 on tree, 1e+50 best solution, best possible 242.04944 (2.71 seconds)
Couenne: new cutoff value 2.4204944085e+02 (3.24908 seconds)
Cbc0010I After 800 nodes, 70 on tree, 1e+50 best solution, best possible 242.04944 (2.85 seconds)
Cbc0010I After 900 nodes, 79 on tree, 1e+50 best solution, best possible 242.04944 (2.99 seconds)
Cbc0010I After 1000 nodes, 87 on tree, 1e+50 best solution, best possible 242.04944 (3.14 seconds)
Cbc0010I After 1100 nodes, 94 on tree, 1e+50 best solution, best possible 242.04944 (3.30 seconds)
Cbc0010I After 1200 nodes, 95 on tree, 1e+50 best solution, best possible 242.04944 (3.45 seconds)
Couenne: new cutoff value 2.4204944071e+02 (3.98602 seconds)
Cbc0010I After 1300 nodes, 103 on tree, 1e+50 best solution, best possible 242.04944 (3.60 seconds)
Cbc0010I After 1400 nodes, 97 on tree, 1e+50 best solution, best possible 242.04944 (3.74 seconds)
Cbc0010I After 1500 nodes, 97 on tree, 1e+50 best solution, best possible 242.04944 (3.89 seconds)
Cbc0010I After 1600 nodes, 97 on tree, 1e+50 best solution, best possible 242.04944 (4.02 seconds)
Cbc0010I After 1700 nodes, 90 on tree, 1e+50 best solution, best possible 242.04944 (4.15 seconds)
Cbc0010I After 1800 nodes, 86 on tree, 1e+50 best solution, best possible 242.04944 (4.29 seconds)
Cbc0010I After 1900 nodes, 74 on tree, 1e+50 best solution, best possible 242.04944 (4.42 seconds)
Cbc0010I After 2000 nodes, 56 on tree, 1e+50 best solution, best possible 242.04944 (4.57 seconds)
Cbc0010I After 2100 nodes, 38 on tree, 1e+50 best solution, best possible 242.04944 (4.70 seconds)
Cbc0001I Search completed - best objective 1e+50, took 7777 iterations and 2190 nodes (4.80 seconds)
Cbc0035I Maximum depth 68, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        236
Linearization cuts added in total:            236  (separation time: 0.000574s)
Total solve time:                         4.80634s (4.80634s in branch-and-bound)
Lower bound:                              242.049
Upper bound:                              242.049  (gap: 0.00%)
Branch-and-bound nodes:                      2190
Stats: /tmp/jl_iVobjC/model.nl   75 [var]   25 [int]   60 [con]   52 [aux]    236 [root]      236 [tot] 0.000574 [sep]  4.80634 [time]  4.80653 [bb]         2.420494e+02 [lower]         2.420494e+02 [upper]    2190 [nodes]
Performance of                           FBBT:	   0.155639s,     1791 runs. fix:   0.228211 shrnk:    7.63777 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.185692s,        9 runs. fix:     0.4375 shrnk:    3.58452 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
