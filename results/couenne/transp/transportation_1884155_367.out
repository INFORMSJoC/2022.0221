solving instance transportation 20 7 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 33.234888       55 0.701662
NLP0014I             2         OPT 181.33928       75 0.731398
Couenne: new cutoff value 1.8133928071e+02 (32.1627 seconds)
Loaded instance "/tmp/jl_wnoYwq/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6039 (-1202) rows, 1999 (-1603) columns and 13597 (-2805) elements
Clp0006I 0  Obj 0 Primal inf 22858.657 (3464)
Clp0006I 195  Obj 1.029022e-13 Primal inf 36102.601 (3808)
Clp0006I 390  Obj 1.8800109e-13 Primal inf 66053.618 (4102)
Clp0006I 585  Obj 4.1905772e-12 Primal inf 40152.776 (3890)
Clp0006I 780  Obj 3.2061775e-11 Primal inf 25086.728 (3485)
Clp0006I 975  Obj 1.6057466e-11 Primal inf 26682.224 (2721)
Clp0006I 1170  Obj 1.6825212e-11 Primal inf 7752.5706 (1999)
Clp0006I 1365  Obj 1.6812385e-11 Primal inf 11134.07 (1559)
Clp0006I 1560  Obj 1.673811e-11 Primal inf 20402.307 (1190)
Clp0006I 1755  Obj 1.8187404e-11 Primal inf 21370.079 (981)
Clp0006I 1950  Obj 1.9555535e-11 Primal inf 26306.425 (818)
Clp0006I 2105  Obj 9.4921818e-05 Primal inf 2636778.8 (838)
Clp0006I 2122  Obj 0.0032499863 Primal inf 116011.42 (789)
Clp0006I 2133  Obj 0.0054470407 Primal inf 146111.64 (801)
Clp0006I 2173  Obj 0.0069652161 Primal inf 21755939 (867)
Clp0006I 2368  Obj 0.0084373408 Primal inf 4919608.9 (1122)
Clp0006I 2563  Obj 0.0085473785 Primal inf 1938468.2 (1451)
Clp0006I 2758  Obj 0.015008627 Primal inf 1.5351212e+08 (1492)
Clp0006I 2953  Obj 0.016504284 Primal inf 6445431.6 (1408)
Clp0006I 3148  Obj 0.017790297 Primal inf 5679895.3 (1245)
Clp0006I 3293  Obj 0.019606344 Primal inf 7798900.3 (1178)
Clp0006I 3455  Obj 0.021581168 Primal inf 11735990 (1110)
Clp0006I 3517  Obj 0.024197691 Primal inf 7832829.6 (1050)
Clp0006I 3624  Obj 0.02598472 Primal inf 23514385 (1039)
Clp0006I 3795  Obj 0.028111406 Primal inf 30459934 (906)
Clp0006I 3950  Obj 0.032605297 Primal inf 1.351101e+08 (781)
Clp0006I 3968  Obj 0.034950126 Primal inf 10106671 (773)
Clp0006I 4163  Obj 0.079116501 Primal inf 7918438.4 (678)
Clp0006I 4358  Obj 0.50922167 Primal inf 6742892.7 (462)
Clp0006I 4468  Obj 0.61105607 Primal inf 9321722.4 (388)
Clp0006I 4627  Obj 0.83397594 Primal inf 34570.375 (280)
Clp0006I 4787  Obj 1.1130396 Primal inf 3670.7194 (62)
Clp0006I 4834  Obj 1.1351292
Clp0006I 4834  Obj 1.1133904 Dual inf 0.46288163 (5)
Clp0006I 4840  Obj 1.1133344
Clp0000I Optimal - objective value 1.1133344
Clp0032I Optimal objective 1.113334442 - 4840 iterations time 0.932, Presolve 0.02
Clp0000I Optimal - objective value 1.1133344
NLP Heuristic: NLP0014I             3      INFEAS 78.110948      108 1.583139
no solution.
Clp0000I Optimal - objective value 1.1133344
Optimality Based BT: 140 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 178 added rows had average density of 2
Cbc0013I At root node, 178 cuts changed objective from 1.1133344 to 1.1601873 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 695 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (135.98 seconds)
Optimality Based BT: 102 improved bounds
Optimality Based BT: 85 improved bounds
Optimality Based BT: 137 improved bounds
Optimality Based BT: 96 improved bounds
Optimality Based BT: 84 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 1.1707642 (1161.79 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 1.1707642 (1179.00 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 1.1707642 (1196.83 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 1.1707642 (1213.41 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 1.1707642 (1229.35 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 1.1707642 (1245.16 seconds)
Cbc0010I After 700 nodes, 348 on tree, 1e+50 best solution, best possible 1.1707642 (1262.01 seconds)
Cbc0010I After 800 nodes, 390 on tree, 1e+50 best solution, best possible 1.1707642 (1278.51 seconds)
Optimality Based BT: 111 improved bounds
Optimality Based BT: 108 improved bounds
Optimality Based BT: 117 improved bounds
Cbc0010I After 900 nodes, 437 on tree, 1e+50 best solution, best possible 1.1743724 (1908.16 seconds)
Cbc0010I After 1000 nodes, 487 on tree, 1e+50 best solution, best possible 1.1743724 (1926.49 seconds)
Cbc0010I After 1100 nodes, 537 on tree, 1e+50 best solution, best possible 1.1743724 (1944.30 seconds)
Cbc0010I After 1200 nodes, 587 on tree, 1e+50 best solution, best possible 1.1743724 (1960.96 seconds)
Cbc0010I After 1300 nodes, 637 on tree, 1e+50 best solution, best possible 1.1743724 (1977.20 seconds)
Cbc0010I After 1400 nodes, 687 on tree, 1e+50 best solution, best possible 1.1743724 (1992.84 seconds)
Cbc0010I After 1500 nodes, 730 on tree, 1e+50 best solution, best possible 1.1743724 (2009.53 seconds)
Cbc0010I After 1600 nodes, 770 on tree, 1e+50 best solution, best possible 1.1743724 (2029.19 seconds)
Optimality Based BT: 115 improved bounds
Optimality Based BT: 98 improved bounds
Cbc0010I After 1700 nodes, 816 on tree, 1e+50 best solution, best possible 1.1809245 (2554.77 seconds)
Cbc0010I After 1800 nodes, 866 on tree, 1e+50 best solution, best possible 1.1809245 (2572.59 seconds)
Cbc0010I After 1900 nodes, 916 on tree, 1e+50 best solution, best possible 1.1809245 (2590.63 seconds)
Cbc0010I After 2000 nodes, 966 on tree, 1e+50 best solution, best possible 1.1809245 (2607.60 seconds)
Cbc0010I After 2100 nodes, 1016 on tree, 1e+50 best solution, best possible 1.1809245 (2623.82 seconds)
Cbc0010I After 2200 nodes, 1066 on tree, 1e+50 best solution, best possible 1.1809245 (2639.60 seconds)
Cbc0010I After 2300 nodes, 1113 on tree, 1e+50 best solution, best possible 1.1809245 (2655.57 seconds)
Cbc0010I After 2400 nodes, 1158 on tree, 1e+50 best solution, best possible 1.1809245 (2673.89 seconds)
Optimality Based BT: 108 improved bounds
Optimality Based BT: 148 improved bounds
Cbc0010I After 2500 nodes, 1204 on tree, 1e+50 best solution, best possible 1.1926536 (2977.93 seconds)
Cbc0010I After 2600 nodes, 1254 on tree, 1e+50 best solution, best possible 1.1926536 (2995.58 seconds)
Cbc0010I After 2700 nodes, 1304 on tree, 1e+50 best solution, best possible 1.1926536 (3013.05 seconds)
Cbc0010I After 2800 nodes, 1354 on tree, 1e+50 best solution, best possible 1.1926536 (3030.05 seconds)
Cbc0010I After 2900 nodes, 1404 on tree, 1e+50 best solution, best possible 1.1926536 (3046.55 seconds)
Cbc0010I After 3000 nodes, 1454 on tree, 1e+50 best solution, best possible 1.1926536 (3062.56 seconds)
Cbc0010I After 3100 nodes, 1501 on tree, 1e+50 best solution, best possible 1.1926536 (3079.32 seconds)
Cbc0010I After 3200 nodes, 1541 on tree, 1e+50 best solution, best possible 1.1926536 (3096.61 seconds)
Optimality Based BT: 113 improved bounds
Cbc0010I After 3300 nodes, 1587 on tree, 1e+50 best solution, best possible 1.1927521 (3328.30 seconds)
Cbc0010I After 3400 nodes, 1637 on tree, 1e+50 best solution, best possible 1.1927521 (3346.58 seconds)
Cbc0010I After 3500 nodes, 1687 on tree, 1e+50 best solution, best possible 1.1927521 (3364.35 seconds)
Cbc0010I After 3600 nodes, 1737 on tree, 1e+50 best solution, best possible 1.1927521 (3381.13 seconds)
Cbc0010I After 3700 nodes, 1787 on tree, 1e+50 best solution, best possible 1.1927521 (3397.30 seconds)
Cbc0010I After 3800 nodes, 1837 on tree, 1e+50 best solution, best possible 1.1927521 (3413.18 seconds)
Cbc0010I After 3900 nodes, 1884 on tree, 1e+50 best solution, best possible 1.1927521 (3430.19 seconds)
Optimality Based BT: 100 improved bounds
Cbc0010I After 4000 nodes, 1926 on tree, 1e+50 best solution, best possible 1.1961658 (3517.53 seconds)
Cbc0010I After 4100 nodes, 1976 on tree, 1e+50 best solution, best possible 1.1961658 (3535.77 seconds)
Cbc0010I After 4200 nodes, 2026 on tree, 1e+50 best solution, best possible 1.1961658 (3553.89 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 1.1961658), took 420138 iterations and 4276 nodes (3572.19 seconds)
Cbc0035I Maximum depth 410, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.045113s)
Total solve time:                         3573.12s (3573.12s in branch-and-bound)
Lower bound:                              1.19617
Upper bound:                              181.339  (gap: 8202.62%)
Branch-and-bound nodes:                      4276
Stats: /tmp/jl_wnoYwq/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.045113 [sep]  3573.12 [time]  3573.12 [bb]         1.196166e+00 [lower]         1.813393e+02 [upper]    4276 [nodes]
Performance of                           FBBT:	    111.426s,     8632 runs. fix:          0 shrnk:    91.4777 ubd:          0 2ubd:          0 infeas:          7
Performance of                           OBBT:	    648.069s,       15 runs. fix:          0 shrnk:   0.449418 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
f0 = 0.05293446127337052
f0 = 0.06175687148559897
f0 = 0.04852325616725631
f0 = 0.033525158806467996
f0 = 0.050287738209702
f0 = 0.049405497188479156
f0 = 0.023820507573016736
f0 = 0.00441120510611421
f0 = 0.03440739982769084
f0 = 0.009704651233451262
f0 = 0.06616807659171316
f0 = 0.044994292082364946
f0 = 0.07499048680394158
f0 = 0.0644035945492675
f0 = 0.06352135352804462
f0 = 0.06175687148559894
f0 = 0.08469513803739284
f0 = 0.03970084595502791
f0 = 0.05116997923092483
f0 = 0.019409302466902523
f0 = 0.052052220252147674
f0 = 0.02999619472157664
f0 = 0.03881860493380508
f0 = 0.06352135352804464
f0 = 0.03528964084891368
f0 = 0.030878435742799484
f0 = 0.05999238944315328
f0 = 0.07851945088883297
f0 = 0.06616807659171318
f0 = 0.06793255863415887
f0 = 0.08381289701617003
f0 = 0.04940549718847917
f0 = 0.005293446127337054
f0 = 0.01499809736078832
f0 = 0.019409302466902516
f0 = 0.057345666379484746
f0 = 0.04499429208236496
f0 = 0.08204841497372434
f0 = 0.02205602553057105
f0 = 0.053816702294593365
f0 = 0.055581184337039034
f0 = 0.026467230636685272
f0 = 0.04146532799747361
f0 = 0.06175687148559892
f0 = 0.03264291778524514
f0 = 0.029996194721576615
f0 = 0.055581184337039034
f0 = 0.07499048680394155
f0 = 0.06440359454926745
f0 = 0.06440359454926745
f0 = 0.0864596200798385
f0 = 0.04675877412481061
f0 = 0.007940169191005575
f0 = 0.010586892254674109
f0 = 0.014998097360788307
f0 = 0.06175687148559892
f0 = 0.04675877412481061
f0 = 0.0811661739525015
f0 = 0.02029154348812537
f0 = 0.055581184337039034
f0 = 0.003528964084891368
f0 = 0.06352135352804464
f0 = 0.007940169191005578
f0 = 0.025584989615462416
f0 = 0.01764482042445684
f0 = 0.05293446127337052
f0 = 0.027349471657908103
f0 = 0.053816702294593365
f0 = 0.02205602553057105
f0 = 0.052052220252147674
f0 = 0.033525158806467996
f0 = 0.06352135352804462
f0 = 0.04764101514603347
f0 = 0.04058308697625075
f0 = 0.053816702294593365
f0 = 0.010586892254674105
f0 = 0.03881860493380505
f0 = 0.03970084595502791
f0 = 0.04587653310358778
f0 = 0.04058308697625074
f0 = 0.015880338382011156
f0 = 0.07146152271905024
f0 = 0.025584989615462437
f0 = 0.00794016919100558
f0 = 0.032642917785245154
f0 = 0.053816702294593385
f0 = 0.01588033838201116
f0 = 0.033525158806467996
f0 = 0.002646723063668527
f0 = 0.04764101514603349
f0 = 0.026467230636685272
f0 = 0.06175687148559894
f0 = 0.06263911250682179
f0 = 0.05469894331581623
f0 = 0.05822790740070756
f0 = 0.027349471657908114
f0 = 0.055581184337039055
f0 = 0.01852706144567969
f0 = 0.05116997923092483
f0 = 0.02999619472157663
f0 = 0.06175687148559894
f0 = 0.008822410212228423
f0 = 0.05028773820970204
f0 = 0.05999238944315328
f0 = 0.04234756901869642
f0 = 0.01499809736078832
f0 = 0.05469894331581623
f0 = 0.06528583557049034
f0 = 0.06793255863415887
f0 = 0.0458765331035878
f0 = 0.09263530722839845
f0 = 0.017644820424456847
f0 = 0.03970084595502791
f0 = 0.02999619472157664
f0 = 0.017644820424456833
f0 = 0.07410824578271875
f0 = 0.07234376374027307
f0 = 0.08645962007983857
f0 = 0.02293826655179389
f0 = 0.04322981003991926
f0 = 0.023820507573016746
f0 = 0.055581184337039076
f0 = 0.01940930246690254
f0 = 0.04058308697625075
f0 = 0.01852706144567969
f0 = 0.04499429208236496
f0 = 0.042347569018696435
f0 = 0.0644035945492675
f0 = 0.03970084595502791
f0 = 0.06352135352804464
f0 = 0.053816702294593385
f0 = 0.06352135352804464
f0 = 0.026467230636685272
f0 = 0.026467230636685272
f0 = 0.040583086976250723
f0 = 0.030878435742799484
f0 = 0.021173784509348217
f0 = 0.0582279074007076
f0 = 0.03617188187013652
f0 = 0.05116997923092485
f0 = 0.052052220252147674
f0 = 0.07234376374027307
f0 = 0.05646342535826194
f0 = 0.03352515880646801
f0 = 0.054698943315816206
f0 = 0.055581184337039055
f0 = 0.03087843574279947
f0 = 0.00441120510611421
f0 = 0.03705412289135936
f0 = 0.02205602553057105
f0 = 0.06528583557049034
f0 = 0.05116997923092483
f0 = 0.08204841497372431
f0 = 0.07234376374027307
f0 = 0.07057928169782733
f0 = 0.06263911250682179
f0 = 0.09175306620717556
f0 = 0.04146532799747359
f0 = 0.06352135352804462
f0 = 0.024702748594239578
f0 = 0.03528964084891368
f0 = 0.053816702294593385
f0 = 0.03176067676402233
f0 = 0.01588033838201116
f0 = 0.03176067676402231
f0 = 0.03528964084891369
f0 = 0.00794016919100558
f0 = 0.01852706144567969
f0 = 0.027349471657908114
f0 = 0.01852706144567969
f0 = 0.055581184337039076
f0 = 0.039700845955027875
f0 = 0.057345666379484704
f0 = 0.0458765331035878
f0 = 0.048523256167256286
f0 = 0.04940549718847917
f0 = 0.0696970406766045
f0 = 0.03705412289135938
f0 = 0.037936363912582205
f0 = 0.001764482042445684
f0 = 0.032642917785245154
f0 = 0.03528964084891369
f0 = 0.02293826655179389
f0 = 0.032642917785245154
f0 = 0.01323361531834263
f0 = 0.02029154348812537
f0 = 0.02117378450934821
f0 = 0.037936363912582205
f0 = 0.03440739982769084
f0 = 0.033525158806467996
f0 = 0.06352135352804462
f0 = 0.02999619472157663
f0 = 0.03705412289135936
f0 = 0.023820507573016746
f0 = 0.029996194721576615
f0 = 0.04234756901869642
f0 = 0.054698943315816206
f0 = 0.05469894331581623
f0 = 0.02117378450934821
f0 = 0.02205602553057105
f0 = 0.04058308697625075
f0 = 0.10057547641940404
f0 = 0.052934461273370544
f0 = 0.043229810039919284
f0 = 0.059110148421930436
f0 = 0.08469513803739287
f0 = 0.04940549718847917
f0 = 0.055581184337039076
f0 = 0.03352515880646801
f0 = 0.07410824578271875
f0 = 0.013233615318342636
f0 = 0.09263530722839845
f0 = 0.08645962007983857
f0 = 0.07851945088883297
f0 = 0.08998858416472992
f0 = 0.03352515880646801
f0 = 0.0688147996553817
f0 = 0.023820507573016746
f0 = 0.08469513803739287
f0 = 0.06087463046437613
f0 = 0.022056025530571042
f0 = 0.04499429208236496
f0 = 0.006175687148559892
f0 = 0.025584989615462406
f0 = 0.0008822410212228417
f0 = 0.034407399827690824
f0 = 0.022938266551793884
f0 = 0.044112051061142084
f0 = 0.03087843574279946
f0 = 0.04764101514603345
f0 = 0.050287738209701976
f0 = 0.04675877412481061
f0 = 0.03617188187013651
f0 = 0.0229382665517939
f0 = 0.03617188187013651
f0 = 0.0317606767640223
f0 = 0.044112051061142084
f0 = 0.046758774124810644
f0 = 0.027349471657908103
f0 = 0.027349471657908093
f0 = 0.04234756901869642
f0 = 0.043229810039919284
f0 = 0.03881860493380508
f0 = 0.027349471657908114
f0 = 0.03528964084891368
f0 = 0.03176067676402232
f0 = 0.021173784509348217
f0 = 0.025584989615462427
f0 = 0.03528964084891369
f0 = 0.01146913327589695
f0 = 0.06793255863415887
f0 = 0.02823171267913096
f0 = 0.0582279074007076
f0 = 0.04058308697625075
f0 = 0.039700845955027875
f0 = 0.055581184337039076
f0 = 0.07234376374027307
f0 = 0.05116997923092485
f0 = 0.03617188187013652
f0 = 0.009704651233451262
f0 = 0.00352896408489137
f0 = 0.06616807659171318
f0 = 0.012351374297119798
f0 = 0.01411585633956548
f0 = 0.019409302466902534
f0 = 0.046758774124810644
f0 = 0.0229382665517939
f0 = 0.04499429208236496
f0 = 0.013233615318342636
f0 = 0.0458765331035878
f0 = 0.0291139537003538
f0 = 0.06175687148559897
f0 = 0.04940549718847917
f0 = 0.04058308697625075
f0 = 0.053816702294593344
f0 = 0.017644820424456847
f0 = 0.046758774124810644
f0 = 0.03176067676402232
f0 = 0.04234756901869642
f0 = 0.02999619472157664
f0 = 0.025584989615462416
f0 = 0.042347569018696435
f0 = 0.01764482042445684
f0 = 0.02293826655179389
f0 = 0.00882241021222842
f0 = 0.02999619472157663
f0 = 0.019409302466902523
f0 = 0.0441120510611421
f0 = 0.02999619472157663
f0 = 0.039700845955027896
f0 = 0.052052220252147674
f0 = 0.03881860493380505
f0 = 0.03440739982769084
f0 = 0.025584989615462427
f0 = 0.03440739982769084
f0 = 0.039700845955027896
f0 = 0.04852325616725631
f0 = 0.04852325616725633
f0 = 0.025584989615462416
f0 = 0.024702748594239578
f0 = 0.053816702294593365
f0 = 0.04764101514603349
f0 = 0.05116997923092483
f0 = 0.03705412289135936
f0 = 0.04587653310358778
f0 = 0.03617188187013652
f0 = 0.032642917785245154
f0 = 0.024702748594239578
f0 = 0.04764101514603347
f0 = 0.0061756871485598944
f0 = 0.07675496884638726
f0 = 0.027349471657908103
f0 = 0.07057928169782736
f0 = 0.057345666379484746
f0 = 0.053816702294593344
f0 = 0.06440359454926747
f0 = 0.08469513803739284
f0 = 0.057345666379484746
f0 = 0.04322981003991926
f0 = 0.02117378450934821
f0 = 0.010586892254674105
f0 = 0.057345666379484746
f0 = 0.005293446127337057
f0 = 0.02999619472157664
f0 = 0.016762579403233998
f0 = 0.04499429208236496
f0 = 0.03705412289135938
f0 = 0.055581184337039076
f0 = 0.03352515880646801
f0 = 0.06087463046437613
f0 = 0.04058308697625075
f0 = 0.05999238944315328
f0 = 0.03528964084891369
f0 = 0.03264291778524517
f0 = 0.04322981003991925
f0 = 0.016762579403234005
f0 = 0.0291139537003538
f0 = 0.04852325616725633
f0 = 0.03528964084891368
f0 = 0.04234756901869642
f0 = 0.04146532799747357
f0 = 0.057345666379484746
f0 = 0.033525158806468024
f0 = 0.06263911250682182
f0 = 0.03528964084891368
f0 = 0.05028773820970202
f0 = 0.06087463046437608
f0 = 0.0846951380373928
f0 = 0.06087463046437608
f0 = 0.0811661739525015
f0 = 0.06705031761293602
f0 = 0.06881479965538165
f0 = 0.0211737845093482
f0 = 0.02999619472157664
f0 = 0.040583086976250723
f0 = 0.042347569018696435
f0 = 0.017644820424456833
f0 = 0.07587272782516444
f0 = 0.03705412289135936
f0 = 0.0608746304643761
f0 = 0.04058308697625074
f0 = 0.03793636391258222
f0 = 0.030878435742799498
f0 = 0.0291139537003538
f0 = 0.025584989615462416
f0 = 0.021173784509348217
f0 = 0.023820507573016746
f0 = 0.03176067676402232
f0 = 0.03528964084891369
f0 = 0.026467230636685272
f0 = 0.0644035945492675
f0 = 0.023820507573016746
f0 = 0.046758774124810644
f0 = 0.030878435742799484
f0 = 0.03264291778524514
f0 = 0.052934461273370544
f0 = 0.0644035945492675
f0 = 0.055581184337039076
f0 = 0.02293826655179389
f0 = 0.01323361531834263
f0 = 0.044994292082364946
f0 = 0.01852706144567969
f0 = 0.034407399827690865
f0 = 0.046758774124810644
f0 = 0.025584989615462416
f0 = 0.00794016919100558
f0 = 0.03793636391258222
f0 = 0.05028773820970202
f0 = 0.05028773820970202
f0 = 0.042347569018696435
f0 = 0.07763720986761014
f0 = 0.019409302466902523
f0 = 0.03176067676402231
f0 = 0.020291543488125376
f0 = 0.01588033838201115
f0 = 0.0582279074007076
f0 = 0.06352135352804462
f0 = 0.06969704067660455
f0 = 0.010586892254674105
f0 = 0.02911395370035379
