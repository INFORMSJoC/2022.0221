solving instance transportation 5 3 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 90.265107       33 0.038085
NLP0014I             2         OPT 238.51536       43 0.050554
Couenne: new cutoff value 2.3851536312e+02 (0.109153 seconds)
Loaded instance "/tmp/jl_cWyJ6I/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           27 (0 integer)

Coin0506I Presolve 151 (-36) rows, 65 (-37) columns and 356 (-73) elements
Clp0006I 0  Obj 0.45906643 Primal inf 3397.5811 (5)
Clp0006I 38  Obj 38.20107 Primal inf 3396.6891 (25)
Clp0006I 75  Obj 81.508547
Clp0000I Optimal - objective value 81.508547
Clp0032I Optimal objective 81.50854668 - 75 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 81.508547
NLP Heuristic: NLP0014I             3         OPT 90.265107       15 0.01707
no solution.
Clp0000I Optimal - objective value 81.508547
Optimality Based BT: 0 improved bounds
Probing: Couenne: new cutoff value 9.6947183675e+01 (0.154492 seconds)
0 improved bounds
Couenne: new cutoff value 9.0265115206e+01 (0.249255 seconds)
NLP Heuristic: time limit reached.
Cbc0031I 41 added rows had average density of 2
Cbc0013I At root node, 41 cuts changed objective from 81.508547 to 90.265115 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 393 row cuts average 2.0 elements, 9 column cuts (9 active)
Cbc0004I Integer solution of 90.265115 found after 306 iterations and 0 nodes (0.14 seconds)
Cbc0001I Search completed - best objective 90.26511523683961, took 306 iterations and 0 nodes (0.14 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        187
Linearization cuts added in total:            187  (separation time: 0.000482s)
Total solve time:                        0.141176s (0.141175s in branch-and-bound)
Lower bound:                              90.2651
Upper bound:                              90.2651  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_cWyJ6I/model.nl   75 [var]   25 [int]   60 [con]   27 [aux]    187 [root]      187 [tot] 0.000482 [sep] 0.141178 [time] 0.141357 [bb]         9.026512e+01 [lower]         9.026512e+01 [upper]       0 [nodes]
Performance of                           FBBT:	   0.001025s,       19 runs. fix:          0 shrnk:    33.3211 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.023297s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
