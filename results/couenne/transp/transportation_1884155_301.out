solving instance transportation 20 1 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 936.0132      118 1.720597
NLP0014I             2      INFEAS 39.812148       50 0.548994
Loaded instance "/tmp/jl_6WujLx/model.nl"
Constraints:          840
Variables:           1200 (400 integer)
Auxiliaries:         2402 (0 integer)

Coin0506I Presolve 6040 (-1201) rows, 2000 (-1602) columns and 13200 (-3202) elements
Clp0006I 0  Obj 0 Primal inf 13582.052 (3541)
Clp0006I 195  Obj 7.2187778e-14 Primal inf 20842.964 (3733)
Clp0006I 390  Obj 2.5993464e-13 Primal inf 35591.841 (3822)
Clp0006I 585  Obj 1.1983944e-12 Primal inf 20012.553 (3421)
Clp0006I 780  Obj 2.9708456e-12 Primal inf 21546.232 (3089)
Clp0006I 975  Obj 6.9469487e-12 Primal inf 28894.985 (2823)
Clp0006I 1170  Obj 6.0575855e-12 Primal inf 124200.73 (2632)
Clp0006I 1365  Obj 4.5218016e-10 Primal inf 340131.62 (2496)
Clp0006I 1560  Obj 0.00015486051 Primal inf 367394.56 (2282)
Clp0006I 1755  Obj 0.0016244176 Primal inf 508725.19 (2050)
Clp0006I 1950  Obj 0.0028949614 Primal inf 209949.34 (1727)
Clp0006I 2126  Obj 0.0059316374 Primal inf 321152.94 (1549)
Clp0006I 2318  Obj 0.026847353 Primal inf 410232.07 (1134)
Clp0006I 2507  Obj 17.890792 Primal inf 529714.63 (996)
Clp0006I 2663  Obj 46.248944 Primal inf 352876.92 (840)
Clp0006I 2858  Obj 72.039861 Primal inf 181860.26 (669)
Clp0006I 3040  Obj 82.87194 Primal inf 485279.62 (578)
Clp0006I 3232  Obj 106.42365 Primal inf 429347.74 (747)
Clp0006I 3299  Obj 106.55073 Primal inf 322197.29 (659)
Clp0006I 3434  Obj 141.45203 Primal inf 478811.4 (586)
Clp0006I 3628  Obj 168.58073 Primal inf 148566.27 (406)
Clp0006I 3823  Obj 248.47962 Primal inf 51981.642 (291)
Clp0006I 4018  Obj 298.98042 Primal inf 41573.084 (250)
Clp0006I 4119  Obj 328.63997 Primal inf 26203.7 (172)
Clp0006I 4218  Obj 426.39389
Clp0000I Optimal - objective value 426.38811
Clp0032I Optimal objective 426.3881055 - 4218 iterations time 0.852, Presolve 0.02
Clp0000I Optimal - objective value 426.38811
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 426.38811
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 108 added rows had average density of 2
Cbc0013I At root node, 108 cuts changed objective from 426.38811 to 434.58862 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 594 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (84.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 441.99137 (702.04 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 441.99137 (717.45 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 441.99137 (731.26 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 441.99137 (744.98 seconds)
Cbc0010I After 500 nodes, 249 on tree, 1e+50 best solution, best possible 441.99137 (757.86 seconds)
Cbc0010I After 600 nodes, 297 on tree, 1e+50 best solution, best possible 441.99137 (770.24 seconds)
Cbc0010I After 700 nodes, 342 on tree, 1e+50 best solution, best possible 441.99137 (782.65 seconds)
Cbc0010I After 800 nodes, 385 on tree, 1e+50 best solution, best possible 441.99137 (795.13 seconds)
Cbc0010I After 900 nodes, 422 on tree, 1e+50 best solution, best possible 441.99137 (807.03 seconds)
Cbc0010I After 1000 nodes, 462 on tree, 1e+50 best solution, best possible 441.99137 (818.53 seconds)
Cbc0010I After 1100 nodes, 494 on tree, 1e+50 best solution, best possible 441.99137 (827.98 seconds)
Couenne: new cutoff value 3.2188119120e+03 (845.263 seconds)
Cbc0004I Integer solution of 3218.8119 found after 96176 iterations and 1163 nodes (833.83 seconds)
Optimality Based BT: 243 improved bounds
Optimality Based BT: 218 improved bounds
Cbc0010I After 1200 nodes, 467 on tree, 3218.8119 best solution, best possible 444.09318 (1097.34 seconds)
Cbc0010I After 1300 nodes, 517 on tree, 3218.8119 best solution, best possible 444.09318 (1115.03 seconds)
Cbc0010I After 1400 nodes, 567 on tree, 3218.8119 best solution, best possible 444.09318 (1132.17 seconds)
Cbc0010I After 1500 nodes, 617 on tree, 3218.8119 best solution, best possible 444.09318 (1150.30 seconds)
Cbc0010I After 1600 nodes, 667 on tree, 3218.8119 best solution, best possible 444.09318 (1167.43 seconds)
Cbc0010I After 1700 nodes, 716 on tree, 3218.8119 best solution, best possible 444.09318 (1183.61 seconds)
Cbc0010I After 1800 nodes, 761 on tree, 3218.8119 best solution, best possible 444.09318 (1199.01 seconds)
Cbc0010I After 1900 nodes, 795 on tree, 3218.8119 best solution, best possible 444.09318 (1214.11 seconds)
Cbc0010I After 2000 nodes, 829 on tree, 3218.8119 best solution, best possible 444.09318 (1230.06 seconds)
Cbc0010I After 2100 nodes, 863 on tree, 3218.8119 best solution, best possible 444.09318 (1244.98 seconds)
Cbc0010I After 2200 nodes, 889 on tree, 3218.8119 best solution, best possible 444.09318 (1257.87 seconds)
Cbc0010I After 2300 nodes, 913 on tree, 3218.8119 best solution, best possible 444.09318 (1268.48 seconds)
Couenne: new cutoff value 3.0545040421e+03 (1280.84 seconds)
Cbc0004I Integer solution of 3054.504 found after 184282 iterations and 2307 nodes (1269.41 seconds)
Optimality Based BT: 224 improved bounds
Optimality Based BT: 228 improved bounds
Optimality Based BT: 148 improved bounds
Optimality Based BT: 141 improved bounds
Cbc0010I After 2400 nodes, 850 on tree, 3054.504 best solution, best possible 446.06629 (1817.03 seconds)
Cbc0010I After 2500 nodes, 900 on tree, 3054.504 best solution, best possible 446.06629 (1834.90 seconds)
Cbc0010I After 2600 nodes, 950 on tree, 3054.504 best solution, best possible 446.06629 (1852.32 seconds)
Cbc0010I After 2700 nodes, 1000 on tree, 3054.504 best solution, best possible 446.06629 (1869.74 seconds)
Cbc0010I After 2800 nodes, 1050 on tree, 3054.504 best solution, best possible 446.06629 (1886.53 seconds)
Cbc0010I After 2900 nodes, 1100 on tree, 3054.504 best solution, best possible 446.06629 (1906.33 seconds)
Cbc0010I After 3000 nodes, 1143 on tree, 3054.504 best solution, best possible 446.06629 (1925.98 seconds)
Cbc0010I After 3100 nodes, 1187 on tree, 3054.504 best solution, best possible 446.06629 (1946.12 seconds)
Cbc0010I After 3200 nodes, 1235 on tree, 3054.504 best solution, best possible 447.15105 (2131.65 seconds)
Cbc0010I After 3300 nodes, 1285 on tree, 3054.504 best solution, best possible 447.15105 (2148.92 seconds)
Cbc0010I After 3400 nodes, 1335 on tree, 3054.504 best solution, best possible 447.15105 (2166.62 seconds)
Cbc0010I After 3500 nodes, 1384 on tree, 3054.504 best solution, best possible 447.15105 (2183.70 seconds)
Cbc0010I After 3600 nodes, 1434 on tree, 3054.504 best solution, best possible 447.15105 (2200.23 seconds)
Cbc0010I After 3700 nodes, 1483 on tree, 3054.504 best solution, best possible 447.15105 (2216.11 seconds)
Cbc0010I After 3800 nodes, 1529 on tree, 3054.504 best solution, best possible 447.15105 (2231.52 seconds)
Cbc0010I After 3900 nodes, 1566 on tree, 3054.504 best solution, best possible 447.15105 (2246.76 seconds)
Optimality Based BT: 245 improved bounds
Cbc0010I After 4000 nodes, 1612 on tree, 3054.504 best solution, best possible 448.73188 (2569.76 seconds)
Cbc0010I After 4100 nodes, 1662 on tree, 3054.504 best solution, best possible 448.73188 (2587.37 seconds)
Cbc0010I After 4200 nodes, 1712 on tree, 3054.504 best solution, best possible 448.73188 (2605.27 seconds)
Cbc0010I After 4300 nodes, 1757 on tree, 3054.504 best solution, best possible 448.73188 (2621.75 seconds)
Cbc0010I After 4400 nodes, 1807 on tree, 3054.504 best solution, best possible 448.73188 (2638.18 seconds)
Cbc0010I After 4500 nodes, 1855 on tree, 3054.504 best solution, best possible 448.73188 (2654.12 seconds)
Cbc0010I After 4600 nodes, 1903 on tree, 3054.504 best solution, best possible 448.73188 (2669.51 seconds)
Cbc0010I After 4700 nodes, 1938 on tree, 3054.504 best solution, best possible 449.82043 (2686.82 seconds)
Cbc0010I After 4800 nodes, 1988 on tree, 3054.504 best solution, best possible 449.82043 (2711.86 seconds)
Cbc0010I After 4900 nodes, 2038 on tree, 3054.504 best solution, best possible 449.82043 (2729.25 seconds)
Cbc0010I After 5000 nodes, 2088 on tree, 3054.504 best solution, best possible 449.82043 (2747.21 seconds)
Cbc0010I After 5100 nodes, 2138 on tree, 3054.504 best solution, best possible 449.82043 (2764.32 seconds)
Cbc0010I After 5200 nodes, 2187 on tree, 3054.504 best solution, best possible 449.82043 (2780.84 seconds)
Cbc0010I After 5300 nodes, 2232 on tree, 3054.504 best solution, best possible 449.82043 (2796.16 seconds)
Cbc0010I After 5400 nodes, 2274 on tree, 3054.504 best solution, best possible 449.82043 (2811.54 seconds)
Cbc0010I After 5500 nodes, 2309 on tree, 3054.504 best solution, best possible 450.44172 (2829.26 seconds)
Cbc0010I After 5600 nodes, 2359 on tree, 3054.504 best solution, best possible 450.44172 (2847.76 seconds)
Cbc0010I After 5700 nodes, 2409 on tree, 3054.504 best solution, best possible 450.44172 (2865.72 seconds)
Cbc0010I After 5800 nodes, 2458 on tree, 3054.504 best solution, best possible 450.44172 (2883.50 seconds)
Cbc0010I After 5900 nodes, 2508 on tree, 3054.504 best solution, best possible 450.44172 (2900.59 seconds)
Cbc0010I After 6000 nodes, 2558 on tree, 3054.504 best solution, best possible 450.44172 (2917.49 seconds)
Cbc0010I After 6100 nodes, 2608 on tree, 3054.504 best solution, best possible 450.44172 (2933.08 seconds)
Cbc0010I After 6200 nodes, 2646 on tree, 3054.504 best solution, best possible 450.44172 (2949.22 seconds)
Cbc0010I After 6300 nodes, 2682 on tree, 3054.504 best solution, best possible 450.44172 (2965.64 seconds)
Cbc0010I After 6400 nodes, 2726 on tree, 3054.504 best solution, best possible 450.44172 (2984.08 seconds)
Cbc0010I After 6500 nodes, 2771 on tree, 3054.504 best solution, best possible 450.44172 (2998.09 seconds)
Couenne: new cutoff value 3.0052044440e+03 (3010.61 seconds)
Cbc0004I Integer solution of 3005.2044 found after 627606 iterations and 6509 nodes (2999.18 seconds)
Cbc0010I After 6600 nodes, 2708 on tree, 3005.2044 best solution, best possible 450.83245 (3019.01 seconds)
Cbc0010I After 6700 nodes, 2758 on tree, 3005.2044 best solution, best possible 450.83245 (3037.35 seconds)
Cbc0010I After 6800 nodes, 2808 on tree, 3005.2044 best solution, best possible 450.83245 (3055.35 seconds)
Cbc0010I After 6900 nodes, 2858 on tree, 3005.2044 best solution, best possible 450.83245 (3072.61 seconds)
Cbc0010I After 7000 nodes, 2906 on tree, 3005.2044 best solution, best possible 450.83245 (3089.23 seconds)
Cbc0010I After 7100 nodes, 2955 on tree, 3005.2044 best solution, best possible 450.83245 (3104.87 seconds)
Cbc0010I After 7200 nodes, 3000 on tree, 3005.2044 best solution, best possible 450.83245 (3120.55 seconds)
Cbc0010I After 7300 nodes, 3044 on tree, 3005.2044 best solution, best possible 451.46215 (3147.23 seconds)
Cbc0010I After 7400 nodes, 3094 on tree, 3005.2044 best solution, best possible 451.46215 (3165.68 seconds)
Cbc0010I After 7500 nodes, 3144 on tree, 3005.2044 best solution, best possible 451.46215 (3183.41 seconds)
Cbc0010I After 7600 nodes, 3193 on tree, 3005.2044 best solution, best possible 451.46215 (3200.79 seconds)
Cbc0010I After 7700 nodes, 3242 on tree, 3005.2044 best solution, best possible 451.46215 (3217.54 seconds)
Cbc0010I After 7800 nodes, 3290 on tree, 3005.2044 best solution, best possible 451.46215 (3233.31 seconds)
Cbc0010I After 7900 nodes, 3329 on tree, 3005.2044 best solution, best possible 451.46215 (3248.11 seconds)
Cbc0010I After 8000 nodes, 3371 on tree, 3005.2044 best solution, best possible 451.46215 (3263.58 seconds)
Cbc0010I After 8100 nodes, 3415 on tree, 3005.2044 best solution, best possible 451.67245 (3282.30 seconds)
Cbc0010I After 8200 nodes, 3465 on tree, 3005.2044 best solution, best possible 451.67245 (3300.15 seconds)
Cbc0010I After 8300 nodes, 3515 on tree, 3005.2044 best solution, best possible 451.67245 (3317.99 seconds)
Cbc0010I After 8400 nodes, 3565 on tree, 3005.2044 best solution, best possible 451.67245 (3335.56 seconds)
Cbc0010I After 8500 nodes, 3613 on tree, 3005.2044 best solution, best possible 451.67245 (3351.91 seconds)
Cbc0010I After 8600 nodes, 3661 on tree, 3005.2044 best solution, best possible 451.67245 (3369.50 seconds)
Cbc0010I After 8700 nodes, 3701 on tree, 3005.2044 best solution, best possible 451.67245 (3387.13 seconds)
Cbc0010I After 8800 nodes, 3740 on tree, 3005.2044 best solution, best possible 452.79516 (3495.40 seconds)
Cbc0010I After 8900 nodes, 3790 on tree, 3005.2044 best solution, best possible 452.79516 (3514.53 seconds)
Cbc0010I After 9000 nodes, 3840 on tree, 3005.2044 best solution, best possible 452.79516 (3531.64 seconds)
Cbc0010I After 9100 nodes, 3890 on tree, 3005.2044 best solution, best possible 452.79516 (3549.58 seconds)
Cbc0010I After 9200 nodes, 3939 on tree, 3005.2044 best solution, best possible 452.79516 (3566.20 seconds)
Cbc0010I After 9300 nodes, 3988 on tree, 3005.2044 best solution, best possible 452.79516 (3581.93 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 3005.2044 (best possible 452.79516), took 954344 iterations and 9346 nodes (3599.15 seconds)
Cbc0035I Maximum depth 581, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       7241
Linearization cuts added in total:           7241  (separation time: 0.033168s)
Total solve time:                         3600.09s (3600.09s in branch-and-bound)
Lower bound:                              452.795
Upper bound:                               3005.2  (gap: 562.46%)
Branch-and-bound nodes:                      9346
Stats: /tmp/jl_6WujLx/model.nl 1200 [var]  400 [int]  840 [con] 2402 [aux]   7241 [root]     7241 [tot] 0.033168 [sep]  3600.09 [time]  3600.09 [bb]         4.527952e+02 [lower]         3.005204e+03 [upper]    9346 [nodes]
Performance of                           FBBT:	    221.101s,    18032 runs. fix: 0.000129116 shrnk:    1.14464 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	    410.451s,       13 runs. fix:          0 shrnk:     19.135 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
