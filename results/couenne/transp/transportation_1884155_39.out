solving instance transportation 5 4 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 270.73328      129 0.209699
NLP0014I             2         OPT 319.15331      126 0.182504
Couenne: new cutoff value 3.1915331472e+02 (0.410531 seconds)
Loaded instance "/tmp/jl_Gdo3zJ/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           52 (0 integer)

Coin0506I Presolve 176 (-60) rows, 66 (-61) columns and 406 (-121) elements
Clp0006I 0  Obj 0 Primal inf 423.11852 (5)
Clp0006I 41  Obj 117 Primal inf 174.82858 (8)
Clp0006I 54  Obj 234.06419
Clp0000I Optimal - objective value 234.06419
Clp0032I Optimal objective 234.0641856 - 54 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 234.06419
NLP Heuristic: NLP0014I             3         OPT 270.73328       18 0.026695
no solution.
Clp0000I Optimal - objective value 234.06419
Optimality Based BT: 3 improved bounds
Probing: Couenne: new cutoff value 2.8165645177e+02 (0.464459 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 234.06419 to 234.11692 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.17 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 8 improved bounds
Couenne: new cutoff value 2.6968434004e+02 (0.693911 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 6 improved bounds
Optimality Based BT: 3 improved bounds
Cbc0010I After 100 nodes, 12 on tree, 1e+50 best solution, best possible 252.18766 (1.82 seconds)
Optimality Based BT: 6 improved bounds
Cbc0010I After 200 nodes, 16 on tree, 1e+50 best solution, best possible 269.68426 (2.19 seconds)
Cbc0010I After 300 nodes, 22 on tree, 1e+50 best solution, best possible 269.68431 (2.32 seconds)
Cbc0004I Integer solution of 269.68434 found after 1914 iterations and 364 nodes (2.41 seconds)
Cbc0010I After 400 nodes, 17 on tree, 269.68434 best solution, best possible 269.68432 (2.46 seconds)
Cbc0010I After 500 nodes, 8 on tree, 269.68434 best solution, best possible 269.68433 (2.57 seconds)
Cbc0001I Search completed - best objective 269.6843417092192, took 2305 iterations and 548 nodes (2.61 seconds)
Cbc0035I Maximum depth 53, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        236
Linearization cuts added in total:            236  (separation time: 0.000567s)
Total solve time:                         2.61639s (2.61639s in branch-and-bound)
Lower bound:                              269.684
Upper bound:                              269.684  (gap: 0.00%)
Branch-and-bound nodes:                       548
Stats: /tmp/jl_Gdo3zJ/model.nl   75 [var]   25 [int]   60 [con]   52 [aux]    236 [root]      236 [tot] 0.000567 [sep]  2.61639 [time]  2.61658 [bb]         2.696843e+02 [lower]         2.696843e+02 [upper]     548 [nodes]
Performance of                           FBBT:	   0.045288s,      507 runs. fix:  0.0266874 shrnk:    8.48138 ubd:          0 2ubd:          0 infeas:          5
Performance of                           OBBT:	   0.191876s,        9 runs. fix:      0.625 shrnk:    9.67218 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
