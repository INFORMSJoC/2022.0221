solving instance transportation 10 8 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 88.521181       34 0.095372
NLP0014I             2         OPT 392.50223       55 0.144753
Couenne: new cutoff value 3.9250222733e+02 (0.426185 seconds)
Loaded instance "/tmp/jl_nMUawi/model.nl"
Constraints:          220
Variables:            300 (100 integer)
Auxiliaries:          102 (0 integer)

Coin0506I Presolve 611 (-110) rows, 291 (-111) columns and 1481 (-221) elements
Clp0006I 0  Obj 0 Primal inf 2941.76 (10)
Clp0006I 72  Obj 1.281586e-13 Primal inf 21871.777 (78)
Clp0006I 159  Obj 29.951132 Primal inf 872.48746 (47)
Clp0006I 240  Obj 36.255041
Clp0000I Optimal - objective value 36.255041
Clp0032I Optimal objective 36.25504066 - 240 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 36.255041
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 36.255041
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 180 added rows had average density of 2
Cbc0013I At root node, 180 cuts changed objective from 36.255041 to 88.513141 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1922 row cuts average 2.0 elements, 6 column cuts (106 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.84 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 88.518039 (7.89 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 88.52003 (9.03 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 88.52003 (10.11 seconds)
Couenne: new cutoff value 8.8521194184e+01 (11.169 seconds)
Cbc0010I After 400 nodes, 186 on tree, 1e+50 best solution, best possible 88.520309 (10.96 seconds)
Cbc0010I After 500 nodes, 198 on tree, 1e+50 best solution, best possible 88.520309 (11.64 seconds)
Couenne: new cutoff value 8.8521192676e+01 (12.5354 seconds)
Cbc0004I Integer solution of 88.521193 found after 42819 iterations and 571 nodes (12.11 seconds)
Cbc0010I After 600 nodes, 4 on tree, 88.521193 best solution, best possible 88.520492 (12.36 seconds)
Cbc0010I After 700 nodes, 5 on tree, 88.521193 best solution, best possible 88.520918 (12.99 seconds)
Cbc0010I After 800 nodes, 5 on tree, 88.521193 best solution, best possible 88.520997 (13.64 seconds)
Cbc0001I Search completed - best objective 88.5211926823782, took 51833 iterations and 887 nodes (14.16 seconds)
Cbc0035I Maximum depth 190, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        721
Linearization cuts added in total:            721  (separation time: 0.001857s)
Total solve time:                         14.1836s (14.1836s in branch-and-bound)
Lower bound:                              88.5212
Upper bound:                              88.5212  (gap: 0.00%)
Branch-and-bound nodes:                       887
Stats: /tmp/jl_nMUawi/model.nl  300 [var]  100 [int]  220 [con]  102 [aux]    721 [root]      721 [tot] 0.001857 [sep]  14.1836 [time]  14.1841 [bb]         8.852119e+01 [lower]         8.852119e+01 [upper]     887 [nodes]
Performance of                           FBBT:	   0.179153s,      918 runs. fix:          0 shrnk:    40.0254 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.05012s,        6 runs. fix:          0 shrnk:    1.51365 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
