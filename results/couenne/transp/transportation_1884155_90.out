solving instance transportation 5 9 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 81.751488       30 0.038024
NLP0014I             2         OPT 240.15623       48 0.058538
Couenne: new cutoff value 2.4015623286e+02 (0.112805 seconds)
Loaded instance "/tmp/jl_jTJWKY/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:           27 (0 integer)

Coin0506I Presolve 151 (-35) rows, 66 (-36) columns and 356 (-71) elements
Clp0006I 0  Obj 0 Primal inf 4192.4295 (5)
Clp0006I 37  Obj 38.052919 Primal inf 3565.936 (26)
Clp0006I 73  Obj 70.959375
Clp0000I Optimal - objective value 70.959375
Clp0032I Optimal objective 70.95937509 - 73 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 70.959375
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 70.959375
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 41 added rows had average density of 2
Cbc0013I At root node, 41 cuts changed objective from 70.959375 to 81.751215 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 498 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.12 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 2 improved bounds
Couenne: new cutoff value 8.1751490149e+01 (1.13282 seconds)
Cbc0004I Integer solution of 81.75149 found after 2419 iterations and 21 nodes (1.02 seconds)
Cbc0001I Search completed - best objective 81.75149017812679, took 2419 iterations and 21 nodes (1.02 seconds)
Cbc0035I Maximum depth 10, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        186
Linearization cuts added in total:            186  (separation time: 0.000487s)
Total solve time:                          1.0277s (1.0277s in branch-and-bound)
Lower bound:                              81.7515
Upper bound:                              81.7515  (gap: 0.00%)
Branch-and-bound nodes:                        21
Stats: /tmp/jl_jTJWKY/model.nl   75 [var]   25 [int]   60 [con]   27 [aux]    186 [root]      186 [tot] 0.000487 [sep]   1.0277 [time]  1.02788 [bb]         8.175149e+01 [lower]         8.175149e+01 [upper]      21 [nodes]
Performance of                           FBBT:	   0.006496s,      119 runs. fix:          0 shrnk:     9.4717 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.253404s,        7 runs. fix:          0 shrnk:    3.12228 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
