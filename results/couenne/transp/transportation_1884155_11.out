solving instance transportation 5 2 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 207.2044       62 0.09827
NLP0014I             2      INFEAS 223.28559       40 0.063817
Loaded instance "/tmp/jl_ZB1Rb5/model.nl"
Constraints:           60
Variables:             75 (25 integer)
Auxiliaries:          152 (0 integer)

Coin0506I Presolve 385 (-76) rows, 125 (-102) columns and 825 (-202) elements
Clp0006I 0  Obj 0 Primal inf 2267.8141 (280)
Clp0006I 79  Obj 2.5882712e-15 Primal inf 16164.808 (138)
Clp0006I 150  Obj 17.955029 Primal inf 13523.607 (85)
Clp0006I 200  Obj 30.267578 Primal inf 9617.8518 (81)
Clp0006I 233  Obj 71.316322 Primal inf 30.750536 (26)
Clp0006I 247  Obj 72.079685
Clp0000I Optimal - objective value 72.079685
Clp0032I Optimal objective 72.07968478 - 247 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 72.079685
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 72.079685
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 14 added rows had average density of 2
Cbc0013I At root node, 14 cuts changed objective from 72.079685 to 74.312764 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 99 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.54 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 6.6592487668e+02 (5.0551 seconds)
Cbc0004I Integer solution of 665.92488 found after 1984 iterations and 45 nodes (4.86 seconds)
Optimality Based BT: 21 improved bounds
Optimality Based BT: 24 improved bounds
Optimality Based BT: 19 improved bounds
Couenne: new cutoff value 3.6529146874e+02 (8.49497 seconds)
Cbc0004I Integer solution of 365.29147 found after 4006 iterations and 93 nodes (8.30 seconds)
Cbc0010I After 100 nodes, 40 on tree, 365.29147 best solution, best possible 92.362462 (10.10 seconds)
Optimality Based BT: 23 improved bounds
Optimality Based BT: 19 improved bounds
Optimality Based BT: 15 improved bounds
Cbc0010I After 200 nodes, 78 on tree, 365.29147 best solution, best possible 100.82037 (12.78 seconds)
Cbc0010I After 300 nodes, 116 on tree, 365.29147 best solution, best possible 111.18735 (15.20 seconds)
Couenne: new cutoff value 3.0204626544e+02 (15.6515 seconds)
Cbc0004I Integer solution of 302.04627 found after 14116 iterations and 348 nodes (15.46 seconds)
Cbc0010I After 400 nodes, 130 on tree, 302.04627 best solution, best possible 114.58442 (16.83 seconds)
Cbc0010I After 500 nodes, 161 on tree, 302.04627 best solution, best possible 117.26576 (17.89 seconds)
Cbc0010I After 600 nodes, 189 on tree, 302.04627 best solution, best possible 126.39412 (19.18 seconds)
Cbc0010I After 700 nodes, 219 on tree, 302.04627 best solution, best possible 128.92137 (20.39 seconds)
Cbc0010I After 800 nodes, 251 on tree, 302.04627 best solution, best possible 131.16071 (21.33 seconds)
Cbc0010I After 900 nodes, 285 on tree, 302.04627 best solution, best possible 133.52264 (22.42 seconds)
Cbc0010I After 1000 nodes, 308 on tree, 302.04627 best solution, best possible 135.68012 (23.27 seconds)
Cbc0010I After 1100 nodes, 340 on tree, 302.04627 best solution, best possible 138.28097 (24.74 seconds)
Optimality Based BT: 31 improved bounds
Couenne: new cutoff value 2.9207656885e+02 (25.454 seconds)
Cbc0004I Integer solution of 292.07657 found after 44475 iterations and 1133 nodes (25.26 seconds)
Cbc0010I After 1200 nodes, 366 on tree, 292.07657 best solution, best possible 141.33507 (25.87 seconds)
Optimality Based BT: 30 improved bounds
Cbc0010I After 1300 nodes, 396 on tree, 292.07657 best solution, best possible 142.72307 (27.83 seconds)
Cbc0010I After 1400 nodes, 421 on tree, 292.07657 best solution, best possible 144.6349 (28.66 seconds)
Cbc0010I After 1500 nodes, 444 on tree, 292.07657 best solution, best possible 146.73053 (29.55 seconds)
Cbc0010I After 1600 nodes, 468 on tree, 292.07657 best solution, best possible 150.10092 (30.41 seconds)
Optimality Based BT: 24 improved bounds
Cbc0010I After 1700 nodes, 492 on tree, 292.07657 best solution, best possible 151.30736 (31.48 seconds)
Cbc0010I After 1800 nodes, 518 on tree, 292.07657 best solution, best possible 154.24344 (33.29 seconds)
Optimality Based BT: 31 improved bounds
Couenne: new cutoff value 2.8236864875e+02 (34.7247 seconds)
Cbc0004I Integer solution of 282.36865 found after 72272 iterations and 1888 nodes (34.53 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1900 nodes, 536 on tree, 282.36865 best solution, best possible 155.6744 (34.64 seconds)
Cbc0010I After 2000 nodes, 550 on tree, 282.36865 best solution, best possible 157.49331 (35.35 seconds)
Cbc0010I After 2100 nodes, 572 on tree, 282.36865 best solution, best possible 158.25999 (36.03 seconds)
Cbc0010I After 2200 nodes, 585 on tree, 282.36865 best solution, best possible 160.29172 (36.90 seconds)
Cbc0010I After 2300 nodes, 608 on tree, 282.36865 best solution, best possible 162.70981 (37.89 seconds)
Optimality Based BT: 27 improved bounds
Cbc0010I After 2400 nodes, 623 on tree, 282.36865 best solution, best possible 163.88314 (38.81 seconds)
Cbc0010I After 2500 nodes, 640 on tree, 282.36865 best solution, best possible 165.10757 (39.63 seconds)
Cbc0010I After 2600 nodes, 656 on tree, 282.36865 best solution, best possible 165.99117 (40.31 seconds)
Cbc0010I After 2700 nodes, 673 on tree, 282.36865 best solution, best possible 166.89868 (41.06 seconds)
Cbc0010I After 2800 nodes, 692 on tree, 282.36865 best solution, best possible 168.46854 (41.92 seconds)
Optimality Based BT: 21 improved bounds
Cbc0010I After 2900 nodes, 706 on tree, 282.36865 best solution, best possible 169.73899 (42.78 seconds)
Optimality Based BT: 11 improved bounds
Cbc0010I After 3000 nodes, 718 on tree, 282.36865 best solution, best possible 170.97388 (43.74 seconds)
Cbc0010I After 3100 nodes, 741 on tree, 282.36865 best solution, best possible 172.22891 (44.42 seconds)
Cbc0010I After 3200 nodes, 757 on tree, 282.36865 best solution, best possible 172.94117 (45.14 seconds)
Cbc0010I After 3300 nodes, 775 on tree, 282.36865 best solution, best possible 174.3971 (45.88 seconds)
Cbc0010I After 3400 nodes, 786 on tree, 282.36865 best solution, best possible 175.10309 (46.61 seconds)
Cbc0010I After 3500 nodes, 800 on tree, 282.36865 best solution, best possible 175.98099 (47.32 seconds)
Cbc0010I After 3600 nodes, 810 on tree, 282.36865 best solution, best possible 176.6084 (47.99 seconds)
Cbc0010I After 3700 nodes, 817 on tree, 282.36865 best solution, best possible 177.12046 (48.63 seconds)
Cbc0010I After 3800 nodes, 834 on tree, 282.36865 best solution, best possible 178.26206 (49.56 seconds)
Cbc0010I After 3900 nodes, 841 on tree, 282.36865 best solution, best possible 179.29553 (50.28 seconds)
Cbc0010I After 4000 nodes, 855 on tree, 282.36865 best solution, best possible 179.74416 (50.91 seconds)
Cbc0010I After 4100 nodes, 868 on tree, 282.36865 best solution, best possible 181.07456 (51.57 seconds)
Optimality Based BT: 28 improved bounds
Cbc0010I After 4200 nodes, 875 on tree, 282.36865 best solution, best possible 182.38319 (52.32 seconds)
Cbc0010I After 4300 nodes, 887 on tree, 282.36865 best solution, best possible 183.04104 (52.96 seconds)
Cbc0010I After 4400 nodes, 895 on tree, 282.36865 best solution, best possible 183.90769 (53.58 seconds)
Cbc0010I After 4500 nodes, 910 on tree, 282.36865 best solution, best possible 184.60568 (54.25 seconds)
Cbc0010I After 4600 nodes, 922 on tree, 282.36865 best solution, best possible 185.29308 (54.85 seconds)
Cbc0010I After 4700 nodes, 930 on tree, 282.36865 best solution, best possible 186.02643 (55.55 seconds)
Cbc0010I After 4800 nodes, 935 on tree, 282.36865 best solution, best possible 186.95723 (56.16 seconds)
Cbc0010I After 4900 nodes, 938 on tree, 282.36865 best solution, best possible 188.18483 (56.82 seconds)
Cbc0010I After 5000 nodes, 941 on tree, 282.36865 best solution, best possible 188.92185 (57.47 seconds)
Cbc0010I After 5100 nodes, 941 on tree, 282.36865 best solution, best possible 189.65241 (58.11 seconds)
Cbc0010I After 5200 nodes, 959 on tree, 282.36865 best solution, best possible 189.8346 (58.78 seconds)
Cbc0010I After 5300 nodes, 972 on tree, 282.36865 best solution, best possible 190.23639 (59.45 seconds)
Cbc0010I After 5400 nodes, 972 on tree, 282.36865 best solution, best possible 190.91767 (60.12 seconds)
Cbc0010I After 5500 nodes, 981 on tree, 282.36865 best solution, best possible 191.27129 (60.75 seconds)
Cbc0010I After 5600 nodes, 985 on tree, 282.36865 best solution, best possible 191.91706 (61.34 seconds)
Cbc0010I After 5700 nodes, 991 on tree, 282.36865 best solution, best possible 192.95382 (62.01 seconds)
Cbc0010I After 5800 nodes, 996 on tree, 282.36865 best solution, best possible 193.70074 (62.65 seconds)
Cbc0010I After 5900 nodes, 999 on tree, 282.36865 best solution, best possible 194.38306 (63.39 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 6000 nodes, 997 on tree, 282.36865 best solution, best possible 195.32416 (64.07 seconds)
Cbc0010I After 6100 nodes, 998 on tree, 282.36865 best solution, best possible 195.98746 (64.74 seconds)
Cbc0010I After 6200 nodes, 1010 on tree, 282.36865 best solution, best possible 196.45764 (65.48 seconds)
Cbc0010I After 6300 nodes, 1013 on tree, 282.36865 best solution, best possible 196.72667 (66.13 seconds)
Cbc0010I After 6400 nodes, 1024 on tree, 282.36865 best solution, best possible 197.01574 (66.82 seconds)
Cbc0010I After 6500 nodes, 1022 on tree, 282.36865 best solution, best possible 197.68753 (67.37 seconds)
Cbc0010I After 6600 nodes, 1023 on tree, 282.36865 best solution, best possible 198.47484 (68.00 seconds)
Cbc0010I After 6700 nodes, 1027 on tree, 282.36865 best solution, best possible 199.29821 (68.69 seconds)
Cbc0010I After 6800 nodes, 1023 on tree, 282.36865 best solution, best possible 200.75438 (69.26 seconds)
Cbc0010I After 6900 nodes, 1019 on tree, 282.36865 best solution, best possible 201.5173 (69.85 seconds)
Cbc0010I After 7000 nodes, 1020 on tree, 282.36865 best solution, best possible 202.15042 (70.50 seconds)
Cbc0010I After 7100 nodes, 1013 on tree, 282.36865 best solution, best possible 202.90524 (71.08 seconds)
Cbc0010I After 7200 nodes, 1009 on tree, 282.36865 best solution, best possible 203.64631 (71.68 seconds)
Cbc0010I After 7300 nodes, 1010 on tree, 282.36865 best solution, best possible 204.41122 (72.36 seconds)
Cbc0010I After 7400 nodes, 1005 on tree, 282.36865 best solution, best possible 204.86081 (72.97 seconds)
Cbc0010I After 7500 nodes, 1001 on tree, 282.36865 best solution, best possible 205.65187 (73.70 seconds)
Cbc0010I After 7600 nodes, 987 on tree, 282.36865 best solution, best possible 206.3296 (74.24 seconds)
Cbc0010I After 7700 nodes, 981 on tree, 282.36865 best solution, best possible 207.2952 (74.88 seconds)
Cbc0010I After 7800 nodes, 980 on tree, 282.36865 best solution, best possible 207.60361 (75.45 seconds)
Cbc0010I After 7900 nodes, 973 on tree, 282.36865 best solution, best possible 208.32424 (76.04 seconds)
Cbc0010I After 8000 nodes, 967 on tree, 282.36865 best solution, best possible 209.25895 (76.65 seconds)
Cbc0010I After 8100 nodes, 961 on tree, 282.36865 best solution, best possible 209.76104 (77.22 seconds)
Cbc0010I After 8200 nodes, 964 on tree, 282.36865 best solution, best possible 210.17634 (77.91 seconds)
Cbc0010I After 8300 nodes, 957 on tree, 282.36865 best solution, best possible 211.09656 (78.44 seconds)
Cbc0010I After 8400 nodes, 946 on tree, 282.36865 best solution, best possible 211.77523 (78.98 seconds)
Cbc0010I After 8500 nodes, 947 on tree, 282.36865 best solution, best possible 212.10549 (79.58 seconds)
Cbc0010I After 8600 nodes, 945 on tree, 282.36865 best solution, best possible 212.82721 (80.18 seconds)
Cbc0010I After 8700 nodes, 939 on tree, 282.36865 best solution, best possible 213.24137 (80.76 seconds)
Couenne: new cutoff value 2.7962606278e+02 (81.486 seconds)
Cbc0004I Integer solution of 279.62606 found after 282909 iterations and 8799 nodes (81.29 seconds)
Cbc0010I After 8800 nodes, 922 on tree, 279.62606 best solution, best possible 214.37914 (81.29 seconds)
Cbc0010I After 8900 nodes, 908 on tree, 279.62606 best solution, best possible 214.86985 (81.96 seconds)
Cbc0010I After 9000 nodes, 890 on tree, 279.62606 best solution, best possible 215.88464 (82.49 seconds)
Cbc0010I After 9100 nodes, 875 on tree, 279.62606 best solution, best possible 216.56497 (82.99 seconds)
Cbc0010I After 9200 nodes, 865 on tree, 279.62606 best solution, best possible 217.24219 (83.54 seconds)
Cbc0010I After 9300 nodes, 849 on tree, 279.62606 best solution, best possible 217.98156 (84.07 seconds)
Cbc0010I After 9400 nodes, 837 on tree, 279.62606 best solution, best possible 218.71279 (84.60 seconds)
Cbc0010I After 9500 nodes, 820 on tree, 279.62606 best solution, best possible 219.53937 (85.19 seconds)
Cbc0010I After 9600 nodes, 804 on tree, 279.62606 best solution, best possible 220.03731 (85.69 seconds)
Cbc0010I After 9700 nodes, 792 on tree, 279.62606 best solution, best possible 220.82088 (86.31 seconds)
Cbc0010I After 9800 nodes, 784 on tree, 279.62606 best solution, best possible 221.6333 (86.96 seconds)
Cbc0010I After 9900 nodes, 766 on tree, 279.62606 best solution, best possible 222.49432 (87.49 seconds)
Cbc0010I After 10000 nodes, 752 on tree, 279.62606 best solution, best possible 223.62314 (88.05 seconds)
Cbc0010I After 10100 nodes, 737 on tree, 279.62606 best solution, best possible 224.30741 (88.58 seconds)
Cbc0010I After 10200 nodes, 728 on tree, 279.62606 best solution, best possible 225.16476 (89.24 seconds)
Cbc0010I After 10300 nodes, 713 on tree, 279.62606 best solution, best possible 225.82086 (89.80 seconds)
Cbc0010I After 10400 nodes, 690 on tree, 279.62606 best solution, best possible 226.8571 (90.30 seconds)
Cbc0010I After 10500 nodes, 663 on tree, 279.62606 best solution, best possible 228.05526 (90.79 seconds)
Cbc0010I After 10600 nodes, 646 on tree, 279.62606 best solution, best possible 228.9349 (91.34 seconds)
Cbc0010I After 10700 nodes, 626 on tree, 279.62606 best solution, best possible 229.99292 (91.88 seconds)
Cbc0010I After 10800 nodes, 615 on tree, 279.62606 best solution, best possible 230.63899 (92.46 seconds)
Cbc0010I After 10900 nodes, 591 on tree, 279.62606 best solution, best possible 231.33886 (92.95 seconds)
Cbc0010I After 11000 nodes, 561 on tree, 279.62606 best solution, best possible 232.92302 (93.42 seconds)
Cbc0010I After 11100 nodes, 535 on tree, 279.62606 best solution, best possible 234.20221 (93.87 seconds)
Cbc0010I After 11200 nodes, 509 on tree, 279.62606 best solution, best possible 235.32931 (94.36 seconds)
Cbc0010I After 11300 nodes, 481 on tree, 279.62606 best solution, best possible 236.51987 (94.82 seconds)
Cbc0010I After 11400 nodes, 455 on tree, 279.62606 best solution, best possible 237.52284 (95.30 seconds)
Cbc0010I After 11500 nodes, 421 on tree, 279.62606 best solution, best possible 238.74462 (95.69 seconds)
Cbc0010I After 11600 nodes, 394 on tree, 279.62606 best solution, best possible 240.18322 (96.27 seconds)
Cbc0010I After 11700 nodes, 365 on tree, 279.62606 best solution, best possible 241.45184 (96.71 seconds)
Cbc0010I After 11800 nodes, 327 on tree, 279.62606 best solution, best possible 243.11248 (97.09 seconds)
Cbc0010I After 11900 nodes, 292 on tree, 279.62606 best solution, best possible 245.3661 (97.47 seconds)
Cbc0010I After 12000 nodes, 253 on tree, 279.62606 best solution, best possible 247.68937 (97.83 seconds)
Cbc0010I After 12100 nodes, 212 on tree, 279.62606 best solution, best possible 250.43531 (98.16 seconds)
Cbc0010I After 12200 nodes, 169 on tree, 279.62606 best solution, best possible 253.66821 (98.46 seconds)
Cbc0010I After 12300 nodes, 122 on tree, 279.62606 best solution, best possible 257.90963 (98.72 seconds)
Cbc0010I After 12400 nodes, 76 on tree, 279.62606 best solution, best possible 263.6779 (98.97 seconds)
Cbc0010I After 12500 nodes, 27 on tree, 279.62606 best solution, best possible 271.33566 (99.19 seconds)
Cbc0001I Search completed - best objective 279.6260627766213, took 366655 iterations and 12556 nodes (99.31 seconds)
Cbc0035I Maximum depth 38, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        461
Linearization cuts added in total:            461  (separation time: 0.001194s)
Total solve time:                         99.3163s (99.3163s in branch-and-bound)
Lower bound:                              279.626
Upper bound:                              279.626  (gap: 0.00%)
Branch-and-bound nodes:                     12556
Stats: /tmp/jl_ZB1Rb5/model.nl   75 [var]   25 [int]   60 [con]  152 [aux]    461 [root]      461 [tot] 0.001194 [sep]  99.3163 [time]  99.3166 [bb]         2.796261e+02 [lower]         2.796261e+02 [upper]   12556 [nodes]
Performance of                           FBBT:	    4.98909s,    17309 runs. fix:  0.0488415 shrnk:     0.6905 ubd:          0 2ubd:          0 infeas:        534
Performance of                           OBBT:	    2.92841s,       23 runs. fix:    0.17686 shrnk:    5.20574 ubd:          0 2ubd:          0 infeas:          2
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_transp(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:973
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/transp/script.jl:15
