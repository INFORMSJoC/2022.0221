solving instance mcf arcs c25_100_10_F_L_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1473.8287       51 2.142149
NLP0014I             2      INFEAS 0.93225768       80 3.48434
Loaded instance "/tmp/jl_TGvrzA/model.nl"
Constraints:          600
Variables:           1350 (125 integer)
Auxiliaries:          111 (0 integer)

Coin0506I Presolve 875 (-226) rows, 1200 (-261) columns and 5100 (-576) elements
Clp0006I 0  Obj 0 Primal inf 141.99998 (20)
Clp0006I 92  Obj 4.881875e-16 Primal inf 707.56241 (94)
Clp0006I 184  Obj 1.0245521e-15 Primal inf 1011.0624 (120)
Clp0006I 269  Obj 1.9739906e-15 Primal inf 1166.1873 (150)
Clp0006I 339  Obj 4.4518124e-15 Primal inf 1504.4061 (180)
Clp0006I 402  Obj 4.7966864e-15 Primal inf 3404.8873 (226)
Clp0006I 474  Obj 413.77056 Primal inf 667.9686 (155)
Clp0006I 551  Obj 497.0363 Primal inf 671.99987 (130)
Clp0006I 627  Obj 558.49398 Primal inf 81.617995 (61)
Clp0006I 689  Obj 590.80999
Clp0000I Optimal - objective value 590.80999
Clp0032I Optimal objective 590.809989 - 689 iterations time 0.072, Presolve 0.00
Clp0000I Optimal - objective value 590.80999
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 590.80999
Optimality Based BT: 1 improved bounds
Probing: 1 improved bounds
NLP Heuristic: no solution.
Cbc0031I 153 added rows had average density of 2
Cbc0013I At root node, 153 cuts changed objective from 590.80999 to 1473.8067 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1811 row cuts average 2.0 elements, 102 column cuts (212 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (40.98 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 4 improved bounds
Couenne: new cutoff value 1.4738286410e+03 (297.278 seconds)
Cbc0004I Integer solution of 1473.8286 found after 14839 iterations and 82 nodes (289.41 seconds)
Cbc0001I Search completed - best objective 1473.828641020597, took 14839 iterations and 82 nodes (289.41 seconds)
Cbc0035I Maximum depth 41, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1101
Linearization cuts added in total:           1101  (separation time: 0.008568s)
Total solve time:                         289.503s (289.503s in branch-and-bound)
Lower bound:                              1473.83
Upper bound:                              1473.83  (gap: 0.00%)
Branch-and-bound nodes:                        82
Stats: /tmp/jl_TGvrzA/model.nl 1350 [var]  125 [int]  600 [con]  111 [aux]   1101 [root]     1101 [tot] 0.008568 [sep]  289.503 [time]  289.504 [bb]         1.473829e+03 [lower]         1.473829e+03 [upper]      82 [nodes]
Performance of                           FBBT:	   0.379033s,      152 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    103.128s,        6 runs. fix:          0 shrnk:    7.58141 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
