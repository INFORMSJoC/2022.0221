solving instance mcf arcs c25_100_30_F_L_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4537.7249       68 8.638928
Loaded instance "/tmp/jl_0d01ds/model.nl"
Constraints:         1100
Variables:           3350 (125 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 1376 (-229) rows, 3192 (-289) columns and 13084 (-598) elements
Clp0006I 0  Obj 17.94406 Primal inf 425.02896 (66)
Clp0006I 102  Obj 27.099193 Primal inf 6580.0805 (138)
Clp0006I 204  Obj 27.099193 Primal inf 10600.484 (189)
Clp0006I 300  Obj 27.099193 Primal inf 8190.3475 (200)
Clp0006I 402  Obj 27.099193 Primal inf 11260.843 (230)
Clp0006I 490  Obj 27.099193 Primal inf 26084.707 (254)
Clp0006I 575  Obj 27.099193 Primal inf 324158.94 (304)
Clp0006I 671  Obj 27.099193 Primal inf 137152.3 (318)
Clp0006I 765  Obj 27.099193 Primal inf 15088.017 (262)
Clp0006I 857  Obj 27.099193 Primal inf 131267.21 (338)
Clp0006I 944  Obj 27.099193 Primal inf 58447.413 (304)
Clp0006I 1037  Obj 27.099193 Primal inf 86590.003 (323)
Clp0006I 1139  Obj 27.099193 Primal inf 329624.3 (349)
Clp0006I 1241  Obj 153.26201 Primal inf 74084.435 (328)
Clp0006I 1341  Obj 200.46689 Primal inf 68307.635 (321)
Clp0006I 1443  Obj 361.85008 Primal inf 48606.483 (382)
Clp0006I 1545  Obj 795.01029 Primal inf 20708.263 (306)
Clp0006I 1647  Obj 1117.342 Primal inf 35628.685 (338)
Clp0006I 1749  Obj 1525.8558 Primal inf 6358.1906 (268)
Clp0006I 1851  Obj 1917.8433 Primal inf 14810.304 (318)
Clp0006I 1953  Obj 2105.0045 Primal inf 3942.2989 (251)
Clp0006I 2055  Obj 2330.1161 Primal inf 3632.6725 (218)
Clp0006I 2157  Obj 2601.5552 Primal inf 771.50074 (134)
Clp0006I 2259  Obj 2718.8487 Primal inf 1381.3153 (191)
Clp0006I 2361  Obj 2847.7999 Primal inf 866.58961 (166)
Clp0006I 2463  Obj 2906.1783 Primal inf 1291.0544 (143)
Clp0006I 2565  Obj 2978.3491 Primal inf 156.05969 (66)
Clp0006I 2650  Obj 2990.1327
Clp0000I Optimal - objective value 2990.1327
Clp0032I Optimal objective 2990.13267 - 2650 iterations time 0.572, Presolve 0.01
Clp0000I Optimal - objective value 2990.1327
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 2990.1327
Optimality Based BT: 2 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 139 added rows had average density of 2
Cbc0013I At root node, 139 cuts changed objective from 2990.1327 to 4537.7247 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1633 row cuts average 2.0 elements, 160 column cuts (289 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (341.76 seconds)
Optimality Based BT: 3 improved bounds
Couenne: new cutoff value 5.5177237510e+03 (663.571 seconds)
Optimality Based BT: 4 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 4.5377253737e+03 (2254.61 seconds)
Cbc0004I Integer solution of 4537.7254 found after 5349 iterations and 13 nodes (2238.42 seconds)
Cbc0001I Search completed - best objective 4537.725373684027, took 5349 iterations and 13 nodes (2238.42 seconds)
Cbc0035I Maximum depth 6, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1605
Linearization cuts added in total:           1605  (separation time: 0.028025s)
Total solve time:                         2239.03s (2239.03s in branch-and-bound)
Lower bound:                              4537.73
Upper bound:                              4537.73  (gap: 0.00%)
Branch-and-bound nodes:                        13
Stats: /tmp/jl_0d01ds/model.nl 3350 [var]  125 [int] 1100 [con]  131 [aux]   1605 [root]     1605 [tot] 0.028025 [sep]  2239.03 [time]  2239.04 [bb]         4.537725e+03 [lower]         4.537725e+03 [upper]      13 [nodes]
Performance of                           FBBT:	   0.606071s,       54 runs. fix:   0.313253 shrnk:   0.304494 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     662.79s,        7 runs. fix:          0 shrnk:    13.4485 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
