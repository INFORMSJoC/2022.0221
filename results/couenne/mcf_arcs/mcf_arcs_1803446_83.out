solving instance mcf arcs c25_100_30_F_L_5 3 6 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 20463.412      203 25.372238
Loaded instance "/tmp/jl_XtUK9a/model.nl"
Constraints:         1100
Variables:           3350 (125 integer)
Auxiliaries:          231 (0 integer)

Coin0506I Presolve 2078 (-31) rows, 3490 (-91) columns and 14780 (-210) elements
Clp0006I 0  Obj -480807.23 Primal inf 310628.76 (165)
Clp0006I 116  Obj -235776.87 Primal inf 88649.18 (213)
Clp0006I 232  Obj -200363.44 Primal inf 10853.278 (256)
Clp0006I 348  Obj -190047.45 Primal inf 6507.1718 (217)
Clp0006I 464  Obj -182749.53 Primal inf 24413.649 (351)
Clp0006I 580  Obj -145941.7 Primal inf 18760.398 (389)
Clp0006I 696  Obj -115098.59 Primal inf 15340.085 (455)
Clp0006I 812  Obj -114351.96 Primal inf 15933.51 (494)
Clp0006I 928  Obj -114351.96 Primal inf 22133.933 (517)
Clp0006I 1044  Obj -114351.96 Primal inf 19686.54 (530)
Clp0006I 1160  Obj -114351.96 Primal inf 23819.793 (558)
Clp0006I 1275  Obj -111237.82 Primal inf 21779.694 (562)
Clp0006I 1391  Obj -111237.82 Primal inf 32013.112 (567)
Clp0006I 1507  Obj -102475.92 Primal inf 16965.872 (618)
Clp0006I 1623  Obj -81047.084 Primal inf 9744.5194 (547)
Clp0006I 1739  Obj -72033.911 Primal inf 15771.821 (489)
Clp0006I 1855  Obj -69809.082 Primal inf 26055.875 (582)
Clp0006I 1971  Obj -69541.597 Primal inf 8392.5414 (580)
Clp0006I 2087  Obj -69435.011 Primal inf 12721.061 (540)
Clp0006I 2203  Obj -66778.429 Primal inf 4958.1995 (498)
Clp0006I 2319  Obj -63626.12 Primal inf 10179.045 (480)
Clp0006I 2435  Obj -58552.373 Primal inf 2769.3965 (416)
Clp0006I 2551  Obj -54265.92 Primal inf 2888.8115 (391)
Clp0006I 2667  Obj -54265.92 Primal inf 3230.3719 (403)
Clp0006I 2775  Obj -53811.607 Primal inf 2605.372 (413)
Clp0006I 2891  Obj -52593.345 Primal inf 5498.2767 (387)
Clp0006I 3007  Obj -50935.282 Primal inf 9684.1838 (412)
Clp0006I 3123  Obj -50069.615 Primal inf 5958.6352 (354)
Clp0006I 3230  Obj -49939.36 Primal inf 2572.5145 (305)
Clp0006I 3346  Obj -47945.715 Primal inf 1771.9557 (291)
Clp0006I 3442  Obj -47830.827 Primal inf 3635.3201 (335)
Clp0006I 3557  Obj -46268.016 Primal inf 762.4446 (302)
Clp0006I 3664  Obj -45921.702 Primal inf 1210.1419 (293)
Clp0006I 3762  Obj -45764.523 Primal inf 1087.5813 (253)
Clp0006I 3873  Obj -45594.057 Primal inf 379.37041 (214)
Clp0006I 3982  Obj -45319.967 Primal inf 102.2779 (104)
Clp0006I 4098  Obj -45206.846 Primal inf 3.0174847 (43)
Clp0006I 4163  Obj -45205.548
Clp0000I Optimal - objective value -45205.548
Clp0032I Optimal objective -45205.54829 - 4163 iterations time 1.022, Presolve 0.01
Clp0000I Optimal - objective value -45205.548
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -45205.548
Optimality Based BT: 6 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 157 added rows had average density of 2
Cbc0013I At root node, 157 cuts changed objective from -45205.548 to -35164.765 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1683 row cuts average 2.0 elements, 951 column cuts (1003 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (340.87 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -34983.496 (2601.57 seconds)
Cbc0010I After 200 nodes, 89 on tree, 1e+50 best solution, best possible -34983.496 (2736.00 seconds)
Cbc0010I After 300 nodes, 118 on tree, 1e+50 best solution, best possible -34983.496 (2814.44 seconds)
Cbc0010I After 400 nodes, 165 on tree, 1e+50 best solution, best possible -34983.496 (2831.82 seconds)
Cbc0010I After 500 nodes, 215 on tree, 1e+50 best solution, best possible -34983.496 (2848.30 seconds)
Cbc0010I After 600 nodes, 265 on tree, 1e+50 best solution, best possible -34983.496 (2862.35 seconds)
Cbc0010I After 700 nodes, 314 on tree, 1e+50 best solution, best possible -34983.496 (2874.22 seconds)
Cbc0010I After 800 nodes, 364 on tree, 1e+50 best solution, best possible -34983.496 (2885.26 seconds)
Cbc0010I After 900 nodes, 414 on tree, 1e+50 best solution, best possible -34983.496 (2894.70 seconds)
Cbc0010I After 1000 nodes, 463 on tree, 1e+50 best solution, best possible -34983.496 (2902.56 seconds)
Cbc0010I After 1100 nodes, 513 on tree, 1e+50 best solution, best possible -34983.496 (2909.62 seconds)
Cbc0010I After 1200 nodes, 563 on tree, 1e+50 best solution, best possible -34983.496 (2916.33 seconds)
Cbc0010I After 1300 nodes, 613 on tree, 1e+50 best solution, best possible -34983.496 (2922.88 seconds)
Cbc0010I After 1400 nodes, 663 on tree, 1e+50 best solution, best possible -34983.496 (2929.38 seconds)
Cbc0010I After 1500 nodes, 711 on tree, 1e+50 best solution, best possible -34983.496 (2935.54 seconds)
Cbc0010I After 1600 nodes, 759 on tree, 1e+50 best solution, best possible -34983.496 (2942.07 seconds)
Cbc0010I After 1700 nodes, 806 on tree, 1e+50 best solution, best possible -34983.496 (2947.99 seconds)
Cbc0010I After 1800 nodes, 854 on tree, 1e+50 best solution, best possible -34983.496 (2954.11 seconds)
Cbc0010I After 1900 nodes, 903 on tree, 1e+50 best solution, best possible -34983.496 (2960.23 seconds)
Cbc0010I After 2000 nodes, 953 on tree, 1e+50 best solution, best possible -34983.496 (2966.98 seconds)
Cbc0010I After 2100 nodes, 997 on tree, 1e+50 best solution, best possible -34983.496 (2973.42 seconds)
Cbc0010I After 2200 nodes, 1044 on tree, 1e+50 best solution, best possible -34983.496 (2981.01 seconds)
Cbc0010I After 2300 nodes, 1094 on tree, 1e+50 best solution, best possible -34983.496 (2986.86 seconds)
Cbc0010I After 2400 nodes, 1144 on tree, 1e+50 best solution, best possible -34983.496 (2992.56 seconds)
Cbc0010I After 2500 nodes, 1181 on tree, 1e+50 best solution, best possible -34983.496 (2998.66 seconds)
Cbc0010I After 2600 nodes, 1230 on tree, 1e+50 best solution, best possible -34983.496 (3006.52 seconds)
Cbc0010I After 2700 nodes, 1261 on tree, 1e+50 best solution, best possible -34983.496 (3012.83 seconds)
Couenne: new cutoff value 5.1574911159e+04 (3046.06 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -34983.496), took 970491 iterations and 2738 nodes (3569.59 seconds)
Cbc0035I Maximum depth 1367, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2109
Linearization cuts added in total:           2109  (separation time: 0.029092s)
Total solve time:                         3570.61s (3570.61s in branch-and-bound)
Lower bound:                             -34983.5
Upper bound:                              51574.9  (gap: 247.42%)
Branch-and-bound nodes:                      2738
Stats: /tmp/jl_XtUK9a/model.nl 3350 [var]  125 [int] 1100 [con]  231 [aux]   2109 [root]     2109 [tot] 0.029092 [sep]  3570.61 [time]  3570.62 [bb]        -3.498350e+04 [lower]         5.157491e+04 [upper]    2738 [nodes]
Performance of                           FBBT:	    37.3704s,     3466 runs. fix:   0.200345 shrnk:   0.203881 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     1091.8s,        8 runs. fix:          0 shrnk:    22.6341 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
