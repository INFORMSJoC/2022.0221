solving instance mcf arcs c25_100_30_F_L_5 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 45058.304      177 27.451764
Loaded instance "/tmp/jl_ijAMeR/model.nl"
Constraints:         1100
Variables:           3350 (125 integer)
Auxiliaries:          231 (0 integer)

Coin0506I Presolve 1573 (-228) rows, 3293 (-288) columns and 13577 (-497) elements
Clp0006I 0  Obj 2867.8382 Primal inf 501.6331 (66)
Clp0006I 106  Obj 2867.8382 Primal inf 1386.4889 (120)
Clp0006I 212  Obj 2867.8382 Primal inf 2761.9281 (150)
Clp0006I 307  Obj 2867.8382 Primal inf 7897.136 (204)
Clp0006I 404  Obj 2867.8382 Primal inf 30553.327 (250)
Clp0006I 509  Obj 9804.897 Primal inf 9306.5022 (236)
Clp0006I 615  Obj 10330.426 Primal inf 62109.126 (298)
Clp0006I 721  Obj 11899.596 Primal inf 5767.5844 (250)
Clp0006I 827  Obj 14210.999 Primal inf 4368.3833 (223)
Clp0006I 933  Obj 16353.523 Primal inf 4227.6301 (247)
Clp0006I 1039  Obj 17764.522 Primal inf 1139.8045 (196)
Clp0006I 1145  Obj 19119.919 Primal inf 3301.4392 (209)
Clp0006I 1251  Obj 20033.324 Primal inf 573.00712 (138)
Clp0006I 1357  Obj 21093.823 Primal inf 426.46853 (95)
Clp0006I 1415  Obj 21525.243
Clp0000I Optimal - objective value 21525.243
Clp0032I Optimal objective 21525.24311 - 1415 iterations time 0.232, Presolve 0.01
Clp0000I Optimal - objective value 21525.243
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 21525.243
Optimality Based BT: 4 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 21525.243 to 21815.227 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (296.93 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 22047.698 (2283.44 seconds)
Cbc0010I After 200 nodes, 69 on tree, 1e+50 best solution, best possible 22047.698 (2291.14 seconds)
Cbc0010I After 300 nodes, 110 on tree, 1e+50 best solution, best possible 22047.698 (2299.78 seconds)
Cbc0010I After 400 nodes, 156 on tree, 1e+50 best solution, best possible 22047.698 (2308.88 seconds)
Cbc0010I After 500 nodes, 202 on tree, 1e+50 best solution, best possible 22047.698 (2317.16 seconds)
Cbc0010I After 600 nodes, 249 on tree, 1e+50 best solution, best possible 22047.698 (2325.41 seconds)
Cbc0010I After 700 nodes, 295 on tree, 1e+50 best solution, best possible 22047.698 (2333.47 seconds)
Cbc0010I After 800 nodes, 343 on tree, 1e+50 best solution, best possible 22047.698 (2340.88 seconds)
Cbc0010I After 900 nodes, 393 on tree, 1e+50 best solution, best possible 22047.698 (2347.09 seconds)
Cbc0010I After 1000 nodes, 443 on tree, 1e+50 best solution, best possible 22047.698 (2353.40 seconds)
Cbc0010I After 1100 nodes, 493 on tree, 1e+50 best solution, best possible 22047.698 (2360.63 seconds)
Cbc0010I After 1200 nodes, 541 on tree, 1e+50 best solution, best possible 22047.698 (2369.66 seconds)
Cbc0010I After 1300 nodes, 586 on tree, 1e+50 best solution, best possible 22047.698 (2378.80 seconds)
Cbc0010I After 1400 nodes, 630 on tree, 1e+50 best solution, best possible 22047.698 (2388.35 seconds)
Cbc0010I After 1500 nodes, 677 on tree, 1e+50 best solution, best possible 22047.698 (2402.60 seconds)
Cbc0010I After 1600 nodes, 716 on tree, 1e+50 best solution, best possible 22047.698 (2415.17 seconds)
Cbc0010I After 1700 nodes, 759 on tree, 1e+50 best solution, best possible 22047.698 (2430.92 seconds)
Cbc0010I After 1800 nodes, 804 on tree, 1e+50 best solution, best possible 22047.698 (2440.94 seconds)
Cbc0010I After 1900 nodes, 840 on tree, 1e+50 best solution, best possible 22047.698 (2454.14 seconds)
Cbc0010I After 2000 nodes, 884 on tree, 1e+50 best solution, best possible 22047.698 (2465.25 seconds)
Cbc0010I After 2100 nodes, 923 on tree, 1e+50 best solution, best possible 22047.698 (2478.66 seconds)
Cbc0010I After 2200 nodes, 962 on tree, 1e+50 best solution, best possible 22047.698 (2484.63 seconds)
Cbc0010I After 2300 nodes, 1004 on tree, 1e+50 best solution, best possible 22047.698 (2494.54 seconds)
Cbc0010I After 2400 nodes, 1029 on tree, 1e+50 best solution, best possible 22047.698 (2503.77 seconds)
Cbc0010I After 2500 nodes, 1061 on tree, 1e+50 best solution, best possible 22047.698 (2510.45 seconds)
Cbc0010I After 2600 nodes, 1090 on tree, 1e+50 best solution, best possible 22047.698 (2517.40 seconds)
Cbc0010I After 2700 nodes, 1127 on tree, 1e+50 best solution, best possible 22047.698 (2524.56 seconds)
Cbc0010I After 2800 nodes, 1161 on tree, 1e+50 best solution, best possible 22047.698 (2530.11 seconds)
Cbc0010I After 2900 nodes, 1200 on tree, 1e+50 best solution, best possible 22047.698 (2535.59 seconds)
Cbc0010I After 3000 nodes, 1217 on tree, 1e+50 best solution, best possible 22047.698 (2540.38 seconds)
Cbc0010I After 3100 nodes, 1248 on tree, 1e+50 best solution, best possible 22047.698 (2546.68 seconds)
Cbc0010I After 3200 nodes, 1281 on tree, 1e+50 best solution, best possible 22047.698 (2553.52 seconds)
Cbc0010I After 3300 nodes, 1316 on tree, 1e+50 best solution, best possible 22047.698 (2562.10 seconds)
Cbc0010I After 3400 nodes, 1343 on tree, 1e+50 best solution, best possible 22047.698 (2568.10 seconds)
Cbc0010I After 3500 nodes, 1371 on tree, 1e+50 best solution, best possible 22047.698 (2573.49 seconds)
Cbc0010I After 3600 nodes, 1401 on tree, 1e+50 best solution, best possible 22047.698 (2578.43 seconds)
Cbc0010I After 3700 nodes, 1441 on tree, 1e+50 best solution, best possible 22047.698 (2582.75 seconds)
Cbc0010I After 3800 nodes, 1488 on tree, 1e+50 best solution, best possible 22047.698 (2586.86 seconds)
Cbc0010I After 3900 nodes, 1509 on tree, 1e+50 best solution, best possible 22047.698 (2591.98 seconds)
Cbc0010I After 4000 nodes, 1532 on tree, 1e+50 best solution, best possible 22047.698 (2596.68 seconds)
Cbc0010I After 4100 nodes, 1553 on tree, 1e+50 best solution, best possible 22047.698 (2613.90 seconds)
Couenne: new cutoff value 4.6360037923e+04 (2667.64 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 4200 nodes, 1576 on tree, 1e+50 best solution, best possible 22059.784 (2786.06 seconds)
Cbc0010I After 4300 nodes, 1609 on tree, 1e+50 best solution, best possible 22059.784 (2794.89 seconds)
Cbc0010I After 4400 nodes, 1644 on tree, 1e+50 best solution, best possible 22059.784 (2804.01 seconds)
Cbc0010I After 4500 nodes, 1687 on tree, 1e+50 best solution, best possible 22059.784 (2814.74 seconds)
Cbc0010I After 4600 nodes, 1728 on tree, 1e+50 best solution, best possible 22059.784 (2826.37 seconds)
Cbc0010I After 4700 nodes, 1752 on tree, 1e+50 best solution, best possible 22070.067 (3107.82 seconds)
Cbc0010I After 4800 nodes, 1786 on tree, 1e+50 best solution, best possible 22070.067 (3116.85 seconds)
Cbc0010I After 4900 nodes, 1825 on tree, 1e+50 best solution, best possible 22070.067 (3125.96 seconds)
Cbc0010I After 5000 nodes, 1867 on tree, 1e+50 best solution, best possible 22070.067 (3136.81 seconds)
Cbc0010I After 5100 nodes, 1901 on tree, 1e+50 best solution, best possible 22070.067 (3148.51 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 22070.067), took 532738 iterations and 5122 nodes (3567.07 seconds)
Cbc0035I Maximum depth 2090, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1801
Linearization cuts added in total:           1801  (separation time: 0.027964s)
Total solve time:                          3567.3s (3567.3s in branch-and-bound)
Lower bound:                              22070.1
Upper bound:                                46360  (gap: 110.05%)
Branch-and-bound nodes:                      5122
Stats: /tmp/jl_ijAMeR/model.nl 3350 [var]  125 [int] 1100 [con]  231 [aux]   1801 [root]     1801 [tot] 0.027964 [sep]   3567.3 [time]   3567.3 [bb]         2.207007e+04 [lower]         4.636004e+04 [upper]    5122 [nodes]
Performance of                           FBBT:	    62.2346s,     5925 runs. fix:   0.198092 shrnk:   0.215038 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    735.096s,        8 runs. fix:          0 shrnk:    2.06571 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
