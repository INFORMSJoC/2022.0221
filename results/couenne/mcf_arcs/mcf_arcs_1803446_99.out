solving instance mcf arcs c25_100_30_F_T_5 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 158681.83     1091 178.44989
Loaded instance "/tmp/jl_kioSAJ/model.nl"
Constraints:         1100
Variables:           3350 (125 integer)
Auxiliaries:          231 (0 integer)

Coin0506I Presolve 1569 (-232) rows, 3254 (-327) columns and 13415 (-647) elements
Clp0006I 0  Obj 21904.399 Primal inf 1736.9733 (62)
Clp0006I 106  Obj 21904.399 Primal inf 3067.5069 (128)
Clp0006I 212  Obj 21904.399 Primal inf 9545.005 (176)
Clp0006I 318  Obj 21904.399 Primal inf 12104.058 (224)
Clp0006I 424  Obj 21904.399 Primal inf 20368.443 (247)
Clp0006I 507  Obj 21904.399 Primal inf 59648.285 (306)
Clp0006I 596  Obj 21904.399 Primal inf 236421.61 (337)
Clp0006I 702  Obj 21904.399 Primal inf 238728.15 (350)
Clp0006I 785  Obj 21904.399 Primal inf 112198.2 (335)
Clp0006I 883  Obj 35838.119 Primal inf 63121.155 (329)
Clp0006I 989  Obj 57996.497 Primal inf 7283.7907 (286)
Clp0006I 1095  Obj 64904.629 Primal inf 23654.608 (279)
Clp0006I 1201  Obj 69578.257 Primal inf 5527.8038 (244)
Clp0006I 1307  Obj 72475.237 Primal inf 3775.7085 (253)
Clp0006I 1413  Obj 74956.777 Primal inf 1567.2843 (176)
Clp0006I 1519  Obj 77253.041 Primal inf 2974.0519 (207)
Clp0006I 1625  Obj 79377.79 Primal inf 351.44295 (116)
Clp0006I 1696  Obj 79920.155
Clp0000I Optimal - objective value 79920.155
Clp0032I Optimal objective 79920.15496 - 1696 iterations time 0.282, Presolve 0.01
Clp0000I Optimal - objective value 79920.155
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 79920.155
Optimality Based BT: 1 improved bounds
Probing: 2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from 79920.155 to 82201.921 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (285.72 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 35 on tree, 1e+50 best solution, best possible 83318.432 (2176.93 seconds)
Cbc0010I After 200 nodes, 70 on tree, 1e+50 best solution, best possible 83318.432 (2184.23 seconds)
Cbc0010I After 300 nodes, 110 on tree, 1e+50 best solution, best possible 83318.432 (2191.74 seconds)
Cbc0010I After 400 nodes, 158 on tree, 1e+50 best solution, best possible 83318.432 (2199.47 seconds)
Cbc0010I After 500 nodes, 205 on tree, 1e+50 best solution, best possible 83318.432 (2206.63 seconds)
Cbc0010I After 600 nodes, 248 on tree, 1e+50 best solution, best possible 83318.432 (2212.75 seconds)
Cbc0010I After 700 nodes, 291 on tree, 1e+50 best solution, best possible 83318.432 (2219.07 seconds)
Cbc0010I After 800 nodes, 339 on tree, 1e+50 best solution, best possible 83318.432 (2225.30 seconds)
Cbc0010I After 900 nodes, 386 on tree, 1e+50 best solution, best possible 83318.432 (2230.77 seconds)
Cbc0010I After 1000 nodes, 430 on tree, 1e+50 best solution, best possible 83318.432 (2236.72 seconds)
Cbc0010I After 1100 nodes, 471 on tree, 1e+50 best solution, best possible 83318.432 (2241.87 seconds)
Cbc0010I After 1200 nodes, 517 on tree, 1e+50 best solution, best possible 83318.432 (2247.69 seconds)
Cbc0010I After 1300 nodes, 561 on tree, 1e+50 best solution, best possible 83318.432 (2253.68 seconds)
Cbc0010I After 1400 nodes, 584 on tree, 1e+50 best solution, best possible 83318.432 (2260.55 seconds)
Cbc0010I After 1500 nodes, 604 on tree, 1e+50 best solution, best possible 83318.432 (2266.55 seconds)
Cbc0010I After 1600 nodes, 629 on tree, 1e+50 best solution, best possible 83318.432 (2273.00 seconds)
Cbc0010I After 1700 nodes, 640 on tree, 1e+50 best solution, best possible 83318.432 (2278.94 seconds)
Cbc0010I After 1800 nodes, 657 on tree, 1e+50 best solution, best possible 83318.432 (2284.55 seconds)
Cbc0010I After 1900 nodes, 695 on tree, 1e+50 best solution, best possible 83318.432 (2290.11 seconds)
Cbc0010I After 2000 nodes, 721 on tree, 1e+50 best solution, best possible 83318.432 (2296.10 seconds)
Cbc0010I After 2100 nodes, 752 on tree, 1e+50 best solution, best possible 83318.432 (2301.49 seconds)
Cbc0010I After 2200 nodes, 785 on tree, 1e+50 best solution, best possible 83318.432 (2307.18 seconds)
Cbc0010I After 2300 nodes, 818 on tree, 1e+50 best solution, best possible 83318.432 (2312.00 seconds)
Cbc0010I After 2400 nodes, 845 on tree, 1e+50 best solution, best possible 83318.432 (2316.79 seconds)
Cbc0010I After 2500 nodes, 883 on tree, 1e+50 best solution, best possible 83318.432 (2321.49 seconds)
Cbc0010I After 2600 nodes, 910 on tree, 1e+50 best solution, best possible 83318.432 (2325.43 seconds)
Cbc0010I After 2700 nodes, 926 on tree, 1e+50 best solution, best possible 83318.432 (2329.29 seconds)
Cbc0010I After 2800 nodes, 949 on tree, 1e+50 best solution, best possible 83318.432 (2333.76 seconds)
Cbc0010I After 2900 nodes, 969 on tree, 1e+50 best solution, best possible 83318.432 (2337.91 seconds)
Cbc0010I After 3000 nodes, 999 on tree, 1e+50 best solution, best possible 83318.432 (2342.32 seconds)
Cbc0010I After 3100 nodes, 1025 on tree, 1e+50 best solution, best possible 83318.432 (2346.27 seconds)
Cbc0010I After 3200 nodes, 1029 on tree, 1e+50 best solution, best possible 83318.432 (2350.22 seconds)
Couenne: new cutoff value 1.6275738733e+05 (2536.84 seconds)
Cbc0010I After 3300 nodes, 1055 on tree, 1e+50 best solution, best possible 83386.326 (2424.38 seconds)
Cbc0010I After 3400 nodes, 1089 on tree, 1e+50 best solution, best possible 83386.326 (2431.83 seconds)
Cbc0010I After 3500 nodes, 1127 on tree, 1e+50 best solution, best possible 83386.326 (2440.55 seconds)
Cbc0010I After 3600 nodes, 1170 on tree, 1e+50 best solution, best possible 83386.326 (2450.34 seconds)
Cbc0010I After 3700 nodes, 1206 on tree, 1e+50 best solution, best possible 83386.326 (2459.34 seconds)
Cbc0010I After 3800 nodes, 1238 on tree, 1e+50 best solution, best possible 83386.326 (2470.25 seconds)
Cbc0010I After 3900 nodes, 1261 on tree, 1e+50 best solution, best possible 83386.326 (2480.12 seconds)
Cbc0010I After 4000 nodes, 1287 on tree, 1e+50 best solution, best possible 83670.899 (2522.91 seconds)
Cbc0010I After 4100 nodes, 1321 on tree, 1e+50 best solution, best possible 83670.899 (2531.02 seconds)
Cbc0010I After 4200 nodes, 1356 on tree, 1e+50 best solution, best possible 83670.899 (2539.19 seconds)
Cbc0010I After 4300 nodes, 1400 on tree, 1e+50 best solution, best possible 83670.899 (2548.23 seconds)
Cbc0010I After 4400 nodes, 1434 on tree, 1e+50 best solution, best possible 83749.364 (2983.42 seconds)
Cbc0010I After 4500 nodes, 1468 on tree, 1e+50 best solution, best possible 83749.364 (2990.85 seconds)
Cbc0010I After 4600 nodes, 1505 on tree, 1e+50 best solution, best possible 83749.364 (2999.78 seconds)
Cbc0010I After 4700 nodes, 1548 on tree, 1e+50 best solution, best possible 83749.364 (3009.92 seconds)
Cbc0010I After 4800 nodes, 1582 on tree, 1e+50 best solution, best possible 83749.364 (3019.84 seconds)
Cbc0010I After 4900 nodes, 1614 on tree, 1e+50 best solution, best possible 83805.077 (3027.37 seconds)
Cbc0010I After 5000 nodes, 1646 on tree, 1e+50 best solution, best possible 83805.077 (3035.77 seconds)
Cbc0010I After 5100 nodes, 1686 on tree, 1e+50 best solution, best possible 83805.077 (3045.33 seconds)
Cbc0010I After 5200 nodes, 1717 on tree, 1e+50 best solution, best possible 83878.711 (3072.52 seconds)
Cbc0010I After 5300 nodes, 1746 on tree, 1e+50 best solution, best possible 83878.711 (3079.95 seconds)
Cbc0010I After 5400 nodes, 1788 on tree, 1e+50 best solution, best possible 83878.711 (3089.46 seconds)
Cbc0010I After 5500 nodes, 1824 on tree, 1e+50 best solution, best possible 83878.711 (3098.92 seconds)
Cbc0010I After 5600 nodes, 1858 on tree, 1e+50 best solution, best possible 83878.711 (3108.26 seconds)
Cbc0010I After 5700 nodes, 1897 on tree, 1e+50 best solution, best possible 83878.711 (3119.72 seconds)
Cbc0010I After 5800 nodes, 1937 on tree, 1e+50 best solution, best possible 83878.711 (3130.64 seconds)
Cbc0010I After 5900 nodes, 1979 on tree, 1e+50 best solution, best possible 83878.711 (3141.94 seconds)
Cbc0010I After 6000 nodes, 2028 on tree, 1e+50 best solution, best possible 83878.711 (3151.77 seconds)
Cbc0010I After 6100 nodes, 2077 on tree, 1e+50 best solution, best possible 83878.711 (3159.86 seconds)
Cbc0010I After 6200 nodes, 2127 on tree, 1e+50 best solution, best possible 83878.711 (3167.76 seconds)
Cbc0010I After 6300 nodes, 2175 on tree, 1e+50 best solution, best possible 83878.711 (3175.70 seconds)
Cbc0010I After 6400 nodes, 2220 on tree, 1e+50 best solution, best possible 83878.711 (3184.04 seconds)
Cbc0010I After 6500 nodes, 2243 on tree, 1e+50 best solution, best possible 83878.711 (3194.53 seconds)
Cbc0010I After 6600 nodes, 2287 on tree, 1e+50 best solution, best possible 83878.711 (3204.72 seconds)
Cbc0010I After 6700 nodes, 2315 on tree, 1e+50 best solution, best possible 83878.711 (3214.61 seconds)
Cbc0010I After 6800 nodes, 2346 on tree, 1e+50 best solution, best possible 83878.711 (3223.91 seconds)
Cbc0010I After 6900 nodes, 2384 on tree, 1e+50 best solution, best possible 83878.711 (3233.09 seconds)
Cbc0010I After 7000 nodes, 2411 on tree, 1e+50 best solution, best possible 83878.711 (3242.77 seconds)
Cbc0010I After 7100 nodes, 2443 on tree, 1e+50 best solution, best possible 83878.711 (3251.86 seconds)
Cbc0010I After 7200 nodes, 2462 on tree, 1e+50 best solution, best possible 83878.711 (3259.23 seconds)
Cbc0010I After 7300 nodes, 2497 on tree, 1e+50 best solution, best possible 83878.711 (3266.96 seconds)
Cbc0010I After 7400 nodes, 2511 on tree, 1e+50 best solution, best possible 83878.711 (3274.08 seconds)
Cbc0010I After 7500 nodes, 2554 on tree, 1e+50 best solution, best possible 83878.711 (3282.81 seconds)
Cbc0010I After 7600 nodes, 2588 on tree, 1e+50 best solution, best possible 83878.711 (3291.92 seconds)
Cbc0010I After 7700 nodes, 2608 on tree, 1e+50 best solution, best possible 83878.711 (3299.50 seconds)
Cbc0010I After 7800 nodes, 2641 on tree, 1e+50 best solution, best possible 83878.711 (3308.27 seconds)
Cbc0010I After 7900 nodes, 2659 on tree, 1e+50 best solution, best possible 83878.711 (3315.96 seconds)
Cbc0010I After 8000 nodes, 2673 on tree, 1e+50 best solution, best possible 83878.711 (3323.66 seconds)
Cbc0010I After 8100 nodes, 2687 on tree, 1e+50 best solution, best possible 83878.711 (3331.83 seconds)
Cbc0010I After 8200 nodes, 2695 on tree, 1e+50 best solution, best possible 83878.711 (3338.85 seconds)
Cbc0010I After 8300 nodes, 2712 on tree, 1e+50 best solution, best possible 83878.711 (3345.84 seconds)
Cbc0010I After 8400 nodes, 2740 on tree, 1e+50 best solution, best possible 83910.338 (3352.67 seconds)
Cbc0010I After 8500 nodes, 2772 on tree, 1e+50 best solution, best possible 83910.338 (3360.75 seconds)
Cbc0010I After 8600 nodes, 2812 on tree, 1e+50 best solution, best possible 83910.338 (3370.05 seconds)
Cbc0010I After 8700 nodes, 2850 on tree, 1e+50 best solution, best possible 83910.338 (3378.92 seconds)
Cbc0010I After 8800 nodes, 2890 on tree, 1e+50 best solution, best possible 83910.479 (3388.56 seconds)
Cbc0010I After 8900 nodes, 2920 on tree, 1e+50 best solution, best possible 83910.479 (3396.51 seconds)
Cbc0010I After 9000 nodes, 2956 on tree, 1e+50 best solution, best possible 83910.479 (3405.01 seconds)
Cbc0010I After 9100 nodes, 2995 on tree, 1e+50 best solution, best possible 83910.479 (3414.66 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 83910.479), took 758329 iterations and 9124 nodes (3425.52 seconds)
Cbc0035I Maximum depth 1626, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1801
Linearization cuts added in total:           1801  (separation time: 0.023519s)
Total solve time:                         3425.81s (3425.81s in branch-and-bound)
Lower bound:                              83910.5
Upper bound:                               162757  (gap: 93.96%)
Branch-and-bound nodes:                      9124
Stats: /tmp/jl_kioSAJ/model.nl 3350 [var]  125 [int] 1100 [con]  231 [aux]   1801 [root]     1801 [tot] 0.023519 [sep]  3425.81 [time]  3425.81 [bb]         8.391048e+04 [lower]         1.627574e+05 [upper]    9124 [nodes]
Performance of                           FBBT:	    97.8213s,    10126 runs. fix:   0.434579 shrnk:   0.208269 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	      609.5s,        7 runs. fix:   0.179104 shrnk:    7.28827 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
