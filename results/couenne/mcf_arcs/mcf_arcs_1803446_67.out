solving instance mcf arcs c25_100_10_F_T_5 3 6 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 30131.817     1358 238.81706
NLP0014I             2      INFEAS 6.7032932       83 3.731622
Loaded instance "/tmp/jl_jCs9HG/model.nl"
Constraints:          600
Variables:           1350 (125 integer)
Auxiliaries:          407 (0 integer)

Coin0506I Presolve 1470 (-325) rows, 1330 (-427) columns and 6467 (-697) elements
Clp0006I 0  Obj 0 Primal inf 1707.2713 (233)
Clp0006I 104  Obj 4.1930176e-17 Primal inf 2160.0351 (256)
Clp0006I 208  Obj 4.9286331e-15 Primal inf 2486.9296 (270)
Clp0006I 302  Obj 2.3887356e-15 Primal inf 9216.8197 (323)
Clp0006I 388  Obj 4.6951071e-14 Primal inf 13249.104 (301)
Clp0006I 492  Obj 2666.6827 Primal inf 6437.759 (288)
Clp0006I 596  Obj 4568.6086 Primal inf 14600.013 (338)
Clp0006I 700  Obj 6964.7537 Primal inf 1637.0387 (200)
Clp0006I 804  Obj 8872.3305 Primal inf 535.00556 (117)
Clp0006I 908  Obj 9872.2525 Primal inf 41.583963 (62)
Clp0006I 972  Obj 9941.4108
Clp0000I Optimal - objective value 9941.4108
Clp0032I Optimal objective 9941.41078 - 972 iterations time 0.122, Presolve 0.01
Clp0000I Optimal - objective value 9941.4108
NLP Heuristic: NLP0014I             3         OPT 30313.659     1108 251.16162
no solution.
Clp0000I Optimal - objective value 9941.4108
Optimality Based BT: 3 improved bounds
Probing: Couenne: new cutoff value 3.9140816663e+04 (517.232 seconds)
0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 146 added rows had average density of 2
Cbc0013I At root node, 146 cuts changed objective from 9941.4108 to 11778.51 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1275 row cuts average 2.0 elements, 224 column cuts (365 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (505.88 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 3.8002709683e+04 (904.991 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 3.7791828809e+04 (1341.86 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 3.7632474711e+04 (2162.77 seconds)
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 12053.722 (2724.64 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 12053.722 (2732.03 seconds)
Cbc0010I After 300 nodes, 135 on tree, 1e+50 best solution, best possible 12053.722 (2739.30 seconds)
Cbc0010I After 400 nodes, 180 on tree, 1e+50 best solution, best possible 12053.722 (2745.97 seconds)
Cbc0010I After 500 nodes, 225 on tree, 1e+50 best solution, best possible 12053.722 (2752.15 seconds)
Cbc0010I After 600 nodes, 269 on tree, 1e+50 best solution, best possible 12053.722 (2757.57 seconds)
Cbc0010I After 700 nodes, 314 on tree, 1e+50 best solution, best possible 12053.722 (2762.43 seconds)
Cbc0010I After 800 nodes, 357 on tree, 1e+50 best solution, best possible 12053.722 (2767.35 seconds)
Cbc0010I After 900 nodes, 398 on tree, 1e+50 best solution, best possible 12053.722 (2772.04 seconds)
Cbc0010I After 1000 nodes, 440 on tree, 1e+50 best solution, best possible 12053.722 (2776.55 seconds)
Cbc0010I After 1100 nodes, 481 on tree, 1e+50 best solution, best possible 12053.722 (2780.33 seconds)
Cbc0010I After 1200 nodes, 526 on tree, 1e+50 best solution, best possible 12053.722 (2784.22 seconds)
Cbc0010I After 1300 nodes, 569 on tree, 1e+50 best solution, best possible 12053.722 (2788.13 seconds)
Cbc0010I After 1400 nodes, 605 on tree, 1e+50 best solution, best possible 12053.722 (2791.73 seconds)
Cbc0010I After 1500 nodes, 644 on tree, 1e+50 best solution, best possible 12053.722 (2795.20 seconds)
Cbc0010I After 1600 nodes, 685 on tree, 1e+50 best solution, best possible 12053.722 (2798.44 seconds)
Cbc0010I After 1700 nodes, 729 on tree, 1e+50 best solution, best possible 12053.722 (2801.77 seconds)
Cbc0010I After 1800 nodes, 772 on tree, 1e+50 best solution, best possible 12053.722 (2805.05 seconds)
Cbc0010I After 1900 nodes, 812 on tree, 1e+50 best solution, best possible 12053.722 (2808.35 seconds)
Cbc0010I After 2000 nodes, 853 on tree, 1e+50 best solution, best possible 12053.722 (2811.53 seconds)
Cbc0010I After 2100 nodes, 885 on tree, 1e+50 best solution, best possible 12053.722 (2814.88 seconds)
Cbc0010I After 2200 nodes, 929 on tree, 1e+50 best solution, best possible 12053.722 (2818.28 seconds)
Cbc0010I After 2300 nodes, 969 on tree, 1e+50 best solution, best possible 12053.722 (2821.47 seconds)
Cbc0010I After 2400 nodes, 1007 on tree, 1e+50 best solution, best possible 12053.722 (2824.58 seconds)
Cbc0010I After 2500 nodes, 1046 on tree, 1e+50 best solution, best possible 12053.722 (2827.88 seconds)
Cbc0010I After 2600 nodes, 1091 on tree, 1e+50 best solution, best possible 12053.722 (2831.02 seconds)
Cbc0010I After 2700 nodes, 1117 on tree, 1e+50 best solution, best possible 12053.722 (2833.94 seconds)
Cbc0010I After 2800 nodes, 1153 on tree, 1e+50 best solution, best possible 12053.722 (2837.04 seconds)
Cbc0010I After 2900 nodes, 1191 on tree, 1e+50 best solution, best possible 12053.722 (2840.31 seconds)
Cbc0010I After 3000 nodes, 1239 on tree, 1e+50 best solution, best possible 12053.722 (2843.61 seconds)
Cbc0010I After 3100 nodes, 1288 on tree, 1e+50 best solution, best possible 12053.722 (2846.88 seconds)
Cbc0010I After 3200 nodes, 1335 on tree, 1e+50 best solution, best possible 12053.722 (2850.19 seconds)
Cbc0010I After 3300 nodes, 1369 on tree, 1e+50 best solution, best possible 12053.722 (2853.36 seconds)
Cbc0010I After 3400 nodes, 1411 on tree, 1e+50 best solution, best possible 12053.722 (2856.71 seconds)
Cbc0010I After 3500 nodes, 1461 on tree, 1e+50 best solution, best possible 12053.722 (2859.86 seconds)
Couenne: new cutoff value 3.0967459846e+04 (3107.18 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 12053.722), took 192269 iterations and 3577 nodes (3357.82 seconds)
Cbc0035I Maximum depth 1781, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1795
Linearization cuts added in total:           1795  (separation time: 0.010986s)
Total solve time:                         3357.94s (3357.94s in branch-and-bound)
Lower bound:                              12053.7
Upper bound:                              30967.5  (gap: 156.90%)
Branch-and-bound nodes:                      3577
Stats: /tmp/jl_jCs9HG/model.nl 1350 [var]  125 [int]  600 [con]  407 [aux]   1795 [root]     1795 [tot] 0.010986 [sep]  3357.94 [time]  3357.94 [bb]         1.205372e+04 [lower]         3.096746e+04 [upper]    3577 [nodes]
Performance of                           FBBT:	    12.8846s,     4095 runs. fix:   0.149959 shrnk:   0.217676 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    147.148s,        8 runs. fix:          0 shrnk:   0.053943 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
