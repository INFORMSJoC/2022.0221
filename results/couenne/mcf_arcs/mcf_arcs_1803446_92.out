solving instance mcf arcs c25_100_30_F_T_5 3 6 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 83620.436      171 23.223487
Loaded instance "/tmp/jl_CRlJoA/model.nl"
Constraints:         1100
Variables:           3350 (125 integer)
Auxiliaries:          231 (0 integer)

Coin0506I Presolve 2044 (-38) rows, 3448 (-133) columns and 14560 (-364) elements
Clp0006I 0  Obj -1538606.4 Primal inf 4670948 (161)
Clp0006I 115  Obj -585155.18 Primal inf 577116.96 (200)
Clp0006I 230  Obj -432360.89 Primal inf 54695.836 (259)
Clp0006I 345  Obj -395513.56 Primal inf 31783.845 (226)
Clp0006I 460  Obj -380086.36 Primal inf 84894.91 (374)
Clp0006I 575  Obj -297743.41 Primal inf 271359.35 (412)
Clp0006I 690  Obj -218746.22 Primal inf 236157.66 (404)
Clp0006I 805  Obj -189265.64 Primal inf 225241.39 (376)
Clp0006I 920  Obj -189243.68 Primal inf 226471.05 (390)
Clp0006I 1035  Obj -189243.68 Primal inf 234035.32 (430)
Clp0006I 1150  Obj -189243.68 Primal inf 249402.78 (434)
Clp0006I 1265  Obj -189243.68 Primal inf 307790.69 (480)
Clp0006I 1380  Obj -189243.68 Primal inf 402471.84 (456)
Clp0006I 1495  Obj -175656.57 Primal inf 325462.6 (535)
Clp0006I 1610  Obj -163391.02 Primal inf 157095.17 (533)
Clp0006I 1725  Obj -151259.22 Primal inf 393573.86 (484)
Clp0006I 1840  Obj -148003.79 Primal inf 420332.04 (503)
Clp0006I 1955  Obj -131933.43 Primal inf 71976.457 (411)
Clp0006I 2070  Obj -130803.56 Primal inf 5352000.4 (511)
Clp0006I 2185  Obj -129676.46 Primal inf 2618021.9 (526)
Clp0006I 2300  Obj -125860.74 Primal inf 62786.022 (416)
Clp0006I 2415  Obj -122367.21 Primal inf 38678.669 (417)
Clp0006I 2530  Obj -119576.77 Primal inf 860062.16 (388)
Clp0006I 2645  Obj -116861.51 Primal inf 645925.73 (409)
Clp0006I 2760  Obj -114880.99 Primal inf 1294026.2 (421)
Clp0006I 2875  Obj -111904.55 Primal inf 302830.64 (321)
Clp0006I 2990  Obj -111546.84 Primal inf 205973.64 (283)
Clp0006I 3105  Obj -109669.43 Primal inf 15729.15 (322)
Clp0006I 3220  Obj -109662.33 Primal inf 20563.261 (319)
Clp0006I 3335  Obj -108136.02 Primal inf 6377.7309 (274)
Clp0006I 3450  Obj -107066.51 Primal inf 5534.5698 (269)
Clp0006I 3565  Obj -106156.64 Primal inf 8184.9245 (239)
Clp0006I 3680  Obj -104794.94 Primal inf 5013.0883 (207)
Clp0006I 3795  Obj -104247.31 Primal inf 3588.4792 (193)
Clp0006I 3910  Obj -103668.15 Primal inf 756.47146 (125)
Clp0006I 4025  Obj -103494.5 Primal inf 538.66091 (118)
Clp0006I 4140  Obj -103369.66 Primal inf 40.86885 (30)
Clp0006I 4255  Obj -103367.3 Primal inf 2.2571542 (18)
Clp0006I 4299  Obj -103367.3
Clp0000I Optimal - objective value -103367.3
Clp0032I Optimal objective -103367.3046 - 4299 iterations time 0.922, Presolve 0.01
Clp0000I Optimal - objective value -103367.3
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -103367.3
Optimality Based BT: 8 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 144 added rows had average density of 2
Cbc0013I At root node, 144 cuts changed objective from -103367.3 to -47525.623 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1670 row cuts average 2.0 elements, 1170 column cuts (1216 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (375.33 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible -33856.078 (3258.07 seconds)
Cbc0010I After 200 nodes, 86 on tree, 1e+50 best solution, best possible -33856.078 (3323.07 seconds)
Cbc0010I After 300 nodes, 115 on tree, 1e+50 best solution, best possible -33856.078 (3342.83 seconds)
Cbc0010I After 400 nodes, 163 on tree, 1e+50 best solution, best possible -33856.078 (3359.71 seconds)
Cbc0010I After 500 nodes, 211 on tree, 1e+50 best solution, best possible -33856.078 (3373.36 seconds)
Cbc0010I After 600 nodes, 260 on tree, 1e+50 best solution, best possible -33856.078 (3386.26 seconds)
Cbc0010I After 700 nodes, 310 on tree, 1e+50 best solution, best possible -33856.078 (3396.94 seconds)
Cbc0010I After 800 nodes, 357 on tree, 1e+50 best solution, best possible -33856.078 (3405.69 seconds)
Cbc0010I After 900 nodes, 406 on tree, 1e+50 best solution, best possible -33856.078 (3413.54 seconds)
Cbc0010I After 1000 nodes, 455 on tree, 1e+50 best solution, best possible -33856.078 (3420.58 seconds)
Cbc0010I After 1100 nodes, 505 on tree, 1e+50 best solution, best possible -33856.078 (3427.59 seconds)
Cbc0010I After 1200 nodes, 555 on tree, 1e+50 best solution, best possible -33856.078 (3434.30 seconds)
Cbc0010I After 1300 nodes, 602 on tree, 1e+50 best solution, best possible -33856.078 (3440.84 seconds)
Cbc0010I After 1400 nodes, 651 on tree, 1e+50 best solution, best possible -33856.078 (3447.53 seconds)
Cbc0010I After 1500 nodes, 700 on tree, 1e+50 best solution, best possible -33856.078 (3453.91 seconds)
Cbc0010I After 1600 nodes, 749 on tree, 1e+50 best solution, best possible -33856.078 (3460.19 seconds)
Cbc0010I After 1700 nodes, 798 on tree, 1e+50 best solution, best possible -33856.078 (3466.31 seconds)
Cbc0010I After 1800 nodes, 847 on tree, 1e+50 best solution, best possible -33856.078 (3472.10 seconds)
Cbc0010I After 1900 nodes, 895 on tree, 1e+50 best solution, best possible -33856.078 (3477.79 seconds)
Cbc0010I After 2000 nodes, 944 on tree, 1e+50 best solution, best possible -33856.078 (3483.64 seconds)
Cbc0010I After 2100 nodes, 993 on tree, 1e+50 best solution, best possible -33856.078 (3489.42 seconds)
Cbc0010I After 2200 nodes, 1040 on tree, 1e+50 best solution, best possible -33856.078 (3495.19 seconds)
Cbc0010I After 2300 nodes, 1082 on tree, 1e+50 best solution, best possible -33856.078 (3504.90 seconds)
Cbc0010I After 2400 nodes, 1128 on tree, 1e+50 best solution, best possible -33856.078 (3510.91 seconds)
Couenne: new cutoff value 1.7154300355e+05 (3544.25 seconds)
Couenne: new cutoff value 1.7154300355e+05 (3544.36 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -33856.078), took 601617 iterations and 2457 nodes (3570.80 seconds)
Cbc0035I Maximum depth 1227, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2082
Linearization cuts added in total:           2082  (separation time: 0.030804s)
Total solve time:                         3571.73s (3571.73s in branch-and-bound)
Lower bound:                             -33856.1
Upper bound:                               171543  (gap: 606.67%)
Branch-and-bound nodes:                      2457
Stats: /tmp/jl_CRlJoA/model.nl 3350 [var]  125 [int] 1100 [con]  231 [aux]   2082 [root]     2082 [tot] 0.030804 [sep]  3571.73 [time]  3571.73 [bb]        -3.385608e+04 [lower]         1.715430e+05 [upper]    2457 [nodes]
Performance of                           FBBT:	    32.4242s,     2983 runs. fix:   0.892224 shrnk:   0.258751 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    858.963s,        7 runs. fix:          0 shrnk:    29.3479 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
