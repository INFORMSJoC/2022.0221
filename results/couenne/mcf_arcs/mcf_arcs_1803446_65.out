solving instance mcf arcs c25_100_10_F_T_5 3 6 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 36352.264      125 5.763685
NLP0014I             2      INFEAS 18.918295       55 1.731747
Loaded instance "/tmp/jl_83WlC0/model.nl"
Constraints:          600
Variables:           1350 (125 integer)
Auxiliaries:          211 (0 integer)

Coin0506I Presolve 1583 (-34) rows, 1492 (-69) columns and 6913 (-95) elements
Clp0006I 0  Obj -580798.28 Primal inf 681884.17 (131)
Clp0006I 106  Obj -313720.91 Primal inf 264360.32 (201)
Clp0006I 212  Obj -218878.96 Primal inf 11490.162 (174)
Clp0006I 318  Obj -209985.69 Primal inf 7237.0919 (172)
Clp0006I 424  Obj -159460.28 Primal inf 7063.3982 (297)
Clp0006I 530  Obj -139424.28 Primal inf 6312.8742 (340)
Clp0006I 636  Obj -131464.19 Primal inf 6205.8595 (381)
Clp0006I 741  Obj -131464.19 Primal inf 7023.1418 (390)
Clp0006I 841  Obj -130252.94 Primal inf 12494.732 (435)
Clp0006I 921  Obj -130252.94 Primal inf 5822.6465 (434)
Clp0006I 1015  Obj -122590.71 Primal inf 14514.955 (465)
Clp0006I 1096  Obj -122590.71 Primal inf 9888.9828 (453)
Clp0006I 1177  Obj -122590.71 Primal inf 9453.26 (455)
Clp0006I 1264  Obj -112638.17 Primal inf 4544.4798 (420)
Clp0006I 1345  Obj -110782.52 Primal inf 5420.7813 (427)
Clp0006I 1426  Obj -109697.14 Primal inf 6553.2559 (416)
Clp0006I 1502  Obj -109697.14 Primal inf 8393.1399 (429)
Clp0006I 1583  Obj -109697.14 Primal inf 7018.0823 (416)
Clp0006I 1660  Obj -109697.14 Primal inf 6515.0749 (432)
Clp0006I 1740  Obj -109697.14 Primal inf 7953.7194 (425)
Clp0006I 1825  Obj -109697.14 Primal inf 7722.3379 (404)
Clp0006I 1906  Obj -109443.79 Primal inf 4971.792 (371)
Clp0006I 2012  Obj -102824.61 Primal inf 5900.9863 (383)
Clp0006I 2112  Obj -101231.86 Primal inf 7632.2759 (384)
Clp0006I 2218  Obj -95853.396 Primal inf 1466.3905 (243)
Clp0006I 2309  Obj -91863.129 Primal inf 2154.8483 (238)
Clp0006I 2407  Obj -91248.06 Primal inf 4261.2501 (223)
Clp0006I 2513  Obj -88790.092 Primal inf 2547.0849 (200)
Clp0006I 2613  Obj -86610.771 Primal inf 151.24142 (90)
Clp0006I 2703  Obj -85792.394 Primal inf 116.34091 (49)
Clp0006I 2758  Obj -85701.836
Clp0000I Optimal - objective value -85701.836
Clp0032I Optimal objective -85701.8358 - 2758 iterations time 0.452, Presolve 0.01
Clp0000I Optimal - objective value -85701.836
NLP Heuristic: NLP0014I             3      INFEAS 12.142803       59 1.181264
no solution.
Clp0000I Optimal - objective value -85701.836
Optimality Based BT: 3 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 177 added rows had average density of 2
Cbc0013I At root node, 177 cuts changed objective from -85701.836 to -71719.906 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1922 row cuts average 2.0 elements, 99 column cuts (211 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (54.24 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible -70117.912 (385.25 seconds)
Cbc0010I After 200 nodes, 95 on tree, 1e+50 best solution, best possible -70117.912 (416.96 seconds)
Cbc0010I After 300 nodes, 143 on tree, 1e+50 best solution, best possible -70117.912 (447.98 seconds)
Cbc0010I After 400 nodes, 187 on tree, 1e+50 best solution, best possible -70117.912 (467.06 seconds)
Cbc0010I After 500 nodes, 236 on tree, 1e+50 best solution, best possible -70117.912 (483.05 seconds)
Cbc0010I After 600 nodes, 282 on tree, 1e+50 best solution, best possible -70117.912 (497.49 seconds)
Cbc0010I After 700 nodes, 329 on tree, 1e+50 best solution, best possible -70117.912 (508.09 seconds)
Cbc0010I After 800 nodes, 377 on tree, 1e+50 best solution, best possible -70117.912 (516.40 seconds)
Cbc0010I After 900 nodes, 426 on tree, 1e+50 best solution, best possible -70117.912 (523.08 seconds)
Cbc0010I After 1000 nodes, 472 on tree, 1e+50 best solution, best possible -70117.912 (529.21 seconds)
Cbc0010I After 1100 nodes, 521 on tree, 1e+50 best solution, best possible -70117.912 (533.92 seconds)
Cbc0010I After 1200 nodes, 569 on tree, 1e+50 best solution, best possible -70117.912 (537.95 seconds)
Cbc0010I After 1300 nodes, 619 on tree, 1e+50 best solution, best possible -70117.912 (541.23 seconds)
Cbc0010I After 1400 nodes, 669 on tree, 1e+50 best solution, best possible -70117.912 (544.35 seconds)
Cbc0010I After 1500 nodes, 719 on tree, 1e+50 best solution, best possible -70117.912 (547.49 seconds)
Cbc0010I After 1600 nodes, 769 on tree, 1e+50 best solution, best possible -70117.912 (550.61 seconds)
Cbc0010I After 1700 nodes, 817 on tree, 1e+50 best solution, best possible -70117.912 (553.70 seconds)
Cbc0010I After 1800 nodes, 867 on tree, 1e+50 best solution, best possible -70117.912 (556.60 seconds)
Couenne: new cutoff value 7.5874296776e+04 (567.344 seconds)
Couenne: new cutoff value 7.5874296770e+04 (567.357 seconds)
Cbc0010I After 1900 nodes, 914 on tree, 1e+50 best solution, best possible -69945.86 (568.04 seconds)
Cbc0010I After 2000 nodes, 963 on tree, 1e+50 best solution, best possible -69945.86 (589.41 seconds)
Cbc0010I After 2100 nodes, 1008 on tree, 1e+50 best solution, best possible -69945.86 (629.88 seconds)
Cbc0010I After 2200 nodes, 1057 on tree, 1e+50 best solution, best possible -69945.86 (649.65 seconds)
Cbc0010I After 2300 nodes, 1100 on tree, 1e+50 best solution, best possible -69945.86 (665.57 seconds)
Cbc0010I After 2400 nodes, 1146 on tree, 1e+50 best solution, best possible -69945.86 (679.29 seconds)
Cbc0010I After 2500 nodes, 1190 on tree, 1e+50 best solution, best possible -69945.86 (688.89 seconds)
Cbc0010I After 2600 nodes, 1237 on tree, 1e+50 best solution, best possible -69945.86 (697.42 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2700 nodes, 1278 on tree, 1e+50 best solution, best possible -69360.42 (949.89 seconds)
Cbc0010I After 2800 nodes, 1327 on tree, 1e+50 best solution, best possible -69360.42 (969.38 seconds)
Cbc0010I After 2900 nodes, 1371 on tree, 1e+50 best solution, best possible -69360.42 (1008.62 seconds)
Cbc0010I After 3000 nodes, 1417 on tree, 1e+50 best solution, best possible -69360.42 (1034.81 seconds)
Cbc0010I After 3100 nodes, 1464 on tree, 1e+50 best solution, best possible -69360.42 (1044.14 seconds)
Cbc0010I After 3200 nodes, 1510 on tree, 1e+50 best solution, best possible -69360.42 (1051.80 seconds)
Cbc0010I After 3300 nodes, 1558 on tree, 1e+50 best solution, best possible -69360.42 (1059.01 seconds)
Cbc0010I After 3400 nodes, 1605 on tree, 1e+50 best solution, best possible -69360.42 (1065.60 seconds)
Cbc0010I After 3500 nodes, 1653 on tree, 1e+50 best solution, best possible -69360.42 (1071.51 seconds)
Cbc0010I After 3600 nodes, 1702 on tree, 1e+50 best solution, best possible -69360.42 (1076.88 seconds)
Cbc0010I After 3700 nodes, 1750 on tree, 1e+50 best solution, best possible -69360.42 (1081.55 seconds)
Cbc0010I After 3800 nodes, 1799 on tree, 1e+50 best solution, best possible -69360.42 (1085.84 seconds)
Cbc0010I After 3900 nodes, 1848 on tree, 1e+50 best solution, best possible -69360.42 (1089.90 seconds)
Cbc0010I After 4000 nodes, 1895 on tree, 1e+50 best solution, best possible -69360.42 (1093.75 seconds)
Cbc0010I After 4100 nodes, 1944 on tree, 1e+50 best solution, best possible -69360.42 (1097.62 seconds)
Cbc0010I After 4200 nodes, 1994 on tree, 1e+50 best solution, best possible -69360.42 (1101.47 seconds)
Cbc0010I After 4300 nodes, 2044 on tree, 1e+50 best solution, best possible -69360.42 (1105.20 seconds)
Cbc0010I After 4400 nodes, 2094 on tree, 1e+50 best solution, best possible -69360.42 (1108.79 seconds)
Cbc0010I After 4500 nodes, 2144 on tree, 1e+50 best solution, best possible -69360.42 (1112.40 seconds)
Cbc0010I After 4600 nodes, 2194 on tree, 1e+50 best solution, best possible -69360.42 (1116.02 seconds)
Cbc0010I After 4700 nodes, 2244 on tree, 1e+50 best solution, best possible -69360.42 (1119.57 seconds)
Cbc0010I After 4800 nodes, 2294 on tree, 1e+50 best solution, best possible -69360.42 (1123.14 seconds)
Cbc0010I After 4900 nodes, 2344 on tree, 1e+50 best solution, best possible -69360.42 (1126.65 seconds)
Cbc0010I After 5000 nodes, 2394 on tree, 1e+50 best solution, best possible -69360.42 (1130.14 seconds)
Cbc0010I After 5100 nodes, 2443 on tree, 1e+50 best solution, best possible -69360.42 (1134.01 seconds)
Couenne: new cutoff value 7.3914255757e+04 (1145.43 seconds)
Cbc0010I After 5200 nodes, 2491 on tree, 1e+50 best solution, best possible -69293.644 (1151.49 seconds)
Cbc0010I After 5300 nodes, 2539 on tree, 1e+50 best solution, best possible -69293.644 (1170.76 seconds)
Cbc0010I After 5400 nodes, 2583 on tree, 1e+50 best solution, best possible -69293.644 (1213.30 seconds)
Cbc0010I After 5500 nodes, 2630 on tree, 1e+50 best solution, best possible -69293.644 (1231.13 seconds)
Cbc0010I After 5600 nodes, 2675 on tree, 1e+50 best solution, best possible -69293.644 (1239.22 seconds)
Cbc0010I After 5700 nodes, 2721 on tree, 1e+50 best solution, best possible -69293.644 (1246.67 seconds)
Cbc0010I After 5800 nodes, 2767 on tree, 1e+50 best solution, best possible -69293.644 (1253.86 seconds)
Cbc0010I After 5900 nodes, 2817 on tree, 1e+50 best solution, best possible -69293.644 (1259.89 seconds)
Cbc0010I After 6000 nodes, 2866 on tree, 1e+50 best solution, best possible -69293.644 (1266.08 seconds)
Cbc0010I After 6100 nodes, 2911 on tree, 1e+50 best solution, best possible -69060.919 (1274.30 seconds)
Cbc0010I After 6200 nodes, 2961 on tree, 1e+50 best solution, best possible -69060.919 (1294.20 seconds)
Cbc0010I After 6300 nodes, 3006 on tree, 1e+50 best solution, best possible -69060.919 (1331.99 seconds)
Cbc0010I After 6400 nodes, 3053 on tree, 1e+50 best solution, best possible -69060.919 (1358.89 seconds)
Cbc0010I After 6500 nodes, 3100 on tree, 1e+50 best solution, best possible -69060.919 (1373.88 seconds)
Cbc0010I After 6600 nodes, 3147 on tree, 1e+50 best solution, best possible -69060.919 (1387.68 seconds)
Cbc0010I After 6700 nodes, 3195 on tree, 1e+50 best solution, best possible -69060.919 (1399.62 seconds)
Cbc0010I After 6800 nodes, 3239 on tree, 1e+50 best solution, best possible -69031.624 (1410.57 seconds)
Cbc0010I After 6900 nodes, 3289 on tree, 1e+50 best solution, best possible -69031.624 (1429.33 seconds)
Cbc0010I After 7000 nodes, 3332 on tree, 1e+50 best solution, best possible -69031.624 (1472.11 seconds)
Cbc0010I After 7100 nodes, 3379 on tree, 1e+50 best solution, best possible -69031.624 (1492.00 seconds)
Cbc0010I After 7200 nodes, 3425 on tree, 1e+50 best solution, best possible -69031.624 (1499.42 seconds)
Cbc0010I After 7300 nodes, 3473 on tree, 1e+50 best solution, best possible -69031.624 (1506.31 seconds)
Cbc0010I After 7400 nodes, 3521 on tree, 1e+50 best solution, best possible -69031.624 (1512.68 seconds)
Cbc0010I After 7500 nodes, 3569 on tree, 1e+50 best solution, best possible -69031.624 (1518.32 seconds)
Cbc0010I After 7600 nodes, 3617 on tree, 1e+50 best solution, best possible -69031.624 (1523.92 seconds)
Cbc0010I After 7700 nodes, 3664 on tree, 1e+50 best solution, best possible -69031.624 (1529.33 seconds)
Cbc0010I After 7800 nodes, 3710 on tree, 1e+50 best solution, best possible -69031.624 (1534.52 seconds)
Cbc0010I After 7900 nodes, 3758 on tree, 1e+50 best solution, best possible -69031.624 (1539.04 seconds)
Cbc0010I After 8000 nodes, 3806 on tree, 1e+50 best solution, best possible -69031.624 (1543.13 seconds)
Cbc0010I After 8100 nodes, 3855 on tree, 1e+50 best solution, best possible -69031.624 (1546.98 seconds)
Cbc0010I After 8200 nodes, 3904 on tree, 1e+50 best solution, best possible -69031.624 (1550.80 seconds)
Cbc0010I After 8300 nodes, 3954 on tree, 1e+50 best solution, best possible -69031.624 (1554.67 seconds)
Cbc0010I After 8400 nodes, 4003 on tree, 1e+50 best solution, best possible -69031.624 (1558.31 seconds)
Cbc0010I After 8500 nodes, 4053 on tree, 1e+50 best solution, best possible -69031.624 (1561.83 seconds)
Cbc0010I After 8600 nodes, 4103 on tree, 1e+50 best solution, best possible -69031.624 (1565.33 seconds)
Cbc0010I After 8700 nodes, 4153 on tree, 1e+50 best solution, best possible -69031.624 (1568.80 seconds)
Cbc0010I After 8800 nodes, 4203 on tree, 1e+50 best solution, best possible -69031.624 (1572.23 seconds)
Cbc0010I After 8900 nodes, 4253 on tree, 1e+50 best solution, best possible -69031.624 (1575.79 seconds)
Cbc0010I After 9000 nodes, 4302 on tree, 1e+50 best solution, best possible -69031.624 (1579.62 seconds)
Cbc0010I After 9100 nodes, 4351 on tree, 1e+50 best solution, best possible -69031.624 (1583.41 seconds)
Cbc0010I After 9200 nodes, 4399 on tree, 1e+50 best solution, best possible -69031.624 (1587.33 seconds)
Cbc0010I After 9300 nodes, 4449 on tree, 1e+50 best solution, best possible -69031.624 (1590.85 seconds)
Cbc0010I After 9400 nodes, 4498 on tree, 1e+50 best solution, best possible -69031.624 (1594.93 seconds)
Couenne: new cutoff value 7.3691467844e+04 (1604.69 seconds)
Cbc0004I Integer solution of 73691.468 found after 3175555 iterations and 9411 nodes (1595.34 seconds)
Cbc0010I After 9500 nodes, 2939 on tree, 73691.468 best solution, best possible -69012.662 (1656.97 seconds)
Cbc0010I After 9600 nodes, 2985 on tree, 73691.468 best solution, best possible -69012.662 (1688.33 seconds)
Cbc0010I After 9700 nodes, 3033 on tree, 73691.468 best solution, best possible -69012.662 (1723.39 seconds)
Cbc0010I After 9800 nodes, 3079 on tree, 73691.468 best solution, best possible -69012.662 (1740.02 seconds)
Cbc0010I After 9900 nodes, 3125 on tree, 73691.468 best solution, best possible -69012.662 (1749.29 seconds)
Cbc0010I After 10000 nodes, 3170 on tree, 73691.468 best solution, best possible -69012.662 (1758.84 seconds)
Cbc0010I After 10100 nodes, 3214 on tree, 73691.468 best solution, best possible -68947.778 (1767.30 seconds)
Cbc0010I After 10200 nodes, 3264 on tree, 73691.468 best solution, best possible -68947.778 (1787.51 seconds)
Cbc0010I After 10300 nodes, 3308 on tree, 73691.468 best solution, best possible -68947.778 (1830.24 seconds)
Cbc0010I After 10400 nodes, 3354 on tree, 73691.468 best solution, best possible -68947.778 (1853.51 seconds)
Cbc0010I After 10500 nodes, 3397 on tree, 73691.468 best solution, best possible -68947.778 (1864.53 seconds)
Cbc0010I After 10600 nodes, 3439 on tree, 73691.468 best solution, best possible -68947.778 (1872.30 seconds)
Cbc0010I After 10700 nodes, 3485 on tree, 73691.468 best solution, best possible -68947.778 (1879.70 seconds)
Cbc0010I After 10800 nodes, 3531 on tree, 73691.468 best solution, best possible -68920.999 (1925.07 seconds)
Cbc0010I After 10900 nodes, 3579 on tree, 73691.468 best solution, best possible -68920.999 (1950.72 seconds)
Cbc0010I After 11000 nodes, 3625 on tree, 73691.468 best solution, best possible -68920.999 (1990.01 seconds)
Cbc0010I After 11100 nodes, 3673 on tree, 73691.468 best solution, best possible -68920.999 (2009.21 seconds)
Cbc0010I After 11200 nodes, 3720 on tree, 73691.468 best solution, best possible -68920.999 (2023.33 seconds)
Cbc0010I After 11300 nodes, 3766 on tree, 73691.468 best solution, best possible -68920.999 (2033.67 seconds)
Cbc0010I After 11400 nodes, 3809 on tree, 73691.468 best solution, best possible -68920.999 (2041.93 seconds)
Cbc0010I After 11500 nodes, 3854 on tree, 73691.468 best solution, best possible -68911.987 (2059.45 seconds)
Cbc0010I After 11600 nodes, 3900 on tree, 73691.468 best solution, best possible -68911.987 (2096.62 seconds)
Cbc0010I After 11700 nodes, 3949 on tree, 73691.468 best solution, best possible -68911.987 (2128.78 seconds)
Cbc0010I After 11800 nodes, 3997 on tree, 73691.468 best solution, best possible -68911.987 (2142.28 seconds)
Cbc0010I After 11900 nodes, 4042 on tree, 73691.468 best solution, best possible -68911.987 (2150.97 seconds)
Cbc0010I After 12000 nodes, 4088 on tree, 73691.468 best solution, best possible -68911.987 (2157.94 seconds)
Cbc0010I After 12100 nodes, 4134 on tree, 73691.468 best solution, best possible -68870.869 (2171.00 seconds)
Cbc0010I After 12200 nodes, 4183 on tree, 73691.468 best solution, best possible -68870.869 (2191.73 seconds)
Cbc0010I After 12300 nodes, 4227 on tree, 73691.468 best solution, best possible -68870.869 (2231.49 seconds)
Cbc0010I After 12400 nodes, 4275 on tree, 73691.468 best solution, best possible -68870.869 (2249.89 seconds)
Cbc0010I After 12500 nodes, 4317 on tree, 73691.468 best solution, best possible -68870.869 (2264.14 seconds)
Cbc0010I After 12600 nodes, 4363 on tree, 73691.468 best solution, best possible -68870.869 (2278.23 seconds)
Cbc0010I After 12700 nodes, 4408 on tree, 73691.468 best solution, best possible -68870.869 (2289.40 seconds)
Cbc0010I After 12800 nodes, 4454 on tree, 73691.468 best solution, best possible -68682.386 (2305.99 seconds)
Cbc0010I After 12900 nodes, 4502 on tree, 73691.468 best solution, best possible -68682.386 (2332.86 seconds)
Cbc0010I After 13000 nodes, 4546 on tree, 73691.468 best solution, best possible -68682.386 (2371.58 seconds)
Cbc0010I After 13100 nodes, 4593 on tree, 73691.468 best solution, best possible -68682.386 (2390.92 seconds)
Cbc0010I After 13200 nodes, 4639 on tree, 73691.468 best solution, best possible -68682.386 (2404.66 seconds)
Cbc0010I After 13300 nodes, 4684 on tree, 73691.468 best solution, best possible -68682.386 (2420.62 seconds)
Cbc0010I After 13400 nodes, 4732 on tree, 73691.468 best solution, best possible -68682.386 (2432.95 seconds)
Cbc0010I After 13500 nodes, 4778 on tree, 73691.468 best solution, best possible -68634.655 (2451.49 seconds)
Cbc0010I After 13600 nodes, 4826 on tree, 73691.468 best solution, best possible -68634.655 (2475.03 seconds)
Cbc0010I After 13700 nodes, 4871 on tree, 73691.468 best solution, best possible -68634.655 (2670.44 seconds)
Cbc0010I After 13800 nodes, 4917 on tree, 73691.468 best solution, best possible -68634.655 (2680.06 seconds)
Cbc0010I After 13900 nodes, 4966 on tree, 73691.468 best solution, best possible -68634.655 (2687.56 seconds)
Cbc0010I After 14000 nodes, 5012 on tree, 73691.468 best solution, best possible -68634.655 (2694.60 seconds)
Cbc0010I After 14100 nodes, 5061 on tree, 73691.468 best solution, best possible -68634.655 (2701.51 seconds)
Cbc0010I After 14200 nodes, 5109 on tree, 73691.468 best solution, best possible -68634.655 (2707.83 seconds)
Cbc0010I After 14300 nodes, 5154 on tree, 73691.468 best solution, best possible -68634.655 (2713.85 seconds)
Cbc0010I After 14400 nodes, 5199 on tree, 73691.468 best solution, best possible -68634.655 (2719.68 seconds)
Cbc0010I After 14500 nodes, 5246 on tree, 73691.468 best solution, best possible -68634.655 (2725.40 seconds)
Cbc0010I After 14600 nodes, 5291 on tree, 73691.468 best solution, best possible -68626.866 (2743.18 seconds)
Cbc0010I After 14700 nodes, 5337 on tree, 73691.468 best solution, best possible -68626.866 (2777.25 seconds)
Cbc0010I After 14800 nodes, 5386 on tree, 73691.468 best solution, best possible -68626.866 (2806.94 seconds)
Cbc0010I After 14900 nodes, 5433 on tree, 73691.468 best solution, best possible -68626.866 (2821.08 seconds)
Cbc0010I After 15000 nodes, 5478 on tree, 73691.468 best solution, best possible -68626.866 (2830.52 seconds)
Cbc0010I After 15100 nodes, 5523 on tree, 73691.468 best solution, best possible -68626.866 (2838.25 seconds)
Cbc0010I After 15200 nodes, 5568 on tree, 73691.468 best solution, best possible -68626.866 (2845.03 seconds)
Cbc0010I After 15300 nodes, 5613 on tree, 73691.468 best solution, best possible -68585.101 (2865.38 seconds)
Cbc0010I After 15400 nodes, 5661 on tree, 73691.468 best solution, best possible -68585.101 (2888.53 seconds)
Cbc0010I After 15500 nodes, 5706 on tree, 73691.468 best solution, best possible -68585.101 (2924.70 seconds)
Cbc0010I After 15600 nodes, 5754 on tree, 73691.468 best solution, best possible -68585.101 (2938.98 seconds)
Cbc0010I After 15700 nodes, 5795 on tree, 73691.468 best solution, best possible -68585.101 (2947.69 seconds)
Cbc0010I After 15800 nodes, 5839 on tree, 73691.468 best solution, best possible -68585.101 (2957.28 seconds)
Cbc0010I After 15900 nodes, 5880 on tree, 73691.468 best solution, best possible -68538.336 (2967.74 seconds)
Cbc0010I After 16000 nodes, 5929 on tree, 73691.468 best solution, best possible -68538.336 (2985.54 seconds)
Cbc0010I After 16100 nodes, 5972 on tree, 73691.468 best solution, best possible -68538.336 (3165.00 seconds)
Cbc0010I After 16200 nodes, 6019 on tree, 73691.468 best solution, best possible -68538.336 (3187.78 seconds)
Cbc0010I After 16300 nodes, 6065 on tree, 73691.468 best solution, best possible -68538.336 (3196.52 seconds)
Cbc0010I After 16400 nodes, 6113 on tree, 73691.468 best solution, best possible -68538.336 (3203.61 seconds)
Cbc0010I After 16500 nodes, 6161 on tree, 73691.468 best solution, best possible -68538.336 (3210.32 seconds)
Cbc0010I After 16600 nodes, 6208 on tree, 73691.468 best solution, best possible -68538.336 (3216.16 seconds)
Cbc0010I After 16700 nodes, 6257 on tree, 73691.468 best solution, best possible -68538.336 (3221.92 seconds)
Cbc0010I After 16800 nodes, 6305 on tree, 73691.468 best solution, best possible -68538.336 (3227.87 seconds)
Cbc0010I After 16900 nodes, 6352 on tree, 73691.468 best solution, best possible -68535.82 (3241.28 seconds)
Cbc0010I After 17000 nodes, 6397 on tree, 73691.468 best solution, best possible -68535.82 (3267.45 seconds)
Cbc0010I After 17100 nodes, 6446 on tree, 73691.468 best solution, best possible -68535.82 (3300.03 seconds)
Cbc0010I After 17200 nodes, 6492 on tree, 73691.468 best solution, best possible -68535.82 (3316.73 seconds)
Cbc0010I After 17300 nodes, 6538 on tree, 73691.468 best solution, best possible -68535.82 (3328.09 seconds)
Cbc0010I After 17400 nodes, 6583 on tree, 73691.468 best solution, best possible -68535.82 (3335.06 seconds)
Cbc0010I After 17500 nodes, 6629 on tree, 73691.468 best solution, best possible -68464.646 (3347.42 seconds)
Cbc0010I After 17600 nodes, 6677 on tree, 73691.468 best solution, best possible -68464.646 (3369.47 seconds)
Cbc0010I After 17700 nodes, 6724 on tree, 73691.468 best solution, best possible -68464.646 (3409.50 seconds)
Cbc0010I After 17800 nodes, 6772 on tree, 73691.468 best solution, best possible -68464.646 (3426.98 seconds)
Cbc0010I After 17900 nodes, 6812 on tree, 73691.468 best solution, best possible -68464.646 (3440.55 seconds)
Cbc0010I After 18000 nodes, 6857 on tree, 73691.468 best solution, best possible -68464.646 (3452.16 seconds)
Cbc0010I After 18100 nodes, 6901 on tree, 73691.468 best solution, best possible -68464.646 (3461.33 seconds)
Cbc0010I After 18200 nodes, 6948 on tree, 73691.468 best solution, best possible -68435.874 (3479.82 seconds)
Cbc0010I After 18300 nodes, 6994 on tree, 73691.468 best solution, best possible -68435.874 (3514.13 seconds)
Cbc0010I After 18400 nodes, 7043 on tree, 73691.468 best solution, best possible -68435.874 (3536.80 seconds)
Cbc0010I After 18500 nodes, 7088 on tree, 73691.468 best solution, best possible -68435.874 (3549.42 seconds)
Cbc0010I After 18600 nodes, 7134 on tree, 73691.468 best solution, best possible -68435.874 (3561.01 seconds)
Cbc0010I After 18700 nodes, 7181 on tree, 73691.468 best solution, best possible -68435.874 (3569.02 seconds)
Cbc0010I After 18800 nodes, 7227 on tree, 73691.468 best solution, best possible -68385.564 (3588.23 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 73691.468 (best possible -68385.564), took 9311530 iterations and 18813 nodes (3600.02 seconds)
Cbc0035I Maximum depth 1323, 2 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1617
Linearization cuts added in total:           1617  (separation time: 0.008103s)
Total solve time:                         3600.72s (3600.72s in branch-and-bound)
Lower bound:                             -68385.6
Upper bound:                              73691.5  (gap: 207.76%)
Branch-and-bound nodes:                     18813
Stats: /tmp/jl_83WlC0/model.nl 1350 [var]  125 [int]  600 [con]  211 [aux]   1617 [root]     1617 [tot] 0.008103 [sep]  3600.72 [time]  3600.72 [bb]        -6.838556e+04 [lower]         7.369147e+04 [upper]   18813 [nodes]
Performance of                           FBBT:	    85.9183s,    30658 runs. fix:  0.0433532 shrnk:  0.0670502 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    213.213s,        8 runs. fix:          0 shrnk:    17.1456 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
