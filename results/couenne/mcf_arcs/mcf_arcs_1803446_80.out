solving instance mcf arcs c25_100_10_V_L_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2846.5368       64 2.172801
NLP0014I             2      INFEAS 2.0179849       65 2.606092
Loaded instance "/tmp/jl_ipof2d/model.nl"
Constraints:          600
Variables:           1350 (125 integer)
Auxiliaries:          111 (0 integer)

Coin0506I Presolve 876 (-227) rows, 1199 (-262) columns and 5104 (-576) elements
Clp0006I 0  Obj 50.78125 Primal inf 74.420782 (23)
Clp0006I 92  Obj 193.60352 Primal inf 1506.7151 (79)
Clp0006I 183  Obj 193.60352 Primal inf 1993.0084 (118)
Clp0006I 265  Obj 336.42578 Primal inf 6264.2833 (169)
Clp0006I 338  Obj 708.13822 Primal inf 1590.5825 (172)
Clp0006I 399  Obj 708.13822 Primal inf 13655.198 (202)
Clp0006I 470  Obj 708.13822 Primal inf 13076.38 (222)
Clp0006I 536  Obj 1213.8232 Primal inf 3647.0741 (197)
Clp0006I 607  Obj 1213.8232 Primal inf 2567.1198 (200)
Clp0006I 680  Obj 1471.8726 Primal inf 328.45073 (102)
Clp0006I 760  Obj 1581.0585 Primal inf 1874.508 (180)
Clp0006I 827  Obj 1656.8881 Primal inf 474.15648 (124)
Clp0006I 899  Obj 1723.7225 Primal inf 31.366938 (14)
Clp0006I 953  Obj 1732.0689
Clp0000I Optimal - objective value 1732.0689
Clp0032I Optimal objective 1732.068935 - 953 iterations time 0.102, Presolve 0.01
Clp0000I Optimal - objective value 1732.0689
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1732.0689
Optimality Based BT: 16 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 108 added rows had average density of 2
Cbc0013I At root node, 108 cuts changed objective from 1732.0689 to 2846.5323 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1387 row cuts average 2.0 elements, 551 column cuts (657 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (40.77 seconds)
Optimality Based BT: 16 improved bounds
Couenne: new cutoff value 2.8465396539e+03 (84.7416 seconds)
Optimality Based BT: 170 improved bounds
Optimality Based BT: 102 improved bounds
Couenne: new cutoff value 2.8465369795e+03 (218.395 seconds)
Cbc0004I Integer solution of 2846.537 found after 2524 iterations and 35 nodes (211.47 seconds)
Cbc0001I Search completed - best objective 2846.536979519894, took 2524 iterations and 35 nodes (211.47 seconds)
Cbc0035I Maximum depth 17, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1103
Linearization cuts added in total:           1103  (separation time: 0.008782s)
Total solve time:                          211.61s (211.61s in branch-and-bound)
Lower bound:                              2846.54
Upper bound:                              2846.54  (gap: 0.00%)
Branch-and-bound nodes:                        35
Stats: /tmp/jl_ipof2d/model.nl 1350 [var]  125 [int]  600 [con]  111 [aux]   1103 [root]     1103 [tot] 0.008782 [sep]   211.61 [time]  211.611 [bb]         2.846537e+03 [lower]         2.846537e+03 [upper]      35 [nodes]
Performance of                           FBBT:	   0.244287s,       60 runs. fix:   0.122811 shrnk:    2.05638 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    62.1643s,        4 runs. fix:         23 shrnk:    279.514 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/FEKLB/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_arcs/script.jl:18
