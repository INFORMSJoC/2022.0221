solving instance mcf nodes c25_100_10_F_L_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 364.42886       49 1.281458
NLP0014I             2      INFEAS 0.27287129       87 3.093025
Loaded instance "/tmp/jl_UVDhI7/model.nl"
Constraints:          525
Variables:           1275 (125 integer)
Auxiliaries:           36 (0 integer)

Coin0506I Presolve 475 (-176) rows, 1050 (-261) columns and 4025 (-676) elements
Clp0006I 0  Obj 0 Primal inf 141.99998 (20)
Clp0006I 84  Obj 30.532895 Primal inf 921.81243 (74)
Clp0006I 145  Obj 203.7411 Primal inf 1208.0936 (114)
Clp0006I 211  Obj 272.68052 Primal inf 369.60929 (85)
Clp0006I 273  Obj 317.75268 Primal inf 5.187489 (11)
Clp0006I 280  Obj 318.37461
Clp0000I Optimal - objective value 318.37461
Clp0032I Optimal objective 318.374607 - 280 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 318.37461
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 318.37461
Optimality Based BT: 1 improved bounds
Probing: 2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 35 added rows had average density of 2
Cbc0013I At root node, 35 cuts changed objective from 318.37461 to 364.42888 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 404 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (20.46 seconds)
Optimality Based BT: 10 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 3.7476002714e+02 (69.3109 seconds)
Cbc0012I Integer solution of 374.76003 found by Couenne Rounding NLP after 468 iterations and 2 nodes (63.64 seconds)
Optimality Based BT: 242 improved bounds
Couenne: new cutoff value 3.6462067544e+02 (90.1611 seconds)
Couenne: new cutoff value 3.6456908186e+02 (92.0648 seconds)
Cbc0012I Integer solution of 364.56908 found by Couenne Rounding NLP after 521 iterations and 3 nodes (86.39 seconds)
Cbc0001I Search completed - best objective 364.5690818643826, took 521 iterations and 3 nodes (86.39 seconds)
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost
Clp1001I Initial range of elements is 0.014084507 to 1225
Clp1003I Final range of elements is 0.36032279 to 1
Clp0022I Absolute values of scaled rhs range from 6 to 1758.8851, minimum gap 1e+100
Clp0020I Absolute values of scaled objective range from 0.74480287 to 0.74480287
Clp0021I Absolute values of scaled bounds range from 0.99362313 to 3.3565929e+11, minimum gap 1
Clp0006I 0  Obj 334.09958 Primal inf 0.0010611752 (25) Dual inf 2.5879803e+10 (10)
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24) Dual inf 0.00042317796 (4)
Clp0016I New infeasibility weight of 5e+10
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24) Dual inf 0.001952925 (2)
Clp0016I New infeasibility weight of 2.5e+11
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24) Dual inf 0.0041986336 (2)
Clp0016I New infeasibility weight of 1.25e+12
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24) Dual inf 0.004306296 (2)
Clp0016I New infeasibility weight of 6.25e+12
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24) Dual inf 0.0312499 (1)
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24)
Clp0016I New infeasibility weight of 3.125e+13
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24)
Clp0016I New infeasibility weight of 1.5625e+14
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24)
Clp0016I New infeasibility weight of 7.8125e+14
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24)
Clp0016I New infeasibility weight of 3.90625e+15
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24)
Clp0016I New infeasibility weight of 1.953125e+16
Clp0006I 2  Obj 334.09958 Primal inf 0.0010609766 (24)
Clp0001I Primal infeasible - objective value 334.09958

 	"Finished"

Linearization cuts added at root node:        651
Linearization cuts added in total:            651  (separation time: 0.005355s)
Total solve time:                         86.4432s (86.4432s in branch-and-bound)
Lower bound:                              364.569
Upper bound:                              364.569  (gap: 0.00%)
Branch-and-bound nodes:                         3
Stats: /tmp/jl_UVDhI7/model.nl 1275 [var]  125 [int]  525 [con]   36 [aux]    651 [root]      651 [tot] 0.005355 [sep]  86.4432 [time]  86.4442 [bb]         3.645691e+02 [lower]         3.645691e+02 [upper]       3 [nodes]
Performance of                           FBBT:	   0.057652s,       31 runs. fix:          0 shrnk: 8.91966e-05 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    36.1122s,        4 runs. fix:        4.5 shrnk:    60.2454 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
