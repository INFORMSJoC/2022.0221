solving instance mcf nodes c100_400_10_F_T_10 3 6 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3063.09       92 85.478839
Loaded instance "/tmp/jl_Ax6Cpp/model.nl"
Constraints:         2100
Variables:           5100 (500 integer)
Auxiliaries:          211 (0 integer)

Coin0506I Presolve 2588 (-517) rows, 4472 (-839) columns and 17905 (-2204) elements
Clp0006I 0  Obj -172481.83 Primal inf 795878.4 (129)
Clp0006I 126  Obj -166294.79 Primal inf 558925.49 (214)
Clp0006I 252  Obj -125125.15 Primal inf 752565.09 (354)
Clp0006I 378  Obj -72978.922 Primal inf 401212.8 (301)
Clp0006I 504  Obj -33972.634 Primal inf 9728.8317 (116)
Clp0006I 630  Obj -29565.635 Primal inf 644.49404 (64)
Clp0006I 756  Obj -29565.635 Primal inf 624.00236 (104)
Clp0006I 882  Obj -29565.635 Primal inf 528.43267 (95)
Clp0006I 1008  Obj -29565.635 Primal inf 482.05458 (135)
Clp0006I 1134  Obj -29565.635 Primal inf 56.440845 (68)
Clp0006I 1260  Obj -29565.635 Primal inf 6.7846599 (37)
Clp0006I 1386  Obj -29565.635 Primal inf 0.023991404 (13)
Clp0006I 1398  Obj -29565.635
Clp0000I Optimal - objective value -29565.635
Clp0032I Optimal objective -29565.63506 - 1398 iterations time 0.212, Presolve 0.04
Clp0000I Optimal - objective value -29565.635
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value -29565.635
Optimality Based BT: 2 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 202 added rows had average density of 2
Cbc0013I At root node, 202 cuts changed objective from -29565.635 to -27471.867 in 17 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1702 row cuts average 2.0 elements, 2 column cuts (204 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (740.42 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 2251 iterations and 4 nodes (3467.83 seconds)
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       3105
Linearization cuts added in total:           3105  (separation time: 0.068407s)
Total solve time:                         3468.05s (3468.05s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         4
Stats: /tmp/jl_Ax6Cpp/model.nl 5100 [var]  500 [int] 2100 [con]  211 [aux]   3105 [root]     3105 [tot] 0.068407 [sep]  3468.05 [time]  3468.05 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       4 [nodes]
Performance of                           FBBT:	   0.755912s,       27 runs. fix:   0.481481 shrnk:   0.451022 ubd:          0 2ubd:         10 infeas:          0
Performance of                           OBBT:	    620.484s,        5 runs. fix:        0.2 shrnk:  0.0910837 ubd:          0 2ubd:         10 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
