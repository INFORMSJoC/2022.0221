solving instance mcf nodes c25_100_30_F_T_5 3 6 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 7118.4641      101 205.57607
Loaded instance "/tmp/jl_sPm5nd/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 1144 (-182) rows, 3079 (-327) columns and 11752 (-1310) elements
Clp0006I 0  Obj 3.9623532 Primal inf 2081.6375 (111)
Clp0006I 97  Obj 3.9623532 Primal inf 3575.9959 (168)
Clp0006I 194  Obj 3.9623532 Primal inf 2250.6339 (170)
Clp0006I 290  Obj 3.9623532 Primal inf 2825.196 (192)
Clp0006I 387  Obj 3.9623532 Primal inf 1260.3973 (169)
Clp0006I 484  Obj 3.9623532 Primal inf 2123.4554 (199)
Clp0006I 569  Obj 3.9623532 Primal inf 2444.9556 (224)
Clp0006I 649  Obj 3.9623532 Primal inf 3613.2304 (237)
Clp0006I 731  Obj 3.9623532 Primal inf 13838.261 (296)
Clp0006I 805  Obj 3.9623532 Primal inf 16616.699 (326)
Clp0006I 882  Obj 3.9623532 Primal inf 22406.951 (324)
Clp0006I 960  Obj 3.9623532 Primal inf 19459.271 (326)
Clp0006I 1044  Obj 3.9623532 Primal inf 18150.202 (345)
Clp0006I 1127  Obj 3.9623532 Primal inf 39291.275 (337)
Clp0006I 1203  Obj 3.9623532 Primal inf 45637.492 (367)
Clp0006I 1284  Obj 3.9623532 Primal inf 61807.798 (379)
Clp0006I 1363  Obj 3.9623532 Primal inf 83488.47 (345)
Clp0006I 1445  Obj 3.9623532 Primal inf 83847.715 (360)
Clp0006I 1529  Obj 3.9623538 Primal inf 58066.037 (299)
Clp0006I 1614  Obj 3.9625498 Primal inf 48363.283 (352)
Clp0006I 1697  Obj 3.9635822 Primal inf 34361.31 (344)
Clp0006I 1784  Obj 3.9677344 Primal inf 159028.28 (284)
Clp0006I 1881  Obj 589.46474 Primal inf 4131.4052 (217)
Clp0006I 1978  Obj 722.92205 Primal inf 4370.6859 (220)
Clp0006I 2075  Obj 847.54887 Primal inf 201.05552 (91)
Clp0006I 2172  Obj 858.89709 Primal inf 2.4126261 (10)
Clp0006I 2185  Obj 859.14417
Clp0000I Optimal - objective value 859.14457
Clp0032I Optimal objective 859.1445674 - 2185 iterations time 0.492, Presolve 0.01
Clp0000I Optimal - objective value 859.14457
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 859.14457
Optimality Based BT: 1 improved bounds
Probing: 3 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 30 added rows had average density of 2
Cbc0013I At root node, 30 cuts changed objective from 859.14457 to 1043.1648 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 219 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (243.11 seconds)
Optimality Based BT: 3 improved bounds
Couenne: new cutoff value 7.0969228592e+03 (1102.28 seconds)
Cbc0012I Integer solution of 7096.9229 found by Couenne Rounding NLP after 789 iterations and 1 nodes (890.76 seconds)
Optimality Based BT: 6 improved bounds
Couenne: new cutoff value 1.2212154405e+03 (1335.48 seconds)
Cbc0012I Integer solution of 1221.2154 found by Couenne Rounding NLP after 792 iterations and 2 nodes (1123.97 seconds)
Optimality Based BT: 14 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 2 improved bounds
Cbc0010I After 100 nodes, 35 on tree, 1221.2154 best solution, best possible 1043.2892 (2263.46 seconds)
Cbc0010I After 200 nodes, 63 on tree, 1221.2154 best solution, best possible 1043.2892 (2276.21 seconds)
Cbc0010I After 300 nodes, 97 on tree, 1221.2154 best solution, best possible 1043.2892 (2288.85 seconds)
Cbc0010I After 400 nodes, 145 on tree, 1221.2154 best solution, best possible 1043.2892 (2301.77 seconds)
Cbc0010I After 500 nodes, 195 on tree, 1221.2154 best solution, best possible 1043.2892 (2312.18 seconds)
Couenne: new cutoff value 1.2136437355e+03 (2529.83 seconds)
Cbc0004I Integer solution of 1213.6437 found after 18473 iterations and 579 nodes (2318.39 seconds)
Cbc0010I After 600 nodes, 181 on tree, 1213.6437 best solution, best possible 1047.7635 (2326.03 seconds)
Cbc0010I After 700 nodes, 207 on tree, 1213.6437 best solution, best possible 1047.7635 (2338.11 seconds)
Cbc0010I After 800 nodes, 233 on tree, 1213.6437 best solution, best possible 1047.9818 (2687.91 seconds)
Cbc0010I After 900 nodes, 255 on tree, 1213.6437 best solution, best possible 1047.9818 (2699.22 seconds)
Cbc0010I After 1000 nodes, 279 on tree, 1213.6437 best solution, best possible 1054.7305 (2711.02 seconds)
Cbc0010I After 1100 nodes, 304 on tree, 1213.6437 best solution, best possible 1054.7891 (2722.77 seconds)
Cbc0010I After 1200 nodes, 329 on tree, 1213.6437 best solution, best possible 1054.7891 (2736.54 seconds)
Cbc0010I After 1300 nodes, 359 on tree, 1213.6437 best solution, best possible 1063.2129 (2750.51 seconds)
Cbc0010I After 1400 nodes, 384 on tree, 1213.6437 best solution, best possible 1063.2129 (2763.79 seconds)
Cbc0010I After 1500 nodes, 409 on tree, 1213.6437 best solution, best possible 1063.2129 (2777.08 seconds)
Cbc0010I After 1600 nodes, 440 on tree, 1213.6437 best solution, best possible 1084.8318 (2790.44 seconds)
Optimality Based BT: 227 improved bounds
Optimality Based BT: 54 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1213.6437 (best possible 1084.8318), took 96945 iterations and 1624 nodes (3389.78 seconds)
Cbc0035I Maximum depth 289, 1018 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1326
Linearization cuts added in total:           1326  (separation time: 0.027675s)
Total solve time:                         3390.31s (3390.31s in branch-and-bound)
Lower bound:                              1084.83
Upper bound:                              1213.64  (gap: 11.86%)
Branch-and-bound nodes:                      1624
Stats: /tmp/jl_sPm5nd/model.nl 3275 [var]  125 [int] 1025 [con]  131 [aux]   1326 [root]     1326 [tot] 0.027675 [sep]  3390.31 [time]  3390.31 [bb]         1.084832e+03 [lower]         1.213644e+03 [upper]    1624 [nodes]
Performance of                           FBBT:	    24.6314s,     2172 runs. fix:   0.469433 shrnk:   0.152819 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    654.962s,        9 runs. fix:    0.26087 shrnk:    24.2506 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
