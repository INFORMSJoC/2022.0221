solving instance mcf nodes c25_100_30_F_T_5 3 6 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 7021.1881      310 204.701
NLP0014I             1      FAILED 7021.1881      310 204.84892   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_nCtqdi/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           81 (0 integer)

Coin0506I Presolve 993 (-208) rows, 3003 (-353) columns and 11401 (-1386) elements
Clp0006I 0  Obj 1052.207 Primal inf 1876.1141 (62)
Clp0006I 94  Obj 2277.7436 Primal inf 28822.338 (97)
Clp0006I 188  Obj 3844.6493 Primal inf 1450.038 (71)
Clp0006I 282  Obj 4851.0153 Primal inf 1154.0934 (90)
Clp0006I 376  Obj 5316.3847 Primal inf 400.87621 (67)
Clp0006I 470  Obj 5464.9518 Primal inf 12.342884 (10)
Clp0006I 477  Obj 5468.276
Clp0000I Optimal - objective value 5468.276
Clp0032I Optimal objective 5468.275987 - 477 iterations time 0.042, Presolve 0.01
Clp0000I Optimal - objective value 5468.276
NLP Heuristic: NLP0014I             3      FAILED 6958.4532     1125 160.07175
no solution.
Clp0000I Optimal - objective value 5468.276
Optimality Based BT: 1 improved bounds
Probing: Couenne: new cutoff value 7.1093539739e+03 (610.391 seconds)
3 improved bounds
NLP Heuristic: no solution.
Cbc0031I 3 added rows had average density of 2
Cbc0013I At root node, 3 cuts changed objective from 5468.276 to 5525.8324 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 3 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (648.88 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 4 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 135 iterations and 6 nodes (3188.85 seconds)
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.029565s)
Total solve time:                          3188.9s (3188.9s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                              7109.35  (gap: --)
Branch-and-bound nodes:                         6
Stats: /tmp/jl_nCtqdi/model.nl 3275 [var]  125 [int] 1025 [con]   81 [aux]   1201 [root]     1201 [tot] 0.029565 [sep]   3188.9 [time]   3188.9 [bb]       -1.797693e+308 [lower]         7.109354e+03 [upper]       6 [nodes]
Performance of                           FBBT:	   0.135554s,       12 runs. fix:    4.72727 shrnk:    1.72664 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    243.937s,        6 runs. fix:   0.181818 shrnk:    1.68128 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1371
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
