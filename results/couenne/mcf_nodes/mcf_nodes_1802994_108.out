solving instance mcf nodes c25_100_30_V_T_5 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 36697.385       95 39.773442
NLP0014I             2      INFEAS 101.57118       72 21.941729
Loaded instance "/tmp/jl_BHXNow/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           81 (0 integer)

Coin0506I Presolve 968 (-204) rows, 3011 (-345) columns and 11483 (-1257) elements
Clp0006I 0  Obj 3252.4147 Primal inf 1548.7914 (63)
Clp0006I 94  Obj 8853.0749 Primal inf 1911.9303 (82)
Clp0006I 188  Obj 18081.505 Primal inf 2952.5442 (90)
Clp0006I 282  Obj 21555.721 Primal inf 2203.795 (83)
Clp0006I 376  Obj 23712.49 Primal inf 205.98177 (26)
Clp0006I 434  Obj 23875.441
Clp0000I Optimal - objective value 23875.441
Clp0032I Optimal objective 23875.44126 - 434 iterations time 0.042, Presolve 0.01
Clp0000I Optimal - objective value 23875.441
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 23875.441
Optimality Based BT: 4 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 4 added rows had average density of 2
Cbc0013I At root node, 4 cuts changed objective from 23875.441 to 25028.211 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 4 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (166.16 seconds)
Optimality Based BT: 2 improved bounds
Couenne: new cutoff value 3.8192597694e+04 (385.339 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 25780.061 (1343.55 seconds)
Cbc0010I After 200 nodes, 90 on tree, 1e+50 best solution, best possible 25780.061 (1350.57 seconds)
Cbc0010I After 300 nodes, 136 on tree, 1e+50 best solution, best possible 25780.061 (1356.50 seconds)
Cbc0010I After 400 nodes, 184 on tree, 1e+50 best solution, best possible 25780.061 (1361.98 seconds)
Cbc0010I After 500 nodes, 233 on tree, 1e+50 best solution, best possible 25780.061 (1366.45 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 25780.061 (1371.14 seconds)
Cbc0010I After 700 nodes, 327 on tree, 1e+50 best solution, best possible 25780.061 (1375.46 seconds)
Cbc0010I After 800 nodes, 373 on tree, 1e+50 best solution, best possible 25780.061 (1380.25 seconds)
Cbc0010I After 900 nodes, 422 on tree, 1e+50 best solution, best possible 25780.061 (1386.94 seconds)
Cbc0010I After 1000 nodes, 451 on tree, 1e+50 best solution, best possible 25780.061 (1392.89 seconds)
Couenne: new cutoff value 3.6847638174e+04 (1467.5 seconds)
Cbc0004I Integer solution of 36847.638 found after 44360 iterations and 1099 nodes (1399.97 seconds)
Cbc0010I After 1100 nodes, 318 on tree, 36847.638 best solution, best possible 25780.061 (1517.07 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1200 nodes, 367 on tree, 36847.638 best solution, best possible 25806.292 (1790.14 seconds)
Cbc0010I After 1300 nodes, 406 on tree, 36847.638 best solution, best possible 25842.072 (1912.89 seconds)
Cbc0010I After 1400 nodes, 454 on tree, 36847.638 best solution, best possible 25842.072 (1918.86 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1500 nodes, 499 on tree, 36847.638 best solution, best possible 25871.929 (2077.28 seconds)
Cbc0010I After 1600 nodes, 530 on tree, 36847.638 best solution, best possible 25871.929 (2085.72 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1700 nodes, 577 on tree, 36847.638 best solution, best possible 25891.253 (2278.85 seconds)
Cbc0010I After 1800 nodes, 619 on tree, 36847.638 best solution, best possible 25936.728 (2284.68 seconds)
Cbc0010I After 1900 nodes, 655 on tree, 36847.638 best solution, best possible 25936.728 (2291.97 seconds)
Cbc0010I After 2000 nodes, 699 on tree, 36847.638 best solution, best possible 25964.126 (2413.04 seconds)
Cbc0010I After 2100 nodes, 741 on tree, 36847.638 best solution, best possible 25969.7 (2418.66 seconds)
Cbc0010I After 2200 nodes, 783 on tree, 36847.638 best solution, best possible 25969.7 (2425.46 seconds)
Cbc0010I After 2300 nodes, 828 on tree, 36847.638 best solution, best possible 25969.7 (2433.50 seconds)
Cbc0010I After 2400 nodes, 873 on tree, 36847.638 best solution, best possible 25969.7 (2441.27 seconds)
Cbc0010I After 2500 nodes, 918 on tree, 36847.638 best solution, best possible 25969.7 (2448.02 seconds)
Cbc0010I After 2600 nodes, 961 on tree, 36847.638 best solution, best possible 25969.7 (2453.32 seconds)
Cbc0010I After 2700 nodes, 1007 on tree, 36847.638 best solution, best possible 25969.7 (2458.81 seconds)
Cbc0010I After 2800 nodes, 1055 on tree, 36847.638 best solution, best possible 25969.7 (2464.10 seconds)
Cbc0010I After 2900 nodes, 1099 on tree, 36847.638 best solution, best possible 25969.7 (2470.15 seconds)
Cbc0010I After 3000 nodes, 1144 on tree, 36847.638 best solution, best possible 25969.7 (2477.63 seconds)
Cbc0010I After 3100 nodes, 1187 on tree, 36847.638 best solution, best possible 25969.7 (2483.79 seconds)
Cbc0010I After 3200 nodes, 1235 on tree, 36847.638 best solution, best possible 25969.7 (2489.47 seconds)
Couenne: new cutoff value 3.6719180311e+04 (2560.36 seconds)
Cbc0004I Integer solution of 36719.18 found after 111117 iterations and 3248 nodes (2492.83 seconds)
Cbc0010I After 3300 nodes, 877 on tree, 36719.18 best solution, best possible 25977.206 (2495.83 seconds)
Cbc0010I After 3400 nodes, 914 on tree, 36719.18 best solution, best possible 25977.93 (2502.21 seconds)
Cbc0010I After 3500 nodes, 958 on tree, 36719.18 best solution, best possible 25977.93 (2508.41 seconds)
Cbc0010I After 3600 nodes, 1001 on tree, 36719.18 best solution, best possible 25977.93 (2517.05 seconds)
Cbc0010I After 3700 nodes, 1039 on tree, 36719.18 best solution, best possible 25977.93 (2526.16 seconds)
Cbc0010I After 3800 nodes, 1080 on tree, 36719.18 best solution, best possible 25977.93 (2535.32 seconds)
Cbc0010I After 3900 nodes, 1125 on tree, 36719.18 best solution, best possible 25977.93 (2542.80 seconds)
Cbc0010I After 4000 nodes, 1173 on tree, 36719.18 best solution, best possible 25977.93 (2550.86 seconds)
Cbc0010I After 4100 nodes, 1219 on tree, 36719.18 best solution, best possible 25977.93 (2558.55 seconds)
Cbc0010I After 4200 nodes, 1264 on tree, 36719.18 best solution, best possible 25977.93 (2569.53 seconds)
Cbc0010I After 4300 nodes, 1304 on tree, 36719.18 best solution, best possible 25977.93 (2578.72 seconds)
Cbc0010I After 4400 nodes, 1326 on tree, 36719.18 best solution, best possible 25977.93 (2864.26 seconds)
Cbc0010I After 4500 nodes, 1375 on tree, 36719.18 best solution, best possible 25978.454 (3138.80 seconds)
Cbc0010I After 4600 nodes, 1415 on tree, 36719.18 best solution, best possible 25984.76 (3145.11 seconds)
Cbc0010I After 4700 nodes, 1457 on tree, 36719.18 best solution, best possible 25984.76 (3152.08 seconds)
Cbc0010I After 4800 nodes, 1488 on tree, 36719.18 best solution, best possible 25984.76 (3160.26 seconds)
Cbc0010I After 4900 nodes, 1502 on tree, 36719.18 best solution, best possible 25984.76 (3168.59 seconds)
Cbc0010I After 5000 nodes, 1520 on tree, 36719.18 best solution, best possible 25984.76 (3175.80 seconds)
Cbc0010I After 5100 nodes, 1554 on tree, 36719.18 best solution, best possible 25984.76 (3182.65 seconds)
Cbc0010I After 5200 nodes, 1597 on tree, 36719.18 best solution, best possible 25984.76 (3192.55 seconds)
Cbc0010I After 5300 nodes, 1643 on tree, 36719.18 best solution, best possible 25984.76 (3204.77 seconds)
Cbc0010I After 5400 nodes, 1680 on tree, 36719.18 best solution, best possible 25984.76 (3218.27 seconds)
Cbc0010I After 5500 nodes, 1699 on tree, 36719.18 best solution, best possible 25984.76 (3230.23 seconds)
Couenne: new cutoff value 3.6719142916e+04 (3305.17 seconds)
Cbc0010I After 5600 nodes, 1727 on tree, 36719.18 best solution, best possible 25997.785 (3240.07 seconds)
Cbc0010I After 5700 nodes, 1770 on tree, 36719.18 best solution, best possible 25997.785 (3246.76 seconds)
Cbc0010I After 5800 nodes, 1803 on tree, 36719.18 best solution, best possible 25997.785 (3254.95 seconds)
Cbc0010I After 5900 nodes, 1818 on tree, 36719.18 best solution, best possible 25997.785 (3263.27 seconds)
Cbc0010I After 6000 nodes, 1833 on tree, 36719.18 best solution, best possible 25997.785 (3272.66 seconds)
Cbc0010I After 6100 nodes, 1851 on tree, 36719.18 best solution, best possible 25997.785 (3280.89 seconds)
Cbc0010I After 6200 nodes, 1895 on tree, 36719.18 best solution, best possible 25997.785 (3291.87 seconds)
Cbc0010I After 6300 nodes, 1939 on tree, 36719.18 best solution, best possible 25997.785 (3303.31 seconds)
Cbc0010I After 6400 nodes, 1979 on tree, 36719.18 best solution, best possible 25997.785 (3316.30 seconds)
Cbc0010I After 6500 nodes, 2001 on tree, 36719.18 best solution, best possible 25997.785 (3327.84 seconds)
Cbc0010I After 6600 nodes, 2039 on tree, 36719.18 best solution, best possible 26010.864 (3334.05 seconds)
Cbc0010I After 6700 nodes, 2078 on tree, 36719.18 best solution, best possible 26016.696 (3340.00 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 6800 nodes, 2120 on tree, 36719.18 best solution, best possible 26019.998 (3509.06 seconds)
Cbc0010I After 6900 nodes, 2169 on tree, 36719.18 best solution, best possible 26019.998 (3514.23 seconds)
Cbc0010I After 7000 nodes, 2211 on tree, 36719.18 best solution, best possible 26024.468 (3520.26 seconds)
Cbc0010I After 7100 nodes, 2253 on tree, 36719.18 best solution, best possible 26024.468 (3527.65 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 36719.18 (best possible 26024.468), took 238506 iterations and 7187 nodes (3541.42 seconds)
Cbc0035I Maximum depth 614, 786 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1172
Linearization cuts added in total:           1172  (separation time: 0.022855s)
Total solve time:                         3541.55s (3541.55s in branch-and-bound)
Lower bound:                              26024.5
Upper bound:                              36719.1  (gap: 41.09%)
Branch-and-bound nodes:                      7187
Stats: /tmp/jl_BHXNow/model.nl 3275 [var]  125 [int] 1025 [con]   81 [aux]   1172 [root]     1172 [tot] 0.022855 [sep]  3541.55 [time]  3541.55 [bb]         2.602447e+04 [lower]         3.671914e+04 [upper]    7187 [nodes]
Performance of                           FBBT:	    103.348s,     8158 runs. fix:  0.0852224 shrnk:   0.160223 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	    338.781s,       11 runs. fix:    1.09783 shrnk:    2.36262 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
