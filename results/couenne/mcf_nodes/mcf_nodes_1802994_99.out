solving instance mcf nodes c25_100_30_F_T_5 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 7609.708      105 40.070502
NLP0014I             2      INFEAS 26.437327       91 29.520524
Loaded instance "/tmp/jl_edNpEP/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           81 (0 integer)

Coin0506I Presolve 1019 (-182) rows, 3029 (-327) columns and 11477 (-1310) elements
Clp0006I 0  Obj 1185.7965 Primal inf 1571.8133 (64)
Clp0006I 95  Obj 1185.7965 Primal inf 5736.4604 (119)
Clp0006I 190  Obj 1185.7965 Primal inf 42044.314 (172)
Clp0006I 265  Obj 2273.472 Primal inf 42748.813 (169)
Clp0006I 359  Obj 3815.0451 Primal inf 7410.6816 (184)
Clp0006I 454  Obj 4807.0813 Primal inf 2390.1686 (127)
Clp0006I 549  Obj 5255.7248 Primal inf 1164.9418 (78)
Clp0006I 644  Obj 5466.4064 Primal inf 528.70419 (44)
Clp0006I 702  Obj 5541.8331
Clp0000I Optimal - objective value 5541.8331
Clp0032I Optimal objective 5541.833096 - 702 iterations time 0.072, Presolve 0.01
Clp0000I Optimal - objective value 5541.8331
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 5541.8331
Optimality Based BT: 4 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from 5541.8331 to 5555.894 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (194.02 seconds)
Optimality Based BT: 3 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 8 improved bounds
Cbc0010I After 100 nodes, 47 on tree, 1e+50 best solution, best possible 5758.7316 (1617.30 seconds)
Cbc0010I After 200 nodes, 95 on tree, 1e+50 best solution, best possible 5758.7316 (1623.16 seconds)
Cbc0010I After 300 nodes, 145 on tree, 1e+50 best solution, best possible 5758.7316 (1628.22 seconds)
Cbc0010I After 400 nodes, 195 on tree, 1e+50 best solution, best possible 5758.7316 (1632.54 seconds)
Cbc0010I After 500 nodes, 245 on tree, 1e+50 best solution, best possible 5758.7316 (1636.90 seconds)
Cbc0010I After 600 nodes, 295 on tree, 1e+50 best solution, best possible 5758.7316 (1643.16 seconds)
Cbc0010I After 700 nodes, 345 on tree, 1e+50 best solution, best possible 5758.7316 (1647.77 seconds)
Cbc0010I After 800 nodes, 395 on tree, 1e+50 best solution, best possible 5758.7316 (1652.48 seconds)
Cbc0010I After 900 nodes, 445 on tree, 1e+50 best solution, best possible 5758.7316 (1660.15 seconds)
Cbc0010I After 1000 nodes, 495 on tree, 1e+50 best solution, best possible 5758.7316 (1665.73 seconds)
Cbc0010I After 1100 nodes, 545 on tree, 1e+50 best solution, best possible 5758.7316 (1672.43 seconds)
Couenne: new cutoff value 7.6039786053e+03 (1752.46 seconds)
Cbc0004I Integer solution of 7603.9786 found after 63166 iterations and 1198 nodes (1677.81 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 1200 nodes, 332 on tree, 7603.9786 best solution, best possible 5840.3594 (2090.05 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 97 improved bounds
Cbc0010I After 1300 nodes, 373 on tree, 7603.9786 best solution, best possible 5865.9933 (3359.45 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1400 nodes, 411 on tree, 7603.9786 best solution, best possible 5868.4508 (3458.34 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 7603.9786 (best possible 5868.4508), took 78690 iterations and 1483 nodes (3525.43 seconds)
Cbc0035I Maximum depth 598, 176 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.025881s)
Total solve time:                          3525.6s (3525.6s in branch-and-bound)
Lower bound:                              5868.45
Upper bound:                              7603.98  (gap: 29.57%)
Branch-and-bound nodes:                      1483
Stats: /tmp/jl_edNpEP/model.nl 3275 [var]  125 [int] 1025 [con]   81 [aux]   1201 [root]     1201 [tot] 0.025881 [sep]   3525.6 [time]   3525.6 [bb]         5.868451e+03 [lower]         7.603979e+03 [upper]    1483 [nodes]
Performance of                           FBBT:	    19.1405s,     1907 runs. fix:   0.673807 shrnk:   0.273385 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    472.588s,       12 runs. fix:   0.344828 shrnk:    4.78813 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
