solving instance mcf nodes c100_400_30_F_L_10 3 6 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 14.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1        TIME 0       87 1845.1357
Loaded instance "/tmp/jl_YRBUwx/model.nl"
Constraints:         4100
Variables:          13100 (500 integer)
Auxiliaries:          731 (0 integer)

Coin0506I Presolve 4369 (-929) rows, 12452 (-1379) columns and 47218 (-5268) elements
Clp0006I 0  Obj 33.897625 Primal inf 1909.5273 (358) Dual inf 1.1187083e+13 (732)
Clp0006I 162  Obj 4266.013 Primal inf 536.96644 (220) Dual inf 1.083025e+13 (571)
Clp0006I 327  Obj 1264.6241 Primal inf 406.29178 (108) Dual inf 8.7911823e+12 (406)
Clp0029I End of values pass after 394 iterations
Clp0006I 394  Obj 214.53117 Primal inf 333.32147 (63) Dual inf 8.0474158e+12 (340)
Clp0006I 556  Obj 402.80219 Primal inf 253.16949 (69) Dual inf 1.4717095e+13 (737)
Clp0006I 718  Obj 502.33276 Primal inf 211.69903 (70) Dual inf 1.3725943e+13 (883)
Clp0006I 884  Obj 551.06199 Primal inf 180.83511 (60) Dual inf 1.5151216e+13 (945)
Clp0006I 1046  Obj 644.04865 Primal inf 169.21446 (58) Dual inf 1.417961e+13 (955)
Clp0006I 1209  Obj 626.73747 Primal inf 121.84039 (48) Dual inf 1.6285162e+13 (1500)
Clp0006I 1371  Obj 726.08465 Primal inf 88.269117 (56) Dual inf 1.9236045e+13 (2005)
Clp0006I 1533  Obj 1153.8895 Primal inf 22.552556 (26) Dual inf 2.2536799e+13 (2605)
Clp0006I 1695  Obj 1200.3723 Dual inf 89494.969 (3145)
Clp0006I 1857  Obj 1052.2535 Dual inf 66070.961 (2655)
Clp0006I 2019  Obj 879.87556 Dual inf 77032.06 (3431)
Clp0006I 2181  Obj 827.82089 Dual inf 112174.28 (3629)
Clp0006I 2343  Obj 783.45086 Dual inf 83072.124 (3038)
Clp0006I 2505  Obj 768.89621 Dual inf 122823.59 (3301)
Clp0006I 2667  Obj 738.24188 Dual inf 66637.896 (2700)
Clp0006I 2829  Obj 726.46814 Dual inf 134235.1 (3675)
Clp0006I 2991  Obj 702.15444 Dual inf 189611.94 (3499)
Clp0006I 3153  Obj 693.59966 Dual inf 174783.95 (3429)
Clp0006I 3315  Obj 627.0905 Dual inf 172681.31 (2866)
Clp0006I 3477  Obj 607.89615 Dual inf 515584.01 (3693)
Clp0006I 3639  Obj 583.12233 Dual inf 298081.62 (3338)
Clp0006I 3801  Obj 569.03887 Dual inf 354764.01 (3703)
Clp0006I 3963  Obj 559.71971 Dual inf 394514.93 (3634)
Clp0006I 4125  Obj 530.43527 Dual inf 118045.88 (3271)
Clp0006I 4287  Obj 477.47426 Dual inf 135323.47 (3024)
Clp0006I 4449  Obj 459.34465 Dual inf 40902.974 (2626)
Clp0006I 4611  Obj 443.95924 Dual inf 22272.789 (2511)
Clp0006I 4773  Obj 421.40409 Dual inf 22038.074 (1824)
Clp0006I 4935  Obj 417.10364 Dual inf 89868.626 (2638)
Clp0006I 5097  Obj 406.87605 Dual inf 171769.82 (3104)
Clp0006I 5259  Obj 400.78446 Dual inf 56097.673 (2713)
Clp0006I 5421  Obj 399.28007 Dual inf 27234.92 (2170)
Clp0006I 5583  Obj 396.68394 Dual inf 419097.35 (3811)
Clp0006I 5745  Obj 394.55401 Dual inf 84577.838 (3064)
Clp0006I 5907  Obj 392.30756 Dual inf 429471.35 (3800)
Clp0006I 6069  Obj 388.72024 Dual inf 117502.44 (2999)
Clp0006I 6231  Obj 386.23565 Dual inf 54619.98 (2311)
Clp0006I 6393  Obj 373.22455 Dual inf 6159.952 (1145)
Clp0006I 6555  Obj 370.2951 Dual inf 1362.1893 (515)
Clp0006I 6717  Obj 368.43579 Dual inf 407.99762 (275)
Clp0006I 6879  Obj 365.37749 Dual inf 82.421401 (123)
Clp0006I 6948  Obj 365.09226
Clp0000I Optimal - objective value 365.09226
Clp0000I Optimal - objective value 365.09229
Clp0032I Optimal objective 365.0922872 - 6948 iterations time 1.842, Presolve 0.12
Clp0000I Optimal - objective value 365.09229
NLP Heuristic: NLP0014I             2      INFEAS 7.8220223       69 57.774402
no solution.
Clp0000I Optimal - objective value 365.09229
Optimality Based BT: 73 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 365.09229 to 372.82373 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 372.82373), took 217 iterations and 0 nodes (1739.85 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5298
Linearization cuts added in total:           5298  (separation time: 0.335121s)
Total solve time:                          1741.7s (1741.7s in branch-and-bound)
Lower bound:                              372.824
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_YRBUwx/model.nl 13100 [var]  500 [int] 4100 [con]  731 [aux]   5298 [root]     5298 [tot] 0.335121 [sep]   1741.7 [time]  1741.71 [bb]         3.728237e+02 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	   0.886688s,        4 runs. fix:       6.75 shrnk:    44.9309 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     1361.3s,        1 runs. fix:          3 shrnk:    5.96847 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1371
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
