solving instance mcf nodes c25_100_30_F_T_5 3 6 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8474.7057       99 27.97326
Loaded instance "/tmp/jl_xO2Eh2/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          181 (0 integer)

Coin0506I Presolve 1208 (-214) rows, 3072 (-384) columns and 11850 (-1429) elements
Clp0006I 0  Obj 1421.9124 Primal inf 4301.7572 (318)
Clp0006I 99  Obj 1421.9124 Primal inf 6039.0666 (350)
Clp0006I 198  Obj 1421.9124 Primal inf 5837.8663 (367)
Clp0006I 297  Obj 1421.9124 Primal inf 18978.276 (402)
Clp0006I 392  Obj 1421.9124 Primal inf 26248.841 (411)
Clp0006I 478  Obj 1421.9124 Primal inf 54687.384 (424)
Clp0006I 564  Obj 1421.9124 Primal inf 65297.865 (430)
Clp0006I 655  Obj 1421.9124 Primal inf 42768.069 (460)
Clp0006I 742  Obj 1421.9124 Primal inf 16171.486 (457)
Clp0006I 833  Obj 1421.9124 Primal inf 12147.412 (444)
Clp0006I 925  Obj 1421.9124 Primal inf 27136.156 (482)
Clp0006I 1009  Obj 1421.9124 Primal inf 43487.677 (483)
Clp0006I 1098  Obj 1421.9124 Primal inf 70650.154 (489)
Clp0006I 1194  Obj 1421.9124 Primal inf 9588.5326 (487)
Clp0006I 1283  Obj 1421.9124 Primal inf 48432.13 (526)
Clp0006I 1372  Obj 1421.9124 Primal inf 25961.6 (540)
Clp0006I 1459  Obj 1421.9124 Primal inf 50839.652 (537)
Clp0006I 1553  Obj 1421.9124 Primal inf 9704.2189 (533)
Clp0006I 1647  Obj 1421.9124 Primal inf 32945.964 (563)
Clp0006I 1737  Obj 1421.9124 Primal inf 11508.202 (531)
Clp0006I 1828  Obj 1421.9124 Primal inf 24990.343 (576)
Clp0006I 1917  Obj 1421.9124 Primal inf 96368.582 (573)
Clp0006I 2010  Obj 1421.9124 Primal inf 46709.741 (595)
Clp0006I 2095  Obj 1421.9126 Primal inf 99956.229 (592)
Clp0006I 2194  Obj 1421.9132 Primal inf 39626.9 (580)
Clp0006I 2293  Obj 1421.9142 Primal inf 33944.14 (583)
Clp0006I 2391  Obj 1421.9161 Primal inf 114499.8 (585)
Clp0006I 2485  Obj 1421.9191 Primal inf 103399.11 (536)
Clp0006I 2584  Obj 1422.9085 Primal inf 258367.92 (621)
Clp0006I 2683  Obj 2354.6146 Primal inf 5702.261 (450)
Clp0006I 2782  Obj 2602.2957 Primal inf 4211.4196 (411)
Clp0006I 2881  Obj 2745.0999 Primal inf 1192.4653 (278)
Clp0006I 2980  Obj 2816.1482 Primal inf 3974.2426 (262)
Clp0006I 3079  Obj 2943.0309 Primal inf 4044.4317 (280)
Clp0006I 3178  Obj 3034.1071 Primal inf 2373.9622 (285)
Clp0006I 3277  Obj 3092.0616 Primal inf 3595.0634 (209)
Clp0006I 3376  Obj 3137.2405 Primal inf 194.03449 (91)
Clp0006I 3475  Obj 3196.0246 Primal inf 1321.3988 (156)
Clp0006I 3574  Obj 3239.7606 Primal inf 45.135012 (38)
Clp0006I 3673  Obj 3299.9496 Primal inf 47.3219 (34)
Clp0006I 3691  Obj 3303.7291
Clp0000I Optimal - objective value 3303.7283
Clp0032I Optimal objective 3303.728344 - 3691 iterations time 0.742, Presolve 0.01
Clp0000I Optimal - objective value 3303.7283
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 3303.7283
Optimality Based BT: 5 improved bounds
Probing: 18 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 3303.7283 to 3373.1869 in 11 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 136 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (224.02 seconds)
Optimality Based BT: 2 improved bounds
Couenne: new cutoff value 1.1699171622e+04 (535.301 seconds)
Cbc0012I Integer solution of 11699.172 found by Couenne Rounding NLP after 417 iterations and 1 nodes (502.79 seconds)
Optimality Based BT: 17 improved bounds
Optimality Based BT: 12 improved bounds
Cbc0010I After 100 nodes, 34 on tree, 11699.172 best solution, best possible 3400.3519 (1722.17 seconds)
Cbc0010I After 200 nodes, 60 on tree, 11699.172 best solution, best possible 3400.3519 (1732.36 seconds)
Cbc0010I After 300 nodes, 89 on tree, 11699.172 best solution, best possible 3400.3519 (1743.44 seconds)
Cbc0010I After 400 nodes, 135 on tree, 11699.172 best solution, best possible 3400.3519 (1755.74 seconds)
Couenne: new cutoff value 1.1553495385e+04 (1796.21 seconds)
Cbc0004I Integer solution of 11553.495 found after 45134 iterations and 495 nodes (1763.71 seconds)
Optimality Based BT: 16 improved bounds
Cbc0010I After 500 nodes, 143 on tree, 11553.495 best solution, best possible 3497.8923 (2351.63 seconds)
Optimality Based BT: 11 improved bounds
Cbc0010I After 600 nodes, 177 on tree, 11553.495 best solution, best possible 3497.8923 (2699.20 seconds)
Cbc0010I After 700 nodes, 201 on tree, 11553.495 best solution, best possible 3497.8923 (2709.74 seconds)
Cbc0010I After 800 nodes, 231 on tree, 11553.495 best solution, best possible 3497.8923 (2722.32 seconds)
Cbc0010I After 900 nodes, 276 on tree, 11553.495 best solution, best possible 3497.8923 (2736.24 seconds)
Couenne: new cutoff value 1.1511698456e+04 (2774.47 seconds)
Cbc0004I Integer solution of 11511.698 found after 90747 iterations and 954 nodes (2741.96 seconds)
Cbc0010I After 1000 nodes, 225 on tree, 11511.698 best solution, best possible 3528.3314 (2753.70 seconds)
Cbc0010I After 1100 nodes, 265 on tree, 11511.698 best solution, best possible 3528.3314 (2767.96 seconds)
Cbc0010I After 1200 nodes, 284 on tree, 11511.698 best solution, best possible 3528.3314 (2779.19 seconds)
Cbc0010I After 1300 nodes, 311 on tree, 11511.698 best solution, best possible 3605.1122 (3044.35 seconds)
Cbc0010I After 1400 nodes, 339 on tree, 11511.698 best solution, best possible 3605.1122 (3058.03 seconds)
Cbc0010I After 1500 nodes, 361 on tree, 11511.698 best solution, best possible 3609.0415 (3068.54 seconds)
Cbc0010I After 1600 nodes, 405 on tree, 11511.698 best solution, best possible 3609.0415 (3082.14 seconds)
Cbc0010I After 1700 nodes, 424 on tree, 11511.698 best solution, best possible 3609.0415 (3091.56 seconds)
Cbc0010I After 1800 nodes, 455 on tree, 11511.698 best solution, best possible 3618.0366 (3104.53 seconds)
Cbc0010I After 1900 nodes, 495 on tree, 11511.698 best solution, best possible 3618.0366 (3117.18 seconds)
Cbc0010I After 2000 nodes, 512 on tree, 11511.698 best solution, best possible 3618.0366 (3127.00 seconds)
Cbc0010I After 2100 nodes, 542 on tree, 11511.698 best solution, best possible 3618.1549 (3139.34 seconds)
Cbc0010I After 2200 nodes, 584 on tree, 11511.698 best solution, best possible 3618.1549 (3151.43 seconds)
Cbc0010I After 2300 nodes, 610 on tree, 11511.698 best solution, best possible 3618.1549 (3162.65 seconds)
Cbc0010I After 2400 nodes, 638 on tree, 11511.698 best solution, best possible 3618.8596 (3195.56 seconds)
Cbc0010I After 2500 nodes, 681 on tree, 11511.698 best solution, best possible 3618.8596 (3208.86 seconds)
Cbc0010I After 2600 nodes, 704 on tree, 11511.698 best solution, best possible 3618.8596 (3220.11 seconds)
Optimality Based BT: 12 improved bounds
Cbc0010I After 2700 nodes, 734 on tree, 11511.698 best solution, best possible 3663.5887 (3307.23 seconds)
Cbc0010I After 2800 nodes, 763 on tree, 11511.698 best solution, best possible 3663.5887 (3318.73 seconds)
Cbc0010I After 2900 nodes, 787 on tree, 11511.698 best solution, best possible 3663.5887 (3329.78 seconds)
Cbc0010I After 3000 nodes, 820 on tree, 11511.698 best solution, best possible 3670.8229 (3342.63 seconds)
Cbc0010I After 3100 nodes, 855 on tree, 11511.698 best solution, best possible 3670.8229 (3355.29 seconds)
Cbc0010I After 3200 nodes, 885 on tree, 11511.698 best solution, best possible 3670.8229 (3367.83 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 11511.698 (best possible 3670.8229), took 405460 iterations and 3203 nodes (3567.80 seconds)
Cbc0035I Maximum depth 247, 205 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1422
Linearization cuts added in total:           1422  (separation time: 0.026811s)
Total solve time:                          3568.9s (3568.9s in branch-and-bound)
Lower bound:                              3670.82
Upper bound:                              11511.7  (gap: 213.54%)
Branch-and-bound nodes:                      3203
Stats: /tmp/jl_xO2Eh2/model.nl 3275 [var]  125 [int] 1025 [con]  181 [aux]   1422 [root]     1422 [tot] 0.026811 [sep]   3568.9 [time]   3568.9 [bb]         3.670823e+03 [lower]         1.151170e+04 [upper]    3203 [nodes]
Performance of                           FBBT:	    51.4093s,     4776 runs. fix:    0.40279 shrnk:   0.549006 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    516.477s,        7 runs. fix:          0 shrnk:    1.15172 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
