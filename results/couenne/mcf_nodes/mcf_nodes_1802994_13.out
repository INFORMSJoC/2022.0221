solving instance mcf nodes c100_400_10_F_T_10 3 6 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1        TIME 0      704 1800.6705
Loaded instance "/tmp/jl_OmAVFi/model.nl"
Constraints:         2100
Variables:           5100 (500 integer)
Auxiliaries:          411 (0 integer)

Coin0506I Presolve 2480 (-811) rows, 4378 (-1133) columns and 17397 (-2884) elements
Clp0006I 0  Obj 0 Primal inf 2825.7194 (229)
Clp0006I 124  Obj 1.6213068e-16 Primal inf 2145.1301 (254)
Clp0006I 248  Obj 3.9409166e-16 Primal inf 1373.783 (173)
Clp0006I 372  Obj 7.4584738e-16 Primal inf 1334.8766 (112)
Clp0006I 496  Obj 2.4313552e-15 Primal inf 1029.4773 (109)
Clp0006I 620  Obj 3.2537963e-15 Primal inf 1218.758 (102)
Clp0006I 744  Obj 55.623503 Primal inf 1305.78 (142)
Clp0006I 868  Obj 93.853291 Primal inf 924.17678 (132)
Clp0006I 992  Obj 106.14426 Primal inf 646.46507 (123)
Clp0006I 1116  Obj 113.79635 Primal inf 52.907282 (49)
Clp0006I 1182  Obj 114.23902
Clp0000I Optimal - objective value 114.23902
Clp0032I Optimal objective 114.2390207 - 1182 iterations time 0.202, Presolve 0.04
Clp0000I Optimal - objective value 114.23902
NLP Heuristic: NLP0014I             2         OPT 1255.3729      143 92.455703
no solution.
Clp0000I Optimal - objective value 114.23902
Optimality Based BT: 2 improved bounds
Probing: Couenne: new cutoff value 1.9962513948e+03 (2014.08 seconds)
0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 114.23902 to 114.23902 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 114.23902), took 0 iterations and 0 nodes (1804.45 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       3291
Linearization cuts added in total:           3291  (separation time: 0.064724s)
Total solve time:                         1804.65s (1804.65s in branch-and-bound)
Lower bound:                              114.239
Upper bound:                              1996.25  (gap: 1633.14%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_OmAVFi/model.nl 5100 [var]  500 [int] 2100 [con]  411 [aux]   3291 [root]     3291 [tot] 0.064724 [sep]  1804.65 [time]  1804.66 [bb]         1.142390e+02 [lower]         1.996251e+03 [upper]       0 [nodes]
Performance of                           FBBT:	   0.167202s,        4 runs. fix:       3.25 shrnk:    3.22975 ubd:          0 2ubd:         10 infeas:          0
Performance of                           OBBT:	    117.242s,        1 runs. fix:          1 shrnk:   0.998427 ubd:          0 2ubd:         10 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
