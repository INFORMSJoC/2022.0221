solving instance mcf nodes c25_100_30_F_L_5 3 6 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3038.0039      587 436.67862
NLP0014I             2      INFEAS 5.0693464       88 40.65898
Loaded instance "/tmp/jl_dlIRkw/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          206 (0 integer)

Coin0506I Presolve 1093 (-233) rows, 3113 (-368) columns and 11791 (-1333) elements
Clp0006I 0  Obj -684.02234 Primal inf 1324.3566 (142)
Clp0006I 96  Obj -684.02234 Primal inf 507.04905 (138)
Clp0006I 192  Obj -684.02234 Primal inf 1809.2571 (204)
Clp0006I 266  Obj -684.02234 Primal inf 1447.3975 (214)
Clp0006I 332  Obj -684.02234 Primal inf 6433.0366 (241)
Clp0006I 408  Obj -684.02234 Primal inf 7022.6221 (243)
Clp0006I 494  Obj -684.02234 Primal inf 22501.335 (237)
Clp0006I 590  Obj -179.09336 Primal inf 1845.2804 (218)
Clp0006I 683  Obj 73.509043 Primal inf 2676.2295 (203)
Clp0006I 777  Obj 278.13411 Primal inf 1740.0353 (209)
Clp0006I 873  Obj 495.18134 Primal inf 1590.0343 (191)
Clp0006I 969  Obj 712.86094 Primal inf 303.68004 (109)
Clp0006I 1065  Obj 820.78978 Primal inf 39.073843 (57)
Clp0006I 1125  Obj 830.26329
Clp0000I Optimal - objective value 830.26329
Clp0032I Optimal objective 830.263295 - 1125 iterations time 0.182, Presolve 0.02
Clp0000I Optimal - objective value 830.26329
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 830.26329
Optimality Based BT: 27 improved bounds
Probing: 16 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from 830.26329 to 885.86523 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (201.77 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 2 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 328 iterations and 3 nodes (3115.94 seconds)
Cbc0035I Maximum depth 2, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1326
Linearization cuts added in total:           1326  (separation time: 0.031802s)
Total solve time:                         3116.13s (3116.13s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         3
Stats: /tmp/jl_dlIRkw/model.nl 3275 [var]  125 [int] 1025 [con]  206 [aux]   1326 [root]     1326 [tot] 0.031802 [sep]  3116.13 [time]  3116.13 [bb]       -1.797693e+308 [lower]         1.000000e+50 [upper]       3 [nodes]
Performance of                           FBBT:	   0.115554s,        9 runs. fix:    1.44444 shrnk:    4.57255 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    182.138s,        3 runs. fix:   0.666667 shrnk:    4.83116 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1371
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
