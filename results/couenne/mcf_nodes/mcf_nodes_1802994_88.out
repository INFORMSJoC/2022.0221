solving instance mcf nodes c25_100_30_F_L_5 3 6 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1546.6992      664 399.08743
NLP0014I             2      INFEAS 11.064583      104 43.576824
Loaded instance "/tmp/jl_l0QIij/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          181 (0 integer)

Coin0506I Presolve 1217 (-208) rows, 3113 (-343) columns and 12014 (-1283) elements
Clp0006I 0  Obj 7.2709541 Primal inf 1047.3788 (232)
Clp0006I 99  Obj 7.2709541 Primal inf 461.79412 (164)
Clp0006I 198  Obj 7.2709541 Primal inf 341.29632 (138)
Clp0006I 297  Obj 7.2709541 Primal inf 1338.3043 (212)
Clp0006I 390  Obj 7.2709541 Primal inf 666.39137 (190)
Clp0006I 489  Obj 7.2709541 Primal inf 1311.52 (184)
Clp0006I 575  Obj 7.2709541 Primal inf 942.74314 (239)
Clp0006I 656  Obj 7.2709541 Primal inf 685.77724 (242)
Clp0006I 749  Obj 7.2709541 Primal inf 387.35506 (222)
Clp0006I 833  Obj 7.2709541 Primal inf 700.22029 (253)
Clp0006I 918  Obj 7.2709541 Primal inf 354.61306 (206)
Clp0006I 1003  Obj 7.2709541 Primal inf 25628.016 (346)
Clp0006I 1086  Obj 7.2709541 Primal inf 25844.941 (394)
Clp0006I 1178  Obj 7.2709541 Primal inf 29577.508 (412)
Clp0006I 1262  Obj 7.2709541 Primal inf 54550.677 (455)
Clp0006I 1354  Obj 7.2709541 Primal inf 44467.539 (464)
Clp0006I 1446  Obj 7.2709541 Primal inf 47197.799 (518)
Clp0006I 1533  Obj 7.2709541 Primal inf 67150.438 (516)
Clp0006I 1631  Obj 7.2709541 Primal inf 38328.32 (520)
Clp0006I 1723  Obj 7.2709541 Primal inf 42251.849 (546)
Clp0006I 1819  Obj 7.2709541 Primal inf 63691.709 (562)
Clp0006I 1905  Obj 7.2709541 Primal inf 53441.591 (532)
Clp0006I 2001  Obj 7.2709541 Primal inf 72663.963 (548)
Clp0006I 2095  Obj 7.2709541 Primal inf 51413.736 (537)
Clp0006I 2191  Obj 7.2709541 Primal inf 92685.924 (530)
Clp0006I 2284  Obj 7.2709541 Primal inf 129757.85 (541)
Clp0006I 2370  Obj 7.2709541 Primal inf 77898.564 (532)
Clp0006I 2462  Obj 7.2709541 Primal inf 52706.746 (533)
Clp0006I 2550  Obj 7.2709541 Primal inf 96648.598 (532)
Clp0006I 2645  Obj 7.2709541 Primal inf 192441.89 (524)
Clp0006I 2738  Obj 7.2709541 Primal inf 112531.75 (506)
Clp0006I 2828  Obj 7.2709541 Primal inf 105503.66 (521)
Clp0006I 2920  Obj 7.2709541 Primal inf 87319.644 (526)
Clp0006I 3019  Obj 7.2709541 Primal inf 80149.956 (537)
Clp0006I 3108  Obj 7.2709541 Primal inf 157571.95 (516)
Clp0006I 3202  Obj 7.2709541 Primal inf 205129.57 (509)
Clp0006I 3301  Obj 7.2709554 Primal inf 66445.439 (491)
Clp0006I 3400  Obj 7.2714875 Primal inf 327407.58 (507)
Clp0006I 3499  Obj 7.2730088 Primal inf 209967.6 (504)
Clp0006I 3598  Obj 7.2736244 Primal inf 394638.87 (506)
Clp0006I 3697  Obj 7.273881 Primal inf 34230.317 (498)
Clp0006I 3796  Obj 7.2743361 Primal inf 124528.54 (494)
Clp0006I 3895  Obj 7.2749145 Primal inf 93897.604 (459)
Clp0006I 3994  Obj 7.2754125 Primal inf 54745.149 (461)
Clp0006I 4093  Obj 7.2762544 Primal inf 46006.153 (445)
Clp0006I 4192  Obj 7.2773965 Primal inf 44215.784 (444)
Clp0006I 4291  Obj 7.2783442 Primal inf 60875.622 (433)
Clp0006I 4390  Obj 7.2806302 Primal inf 69631.18 (489)
Clp0006I 4489  Obj 7.2828821 Primal inf 1834274.8 (454)
Clp0006I 4588  Obj 7.285103 Primal inf 571659.49 (427)
Clp0006I 4687  Obj 7.2855267 Primal inf 30599.844 (391)
Clp0006I 4786  Obj 7.2859838 Primal inf 137283.73 (376)
Clp0006I 4885  Obj 7.2863132 Primal inf 15725.084 (357)
Clp0006I 4984  Obj 7.2868872 Primal inf 33004.251 (386)
Clp0006I 5083  Obj 7.2872262 Primal inf 241486.66 (387)
Clp0006I 5182  Obj 7.2874211 Primal inf 150241.85 (369)
Clp0006I 5281  Obj 7.2876065 Primal inf 15560.372 (342)
Clp0006I 5380  Obj 7.2877346 Primal inf 13577.343 (306)
Clp0006I 5479  Obj 7.2878025 Primal inf 7406.8987 (279)
Clp0006I 5578  Obj 7.288019 Primal inf 9042.111 (299)
Clp0006I 5677  Obj 7.2881263 Primal inf 4844.9475 (335)
Clp0006I 5776  Obj 7.2883298 Primal inf 17950.867 (390)
Clp0006I 5875  Obj 7.2889869 Primal inf 354185.18 (518)
Clp0006I 5974  Obj 7.2893058 Primal inf 145677.2 (428)
Clp0006I 6073  Obj 7.2897066 Primal inf 572669.16 (408)
Clp0006I 6172  Obj 7.2910386 Primal inf 22010.559 (395)
Clp0006I 6271  Obj 7.2920295 Primal inf 12227.085 (386)
Clp0006I 6370  Obj 7.2923223 Primal inf 20592.041 (374)
Clp0006I 6469  Obj 7.2940778 Primal inf 81082.274 (398)
Clp0006I 6568  Obj 7.2954087 Primal inf 6708.8029 (354)
Clp0006I 6667  Obj 7.2971926 Primal inf 15476.856 (391)
Clp0006I 6766  Obj 7.300151 Primal inf 43511.203 (358)
Clp0006I 6865  Obj 7.3088497 Primal inf 11757.919 (304)
Clp0006I 6964  Obj 7.3113766 Primal inf 5585.5499 (305)
Clp0006I 7063  Obj 10.288678 Primal inf 3783.9749 (325)
Clp0006I 7162  Obj 11.818374 Primal inf 19199.065 (258)
Clp0006I 7261  Obj 12.470345 Primal inf 872865.85 (292)
Clp0006I 7360  Obj 13.090921 Primal inf 152753.18 (296)
Clp0006I 7459  Obj 13.429844 Primal inf 291.21146 (225)
Clp0006I 7558  Obj 13.959005 Primal inf 189.58961 (177)
Clp0006I 7657  Obj 14.594614 Primal inf 115.66158 (136)
Clp0006I 7756  Obj 14.959677 Primal inf 202.21672 (132)
Clp0006I 7855  Obj 15.240342 Primal inf 18.685048 (104)
Clp0006I 7954  Obj 15.626761 Primal inf 6391.5062 (122)
Clp0006I 8053  Obj 15.783095 Primal inf 30.734708 (81)
Clp0006I 8152  Obj 16.186534 Primal inf 27.845304 (41)
Clp0006I 8251  Obj 16.289944 Primal inf 52.565818 (108)
Clp0006I 8350  Obj 16.478127 Primal inf 13.603511 (68)
Clp0006I 8433  Obj 16.645643
Clp0000I Optimal - objective value 16.612504
Clp0032I Optimal objective 16.61250408 - 8433 iterations time 1.812, Presolve 0.01
Clp0000I Optimal - objective value 16.612504
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 16.612504
Optimality Based BT: 6 improved bounds
Probing: 19 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 30 added rows had average density of 2
Cbc0013I At root node, 30 cuts changed objective from 16.612504 to 104.35115 in 9 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 105 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (255.42 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 2 improved bounds
Couenne: new cutoff value 2.9558231270e+03 (1606.09 seconds)
Cbc0012I Integer solution of 2955.8231 found by Couenne Rounding NLP after 2209 iterations and 4 nodes (1155.04 seconds)
Couenne: new cutoff value 2.2672292169e+03 (1953.03 seconds)
Cbc0012I Integer solution of 2267.2292 found by Couenne Rounding NLP after 2778 iterations and 5 nodes (1501.99 seconds)
Cbc0010I After 100 nodes, 35 on tree, 2267.2292 best solution, best possible 104.92609 (1820.90 seconds)
Cbc0010I After 200 nodes, 85 on tree, 2267.2292 best solution, best possible 104.92609 (1834.27 seconds)
Cbc0010I After 300 nodes, 107 on tree, 2267.2292 best solution, best possible 105.24874 (1848.47 seconds)
Cbc0010I After 400 nodes, 147 on tree, 2267.2292 best solution, best possible 105.54382 (1857.25 seconds)
Cbc0010I After 500 nodes, 193 on tree, 2267.2292 best solution, best possible 105.54382 (1871.83 seconds)
Cbc0010I After 600 nodes, 215 on tree, 2267.2292 best solution, best possible 105.54433 (1883.62 seconds)
Cbc0010I After 700 nodes, 262 on tree, 2267.2292 best solution, best possible 105.54433 (1894.00 seconds)
Cbc0010I After 800 nodes, 296 on tree, 2267.2292 best solution, best possible 105.54433 (1909.71 seconds)
Cbc0010I After 900 nodes, 328 on tree, 2267.2292 best solution, best possible 105.58133 (1922.68 seconds)
Cbc0010I After 1000 nodes, 375 on tree, 2267.2292 best solution, best possible 105.58133 (1932.99 seconds)
Cbc0010I After 1100 nodes, 410 on tree, 2267.2292 best solution, best possible 105.58133 (1948.67 seconds)
Cbc0010I After 1200 nodes, 439 on tree, 2267.2292 best solution, best possible 105.607 (1961.10 seconds)
Cbc0010I After 1300 nodes, 484 on tree, 2267.2292 best solution, best possible 105.607 (1970.80 seconds)
Cbc0010I After 1400 nodes, 521 on tree, 2267.2292 best solution, best possible 105.607 (1985.70 seconds)
Cbc0010I After 1500 nodes, 552 on tree, 2267.2292 best solution, best possible 105.60717 (1996.71 seconds)
Cbc0010I After 1600 nodes, 602 on tree, 2267.2292 best solution, best possible 105.60717 (2009.24 seconds)
Cbc0010I After 1700 nodes, 635 on tree, 2267.2292 best solution, best possible 105.60717 (2025.62 seconds)
Cbc0010I After 1800 nodes, 681 on tree, 2267.2292 best solution, best possible 105.60717 (2038.98 seconds)
Couenne: new cutoff value 2.1352794330e+03 (2498.23 seconds)
Cbc0004I Integer solution of 2135.2794 found after 325298 iterations and 1896 nodes (2047.19 seconds)
Cbc0010I After 1900 nodes, 680 on tree, 2135.2794 best solution, best possible 105.77718 (2047.56 seconds)
Cbc0010I After 2000 nodes, 722 on tree, 2135.2794 best solution, best possible 105.77718 (2057.27 seconds)
Cbc0010I After 2100 nodes, 761 on tree, 2135.2794 best solution, best possible 105.77718 (2070.94 seconds)
Cbc0010I After 2200 nodes, 788 on tree, 2135.2794 best solution, best possible 105.80707 (2080.19 seconds)
Cbc0010I After 2300 nodes, 838 on tree, 2135.2794 best solution, best possible 105.80707 (2093.09 seconds)
Cbc0010I After 2400 nodes, 861 on tree, 2135.2794 best solution, best possible 105.80725 (2106.25 seconds)
Cbc0010I After 2500 nodes, 907 on tree, 2135.2794 best solution, best possible 105.80725 (2116.19 seconds)
Cbc0010I After 2600 nodes, 942 on tree, 2135.2794 best solution, best possible 105.80725 (2131.28 seconds)
Cbc0010I After 2700 nodes, 970 on tree, 2135.2794 best solution, best possible 105.82555 (2148.75 seconds)
Cbc0010I After 2800 nodes, 1020 on tree, 2135.2794 best solution, best possible 105.82555 (2160.12 seconds)
Cbc0010I After 2900 nodes, 1042 on tree, 2135.2794 best solution, best possible 105.85107 (2173.16 seconds)
Cbc0010I After 3000 nodes, 1088 on tree, 2135.2794 best solution, best possible 105.85107 (2183.26 seconds)
Cbc0010I After 3100 nodes, 1127 on tree, 2135.2794 best solution, best possible 105.85107 (2200.98 seconds)
Cbc0010I After 3200 nodes, 1159 on tree, 2135.2794 best solution, best possible 105.93859 (2213.78 seconds)
Cbc0010I After 3300 nodes, 1205 on tree, 2135.2794 best solution, best possible 105.93859 (2224.48 seconds)
Cbc0010I After 3400 nodes, 1243 on tree, 2135.2794 best solution, best possible 105.93859 (2241.80 seconds)
Cbc0010I After 3500 nodes, 1274 on tree, 2135.2794 best solution, best possible 105.94029 (2254.23 seconds)
Cbc0010I After 3600 nodes, 1322 on tree, 2135.2794 best solution, best possible 105.94029 (2265.34 seconds)
Cbc0010I After 3700 nodes, 1351 on tree, 2135.2794 best solution, best possible 105.94029 (2281.43 seconds)
Cbc0010I After 3800 nodes, 1387 on tree, 2135.2794 best solution, best possible 105.95224 (2290.77 seconds)
Cbc0010I After 3900 nodes, 1432 on tree, 2135.2794 best solution, best possible 105.95224 (2304.73 seconds)
Cbc0010I After 4000 nodes, 1454 on tree, 2135.2794 best solution, best possible 105.9898 (2314.31 seconds)
Cbc0010I After 4100 nodes, 1503 on tree, 2135.2794 best solution, best possible 105.9898 (2325.35 seconds)
Cbc0010I After 4200 nodes, 1536 on tree, 2135.2794 best solution, best possible 105.9898 (2341.34 seconds)
Cbc0010I After 4300 nodes, 1572 on tree, 2135.2794 best solution, best possible 106.04582 (2351.06 seconds)
Cbc0010I After 4400 nodes, 1620 on tree, 2135.2794 best solution, best possible 106.04582 (2366.09 seconds)
Cbc0010I After 4500 nodes, 1652 on tree, 2135.2794 best solution, best possible 106.04951 (2382.54 seconds)
Cbc0010I After 4600 nodes, 1695 on tree, 2135.2794 best solution, best possible 106.04951 (2393.01 seconds)
Cbc0010I After 4700 nodes, 1731 on tree, 2135.2794 best solution, best possible 106.04951 (2406.98 seconds)
Cbc0010I After 4800 nodes, 1761 on tree, 2135.2794 best solution, best possible 106.04967 (2468.31 seconds)
Cbc0010I After 4900 nodes, 1808 on tree, 2135.2794 best solution, best possible 106.04967 (2482.48 seconds)
Cbc0010I After 5000 nodes, 1829 on tree, 2135.2794 best solution, best possible 106.06198 (2492.83 seconds)
Cbc0010I After 5100 nodes, 1877 on tree, 2135.2794 best solution, best possible 106.06198 (2504.75 seconds)
Cbc0010I After 5200 nodes, 1913 on tree, 2135.2794 best solution, best possible 106.06198 (2522.70 seconds)
Cbc0010I After 5300 nodes, 1952 on tree, 2135.2794 best solution, best possible 106.08026 (2533.90 seconds)
Cbc0010I After 5400 nodes, 2001 on tree, 2135.2794 best solution, best possible 106.08026 (2547.49 seconds)
Cbc0010I After 5500 nodes, 2021 on tree, 2135.2794 best solution, best possible 106.08262 (2559.10 seconds)
Cbc0010I After 5600 nodes, 2070 on tree, 2135.2794 best solution, best possible 106.08262 (2569.93 seconds)
Cbc0010I After 5700 nodes, 2107 on tree, 2135.2794 best solution, best possible 106.08262 (2587.12 seconds)
Cbc0010I After 5800 nodes, 2143 on tree, 2135.2794 best solution, best possible 106.08731 (2598.97 seconds)
Cbc0010I After 5900 nodes, 2193 on tree, 2135.2794 best solution, best possible 106.08731 (2611.77 seconds)
Cbc0010I After 6000 nodes, 2226 on tree, 2135.2794 best solution, best possible 106.08731 (2627.84 seconds)
Cbc0010I After 6100 nodes, 2265 on tree, 2135.2794 best solution, best possible 106.08848 (2638.29 seconds)
Cbc0010I After 6200 nodes, 2310 on tree, 2135.2794 best solution, best possible 106.08848 (2651.68 seconds)
Cbc0010I After 6300 nodes, 2336 on tree, 2135.2794 best solution, best possible 106.12106 (2665.71 seconds)
Cbc0010I After 6400 nodes, 2382 on tree, 2135.2794 best solution, best possible 106.12106 (2675.53 seconds)
Cbc0010I After 6500 nodes, 2418 on tree, 2135.2794 best solution, best possible 106.12106 (2690.75 seconds)
Cbc0010I After 6600 nodes, 2448 on tree, 2135.2794 best solution, best possible 106.13416 (2700.90 seconds)
Cbc0010I After 6700 nodes, 2498 on tree, 2135.2794 best solution, best possible 106.13416 (2715.62 seconds)
Cbc0010I After 6800 nodes, 2518 on tree, 2135.2794 best solution, best possible 106.14465 (2728.89 seconds)
Cbc0010I After 6900 nodes, 2566 on tree, 2135.2794 best solution, best possible 106.14465 (2739.29 seconds)
Cbc0010I After 7000 nodes, 2595 on tree, 2135.2794 best solution, best possible 106.14465 (2755.25 seconds)
Cbc0010I After 7100 nodes, 2628 on tree, 2135.2794 best solution, best possible 106.14636 (2766.08 seconds)
Cbc0010I After 7200 nodes, 2678 on tree, 2135.2794 best solution, best possible 106.14636 (2778.56 seconds)
Cbc0010I After 7300 nodes, 2711 on tree, 2135.2794 best solution, best possible 106.14636 (2794.18 seconds)
Cbc0010I After 7400 nodes, 2752 on tree, 2135.2794 best solution, best possible 106.15302 (2804.09 seconds)
Cbc0010I After 7500 nodes, 2792 on tree, 2135.2794 best solution, best possible 106.15302 (2819.13 seconds)
Cbc0010I After 7600 nodes, 2818 on tree, 2135.2794 best solution, best possible 106.15496 (2831.40 seconds)
Cbc0010I After 7700 nodes, 2863 on tree, 2135.2794 best solution, best possible 106.15496 (2841.50 seconds)
Cbc0010I After 7800 nodes, 2897 on tree, 2135.2794 best solution, best possible 106.15496 (2857.10 seconds)
Cbc0010I After 7900 nodes, 2931 on tree, 2135.2794 best solution, best possible 106.15733 (2867.05 seconds)
Cbc0010I After 8000 nodes, 2978 on tree, 2135.2794 best solution, best possible 106.15733 (2883.10 seconds)
Cbc0010I After 8100 nodes, 3003 on tree, 2135.2794 best solution, best possible 106.15764 (2893.95 seconds)
Cbc0010I After 8200 nodes, 3053 on tree, 2135.2794 best solution, best possible 106.15764 (2906.14 seconds)
Cbc0010I After 8300 nodes, 3089 on tree, 2135.2794 best solution, best possible 106.15764 (2923.76 seconds)
Cbc0010I After 8400 nodes, 3128 on tree, 2135.2794 best solution, best possible 106.17434 (2934.34 seconds)
Cbc0010I After 8500 nodes, 3173 on tree, 2135.2794 best solution, best possible 106.17434 (2948.97 seconds)
Cbc0010I After 8600 nodes, 3202 on tree, 2135.2794 best solution, best possible 106.17549 (2961.97 seconds)
Cbc0010I After 8700 nodes, 3246 on tree, 2135.2794 best solution, best possible 106.17549 (2971.56 seconds)
Cbc0010I After 8800 nodes, 3286 on tree, 2135.2794 best solution, best possible 106.17549 (2987.42 seconds)
Cbc0010I After 8900 nodes, 3315 on tree, 2135.2794 best solution, best possible 106.18248 (2997.97 seconds)
Cbc0010I After 9000 nodes, 3364 on tree, 2135.2794 best solution, best possible 106.18248 (3009.68 seconds)
Cbc0010I After 9100 nodes, 3397 on tree, 2135.2794 best solution, best possible 106.18248 (3026.26 seconds)
Cbc0010I After 9200 nodes, 3433 on tree, 2135.2794 best solution, best possible 106.18256 (3038.06 seconds)
Cbc0010I After 9300 nodes, 3483 on tree, 2135.2794 best solution, best possible 106.18256 (3052.09 seconds)
Cbc0010I After 9400 nodes, 3502 on tree, 2135.2794 best solution, best possible 106.18447 (3064.72 seconds)
Cbc0010I After 9500 nodes, 3549 on tree, 2135.2794 best solution, best possible 106.18447 (3074.99 seconds)
Cbc0010I After 9600 nodes, 3583 on tree, 2135.2794 best solution, best possible 106.18447 (3090.80 seconds)
Cbc0010I After 9700 nodes, 3613 on tree, 2135.2794 best solution, best possible 106.18458 (3099.92 seconds)
Cbc0010I After 9800 nodes, 3655 on tree, 2135.2794 best solution, best possible 106.18458 (3113.16 seconds)
Cbc0010I After 9900 nodes, 3679 on tree, 2135.2794 best solution, best possible 106.18468 (3122.65 seconds)
Cbc0010I After 10000 nodes, 3725 on tree, 2135.2794 best solution, best possible 106.18468 (3143.18 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 2135.2794 (best possible 106.18468), took 1796702 iterations and 10041 nodes (3149.54 seconds)
Cbc0035I Maximum depth 241, 644 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1425
Linearization cuts added in total:           1425  (separation time: 0.029609s)
Total solve time:                         3152.14s (3152.14s in branch-and-bound)
Lower bound:                              106.185
Upper bound:                              2135.28  (gap: 1893.08%)
Branch-and-bound nodes:                     10041
Stats: /tmp/jl_l0QIij/model.nl 3275 [var]  125 [int] 1025 [con]  181 [aux]   1425 [root]     1425 [tot] 0.029609 [sep]  3152.14 [time]  3152.14 [bb]         1.061847e+02 [lower]         2.135279e+03 [upper]   10041 [nodes]
Performance of                           FBBT:	    147.033s,    13826 runs. fix:  0.0565776 shrnk:   0.281239 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    403.944s,        4 runs. fix:        0.5 shrnk:    11.6687 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
f0 = 0.3670122648287024
f0 = 0.3908327724017193
f0 = 0.08822410212228424
f0 = 0.1605678658625573
f0 = 0.3105488394704404
f0 = 0.24438076287872723
f0 = 0.3802458801470451
f0 = 0.27967040372764107
f0 = 0.1773304452657912
f0 = 0.2179135322420421
f0 = 0.6863835145113714
f0 = 0.3308403829585659
f0 = 0.324664695810006
f0 = 0.336133829085903
f0 = 0.34319175725568585
f0 = 0.1623323479050029
f0 = 0.29025729598231503
f0 = 0.3043731523218808
f0 = 0.1164558148014152
f0 = 0.29819746517332063
f0 = 0.2770236806639725
f0 = 0.2999619472157666
f0 = 0.21350232713592776
f0 = 0.25055645002728727
f0 = 0.30349091130065786
