solving instance mcf nodes c25_100_30_F_T_5 3 6 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5108.6802       88 31.657445
Loaded instance "/tmp/jl_UuPsAI/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 1100 (-182) rows, 3079 (-327) columns and 11664 (-1310) elements
Clp0006I 0  Obj 188.27226 Primal inf 1878.1889 (65)
Clp0006I 97  Obj 188.27226 Primal inf 2633.8202 (120)
Clp0006I 194  Obj 188.27226 Primal inf 3271.627 (151)
Clp0006I 291  Obj 188.27226 Primal inf 2849.0806 (175)
Clp0006I 388  Obj 188.27226 Primal inf 1133.1181 (132)
Clp0006I 485  Obj 188.27226 Primal inf 23587.816 (243)
Clp0006I 576  Obj 188.27226 Primal inf 10202.719 (207)
Clp0006I 667  Obj 188.27226 Primal inf 35055.987 (238)
Clp0006I 750  Obj 188.27226 Primal inf 101471.72 (288)
Clp0006I 832  Obj 188.27226 Primal inf 36227.981 (272)
Clp0006I 913  Obj 188.27226 Primal inf 49195.652 (300)
Clp0006I 1010  Obj 188.27226 Primal inf 228275.19 (240)
Clp0006I 1088  Obj 188.27226 Primal inf 49655.44 (279)
Clp0006I 1173  Obj 188.27226 Primal inf 262636.93 (331)
Clp0006I 1256  Obj 188.27272 Primal inf 24792.89 (295)
Clp0006I 1336  Obj 188.27317 Primal inf 24664.016 (257)
Clp0006I 1411  Obj 188.27331 Primal inf 36540.165 (296)
Clp0006I 1494  Obj 188.2743 Primal inf 69182.143 (302)
Clp0006I 1574  Obj 188.27588 Primal inf 175112.12 (311)
Clp0006I 1654  Obj 188.28078 Primal inf 300221.62 (290)
Clp0006I 1747  Obj 1515.1999 Primal inf 195564.48 (256)
Clp0006I 1844  Obj 1850.7959 Primal inf 11965.759 (252)
Clp0006I 1941  Obj 2027.4062 Primal inf 6409.0705 (165)
Clp0006I 2038  Obj 2239.1372 Primal inf 6021.5991 (131)
Clp0006I 2135  Obj 2510.242 Primal inf 2309.4526 (105)
Clp0006I 2232  Obj 2704.198 Primal inf 864.32103 (81)
Clp0006I 2329  Obj 2772.7482 Primal inf 4.3028785 (3)
Clp0006I 2338  Obj 2772.9632
Clp0000I Optimal - objective value 2772.9634
Clp0032I Optimal objective 2772.963366 - 2338 iterations time 0.422, Presolve 0.01
Clp0000I Optimal - objective value 2772.9634
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 2772.9634
Optimality Based BT: 7 improved bounds
Probing: 2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 30 added rows had average density of 2
Cbc0013I At root node, 30 cuts changed objective from 2772.9634 to 2894.5925 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 101 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (202.21 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 2996.5594 (1409.88 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 2996.5594 (1419.05 seconds)
Cbc0010I After 300 nodes, 141 on tree, 1e+50 best solution, best possible 2996.5594 (1427.58 seconds)
Cbc0010I After 400 nodes, 191 on tree, 1e+50 best solution, best possible 2996.5594 (1434.11 seconds)
Cbc0010I After 500 nodes, 239 on tree, 1e+50 best solution, best possible 2996.5594 (1439.20 seconds)
Cbc0010I After 600 nodes, 283 on tree, 1e+50 best solution, best possible 2996.5594 (1444.03 seconds)
Cbc0010I After 700 nodes, 324 on tree, 1e+50 best solution, best possible 2996.5594 (1448.83 seconds)
Cbc0010I After 800 nodes, 367 on tree, 1e+50 best solution, best possible 2996.5594 (1453.84 seconds)
Cbc0010I After 900 nodes, 401 on tree, 1e+50 best solution, best possible 2996.5594 (1458.58 seconds)
Cbc0010I After 1000 nodes, 406 on tree, 1e+50 best solution, best possible 2996.5594 (1463.17 seconds)
Couenne: new cutoff value 5.1209858822e+03 (1502.86 seconds)
Cbc0004I Integer solution of 5120.9859 found after 43664 iterations and 1072 nodes (1466.22 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1100 nodes, 335 on tree, 5120.9859 best solution, best possible 3019.9962 (2460.22 seconds)
Cbc0010I After 1200 nodes, 383 on tree, 5120.9859 best solution, best possible 3019.9962 (2471.14 seconds)
Cbc0010I After 1300 nodes, 418 on tree, 5120.9859 best solution, best possible 3041.2376 (2636.87 seconds)
Cbc0010I After 1400 nodes, 464 on tree, 5120.9859 best solution, best possible 3041.2376 (2648.38 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1500 nodes, 505 on tree, 5120.9859 best solution, best possible 3061.0015 (3258.89 seconds)
Cbc0010I After 1600 nodes, 544 on tree, 5120.9859 best solution, best possible 3061.0015 (3271.41 seconds)
Cbc0010I After 1700 nodes, 591 on tree, 5120.9859 best solution, best possible 3062.6182 (3284.61 seconds)
Cbc0010I After 1800 nodes, 630 on tree, 5120.9859 best solution, best possible 3064.0461 (3295.87 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1900 nodes, 669 on tree, 5120.9859 best solution, best possible 3073.0006 (3518.00 seconds)
Cbc0010I After 2000 nodes, 719 on tree, 5120.9859 best solution, best possible 3073.0006 (3527.53 seconds)
Cbc0010I After 2100 nodes, 759 on tree, 5120.9859 best solution, best possible 3079.2309 (3537.92 seconds)
Cbc0010I After 2200 nodes, 800 on tree, 5120.9859 best solution, best possible 3085.1074 (3548.41 seconds)
Cbc0010I After 2300 nodes, 845 on tree, 5120.9859 best solution, best possible 3085.1074 (3559.76 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 5120.9859 (best possible 3085.1074), took 158669 iterations and 2325 nodes (3563.48 seconds)
Cbc0035I Maximum depth 535, 663 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1282
Linearization cuts added in total:           1282  (separation time: 0.026975s)
Total solve time:                         3565.15s (3565.15s in branch-and-bound)
Lower bound:                              3085.11
Upper bound:                              5120.99  (gap: 65.97%)
Branch-and-bound nodes:                      2325
Stats: /tmp/jl_UuPsAI/model.nl 3275 [var]  125 [int] 1025 [con]  131 [aux]   1282 [root]     1282 [tot] 0.026975 [sep]  3565.15 [time]  3565.15 [bb]         3.085107e+03 [lower]         5.120986e+03 [upper]    2325 [nodes]
Performance of                           FBBT:	    36.3502s,     3526 runs. fix:    0.34725 shrnk:   0.159311 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    617.047s,       11 runs. fix:   0.113208 shrnk:    1.88887 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
