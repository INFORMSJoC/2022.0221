solving instance mcf nodes c25_100_30_F_T_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2663.72       69 20.516687
NLP0014I             2      INFEAS 56.155764       83 26.679648
Loaded instance "/tmp/jl_lFHr36/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           56 (0 integer)

Coin0506I Presolve 974 (-183) rows, 3003 (-328) columns and 11363 (-1336) elements
Clp0006I 0  Obj 89.273083 Primal inf 1876.2016 (62)
Clp0006I 94  Obj 126.93243 Primal inf 24402.793 (125)
Clp0006I 175  Obj 381.10832 Primal inf 4950.8994 (124)
Clp0006I 269  Obj 1008.5734 Primal inf 55542.907 (154)
Clp0006I 363  Obj 1554.2622 Primal inf 22651.053 (146)
Clp0006I 457  Obj 2052.7282 Primal inf 7256.0509 (131)
Clp0006I 551  Obj 2404.5997 Primal inf 31389.267 (148)
Clp0006I 645  Obj 2618.2325 Primal inf 115.60547 (18)
Clp0006I 669  Obj 2624.6096
Clp0000I Optimal - objective value 2624.6096
Clp0032I Optimal objective 2624.609598 - 669 iterations time 0.072, Presolve 0.01
Clp0000I Optimal - objective value 2624.6096
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 2624.6096
Optimality Based BT: 1 improved bounds
Probing: 2 improved bounds
NLP Heuristic: no solution.
Cbc0031I 28 added rows had average density of 2
Cbc0013I At root node, 28 cuts changed objective from 2624.6096 to 2663.7201 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 247 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (233.35 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Couenne: new cutoff value 2.6637201037e+03 (731.408 seconds)
Optimality Based BT: 36 improved bounds
Couenne: new cutoff value 2.6637201036e+03 (830.229 seconds)
Cbc0004I Integer solution of 2663.7201 found after 394 iterations and 4 nodes (777.75 seconds)
Cbc0001I Search completed - best objective 2663.720103560397, took 394 iterations and 4 nodes (777.75 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1157
Linearization cuts added in total:           1157  (separation time: 0.026858s)
Total solve time:                         777.844s (777.844s in branch-and-bound)
Lower bound:                              2663.72
Upper bound:                              2663.72  (gap: 0.00%)
Branch-and-bound nodes:                         4
Stats: /tmp/jl_lFHr36/model.nl 3275 [var]  125 [int] 1025 [con]   56 [aux]   1157 [root]     1157 [tot] 0.026858 [sep]  777.844 [time]  777.845 [bb]         2.663720e+03 [lower]         2.663720e+03 [upper]       4 [nodes]
Performance of                           FBBT:	   0.328562s,       27 runs. fix:          2 shrnk:    1.85251 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     195.27s,        4 runs. fix:       1.75 shrnk:    259.225 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
