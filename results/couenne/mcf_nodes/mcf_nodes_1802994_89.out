solving instance mcf nodes c25_100_30_F_L_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1012.0345       71 24.64567
NLP0014I             2      INFEAS 7.8981249       79 29.589201
Loaded instance "/tmp/jl_xtROMT/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           56 (0 integer)

Coin0506I Presolve 1002 (-153) rows, 3068 (-263) columns and 11587 (-1120) elements
Clp0006I 0  Obj 15.371015 Primal inf 455.10673 (68)
Clp0006I 95  Obj 48.001399 Primal inf 6495.0711 (120)
Clp0006I 176  Obj 48.001399 Primal inf 7561.4478 (128)
Clp0006I 271  Obj 262.94428 Primal inf 3412.8655 (150)
Clp0006I 366  Obj 566.96131 Primal inf 864.33103 (124)
Clp0006I 461  Obj 752.40451 Primal inf 1040.2112 (109)
Clp0006I 556  Obj 868.84823 Primal inf 465.11866 (83)
Clp0006I 651  Obj 926.3522 Primal inf 605.93523 (78)
Clp0006I 723  Obj 942.0379
Clp0000I Optimal - objective value 942.0379
Clp0032I Optimal objective 942.0378988 - 723 iterations time 0.082, Presolve 0.01
Clp0000I Optimal - objective value 942.0379
NLP Heuristic: NLP0014I             3         OPT 1012.0345       61 5.025265
no solution.
Clp0000I Optimal - objective value 942.0379
Optimality Based BT: 3 improved bounds
Probing: Couenne: new cutoff value 1.0215549882e+03 (134.521 seconds)
2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 34 added rows had average density of 2
Cbc0013I At root node, 34 cuts changed objective from 942.0379 to 1012.0346 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 321 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (210.21 seconds)
Couenne: new cutoff value 1.0120345952e+03 (270.404 seconds)
Optimality Based BT: 9 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 412 iterations and 2 nodes (244.91 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1155
Linearization cuts added in total:           1155  (separation time: 0.027572s)
Total solve time:                         244.992s (244.992s in branch-and-bound)
Lower bound:                              1012.03
Upper bound:                              1012.03  (gap: 0.00%)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_xtROMT/model.nl 3275 [var]  125 [int] 1025 [con]   56 [aux]   1155 [root]     1155 [tot] 0.027572 [sep]  244.992 [time]  244.996 [bb]         1.012035e+03 [lower]         1.012035e+03 [upper]       2 [nodes]
Performance of                           FBBT:	   0.206846s,       20 runs. fix:        0.7 shrnk:   0.791711 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    72.2041s,        2 runs. fix:          1 shrnk:    10.0339 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
