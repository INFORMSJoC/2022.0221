solving instance mcf nodes c100_400_30_F_T_10 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 19.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2964.6286       96 1268.6038
Loaded instance "/tmp/jl_rgiKPM/model.nl"
Constraints:         4100
Variables:          13100 (500 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 3889 (-722) rows, 12159 (-1072) columns and 46076 (-4741) elements
Clp0006I 0  Obj 64.889958 Primal inf 2395.3692 (68) Dual inf 1.3667466e+12 (272)
Clp0006I 152  Obj 136.16527 Primal inf 1988.2347 (59) Dual inf 4.5563763e+11 (140)
Clp0006I 304  Obj 339.46559 Primal inf 1631.7499 (59) Dual inf 281107.72 (478)
Clp0006I 457  Obj 991.01316 Primal inf 1163.5543 (51) Dual inf 700963.79 (1111)
Clp0006I 611  Obj 1305.872 Primal inf 974.99996 (41) Dual inf 496276.41 (1092)
Clp0006I 763  Obj 1646.8581 Primal inf 836.05282 (42) Dual inf 593444.8 (1577)
Clp0006I 915  Obj 2379.8823 Primal inf 636.49996 (38) Dual inf 715359.5 (1487)
Clp0006I 1067  Obj 2925.2313 Primal inf 525.58998 (39) Dual inf 850578.74 (1328)
Clp0006I 1219  Obj 3454.8737 Primal inf 356.37124 (32) Dual inf 453857.57 (1614)
Clp0006I 1371  Obj 3838.0876 Primal inf 229.49683 (23) Dual inf 922403.54 (1588)
Clp0006I 1523  Obj 4142.7132 Primal inf 162.72338 (21) Dual inf 692183.55 (2197)
Clp0006I 1675  Obj 4384.5669 Primal inf 98.649445 (21) Dual inf 1988105.7 (2405)
Clp0006I 1827  Obj 4641.5286 Primal inf 16.624989 (11) Dual inf 665642.99 (2202)
Clp0006I 1979  Obj 4588.1507 Dual inf 10669.079 (2466)
Clp0006I 2131  Obj 4488.7654 Dual inf 26050.53 (2983)
Clp0006I 2283  Obj 4413.6871 Dual inf 19760.714 (2732)
Clp0006I 2435  Obj 4255.6034 Dual inf 15481.143 (2932)
Clp0006I 2587  Obj 4079.0194 Dual inf 32654.697 (2926)
Clp0006I 2739  Obj 3976.5873 Dual inf 12817.664 (2583)
Clp0006I 2891  Obj 3845.5018 Dual inf 33662.834 (3901)
Clp0006I 3043  Obj 3682.8688 Dual inf 10316.262 (3023)
Clp0006I 3195  Obj 3547.1874 Dual inf 26096.229 (3625)
Clp0006I 3347  Obj 3497.8112 Dual inf 27668.779 (3048)
Clp0006I 3499  Obj 3445.9859 Dual inf 7773.3801 (2777)
Clp0006I 3651  Obj 3372.6508 Dual inf 10534.997 (3021)
Clp0006I 3803  Obj 3342.4615 Dual inf 4967.2274 (2487)
Clp0006I 3955  Obj 3235.1118 Dual inf 12903.2 (3014)
Clp0006I 4107  Obj 3141.6084 Dual inf 17093.495 (3227)
Clp0006I 4259  Obj 3063.034 Dual inf 4231.7335 (2501)
Clp0006I 4411  Obj 3014.2316 Dual inf 9493.3455 (2912)
Clp0006I 4563  Obj 2968.0119 Dual inf 2122.988 (1903)
Clp0006I 4715  Obj 2917.1595 Dual inf 3735.6445 (2159)
Clp0006I 4867  Obj 2853.4143 Dual inf 1794.3424 (2121)
Clp0006I 5019  Obj 2809.5135 Dual inf 1296.236 (1692)
Clp0006I 5171  Obj 2773.2086 Dual inf 2503.3595 (2229)
Clp0006I 5323  Obj 2748.255 Dual inf 2560.5353 (2545)
Clp0006I 5475  Obj 2716.9749 Dual inf 731.37582 (1380)
Clp0006I 5627  Obj 2704.3342 Dual inf 2476.0241 (2445)
Clp0006I 5779  Obj 2698.0655 Dual inf 37.486373 (258)
Clp0006I 5931  Obj 2696.2335 Dual inf 0.011139015 (4)
Clp0006I 5935  Obj 2696.2335
Clp0000I Optimal - objective value 2696.2335
Clp0032I Optimal objective 2696.233459 - 5935 iterations time 1.572, Presolve 0.11
Clp0000I Optimal - objective value 2696.2335
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 2696.2335
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 2696.2335 to 2696.2335 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 0 column cuts (0 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 2696.2335), took 0 iterations and 0 nodes (2150.31 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4611
Linearization cuts added in total:           4611  (separation time: 0.288158s)
Total solve time:                         2151.89s (2151.89s in branch-and-bound)
Lower bound:                              2696.23
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_rgiKPM/model.nl 13100 [var]  500 [int] 4100 [con]  131 [aux]   4611 [root]     4611 [tot] 0.288158 [sep]  2151.89 [time]   2151.9 [bb]         2.696233e+03 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	   0.778634s,        4 runs. fix:       8.75 shrnk:    341.578 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1164.76s,        1 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
