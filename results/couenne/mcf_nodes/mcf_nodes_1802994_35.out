solving instance mcf nodes c100_400_30_F_L_10 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 16.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 930.64714       96 1343.192
Loaded instance "/tmp/jl_MOAkht/model.nl"
Constraints:         4100
Variables:          13100 (500 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 3881 (-726) rows, 12155 (-1076) columns and 46046 (-4758) elements
Clp0006I 0  Obj 58.019407 Primal inf 417.99994 (61) Dual inf 1.4206417e+12 (238)
Clp0006I 152  Obj 100.6121 Primal inf 381.99994 (55) Dual inf 4.4289103e+11 (173)
Clp0006I 304  Obj 218.10577 Primal inf 315.99995 (45) Dual inf 1153728.8 (432)
Clp0006I 456  Obj 349.45305 Primal inf 246.49996 (40) Dual inf 2444656.8 (1035)
Clp0006I 609  Obj 588.34668 Primal inf 174.74997 (31) Dual inf 2445785.2 (1421)
Clp0006I 761  Obj 963.82467 Primal inf 84.874975 (25) Dual inf 8881147.8 (1711)
Clp0006I 913  Obj 1105.5455 Primal inf 58.874985 (15) Dual inf 4057691 (1522)
Clp0006I 1065  Obj 1365.4712 Primal inf 18.592584 (10) Dual inf 2932970 (1516)
Clp0006I 1217  Obj 1506.6783 Primal inf 0.17939761 (1) Dual inf 4721870.8 (1723)
Clp0006I 1369  Obj 1362.288 Dual inf 14328.776 (2117)
Clp0006I 1521  Obj 1263.9413 Dual inf 15356.982 (2255)
Clp0006I 1673  Obj 1184.6039 Dual inf 21080.482 (2457)
Clp0006I 1825  Obj 1088.8278 Dual inf 4132.7259 (2027)
Clp0006I 1977  Obj 1026.2866 Dual inf 20976.302 (2836)
Clp0006I 2129  Obj 986.43054 Dual inf 7158.8101 (2152)
Clp0006I 2281  Obj 931.48403 Dual inf 1564.6163 (1464)
Clp0006I 2433  Obj 890.79564 Dual inf 1306.018 (1161)
Clp0006I 2585  Obj 860.35672 Dual inf 1178.4334 (1464)
Clp0006I 2737  Obj 844.31756 Dual inf 3633.2009 (1974)
Clp0006I 2889  Obj 828.27412 Dual inf 15063.787 (2595)
Clp0006I 3041  Obj 822.36441 Dual inf 199.047 (408)
Clp0006I 3193  Obj 820.39532 Dual inf 23.247875 (194)
Clp0006I 3252  Obj 820.24831
Clp0000I Optimal - objective value 820.24831
Clp0032I Optimal objective 820.2483133 - 3252 iterations time 0.882, Presolve 0.12
Clp0000I Optimal - objective value 820.24831
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 820.24831
Optimality Based BT: 4 improved bounds
Probing: 1 improved bounds
Cbc0013I At root node, 0 cuts changed objective from 820.24831 to 823.90881 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 823.90881), took 145 iterations and 0 nodes (2233.35 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4607
Linearization cuts added in total:           4607  (separation time: 0.308379s)
Total solve time:                         2234.23s (2234.23s in branch-and-bound)
Lower bound:                              823.909
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_MOAkht/model.nl 13100 [var]  500 [int] 4100 [con]  131 [aux]   4607 [root]     4607 [tot] 0.308379 [sep]  2234.23 [time]  2234.25 [bb]         8.239088e+02 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	   0.817451s,        4 runs. fix:       6.75 shrnk:    18.1143 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1074.89s,        1 runs. fix:          3 shrnk:    3.13864 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
