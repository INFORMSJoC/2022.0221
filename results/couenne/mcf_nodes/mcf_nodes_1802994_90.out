solving instance mcf nodes c25_100_30_F_L_5 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4863.6438      110 44.283638
NLP0014I             2      INFEAS 12.711995       79 30.010273
Loaded instance "/tmp/jl_DbV05i/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           81 (0 integer)

Coin0506I Presolve 997 (-204) rows, 3042 (-314) columns and 11553 (-1246) elements
Clp0006I 0  Obj 397.41831 Primal inf 320.81621 (67)
Clp0006I 94  Obj 1124.2825 Primal inf 546.50082 (80)
Clp0006I 188  Obj 2165.6597 Primal inf 299.91145 (67)
Clp0006I 282  Obj 2614.415 Primal inf 122.48067 (48)
Clp0006I 376  Obj 2814.1585 Primal inf 52.258686 (21)
Clp0006I 433  Obj 2834.0156
Clp0000I Optimal - objective value 2834.0156
Clp0032I Optimal objective 2834.015605 - 433 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 2834.0156
NLP Heuristic: NLP0014I             3         OPT 4863.6438       89 8.960296
no solution.
Clp0000I Optimal - objective value 2834.0156
Optimality Based BT: 11 improved bounds
Probing: Couenne: new cutoff value 4.9379922304e+03 (117.393 seconds)
2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 3 added rows had average density of 2
Cbc0013I At root node, 3 cuts changed objective from 2834.0156 to 2994.1773 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 3 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (168.19 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.9342525841e+03 (654.774 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.8911921510e+03 (1287.78 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible 3059.615 (1285.70 seconds)
Cbc0010I After 200 nodes, 95 on tree, 1e+50 best solution, best possible 3059.615 (1294.21 seconds)
Cbc0010I After 300 nodes, 141 on tree, 1e+50 best solution, best possible 3059.615 (1300.98 seconds)
Cbc0010I After 400 nodes, 187 on tree, 1e+50 best solution, best possible 3059.615 (1308.21 seconds)
Cbc0010I After 500 nodes, 233 on tree, 1e+50 best solution, best possible 3059.615 (1313.65 seconds)
Cbc0010I After 600 nodes, 279 on tree, 1e+50 best solution, best possible 3059.615 (1319.63 seconds)
Cbc0010I After 700 nodes, 326 on tree, 1e+50 best solution, best possible 3059.615 (1325.56 seconds)
Cbc0010I After 800 nodes, 374 on tree, 1e+50 best solution, best possible 3059.615 (1332.40 seconds)
Cbc0010I After 900 nodes, 423 on tree, 1e+50 best solution, best possible 3059.615 (1342.13 seconds)
Cbc0010I After 1000 nodes, 468 on tree, 1e+50 best solution, best possible 3059.615 (1348.59 seconds)
Cbc0010I After 1100 nodes, 517 on tree, 1e+50 best solution, best possible 3059.615 (1357.29 seconds)
Cbc0010I After 1200 nodes, 552 on tree, 1e+50 best solution, best possible 3059.615 (1364.87 seconds)
Couenne: new cutoff value 4.8460859341e+03 (1447.37 seconds)
Cbc0004I Integer solution of 4846.0859 found after 56667 iterations and 1234 nodes (1367.63 seconds)
Cbc0010I After 1300 nodes, 415 on tree, 4846.0859 best solution, best possible 3066.0843 (1986.87 seconds)
Cbc0010I After 1400 nodes, 455 on tree, 4846.0859 best solution, best possible 3066.0843 (1994.62 seconds)
Cbc0010I After 1500 nodes, 502 on tree, 4846.0859 best solution, best possible 3066.0843 (2002.20 seconds)
Cbc0010I After 1600 nodes, 547 on tree, 4846.0859 best solution, best possible 3066.0843 (2008.69 seconds)
Cbc0010I After 1700 nodes, 595 on tree, 4846.0859 best solution, best possible 3066.0843 (2013.50 seconds)
Cbc0010I After 1800 nodes, 643 on tree, 4846.0859 best solution, best possible 3066.0843 (2018.59 seconds)
Cbc0010I After 1900 nodes, 690 on tree, 4846.0859 best solution, best possible 3066.0843 (2025.54 seconds)
Cbc0010I After 2000 nodes, 735 on tree, 4846.0859 best solution, best possible 3066.0843 (2034.95 seconds)
Cbc0010I After 2100 nodes, 782 on tree, 4846.0859 best solution, best possible 3066.0843 (2043.30 seconds)
Cbc0010I After 2200 nodes, 831 on tree, 4846.0859 best solution, best possible 3066.0843 (2050.24 seconds)
Cbc0010I After 2300 nodes, 881 on tree, 4846.0859 best solution, best possible 3066.0843 (2057.83 seconds)
Cbc0010I After 2400 nodes, 908 on tree, 4846.0859 best solution, best possible 3066.0843 (2065.03 seconds)
Couenne: new cutoff value 4.7906738447e+03 (2148.51 seconds)
Couenne: new cutoff value 4.7906738323e+03 (2148.72 seconds)
Cbc0004I Integer solution of 4790.6738 found after 119306 iterations and 2448 nodes (2068.99 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2500 nodes, 402 on tree, 4790.6738 best solution, best possible 3086.3869 (3112.68 seconds)
Cbc0010I After 2600 nodes, 441 on tree, 4790.6738 best solution, best possible 3086.3869 (3150.73 seconds)
Cbc0010I After 2700 nodes, 488 on tree, 4790.6738 best solution, best possible 3088.3581 (3488.13 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 4790.6738 (best possible 3088.3581), took 130848 iterations and 2744 nodes (3520.78 seconds)
Cbc0035I Maximum depth 616, 407 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.026368s)
Total solve time:                          3520.9s (3520.9s in branch-and-bound)
Lower bound:                              3088.36
Upper bound:                              4790.67  (gap: 55.10%)
Branch-and-bound nodes:                      2744
Stats: /tmp/jl_DbV05i/model.nl 3275 [var]  125 [int] 1025 [con]   81 [aux]   1201 [root]     1201 [tot] 0.026368 [sep]   3520.9 [time]   3520.9 [bb]         3.088358e+03 [lower]         4.790674e+03 [upper]    2744 [nodes]
Performance of                           FBBT:	    30.8626s,     3079 runs. fix:   0.185674 shrnk:   0.248132 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    309.027s,       10 runs. fix:   0.512091 shrnk:    2.75606 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
