solving instance mcf nodes c25_100_30_V_T_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10304.111       59 16.471925
NLP0014I             2      INFEAS 43.175377      151 43.00552
Loaded instance "/tmp/jl_vk2p5D/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:           56 (0 integer)

Coin0506I Presolve 973 (-153) rows, 3037 (-294) columns and 11517 (-1131) elements
Clp0006I 0  Obj 241.38019 Primal inf 1929.9999 (63)
Clp0006I 94  Obj 241.38019 Primal inf 44717.973 (124)
Clp0006I 170  Obj 241.38019 Primal inf 90582.767 (144)
Clp0006I 251  Obj 3066.1044 Primal inf 13335.666 (124)
Clp0006I 345  Obj 6206.7662 Primal inf 7623.1555 (108)
Clp0006I 439  Obj 8302.0171 Primal inf 16090.138 (130)
Clp0006I 533  Obj 9414.8636 Primal inf 3905.6595 (81)
Clp0006I 627  Obj 9928.127 Primal inf 293.86783 (24)
Clp0006I 656  Obj 9960.1598
Clp0000I Optimal - objective value 9960.1598
Clp0032I Optimal objective 9960.159763 - 656 iterations time 0.072, Presolve 0.01
Clp0000I Optimal - objective value 9960.1598
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 9960.1598
Optimality Based BT: 2 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 32 added rows had average density of 2
Cbc0013I At root node, 32 cuts changed objective from 9960.1598 to 10304.111 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 460 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (190.67 seconds)
Optimality Based BT: 3 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0311410485e+04 (1161.24 seconds)
Couenne: new cutoff value 1.0304111208e+04 (1376 seconds)
Couenne: new cutoff value 1.0304111208e+04 (1382.24 seconds)
Cbc0001I Search completed - best objective 1e+50, took 895 iterations and 14 nodes (1317.22 seconds)
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1126
Linearization cuts added in total:           1126  (separation time: 0.025179s)
Total solve time:                          1317.3s (1317.3s in branch-and-bound)
Lower bound:                              10304.1
Upper bound:                              10304.1  (gap: 0.00%)
Branch-and-bound nodes:                        14
Stats: /tmp/jl_vk2p5D/model.nl 3275 [var]  125 [int] 1025 [con]   56 [aux]   1126 [root]     1126 [tot] 0.025179 [sep]   1317.3 [time]   1317.3 [bb]         1.030411e+04 [lower]         1.030411e+04 [upper]      14 [nodes]
Performance of                           FBBT:	   0.440711s,       43 runs. fix:     0.3875 shrnk:   0.191392 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	    306.469s,        5 runs. fix:        1.4 shrnk:    0.63764 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
