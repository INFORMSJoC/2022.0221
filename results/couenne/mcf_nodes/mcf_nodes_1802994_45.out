solving instance mcf nodes c100_400_30_F_T_10 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 14.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1        TIME 0      128 1793.5795
Loaded instance "/tmp/jl_c2rzue/model.nl"
Constraints:         4100
Variables:          13100 (500 integer)
Auxiliaries:          231 (0 integer)

Coin0506I Presolve 3968 (-833) rows, 12149 (-1182) columns and 46214 (-4983) elements
Clp0006I 0  Obj 1512.7009 Primal inf 1712.9124 (68) Dual inf 2.2699788e+12 (273)
Clp0006I 154  Obj 1512.7009 Primal inf 1643.9416 (67) Dual inf 1.8554095e+12 (331)
Clp0006I 308  Obj 2714.9902 Primal inf 1372.3174 (60) Dual inf 2.9600484e+12 (548)
Clp0006I 463  Obj 5309.6716 Primal inf 1089.9957 (62) Dual inf 3.2476539e+12 (603)
Clp0006I 618  Obj 7525.3919 Primal inf 661.89096 (55) Dual inf 3.7054477e+12 (832)
Clp0006I 772  Obj 8597.1478 Primal inf 593.18352 (59) Dual inf 1.1901295e+13 (1880)
Clp0006I 926  Obj 9486.0268 Primal inf 514.6197 (53) Dual inf 5.0176274e+12 (1189)
Clp0006I 1080  Obj 10255.993 Primal inf 391.54898 (50) Dual inf 7.9195654e+12 (1650)
Clp0006I 1234  Obj 10783.518 Primal inf 356.21501 (40) Dual inf 7.012311e+12 (1685)
Clp0006I 1388  Obj 12187.045 Primal inf 233.85978 (36) Dual inf 6.5487193e+12 (2025)
Clp0006I 1542  Obj 12712.904 Primal inf 185.16649 (34) Dual inf 1.0403087e+13 (2170)
Clp0006I 1696  Obj 12975.307 Primal inf 161.64626 (35) Dual inf 2.0387221e+13 (2718)
Clp0006I 1850  Obj 13398.051 Primal inf 105.7789 (31) Dual inf 2.5568217e+13 (3017)
Clp0006I 2004  Obj 13625.952 Primal inf 83.722229 (22) Dual inf 4.1191879e+13 (3418)
Clp0006I 2158  Obj 13890.18 Primal inf 39.076034 (13) Dual inf 1.1838356e+13 (2910)
Clp0006I 2312  Obj 14019.566 Primal inf 18.413646 (7) Dual inf 1.6758562e+13 (3022)
Clp0006I 2466  Obj 14230.61 Primal inf 8.8437859 (2) Dual inf 1.2732878e+13 (3166)
Clp0006I 2620  Obj 14276.743 Dual inf 129697.03 (3334)
Clp0006I 2774  Obj 13717.873 Dual inf 64488.327 (3133)
Clp0006I 2928  Obj 13296.341 Dual inf 156580.73 (3098)
Clp0006I 3082  Obj 12815.299 Dual inf 79261.453 (3327)
Clp0006I 3236  Obj 12629 Dual inf 26739.223 (2758)
Clp0006I 3390  Obj 12590.687 Dual inf 42780.172 (2805)
Clp0006I 3544  Obj 12212.265 Dual inf 78430.3 (2660)
Clp0006I 3698  Obj 12096.333 Dual inf 89564.519 (3102)
Clp0006I 3852  Obj 11824.221 Dual inf 10346.466 (2163)
Clp0006I 4006  Obj 11678.689 Dual inf 11757.347 (2152)
Clp0006I 4160  Obj 11365.924 Dual inf 18530.779 (2254)
Clp0006I 4314  Obj 10961.253 Dual inf 13664.353 (2139)
Clp0006I 4468  Obj 10757.774 Dual inf 4616.9215 (1614)
Clp0006I 4622  Obj 10400.049 Dual inf 3954.1415 (1573)
Clp0006I 4776  Obj 10315.571 Dual inf 9289.2872 (1844)
Clp0006I 4930  Obj 9945.6378 Dual inf 2114.0699 (1168)
Clp0006I 5084  Obj 9724.4988 Dual inf 816.81541 (776)
Clp0006I 5238  Obj 9491.0044 Dual inf 438.91864 (581)
Clp0006I 5392  Obj 9439.4868 Dual inf 214.81756 (379)
Clp0006I 5547  Obj 9423.9656 Dual inf 23.237485 (139)
Clp0006I 5668  Obj 9412.1715
Clp0000I Optimal - objective value 9412.1715
Clp0000I Optimal - objective value 9412.1715
Clp0032I Optimal objective 9412.171513 - 5668 iterations time 1.362, Presolve 0.11
Clp0000I Optimal - objective value 9412.1715
NLP Heuristic: NLP0014I             2        TIME 0      161 1795.5419
no solution.
Clp0000I Optimal - objective value 9412.1715
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 9412.1715), took 0 iterations and 0 nodes (1795.61 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4801
Linearization cuts added in total:           4801  (separation time: 0.302884s)
Total solve time:                         1796.98s (1796.98s in branch-and-bound)
Lower bound:                              9412.17
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_c2rzue/model.nl 13100 [var]  500 [int] 4100 [con]  231 [aux]   4801 [root]     4801 [tot] 0.302884 [sep]  1796.98 [time]  1796.99 [bb]         9.412172e+03 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	   0.613331s,        3 runs. fix:    11.6667 shrnk:    458.097 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
