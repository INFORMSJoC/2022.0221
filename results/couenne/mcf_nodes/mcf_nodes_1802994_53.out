solving instance mcf nodes c100_400_30_V_T_10 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reading problem: 0.0 seconds
Reformulating problem: 13.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9291.6062       84 1153.5023
NLP0014I             2      INFEAS 26.917326      134 2107.0174
Loaded instance "/tmp/jl_EUIhBt/model.nl"
Constraints:         4100
Variables:          13100 (500 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 3867 (-740) rows, 12127 (-1104) columns and 46048 (-4757) elements
Clp0006I 0  Obj 1073.1167 Primal inf 1516.8968 (65) Dual inf 1.3545169e+12 (261)
Clp0006I 152  Obj 1332.6199 Primal inf 1421.9999 (61) Dual inf 3.6914758e+11 (115)
Clp0006I 304  Obj 1795.6436 Primal inf 1191.7499 (53) Dual inf 1.6683827e+12 (488)
Clp0006I 457  Obj 2754.2459 Primal inf 932.74995 (49) Dual inf 2.6123671e+12 (707)
Clp0006I 609  Obj 3950.7116 Primal inf 731.74996 (39) Dual inf 2.9085106e+12 (1311)
Clp0006I 761  Obj 5636.8388 Primal inf 554.87497 (33) Dual inf 3.0806063e+12 (933)
Clp0006I 915  Obj 7870.5871 Primal inf 348.87498 (23) Dual inf 3.1402528e+12 (1079)
Clp0006I 1067  Obj 9449.4032 Primal inf 184.74998 (16) Dual inf 4.5507658e+12 (1360)
Clp0006I 1219  Obj 10771.749 Primal inf 104.27746 (15) Dual inf 6.7100436e+12 (1916)
Clp0006I 1371  Obj 11582.321 Primal inf 61.499989 (11) Dual inf 6.164868e+12 (2344)
Clp0006I 1523  Obj 12363.6 Dual inf 12223.635 (1920)
Clp0006I 1675  Obj 12092.583 Dual inf 24227.804 (1843)
Clp0006I 1827  Obj 11377.303 Dual inf 26586.681 (2113)
Clp0006I 1979  Obj 10617.967 Dual inf 23890.428 (1897)
Clp0006I 2131  Obj 10385.554 Dual inf 37034.05 (2350)
Clp0006I 2283  Obj 10123.092 Dual inf 31354.98 (1928)
Clp0006I 2435  Obj 9837.4873 Dual inf 14801.657 (1999)
Clp0006I 2587  Obj 9648.1533 Dual inf 28241.864 (2806)
Clp0006I 2739  Obj 9482.696 Dual inf 8945.151 (2081)
Clp0006I 2891  Obj 9399.0623 Dual inf 4416.503 (1421)
Clp0006I 3043  Obj 9264.69 Dual inf 6803.6183 (1621)
Clp0006I 3195  Obj 9126.617 Dual inf 4614.2352 (1432)
Clp0006I 3347  Obj 9023.6462 Dual inf 2400.5133 (1320)
Clp0006I 3499  Obj 8900.5882 Dual inf 336.03972 (428)
Clp0006I 3651  Obj 8812.6466 Dual inf 413.1289 (419)
Clp0006I 3791  Obj 8798.3505
Clp0000I Optimal - objective value 8798.3505
Clp0032I Optimal objective 8798.350469 - 3791 iterations time 0.862, Presolve 0.10
Clp0000I Optimal - objective value 8798.3505
NLP Heuristic: NLP0014I             3        TIME 0       38 154.91955
no solution.
Clp0000I Optimal - objective value 8798.3505
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 8798.3505), took 0 iterations and 0 nodes (154.99 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4607
Linearization cuts added in total:           4607  (separation time: 0.294344s)
Total solve time:                         155.851s (155.851s in branch-and-bound)
Lower bound:                              8798.35
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_EUIhBt/model.nl 13100 [var]  500 [int] 4100 [con]  131 [aux]   4607 [root]     4607 [tot] 0.294344 [sep]  155.851 [time]  155.863 [bb]         8.798350e+03 [lower]         1.000000e+50 [upper]       0 [nodes]
Performance of                           FBBT:	   0.618496s,        3 runs. fix:    14.6667 shrnk:    367.436 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
