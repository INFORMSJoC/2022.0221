solving instance mcf nodes c25_100_30_V_T_5 3 6 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 20548.253      109 38.517747
NLP0014I             2      INFEAS 58.491537      105 35.642476
Loaded instance "/tmp/jl_wdOI9Y/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 1047 (-204) rows, 3061 (-345) columns and 11666 (-1257) elements
Clp0006I 0  Obj 563.13769 Primal inf 1929.9999 (63)
Clp0006I 95  Obj 563.13769 Primal inf 2219.4648 (114)
Clp0006I 190  Obj 563.13769 Primal inf 5115.1479 (135)
Clp0006I 285  Obj 563.13769 Primal inf 73309.711 (173)
Clp0006I 365  Obj 563.13769 Primal inf 41445.354 (189)
Clp0006I 443  Obj 563.13769 Primal inf 200565.81 (187)
Clp0006I 527  Obj 7694.9729 Primal inf 19264.412 (232)
Clp0006I 622  Obj 9107.6072 Primal inf 9534.7425 (152)
Clp0006I 717  Obj 10034.432 Primal inf 3107.6596 (122)
Clp0006I 782  Obj 10379.661
Clp0000I Optimal - objective value 10379.661
Clp0032I Optimal objective 10379.66139 - 782 iterations time 0.102, Presolve 0.01
Clp0000I Optimal - objective value 10379.661
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10379.661
Optimality Based BT: 5 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 37 added rows had average density of 2
Cbc0013I At root node, 37 cuts changed objective from 10379.661 to 11487.757 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 323 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (161.62 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 2.0798459778e+04 (955.661 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 11563.411 (1362.25 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 11563.411 (1374.94 seconds)
Cbc0010I After 300 nodes, 135 on tree, 1e+50 best solution, best possible 11563.411 (1388.07 seconds)
Cbc0010I After 400 nodes, 185 on tree, 1e+50 best solution, best possible 11563.411 (1397.03 seconds)
Cbc0010I After 500 nodes, 235 on tree, 1e+50 best solution, best possible 11563.411 (1403.99 seconds)
Cbc0010I After 600 nodes, 285 on tree, 1e+50 best solution, best possible 11563.411 (1411.06 seconds)
Cbc0010I After 700 nodes, 332 on tree, 1e+50 best solution, best possible 11563.411 (1418.58 seconds)
Cbc0010I After 800 nodes, 366 on tree, 1e+50 best solution, best possible 11563.411 (1426.09 seconds)
Cbc0010I After 900 nodes, 412 on tree, 1e+50 best solution, best possible 11563.411 (1434.40 seconds)
Cbc0010I After 1000 nodes, 462 on tree, 1e+50 best solution, best possible 11563.411 (1443.07 seconds)
Cbc0010I After 1100 nodes, 510 on tree, 1e+50 best solution, best possible 11563.411 (1451.53 seconds)
Couenne: new cutoff value 2.0715927347e+04 (1536.26 seconds)
Couenne: new cutoff value 2.0715927223e+04 (1536.48 seconds)
Cbc0004I Integer solution of 20715.927 found after 40959 iterations and 1156 nodes (1456.44 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1200 nodes, 430 on tree, 20715.927 best solution, best possible 11572.446 (2296.21 seconds)
Cbc0010I After 1300 nodes, 477 on tree, 20715.927 best solution, best possible 11572.446 (2308.20 seconds)
Cbc0010I After 1400 nodes, 519 on tree, 20715.927 best solution, best possible 11579.453 (2319.29 seconds)
Cbc0010I After 1500 nodes, 565 on tree, 20715.927 best solution, best possible 11579.453 (2332.28 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1600 nodes, 606 on tree, 20715.927 best solution, best possible 11580.28 (2532.32 seconds)
Cbc0010I After 1700 nodes, 649 on tree, 20715.927 best solution, best possible 11580.28 (2545.03 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1800 nodes, 695 on tree, 20715.927 best solution, best possible 11585.762 (2928.51 seconds)
Cbc0010I After 1900 nodes, 734 on tree, 20715.927 best solution, best possible 11585.762 (2941.29 seconds)
Cbc0010I After 2000 nodes, 778 on tree, 20715.927 best solution, best possible 11586.465 (3000.39 seconds)
Cbc0010I After 2100 nodes, 814 on tree, 20715.927 best solution, best possible 11593.719 (3287.14 seconds)
Cbc0010I After 2200 nodes, 863 on tree, 20715.927 best solution, best possible 11593.719 (3297.34 seconds)
Cbc0010I After 2300 nodes, 904 on tree, 20715.927 best solution, best possible 11596.54 (3433.42 seconds)
Cbc0010I After 2400 nodes, 950 on tree, 20715.927 best solution, best possible 11596.54 (3445.58 seconds)
Cbc0010I After 2500 nodes, 996 on tree, 20715.927 best solution, best possible 11601.655 (3455.80 seconds)
Cbc0010I After 2600 nodes, 1036 on tree, 20715.927 best solution, best possible 11601.655 (3473.96 seconds)
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 20715.927 (best possible 11601.655), took 212297 iterations and 2658 nodes (3522.38 seconds)
Cbc0035I Maximum depth 577, 577 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1251
Linearization cuts added in total:           1251  (separation time: 0.027538s)
Total solve time:                         3523.54s (3523.54s in branch-and-bound)
Lower bound:                              11601.7
Upper bound:                              20715.9  (gap: 78.55%)
Branch-and-bound nodes:                      2658
Stats: /tmp/jl_wdOI9Y/model.nl 3275 [var]  125 [int] 1025 [con]  131 [aux]   1251 [root]     1251 [tot] 0.027538 [sep]  3523.54 [time]  3523.55 [bb]         1.160166e+04 [lower]         2.071593e+04 [upper]    2658 [nodes]
Performance of                           FBBT:	    44.0174s,     4225 runs. fix:  0.0723619 shrnk:  0.0671032 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	    487.378s,       12 runs. fix:   0.719178 shrnk:    1.80507 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
