solving instance mcf nodes c36 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 8.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 59427.78      114 79.328996
NLP0014I             2         OPT 64594.631      219 163.25152
Couenne: new cutoff value 6.4594631221e+04 (285.824 seconds)
Loaded instance "/tmp/jl_BGjxMp/model.nl"
Constraints:         1320
Variables:           9720 (250 integer)
Auxiliaries:           81 (0 integer)

Coin0506I Presolve 1181 (-280) rows, 9251 (-550) columns and 37101 (-790) elements
Clp0030I 0 infeas 67900, obj 0 - mu 1000000, its 0, 0 interior
Clp0030I 1 infeas 22854.874, obj 0 - mu 1000000, its 2, 2158 interior
Clp0030I 2 infeas 5790.811, obj 0 - mu 1000000, its 23, 2924 interior
Clp0030I 3 infeas 4366.6064, obj 0 - mu 1000000, its 23, 3017 interior
Clp0030I 4 infeas 3930.6468, obj 0 - mu 1000000, its 23, 3048 interior
Clp0030I 5 infeas 3668.4925, obj 0 - mu 1000000, its 23, 3100 interior
Clp0030I 6 infeas 3524.5544, obj 0 - mu 1000000, its 23, 3120 interior
Clp0030I 7 infeas 3298.2945, obj 0 - mu 333300, its 23, 3245 interior
Clp0030I 8 infeas 3131.7985, obj 0 - mu 333300, its 23, 3292 interior
Clp0030I 9 infeas 3039.266, obj 0 - mu 333300, its 23, 3314 interior
Clp0030I 10 infeas 2994.8081, obj 0 - mu 333300, its 23, 3340 interior
Clp0030I 11 infeas 2930.2541, obj 0 - mu 333300, its 23, 3357 interior
Clp0030I 12 infeas 2881.2272, obj 0 - mu 333300, its 23, 3392 interior
Clp0030I 13 infeas 2670.9976, obj 0 - mu 111088.89, its 23, 3606 interior
Clp0030I 14 infeas 2583.2569, obj 0 - mu 111088.89, its 23, 3698 interior
Clp0030I 15 infeas 2494.7662, obj 0 - mu 111088.89, its 23, 3738 interior
Clp0030I 16 infeas 1037.5589, obj 23135.254 - mu 1e-30, its 23, 2369 interior
Clp0006I 0  Obj 23135.254 Primal inf 945.71633 (809) Dual inf 5.7785459e+13 (3608)
Clp0006I 169  Obj 34910.018 Primal inf 589.69857 (742) Dual inf 6.8118495e+13 (3447)
Clp0006I 361  Obj 34910.018 Primal inf 548.60731 (680) Dual inf 6.3539505e+13 (3520)
Clp0006I 551  Obj 34910.018 Primal inf 506.84272 (610) Dual inf 5.7070419e+13 (3265)
Clp0006I 727  Obj 34910.018 Primal inf 457.88473 (551) Dual inf 5.3382133e+13 (2880)
Clp0006I 923  Obj 34910.018 Primal inf 409.17676 (484) Dual inf 4.7890312e+13 (2335)
Clp0006I 1119  Obj 34910.018 Primal inf 363.16247 (427) Dual inf 4.1244897e+13 (2002)
Clp0006I 1298  Obj 34910.018 Primal inf 322.85777 (356) Dual inf 3.4894824e+13 (1602)
Clp0006I 1494  Obj 34910.018 Primal inf 297.62323 (295) Dual inf 2.8109171e+13 (1335)
Clp0006I 1676  Obj 34910.018 Primal inf 281.47583 (223) Dual inf 2.1787961e+13 (1201)
Clp0006I 1872  Obj 34910.018 Primal inf 246.61534 (163) Dual inf 1.6782253e+13 (883)
Clp0006I 2068  Obj 34910.018 Primal inf 231.21782 (96) Dual inf 9.444894e+12 (673)
Clp0006I 2250  Obj 34910.018 Primal inf 215.21973 (33) Dual inf 3.6857089e+12 (492)
Clp0029I End of values pass after 2368 iterations
Clp0006I 2368  Obj 33703.959 Primal inf 133.91423 (4) Dual inf 1.2742786e+12 (2141)
Clp0006I 2466  Obj 41986.971 Dual inf 29969.593 (2641)
Clp0006I 2559  Obj 41902.379 Dual inf 35954.501 (2778)
Clp0006I 2645  Obj 41833.881 Dual inf 22580.066 (2772)
Clp0006I 2728  Obj 40913.793 Dual inf 66517.646 (3389)
Clp0006I 2816  Obj 39842.235 Dual inf 24692.487 (2867)
Clp0006I 2902  Obj 39497.033 Dual inf 30550.485 (2981)
Clp0006I 2986  Obj 38541.28 Primal inf 3.7575904e-08 (4) Dual inf 7.5229553e+11 (4257)
Clp0006I 3073  Obj 37766.188 Dual inf 7414.7157 (1917)
Clp0006I 3160  Obj 37713.004 Dual inf 7398.4552 (1895)
Clp0006I 3254  Obj 37713.004 Dual inf 9340.2803 (2084)
Clp0006I 3336  Obj 37713.004 Dual inf 8751.5492 (1993)
Clp0006I 3419  Obj 37713.004 Dual inf 8809.2156 (2024)
Clp0006I 3500  Obj 37198.054 Dual inf 3053.6331 (1209)
Clp0006I 3581  Obj 36721.834 Dual inf 22697.358 (2731)
Clp0006I 3661  Obj 36174.183 Dual inf 4795.3614 (1498)
Clp0006I 3746  Obj 35923.084 Dual inf 2663.3779 (1258)
Clp0006I 3827  Obj 35923.084 Dual inf 2381.0713 (1153)
Clp0006I 3911  Obj 35749.334 Dual inf 9777.0863 (1988)
Clp0006I 3989  Obj 35727.334 Dual inf 1576.3268 (986)
Clp0006I 4072  Obj 35727.334 Dual inf 584.77841 (516)
Clp0006I 4150  Obj 35685.373 Dual inf 2390.5979 (1112)
Clp0006I 4233  Obj 35685.373 Dual inf 871.94051 (708)
Clp0006I 4311  Obj 35339.883 Dual inf 9916.367 (2144)
Clp0006I 4392  Obj 35218.398 Dual inf 75.948913 (206)
Clp0006I 4471  Obj 35164.643 Dual inf 74.590331 (213)
Clp0006I 4554  Obj 35117.656 Dual inf 11.018401 (81)
Clp0006I 4586  Obj 35095.452
Clp0000I Optimal - objective value 35095.452
Clp0000I Optimal - objective value 35095.453
Clp0032I Optimal objective 35095.4527 - 4586 iterations time 1.622, Presolve 0.06, Idiot 0.13
Clp0000I Optimal - objective value 35095.453
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 35095.453
Optimality Based BT: 22 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 35095.453 to 35468.349 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2074.37 seconds)
Optimality Based BT: 13 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -1.7976931e+308), took 346 iterations and 1 nodes (3312.74 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1461
Linearization cuts added in total:           1461  (separation time: 0.09854s)
Total solve time:                         3314.38s (3314.38s in branch-and-bound)
Lower bound:                                 -inf
Upper bound:                              64594.6  (gap: --)
Branch-and-bound nodes:                         1
Stats: /tmp/jl_BGjxMp/model.nl 9720 [var]  250 [int] 1320 [con]   81 [aux]   1461 [root]     1461 [tot] 0.09854 [sep]  3314.38 [time]  3314.39 [bb]       -1.797693e+308 [lower]         6.459463e+04 [upper]       1 [nodes]
Performance of                           FBBT:	   0.219922s,        6 runs. fix:          0 shrnk:    78.5641 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1582.74s,        2 runs. fix:        0.5 shrnk:    5.58327 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
