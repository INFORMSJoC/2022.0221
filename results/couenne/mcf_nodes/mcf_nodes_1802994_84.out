solving instance mcf nodes c25_100_30_F_L_5 3 6 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2166.1052       84 30.167923
NLP0014I             2      INFEAS 13.566878       99 44.089137
Loaded instance "/tmp/jl_0I7t5K/model.nl"
Constraints:         1025
Variables:           3275 (125 integer)
Auxiliaries:          131 (0 integer)

Coin0506I Presolve 1076 (-204) rows, 3092 (-314) columns and 11736 (-1246) elements
Clp0006I 0  Obj 70.04321 Primal inf 412.88189 (69)
Clp0006I 96  Obj 70.04321 Primal inf 1350.4028 (138)
Clp0006I 192  Obj 70.04321 Primal inf 1710.7769 (148)
Clp0006I 282  Obj 70.04321 Primal inf 6003.8854 (174)
Clp0006I 354  Obj 70.04321 Primal inf 32218.449 (189)
Clp0006I 427  Obj 636.55104 Primal inf 4229.0198 (183)
Clp0006I 523  Obj 775.24875 Primal inf 2083.8408 (150)
Clp0006I 619  Obj 881.18872 Primal inf 1330.8856 (138)
Clp0006I 715  Obj 954.30578 Primal inf 320.40954 (70)
Clp0006I 787  Obj 969.63826
Clp0000I Optimal - objective value 969.63826
Clp0032I Optimal objective 969.6382583 - 787 iterations time 0.112, Presolve 0.01
Clp0000I Optimal - objective value 969.63826
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 969.63826
Optimality Based BT: 11 improved bounds
Probing: 2 improved bounds
NLP Heuristic: no solution.
Cbc0031I 37 added rows had average density of 2
Cbc0013I At root node, 37 cuts changed objective from 969.63826 to 1117.6027 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 233 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (203.66 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 2.1710422315e+03 (1247.74 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible 1117.6209 (1598.65 seconds)
Cbc0010I After 200 nodes, 91 on tree, 1e+50 best solution, best possible 1117.6209 (1611.48 seconds)
Cbc0010I After 300 nodes, 136 on tree, 1e+50 best solution, best possible 1117.6209 (1625.99 seconds)
Cbc0010I After 400 nodes, 184 on tree, 1e+50 best solution, best possible 1117.6209 (1637.68 seconds)
Cbc0010I After 500 nodes, 232 on tree, 1e+50 best solution, best possible 1117.6209 (1645.98 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 1117.6209 (1653.91 seconds)
Cbc0010I After 700 nodes, 329 on tree, 1e+50 best solution, best possible 1117.6209 (1662.13 seconds)
Cbc0010I After 800 nodes, 378 on tree, 1e+50 best solution, best possible 1117.6209 (1671.15 seconds)
Cbc0010I After 900 nodes, 428 on tree, 1e+50 best solution, best possible 1117.6209 (1679.68 seconds)
Cbc0010I After 1000 nodes, 478 on tree, 1e+50 best solution, best possible 1117.6209 (1688.73 seconds)
Couenne: new cutoff value 2.1669853106e+03 (1771.87 seconds)
Cbc0004I Integer solution of 2166.9853 found after 29802 iterations and 1033 nodes (1691.51 seconds)
Cbc0010I After 1100 nodes, 468 on tree, 2166.9853 best solution, best possible 1121.5505 (1978.75 seconds)
Cbc0010I After 1200 nodes, 511 on tree, 2166.9853 best solution, best possible 1121.5505 (1991.33 seconds)
Cbc0010I After 1300 nodes, 549 on tree, 2166.9853 best solution, best possible 1121.5505 (2005.89 seconds)
Cbc0010I After 1400 nodes, 588 on tree, 2166.9853 best solution, best possible 1121.5505 (2019.96 seconds)
Cbc0010I After 1500 nodes, 635 on tree, 2166.9853 best solution, best possible 1121.5505 (2031.02 seconds)
Cbc0010I After 1600 nodes, 685 on tree, 2166.9853 best solution, best possible 1121.5505 (2041.55 seconds)
Cbc0010I After 1700 nodes, 735 on tree, 2166.9853 best solution, best possible 1121.5505 (2051.75 seconds)
Cbc0010I After 1800 nodes, 758 on tree, 2166.9853 best solution, best possible 1121.5505 (2061.49 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1900 nodes, 796 on tree, 2166.9853 best solution, best possible 1121.5828 (3072.75 seconds)
Cbc0010I After 2000 nodes, 840 on tree, 2166.9853 best solution, best possible 1121.5828 (3085.80 seconds)
Cbc0010I After 2100 nodes, 878 on tree, 2166.9853 best solution, best possible 1121.5846 (3099.00 seconds)
Cbc0010I After 2200 nodes, 922 on tree, 2166.9853 best solution, best possible 1121.5846 (3110.08 seconds)
Cbc0010I After 2300 nodes, 960 on tree, 2166.9853 best solution, best possible 1121.5925 (3124.63 seconds)
Cbc0010I After 2400 nodes, 1009 on tree, 2166.9853 best solution, best possible 1121.593 (3134.78 seconds)
Cbc0010I After 2500 nodes, 1051 on tree, 2166.9853 best solution, best possible 1121.593 (3148.60 seconds)
Cbc0010I After 2600 nodes, 1092 on tree, 2166.9853 best solution, best possible 1123.3124 (3175.47 seconds)
Cbc0010I After 2700 nodes, 1133 on tree, 2166.9853 best solution, best possible 1123.3124 (3188.57 seconds)
Cbc0010I After 2800 nodes, 1173 on tree, 2166.9853 best solution, best possible 1123.4677 (3200.77 seconds)
Cbc0010I After 2900 nodes, 1216 on tree, 2166.9853 best solution, best possible 1123.4677 (3212.50 seconds)
Cbc0010I After 3000 nodes, 1254 on tree, 2166.9853 best solution, best possible 1124.1595 (3224.53 seconds)
Cbc0010I After 3100 nodes, 1298 on tree, 2166.9853 best solution, best possible 1124.1595 (3236.09 seconds)
Cbc0010I After 3200 nodes, 1336 on tree, 2166.9853 best solution, best possible 1124.1755 (3382.06 seconds)
Cbc0010I After 3300 nodes, 1381 on tree, 2166.9853 best solution, best possible 1124.1755 (3393.44 seconds)
Cbc0010I After 3400 nodes, 1421 on tree, 2166.9853 best solution, best possible 1124.1755 (3408.55 seconds)
Cbc0010I After 3500 nodes, 1465 on tree, 2166.9853 best solution, best possible 1125.5975 (3419.25 seconds)
Cbc0010I After 3600 nodes, 1505 on tree, 2166.9853 best solution, best possible 1125.5975 (3432.99 seconds)
Cbc0010I After 3700 nodes, 1547 on tree, 2166.9853 best solution, best possible 1125.7626 (3443.76 seconds)
Cbc0010I After 3800 nodes, 1587 on tree, 2166.9853 best solution, best possible 1125.7626 (3456.93 seconds)
Cbc0010I After 3900 nodes, 1629 on tree, 2166.9853 best solution, best possible 1126.8013 (3482.40 seconds)
Cbc0010I After 4000 nodes, 1667 on tree, 2166.9853 best solution, best possible 1126.8013 (3495.04 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 2166.9853 (best possible 1126.8013), took 303470 iterations and 4021 nodes (3525.04 seconds)
Cbc0035I Maximum depth 516, 889 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1280
Linearization cuts added in total:           1280  (separation time: 0.027433s)
Total solve time:                         3525.62s (3525.62s in branch-and-bound)
Lower bound:                               1126.8
Upper bound:                              2166.99  (gap: 92.23%)
Branch-and-bound nodes:                      4021
Stats: /tmp/jl_0I7t5K/model.nl 3275 [var]  125 [int] 1025 [con]  131 [aux]   1280 [root]     1280 [tot] 0.027433 [sep]  3525.62 [time]  3525.62 [bb]         1.126801e+03 [lower]         2.166985e+03 [upper]    4021 [nodes]
Performance of                           FBBT:	    75.5545s,     6381 runs. fix:  0.0695309 shrnk:  0.0930553 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    378.509s,        9 runs. fix:      0.375 shrnk:    3.50601 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1332
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
