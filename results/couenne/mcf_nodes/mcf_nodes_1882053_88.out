solving instance mcf nodes c25_100_10_V_L_5 3 6 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 853.59178      265 13.197713
NLP0014I             1      FAILED 853.59178      265 13.247484   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_uO5zvB/model.nl"
Constraints:          525
Variables:           1275 (125 integer)
Auxiliaries:           61 (0 integer)

Coin0506I Presolve 496 (-205) rows, 1046 (-290) columns and 4077 (-724) elements
Clp0006I 0  Obj 144.27775 Primal inf 73.440297 (24)
Clp0006I 84  Obj 523.73164 Primal inf 45.806061 (19)
Clp0006I 127  Obj 627.34447
Clp0000I Optimal - objective value 627.34447
Clp0032I Optimal objective 627.3444658 - 127 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 627.34447
NLP Heuristic: NLP0014I             3      FAILED 823.57808     3000 180.07308
no solution.
Clp0000I Optimal - objective value 627.34447
Optimality Based BT: 110 improved bounds
Probing: Couenne: new cutoff value 8.7033627789e+02 (211.696 seconds)
3 improved bounds
NLP Heuristic: no solution.
Cbc0031I 4 added rows had average density of 2
Cbc0013I At root node, 4 cuts changed objective from 627.34447 to 713.24049 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 4 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (305.23 seconds)
Optimality Based BT: 2 improved bounds
Couenne: new cutoff value 8.5291690900e+02 (337.803 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 10 improved bounds
Cbc0010I After 100 nodes, 39 on tree, 1e+50 best solution, best possible 725.11482 (1365.30 seconds)
Cbc0010I After 200 nodes, 79 on tree, 1e+50 best solution, best possible 725.11482 (1366.88 seconds)
Cbc0010I After 300 nodes, 120 on tree, 1e+50 best solution, best possible 725.11482 (1368.96 seconds)
Cbc0010I After 400 nodes, 159 on tree, 1e+50 best solution, best possible 725.11482 (1371.34 seconds)
Cbc0010I After 500 nodes, 202 on tree, 1e+50 best solution, best possible 725.11482 (1374.36 seconds)
Cbc0010I After 600 nodes, 242 on tree, 1e+50 best solution, best possible 725.11482 (1377.11 seconds)
Cbc0010I After 700 nodes, 287 on tree, 1e+50 best solution, best possible 725.11482 (1379.64 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 8.5263096347e+02 (1938.53 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 304 on tree, 1e+50 best solution, best possible 728.53464 (1966.23 seconds)
Cbc0010I After 900 nodes, 343 on tree, 1e+50 best solution, best possible 728.53464 (1968.64 seconds)
Cbc0010I After 1000 nodes, 389 on tree, 1e+50 best solution, best possible 728.53464 (1970.60 seconds)
Cbc0010I After 1100 nodes, 436 on tree, 1e+50 best solution, best possible 728.53464 (1972.63 seconds)
Cbc0010I After 1200 nodes, 480 on tree, 1e+50 best solution, best possible 728.53464 (1974.79 seconds)
Cbc0010I After 1300 nodes, 525 on tree, 1e+50 best solution, best possible 728.53464 (1976.93 seconds)
Cbc0010I After 1400 nodes, 570 on tree, 1e+50 best solution, best possible 728.53464 (1979.84 seconds)
Cbc0004I Integer solution of 848.5834 found after 46925 iterations and 1489 nodes (1981.59 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 1500 nodes, 527 on tree, 848.5834 best solution, best possible 733.31524 (2115.26 seconds)
Cbc0010I After 1600 nodes, 563 on tree, 848.5834 best solution, best possible 733.31524 (2117.58 seconds)
Cbc0010I After 1700 nodes, 607 on tree, 848.5834 best solution, best possible 733.31524 (2119.41 seconds)
Cbc0010I After 1800 nodes, 638 on tree, 848.5834 best solution, best possible 733.31524 (2121.95 seconds)
Cbc0010I After 1900 nodes, 679 on tree, 848.5834 best solution, best possible 733.31524 (2125.05 seconds)
Cbc0010I After 2000 nodes, 723 on tree, 848.5834 best solution, best possible 733.31524 (2128.86 seconds)
Cbc0010I After 2100 nodes, 765 on tree, 848.5834 best solution, best possible 733.31524 (2132.39 seconds)
Cbc0010I After 2200 nodes, 789 on tree, 848.5834 best solution, best possible 733.31524 (2135.17 seconds)
Cbc0010I After 2300 nodes, 813 on tree, 848.5834 best solution, best possible 736.15124 (2303.06 seconds)
Cbc0010I After 2400 nodes, 837 on tree, 848.5834 best solution, best possible 736.15124 (2305.30 seconds)
Cbc0010I After 2500 nodes, 879 on tree, 848.5834 best solution, best possible 736.15124 (2307.11 seconds)
Cbc0010I After 2600 nodes, 913 on tree, 848.5834 best solution, best possible 736.15124 (2309.07 seconds)
Cbc0010I After 2700 nodes, 949 on tree, 848.5834 best solution, best possible 736.15124 (2311.20 seconds)
Cbc0010I After 2800 nodes, 973 on tree, 848.5834 best solution, best possible 736.15124 (2313.18 seconds)
Cbc0010I After 2900 nodes, 1000 on tree, 848.5834 best solution, best possible 736.15124 (2315.41 seconds)
Cbc0010I After 3000 nodes, 1030 on tree, 848.5834 best solution, best possible 736.15124 (2318.00 seconds)
Cbc0010I After 3100 nodes, 1038 on tree, 848.5834 best solution, best possible 740.0941 (2320.51 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3200 nodes, 1068 on tree, 848.5834 best solution, best possible 741.37717 (2420.51 seconds)
Cbc0010I After 3300 nodes, 1098 on tree, 848.5834 best solution, best possible 744.87471 (3013.75 seconds)
Cbc0010I After 3400 nodes, 1137 on tree, 848.5834 best solution, best possible 744.87471 (3015.53 seconds)
Cbc0010I After 3500 nodes, 1179 on tree, 848.5834 best solution, best possible 744.87471 (3017.41 seconds)
Cbc0010I After 3600 nodes, 1220 on tree, 848.5834 best solution, best possible 744.87471 (3020.84 seconds)
Cbc0010I After 3700 nodes, 1267 on tree, 848.5834 best solution, best possible 744.87471 (3024.79 seconds)
Cbc0010I After 3800 nodes, 1314 on tree, 848.5834 best solution, best possible 744.87471 (3027.97 seconds)
Cbc0010I After 3900 nodes, 1357 on tree, 848.5834 best solution, best possible 744.87471 (3030.54 seconds)
Cbc0010I After 4000 nodes, 1378 on tree, 848.5834 best solution, best possible 745.36686 (3033.05 seconds)
Cbc0010I After 4100 nodes, 1409 on tree, 848.5834 best solution, best possible 750.14746 (3091.59 seconds)
Cbc0010I After 4200 nodes, 1446 on tree, 848.5834 best solution, best possible 750.14746 (3093.79 seconds)
Cbc0010I After 4300 nodes, 1492 on tree, 848.5834 best solution, best possible 750.14746 (3095.51 seconds)
Cbc0010I After 4400 nodes, 1532 on tree, 848.5834 best solution, best possible 750.14746 (3097.59 seconds)
Cbc0010I After 4500 nodes, 1568 on tree, 848.5834 best solution, best possible 750.14746 (3100.38 seconds)
Cbc0010I After 4600 nodes, 1605 on tree, 848.5834 best solution, best possible 751.39286 (3102.90 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 4700 nodes, 1637 on tree, 848.5834 best solution, best possible 751.39286 (3209.80 seconds)
Cbc0010I After 4800 nodes, 1677 on tree, 848.5834 best solution, best possible 751.39286 (3211.62 seconds)
Cbc0010I After 4900 nodes, 1714 on tree, 848.5834 best solution, best possible 751.39286 (3213.59 seconds)
Cbc0010I After 5000 nodes, 1751 on tree, 848.5834 best solution, best possible 751.39286 (3216.16 seconds)
Cbc0010I After 5100 nodes, 1797 on tree, 848.5834 best solution, best possible 751.39286 (3219.37 seconds)
Cbc0010I After 5200 nodes, 1842 on tree, 848.5834 best solution, best possible 751.39286 (3222.45 seconds)
Cbc0010I After 5300 nodes, 1869 on tree, 848.5834 best solution, best possible 751.39286 (3224.69 seconds)
Cbc0010I After 5400 nodes, 1875 on tree, 848.5834 best solution, best possible 751.39286 (3226.90 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 848.5834 (best possible 751.39286), took 208642 iterations and 5459 nodes (3575.19 seconds)
Cbc0035I Maximum depth 411, 54 variables fixed on reduced cost
Clp1001I Initial range of elements is 0.03125 to 50000000
Clp1003I Final range of elements is 0.01 to 100
Clp0022I Absolute values of scaled rhs range from 8.111948e-13 to 5, minimum gap 1e+100
Clp0020I Absolute values of scaled objective range from 197.12507 to 197.12507
Clp0021I Absolute values of scaled bounds range from 3e-18 to 1.2682304e+09, minimum gap 0.01
Clp0006I 0  Obj 646.80112 Primal inf 1.3094461e-05 (4)
Clp0016I New infeasibility weight of 5e+10
Clp0006I 0  Obj 646.80112 Primal inf 1.3094461e-05 (4) Dual inf 0.00076283945 (1)
Clp0001I Primal infeasible - objective value 646.80112

 	"Not finished"

Linearization cuts added at root node:        701
Linearization cuts added in total:            701  (separation time: 0.00669s)
Total solve time:                         3575.23s (3575.23s in branch-and-bound)
Lower bound:                              751.393
Upper bound:                              848.583  (gap: 12.92%)
Branch-and-bound nodes:                      5459
Stats: /tmp/jl_uO5zvB/model.nl 1275 [var]  125 [int]  525 [con]   61 [aux]    701 [root]      701 [tot] 0.00669 [sep]  3575.23 [time]  3575.23 [bb]         7.513929e+02 [lower]         8.485834e+02 [upper]    5459 [nodes]
Performance of                           FBBT:	    13.3739s,     5385 runs. fix:  0.0330935 shrnk:   0.532387 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    121.242s,       14 runs. fix:   0.548446 shrnk:    7.40341 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcf(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; restrict_to_commodities::Int64, solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1371
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcf_nodes/script.jl:18
