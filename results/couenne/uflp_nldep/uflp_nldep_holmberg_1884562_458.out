solving instance uflp nldep holmberg 46 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 3311.025      410 123.57991
NLP0014I             1      FAILED 3311.025      410 127.85792   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_ygcdXa/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 2380 (-61) rows, 2190 (-159) columns and 8790 (-2349) elements
Clp0006I 0  Obj 0.00012021 Primal inf 114.07098 (70)
Clp0006I 122  Obj 1470.781 Primal inf 65.002393 (54)
Clp0006I 163  Obj 1802.4303
Clp0000I Optimal - objective value 1802.4303
Clp0032I Optimal objective 1802.430293 - 163 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 1802.4303
NLP Heuristic: NLP0014I             3      FAILED 3292.044      301 216.6842
no solution.
Clp0000I Optimal - objective value 1802.4303
Optimality Based BT: Couenne: new cutoff value 1.3819000116e+04 (469.921 seconds)
Couenne: new cutoff value 1.1936000116e+04 (469.932 seconds)
Couenne: new cutoff value 1.0843000116e+04 (470.105 seconds)
Couenne: new cutoff value 9.8090001157e+03 (470.222 seconds)
0 improved bounds
Probing: Couenne: new cutoff value 3.4591634354e+03 (470.407 seconds)
0 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 1802.4303 to 1802.4303 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (297.28 seconds)
Optimality Based BT: 25 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 3.4570020498e+03 (689.436 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 2286.9679 (2771.32 seconds)
Cbc0010I After 200 nodes, 93 on tree, 1e+50 best solution, best possible 2286.9679 (2774.31 seconds)
Cbc0010I After 300 nodes, 143 on tree, 1e+50 best solution, best possible 2286.9679 (2777.95 seconds)
Cbc0010I After 400 nodes, 193 on tree, 1e+50 best solution, best possible 2286.9679 (2780.66 seconds)
Cbc0010I After 500 nodes, 243 on tree, 1e+50 best solution, best possible 2286.9679 (2783.09 seconds)
Cbc0010I After 600 nodes, 292 on tree, 1e+50 best solution, best possible 2286.9679 (2785.83 seconds)
Cbc0010I After 700 nodes, 342 on tree, 1e+50 best solution, best possible 2286.9679 (2788.60 seconds)
Cbc0010I After 800 nodes, 383 on tree, 1e+50 best solution, best possible 2286.9679 (2791.13 seconds)
Cbc0010I After 900 nodes, 384 on tree, 1e+50 best solution, best possible 2286.9679 (2793.31 seconds)
Couenne: new cutoff value 3.2974158072e+03 (3047.18 seconds)
Cbc0010I After 1000 nodes, 413 on tree, 1e+50 best solution, best possible 2306.1355 (2796.33 seconds)
Cbc0010I After 1100 nodes, 460 on tree, 1e+50 best solution, best possible 2306.1355 (2799.53 seconds)
Cbc0010I After 1200 nodes, 508 on tree, 1e+50 best solution, best possible 2306.1355 (2803.44 seconds)
Cbc0010I After 1300 nodes, 557 on tree, 1e+50 best solution, best possible 2306.1355 (2806.16 seconds)
Cbc0010I After 1400 nodes, 605 on tree, 1e+50 best solution, best possible 2306.1355 (2808.93 seconds)
Cbc0010I After 1500 nodes, 650 on tree, 1e+50 best solution, best possible 2306.1355 (2811.97 seconds)
Cbc0010I After 1600 nodes, 697 on tree, 1e+50 best solution, best possible 2306.1355 (2815.08 seconds)
Cbc0010I After 1700 nodes, 730 on tree, 1e+50 best solution, best possible 2306.1355 (2817.82 seconds)
Cbc0010I After 1800 nodes, 731 on tree, 1e+50 best solution, best possible 2306.1355 (2820.44 seconds)
Couenne: new cutoff value 3.2789841326e+03 (3074.13 seconds)
Cbc0010I After 1900 nodes, 765 on tree, 1e+50 best solution, best possible 2325.4231 (2823.61 seconds)
Cbc0010I After 2000 nodes, 811 on tree, 1e+50 best solution, best possible 2325.4231 (2827.12 seconds)
Cbc0010I After 2100 nodes, 856 on tree, 1e+50 best solution, best possible 2325.4231 (2831.16 seconds)
Cbc0010I After 2200 nodes, 904 on tree, 1e+50 best solution, best possible 2325.4231 (2833.72 seconds)
Cbc0010I After 2300 nodes, 944 on tree, 1e+50 best solution, best possible 2325.4231 (2836.52 seconds)
Cbc0010I After 2400 nodes, 980 on tree, 1e+50 best solution, best possible 2325.4231 (2839.24 seconds)
Cbc0010I After 2500 nodes, 1012 on tree, 1e+50 best solution, best possible 2325.4231 (2842.16 seconds)
Cbc0010I After 2600 nodes, 1053 on tree, 1e+50 best solution, best possible 2325.4231 (2845.05 seconds)
Cbc0010I After 2700 nodes, 1085 on tree, 1e+50 best solution, best possible 2325.4231 (2848.14 seconds)
Cbc0010I After 2800 nodes, 1086 on tree, 1e+50 best solution, best possible 2325.4231 (2851.22 seconds)
Couenne: new cutoff value 3.2776721569e+03 (3105.31 seconds)
Cbc0010I After 2900 nodes, 1117 on tree, 1e+50 best solution, best possible 2331.7295 (2854.58 seconds)
Cbc0010I After 3000 nodes, 1163 on tree, 1e+50 best solution, best possible 2331.7295 (2858.01 seconds)
Cbc0010I After 3100 nodes, 1205 on tree, 1e+50 best solution, best possible 2331.7295 (2862.40 seconds)
Cbc0010I After 3200 nodes, 1252 on tree, 1e+50 best solution, best possible 2331.7295 (2865.30 seconds)
Cbc0010I After 3300 nodes, 1292 on tree, 1e+50 best solution, best possible 2331.7295 (2868.31 seconds)
Cbc0010I After 3400 nodes, 1325 on tree, 1e+50 best solution, best possible 2331.7295 (2871.06 seconds)
Cbc0010I After 3500 nodes, 1356 on tree, 1e+50 best solution, best possible 2331.7295 (2874.02 seconds)
Cbc0010I After 3600 nodes, 1397 on tree, 1e+50 best solution, best possible 2331.7295 (2877.03 seconds)
Cbc0010I After 3700 nodes, 1420 on tree, 1e+50 best solution, best possible 2331.7295 (2880.13 seconds)
Couenne: new cutoff value 3.2771700519e+03 (3136 seconds)
Cbc0010I After 3800 nodes, 1427 on tree, 1e+50 best solution, best possible 2351.017 (2883.77 seconds)
Cbc0010I After 3900 nodes, 1475 on tree, 1e+50 best solution, best possible 2351.017 (2887.03 seconds)
Cbc0010I After 4000 nodes, 1521 on tree, 1e+50 best solution, best possible 2351.017 (2890.60 seconds)
Cbc0010I After 4100 nodes, 1571 on tree, 1e+50 best solution, best possible 2351.017 (2893.83 seconds)
Cbc0010I After 4200 nodes, 1617 on tree, 1e+50 best solution, best possible 2351.017 (2896.55 seconds)
Cbc0010I After 4300 nodes, 1662 on tree, 1e+50 best solution, best possible 2351.017 (2899.46 seconds)
Cbc0010I After 4400 nodes, 1710 on tree, 1e+50 best solution, best possible 2351.017 (2902.53 seconds)
Cbc0010I After 4500 nodes, 1754 on tree, 1e+50 best solution, best possible 2351.017 (2905.46 seconds)
Cbc0010I After 4600 nodes, 1803 on tree, 1e+50 best solution, best possible 2351.017 (2908.54 seconds)
Cbc0010I After 4700 nodes, 1820 on tree, 1e+50 best solution, best possible 2351.017 (2911.24 seconds)
Couenne: new cutoff value 3.2591961935e+03 (3166.93 seconds)
Cbc0010I After 4800 nodes, 1821 on tree, 1e+50 best solution, best possible 2357.6238 (2914.28 seconds)
Cbc0010I After 4900 nodes, 1869 on tree, 1e+50 best solution, best possible 2357.6238 (2917.36 seconds)
Cbc0010I After 5000 nodes, 1913 on tree, 1e+50 best solution, best possible 2357.6238 (2921.11 seconds)
Cbc0010I After 5100 nodes, 1953 on tree, 1e+50 best solution, best possible 2357.6238 (2924.71 seconds)
Cbc0010I After 5200 nodes, 1995 on tree, 1e+50 best solution, best possible 2357.6238 (2927.50 seconds)
Cbc0010I After 5300 nodes, 2031 on tree, 1e+50 best solution, best possible 2357.6238 (2930.33 seconds)
Cbc0010I After 5400 nodes, 2064 on tree, 1e+50 best solution, best possible 2357.6238 (2933.22 seconds)
Cbc0010I After 5500 nodes, 2097 on tree, 1e+50 best solution, best possible 2357.6238 (2936.14 seconds)
Cbc0010I After 5600 nodes, 2137 on tree, 1e+50 best solution, best possible 2357.6238 (2939.10 seconds)
Cbc0010I After 5700 nodes, 2138 on tree, 1e+50 best solution, best possible 2357.6238 (2942.10 seconds)
Couenne: new cutoff value 3.2591289692e+03 (3196.67 seconds)
Cbc0010I After 5800 nodes, 2163 on tree, 1e+50 best solution, best possible 2383.0539 (3225.11 seconds)
Cbc0010I After 5900 nodes, 2210 on tree, 1e+50 best solution, best possible 2383.0539 (3228.63 seconds)
Cbc0010I After 6000 nodes, 2251 on tree, 1e+50 best solution, best possible 2383.2178 (3231.90 seconds)
Cbc0010I After 6100 nodes, 2297 on tree, 1e+50 best solution, best possible 2383.2178 (3235.42 seconds)
Cbc0010I After 6200 nodes, 2337 on tree, 1e+50 best solution, best possible 2402.3415 (3238.75 seconds)
Cbc0010I After 6300 nodes, 2383 on tree, 1e+50 best solution, best possible 2402.3415 (3242.24 seconds)
Cbc0010I After 6400 nodes, 2423 on tree, 1e+50 best solution, best possible 2408.6479 (3245.62 seconds)
Cbc0010I After 6500 nodes, 2469 on tree, 1e+50 best solution, best possible 2408.6479 (3249.23 seconds)
Cbc0010I After 6600 nodes, 2509 on tree, 1e+50 best solution, best possible 2416.6488 (3252.71 seconds)
Cbc0010I After 6700 nodes, 2555 on tree, 1e+50 best solution, best possible 2416.6488 (3256.27 seconds)
Cbc0010I After 6800 nodes, 2593 on tree, 1e+50 best solution, best possible 2416.6488 (3260.26 seconds)
Cbc0010I After 6900 nodes, 2639 on tree, 1e+50 best solution, best possible 2416.6488 (3263.07 seconds)
Cbc0010I After 7000 nodes, 2669 on tree, 1e+50 best solution, best possible 2416.6488 (3265.48 seconds)
Cbc0010I After 7100 nodes, 2704 on tree, 1e+50 best solution, best possible 2416.6488 (3268.50 seconds)
Cbc0010I After 7200 nodes, 2736 on tree, 1e+50 best solution, best possible 2416.6488 (3271.19 seconds)
Cbc0010I After 7300 nodes, 2777 on tree, 1e+50 best solution, best possible 2416.6488 (3274.04 seconds)
Cbc0010I After 7400 nodes, 2798 on tree, 1e+50 best solution, best possible 2416.6488 (3277.16 seconds)
Couenne: new cutoff value 3.2587783327e+03 (3532.58 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 2416.6488), took 37798 iterations and 7477 nodes (3363.83 seconds)
Cbc0035I Maximum depth 529, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2441
Linearization cuts added in total:           2441  (separation time: 0.013447s)
Total solve time:                         3363.86s (3363.86s in branch-and-bound)
Lower bound:                              2416.65
Upper bound:                              3258.78  (gap: 34.83%)
Branch-and-bound nodes:                      7477
Stats: /tmp/jl_ygcdXa/model.nl 2190 [var]   30 [int] 2230 [con]  159 [aux]   2441 [root]     2441 [tot] 0.013447 [sep]  3363.86 [time]  3363.86 [bb]         2.416649e+03 [lower]         3.258778e+03 [upper]    7477 [nodes]
Performance of                           FBBT:	     30.114s,     9282 runs. fix: 0.000211513 shrnk: 0.00820862 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.26261s,        5 runs. fix:          0 shrnk:     18.664 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p46
