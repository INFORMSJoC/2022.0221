solving instance uflp nldep orlib 124 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 656592.03      253 13.143633
NLP0014I             2         OPT 656974.39       66 2.89666
Couenne: new cutoff value 6.5697369532e+05 (18.0744 seconds)
Loaded instance "/tmp/jl_nisYhV/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          443 (0 integer)

Coin0506I Presolve 3042 (-197) rows, 2748 (-345) columns and 13530 (-591) elements
Clp0006I 0  Obj -105785.57 Primal inf 26605.004 (199)
Clp0006I 135  Obj 125040.42 Primal inf 1069.5591 (95)
Clp0006I 270  Obj 480520.23 Primal inf 173.50978 (56)
Clp0006I 363  Obj 622631.8
Clp0000I Optimal - objective value 622631.8
Clp0032I Optimal objective 622631.7987 - 363 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 622631.8
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 622631.8
Optimality Based BT: 127 improved bounds
Probing: 41 improved bounds
NLP Heuristic: no solution.
Cbc0031I 46 added rows had average density of 2
Cbc0013I At root node, 46 cuts changed objective from 622631.8 to 651718.25 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 72 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (18.49 seconds)
Optimality Based BT: 152 improved bounds
Optimality Based BT: 151 improved bounds
Optimality Based BT: 152 improved bounds
Optimality Based BT: 136 improved bounds
Optimality Based BT: 164 improved bounds
Cbc0010I After 100 nodes, 36 on tree, 1e+50 best solution, best possible 656450.11 (133.75 seconds)
Cbc0010I After 200 nodes, 72 on tree, 1e+50 best solution, best possible 656450.11 (138.91 seconds)
Cbc0010I After 300 nodes, 113 on tree, 1e+50 best solution, best possible 656450.11 (144.00 seconds)
Cbc0010I After 400 nodes, 161 on tree, 1e+50 best solution, best possible 656450.11 (149.35 seconds)
Couenne: new cutoff value 6.5659289824e+05 (172.278 seconds)
Cbc0010I After 500 nodes, 204 on tree, 1e+50 best solution, best possible 656485.12 (154.51 seconds)
Couenne: new cutoff value 6.5659289354e+05 (174.083 seconds)
Cbc0004I Integer solution of 656592.89 found after 4605 iterations and 536 nodes (155.96 seconds)
Cbc0001I Search completed - best objective 656592.8946647305, took 4669 iterations and 540 nodes (157.32 seconds)
Cbc0035I Maximum depth 246, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3239
Linearization cuts added in total:           3239  (separation time: 0.024717s)
Total solve time:                         157.357s (157.357s in branch-and-bound)
Lower bound:                               656593
Upper bound:                               656593  (gap: 0.00%)
Branch-and-bound nodes:                       540
Stats: /tmp/jl_nisYhV/model.nl 2650 [var]   50 [int] 2650 [con]  443 [aux]   3239 [root]     3239 [tot] 0.024717 [sep]  157.357 [time]  157.362 [bb]         6.565929e+05 [lower]         6.565929e+05 [upper]     540 [nodes]
Performance of                           FBBT:	    2.54291s,      505 runs. fix:          0 shrnk:    52.1807 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    23.2244s,        6 runs. fix:          2 shrnk:    614.773 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap124.txt
