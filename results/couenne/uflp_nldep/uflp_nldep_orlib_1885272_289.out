solving instance uflp nldep orlib 114 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.2936868750e+06 (1.71284 seconds)
1.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 626078.52       44 1.835286
NLP0014I             2         OPT 626260.65       57 2.520614
Couenne: new cutoff value 6.2625989780e+05 (6.14485 seconds)
Loaded instance "/tmp/jl_joe7Pl/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 2835 (-12) rows, 2688 (-111) columns and 13018 (-172) elements
Clp0006I 0  Obj 0 Primal inf 4101.0568 (50)
Clp0006I 131  Obj 621952.59 Primal inf 587.02869 (97)
Clp0006I 238  Obj 624072.3
Clp0000I Optimal - objective value 624072.3
Clp0032I Optimal objective 624072.2996 - 238 iterations time 0.052, Presolve 0.04
Clp0000I Optimal - objective value 624072.3
NLP Heuristic: NLP0014I             3         OPT 626078.51       52 2.591221
no solution.
Clp0000I Optimal - objective value 624072.3
Optimality Based BT: 103 improved bounds
Probing: Couenne: new cutoff value 6.2607939264e+05 (10.9769 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 29 added rows had average density of 2
Cbc0013I At root node, 29 cuts changed objective from 624072.3 to 626079.39 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 278 row cuts average 2.0 elements, 8 column cuts (8 active)
Cbc0004I Integer solution of 626079.39 found after 265 iterations and 0 nodes (14.14 seconds)
Cbc0001I Search completed - best objective 626079.392638459, took 265 iterations and 0 nodes (14.15 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2847
Linearization cuts added in total:           2847  (separation time: 0.021148s)
Total solve time:                         14.2057s (14.2057s in branch-and-bound)
Lower bound:                               626079
Upper bound:                               626079  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_joe7Pl/model.nl 2650 [var]   50 [int] 2650 [con]  149 [aux]   2847 [root]     2847 [tot] 0.021148 [sep]  14.2057 [time]  14.2092 [bb]         6.260794e+05 [lower]         6.260794e+05 [upper]       0 [nodes]
Performance of                           FBBT:	   0.047892s,       10 runs. fix:          0 shrnk:    74.8555 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.05802s,        1 runs. fix:          0 shrnk:     374.02 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap114.txt
