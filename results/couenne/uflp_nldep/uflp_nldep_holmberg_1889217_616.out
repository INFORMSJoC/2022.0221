solving instance uflp nldep holmberg 62 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10380.722       37 323.6921
Couenne: new cutoff value 1.0380714439e+04 (333.296 seconds)
Loaded instance "/tmp/jl_mKde4I/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          439 (0 integer)

Coin0506I Presolve 6529 (-92) rows, 6179 (-350) columns and 30717 (-442) elements
Clp0006I 0  Obj 0 Primal inf 2912.3259 (290) Dual inf 9.1339748e+13 (6121)
Clp0029I End of values pass after 119 iterations
Clp0006I 119  Obj 0 Primal inf 594.01104 (200) Dual inf 9.0827334e+13 (6030)
Clp0006I 497  Obj 10312.707 Dual inf 4833.9274 (151)
Clp0006I 655  Obj 8284.5192
Clp0000I Optimal - objective value 8284.5192
Clp0032I Optimal objective 8284.519181 - 655 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 8284.5192
NLP Heuristic: NLP0014I             2         OPT 10380.722       12 1.24238
no solution.
Clp0000I Optimal - objective value 8284.5192
Optimality Based BT: 50 improved bounds
Probing: 29 improved bounds
NLP Heuristic: no solution.
Cbc0031I 16 added rows had average density of 2
Cbc0013I At root node, 16 cuts changed objective from 8284.5192 to 9200.7937 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 32 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (42.56 seconds)
Optimality Based BT: 56 improved bounds
Optimality Based BT: 66 improved bounds
Cbc0010I After 100 nodes, 31 on tree, 1e+50 best solution, best possible 10197.36 (225.78 seconds)
Cbc0010I After 200 nodes, 50 on tree, 1e+50 best solution, best possible 10200.536 (235.76 seconds)
Optimality Based BT: 125 improved bounds
Cbc0010I After 300 nodes, 75 on tree, 1e+50 best solution, best possible 10215.703 (331.90 seconds)
Cbc0010I After 400 nodes, 102 on tree, 1e+50 best solution, best possible 10221.194 (390.53 seconds)
Cbc0010I After 500 nodes, 128 on tree, 1e+50 best solution, best possible 10227.697 (408.63 seconds)
Cbc0010I After 600 nodes, 142 on tree, 1e+50 best solution, best possible 10227.697 (422.43 seconds)
Cbc0010I After 700 nodes, 161 on tree, 1e+50 best solution, best possible 10238.132 (438.80 seconds)
Cbc0010I After 800 nodes, 182 on tree, 1e+50 best solution, best possible 10243.01 (457.61 seconds)
Cbc0010I After 900 nodes, 201 on tree, 1e+50 best solution, best possible 10245.641 (476.39 seconds)
Cbc0010I After 1000 nodes, 227 on tree, 1e+50 best solution, best possible 10247.031 (495.17 seconds)
Cbc0010I After 1100 nodes, 247 on tree, 1e+50 best solution, best possible 10255.795 (512.89 seconds)
Cbc0010I After 1200 nodes, 268 on tree, 1e+50 best solution, best possible 10256.071 (530.37 seconds)
Cbc0010I After 1300 nodes, 288 on tree, 1e+50 best solution, best possible 10260.803 (546.80 seconds)
Cbc0010I After 1400 nodes, 307 on tree, 1e+50 best solution, best possible 10262.892 (565.72 seconds)
Cbc0010I After 1500 nodes, 329 on tree, 1e+50 best solution, best possible 10263.314 (586.62 seconds)
Cbc0010I After 1600 nodes, 347 on tree, 1e+50 best solution, best possible 10264.712 (605.69 seconds)
Cbc0010I After 1700 nodes, 369 on tree, 1e+50 best solution, best possible 10266.701 (672.60 seconds)
Cbc0010I After 1800 nodes, 383 on tree, 1e+50 best solution, best possible 10268.587 (691.12 seconds)
Cbc0010I After 1900 nodes, 402 on tree, 1e+50 best solution, best possible 10271.15 (709.88 seconds)
Cbc0010I After 2000 nodes, 421 on tree, 1e+50 best solution, best possible 10273.601 (729.51 seconds)
Cbc0010I After 2100 nodes, 435 on tree, 1e+50 best solution, best possible 10278.125 (747.68 seconds)
Cbc0010I After 2200 nodes, 450 on tree, 1e+50 best solution, best possible 10278.822 (768.74 seconds)
Cbc0010I After 2300 nodes, 465 on tree, 1e+50 best solution, best possible 10280.289 (787.77 seconds)
Cbc0010I After 2400 nodes, 481 on tree, 1e+50 best solution, best possible 10284.066 (806.98 seconds)
Cbc0010I After 2500 nodes, 496 on tree, 1e+50 best solution, best possible 10285.533 (826.48 seconds)
Cbc0010I After 2600 nodes, 510 on tree, 1e+50 best solution, best possible 10285.743 (845.84 seconds)
Cbc0010I After 2700 nodes, 525 on tree, 1e+50 best solution, best possible 10288.063 (865.69 seconds)
Cbc0010I After 2800 nodes, 537 on tree, 1e+50 best solution, best possible 10289.853 (884.52 seconds)
Cbc0010I After 2900 nodes, 551 on tree, 1e+50 best solution, best possible 10291.476 (905.29 seconds)
Cbc0010I After 3000 nodes, 563 on tree, 1e+50 best solution, best possible 10292.349 (924.50 seconds)
Cbc0010I After 3100 nodes, 578 on tree, 1e+50 best solution, best possible 10294.302 (943.82 seconds)
Cbc0010I After 3200 nodes, 591 on tree, 1e+50 best solution, best possible 10295.68 (962.82 seconds)
Cbc0010I After 3300 nodes, 599 on tree, 1e+50 best solution, best possible 10296.792 (981.19 seconds)
Cbc0010I After 3400 nodes, 606 on tree, 1e+50 best solution, best possible 10298.576 (1000.06 seconds)
Cbc0010I After 3500 nodes, 618 on tree, 1e+50 best solution, best possible 10300.623 (1021.79 seconds)
Cbc0010I After 3600 nodes, 629 on tree, 1e+50 best solution, best possible 10301.849 (1040.05 seconds)
Cbc0010I After 3700 nodes, 641 on tree, 1e+50 best solution, best possible 10302.62 (1059.34 seconds)
Cbc0010I After 3800 nodes, 652 on tree, 1e+50 best solution, best possible 10303.522 (1077.07 seconds)
Cbc0010I After 3900 nodes, 666 on tree, 1e+50 best solution, best possible 10304.414 (1098.09 seconds)
Cbc0010I After 4000 nodes, 671 on tree, 1e+50 best solution, best possible 10306.181 (1116.76 seconds)
Cbc0010I After 4100 nodes, 690 on tree, 1e+50 best solution, best possible 10306.248 (1133.29 seconds)
Cbc0010I After 4200 nodes, 707 on tree, 1e+50 best solution, best possible 10306.594 (1150.83 seconds)
Cbc0010I After 4300 nodes, 717 on tree, 1e+50 best solution, best possible 10308.322 (1169.30 seconds)
Cbc0010I After 4400 nodes, 721 on tree, 1e+50 best solution, best possible 10309.405 (1188.61 seconds)
Cbc0010I After 4500 nodes, 729 on tree, 1e+50 best solution, best possible 10310.257 (1208.05 seconds)
Cbc0010I After 4600 nodes, 733 on tree, 1e+50 best solution, best possible 10311.226 (1227.13 seconds)
Cbc0010I After 4700 nodes, 747 on tree, 1e+50 best solution, best possible 10311.96 (1244.98 seconds)
Cbc0010I After 4800 nodes, 762 on tree, 1e+50 best solution, best possible 10312.763 (1264.16 seconds)
Cbc0010I After 4900 nodes, 769 on tree, 1e+50 best solution, best possible 10313.774 (1283.35 seconds)
Cbc0010I After 5000 nodes, 783 on tree, 1e+50 best solution, best possible 10314.365 (1301.17 seconds)
Cbc0010I After 5100 nodes, 787 on tree, 1e+50 best solution, best possible 10315.221 (1318.86 seconds)
Cbc0010I After 5200 nodes, 793 on tree, 1e+50 best solution, best possible 10316.044 (1339.53 seconds)
Cbc0010I After 5300 nodes, 798 on tree, 1e+50 best solution, best possible 10317.325 (1358.03 seconds)
Cbc0010I After 5400 nodes, 801 on tree, 1e+50 best solution, best possible 10319.161 (1377.13 seconds)
Cbc0010I After 5500 nodes, 806 on tree, 1e+50 best solution, best possible 10319.711 (1396.01 seconds)
Cbc0010I After 5600 nodes, 812 on tree, 1e+50 best solution, best possible 10321.377 (1415.33 seconds)
Cbc0010I After 5700 nodes, 814 on tree, 1e+50 best solution, best possible 10322.831 (1433.92 seconds)
Cbc0010I After 5800 nodes, 820 on tree, 1e+50 best solution, best possible 10323.27 (1454.18 seconds)
Cbc0010I After 5900 nodes, 830 on tree, 1e+50 best solution, best possible 10323.51 (1475.96 seconds)
Cbc0010I After 6000 nodes, 839 on tree, 1e+50 best solution, best possible 10323.967 (1496.18 seconds)
Cbc0010I After 6100 nodes, 838 on tree, 1e+50 best solution, best possible 10324.835 (1513.67 seconds)
Cbc0010I After 6200 nodes, 855 on tree, 1e+50 best solution, best possible 10325.599 (1530.15 seconds)
Cbc0010I After 6300 nodes, 856 on tree, 1e+50 best solution, best possible 10326.292 (1548.50 seconds)
Cbc0010I After 6400 nodes, 861 on tree, 1e+50 best solution, best possible 10326.821 (1564.82 seconds)
Cbc0010I After 6500 nodes, 872 on tree, 1e+50 best solution, best possible 10327.135 (1581.57 seconds)
Cbc0010I After 6600 nodes, 886 on tree, 1e+50 best solution, best possible 10327.444 (1596.41 seconds)
Cbc0010I After 6700 nodes, 889 on tree, 1e+50 best solution, best possible 10327.783 (1612.56 seconds)
Cbc0010I After 6800 nodes, 892 on tree, 1e+50 best solution, best possible 10328.36 (1631.72 seconds)
Cbc0010I After 6900 nodes, 902 on tree, 1e+50 best solution, best possible 10328.656 (1647.68 seconds)
Cbc0010I After 7000 nodes, 912 on tree, 1e+50 best solution, best possible 10329.434 (1664.15 seconds)
Cbc0010I After 7100 nodes, 913 on tree, 1e+50 best solution, best possible 10330.193 (1683.57 seconds)
Cbc0010I After 7200 nodes, 913 on tree, 1e+50 best solution, best possible 10330.767 (1701.56 seconds)
Cbc0010I After 7300 nodes, 915 on tree, 1e+50 best solution, best possible 10331.514 (1719.55 seconds)
Cbc0010I After 7400 nodes, 920 on tree, 1e+50 best solution, best possible 10331.989 (1737.99 seconds)
Cbc0010I After 7500 nodes, 926 on tree, 1e+50 best solution, best possible 10332.358 (1755.15 seconds)
Cbc0010I After 7600 nodes, 939 on tree, 1e+50 best solution, best possible 10332.542 (1772.06 seconds)
Cbc0010I After 7700 nodes, 950 on tree, 1e+50 best solution, best possible 10332.874 (1789.21 seconds)
Cbc0010I After 7800 nodes, 961 on tree, 1e+50 best solution, best possible 10333.505 (1808.88 seconds)
Cbc0010I After 7900 nodes, 972 on tree, 1e+50 best solution, best possible 10333.848 (1826.09 seconds)
Cbc0010I After 8000 nodes, 985 on tree, 1e+50 best solution, best possible 10334.038 (1843.33 seconds)
Cbc0010I After 8100 nodes, 985 on tree, 1e+50 best solution, best possible 10334.525 (1861.56 seconds)
Cbc0010I After 8200 nodes, 995 on tree, 1e+50 best solution, best possible 10335.056 (1881.01 seconds)
Cbc0010I After 8300 nodes, 1001 on tree, 1e+50 best solution, best possible 10335.986 (1898.86 seconds)
Cbc0010I After 8400 nodes, 1005 on tree, 1e+50 best solution, best possible 10336.209 (1916.58 seconds)
Cbc0010I After 8500 nodes, 1006 on tree, 1e+50 best solution, best possible 10336.838 (1934.08 seconds)
Cbc0010I After 8600 nodes, 1011 on tree, 1e+50 best solution, best possible 10337.199 (1954.00 seconds)
Cbc0010I After 8700 nodes, 1004 on tree, 1e+50 best solution, best possible 10337.991 (1970.02 seconds)
Cbc0010I After 8800 nodes, 1008 on tree, 1e+50 best solution, best possible 10338.931 (1989.94 seconds)
Cbc0010I After 8900 nodes, 1006 on tree, 1e+50 best solution, best possible 10339.695 (2006.76 seconds)
Cbc0010I After 9000 nodes, 1011 on tree, 1e+50 best solution, best possible 10340.425 (2025.29 seconds)
Cbc0010I After 9100 nodes, 1015 on tree, 1e+50 best solution, best possible 10340.611 (2043.56 seconds)
Cbc0010I After 9200 nodes, 1010 on tree, 1e+50 best solution, best possible 10341.238 (2060.89 seconds)
Cbc0010I After 9300 nodes, 1015 on tree, 1e+50 best solution, best possible 10341.624 (2079.54 seconds)
Cbc0010I After 9400 nodes, 1010 on tree, 1e+50 best solution, best possible 10342.009 (2097.80 seconds)
Cbc0010I After 9500 nodes, 1010 on tree, 1e+50 best solution, best possible 10342.62 (2116.36 seconds)
Cbc0010I After 9600 nodes, 1011 on tree, 1e+50 best solution, best possible 10343.488 (2134.84 seconds)
Cbc0010I After 9700 nodes, 1003 on tree, 1e+50 best solution, best possible 10344.397 (2151.36 seconds)
Cbc0010I After 9800 nodes, 1003 on tree, 1e+50 best solution, best possible 10344.987 (2171.60 seconds)
Cbc0010I After 9900 nodes, 994 on tree, 1e+50 best solution, best possible 10345.777 (2190.15 seconds)
Cbc0010I After 10000 nodes, 987 on tree, 1e+50 best solution, best possible 10346.354 (2208.04 seconds)
Cbc0010I After 10100 nodes, 983 on tree, 1e+50 best solution, best possible 10346.868 (2226.62 seconds)
Cbc0010I After 10200 nodes, 973 on tree, 1e+50 best solution, best possible 10347.47 (2244.41 seconds)
Cbc0010I After 10300 nodes, 968 on tree, 1e+50 best solution, best possible 10348.182 (2261.48 seconds)
Cbc0010I After 10400 nodes, 966 on tree, 1e+50 best solution, best possible 10348.699 (2280.16 seconds)
Cbc0010I After 10500 nodes, 961 on tree, 1e+50 best solution, best possible 10349.349 (2298.47 seconds)
Cbc0010I After 10600 nodes, 955 on tree, 1e+50 best solution, best possible 10349.937 (2316.33 seconds)
Cbc0010I After 10700 nodes, 948 on tree, 1e+50 best solution, best possible 10350.649 (2333.96 seconds)
Cbc0010I After 10800 nodes, 942 on tree, 1e+50 best solution, best possible 10351.22 (2351.04 seconds)
Cbc0010I After 10900 nodes, 934 on tree, 1e+50 best solution, best possible 10351.611 (2370.99 seconds)
Cbc0010I After 11000 nodes, 920 on tree, 1e+50 best solution, best possible 10352.602 (2387.24 seconds)
Cbc0010I After 11100 nodes, 913 on tree, 1e+50 best solution, best possible 10353.377 (2406.05 seconds)
Cbc0010I After 11200 nodes, 902 on tree, 1e+50 best solution, best possible 10353.861 (2424.79 seconds)
Cbc0010I After 11300 nodes, 891 on tree, 1e+50 best solution, best possible 10354.129 (2442.06 seconds)
Cbc0010I After 11400 nodes, 883 on tree, 1e+50 best solution, best possible 10354.584 (2460.48 seconds)
Cbc0010I After 11500 nodes, 871 on tree, 1e+50 best solution, best possible 10355.243 (2478.03 seconds)
Cbc0010I After 11600 nodes, 858 on tree, 1e+50 best solution, best possible 10355.61 (2494.92 seconds)
Cbc0010I After 11700 nodes, 846 on tree, 1e+50 best solution, best possible 10356.158 (2511.60 seconds)
Cbc0010I After 11800 nodes, 832 on tree, 1e+50 best solution, best possible 10356.922 (2527.56 seconds)
Cbc0010I After 11900 nodes, 830 on tree, 1e+50 best solution, best possible 10357.264 (2543.39 seconds)
Cbc0010I After 12000 nodes, 830 on tree, 1e+50 best solution, best possible 10357.604 (2558.41 seconds)
Cbc0010I After 12100 nodes, 833 on tree, 1e+50 best solution, best possible 10358.089 (2623.19 seconds)
Cbc0010I After 12200 nodes, 843 on tree, 1e+50 best solution, best possible 10358.195 (2637.86 seconds)
Cbc0010I After 12300 nodes, 845 on tree, 1e+50 best solution, best possible 10358.608 (2654.63 seconds)
Cbc0010I After 12400 nodes, 845 on tree, 1e+50 best solution, best possible 10358.806 (2669.85 seconds)
Cbc0010I After 12500 nodes, 843 on tree, 1e+50 best solution, best possible 10359.079 (2684.96 seconds)
Cbc0010I After 12600 nodes, 849 on tree, 1e+50 best solution, best possible 10359.355 (2699.66 seconds)
Cbc0010I After 12700 nodes, 853 on tree, 1e+50 best solution, best possible 10359.58 (2715.40 seconds)
Cbc0010I After 12800 nodes, 853 on tree, 1e+50 best solution, best possible 10360.162 (2731.62 seconds)
Cbc0010I After 12900 nodes, 856 on tree, 1e+50 best solution, best possible 10360.529 (2745.77 seconds)
Cbc0010I After 13000 nodes, 835 on tree, 1e+50 best solution, best possible 10361.936 (2760.99 seconds)
Cbc0010I After 13100 nodes, 827 on tree, 1e+50 best solution, best possible 10362.281 (2777.58 seconds)
Cbc0010I After 13200 nodes, 821 on tree, 1e+50 best solution, best possible 10362.591 (2794.47 seconds)
Cbc0010I After 13300 nodes, 824 on tree, 1e+50 best solution, best possible 10362.942 (2809.74 seconds)
Cbc0010I After 13400 nodes, 821 on tree, 1e+50 best solution, best possible 10363.186 (2824.73 seconds)
Cbc0010I After 13500 nodes, 821 on tree, 1e+50 best solution, best possible 10363.534 (2841.51 seconds)
Cbc0010I After 13600 nodes, 831 on tree, 1e+50 best solution, best possible 10363.621 (2855.31 seconds)
Cbc0010I After 13700 nodes, 837 on tree, 1e+50 best solution, best possible 10363.887 (2871.92 seconds)
Cbc0010I After 13800 nodes, 842 on tree, 1e+50 best solution, best possible 10364.003 (2887.91 seconds)
Cbc0010I After 13900 nodes, 849 on tree, 1e+50 best solution, best possible 10364.253 (2903.53 seconds)
Cbc0010I After 14000 nodes, 851 on tree, 1e+50 best solution, best possible 10364.446 (2919.31 seconds)
Cbc0010I After 14100 nodes, 859 on tree, 1e+50 best solution, best possible 10364.638 (2932.91 seconds)
Cbc0010I After 14200 nodes, 862 on tree, 1e+50 best solution, best possible 10364.835 (2948.02 seconds)
Cbc0010I After 14300 nodes, 862 on tree, 1e+50 best solution, best possible 10365.043 (2963.77 seconds)
Cbc0010I After 14400 nodes, 866 on tree, 1e+50 best solution, best possible 10365.209 (2979.04 seconds)
Cbc0010I After 14500 nodes, 865 on tree, 1e+50 best solution, best possible 10365.504 (2995.24 seconds)
Cbc0010I After 14600 nodes, 867 on tree, 1e+50 best solution, best possible 10365.803 (3010.73 seconds)
Cbc0010I After 14700 nodes, 866 on tree, 1e+50 best solution, best possible 10366.052 (3024.57 seconds)
Cbc0010I After 14800 nodes, 871 on tree, 1e+50 best solution, best possible 10366.159 (3038.48 seconds)
Cbc0010I After 14900 nodes, 873 on tree, 1e+50 best solution, best possible 10366.327 (3053.22 seconds)
Cbc0010I After 15000 nodes, 867 on tree, 1e+50 best solution, best possible 10366.826 (3069.26 seconds)
Cbc0010I After 15100 nodes, 876 on tree, 1e+50 best solution, best possible 10366.895 (3083.31 seconds)
Cbc0010I After 15200 nodes, 870 on tree, 1e+50 best solution, best possible 10367.201 (3097.89 seconds)
Cbc0010I After 15300 nodes, 869 on tree, 1e+50 best solution, best possible 10367.553 (3113.29 seconds)
Cbc0010I After 15400 nodes, 862 on tree, 1e+50 best solution, best possible 10367.88 (3128.99 seconds)
Cbc0010I After 15500 nodes, 867 on tree, 1e+50 best solution, best possible 10367.983 (3143.76 seconds)
Cbc0010I After 15600 nodes, 863 on tree, 1e+50 best solution, best possible 10368.325 (3158.94 seconds)
Cbc0010I After 15700 nodes, 863 on tree, 1e+50 best solution, best possible 10368.474 (3173.26 seconds)
Cbc0010I After 15800 nodes, 860 on tree, 1e+50 best solution, best possible 10368.887 (3188.49 seconds)
Cbc0010I After 15900 nodes, 864 on tree, 1e+50 best solution, best possible 10368.953 (3203.00 seconds)
Cbc0010I After 16000 nodes, 861 on tree, 1e+50 best solution, best possible 10369.237 (3218.09 seconds)
Cbc0010I After 16100 nodes, 861 on tree, 1e+50 best solution, best possible 10369.432 (3231.64 seconds)
Cbc0010I After 16200 nodes, 860 on tree, 1e+50 best solution, best possible 10369.6 (3245.55 seconds)
Cbc0010I After 16300 nodes, 866 on tree, 1e+50 best solution, best possible 10369.702 (3259.31 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 10369.702), took 181641 iterations and 16344 nodes (3270.22 seconds)
Cbc0035I Maximum depth 113, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       6621
Linearization cuts added in total:           6621  (separation time: 0.053475s)
Total solve time:                         3270.28s (3270.28s in branch-and-bound)
Lower bound:                              10369.7
Upper bound:                              10380.7  (gap: 0.11%)
Branch-and-bound nodes:                     16344
Stats: /tmp/jl_mKde4I/model.nl 6090 [var]   30 [int] 6260 [con]  439 [aux]   6621 [root]     6621 [tot] 0.053475 [sep]  3270.28 [time]  3270.29 [bb]         1.036970e+04 [lower]         1.038071e+04 [upper]   16344 [nodes]
Performance of                           FBBT:	    329.827s,    18741 runs. fix:          0 shrnk:    1.34108 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    15.1638s,        4 runs. fix:        2.3 shrnk:    232.009 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p62
