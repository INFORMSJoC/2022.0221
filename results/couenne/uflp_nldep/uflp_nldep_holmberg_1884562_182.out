solving instance uflp nldep holmberg 19 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.9166000000e+04 (0.295145 seconds)
0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5777.6761       42 0.849961
Couenne: new cutoff value 6.0276795565e+03 (1.21639 seconds)
NLP0014I             2         OPT 5834.4426       25 0.283456
Couenne: new cutoff value 5.8344441636e+03 (1.50143 seconds)
Loaded instance "/tmp/jl_NRDPXH/model.nl"
Constraints:         1090
Variables:           1060 (20 integer)
Auxiliaries:          109 (0 integer)

Coin0506I Presolve 1250 (-1) rows, 1100 (-69) columns and 5459 (-70) elements
Clp0006I 0  Obj -28125 Primal inf 2299313.7 (70)
Clp0006I 100  Obj -13497.562 Primal inf 235911.3 (70)
Clp0006I 200  Obj 1926.488 Primal inf 14099.525 (55)
Clp0006I 271  Obj 4493.056
Clp0000I Optimal - objective value 4493.056
Clp0000I Optimal - objective value 4493.056
Clp0032I Optimal objective 4493.055965 - 271 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 4493.056
NLP Heuristic: NLP0014I             3         OPT 5780.1511       29 0.422451
no solution.
Clp0000I Optimal - objective value 4493.056
Optimality Based BT: 1 improved bounds
Probing: Couenne: new cutoff value 5.7801537716e+03 (2.39429 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 14 added rows had average density of 2
Cbc0013I At root node, 14 cuts changed objective from 4493.056 to 4494.6751 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 146 row cuts average 2.0 elements, 211 column cuts (211 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.24 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 5591.4485 (10.08 seconds)
Cbc0010I After 200 nodes, 30 on tree, 1e+50 best solution, best possible 5623.3783 (12.34 seconds)
Cbc0010I After 300 nodes, 50 on tree, 1e+50 best solution, best possible 5642.8411 (14.59 seconds)
Cbc0010I After 400 nodes, 67 on tree, 1e+50 best solution, best possible 5647.6071 (16.86 seconds)
Cbc0010I After 500 nodes, 82 on tree, 1e+50 best solution, best possible 5659.3663 (19.08 seconds)
Cbc0010I After 600 nodes, 95 on tree, 1e+50 best solution, best possible 5666.2942 (21.28 seconds)
Cbc0010I After 700 nodes, 104 on tree, 1e+50 best solution, best possible 5674.8737 (23.44 seconds)
Cbc0010I After 800 nodes, 114 on tree, 1e+50 best solution, best possible 5681.2207 (25.69 seconds)
Cbc0010I After 900 nodes, 121 on tree, 1e+50 best solution, best possible 5686.1915 (27.82 seconds)
Cbc0010I After 1000 nodes, 127 on tree, 1e+50 best solution, best possible 5690.4149 (30.00 seconds)
Cbc0010I After 1100 nodes, 132 on tree, 1e+50 best solution, best possible 5694.7476 (32.21 seconds)
Cbc0010I After 1200 nodes, 139 on tree, 1e+50 best solution, best possible 5698.1845 (34.31 seconds)
Cbc0010I After 1300 nodes, 145 on tree, 1e+50 best solution, best possible 5700.7786 (36.39 seconds)
Cbc0010I After 1400 nodes, 151 on tree, 1e+50 best solution, best possible 5705.3586 (38.61 seconds)
Cbc0010I After 1500 nodes, 156 on tree, 1e+50 best solution, best possible 5708.4486 (40.70 seconds)
Cbc0010I After 1600 nodes, 158 on tree, 1e+50 best solution, best possible 5712.647 (42.78 seconds)
Cbc0010I After 1700 nodes, 157 on tree, 1e+50 best solution, best possible 5719.1372 (44.89 seconds)
Cbc0010I After 1800 nodes, 150 on tree, 1e+50 best solution, best possible 5723.9428 (46.96 seconds)
Cbc0010I After 1900 nodes, 143 on tree, 1e+50 best solution, best possible 5729.3166 (48.96 seconds)
Cbc0010I After 2000 nodes, 131 on tree, 1e+50 best solution, best possible 5735.5348 (50.96 seconds)
Cbc0010I After 2100 nodes, 123 on tree, 1e+50 best solution, best possible 5740.4711 (53.09 seconds)
Cbc0010I After 2200 nodes, 131 on tree, 1e+50 best solution, best possible 5742.065 (55.40 seconds)
Cbc0010I After 2300 nodes, 132 on tree, 1e+50 best solution, best possible 5747.4071 (57.62 seconds)
Cbc0010I After 2400 nodes, 131 on tree, 1e+50 best solution, best possible 5752.9867 (59.93 seconds)
Cbc0010I After 2500 nodes, 130 on tree, 1e+50 best solution, best possible 5755.1197 (62.10 seconds)
Cbc0010I After 2600 nodes, 167 on tree, 1e+50 best solution, best possible 5755.1197 (64.50 seconds)
Couenne: new cutoff value 5.7776787368e+03 (67.1442 seconds)
Cbc0010I After 2700 nodes, 181 on tree, 1e+50 best solution, best possible 5756.8085 (66.71 seconds)
Cbc0010I After 2800 nodes, 167 on tree, 1e+50 best solution, best possible 5760.8121 (68.68 seconds)
Cbc0010I After 2900 nodes, 144 on tree, 1e+50 best solution, best possible 5766.6452 (70.57 seconds)
Cbc0010I After 3000 nodes, 106 on tree, 1e+50 best solution, best possible 5772.2916 (72.19 seconds)
Cbc0010I After 3100 nodes, 67 on tree, 1e+50 best solution, best possible 5777.6789 (73.38 seconds)
Cbc0010I After 3200 nodes, 17 on tree, 1e+50 best solution, best possible 5778.7513 (74.08 seconds)
Cbc0001I Search completed - best objective 1e+50, took 60309 iterations and 3234 nodes (74.29 seconds)
Cbc0035I Maximum depth 150, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1251
Linearization cuts added in total:           1251  (separation time: 0.00656s)
Total solve time:                          74.302s (74.302s in branch-and-bound)
Lower bound:                              5777.68
Upper bound:                              5777.68  (gap: 0.00%)
Branch-and-bound nodes:                      3234
Stats: /tmp/jl_NRDPXH/model.nl 1060 [var]   20 [int] 1090 [con]  109 [aux]   1251 [root]     1251 [tot] 0.00656 [sep]   74.302 [time]  74.3039 [bb]         5.777679e+03 [lower]         5.777679e+03 [upper]    3234 [nodes]
Performance of                           FBBT:	    4.91315s,     4082 runs. fix:          0 shrnk:    3.06048 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.23652s,        3 runs. fix:          0 shrnk:    4.01197 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p19
