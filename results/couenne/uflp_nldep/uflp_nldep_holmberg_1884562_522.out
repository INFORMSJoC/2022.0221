solving instance uflp nldep holmberg 53 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.0745000000e+04 (1.16518 seconds)
1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6134.8618       51 1.671956
Couenne: new cutoff value 6.5343654261e+03 (3.09852 seconds)
NLP0014I             2         OPT 6379.3722       32 0.798883
Couenne: new cutoff value 6.3793714452e+03 (3.90035 seconds)
Loaded instance "/tmp/jl_HRp7Cw/model.nl"
Constraints:         2140
Variables:           2060 (20 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 2300 (-1) rows, 2100 (-119) columns and 10459 (-120) elements
Clp0006I 0  Obj -22224.375 Primal inf 1084635.6 (120)
Clp0006I 121  Obj -1171.5246 Primal inf 1023187.3 (142)
Clp0006I 242  Obj 4067.4189 Primal inf 8567.4469 (77)
Clp0006I 332  Obj 5188.9101
Clp0000I Optimal - objective value 5188.9101
Clp0000I Optimal - objective value 5188.9101
Clp0032I Optimal objective 5188.910136 - 332 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 5188.9101
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 5188.9101
Optimality Based BT: 1 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 8 added rows had average density of 2
Cbc0013I At root node, 8 cuts changed objective from 5188.9101 to 5317.9854 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 70 row cuts average 2.0 elements, 254 column cuts (254 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (5.22 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 5412.6935 (41.06 seconds)
Couenne: new cutoff value 6.1459974419e+03 (48.4547 seconds)
Cbc0010I After 200 nodes, 86 on tree, 1e+50 best solution, best possible 5618.2706 (54.00 seconds)
Cbc0010I After 300 nodes, 94 on tree, 1e+50 best solution, best possible 6025.2649 (58.49 seconds)
Cbc0010I After 400 nodes, 133 on tree, 1e+50 best solution, best possible 6025.2649 (63.18 seconds)
Couenne: new cutoff value 6.1348638830e+03 (68.4609 seconds)
Cbc0010I After 500 nodes, 144 on tree, 1e+50 best solution, best possible 6089.7853 (66.86 seconds)
Cbc0010I After 600 nodes, 131 on tree, 1e+50 best solution, best possible 6127.171 (70.88 seconds)
Cbc0010I After 700 nodes, 82 on tree, 1e+50 best solution, best possible 6136.0342 (72.29 seconds)
Cbc0010I After 800 nodes, 32 on tree, 1e+50 best solution, best possible 6146.3228 (73.17 seconds)
Cbc0001I Search completed - best objective 1e+50, took 11251 iterations and 864 nodes (73.75 seconds)
Cbc0035I Maximum depth 96, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2301
Linearization cuts added in total:           2301  (separation time: 0.015579s)
Total solve time:                         73.7839s (73.7839s in branch-and-bound)
Lower bound:                              6134.86
Upper bound:                              6134.86  (gap: 0.00%)
Branch-and-bound nodes:                       864
Stats: /tmp/jl_HRp7Cw/model.nl 2060 [var]   20 [int] 2140 [con]  159 [aux]   2301 [root]     2301 [tot] 0.015579 [sep]  73.7839 [time]  73.7882 [bb]         6.134864e+03 [lower]         6.134864e+03 [upper]     864 [nodes]
Performance of                           FBBT:	    2.59597s,      801 runs. fix:          0 shrnk:     6.6118 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.61232s,        5 runs. fix:          0 shrnk:    2.38011 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p53
