solving instance uflp nldep holmberg 46 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.1095999995e+04 (1.24921 seconds)
1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1510.2295       26 0.963633
Couenne: new cutoff value 1.5102332033e+03 (2.27632 seconds)
NLP0014I             2         OPT 1510.2296       27 0.700892
Couenne: new cutoff value 1.5102301484e+03 (2.97995 seconds)
Loaded instance "/tmp/jl_OGeKzR/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 2551 (-40) rows, 2271 (-138) columns and 11291 (-178) elements
Clp0006I 0  Obj 0 Primal inf 1488.289 (130)
Clp0006I 126  Obj 987 Primal inf 131.70582 (77)
Clp0006I 191  Obj 1406
Clp0000I Optimal - objective value 1406
Clp0032I Optimal objective 1406 - 191 iterations time 0.042, Presolve 0.03
Clp0000I Optimal - objective value 1406
NLP Heuristic: NLP0014I             3         OPT 1510.2295       30 1.132269
no solution.
Clp0000I Optimal - objective value 1406
Optimality Based BT: 31 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 57 added rows had average density of 2
Cbc0013I At root node, 57 cuts changed objective from 1406 to 1510.2137 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 425 row cuts average 2.0 elements, 25 column cuts (25 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.78 seconds)
Optimality Based BT: 55 improved bounds
Optimality Based BT: 55 improved bounds
Optimality Based BT: 41 improved bounds
Optimality Based BT: 45 improved bounds
Optimality Based BT: 24 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 1510.2295 (53.05 seconds)
Cbc0010I After 200 nodes, 52 on tree, 1e+50 best solution, best possible 1510.2296 (58.61 seconds)
Cbc0010I After 300 nodes, 75 on tree, 1e+50 best solution, best possible 1510.2296 (61.75 seconds)
Cbc0010I After 400 nodes, 98 on tree, 1e+50 best solution, best possible 1510.2296 (66.00 seconds)
Cbc0010I After 500 nodes, 121 on tree, 1e+50 best solution, best possible 1510.2296 (69.16 seconds)
Cbc0010I After 600 nodes, 141 on tree, 1e+50 best solution, best possible 1510.2297 (72.31 seconds)
Cbc0010I After 700 nodes, 158 on tree, 1e+50 best solution, best possible 1510.2297 (75.46 seconds)
Cbc0010I After 800 nodes, 174 on tree, 1e+50 best solution, best possible 1510.2297 (78.59 seconds)
Cbc0010I After 900 nodes, 187 on tree, 1e+50 best solution, best possible 1510.2298 (82.73 seconds)
Cbc0010I After 1000 nodes, 195 on tree, 1e+50 best solution, best possible 1510.2298 (86.00 seconds)
Cbc0010I After 1100 nodes, 205 on tree, 1e+50 best solution, best possible 1510.2299 (89.35 seconds)
Cbc0010I After 1200 nodes, 210 on tree, 1e+50 best solution, best possible 1510.2299 (92.43 seconds)
Cbc0010I After 1300 nodes, 198 on tree, 1e+50 best solution, best possible 1510.23 (96.06 seconds)
Cbc0010I After 1400 nodes, 176 on tree, 1e+50 best solution, best possible 1510.23 (98.15 seconds)
Cbc0010I After 1500 nodes, 154 on tree, 1e+50 best solution, best possible 1510.2301 (100.24 seconds)
Cbc0010I After 1600 nodes, 106 on tree, 1e+50 best solution, best possible 1510.2301 (101.85 seconds)
Cbc0010I After 1700 nodes, 56 on tree, 1e+50 best solution, best possible 1510.2304 (103.29 seconds)
Cbc0010I After 1800 nodes, 6 on tree, 1e+50 best solution, best possible 1510.2351 (104.58 seconds)
Cbc0001I Search completed - best objective 1e+50, took 6444 iterations and 1812 nodes (104.69 seconds)
Cbc0035I Maximum depth 24, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2591
Linearization cuts added in total:           2591  (separation time: 0.014775s)
Total solve time:                         104.731s (104.731s in branch-and-bound)
Lower bound:                              1510.23
Upper bound:                              1510.23  (gap: 0.00%)
Branch-and-bound nodes:                      1812
Stats: /tmp/jl_OGeKzR/model.nl 2190 [var]   30 [int] 2230 [con]  219 [aux]   2591 [root]     2591 [tot] 0.014775 [sep]  104.731 [time]  104.735 [bb]         1.510230e+03 [lower]         1.510230e+03 [upper]    1812 [nodes]
Performance of                           FBBT:	    3.44148s,      934 runs. fix:          0 shrnk:    7.48139 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.22907s,        6 runs. fix:   0.384615 shrnk:    175.309 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p46
