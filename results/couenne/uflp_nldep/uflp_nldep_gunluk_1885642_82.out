solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-8.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 7.7834824635e+02 (0.023683 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 271.7762       26 0.1142
NLP0014I             2         OPT 271.77621       20 0.056206
Loaded instance "/tmp/jl_somz80/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           49 (0 integer)

Coin0506I Presolve 340 (-1) rows, 250 (-29) columns and 1269 (-30) elements
Clp0006I 0  Obj -1676.25 Primal inf 162748.68 (30)
Clp0006I 65  Obj -37.376982 Primal inf 12734.868 (36)
Clp0006I 131  Obj 145.24323
Clp0000I Optimal - objective value 145.24323
Clp0032I Optimal objective 145.243231 - 131 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 145.24323
NLP Heuristic: NLP0014I             3         OPT 277.05591       15 0.03937
no solution.
Clp0000I Optimal - objective value 145.24323
Optimality Based BT: Couenne: new cutoff value 5.9414666783e+02 (0.302143 seconds)
Couenne: new cutoff value 4.8713585686e+02 (0.306418 seconds)
Couenne: new cutoff value 4.1718103133e+02 (0.322584 seconds)
0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 7 cuts changed objective from 145.24323 to 146.19571 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 95 row cuts average 2.0 elements, 215 column cuts (215 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.31 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 9 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 4 improved bounds
Couenne: new cutoff value 3.1635758469e+02 (1.72183 seconds)
Optimality Based BT: 3 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 189.11975 (2.84 seconds)
Couenne: new cutoff value 2.7204668508e+02 (3.13293 seconds)
Optimality Based BT: 7 improved bounds
Cbc0010I After 200 nodes, 77 on tree, 1e+50 best solution, best possible 243.94647 (3.88 seconds)
Cbc0010I After 300 nodes, 102 on tree, 1e+50 best solution, best possible 249.664 (4.60 seconds)
Cbc0010I After 400 nodes, 117 on tree, 1e+50 best solution, best possible 254.71976 (5.27 seconds)
Cbc0010I After 500 nodes, 134 on tree, 1e+50 best solution, best possible 256.60687 (5.93 seconds)
Optimality Based BT: 8 improved bounds
Optimality Based BT: 10 improved bounds
Cbc0010I After 600 nodes, 154 on tree, 1e+50 best solution, best possible 259.47267 (7.03 seconds)
Cbc0010I After 700 nodes, 161 on tree, 1e+50 best solution, best possible 261.8784 (7.86 seconds)
Cbc0010I After 800 nodes, 159 on tree, 1e+50 best solution, best possible 264.62696 (8.44 seconds)
Cbc0010I After 900 nodes, 166 on tree, 1e+50 best solution, best possible 266.26638 (9.03 seconds)
Couenne: new cutoff value 2.7197126367e+02 (9.58113 seconds)
Couenne: new cutoff value 2.7197014318e+02 (9.58552 seconds)
Cbc0010I After 1000 nodes, 197 on tree, 1e+50 best solution, best possible 266.39651 (9.59 seconds)
Couenne: new cutoff value 2.7178023219e+02 (10.1718 seconds)
Couenne: new cutoff value 2.7177622220e+02 (10.176 seconds)
Cbc0010I After 1100 nodes, 228 on tree, 1e+50 best solution, best possible 267.08463 (10.09 seconds)
Cbc0010I After 1200 nodes, 224 on tree, 1e+50 best solution, best possible 267.80877 (10.61 seconds)
Cbc0010I After 1300 nodes, 221 on tree, 1e+50 best solution, best possible 268.47054 (11.14 seconds)
Cbc0010I After 1400 nodes, 209 on tree, 1e+50 best solution, best possible 269.23576 (11.64 seconds)
Cbc0010I After 1500 nodes, 183 on tree, 1e+50 best solution, best possible 270.11039 (12.08 seconds)
Cbc0010I After 1600 nodes, 138 on tree, 1e+50 best solution, best possible 271.25047 (12.40 seconds)
Cbc0010I After 1700 nodes, 94 on tree, 1e+50 best solution, best possible 271.78879 (12.66 seconds)
Cbc0010I After 1800 nodes, 44 on tree, 1e+50 best solution, best possible 271.98887 (12.79 seconds)
Cbc0001I Search completed - best objective 1e+50, took 23211 iterations and 1888 nodes (12.89 seconds)
Cbc0035I Maximum depth 72, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        341
Linearization cuts added in total:            341  (separation time: 0.00141s)
Total solve time:                         12.8978s (12.8978s in branch-and-bound)
Lower bound:                              271.776
Upper bound:                              271.776  (gap: 0.00%)
Branch-and-bound nodes:                      1888
Stats: /tmp/jl_somz80/model.nl  230 [var]   10 [int]  240 [con]   49 [aux]    341 [root]      341 [tot] 0.00141 [sep]  12.8978 [time]  12.8981 [bb]         2.717762e+02 [lower]         2.717762e+02 [upper]    1888 [nodes]
Performance of                           FBBT:	   0.602842s,     2506 runs. fix:          0 shrnk:     1.1287 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.809412s,        9 runs. fix:        6.8 shrnk:    24.5003 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-8.txt
