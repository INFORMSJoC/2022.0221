solving instance uflp nldep orlib 61 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      INFEAS 1.0000002      215 2.687014
Loaded instance "/tmp/jl_q9ZrnZ/model.nl"
Constraints:          882
Variables:            848 (16 integer)
Auxiliaries:          171 (0 integer)

Coin0506I Presolve 1000 (-63) rows, 876 (-143) columns and 3465 (-1068) elements
Clp0006I 0  Obj -9715.0011 Primal inf 7677.7697 (95)
Clp0006I 95  Obj 616306.56 Primal inf 83.197475 (47)
Clp0006I 147  Obj 836622.01
Clp0000I Optimal - objective value 836622.01
Clp0032I Optimal objective 836622.0101 - 147 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 836622.01
NLP Heuristic: NLP0014I             2         OPT 846858.79       37 0.378688
no solution.
Clp0000I Optimal - objective value 836622.01
Optimality Based BT: Couenne: new cutoff value 1.9426839596e+06 (3.54783 seconds)
Couenne: new cutoff value 1.6422446346e+06 (3.55417 seconds)
Couenne: new cutoff value 1.4129956096e+06 (3.55734 seconds)
Couenne: new cutoff value 1.3374685096e+06 (3.56041 seconds)
Couenne: new cutoff value 1.2482085698e+06 (3.57785 seconds)
7 improved bounds
Probing: 11 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 836622.01 to 836869.57 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3.25 seconds)
Optimality Based BT: 27 improved bounds
Optimality Based BT: 23 improved bounds
Optimality Based BT: 29 improved bounds
Optimality Based BT: 25 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible 841987.96 (16.85 seconds)
Cbc0010I After 200 nodes, 99 on tree, 1e+50 best solution, best possible 841987.96 (18.36 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1e+50 best solution, best possible 841987.96 (19.62 seconds)
Cbc0010I After 400 nodes, 199 on tree, 1e+50 best solution, best possible 841987.96 (20.74 seconds)
Couenne: new cutoff value 8.4685895437e+05 (23.8624 seconds)
Cbc0004I Integer solution of 846858.95 found after 2167 iterations and 422 nodes (20.97 seconds)
Cbc0004I Integer solution of 846858.95 found after 2328 iterations and 462 nodes (21.45 seconds)
Cbc0001I Search completed - best objective 846858.9544259543, took 2340 iterations and 470 nodes (21.52 seconds)
Cbc0035I Maximum depth 210, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1063
Linearization cuts added in total:           1063  (separation time: 0.003512s)
Total solve time:                         21.5356s (21.5356s in branch-and-bound)
Lower bound:                               846859
Upper bound:                               846859  (gap: 0.00%)
Branch-and-bound nodes:                       470
Stats: /tmp/jl_q9ZrnZ/model.nl  848 [var]   16 [int]  882 [con]  171 [aux]   1063 [root]     1063 [tot] 0.003512 [sep]  21.5356 [time]  21.5366 [bb]         8.468590e+05 [lower]         8.468590e+05 [upper]     470 [nodes]
Performance of                           FBBT:	   0.653509s,      583 runs. fix:          0 shrnk:   0.668438 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.39904s,        5 runs. fix:        0.2 shrnk:    33.9901 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap61.txt
