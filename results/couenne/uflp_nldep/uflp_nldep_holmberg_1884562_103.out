solving instance uflp nldep holmberg 11 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 2.3139000000e+04 (0.08831 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4866.5564       23 0.164367
Couenne: new cutoff value 4.8665571666e+03 (0.255796 seconds)
Loaded instance "/tmp/jl_A3zbHa/model.nl"
Constraints:          570
Variables:            530 (10 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 651 (-20) rows, 551 (-78) columns and 2711 (-98) elements
Clp0006I 0  Obj 0 Primal inf 156.90491 (50)
Clp0006I 88  Obj 4726 Primal inf 13.247613 (11)
Clp0006I 93  Obj 4741.2356
Clp0000I Optimal - objective value 4741.2356
Clp0032I Optimal objective 4741.235581 - 93 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 4741.2356
NLP Heuristic: NLP0014I             2         OPT 4866.5565       13 0.082839
no solution.
Clp0000I Optimal - objective value 4741.2356
Optimality Based BT: 19 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 4741.2356 to 4866.5393 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 66 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.72 seconds)
Optimality Based BT: 10 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 11 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 5 improved bounds
Cbc0010I After 100 nodes, 30 on tree, 1e+50 best solution, best possible 4866.5525 (6.63 seconds)
Cbc0010I After 200 nodes, 33 on tree, 1e+50 best solution, best possible 4866.5543 (7.91 seconds)
Cbc0010I After 300 nodes, 42 on tree, 1e+50 best solution, best possible 4866.5556 (8.58 seconds)
Cbc0010I After 400 nodes, 54 on tree, 1e+50 best solution, best possible 4866.556 (9.32 seconds)
Cbc0010I After 500 nodes, 59 on tree, 1e+50 best solution, best possible 4866.5564 (9.96 seconds)
Cbc0010I After 600 nodes, 43 on tree, 1e+50 best solution, best possible 4866.5568 (10.54 seconds)
Cbc0010I After 700 nodes, 21 on tree, 1e+50 best solution, best possible 4866.5579 (11.05 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2299 iterations and 742 nodes (11.20 seconds)
Cbc0035I Maximum depth 32, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        671
Linearization cuts added in total:            671  (separation time: 0.002601s)
Total solve time:                         11.2144s (11.2144s in branch-and-bound)
Lower bound:                              4866.56
Upper bound:                              4866.56  (gap: 0.00%)
Branch-and-bound nodes:                       742
Stats: /tmp/jl_A3zbHa/model.nl  530 [var]   10 [int]  570 [con]   99 [aux]    671 [root]      671 [tot] 0.002601 [sep]  11.2144 [time]  11.2155 [bb]         4.866557e+03 [lower]         4.866557e+03 [upper]     742 [nodes]
Performance of                           FBBT:	   0.281485s,      415 runs. fix:  0.0873923 shrnk:    5.07519 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	   0.626161s,        9 runs. fix:   0.146341 shrnk:    31.6982 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p11
