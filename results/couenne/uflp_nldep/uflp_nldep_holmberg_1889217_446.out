solving instance uflp nldep holmberg 45 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2374.2435       49 12.988778
Couenne: new cutoff value 2.3742441675e+03 (13.7258 seconds)
Loaded instance "/tmp/jl_xyme17/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          239 (0 integer)

Coin0506I Presolve 1879 (-82) rows, 1699 (-200) columns and 8437 (-282) elements
Clp0006I 0  Obj -682.38167 Primal inf 2183.6239 (139)
Clp0006I 112  Obj 330.24489 Primal inf 168.99116 (81)
Clp0006I 207  Obj 1797.9315
Clp0000I Optimal - objective value 1797.9315
Clp0032I Optimal objective 1797.931526 - 207 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 1797.9315
NLP Heuristic: NLP0014I             2         OPT 2374.2435        8 0.205676
no solution.
Clp0000I Optimal - objective value 1797.9315
Optimality Based BT: 45 improved bounds
Probing: 18 improved bounds
NLP Heuristic: no solution.
Cbc0031I 18 added rows had average density of 2
Cbc0013I At root node, 18 cuts changed objective from 1797.9315 to 2286.1834 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 36 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (4.89 seconds)
Optimality Based BT: 56 improved bounds
Optimality Based BT: 55 improved bounds
Optimality Based BT: 55 improved bounds
Optimality Based BT: 44 improved bounds
Optimality Based BT: 42 improved bounds
Cbc0010I After 100 nodes, 12 on tree, 1e+50 best solution, best possible 2366.9609 (41.81 seconds)
Optimality Based BT: 53 improved bounds
Optimality Based BT: 52 improved bounds
Cbc0010I After 200 nodes, 15 on tree, 1e+50 best solution, best possible 2369.5158 (46.64 seconds)
Cbc0010I After 300 nodes, 7 on tree, 1e+50 best solution, best possible 2372.6251 (53.18 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2609 iterations and 322 nodes (53.76 seconds)
Cbc0035I Maximum depth 26, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1961
Linearization cuts added in total:           1961  (separation time: 0.014731s)
Total solve time:                         53.7814s (53.7814s in branch-and-bound)
Lower bound:                              2374.24
Upper bound:                              2374.24  (gap: 0.00%)
Branch-and-bound nodes:                       322
Stats: /tmp/jl_xyme17/model.nl 1660 [var]   20 [int] 1720 [con]  239 [aux]   1961 [root]     1961 [tot] 0.014731 [sep]  53.7814 [time]   53.785 [bb]         2.374244e+03 [lower]         2.374244e+03 [upper]     322 [nodes]
Performance of                           FBBT:	   0.669329s,      259 runs. fix:          0 shrnk:     20.531 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.87608s,        8 runs. fix:    2.69519 shrnk:    167.631 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p45
