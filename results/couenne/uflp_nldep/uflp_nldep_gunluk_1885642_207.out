solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-10.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 231.83839       57 31.225498
Couenne: new cutoff value 2.3189532678e+02 (32.2797 seconds)
NLP0014I             2         OPT 231.89488       59 1.314117
Couenne: new cutoff value 2.3189513116e+02 (33.5957 seconds)
Loaded instance "/tmp/jl_T26wkO/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          269 (0 integer)

Coin0506I Presolve 2309 (-92) rows, 1949 (-210) columns and 9927 (-302) elements
Clp0006I 0  Obj 0 Primal inf 9786.4754 (390)
Clp0006I 121  Obj 2.1912632e-14 Primal inf 11900.568 (133)
Clp0006I 242  Obj 229.59625 Primal inf 39.21605 (67)
Clp0006I 362  Obj 230.67763
Clp0000I Optimal - objective value 230.67763
Clp0032I Optimal objective 230.6776251 - 362 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 230.67763
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 230.67763
Optimality Based BT: 48 improved bounds
Probing: 4 improved bounds
NLP Heuristic: no solution.
Cbc0031I 49 added rows had average density of 2
Cbc0013I At root node, 49 cuts changed objective from 230.67763 to 231.79741 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 617 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (8.33 seconds)
Optimality Based BT: 65 improved bounds
Optimality Based BT: 60 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 13 improved bounds
Cbc0010I After 100 nodes, 42 on tree, 1e+50 best solution, best possible 231.8387 (45.82 seconds)
Cbc0010I After 200 nodes, 89 on tree, 1e+50 best solution, best possible 231.83873 (49.50 seconds)
Couenne: new cutoff value 2.3183917770e+02 (85.2661 seconds)
Couenne: new cutoff value 2.3183872711e+02 (85.3326 seconds)
Cbc0004I Integer solution of 231.83873 found after 2140 iterations and 262 nodes (51.65 seconds)
Cbc0001I Search completed - best objective 231.8387271104663, took 2140 iterations and 262 nodes (51.90 seconds)
Cbc0035I Maximum depth 130, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2401
Linearization cuts added in total:           2401  (separation time: 0.015037s)
Total solve time:                          51.942s (51.942s in branch-and-bound)
Lower bound:                              231.839
Upper bound:                              231.839  (gap: 0.00%)
Branch-and-bound nodes:                       262
Stats: /tmp/jl_T26wkO/model.nl 1890 [var]   30 [int] 1920 [con]  269 [aux]   2401 [root]     2401 [tot] 0.015037 [sep]   51.942 [time]  51.9461 [bb]         2.318387e+02 [lower]         2.318387e+02 [upper]     262 [nodes]
Performance of                           FBBT:	   0.920427s,      288 runs. fix:          0 shrnk:    35.0532 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.09388s,        5 runs. fix:        6.8 shrnk:    235.483 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-10.txt
f0 = 0.0008822410212228428
f0 = 0.014115856339565485
f0 = 0.08381289701617006
f0 = 0.08381289701617006
f0 = 0.07499048680394164
f0 = 0.03528964084891371
f0 = 0.01940930246690254
f0 = 0.003528964084891371
f0 = 0.07234376374027311
f0 = 0.07410824578271878
f0 = 0.013233615318342641
f0 = 0.08822410212228428
f0 = 0.08557737905861573
f0 = 0.07057928169782741
f0 = 0.0008822410212228428
f0 = 0.07499048680394164
f0 = 0.007057928169782742
f0 = 0.07675496884638731
f0 = 0.08822410212228428
f0 = 0.057345666379484767
f0 = 0.007940169191005583
f0 = 0.06705031761293605
f0 = 0.017644820424456854
f0 = 0.02205602553057107
f0 = 0.011469133275896956
f0 = 0.014998097360788326
f0 = 0.08822410212228428
f0 = 0.05646342535826194
f0 = 0.042347569018696456
f0 = 0.0432298100399193
