solving instance uflp nldep orlib 133 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      INFEAS 1.0000005      196 9.903599
Loaded instance "/tmp/jl_ETA2Ex/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          394 (0 integer)

Coin0506I Presolve 3139 (-149) rows, 2747 (-297) columns and 13675 (-495) elements
Clp0006I 0  Obj 0 Primal inf 377582.7 (442)
Clp0006I 137  Obj 1.0309548e-10 Primal inf 27401.556 (148)
Clp0006I 258  Obj 1.5659538e-10 Primal inf 12659.637 (185)
Clp0006I 381  Obj 3.7708888e-09 Primal inf 7470.3242 (233)
Clp0006I 497  Obj 0.083521959 Primal inf 79584.443 (315)
Clp0006I 625  Obj 0.21391128 Primal inf 3958308.5 (254)
Clp0006I 755  Obj 681606.84 Primal inf 4429.1796 (304)
Clp0006I 892  Obj 805908.51 Primal inf 738.67264 (205)
Clp0006I 951  Obj 810554.32
Clp0000I Optimal - objective value 810554.16
Clp0032I Optimal objective 810554.159 - 951 iterations time 0.162, Presolve 0.01
Clp0000I Optimal - objective value 810554.16
NLP Heuristic: NLP0014I             2         OPT 810559.51       70 3.35333
no solution.
Clp0000I Optimal - objective value 810554.16
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 11 added rows had average density of 2
Cbc0013I At root node, 11 cuts changed objective from 810554.16 to 810554.16 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 32 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (21.93 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 4 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 810559.95 (138.30 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 810560.21 (142.77 seconds)
Couenne: new cutoff value 8.1056021510e+05 (156.113 seconds)
Cbc0010I After 300 nodes, 84 on tree, 1e+50 best solution, best possible 810578.13 (145.41 seconds)
Cbc0010I After 400 nodes, 34 on tree, 1e+50 best solution, best possible 811428.64 (146.87 seconds)
Cbc0001I Search completed - best objective 1e+50, took 13620 iterations and 468 nodes (148.11 seconds)
Cbc0035I Maximum depth 117, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3288
Linearization cuts added in total:           3288  (separation time: 0.018212s)
Total solve time:                         148.276s (148.276s in branch-and-bound)
Lower bound:                               810560
Upper bound:                               810560  (gap: 0.00%)
Branch-and-bound nodes:                       468
Stats: /tmp/jl_ETA2Ex/model.nl 2650 [var]   50 [int] 2650 [con]  394 [aux]   3288 [root]     3288 [tot] 0.018212 [sep]  148.276 [time]  148.279 [bb]         8.105602e+05 [lower]         8.105602e+05 [upper]     468 [nodes]
Performance of                           FBBT:	    1.52919s,      280 runs. fix:          0 shrnk:    1.82183 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     24.013s,        6 runs. fix:          0 shrnk:     3.3984 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap133.txt
