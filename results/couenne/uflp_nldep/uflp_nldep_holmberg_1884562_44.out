solving instance uflp nldep holmberg 5 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 2.2954999996e+04 (0.082746 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5015.4479       24 0.163199
Couenne: new cutoff value 5.0154486161e+03 (0.248926 seconds)
Loaded instance "/tmp/jl_hv2zv2/model.nl"
Constraints:          570
Variables:            530 (10 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 671 (-20) rows, 551 (-78) columns and 2751 (-98) elements
Clp0006I 0  Obj 0 Primal inf 625.33661 (70)
Clp0006I 88  Obj 4726 Primal inf 18.389739 (17)
Clp0006I 98  Obj 4755.9779
Clp0000I Optimal - objective value 4755.9779
Clp0032I Optimal objective 4755.977858 - 98 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 4755.9779
NLP Heuristic: NLP0014I             2         OPT 5015.4479       12 0.07247
no solution.
Clp0000I Optimal - objective value 4755.9779
Optimality Based BT: 16 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 4755.9779 to 4988.3313 in 9 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 82 row cuts average 2.0 elements, 10 column cuts (10 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.75 seconds)
Optimality Based BT: 18 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 15 improved bounds
Optimality Based BT: 17 improved bounds
Optimality Based BT: 4 improved bounds
Optimality Based BT: 9 improved bounds
Cbc0010I After 100 nodes, 39 on tree, 1e+50 best solution, best possible 5015.4437 (4.73 seconds)
Cbc0010I After 200 nodes, 60 on tree, 1e+50 best solution, best possible 5015.4455 (6.84 seconds)
Cbc0010I After 300 nodes, 70 on tree, 1e+50 best solution, best possible 5015.4464 (8.02 seconds)
Cbc0010I After 400 nodes, 78 on tree, 1e+50 best solution, best possible 5015.4471 (9.12 seconds)
Cbc0010I After 500 nodes, 101 on tree, 1e+50 best solution, best possible 5015.4473 (9.99 seconds)
Cbc0010I After 600 nodes, 116 on tree, 1e+50 best solution, best possible 5015.4475 (10.63 seconds)
Cbc0010I After 700 nodes, 119 on tree, 1e+50 best solution, best possible 5015.4477 (11.23 seconds)
Cbc0010I After 800 nodes, 115 on tree, 1e+50 best solution, best possible 5015.448 (11.85 seconds)
Cbc0010I After 900 nodes, 92 on tree, 1e+50 best solution, best possible 5015.4482 (12.38 seconds)
Cbc0010I After 1000 nodes, 48 on tree, 1e+50 best solution, best possible 5015.4488 (12.77 seconds)
Cbc0001I Search completed - best objective 1e+50, took 3588 iterations and 1096 nodes (13.09 seconds)
Cbc0035I Maximum depth 34, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        691
Linearization cuts added in total:            691  (separation time: 0.003454s)
Total solve time:                         13.1016s (13.1016s in branch-and-bound)
Lower bound:                              5015.45
Upper bound:                              5015.45  (gap: 0.00%)
Branch-and-bound nodes:                      1096
Stats: /tmp/jl_hv2zv2/model.nl  530 [var]   10 [int]  570 [con]   99 [aux]    691 [root]      691 [tot] 0.003454 [sep]  13.1016 [time]  13.1026 [bb]         5.015449e+03 [lower]         5.015449e+03 [upper]    1096 [nodes]
Performance of                           FBBT:	   0.386949s,      599 runs. fix:  0.0396019 shrnk:    3.59051 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.548227s,        7 runs. fix:          0 shrnk:     63.312 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p5
