solving instance uflp nldep holmberg 47 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.5866677387e+04 (0.239715 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2064.2486       21 0.230048
Couenne: new cutoff value 2.0642478890e+03 (0.47446 seconds)
Loaded instance "/tmp/jl_UtsCXb/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1111 (-20) rows, 951 (-118) columns and 4751 (-138) elements
Clp0006I 0  Obj 0 Primal inf 525.35708 (110)
Clp0006I 97  Obj 1420 Primal inf 128.02987 (90)
Clp0006I 133  Obj 1796
Clp0000I Optimal - objective value 1796
Clp0032I Optimal objective 1796 - 133 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 1796
NLP Heuristic: NLP0014I             2         OPT 2064.2486       14 0.14904
no solution.
Clp0000I Optimal - objective value 1796
Optimality Based BT: 18 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 1796 to 1977.2709 in 6 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 55 row cuts average 2.0 elements, 7 column cuts (7 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.77 seconds)
Optimality Based BT: 26 improved bounds
Optimality Based BT: 26 improved bounds
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 2064.2435 (8.04 seconds)
Cbc0010I After 200 nodes, 13 on tree, 1e+50 best solution, best possible 2064.2466 (9.19 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1634 iterations and 250 nodes (9.68 seconds)
Cbc0035I Maximum depth 44, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1131
Linearization cuts added in total:           1131  (separation time: 0.005751s)
Total solve time:                         9.70146s (9.70146s in branch-and-bound)
Lower bound:                              2064.25
Upper bound:                              2064.25  (gap: 0.00%)
Branch-and-bound nodes:                       250
Stats: /tmp/jl_UtsCXb/model.nl  930 [var]   10 [int] 1010 [con]  139 [aux]   1131 [root]     1131 [tot] 0.005751 [sep]  9.70146 [time]  9.70318 [bb]         2.064248e+03 [lower]         2.064248e+03 [upper]     250 [nodes]
Performance of                           FBBT:	   0.220897s,      156 runs. fix:          0 shrnk:    8.89758 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.411722s,        3 runs. fix:          0 shrnk:    79.1703 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p47
