solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-7.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 444.75471       67 200.78794
NLP0014I             2         OPT 450.8329       64 6.062535
Couenne: new cutoff value 4.5083286094e+02 (215.37 seconds)
Loaded instance "/tmp/jl_kHnMKz/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          499 (0 integer)

Coin0506I Presolve 5599 (-202) rows, 5249 (-400) columns and 26097 (-602) elements
Clp0006I 0  Obj 0 Primal inf 3568.2736 (249) Dual inf 7.9034209e+12 (871)
Clp0029I End of values pass after 149 iterations
Clp0006I 149  Obj 450.84286 Primal inf 225.62385 (100) Dual inf 1.196156e+14 (5001)
Clp0006I 398  Obj 450.84286 Primal inf 36.006648 (31) Dual inf 4.2251516e+12 (406)
Clp0006I 592  Obj 450.84286 Primal inf 0.72102807 (3) Dual inf 185592.69 (188)
Clp0006I 736  Obj 371.96757
Clp0000I Optimal - objective value 371.96757
Clp0032I Optimal objective 371.9675727 - 736 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 371.96757
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 371.96757
Optimality Based BT: 102 improved bounds
Probing: 50 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 30 added rows had average density of 2
Cbc0013I At root node, 30 cuts changed objective from 371.96757 to 424.75208 in 11 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 61 row cuts average 2.0 elements, 12 column cuts (12 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (37.98 seconds)
Optimality Based BT: 90 improved bounds
Optimality Based BT: 92 improved bounds
Optimality Based BT: 103 improved bounds
Optimality Based BT: 103 improved bounds
Optimality Based BT: 96 improved bounds
Cbc0010I After 100 nodes, 44 on tree, 1e+50 best solution, best possible 438.6521 (341.78 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 438.6521 (354.49 seconds)
Cbc0010I After 300 nodes, 142 on tree, 1e+50 best solution, best possible 438.6521 (366.03 seconds)
Cbc0010I After 400 nodes, 192 on tree, 1e+50 best solution, best possible 438.6521 (377.10 seconds)
Cbc0010I After 500 nodes, 242 on tree, 1e+50 best solution, best possible 438.6521 (388.48 seconds)
Couenne: new cutoff value 4.4478185126e+02 (604.527 seconds)
Cbc0004I Integer solution of 444.78185 found after 2842 iterations and 502 nodes (388.73 seconds)
Optimality Based BT: 117 improved bounds
Optimality Based BT: 118 improved bounds
Optimality Based BT: 123 improved bounds
Optimality Based BT: 117 improved bounds
Optimality Based BT: 105 improved bounds
Cbc0010I After 600 nodes, 143 on tree, 444.78185 best solution, best possible 439.97428 (671.57 seconds)
Cbc0010I After 700 nodes, 167 on tree, 444.78185 best solution, best possible 440.01929 (689.38 seconds)
Cbc0010I After 800 nodes, 189 on tree, 444.78185 best solution, best possible 440.27101 (704.86 seconds)
Cbc0010I After 900 nodes, 219 on tree, 444.78185 best solution, best possible 440.53753 (721.32 seconds)
Cbc0010I After 1000 nodes, 245 on tree, 444.78185 best solution, best possible 440.63951 (737.20 seconds)
Optimality Based BT: 119 improved bounds
Optimality Based BT: 120 improved bounds
Cbc0010I After 1100 nodes, 275 on tree, 444.78185 best solution, best possible 440.83064 (810.96 seconds)
Cbc0010I After 1200 nodes, 302 on tree, 444.78185 best solution, best possible 440.83064 (826.28 seconds)
Cbc0010I After 1300 nodes, 333 on tree, 444.78185 best solution, best possible 440.83064 (840.28 seconds)
Cbc0010I After 1400 nodes, 353 on tree, 444.78185 best solution, best possible 440.83064 (852.45 seconds)
Couenne: new cutoff value 4.4477022903e+02 (1076.26 seconds)
Cbc0004I Integer solution of 444.77023 found after 13386 iterations and 1455 nodes (860.38 seconds)
Cbc0010I After 1500 nodes, 302 on tree, 444.77023 best solution, best possible 440.97298 (869.42 seconds)
Optimality Based BT: 124 improved bounds
Cbc0010I After 1600 nodes, 333 on tree, 444.77023 best solution, best possible 441.01781 (895.08 seconds)
Cbc0010I After 1700 nodes, 359 on tree, 444.77023 best solution, best possible 441.03759 (911.94 seconds)
Cbc0010I After 1800 nodes, 385 on tree, 444.77023 best solution, best possible 441.05718 (930.68 seconds)
Cbc0010I After 1900 nodes, 406 on tree, 444.77023 best solution, best possible 441.156 (946.19 seconds)
Cbc0010I After 2000 nodes, 428 on tree, 444.77023 best solution, best possible 441.19979 (962.56 seconds)
Cbc0010I After 2100 nodes, 452 on tree, 444.77023 best solution, best possible 441.22086 (979.99 seconds)
Cbc0010I After 2200 nodes, 478 on tree, 444.77023 best solution, best possible 441.24954 (996.13 seconds)
Optimality Based BT: 126 improved bounds
Cbc0010I After 2300 nodes, 504 on tree, 444.77023 best solution, best possible 441.38443 (1092.18 seconds)
Cbc0010I After 2400 nodes, 532 on tree, 444.77023 best solution, best possible 441.39509 (1109.07 seconds)
Cbc0010I After 2500 nodes, 555 on tree, 444.77023 best solution, best possible 441.41925 (1125.46 seconds)
Cbc0010I After 2600 nodes, 584 on tree, 444.77023 best solution, best possible 441.41925 (1141.12 seconds)
Cbc0010I After 2700 nodes, 608 on tree, 444.77023 best solution, best possible 441.42804 (1159.99 seconds)
Cbc0010I After 2800 nodes, 631 on tree, 444.77023 best solution, best possible 441.45879 (1176.90 seconds)
Cbc0010I After 2900 nodes, 658 on tree, 444.77023 best solution, best possible 441.47611 (1193.28 seconds)
Cbc0010I After 3000 nodes, 682 on tree, 444.77023 best solution, best possible 441.48967 (1210.79 seconds)
Cbc0010I After 3100 nodes, 708 on tree, 444.77023 best solution, best possible 441.58151 (1228.05 seconds)
Cbc0010I After 3200 nodes, 733 on tree, 444.77023 best solution, best possible 441.5941 (1243.94 seconds)
Cbc0010I After 3300 nodes, 754 on tree, 444.77023 best solution, best possible 441.62207 (1259.99 seconds)
Cbc0010I After 3400 nodes, 774 on tree, 444.77023 best solution, best possible 441.64311 (1276.17 seconds)
Cbc0010I After 3500 nodes, 797 on tree, 444.77023 best solution, best possible 441.64953 (1291.81 seconds)
Cbc0010I After 3600 nodes, 822 on tree, 444.77023 best solution, best possible 441.74644 (1385.46 seconds)
Cbc0010I After 3700 nodes, 844 on tree, 444.77023 best solution, best possible 441.81021 (1404.86 seconds)
Cbc0010I After 3800 nodes, 869 on tree, 444.77023 best solution, best possible 441.85565 (1422.48 seconds)
Cbc0010I After 3900 nodes, 896 on tree, 444.77023 best solution, best possible 441.90001 (1439.84 seconds)
Cbc0010I After 4000 nodes, 918 on tree, 444.77023 best solution, best possible 441.94015 (1457.40 seconds)
Cbc0010I After 4100 nodes, 942 on tree, 444.77023 best solution, best possible 441.99573 (1473.49 seconds)
Cbc0010I After 4200 nodes, 967 on tree, 444.77023 best solution, best possible 442.01412 (1490.63 seconds)
Cbc0010I After 4300 nodes, 991 on tree, 444.77023 best solution, best possible 442.0292 (1506.86 seconds)
Cbc0010I After 4400 nodes, 1018 on tree, 444.77023 best solution, best possible 442.0357 (1524.58 seconds)
Cbc0010I After 4500 nodes, 1049 on tree, 444.77023 best solution, best possible 442.05285 (1577.57 seconds)
Cbc0010I After 4600 nodes, 1074 on tree, 444.77023 best solution, best possible 442.07925 (1594.57 seconds)
Cbc0010I After 4700 nodes, 1098 on tree, 444.77023 best solution, best possible 442.08788 (1611.97 seconds)
Cbc0010I After 4800 nodes, 1118 on tree, 444.77023 best solution, best possible 442.12303 (1629.19 seconds)
Cbc0010I After 4900 nodes, 1141 on tree, 444.77023 best solution, best possible 442.15288 (1646.23 seconds)
Cbc0010I After 5000 nodes, 1161 on tree, 444.77023 best solution, best possible 442.16519 (1662.72 seconds)
Cbc0010I After 5100 nodes, 1184 on tree, 444.77023 best solution, best possible 442.18625 (1678.72 seconds)
Cbc0010I After 5200 nodes, 1212 on tree, 444.77023 best solution, best possible 442.19076 (1695.76 seconds)
Cbc0010I After 5300 nodes, 1239 on tree, 444.77023 best solution, best possible 442.20542 (1721.53 seconds)
Cbc0010I After 5400 nodes, 1255 on tree, 444.77023 best solution, best possible 442.21447 (1738.75 seconds)
Cbc0010I After 5500 nodes, 1280 on tree, 444.77023 best solution, best possible 442.22672 (1755.34 seconds)
Cbc0010I After 5600 nodes, 1303 on tree, 444.77023 best solution, best possible 442.2339 (1773.65 seconds)
Cbc0010I After 5700 nodes, 1320 on tree, 444.77023 best solution, best possible 442.25138 (1793.14 seconds)
Cbc0010I After 5800 nodes, 1347 on tree, 444.77023 best solution, best possible 442.26012 (1810.81 seconds)
Cbc0010I After 5900 nodes, 1370 on tree, 444.77023 best solution, best possible 442.26371 (1830.95 seconds)
Cbc0010I After 6000 nodes, 1393 on tree, 444.77023 best solution, best possible 442.26934 (1848.81 seconds)
Cbc0010I After 6100 nodes, 1413 on tree, 444.77023 best solution, best possible 442.29888 (1865.23 seconds)
Cbc0010I After 6200 nodes, 1436 on tree, 444.77023 best solution, best possible 442.30355 (1882.99 seconds)
Cbc0010I After 6300 nodes, 1456 on tree, 444.77023 best solution, best possible 442.33088 (1900.50 seconds)
Cbc0010I After 6400 nodes, 1475 on tree, 444.77023 best solution, best possible 442.33367 (1917.73 seconds)
Cbc0010I After 6500 nodes, 1494 on tree, 444.77023 best solution, best possible 442.34075 (1934.50 seconds)
Cbc0010I After 6600 nodes, 1515 on tree, 444.77023 best solution, best possible 442.34923 (1951.77 seconds)
Cbc0010I After 6700 nodes, 1537 on tree, 444.77023 best solution, best possible 442.35257 (1966.51 seconds)
Cbc0010I After 6800 nodes, 1553 on tree, 444.77023 best solution, best possible 442.3793 (1983.91 seconds)
Cbc0010I After 6900 nodes, 1568 on tree, 444.77023 best solution, best possible 442.39716 (2001.65 seconds)
Cbc0010I After 7000 nodes, 1587 on tree, 444.77023 best solution, best possible 442.40708 (2022.64 seconds)
Cbc0010I After 7100 nodes, 1618 on tree, 444.77023 best solution, best possible 442.41155 (2041.32 seconds)
Cbc0010I After 7200 nodes, 1641 on tree, 444.77023 best solution, best possible 442.41855 (2059.21 seconds)
Cbc0010I After 7300 nodes, 1661 on tree, 444.77023 best solution, best possible 442.424 (2076.58 seconds)
Cbc0010I After 7400 nodes, 1679 on tree, 444.77023 best solution, best possible 442.43746 (2094.33 seconds)
Cbc0010I After 7500 nodes, 1693 on tree, 444.77023 best solution, best possible 442.44536 (2111.03 seconds)
Cbc0010I After 7600 nodes, 1717 on tree, 444.77023 best solution, best possible 442.44636 (2128.74 seconds)
Cbc0010I After 7700 nodes, 1737 on tree, 444.77023 best solution, best possible 442.4579 (2152.56 seconds)
Cbc0010I After 7800 nodes, 1754 on tree, 444.77023 best solution, best possible 442.46885 (2169.99 seconds)
Cbc0010I After 7900 nodes, 1780 on tree, 444.77023 best solution, best possible 442.47133 (2187.13 seconds)
Cbc0010I After 8000 nodes, 1807 on tree, 444.77023 best solution, best possible 442.47133 (2203.03 seconds)
Cbc0010I After 8100 nodes, 1821 on tree, 444.77023 best solution, best possible 442.47133 (2216.95 seconds)
Couenne: new cutoff value 4.4477015529e+02 (2445.3 seconds)
Cbc0004I Integer solution of 444.77016 found after 112305 iterations and 8193 nodes (2229.43 seconds)
Cbc0010I After 8200 nodes, 1834 on tree, 444.77016 best solution, best possible 442.47957 (2230.91 seconds)
Cbc0010I After 8300 nodes, 1860 on tree, 444.77016 best solution, best possible 442.48577 (2249.71 seconds)
Cbc0010I After 8400 nodes, 1879 on tree, 444.77016 best solution, best possible 442.50186 (2266.33 seconds)
Cbc0010I After 8500 nodes, 1897 on tree, 444.77016 best solution, best possible 442.51819 (2282.16 seconds)
Cbc0010I After 8600 nodes, 1924 on tree, 444.77016 best solution, best possible 442.52107 (2301.27 seconds)
Cbc0010I After 8700 nodes, 1943 on tree, 444.77016 best solution, best possible 442.54052 (2321.83 seconds)
Cbc0010I After 8800 nodes, 1964 on tree, 444.77016 best solution, best possible 442.56207 (2339.66 seconds)
Cbc0010I After 8900 nodes, 1987 on tree, 444.77016 best solution, best possible 442.57144 (2356.98 seconds)
Cbc0010I After 9000 nodes, 2004 on tree, 444.77016 best solution, best possible 442.59347 (2373.87 seconds)
Cbc0010I After 9100 nodes, 2029 on tree, 444.77016 best solution, best possible 442.59641 (2395.59 seconds)
Cbc0010I After 9200 nodes, 2050 on tree, 444.77016 best solution, best possible 442.60595 (2414.13 seconds)
Cbc0010I After 9300 nodes, 2080 on tree, 444.77016 best solution, best possible 442.63147 (2433.15 seconds)
Cbc0010I After 9400 nodes, 2100 on tree, 444.77016 best solution, best possible 442.63658 (2451.26 seconds)
Cbc0010I After 9500 nodes, 2126 on tree, 444.77016 best solution, best possible 442.63676 (2478.71 seconds)
Cbc0010I After 9600 nodes, 2143 on tree, 444.77016 best solution, best possible 442.65089 (2495.83 seconds)
Cbc0010I After 9700 nodes, 2172 on tree, 444.77016 best solution, best possible 442.65543 (2547.99 seconds)
Cbc0010I After 9800 nodes, 2201 on tree, 444.77016 best solution, best possible 442.65808 (2565.49 seconds)
Cbc0010I After 9900 nodes, 2220 on tree, 444.77016 best solution, best possible 442.66018 (2582.08 seconds)
Cbc0010I After 10000 nodes, 2247 on tree, 444.77016 best solution, best possible 442.67098 (2601.76 seconds)
Cbc0010I After 10100 nodes, 2270 on tree, 444.77016 best solution, best possible 442.67428 (2618.16 seconds)
Cbc0010I After 10200 nodes, 2290 on tree, 444.77016 best solution, best possible 442.67428 (2635.23 seconds)
Cbc0010I After 10300 nodes, 2305 on tree, 444.77016 best solution, best possible 442.67428 (2648.98 seconds)
Couenne: new cutoff value 4.4476916166e+02 (2876.94 seconds)
Cbc0004I Integer solution of 444.76916 found after 142789 iterations and 10392 nodes (2661.06 seconds)
Cbc0010I After 10400 nodes, 2282 on tree, 444.76916 best solution, best possible 442.67503 (2663.20 seconds)
Cbc0010I After 10500 nodes, 2301 on tree, 444.76916 best solution, best possible 442.68152 (2680.89 seconds)
Cbc0010I After 10600 nodes, 2324 on tree, 444.76916 best solution, best possible 442.68723 (2698.67 seconds)
Cbc0010I After 10700 nodes, 2350 on tree, 444.76916 best solution, best possible 442.68851 (2716.61 seconds)
Cbc0010I After 10800 nodes, 2378 on tree, 444.76916 best solution, best possible 442.69356 (2733.11 seconds)
Cbc0010I After 10900 nodes, 2400 on tree, 444.76916 best solution, best possible 442.69617 (2750.32 seconds)
Cbc0010I After 11000 nodes, 2422 on tree, 444.76916 best solution, best possible 442.70569 (2768.11 seconds)
Cbc0010I After 11100 nodes, 2446 on tree, 444.76916 best solution, best possible 442.72363 (2786.53 seconds)
Cbc0010I After 11200 nodes, 2469 on tree, 444.76916 best solution, best possible 442.7324 (2803.62 seconds)
Cbc0010I After 11300 nodes, 2494 on tree, 444.76916 best solution, best possible 442.74328 (2825.04 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 11400 nodes, 2519 on tree, 444.76916 best solution, best possible 442.74681 (2849.31 seconds)
Cbc0010I After 11500 nodes, 2537 on tree, 444.76916 best solution, best possible 442.75409 (2867.04 seconds)
Cbc0010I After 11600 nodes, 2562 on tree, 444.76916 best solution, best possible 442.76409 (2923.41 seconds)
Cbc0010I After 11700 nodes, 2584 on tree, 444.76916 best solution, best possible 442.77204 (2941.65 seconds)
Cbc0010I After 11800 nodes, 2605 on tree, 444.76916 best solution, best possible 442.78415 (2957.95 seconds)
Cbc0010I After 11900 nodes, 2630 on tree, 444.76916 best solution, best possible 442.79625 (2976.39 seconds)
Cbc0010I After 12000 nodes, 2650 on tree, 444.76916 best solution, best possible 442.80436 (3032.46 seconds)
Cbc0010I After 12100 nodes, 2679 on tree, 444.76916 best solution, best possible 442.81233 (3051.00 seconds)
Cbc0010I After 12200 nodes, 2700 on tree, 444.76916 best solution, best possible 442.81864 (3068.86 seconds)
Cbc0010I After 12300 nodes, 2724 on tree, 444.76916 best solution, best possible 442.82609 (3089.30 seconds)
Cbc0010I After 12400 nodes, 2755 on tree, 444.76916 best solution, best possible 442.83157 (3108.21 seconds)
Cbc0010I After 12500 nodes, 2777 on tree, 444.76916 best solution, best possible 442.83157 (3121.60 seconds)
Cbc0010I After 12600 nodes, 2802 on tree, 444.76916 best solution, best possible 442.83219 (3136.88 seconds)
Cbc0010I After 12700 nodes, 2832 on tree, 444.76916 best solution, best possible 442.83219 (3151.47 seconds)
Cbc0010I After 12800 nodes, 2851 on tree, 444.76916 best solution, best possible 442.83219 (3164.97 seconds)
Couenne: new cutoff value 4.4476702277e+02 (3391 seconds)
Cbc0004I Integer solution of 444.76702 found after 177550 iterations and 12874 nodes (3175.12 seconds)
Cbc0010I After 12900 nodes, 2828 on tree, 444.76702 best solution, best possible 442.83267 (3179.60 seconds)
Cbc0010I After 13000 nodes, 2847 on tree, 444.76702 best solution, best possible 442.83608 (3195.15 seconds)
Cbc0010I After 13100 nodes, 2868 on tree, 444.76702 best solution, best possible 442.84543 (3212.75 seconds)
Cbc0010I After 13200 nodes, 2890 on tree, 444.76702 best solution, best possible 442.84949 (3233.21 seconds)
Cbc0010I After 13300 nodes, 2907 on tree, 444.76702 best solution, best possible 442.85791 (3249.08 seconds)
Cbc0010I After 13400 nodes, 2930 on tree, 444.76702 best solution, best possible 442.86138 (3266.41 seconds)
Cbc0010I After 13500 nodes, 2955 on tree, 444.76702 best solution, best possible 442.86239 (3283.51 seconds)
Cbc0010I After 13600 nodes, 2972 on tree, 444.76702 best solution, best possible 442.86902 (3300.32 seconds)
Cbc0010I After 13700 nodes, 2993 on tree, 444.76702 best solution, best possible 442.87182 (3316.24 seconds)
Cbc0010I After 13800 nodes, 3016 on tree, 444.76702 best solution, best possible 442.87659 (3332.70 seconds)
Cbc0010I After 13900 nodes, 3042 on tree, 444.76702 best solution, best possible 442.87916 (3351.06 seconds)
Cbc0010I After 14000 nodes, 3061 on tree, 444.76702 best solution, best possible 442.87986 (3366.98 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 444.76702 (best possible 442.87986), took 196116 iterations and 14095 nodes (3396.33 seconds)
Cbc0035I Maximum depth 251, 936 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5801
Linearization cuts added in total:           5801  (separation time: 0.057005s)
Total solve time:                         3396.53s (3396.53s in branch-and-bound)
Lower bound:                               442.88
Upper bound:                              444.767  (gap: 0.43%)
Branch-and-bound nodes:                     14095
Stats: /tmp/jl_kHnMKz/model.nl 5150 [var]   50 [int] 5200 [con]  499 [aux]   5801 [root]     5801 [tot] 0.057005 [sep]  3396.53 [time]  3396.54 [bb]         4.428799e+02 [lower]         4.447670e+02 [upper]   14095 [nodes]
Performance of                           FBBT:	    269.268s,    18332 runs. fix:  0.0270691 shrnk:    3.21968 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    120.907s,       16 runs. fix:     1.4409 shrnk:    322.099 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-7.txt
