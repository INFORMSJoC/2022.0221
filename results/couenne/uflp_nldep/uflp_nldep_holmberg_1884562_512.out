solving instance uflp nldep holmberg 52 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.8572000000e+04 (0.279782 seconds)
0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6594.0821       33 0.444291
Couenne: new cutoff value 6.5940842157e+03 (0.7512 seconds)
NLP0014I             2         OPT 6594.0822       24 0.236216
Couenne: new cutoff value 6.5940840324e+03 (0.989122 seconds)
Loaded instance "/tmp/jl_eE8Zj4/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          129 (0 integer)

Coin0506I Presolve 1200 (-1) rows, 1050 (-109) columns and 5229 (-110) elements
Clp0006I 0  Obj -10904.062 Primal inf 530075.34 (110)
Clp0006I 99  Obj 1941.6308 Primal inf 10612.608 (100)
Clp0006I 198  Obj 5579.2238 Primal inf 514.37175 (9)
Clp0006I 206  Obj 5639.8529
Clp0000I Optimal - objective value 5639.8529
Clp0032I Optimal objective 5639.85288 - 206 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 5639.8529
NLP Heuristic: NLP0014I             3         OPT 6594.0821       30 0.322959
no solution.
Clp0000I Optimal - objective value 5639.8529
Optimality Based BT: 5 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 5639.8529 to 6034.3817 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 59 row cuts average 2.0 elements, 87 column cuts (87 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.87 seconds)
Optimality Based BT: 3 improved bounds
Optimality Based BT: 5 improved bounds
Cbc0010I After 100 nodes, 10 on tree, 1e+50 best solution, best possible 6476.0423 (8.39 seconds)
Couenne: new cutoff value 6.5940830346e+03 (9.59231 seconds)
Cbc0010I After 200 nodes, 14 on tree, 1e+50 best solution, best possible 6582.3497 (11.58 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2410 iterations and 266 nodes (12.58 seconds)
Cbc0035I Maximum depth 58, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.005575s)
Total solve time:                         12.5888s (12.5888s in branch-and-bound)
Lower bound:                              6594.08
Upper bound:                              6594.08  (gap: 0.00%)
Branch-and-bound nodes:                       266
Stats: /tmp/jl_eE8Zj4/model.nl 1030 [var]   10 [int] 1120 [con]  129 [aux]   1201 [root]     1201 [tot] 0.005575 [sep]  12.5888 [time]  12.5905 [bb]         6.594083e+03 [lower]         6.594083e+03 [upper]     266 [nodes]
Performance of                           FBBT:	    0.39238s,      297 runs. fix:          0 shrnk:    5.31019 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.599553s,        3 runs. fix:   0.333333 shrnk:    12.1364 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p52
