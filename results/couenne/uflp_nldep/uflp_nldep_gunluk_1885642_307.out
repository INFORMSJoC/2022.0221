solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-10.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 385.21449       63 61.785281
NLP0014I             2         OPT 385.40951       46 2.330755
Couenne: new cutoff value 3.8540824514e+02 (67.4697 seconds)
Loaded instance "/tmp/jl_Xvknvi/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14147.007 (520)
Clp0006I 152  Obj 3.4665711e-14 Primal inf 5101.624 (170)
Clp0006I 304  Obj 382.84692 Primal inf 109.83898 (132)
Clp0006I 456  Obj 384.24617 Primal inf 1453.5029 (11)
Clp0006I 462  Obj 384.25083
Clp0000I Optimal - objective value 384.25083
Clp0032I Optimal objective 384.2508338 - 462 iterations time 0.052, Presolve 0.02
Clp0000I Optimal - objective value 384.25083
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 384.25083
Optimality Based BT: 73 improved bounds
Probing: 7 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 56 added rows had average density of 2
Cbc0013I At root node, 56 cuts changed objective from 384.25083 to 385.07212 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 229 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (16.55 seconds)
Optimality Based BT: 49 improved bounds
Optimality Based BT: 35 improved bounds
Optimality Based BT: 34 improved bounds
Optimality Based BT: 38 improved bounds
Optimality Based BT: 34 improved bounds
Optimality Based BT: 33 improved bounds
Cbc0010I After 100 nodes, 28 on tree, 1e+50 best solution, best possible 385.19298 (119.35 seconds)
Cbc0010I After 200 nodes, 74 on tree, 1e+50 best solution, best possible 385.19298 (126.43 seconds)
Cbc0010I After 300 nodes, 124 on tree, 1e+50 best solution, best possible 385.19298 (133.57 seconds)
Cbc0010I After 400 nodes, 174 on tree, 1e+50 best solution, best possible 385.19298 (140.69 seconds)
Couenne: new cutoff value 3.8521506672e+02 (209.428 seconds)
Cbc0004I Integer solution of 385.21507 found after 2801 iterations and 415 nodes (141.76 seconds)
Optimality Based BT: 7 improved bounds
Cbc0001I Search completed - best objective 385.2150667218403, took 3673 iterations and 445 nodes (148.53 seconds)
Cbc0035I Maximum depth 207, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.0294s)
Total solve time:                         148.593s (148.593s in branch-and-bound)
Lower bound:                              385.215
Upper bound:                              385.215  (gap: 0.00%)
Branch-and-bound nodes:                       445
Stats: /tmp/jl_Xvknvi/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.0294 [sep]  148.593 [time]    148.6 [bb]         3.852151e+02 [lower]         3.852151e+02 [upper]     445 [nodes]
Performance of                           FBBT:	    3.09159s,      478 runs. fix:          0 shrnk:    45.9369 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    26.2737s,        8 runs. fix:    3.84242 shrnk:    158.815 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-10.txt
f0 = 0.0008822410212228425
f0 = 0.01411585633956548
f0 = 0.08381289701617003
f0 = 0.08381289701617003
f0 = 0.0749904868039416
f0 = 0.03528964084891369
f0 = 0.019409302466902534
f0 = 0.00352896408489137
f0 = 0.07234376374027307
f0 = 0.07410824578271875
f0 = 0.013233615318342636
f0 = 0.08822410212228424
f0 = 0.0855773790586157
f0 = 0.07057928169782739
f0 = 0.0008822410212228425
f0 = 0.0749904868039416
f0 = 0.00705792816978274
f0 = 0.07675496884638729
f0 = 0.08822410212228424
f0 = 0.057345666379484746
f0 = 0.00794016919100558
f0 = 0.06705031761293602
f0 = 0.017644820424456847
f0 = 0.02205602553057106
f0 = 0.01146913327589695
f0 = 0.01499809736078832
f0 = 0.08822410212228424
f0 = 0.05646342535826192
f0 = 0.042347569018696435
f0 = 0.043229810039919284
f0 = 0.06087463046437613
f0 = 0.0811661739525015
f0 = 0.03264291778524517
f0 = 0.024702748594239585
f0 = 0.07763720986761014
f0 = 0.0291139537003538
f0 = 0.06793255863415887
f0 = 0.010586892254674109
f0 = 0.04940549718847917
f0 = 0.02823171267913096
