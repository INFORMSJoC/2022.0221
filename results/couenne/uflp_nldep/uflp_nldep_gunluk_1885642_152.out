solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 9.0019584042e+02 (0.200716 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 366.4222       42 0.506786
NLP0014I             2         OPT 369.59447       25 0.247552
Loaded instance "/tmp/jl_pjJZpK/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 1040 (-1) rows, 900 (-59) columns and 4459 (-60) elements
Clp0006I 0  Obj -2458.125 Primal inf 1223849.2 (60)
Clp0006I 93  Obj -1753.0889 Primal inf 3650283.1 (119)
Clp0006I 188  Obj 45.861185 Primal inf 4238.0328 (43)
Clp0006I 283  Obj 279.04194 Primal inf 5325.7709 (5)
Clp0006I 290  Obj 279.78767
Clp0000I Optimal - objective value 279.78767
Clp0000I Optimal - objective value 279.78767
Clp0032I Optimal objective 279.7876712 - 290 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 279.78767
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 279.78767
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: Couenne: new cutoff value 4.0259338694e+02 (2.31761 seconds)
no solution.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 279.78767 to 280.00179 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 116 row cuts average 2.0 elements, 130 column cuts (130 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.58 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 34 on tree, 1e+50 best solution, best possible 280.37753 (11.67 seconds)
Cbc0010I After 200 nodes, 84 on tree, 1e+50 best solution, best possible 280.37753 (13.77 seconds)
Couenne: new cutoff value 3.8584866253e+02 (15.5874 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 116 on tree, 1e+50 best solution, best possible 283.26505 (20.59 seconds)
Cbc0010I After 400 nodes, 160 on tree, 1e+50 best solution, best possible 283.26505 (22.70 seconds)
Cbc0010I After 500 nodes, 210 on tree, 1e+50 best solution, best possible 283.26505 (24.63 seconds)
Couenne: new cutoff value 3.7515506180e+02 (26.1318 seconds)
Cbc0010I After 600 nodes, 231 on tree, 1e+50 best solution, best possible 320.53477 (26.52 seconds)
Cbc0010I After 700 nodes, 271 on tree, 1e+50 best solution, best possible 320.53477 (28.65 seconds)
Couenne: new cutoff value 3.6637612768e+02 (31.3109 seconds)
Cbc0010I After 800 nodes, 313 on tree, 1e+50 best solution, best possible 323.59091 (30.50 seconds)
Cbc0010I After 900 nodes, 324 on tree, 1e+50 best solution, best possible 342.46137 (32.33 seconds)
Cbc0010I After 1000 nodes, 339 on tree, 1e+50 best solution, best possible 344.93801 (34.23 seconds)
Cbc0010I After 1100 nodes, 345 on tree, 1e+50 best solution, best possible 346.82984 (36.62 seconds)
Cbc0010I After 1200 nodes, 349 on tree, 1e+50 best solution, best possible 348.1685 (38.38 seconds)
Cbc0010I After 1300 nodes, 352 on tree, 1e+50 best solution, best possible 350.62196 (40.14 seconds)
Cbc0010I After 1400 nodes, 348 on tree, 1e+50 best solution, best possible 354.19576 (41.81 seconds)
Cbc0010I After 1500 nodes, 335 on tree, 1e+50 best solution, best possible 358.49152 (43.43 seconds)
Cbc0010I After 1600 nodes, 322 on tree, 1e+50 best solution, best possible 361.9515 (45.05 seconds)
Cbc0010I After 1700 nodes, 313 on tree, 1e+50 best solution, best possible 364.27919 (46.71 seconds)
Cbc0010I After 1800 nodes, 333 on tree, 1e+50 best solution, best possible 364.27919 (48.53 seconds)
Couenne: new cutoff value 3.6633679070e+02 (50.1084 seconds)
Cbc0010I After 1900 nodes, 335 on tree, 1e+50 best solution, best possible 365.4151 (50.11 seconds)
Cbc0010I After 2000 nodes, 316 on tree, 1e+50 best solution, best possible 366.26975 (52.13 seconds)
Cbc0010I After 2100 nodes, 287 on tree, 1e+50 best solution, best possible 366.35126 (53.19 seconds)
Cbc0010I After 2200 nodes, 237 on tree, 1e+50 best solution, best possible 366.53973 (53.77 seconds)
Cbc0010I After 2300 nodes, 187 on tree, 1e+50 best solution, best possible 375.05584 (54.24 seconds)
Cbc0010I After 2400 nodes, 137 on tree, 1e+50 best solution, best possible 375.27282 (54.76 seconds)
Cbc0010I After 2500 nodes, 87 on tree, 1e+50 best solution, best possible 384.60953 (55.22 seconds)
Cbc0010I After 2600 nodes, 37 on tree, 1e+50 best solution, best possible 385.9371 (55.68 seconds)
Cbc0001I Search completed - best objective 1e+50, took 64052 iterations and 2674 nodes (55.99 seconds)
Cbc0035I Maximum depth 140, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1041
Linearization cuts added in total:           1041  (separation time: 0.005487s)
Total solve time:                         56.0012s (56.0012s in branch-and-bound)
Lower bound:                              366.337
Upper bound:                              366.337  (gap: 0.00%)
Branch-and-bound nodes:                      2674
Stats: /tmp/jl_pjJZpK/model.nl  860 [var]   20 [int]  880 [con]   99 [aux]   1041 [root]     1041 [tot] 0.005487 [sep]  56.0012 [time]  56.0021 [bb]         3.663368e+02 [lower]         3.663368e+02 [upper]    2674 [nodes]
Performance of                           FBBT:	    2.71586s,     2867 runs. fix:          0 shrnk:    2.87679 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.37305s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt
