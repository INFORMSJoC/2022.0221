solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-10.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.2847448560e+03 (0.201435 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 417.25068       42 0.545422
NLP0014I             2         OPT 417.2507       25 0.248857
Loaded instance "/tmp/jl_ZJKdOC/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 1040 (-1) rows, 900 (-59) columns and 4459 (-60) elements
Clp0006I 0  Obj -3268.125 Primal inf 1161557.5 (60)
Clp0006I 95  Obj -638.01279 Primal inf 3218412.9 (104)
Clp0006I 190  Obj 113.52227 Primal inf 11088.093 (43)
Clp0006I 266  Obj 278.67426
Clp0000I Optimal - objective value 278.67426
Clp0000I Optimal - objective value 278.67426
Clp0032I Optimal objective 278.6742622 - 266 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 278.67426
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 278.67426
Optimality Based BT: 0 improved bounds
Probing: Couenne: new cutoff value 4.1725084595e+02 (1.43202 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 11 added rows had average density of 2
Cbc0013I At root node, 11 cuts changed objective from 278.67426 to 280.53331 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 134 row cuts average 2.0 elements, 403 column cuts (403 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.27 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 29 on tree, 1e+50 best solution, best possible 288.53378 (12.56 seconds)
Couenne: new cutoff value 4.1715149729e+02 (15.1762 seconds)
Cbc0010I After 200 nodes, 62 on tree, 1e+50 best solution, best possible 288.53378 (14.17 seconds)
Couenne: new cutoff value 4.1715115650e+02 (15.2361 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 83 on tree, 1e+50 best solution, best possible 330.02154 (22.29 seconds)
Cbc0010I After 400 nodes, 124 on tree, 1e+50 best solution, best possible 330.02154 (23.83 seconds)
Couenne: new cutoff value 4.1703135571e+02 (24.8971 seconds)
Cbc0010I After 500 nodes, 138 on tree, 1e+50 best solution, best possible 385.64283 (26.45 seconds)
Couenne: new cutoff value 4.1668238388e+02 (28.6855 seconds)
Cbc0010I After 600 nodes, 173 on tree, 1e+50 best solution, best possible 385.77901 (28.15 seconds)
Cbc0010I After 700 nodes, 191 on tree, 1e+50 best solution, best possible 387.82279 (30.15 seconds)
Cbc0010I After 800 nodes, 208 on tree, 1e+50 best solution, best possible 396.11878 (32.05 seconds)
Cbc0010I After 900 nodes, 220 on tree, 1e+50 best solution, best possible 409.31688 (33.85 seconds)
Cbc0010I After 1000 nodes, 266 on tree, 1e+50 best solution, best possible 409.31688 (35.62 seconds)
Couenne: new cutoff value 4.1481518496e+02 (37.1449 seconds)
Cbc0010I After 1100 nodes, 294 on tree, 1e+50 best solution, best possible 410.22776 (37.35 seconds)
Cbc0010I After 1200 nodes, 310 on tree, 1e+50 best solution, best possible 410.51844 (39.22 seconds)
Cbc0010I After 1300 nodes, 323 on tree, 1e+50 best solution, best possible 410.88752 (40.96 seconds)
Cbc0010I After 1400 nodes, 337 on tree, 1e+50 best solution, best possible 411.07699 (42.72 seconds)
Cbc0010I After 1500 nodes, 337 on tree, 1e+50 best solution, best possible 411.83363 (44.34 seconds)
Cbc0010I After 1600 nodes, 334 on tree, 1e+50 best solution, best possible 412.20954 (45.96 seconds)
Cbc0010I After 1700 nodes, 331 on tree, 1e+50 best solution, best possible 412.52777 (47.64 seconds)
Cbc0010I After 1800 nodes, 325 on tree, 1e+50 best solution, best possible 412.80042 (49.20 seconds)
Cbc0010I After 1900 nodes, 310 on tree, 1e+50 best solution, best possible 413.04035 (50.63 seconds)
Cbc0010I After 2000 nodes, 292 on tree, 1e+50 best solution, best possible 413.40337 (52.14 seconds)
Cbc0010I After 2100 nodes, 271 on tree, 1e+50 best solution, best possible 413.90611 (53.61 seconds)
Cbc0010I After 2200 nodes, 233 on tree, 1e+50 best solution, best possible 414.455 (54.81 seconds)
Cbc0010I After 2300 nodes, 187 on tree, 1e+50 best solution, best possible 414.83476 (55.62 seconds)
Cbc0010I After 2400 nodes, 137 on tree, 1e+50 best solution, best possible 415.9074 (56.07 seconds)
Cbc0010I After 2500 nodes, 87 on tree, 1e+50 best solution, best possible 416.91989 (56.48 seconds)
Cbc0010I After 2600 nodes, 37 on tree, 1e+50 best solution, best possible 417.14385 (56.90 seconds)
Cbc0001I Search completed - best objective 1e+50, took 37667 iterations and 2674 nodes (57.21 seconds)
Cbc0035I Maximum depth 104, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1041
Linearization cuts added in total:           1041  (separation time: 0.004822s)
Total solve time:                         57.2233s (57.2233s in branch-and-bound)
Lower bound:                              414.815
Upper bound:                              414.815  (gap: 0.00%)
Branch-and-bound nodes:                      2674
Stats: /tmp/jl_ZJKdOC/model.nl  860 [var]   20 [int]  880 [con]   99 [aux]   1041 [root]     1041 [tot] 0.004822 [sep]  57.2233 [time]  57.2242 [bb]         4.148152e+02 [lower]         4.148152e+02 [upper]    2674 [nodes]
Performance of                           FBBT:	    2.83606s,     2999 runs. fix:          0 shrnk:    2.53964 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     2.6998s,        7 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-10.txt
