solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-9.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 6.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 395.07603       60 170.87357
NLP0014I             2         OPT 395.22521       39 3.218179
Couenne: new cutoff value 3.9522544465e+02 (181.528 seconds)
Loaded instance "/tmp/jl_CllYkI/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          449 (0 integer)

Coin0506I Presolve 5849 (-152) rows, 5249 (-350) columns and 26547 (-502) elements
Clp0006I 0  Obj 0 Primal inf 19673.208 (650) Dual inf 1.2219239e+15 (5150)
Clp0006I 198  Obj 0 Primal inf 2325.7659 (234) Dual inf 3.7413434e+14 (869)
Clp0006I 476  Obj 1699.3195 Primal inf 401.30921 (84) Dual inf 3316949.9 (1627)
Clp0006I 670  Obj 1849.6042 Primal inf 379.3023 (61) Dual inf 84934.737 (155)
Clp0006I 863  Obj 1557.616 Primal inf 294.80751 (60) Dual inf 13333963 (695)
Clp0006I 1055  Obj 1417.6079 Primal inf 204.51586 (23) Dual inf 21337252 (1552)
Clp0006I 1249  Obj 1083.9531 Primal inf 134.37761 (24) Dual inf 19857320 (1557)
Clp0006I 1442  Obj 934.47971 Primal inf 116.2053 (13) Dual inf 17511445 (1429)
Clp0006I 1636  Obj 828.33981 Primal inf 94.739506 (9) Dual inf 11826493 (791)
Clp0006I 1827  Obj 698.28634 Primal inf 61.80254 (8) Dual inf 5107065.4 (468)
Clp0006I 2019  Obj 544.1297 Primal inf 20.292431 (4) Dual inf 36401.057 (48)
Clp0006I 2211  Obj 481.45493 Primal inf 1.5473374 (4) Dual inf 94059.007 (169)
Clp0006I 2402  Obj 457.08176 Primal inf 0.64526273 (2) Dual inf 14650.8 (114)
Clp0006I 2593  Obj 396.39007 Primal inf 0.011499629 (1) Dual inf 44.110066 (41)
Clp0006I 2667  Obj 394.17054
Clp0000I Optimal - objective value 394.17054
Clp0032I Optimal objective 394.1705449 - 2667 iterations time 0.432, Presolve 0.02
Clp0000I Optimal - objective value 394.17055
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 394.17055
Optimality Based BT: 109 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 77 added rows had average density of 2
Cbc0013I At root node, 77 cuts changed objective from 394.17055 to 394.97662 in 9 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 188 row cuts average 2.0 elements, 10 column cuts (10 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (29.17 seconds)
Optimality Based BT: 93 improved bounds
Optimality Based BT: 97 improved bounds
Optimality Based BT: 93 improved bounds
Optimality Based BT: 89 improved bounds
Optimality Based BT: 81 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 1e+50 best solution, best possible 395.0639 (229.34 seconds)
Cbc0010I After 200 nodes, 87 on tree, 1e+50 best solution, best possible 395.0639 (238.83 seconds)
Cbc0010I After 300 nodes, 135 on tree, 1e+50 best solution, best possible 395.0639 (248.62 seconds)
Cbc0010I After 400 nodes, 183 on tree, 1e+50 best solution, best possible 395.0639 (258.25 seconds)
Cbc0010I After 500 nodes, 233 on tree, 1e+50 best solution, best possible 395.0639 (267.84 seconds)
Couenne: new cutoff value 3.9507768520e+02 (450.935 seconds)
Cbc0004I Integer solution of 395.07769 found after 3410 iterations and 509 nodes (268.67 seconds)
Cbc0010I After 600 nodes, 23 on tree, 395.07769 best solution, best possible 395.06833 (279.24 seconds)
Optimality Based BT: 92 improved bounds
Cbc0010I After 700 nodes, 36 on tree, 395.07769 best solution, best possible 395.06899 (347.73 seconds)
Couenne: new cutoff value 3.9507746462e+02 (533.722 seconds)
Cbc0004I Integer solution of 395.07746 found after 5633 iterations and 758 nodes (351.46 seconds)
Cbc0010I After 800 nodes, 20 on tree, 395.07746 best solution, best possible 395.07046 (355.22 seconds)
Cbc0010I After 900 nodes, 26 on tree, 395.07746 best solution, best possible 395.07046 (362.97 seconds)
Cbc0010I After 1000 nodes, 30 on tree, 395.07746 best solution, best possible 395.07046 (370.79 seconds)
Cbc0010I After 1100 nodes, 36 on tree, 395.07746 best solution, best possible 395.07046 (379.00 seconds)
Couenne: new cutoff value 3.9507738365e+02 (570.337 seconds)
Cbc0004I Integer solution of 395.07738 found after 8203 iterations and 1196 nodes (388.08 seconds)
Cbc0010I After 1200 nodes, 54 on tree, 395.07738 best solution, best possible 395.07166 (388.65 seconds)
Cbc0010I After 1300 nodes, 58 on tree, 395.07738 best solution, best possible 395.07295 (401.26 seconds)
Optimality Based BT: 91 improved bounds
Cbc0010I After 1400 nodes, 56 on tree, 395.07738 best solution, best possible 395.07402 (416.25 seconds)
Optimality Based BT: 85 improved bounds
Cbc0010I After 1500 nodes, 58 on tree, 395.07738 best solution, best possible 395.07455 (429.45 seconds)
Cbc0010I After 1600 nodes, 63 on tree, 395.07738 best solution, best possible 395.07455 (437.04 seconds)
Cbc0010I After 1700 nodes, 65 on tree, 395.07738 best solution, best possible 395.07455 (444.68 seconds)
Cbc0010I After 1800 nodes, 72 on tree, 395.07738 best solution, best possible 395.07455 (452.87 seconds)
Couenne: new cutoff value 3.9507710067e+02 (641.43 seconds)
Cbc0004I Integer solution of 395.0771 found after 13710 iterations and 1869 nodes (459.17 seconds)
Cbc0010I After 1900 nodes, 48 on tree, 395.0771 best solution, best possible 395.07465 (463.99 seconds)
Cbc0010I After 2000 nodes, 45 on tree, 395.0771 best solution, best possible 395.07555 (471.79 seconds)
Cbc0010I After 2100 nodes, 41 on tree, 395.0771 best solution, best possible 395.07595 (481.15 seconds)
Cbc0010I After 2200 nodes, 41 on tree, 395.0771 best solution, best possible 395.07617 (488.34 seconds)
Cbc0010I After 2300 nodes, 44 on tree, 395.0771 best solution, best possible 395.07619 (495.92 seconds)
Cbc0010I After 2400 nodes, 44 on tree, 395.0771 best solution, best possible 395.07636 (503.13 seconds)
Cbc0010I After 2500 nodes, 44 on tree, 395.0771 best solution, best possible 395.07637 (510.26 seconds)
Cbc0010I After 2600 nodes, 44 on tree, 395.0771 best solution, best possible 395.07637 (517.49 seconds)
Cbc0010I After 2700 nodes, 48 on tree, 395.0771 best solution, best possible 395.07637 (525.32 seconds)
Couenne: new cutoff value 3.9507703667e+02 (712.43 seconds)
Cbc0004I Integer solution of 395.07704 found after 20155 iterations and 2766 nodes (530.17 seconds)
Cbc0010I After 2800 nodes, 21 on tree, 395.07704 best solution, best possible 395.07643 (533.01 seconds)
Cbc0010I After 2900 nodes, 21 on tree, 395.07704 best solution, best possible 395.07643 (540.34 seconds)
Cbc0010I After 3000 nodes, 18 on tree, 395.07704 best solution, best possible 395.07663 (547.46 seconds)
Cbc0010I After 3100 nodes, 18 on tree, 395.07704 best solution, best possible 395.07668 (554.80 seconds)
Cbc0010I After 3200 nodes, 18 on tree, 395.07704 best solution, best possible 395.07669 (562.25 seconds)
Cbc0010I After 3300 nodes, 17 on tree, 395.07704 best solution, best possible 395.07671 (569.62 seconds)
Cbc0010I After 3400 nodes, 16 on tree, 395.07704 best solution, best possible 395.07674 (576.94 seconds)
Cbc0010I After 3500 nodes, 13 on tree, 395.07704 best solution, best possible 395.07686 (584.26 seconds)
Cbc0010I After 3600 nodes, 9 on tree, 395.07704 best solution, best possible 395.07694 (591.59 seconds)
Cbc0010I After 3700 nodes, 1 on tree, 395.07704 best solution, best possible 395.07702 (598.98 seconds)
Cbc0001I Search completed - best objective 395.0770366659106, took 26271 iterations and 3712 nodes (599.92 seconds)
Cbc0035I Maximum depth 254, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6001
Linearization cuts added in total:           6001  (separation time: 0.04791s)
Total solve time:                         600.378s (600.378s in branch-and-bound)
Lower bound:                              395.077
Upper bound:                              395.077  (gap: 0.00%)
Branch-and-bound nodes:                      3712
Stats: /tmp/jl_CllYkI/model.nl 5150 [var]   50 [int] 5200 [con]  449 [aux]   6001 [root]     6001 [tot] 0.04791 [sep]  600.378 [time]  600.389 [bb]         3.950770e+02 [lower]         3.950770e+02 [upper]    3712 [nodes]
Performance of                           FBBT:	    25.9908s,     2401 runs. fix:          0 shrnk:    22.4847 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    47.9706s,        9 runs. fix:    100.017 shrnk:    462.709 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-9.txt
f0 = 0.07410824578271878
f0 = 0.007057928169782742
f0 = 0.08822410212228428
f0 = 0.023820507573016753
f0 = 0.05469894331581625
f0 = 0.07851945088883301
f0 = 0.005293446127337057
f0 = 0.059992389443153306
f0 = 0.08822410212228428
f0 = 0.06881479965538173
f0 = 0.07675496884638731
f0 = 0.02205602553057107
f0 = 0.07675496884638731
f0 = 0.051169979230924874
f0 = 0.046758774124810665
f0 = 0.006175687148559899
f0 = 0.06705031761293605
f0 = 0.03881860493380508
f0 = 0.023820507573016753
f0 = 0.06440359454926753
f0 = 0.027349471657908124
f0 = 0.014115856339565485
f0 = 0.011469133275896956
f0 = 0.017644820424456854
f0 = 0.07763720986761016
f0 = 0.024702748594239595
f0 = 0.0017644820424456856
f0 = 0.030878435742799498
f0 = 0.04940549718847919
f0 = 0.024702748594239595
f0 = 0.015880338382011167
f0 = 0.06087463046437615
f0 = 0.06263911250682185
f0 = 0.005293446127337057
f0 = 0.04852325616725635
f0 = 0.04499429208236498
f0 = 0.005293446127337057
f0 = 0.027349471657908124
f0 = 0.059992389443153306
f0 = 0.017644820424456854
f0 = 0.06352135352804467
f0 = 0.026467230636685282
f0 = 0.026467230636685282
f0 = 0.05646342535826194
f0 = 0.06440359454926753
f0 = 0.034407399827690865
f0 = 0.0661680765917132
f0 = 0.0679325586341589
f0 = 0.05822790740070763
f0 = 0.051169979230924874
