solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-6.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 135.05084       79 0.295303
Couenne: new cutoff value 1.3505089196e+02 (0.324069 seconds)
NLP0014I             2         OPT 135.05085       34 0.083519
Couenne: new cutoff value 1.3505084732e+02 (0.40874 seconds)
Loaded instance "/tmp/jl_gofOAP/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           89 (0 integer)

Coin0506I Presolve 369 (-32) rows, 249 (-70) columns and 1307 (-102) elements
Clp0006I 0  Obj 0 Primal inf 2185.99 (130)
Clp0006I 66  Obj 77.641937 Primal inf 191740.97 (60)
Clp0006I 130  Obj 129.73955
Clp0000I Optimal - objective value 129.73955
Clp0032I Optimal objective 129.7395468 - 130 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 129.73955
NLP Heuristic: NLP0014I             3         OPT 135.05084       15 0.043428
no solution.
Clp0000I Optimal - objective value 129.73955
Optimality Based BT: 21 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 18 added rows had average density of 2
Cbc0013I At root node, 18 cuts changed objective from 129.73955 to 130.59493 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 46 row cuts average 2.0 elements, 8 column cuts (8 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.50 seconds)
Optimality Based BT: 18 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 16 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 16 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 17 improved bounds
Optimality Based BT: 22 improved bounds
Cbc0010I After 100 nodes, 1 on tree, 1e+50 best solution, best possible 134.7363 (5.37 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2046 iterations and 102 nodes (5.38 seconds)
Cbc0035I Maximum depth 16, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        401
Linearization cuts added in total:            401  (separation time: 0.001809s)
Total solve time:                          5.3814s (5.3814s in branch-and-bound)
Lower bound:                              135.051
Upper bound:                              135.051  (gap: 0.00%)
Branch-and-bound nodes:                       102
Stats: /tmp/jl_gofOAP/model.nl  230 [var]   10 [int]  240 [con]   89 [aux]    401 [root]      401 [tot] 0.001809 [sep]   5.3814 [time]  5.38198 [bb]         1.350508e+02 [lower]         1.350508e+02 [upper]     102 [nodes]
Performance of                           FBBT:	   0.066268s,      233 runs. fix:          0 shrnk:    7.50959 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     1.0885s,        9 runs. fix:    1.31707 shrnk:    25.5559 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-6.txt
f0 = 0.06528583557049034
f0 = 0.07410824578271875
f0 = 0.0008822410212228425
f0 = 0.06793255863415887
f0 = 0.06352135352804464
f0 = 0.0855773790586157
f0 = 0.057345666379484746
f0 = 0.06087463046437613
f0 = 0.052052220252147695
f0 = 0.055581184337039076
