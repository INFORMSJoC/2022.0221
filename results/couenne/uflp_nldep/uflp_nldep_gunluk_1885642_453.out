solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-5.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.0676248352e+03 (6.70132 seconds)
6.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 338.58243       32 1.925893
Couenne: new cutoff value 3.3858382737e+02 (9.41348 seconds)
NLP0014I             2         OPT 338.5825       37 3.306863
Couenne: new cutoff value 3.3858326604e+02 (12.7254 seconds)
Loaded instance "/tmp/jl_wJF7j9/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          349 (0 integer)

Coin0506I Presolve 5641 (-60) rows, 5291 (-208) columns and 26131 (-268) elements
Clp0006I 0  Obj 0 Primal inf 283.59024 (100) Dual inf 1.566142e+14 (5000)
Clp0006I 275  Obj 721.13497 Primal inf 12.908258 (1) Dual inf 1.2560092e+12 (390)
Clp0006I 487  Obj 374.67147 Primal inf 1.2174005 (1) Dual inf 5.0146926e+10 (77)
Clp0006I 582  Obj 335.52237
Clp0000I Optimal - objective value 335.52237
Clp0032I Optimal objective 335.5223727 - 582 iterations time 0.112, Presolve 0.07
Clp0000I Optimal - objective value 335.52237
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 335.52237
Optimality Based BT: 115 improved bounds
Probing: 0 improved bounds
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 72 added rows had average density of 2
Cbc0013I At root node, 72 cuts changed objective from 335.52237 to 338.58331 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 172 row cuts average 2.0 elements, 49 column cuts (49 active)
Cbc0001I Search completed - best objective 1e+50, took 211 iterations and 0 nodes (23.91 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       5701
Linearization cuts added in total:           5701  (separation time: 0.038569s)
Total solve time:                         24.0277s (24.0277s in branch-and-bound)
Lower bound:                              338.583
Upper bound:                              338.583  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_wJF7j9/model.nl 5150 [var]   50 [int] 5200 [con]  349 [aux]   5701 [root]     5701 [tot] 0.038569 [sep]  24.0277 [time]  24.0356 [bb]         3.385833e+02 [lower]         3.385833e+02 [upper]       0 [nodes]
Performance of                           FBBT:	   0.073879s,        7 runs. fix:          0 shrnk:    181.235 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.85076s,        1 runs. fix:          0 shrnk:    659.577 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-5.txt
