solving instance uflp nldep holmberg 48 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.4323000000e+04 (0.724162 seconds)
0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2901.6946       33 0.824054
Couenne: new cutoff value 3.2174468240e+03 (1.7162 seconds)
NLP0014I             2         OPT 3094.426       27 0.47212
Couenne: new cutoff value 3.0944244720e+03 (2.19045 seconds)
Loaded instance "/tmp/jl_MChJvw/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1880 (-1) rows, 1700 (-99) columns and 8459 (-100) elements
Clp0006I 0  Obj -22224.375 Primal inf 822498.16 (100)
Clp0006I 112  Obj -2910.899 Primal inf 479736.24 (112)
Clp0006I 224  Obj 377.03016 Primal inf 5511.9301 (80)
Clp0006I 336  Obj 1877.5747 Primal inf 350.0158 (5)
Clp0006I 349  Obj 1938.4814
Clp0000I Optimal - objective value 1938.4814
Clp0032I Optimal objective 1938.481412 - 349 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 1938.4814
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1938.4814
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 13 added rows had average density of 2
Cbc0013I At root node, 13 cuts changed objective from 1938.4814 to 1948.4864 in 17 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 115 row cuts average 2.0 elements, 511 column cuts (511 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3.27 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 1950.8614 (21.14 seconds)
Cbc0010I After 200 nodes, 73 on tree, 1e+50 best solution, best possible 1950.8614 (24.74 seconds)
Couenne: new cutoff value 2.9016965612e+03 (28.6302 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 106 on tree, 1e+50 best solution, best possible 2406.0873 (37.90 seconds)
Cbc0010I After 400 nodes, 119 on tree, 1e+50 best solution, best possible 2409.1255 (41.04 seconds)
Cbc0010I After 500 nodes, 134 on tree, 1e+50 best solution, best possible 2621.2378 (44.18 seconds)
Cbc0010I After 600 nodes, 146 on tree, 1e+50 best solution, best possible 2658.4632 (47.38 seconds)
Cbc0010I After 700 nodes, 156 on tree, 1e+50 best solution, best possible 2676.2786 (50.44 seconds)
Cbc0010I After 800 nodes, 168 on tree, 1e+50 best solution, best possible 2727.6022 (53.61 seconds)
Cbc0010I After 900 nodes, 178 on tree, 1e+50 best solution, best possible 2754.1292 (56.77 seconds)
Cbc0010I After 1000 nodes, 187 on tree, 1e+50 best solution, best possible 2766.8405 (59.93 seconds)
Cbc0010I After 1100 nodes, 196 on tree, 1e+50 best solution, best possible 2777.2017 (63.09 seconds)
Cbc0010I After 1200 nodes, 206 on tree, 1e+50 best solution, best possible 2788.2037 (66.28 seconds)
Cbc0010I After 1300 nodes, 213 on tree, 1e+50 best solution, best possible 2795.4254 (69.25 seconds)
Cbc0010I After 1400 nodes, 210 on tree, 1e+50 best solution, best possible 2805.6612 (72.02 seconds)
Cbc0010I After 1500 nodes, 206 on tree, 1e+50 best solution, best possible 2816.9139 (74.95 seconds)
Cbc0010I After 1600 nodes, 192 on tree, 1e+50 best solution, best possible 2827.0567 (77.61 seconds)
Cbc0010I After 1700 nodes, 181 on tree, 1e+50 best solution, best possible 2833.6534 (80.46 seconds)
Cbc0010I After 1800 nodes, 158 on tree, 1e+50 best solution, best possible 2848.1102 (82.84 seconds)
Cbc0010I After 1900 nodes, 134 on tree, 1e+50 best solution, best possible 2869.0354 (85.10 seconds)
Cbc0010I After 2000 nodes, 92 on tree, 1e+50 best solution, best possible 2896.614 (87.06 seconds)
Cbc0010I After 2100 nodes, 43 on tree, 1e+50 best solution, best possible 2902.1199 (88.08 seconds)
Cbc0001I Search completed - best objective 1e+50, took 33602 iterations and 2186 nodes (88.64 seconds)
Cbc0035I Maximum depth 133, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1881
Linearization cuts added in total:           1881  (separation time: 0.009931s)
Total solve time:                          88.662s (88.662s in branch-and-bound)
Lower bound:                               2901.7
Upper bound:                               2901.7  (gap: 0.00%)
Branch-and-bound nodes:                      2186
Stats: /tmp/jl_MChJvw/model.nl 1660 [var]   20 [int] 1720 [con]  139 [aux]   1881 [root]     1881 [tot] 0.009931 [sep]   88.662 [time]  88.6642 [bb]         2.901697e+03 [lower]         2.901697e+03 [upper]    2186 [nodes]
Performance of                           FBBT:	    5.46308s,     2620 runs. fix:  0.0120666 shrnk:    2.89998 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.20319s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p48
