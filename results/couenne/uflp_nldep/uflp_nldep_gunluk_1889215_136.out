solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 270.69128       54 1.119782
NLP0014I             2         OPT 270.69129       60 0.489159
Couenne: new cutoff value 2.7069131218e+02 (1.84611 seconds)
Loaded instance "/tmp/jl_xH00T7/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          199 (0 integer)

Coin0506I Presolve 1039 (-82) rows, 899 (-160) columns and 4437 (-242) elements
Clp0006I 0  Obj -94.732049 Primal inf 1932.6753 (99)
Clp0006I 95  Obj 63.854416 Primal inf 136.21916 (71)
Clp0006I 167  Obj 193.70089
Clp0000I Optimal - objective value 193.70089
Clp0032I Optimal objective 193.7008897 - 167 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 193.70089
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 193.70089
Optimality Based BT: 28 improved bounds
Probing: 20 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 8 added rows had average density of 2
Cbc0013I At root node, 8 cuts changed objective from 193.70089 to 215.19589 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 13 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.95 seconds)
Optimality Based BT: 24 improved bounds
Optimality Based BT: 27 improved bounds
Optimality Based BT: 20 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 24 improved bounds
Optimality Based BT: 33 improved bounds
Cbc0010I After 100 nodes, 12 on tree, 1e+50 best solution, best possible 267.31098 (21.10 seconds)
Cbc0010I After 200 nodes, 20 on tree, 1e+50 best solution, best possible 268.74203 (22.97 seconds)
Cbc0010I After 300 nodes, 17 on tree, 1e+50 best solution, best possible 270.09434 (25.02 seconds)
Cbc0001I Search completed - best objective 1e+50, took 5767 iterations and 378 nodes (26.15 seconds)
Cbc0035I Maximum depth 36, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1121
Linearization cuts added in total:           1121  (separation time: 0.007128s)
Total solve time:                         26.1625s (26.1625s in branch-and-bound)
Lower bound:                              270.691
Upper bound:                              270.691  (gap: 0.00%)
Branch-and-bound nodes:                       378
Stats: /tmp/jl_xH00T7/model.nl  860 [var]   20 [int]  880 [con]  199 [aux]   1121 [root]     1121 [tot] 0.007128 [sep]  26.1625 [time]  26.1643 [bb]         2.706913e+02 [lower]         2.706913e+02 [upper]     378 [nodes]
Performance of                           FBBT:	   0.534707s,      440 runs. fix:          0 shrnk:    17.8675 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.65763s,        7 runs. fix:   0.105263 shrnk:    55.8521 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt
