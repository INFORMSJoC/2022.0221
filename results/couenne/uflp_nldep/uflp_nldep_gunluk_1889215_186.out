solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 285.88242       54 1.599368
NLP0014I             2         OPT 285.93996       49 0.397038
Couenne: new cutoff value 2.8593991699e+02 (2.23412 seconds)
Loaded instance "/tmp/jl_13NBZq/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          199 (0 integer)

Coin0506I Presolve 1039 (-82) rows, 899 (-160) columns and 4437 (-242) elements
Clp0006I 0  Obj -93.523073 Primal inf 1640.4632 (99)
Clp0006I 95  Obj 60.945646 Primal inf 118.53595 (64)
Clp0006I 163  Obj 212.10089
Clp0000I Optimal - objective value 212.10089
Clp0032I Optimal objective 212.1008857 - 163 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 212.10089
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 212.10089
Optimality Based BT: 46 improved bounds
Probing: 20 improved bounds
NLP Heuristic: no solution.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 212.10089 to 257.89988 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 33 row cuts average 2.0 elements, 15 column cuts (15 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.04 seconds)
Optimality Based BT: 42 improved bounds
Optimality Based BT: 45 improved bounds
Optimality Based BT: 40 improved bounds
Optimality Based BT: 47 improved bounds
Cbc0010I After 100 nodes, 28 on tree, 1e+50 best solution, best possible 277.00148 (14.66 seconds)
Cbc0010I After 200 nodes, 58 on tree, 1e+50 best solution, best possible 277.00148 (16.16 seconds)
Cbc0010I After 300 nodes, 107 on tree, 1e+50 best solution, best possible 277.00148 (17.79 seconds)
Couenne: new cutoff value 2.8588282235e+02 (20.5852 seconds)
Cbc0004I Integer solution of 285.88283 found after 1803 iterations and 335 nodes (18.34 seconds)
Optimality Based BT: 42 improved bounds
Optimality Based BT: 45 improved bounds
Cbc0010I After 400 nodes, 80 on tree, 285.88283 best solution, best possible 282.42626 (23.82 seconds)
Cbc0010I After 500 nodes, 103 on tree, 285.88283 best solution, best possible 282.69013 (25.98 seconds)
Cbc0010I After 600 nodes, 118 on tree, 285.88283 best solution, best possible 282.7055 (28.38 seconds)
Cbc0010I After 700 nodes, 134 on tree, 285.88283 best solution, best possible 283.46997 (30.38 seconds)
Cbc0010I After 800 nodes, 156 on tree, 285.88283 best solution, best possible 283.91916 (32.87 seconds)
Cbc0010I After 900 nodes, 174 on tree, 285.88283 best solution, best possible 283.96554 (35.30 seconds)
Cbc0010I After 1000 nodes, 195 on tree, 285.88283 best solution, best possible 284.05676 (37.46 seconds)
Cbc0010I After 1100 nodes, 217 on tree, 285.88283 best solution, best possible 284.08145 (39.73 seconds)
Cbc0010I After 1200 nodes, 234 on tree, 285.88283 best solution, best possible 284.10222 (41.89 seconds)
Cbc0010I After 1300 nodes, 253 on tree, 285.88283 best solution, best possible 284.14299 (44.12 seconds)
Cbc0010I After 1400 nodes, 273 on tree, 285.88283 best solution, best possible 284.17849 (46.21 seconds)
Cbc0010I After 1500 nodes, 281 on tree, 285.88283 best solution, best possible 284.41586 (48.43 seconds)
Cbc0010I After 1600 nodes, 283 on tree, 285.88283 best solution, best possible 284.74886 (50.80 seconds)
Cbc0010I After 1700 nodes, 288 on tree, 285.88283 best solution, best possible 284.82788 (53.05 seconds)
Cbc0010I After 1800 nodes, 296 on tree, 285.88283 best solution, best possible 284.86594 (55.06 seconds)
Cbc0010I After 1900 nodes, 296 on tree, 285.88283 best solution, best possible 284.91198 (56.97 seconds)
Cbc0010I After 2000 nodes, 287 on tree, 285.88283 best solution, best possible 284.96958 (59.20 seconds)
Cbc0010I After 2100 nodes, 296 on tree, 285.88283 best solution, best possible 285.00076 (61.34 seconds)
Cbc0010I After 2200 nodes, 310 on tree, 285.88283 best solution, best possible 285.02869 (63.54 seconds)
Cbc0010I After 2300 nodes, 326 on tree, 285.88283 best solution, best possible 285.06628 (65.84 seconds)
Cbc0010I After 2400 nodes, 341 on tree, 285.88283 best solution, best possible 285.0986 (68.08 seconds)
Cbc0010I After 2500 nodes, 353 on tree, 285.88283 best solution, best possible 285.19106 (70.35 seconds)
Cbc0010I After 2600 nodes, 354 on tree, 285.88283 best solution, best possible 285.2504 (72.26 seconds)
Cbc0010I After 2700 nodes, 354 on tree, 285.88283 best solution, best possible 285.31178 (74.44 seconds)
Cbc0010I After 2800 nodes, 357 on tree, 285.88283 best solution, best possible 285.35959 (76.60 seconds)
Cbc0010I After 2900 nodes, 357 on tree, 285.88283 best solution, best possible 285.38158 (78.61 seconds)
Cbc0010I After 3000 nodes, 347 on tree, 285.88283 best solution, best possible 285.41348 (80.59 seconds)
Cbc0010I After 3100 nodes, 337 on tree, 285.88283 best solution, best possible 285.43503 (82.45 seconds)
Cbc0010I After 3200 nodes, 329 on tree, 285.88283 best solution, best possible 285.45497 (84.59 seconds)
Cbc0010I After 3300 nodes, 312 on tree, 285.88283 best solution, best possible 285.48752 (86.58 seconds)
Cbc0010I After 3400 nodes, 292 on tree, 285.88283 best solution, best possible 285.52371 (88.66 seconds)
Cbc0010I After 3500 nodes, 279 on tree, 285.88283 best solution, best possible 285.55902 (90.90 seconds)
Cbc0010I After 3600 nodes, 260 on tree, 285.88283 best solution, best possible 285.60205 (92.84 seconds)
Cbc0010I After 3700 nodes, 219 on tree, 285.88283 best solution, best possible 285.68394 (94.73 seconds)
Cbc0010I After 3800 nodes, 180 on tree, 285.88283 best solution, best possible 285.73189 (96.37 seconds)
Cbc0010I After 3900 nodes, 133 on tree, 285.88283 best solution, best possible 285.78328 (97.96 seconds)
Cbc0010I After 4000 nodes, 102 on tree, 285.88283 best solution, best possible 285.82678 (99.57 seconds)
Cbc0010I After 4100 nodes, 58 on tree, 285.88283 best solution, best possible 285.87041 (100.86 seconds)
Cbc0010I After 4200 nodes, 55 on tree, 285.88283 best solution, best possible 285.88092 (102.19 seconds)
Cbc0010I After 4300 nodes, 74 on tree, 285.88283 best solution, best possible 285.88262 (103.55 seconds)
Cbc0010I After 4400 nodes, 103 on tree, 285.88283 best solution, best possible 285.88266 (105.22 seconds)
Cbc0010I After 4500 nodes, 141 on tree, 285.88283 best solution, best possible 285.88269 (106.97 seconds)
Cbc0010I After 4600 nodes, 183 on tree, 285.88283 best solution, best possible 285.88269 (108.65 seconds)
Cbc0010I After 4700 nodes, 210 on tree, 285.88283 best solution, best possible 285.88269 (110.17 seconds)
Cbc0010I After 4800 nodes, 240 on tree, 285.88283 best solution, best possible 285.8827 (111.89 seconds)
Cbc0010I After 4900 nodes, 269 on tree, 285.88283 best solution, best possible 285.88271 (113.63 seconds)
Couenne: new cutoff value 2.8588279913e+02 (117.229 seconds)
Cbc0004I Integer solution of 285.8828 found after 46355 iterations and 4980 nodes (114.98 seconds)
Cbc0010I After 5000 nodes, 215 on tree, 285.8828 best solution, best possible 285.88271 (115.52 seconds)
Cbc0010I After 5100 nodes, 215 on tree, 285.8828 best solution, best possible 285.88272 (117.05 seconds)
Cbc0010I After 5200 nodes, 222 on tree, 285.8828 best solution, best possible 285.88273 (118.57 seconds)
Cbc0010I After 5300 nodes, 233 on tree, 285.8828 best solution, best possible 285.88274 (120.26 seconds)
Cbc0010I After 5400 nodes, 272 on tree, 285.8828 best solution, best possible 285.88274 (121.96 seconds)
Cbc0010I After 5500 nodes, 277 on tree, 285.8828 best solution, best possible 285.88275 (123.50 seconds)
Cbc0010I After 5600 nodes, 291 on tree, 285.8828 best solution, best possible 285.88275 (125.15 seconds)
Cbc0010I After 5700 nodes, 310 on tree, 285.8828 best solution, best possible 285.88275 (126.81 seconds)
Cbc0010I After 5800 nodes, 333 on tree, 285.8828 best solution, best possible 285.88275 (128.45 seconds)
Couenne: new cutoff value 2.8588279463e+02 (131.289 seconds)
Cbc0010I After 5900 nodes, 354 on tree, 285.8828 best solution, best possible 285.88275 (130.00 seconds)
Cbc0010I After 6000 nodes, 360 on tree, 285.8828 best solution, best possible 285.88276 (131.66 seconds)
Cbc0010I After 6100 nodes, 380 on tree, 285.8828 best solution, best possible 285.88276 (133.42 seconds)
Couenne: new cutoff value 2.8588279450e+02 (136.081 seconds)
Cbc0010I After 6200 nodes, 409 on tree, 285.8828 best solution, best possible 285.88276 (135.03 seconds)
Cbc0010I After 6300 nodes, 405 on tree, 285.8828 best solution, best possible 285.88276 (136.55 seconds)
Cbc0010I After 6400 nodes, 416 on tree, 285.8828 best solution, best possible 285.88277 (138.17 seconds)
Cbc0010I After 6500 nodes, 427 on tree, 285.8828 best solution, best possible 285.88277 (139.77 seconds)
Cbc0010I After 6600 nodes, 429 on tree, 285.8828 best solution, best possible 285.88277 (141.37 seconds)
Couenne: new cutoff value 2.8588279297e+02 (144.518 seconds)
Cbc0010I After 6700 nodes, 446 on tree, 285.8828 best solution, best possible 285.88277 (143.03 seconds)
Cbc0010I After 6800 nodes, 443 on tree, 285.8828 best solution, best possible 285.88277 (144.57 seconds)
Cbc0010I After 6900 nodes, 455 on tree, 285.8828 best solution, best possible 285.88277 (146.19 seconds)
Couenne: new cutoff value 2.8588279161e+02 (149.315 seconds)
Cbc0010I After 7000 nodes, 467 on tree, 285.8828 best solution, best possible 285.88277 (147.81 seconds)
Cbc0010I After 7100 nodes, 481 on tree, 285.8828 best solution, best possible 285.88277 (149.35 seconds)
Cbc0010I After 7200 nodes, 490 on tree, 285.8828 best solution, best possible 285.88278 (150.92 seconds)
Cbc0010I After 7300 nodes, 502 on tree, 285.8828 best solution, best possible 285.88278 (152.48 seconds)
Cbc0010I After 7400 nodes, 504 on tree, 285.8828 best solution, best possible 285.88278 (153.94 seconds)
Couenne: new cutoff value 2.8588279037e+02 (156.831 seconds)
Cbc0010I After 7500 nodes, 497 on tree, 285.8828 best solution, best possible 285.88278 (155.37 seconds)
Cbc0010I After 7600 nodes, 504 on tree, 285.8828 best solution, best possible 285.88278 (156.86 seconds)
Couenne: new cutoff value 2.8588278829e+02 (159.16 seconds)
Cbc0010I After 7700 nodes, 496 on tree, 285.8828 best solution, best possible 285.88278 (158.24 seconds)
Cbc0004I Integer solution of 285.88279 found after 48777 iterations and 7746 nodes (158.83 seconds)
Cbc0001I Search completed - best objective 285.8827930908363, took 48809 iterations and 7798 nodes (160.47 seconds)
Cbc0035I Maximum depth 167, 38 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1121
Linearization cuts added in total:           1121  (separation time: 0.005125s)
Total solve time:                         160.483s (160.483s in branch-and-bound)
Lower bound:                              285.883
Upper bound:                              285.883  (gap: 0.00%)
Branch-and-bound nodes:                      7798
Stats: /tmp/jl_13NBZq/model.nl  860 [var]   20 [int]  880 [con]  199 [aux]   1121 [root]     1121 [tot] 0.005125 [sep]  160.483 [time]  160.484 [bb]         2.858828e+02 [lower]         2.858828e+02 [upper]    7798 [nodes]
Performance of                           FBBT:	    10.7823s,     8268 runs. fix:          0 shrnk:    3.36792 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.35186s,        7 runs. fix:    2.14286 shrnk:    127.573 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-8.txt
