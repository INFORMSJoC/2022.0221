solving instance uflp nldep holmberg 64 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9381.9582       37 241.22727
Couenne: new cutoff value 9.3819504223e+03 (250.86 seconds)
Loaded instance "/tmp/jl_i5nqqn/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          439 (0 integer)

Coin0506I Presolve 6501 (-120) rows, 6151 (-378) columns and 30661 (-498) elements
Clp0006I 0  Obj 0 Primal inf 3528.2279 (290) Dual inf 9.1523811e+13 (6121)
Clp0029I End of values pass after 91 iterations
Clp0006I 91  Obj 0 Primal inf 594.01104 (200) Dual inf 9.0827334e+13 (6030)
Clp0006I 490  Obj 9576.6361 Primal inf 1.8055226 (5) Dual inf 1.9686204e+11 (122)
Clp0006I 613  Obj 8683.668
Clp0000I Optimal - objective value 8683.668
Clp0032I Optimal objective 8683.668026 - 613 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 8683.668
NLP Heuristic: NLP0014I             2         OPT 9381.9581       12 1.438798
no solution.
Clp0000I Optimal - objective value 8683.668
Optimality Based BT: 82 improved bounds
Probing: 30 improved bounds
NLP Heuristic: no solution.
Cbc0031I 31 added rows had average density of 2
Cbc0013I At root node, 31 cuts changed objective from 8683.668 to 9286.811 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 100 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (58.91 seconds)
Optimality Based BT: 132 improved bounds
Optimality Based BT: 116 improved bounds
Optimality Based BT: 115 improved bounds
Optimality Based BT: 115 improved bounds
Optimality Based BT: 116 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 1354 iterations and 34 nodes (832.01 seconds)
Cbc0035I Maximum depth 6, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6621
Linearization cuts added in total:           6621  (separation time: 0.056549s)
Total solve time:                         832.082s (832.082s in branch-and-bound)
Lower bound:                              9381.95
Upper bound:                              9381.95  (gap: 0.00%)
Branch-and-bound nodes:                        34
Stats: /tmp/jl_i5nqqn/model.nl 6090 [var]   30 [int] 6260 [con]  439 [aux]   6621 [root]     6621 [tot] 0.056549 [sep]  832.082 [time]  832.093 [bb]         9.381950e+03 [lower]         9.381950e+03 [upper]      34 [nodes]
Performance of                           FBBT:	    1.00479s,       71 runs. fix:          0 shrnk:    27.8183 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    25.9894s,        6 runs. fix:          3 shrnk:    410.287 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p64
