solving instance uflp nldep holmberg 42 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 2474.92       46 11.897478
Couenne: new cutoff value 2.4749188867e+03 (12.6194 seconds)
Loaded instance "/tmp/jl_rNeexE/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          239 (0 integer)

Coin0506I Presolve 1879 (-82) rows, 1699 (-200) columns and 8437 (-282) elements
Clp0006I 0  Obj -682.38167 Primal inf 2035.584 (139)
Clp0006I 112  Obj 327.18964 Primal inf 152.78069 (81)
Clp0006I 212  Obj 1905.9058
Clp0000I Optimal - objective value 1905.9058
Clp0032I Optimal objective 1905.905821 - 212 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 1905.9058
NLP Heuristic: NLP0014I             2         OPT 2474.92        9 0.230231
no solution.
Clp0000I Optimal - objective value 1905.9058
Optimality Based BT: 33 improved bounds
Probing: 18 improved bounds
NLP Heuristic: no solution.
Cbc0031I 14 added rows had average density of 2
Cbc0013I At root node, 14 cuts changed objective from 1905.9058 to 2203.2149 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 27 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (5.33 seconds)
Optimality Based BT: 26 improved bounds
Optimality Based BT: 28 improved bounds
Cbc0010I After 100 nodes, 16 on tree, 1e+50 best solution, best possible 2454.536 (25.38 seconds)
Cbc0010I After 200 nodes, 30 on tree, 1e+50 best solution, best possible 2463.8306 (29.38 seconds)
Cbc0010I After 300 nodes, 40 on tree, 1e+50 best solution, best possible 2466.0423 (33.41 seconds)
Cbc0010I After 400 nodes, 41 on tree, 1e+50 best solution, best possible 2468.9324 (37.32 seconds)
Cbc0010I After 500 nodes, 37 on tree, 1e+50 best solution, best possible 2470.3649 (41.18 seconds)
Cbc0010I After 600 nodes, 25 on tree, 1e+50 best solution, best possible 2472.4039 (44.56 seconds)
Cbc0010I After 700 nodes, 17 on tree, 1e+50 best solution, best possible 2473.4514 (47.73 seconds)
Cbc0001I Search completed - best objective 1e+50, took 11421 iterations and 756 nodes (49.19 seconds)
Cbc0035I Maximum depth 62, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1961
Linearization cuts added in total:           1961  (separation time: 0.013218s)
Total solve time:                         49.2155s (49.2155s in branch-and-bound)
Lower bound:                              2474.92
Upper bound:                              2474.92  (gap: 0.00%)
Branch-and-bound nodes:                       756
Stats: /tmp/jl_rNeexE/model.nl 1660 [var]   20 [int] 1720 [con]  239 [aux]   1961 [root]     1961 [tot] 0.013218 [sep]  49.2155 [time]  49.2189 [bb]         2.474919e+03 [lower]         2.474919e+03 [upper]     756 [nodes]
Performance of                           FBBT:	    2.16062s,      827 runs. fix:          0 shrnk:    16.1536 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	      3.348s,        3 runs. fix:          0 shrnk:    102.198 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p42
