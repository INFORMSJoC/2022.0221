solving instance uflp nldep holmberg 20 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.9209968395e+04 (0.299328 seconds)
0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3537.2532       26 0.384287
Couenne: new cutoff value 3.5372547668e+03 (0.688723 seconds)
Loaded instance "/tmp/jl_aHd3LC/model.nl"
Constraints:         1090
Variables:           1060 (20 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 1301 (-30) rows, 1111 (-98) columns and 5521 (-128) elements
Clp0006I 0  Obj 0 Primal inf 1055.2855 (90)
Clp0006I 101  Obj 2830 Primal inf 112.67991 (56)
Clp0006I 135  Obj 3180
Clp0000I Optimal - objective value 3180
Clp0032I Optimal objective 3180 - 135 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 3180
NLP Heuristic: NLP0014I             2         OPT 3537.2532       15 0.226424
no solution.
Clp0000I Optimal - objective value 3180
Optimality Based BT: 21 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 39 added rows had average density of 2
Cbc0013I At root node, 39 cuts changed objective from 3180 to 3391.9741 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 86 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.20 seconds)
Optimality Based BT: 26 improved bounds
Optimality Based BT: 35 improved bounds
Optimality Based BT: 39 improved bounds
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 3537.2524 (9.72 seconds)
Cbc0010I After 200 nodes, 49 on tree, 1e+50 best solution, best possible 3537.2528 (11.03 seconds)
Cbc0010I After 300 nodes, 65 on tree, 1e+50 best solution, best possible 3537.2529 (12.25 seconds)
Cbc0010I After 400 nodes, 84 on tree, 1e+50 best solution, best possible 3537.253 (13.55 seconds)
Cbc0010I After 500 nodes, 106 on tree, 1e+50 best solution, best possible 3537.2532 (14.80 seconds)
Cbc0010I After 600 nodes, 122 on tree, 1e+50 best solution, best possible 3537.2534 (16.10 seconds)
Cbc0010I After 700 nodes, 141 on tree, 1e+50 best solution, best possible 3537.2535 (17.37 seconds)
Cbc0010I After 800 nodes, 156 on tree, 1e+50 best solution, best possible 3537.2536 (18.59 seconds)
Cbc0010I After 900 nodes, 176 on tree, 1e+50 best solution, best possible 3537.2537 (19.88 seconds)
Cbc0010I After 1000 nodes, 195 on tree, 1e+50 best solution, best possible 3537.2537 (21.16 seconds)
Cbc0010I After 1100 nodes, 219 on tree, 1e+50 best solution, best possible 3537.2538 (22.47 seconds)
Cbc0010I After 1200 nodes, 239 on tree, 1e+50 best solution, best possible 3537.2538 (23.78 seconds)
Cbc0010I After 1300 nodes, 261 on tree, 1e+50 best solution, best possible 3537.2539 (25.11 seconds)
Cbc0010I After 1400 nodes, 281 on tree, 1e+50 best solution, best possible 3537.2539 (26.41 seconds)
Cbc0010I After 1500 nodes, 301 on tree, 1e+50 best solution, best possible 3537.2539 (27.74 seconds)
Cbc0010I After 1600 nodes, 316 on tree, 1e+50 best solution, best possible 3537.254 (29.04 seconds)
Cbc0010I After 1700 nodes, 330 on tree, 1e+50 best solution, best possible 3537.254 (30.36 seconds)
Cbc0010I After 1800 nodes, 345 on tree, 1e+50 best solution, best possible 3537.254 (31.73 seconds)
Cbc0010I After 1900 nodes, 359 on tree, 1e+50 best solution, best possible 3537.2541 (33.09 seconds)
Cbc0010I After 2000 nodes, 368 on tree, 1e+50 best solution, best possible 3537.2541 (34.46 seconds)
Cbc0010I After 2100 nodes, 378 on tree, 1e+50 best solution, best possible 3537.2541 (35.78 seconds)
Cbc0010I After 2200 nodes, 387 on tree, 1e+50 best solution, best possible 3537.2542 (37.07 seconds)
Cbc0010I After 2300 nodes, 393 on tree, 1e+50 best solution, best possible 3537.2542 (38.39 seconds)
Cbc0010I After 2400 nodes, 400 on tree, 1e+50 best solution, best possible 3537.2542 (39.73 seconds)
Cbc0010I After 2500 nodes, 411 on tree, 1e+50 best solution, best possible 3537.2542 (41.10 seconds)
Cbc0010I After 2600 nodes, 415 on tree, 1e+50 best solution, best possible 3537.2543 (42.40 seconds)
Cbc0010I After 2700 nodes, 410 on tree, 1e+50 best solution, best possible 3537.2543 (43.66 seconds)
Cbc0010I After 2800 nodes, 410 on tree, 1e+50 best solution, best possible 3537.2543 (44.97 seconds)
Cbc0010I After 2900 nodes, 405 on tree, 1e+50 best solution, best possible 3537.2543 (46.22 seconds)
Cbc0010I After 3000 nodes, 399 on tree, 1e+50 best solution, best possible 3537.2544 (47.52 seconds)
Cbc0010I After 3100 nodes, 396 on tree, 1e+50 best solution, best possible 3537.2544 (48.77 seconds)
Cbc0010I After 3200 nodes, 383 on tree, 1e+50 best solution, best possible 3537.2544 (49.99 seconds)
Cbc0010I After 3300 nodes, 374 on tree, 1e+50 best solution, best possible 3537.2545 (51.26 seconds)
Cbc0010I After 3400 nodes, 366 on tree, 1e+50 best solution, best possible 3537.2545 (52.58 seconds)
Cbc0010I After 3500 nodes, 339 on tree, 1e+50 best solution, best possible 3537.2546 (53.69 seconds)
Cbc0010I After 3600 nodes, 308 on tree, 1e+50 best solution, best possible 3537.2547 (54.79 seconds)
Cbc0010I After 3700 nodes, 261 on tree, 1e+50 best solution, best possible 3537.2548 (55.66 seconds)
Cbc0010I After 3800 nodes, 211 on tree, 1e+50 best solution, best possible 3537.255 (56.43 seconds)
Cbc0010I After 3900 nodes, 161 on tree, 1e+50 best solution, best possible 3537.2554 (57.21 seconds)
Cbc0010I After 4000 nodes, 111 on tree, 1e+50 best solution, best possible 3537.2563 (58.00 seconds)
Cbc0010I After 4100 nodes, 61 on tree, 1e+50 best solution, best possible 3537.258 (58.78 seconds)
Cbc0010I After 4200 nodes, 11 on tree, 1e+50 best solution, best possible 3537.2617 (59.53 seconds)
Cbc0001I Search completed - best objective 1e+50, took 16174 iterations and 4222 nodes (59.69 seconds)
Cbc0035I Maximum depth 84, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1331
Linearization cuts added in total:           1331  (separation time: 0.007058s)
Total solve time:                         59.7083s (59.7083s in branch-and-bound)
Lower bound:                              3537.25
Upper bound:                              3537.25  (gap: 0.00%)
Branch-and-bound nodes:                      4222
Stats: /tmp/jl_aHd3LC/model.nl 1060 [var]   20 [int] 1090 [con]  149 [aux]   1331 [root]     1331 [tot] 0.007058 [sep]  59.7083 [time]  59.7102 [bb]         3.537255e+03 [lower]         3.537255e+03 [upper]    4222 [nodes]
Performance of                           FBBT:	    3.12768s,     2176 runs. fix:          0 shrnk:    7.29414 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.12295s,        4 runs. fix:   0.142857 shrnk:    101.647 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p20
