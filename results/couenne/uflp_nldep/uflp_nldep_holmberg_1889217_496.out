solving instance uflp nldep holmberg 50 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5706.6391       48 4.141024
Couenne: new cutoff value 5.7066385495e+03 (4.44141 seconds)
Loaded instance "/tmp/jl_BtDavc/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1201 (-40) rows, 1051 (-158) columns and 5221 (-198) elements
Clp0006I 0  Obj -334.80052 Primal inf 1146.9037 (130)
Clp0006I 99  Obj 3522.9281 Primal inf 406.66241 (109)
Clp0006I 171  Obj 5147.6572
Clp0000I Optimal - objective value 5147.6572
Clp0032I Optimal objective 5147.657197 - 171 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 5147.6572
NLP Heuristic: NLP0014I             2         OPT 5706.6391       15 0.211255
no solution.
Clp0000I Optimal - objective value 5147.6572
Optimality Based BT: 21 improved bounds
Probing: 6 improved bounds
NLP Heuristic: no solution.
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 7 cuts changed objective from 5147.6572 to 5420.9842 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 11 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.45 seconds)
Optimality Based BT: 15 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 15 improved bounds
Optimality Based BT: 19 improved bounds
Optimality Based BT: 19 improved bounds
Cbc0010I After 100 nodes, 18 on tree, 1e+50 best solution, best possible 5624.3445 (15.13 seconds)
Cbc0010I After 200 nodes, 23 on tree, 1e+50 best solution, best possible 5702.2525 (22.91 seconds)
Cbc0010I After 300 nodes, 14 on tree, 1e+50 best solution, best possible 5706.305 (24.82 seconds)
Cbc0010I After 400 nodes, 29 on tree, 1e+50 best solution, best possible 5706.6373 (26.38 seconds)
Cbc0010I After 500 nodes, 21 on tree, 1e+50 best solution, best possible 5706.6379 (27.75 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2778 iterations and 572 nodes (28.60 seconds)
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1241
Linearization cuts added in total:           1241  (separation time: 0.008964s)
Total solve time:                         28.6091s (28.6091s in branch-and-bound)
Lower bound:                              5706.64
Upper bound:                              5706.64  (gap: 0.00%)
Branch-and-bound nodes:                       572
Stats: /tmp/jl_BtDavc/model.nl 1030 [var]   10 [int] 1120 [con]  179 [aux]   1241 [root]     1241 [tot] 0.008964 [sep]  28.6091 [time]  28.6113 [bb]         5.706639e+03 [lower]         5.706639e+03 [upper]     572 [nodes]
Performance of                           FBBT:	   0.706645s,      435 runs. fix: 0.000400918 shrnk:    8.59233 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     2.2788s,        6 runs. fix:        0.8 shrnk:    37.9452 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p50
