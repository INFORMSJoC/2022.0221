solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-5.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 331.70413       54 13.289425
NLP0014I             2         OPT 359.16219       61 1.466951
Couenne: new cutoff value 3.5916229264e+02 (15.8669 seconds)
Loaded instance "/tmp/jl_ZvNkoS/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          299 (0 integer)

Coin0506I Presolve 2159 (-122) rows, 1949 (-240) columns and 9657 (-362) elements
Clp0006I 0  Obj -119.34338 Primal inf 2994.3137 (149)
Clp0006I 118  Obj 55.353008 Primal inf 254.54906 (93)
Clp0006I 236  Obj 278.59939 Primal inf 2.7489358 (8)
Clp0006I 245  Obj 280.34142
Clp0000I Optimal - objective value 280.34142
Clp0032I Optimal objective 280.3414209 - 245 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 280.34142
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 280.34142
Optimality Based BT: 57 improved bounds
Probing: 30 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 18 added rows had average density of 2
Cbc0013I At root node, 18 cuts changed objective from 280.34142 to 317.64247 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 33 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (6.72 seconds)
Optimality Based BT: 40 improved bounds
Optimality Based BT: 43 improved bounds
Optimality Based BT: 44 improved bounds
Cbc0010I After 100 nodes, 44 on tree, 1e+50 best solution, best possible 326.33221 (53.63 seconds)
Cbc0010I After 200 nodes, 91 on tree, 1e+50 best solution, best possible 326.33221 (56.94 seconds)
Cbc0010I After 300 nodes, 141 on tree, 1e+50 best solution, best possible 326.33221 (60.30 seconds)
Cbc0010I After 400 nodes, 191 on tree, 1e+50 best solution, best possible 326.33221 (63.57 seconds)
Couenne: new cutoff value 3.3175516678e+02 (81.0905 seconds)
Cbc0004I Integer solution of 331.75517 found after 2544 iterations and 449 nodes (65.16 seconds)
Optimality Based BT: 54 improved bounds
Optimality Based BT: 64 improved bounds
Cbc0010I After 500 nodes, 75 on tree, 331.75517 best solution, best possible 328.89949 (78.65 seconds)
Cbc0010I After 600 nodes, 103 on tree, 331.75517 best solution, best possible 328.89949 (82.88 seconds)
Cbc0010I After 700 nodes, 129 on tree, 331.75517 best solution, best possible 328.89949 (86.50 seconds)
Cbc0010I After 800 nodes, 171 on tree, 331.75517 best solution, best possible 328.89949 (90.71 seconds)
Couenne: new cutoff value 3.3170519409e+02 (107.191 seconds)
Cbc0004I Integer solution of 331.7052 found after 5374 iterations and 813 nodes (91.27 seconds)
Cbc0010I After 900 nodes, 99 on tree, 331.7052 best solution, best possible 329.50507 (95.31 seconds)
Cbc0010I After 1000 nodes, 121 on tree, 331.7052 best solution, best possible 329.96696 (99.91 seconds)
Cbc0010I After 1100 nodes, 137 on tree, 331.7052 best solution, best possible 330.02645 (104.12 seconds)
Cbc0010I After 1200 nodes, 154 on tree, 331.7052 best solution, best possible 330.18332 (108.87 seconds)
Cbc0010I After 1300 nodes, 171 on tree, 331.7052 best solution, best possible 330.4416 (113.42 seconds)
Cbc0010I After 1400 nodes, 181 on tree, 331.7052 best solution, best possible 330.46094 (118.33 seconds)
Cbc0010I After 1500 nodes, 198 on tree, 331.7052 best solution, best possible 330.48627 (123.04 seconds)
Cbc0010I After 1600 nodes, 212 on tree, 331.7052 best solution, best possible 330.5123 (127.27 seconds)
Cbc0010I After 1700 nodes, 228 on tree, 331.7052 best solution, best possible 330.54758 (132.01 seconds)
Cbc0010I After 1800 nodes, 250 on tree, 331.7052 best solution, best possible 330.59491 (136.79 seconds)
Cbc0010I After 1900 nodes, 269 on tree, 331.7052 best solution, best possible 330.64251 (141.62 seconds)
Cbc0010I After 2000 nodes, 284 on tree, 331.7052 best solution, best possible 330.68846 (146.23 seconds)
Cbc0010I After 2100 nodes, 303 on tree, 331.7052 best solution, best possible 330.70291 (150.72 seconds)
Cbc0010I After 2200 nodes, 312 on tree, 331.7052 best solution, best possible 330.718 (155.19 seconds)
Cbc0010I After 2300 nodes, 316 on tree, 331.7052 best solution, best possible 330.75056 (159.76 seconds)
Cbc0010I After 2400 nodes, 315 on tree, 331.7052 best solution, best possible 330.7672 (164.27 seconds)
Cbc0010I After 2500 nodes, 326 on tree, 331.7052 best solution, best possible 330.78632 (168.86 seconds)
Cbc0010I After 2600 nodes, 335 on tree, 331.7052 best solution, best possible 330.81139 (173.83 seconds)
Cbc0010I After 2700 nodes, 344 on tree, 331.7052 best solution, best possible 330.83094 (178.27 seconds)
Cbc0010I After 2800 nodes, 350 on tree, 331.7052 best solution, best possible 330.85236 (182.76 seconds)
Cbc0010I After 2900 nodes, 361 on tree, 331.7052 best solution, best possible 330.87003 (187.89 seconds)
Cbc0010I After 3000 nodes, 368 on tree, 331.7052 best solution, best possible 330.88875 (192.97 seconds)
Cbc0010I After 3100 nodes, 369 on tree, 331.7052 best solution, best possible 330.90725 (197.42 seconds)
Cbc0010I After 3200 nodes, 374 on tree, 331.7052 best solution, best possible 330.9298 (202.77 seconds)
Cbc0010I After 3300 nodes, 378 on tree, 331.7052 best solution, best possible 330.95638 (207.87 seconds)
Cbc0010I After 3400 nodes, 374 on tree, 331.7052 best solution, best possible 330.99522 (212.85 seconds)
Cbc0010I After 3500 nodes, 375 on tree, 331.7052 best solution, best possible 331.01539 (218.16 seconds)
Cbc0010I After 3600 nodes, 376 on tree, 331.7052 best solution, best possible 331.03773 (223.01 seconds)
Cbc0010I After 3700 nodes, 369 on tree, 331.7052 best solution, best possible 331.07732 (227.34 seconds)
Cbc0010I After 3800 nodes, 360 on tree, 331.7052 best solution, best possible 331.10462 (231.73 seconds)
Cbc0010I After 3900 nodes, 349 on tree, 331.7052 best solution, best possible 331.14856 (237.00 seconds)
Cbc0010I After 4000 nodes, 340 on tree, 331.7052 best solution, best possible 331.18895 (241.82 seconds)
Cbc0010I After 4100 nodes, 338 on tree, 331.7052 best solution, best possible 331.20755 (245.98 seconds)
Cbc0010I After 4200 nodes, 368 on tree, 331.7052 best solution, best possible 331.20755 (249.76 seconds)
Couenne: new cutoff value 3.3170484974e+02 (265.73 seconds)
Cbc0004I Integer solution of 331.70486 found after 51561 iterations and 4201 nodes (249.81 seconds)
Cbc0010I After 4300 nodes, 331 on tree, 331.70486 best solution, best possible 331.248 (254.25 seconds)
Cbc0010I After 4400 nodes, 340 on tree, 331.70486 best solution, best possible 331.263 (258.80 seconds)
Cbc0010I After 4500 nodes, 317 on tree, 331.70486 best solution, best possible 331.32043 (262.54 seconds)
Cbc0010I After 4600 nodes, 298 on tree, 331.70486 best solution, best possible 331.35281 (266.94 seconds)
Cbc0010I After 4700 nodes, 265 on tree, 331.70486 best solution, best possible 331.39695 (271.45 seconds)
Cbc0010I After 4800 nodes, 249 on tree, 331.70486 best solution, best possible 331.42835 (275.60 seconds)
Cbc0010I After 4900 nodes, 236 on tree, 331.70486 best solution, best possible 331.46254 (279.99 seconds)
Cbc0010I After 5000 nodes, 224 on tree, 331.70486 best solution, best possible 331.47957 (284.15 seconds)
Cbc0010I After 5100 nodes, 199 on tree, 331.70486 best solution, best possible 331.51515 (288.05 seconds)
Cbc0010I After 5200 nodes, 171 on tree, 331.70486 best solution, best possible 331.56551 (291.90 seconds)
Cbc0010I After 5300 nodes, 145 on tree, 331.70486 best solution, best possible 331.60466 (295.52 seconds)
Cbc0010I After 5400 nodes, 137 on tree, 331.70486 best solution, best possible 331.6267 (299.38 seconds)
Cbc0010I After 5500 nodes, 123 on tree, 331.70486 best solution, best possible 331.64485 (302.99 seconds)
Cbc0010I After 5600 nodes, 93 on tree, 331.70486 best solution, best possible 331.66524 (306.26 seconds)
Cbc0010I After 5700 nodes, 65 on tree, 331.70486 best solution, best possible 331.68634 (309.68 seconds)
Cbc0010I After 5800 nodes, 36 on tree, 331.70486 best solution, best possible 331.70014 (313.21 seconds)
Cbc0010I After 5900 nodes, 11 on tree, 331.70486 best solution, best possible 331.70477 (316.56 seconds)
Cbc0010I After 6000 nodes, 1 on tree, 331.70486 best solution, best possible 331.70485 (319.66 seconds)
Cbc0001I Search completed - best objective 331.7048568715571, took 84783 iterations and 6007 nodes (319.82 seconds)
Cbc0035I Maximum depth 224, 4083 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2281
Linearization cuts added in total:           2281  (separation time: 0.016717s)
Total solve time:                         319.851s (319.851s in branch-and-bound)
Lower bound:                              331.705
Upper bound:                              331.705  (gap: 0.00%)
Branch-and-bound nodes:                      6007
Stats: /tmp/jl_ZvNkoS/model.nl 1890 [var]   30 [int] 1920 [con]  299 [aux]   2281 [root]     2281 [tot] 0.016717 [sep]  319.851 [time]  319.855 [bb]         3.317048e+02 [lower]         3.317048e+02 [upper]    6007 [nodes]
Performance of                           FBBT:	    22.0558s,     6480 runs. fix:   0.103079 shrnk:    7.64115 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.8546s,        6 runs. fix:          0 shrnk:    135.606 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-5.txt
