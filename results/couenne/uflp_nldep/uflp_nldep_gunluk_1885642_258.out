solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-5.txt sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 435.63834      214 194.35565
NLP0014I             1      FAILED 435.63834      214 195.16928   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_O7TeCD/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 2101 (-30) rows, 1921 (-118) columns and 9481 (-148) elements
Clp0006I 0  Obj 1.382e-05 Primal inf 59.99994 (60)
Clp0006I 99  Obj 1.3820018e-05 Primal inf 11874.052 (254)
Clp0006I 204  Obj 1.3820142e-05 Primal inf 24881.338 (136)
Clp0006I 311  Obj 301.92143 Primal inf 1.4258697 (24)
Clp0006I 359  Obj 329.60283
Clp0000I Optimal - objective value 329.60283
Clp0032I Optimal objective 329.6028306 - 359 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 329.60283
NLP Heuristic: NLP0014I             3      FAILED 435.65974      225 19.83026
no solution.
Clp0000I Optimal - objective value 329.60283
Optimality Based BT: Couenne: new cutoff value 1.5357525229e+03 (410.716 seconds)
Couenne: new cutoff value 1.4819574906e+03 (410.755 seconds)
Couenne: new cutoff value 1.4356571381e+03 (410.827 seconds)
Couenne: new cutoff value 1.2797743986e+03 (410.927 seconds)
Couenne: new cutoff value 1.1652145035e+03 (410.955 seconds)
0 improved bounds
Probing: Couenne: new cutoff value 4.6292918490e+02 (411.255 seconds)
0 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 329.60283 to 329.60283 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (629.33 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 28 on tree, 1e+50 best solution, best possible 357.97357 (2376.61 seconds)
Cbc0010I After 200 nodes, 68 on tree, 1e+50 best solution, best possible 357.97357 (2378.87 seconds)
Cbc0010I After 300 nodes, 113 on tree, 1e+50 best solution, best possible 357.97357 (2381.28 seconds)
Cbc0010I After 400 nodes, 163 on tree, 1e+50 best solution, best possible 357.97357 (2383.72 seconds)
Cbc0010I After 500 nodes, 213 on tree, 1e+50 best solution, best possible 357.97357 (2385.31 seconds)
Cbc0010I After 600 nodes, 262 on tree, 1e+50 best solution, best possible 357.97357 (2386.92 seconds)
Cbc0010I After 700 nodes, 312 on tree, 1e+50 best solution, best possible 357.97357 (2388.68 seconds)
Cbc0010I After 800 nodes, 360 on tree, 1e+50 best solution, best possible 357.97357 (2390.55 seconds)
Cbc0010I After 900 nodes, 410 on tree, 1e+50 best solution, best possible 357.97357 (2392.24 seconds)
Cbc0010I After 1000 nodes, 458 on tree, 1e+50 best solution, best possible 357.97357 (2394.11 seconds)
Cbc0010I After 1100 nodes, 508 on tree, 1e+50 best solution, best possible 357.97357 (2395.94 seconds)
Cbc0004I Integer solution of 432.64767 found after 7533 iterations and 1185 nodes (2397.62 seconds)
Couenne: new cutoff value 4.3569633090e+02 (2788.27 seconds)
Cbc0010I After 1200 nodes, 404 on tree, 432.64767 best solution, best possible 358.5327 (2659.24 seconds)
Cbc0010I After 1300 nodes, 427 on tree, 432.64767 best solution, best possible 358.5327 (2661.75 seconds)
Cbc0010I After 1400 nodes, 457 on tree, 432.64767 best solution, best possible 358.9326 (2664.18 seconds)
Cbc0010I After 1500 nodes, 494 on tree, 432.64767 best solution, best possible 358.9326 (2666.59 seconds)
Cbc0010I After 1600 nodes, 533 on tree, 432.64767 best solution, best possible 358.9326 (2669.25 seconds)
Cbc0010I After 1700 nodes, 571 on tree, 432.64767 best solution, best possible 358.9326 (2672.26 seconds)
Cbc0010I After 1800 nodes, 616 on tree, 432.64767 best solution, best possible 358.9326 (2674.42 seconds)
Cbc0010I After 1900 nodes, 656 on tree, 432.64767 best solution, best possible 358.9326 (2676.53 seconds)
Cbc0010I After 2000 nodes, 694 on tree, 432.64767 best solution, best possible 358.9326 (2678.51 seconds)
Cbc0010I After 2100 nodes, 723 on tree, 432.64767 best solution, best possible 358.9326 (2680.30 seconds)
Cbc0010I After 2200 nodes, 767 on tree, 432.64767 best solution, best possible 358.9326 (2682.41 seconds)
Cbc0010I After 2300 nodes, 794 on tree, 432.64767 best solution, best possible 358.9326 (2684.21 seconds)
Cbc0010I After 2400 nodes, 819 on tree, 432.64767 best solution, best possible 358.9326 (2685.79 seconds)
Cbc0010I After 2500 nodes, 850 on tree, 432.64767 best solution, best possible 363.4265 (2687.87 seconds)
Cbc0010I After 2600 nodes, 885 on tree, 432.64767 best solution, best possible 363.4265 (2690.22 seconds)
Cbc0010I After 2700 nodes, 923 on tree, 432.64767 best solution, best possible 363.4265 (2692.71 seconds)
Cbc0010I After 2800 nodes, 952 on tree, 432.64767 best solution, best possible 363.66959 (2695.39 seconds)
Cbc0010I After 2900 nodes, 989 on tree, 432.64767 best solution, best possible 363.66959 (2697.77 seconds)
Cbc0010I After 3000 nodes, 1018 on tree, 432.64767 best solution, best possible 363.66959 (2700.18 seconds)
Cbc0010I After 3100 nodes, 1053 on tree, 432.64767 best solution, best possible 364.45966 (2702.57 seconds)
Cbc0010I After 3200 nodes, 1091 on tree, 432.64767 best solution, best possible 364.45966 (2705.26 seconds)
Cbc0010I After 3300 nodes, 1125 on tree, 432.64767 best solution, best possible 364.5438 (2707.63 seconds)
Cbc0010I After 3400 nodes, 1160 on tree, 432.64767 best solution, best possible 364.5438 (2710.23 seconds)
Cbc0010I After 3500 nodes, 1189 on tree, 432.64767 best solution, best possible 364.62259 (2712.65 seconds)
Cbc0010I After 3600 nodes, 1231 on tree, 432.64767 best solution, best possible 364.62259 (2715.09 seconds)
Cbc0010I After 3700 nodes, 1280 on tree, 432.64767 best solution, best possible 364.62259 (2717.98 seconds)
Cbc0010I After 3800 nodes, 1329 on tree, 432.64767 best solution, best possible 364.62259 (2720.16 seconds)
Cbc0010I After 3900 nodes, 1377 on tree, 432.64767 best solution, best possible 364.62259 (2722.28 seconds)
Cbc0010I After 4000 nodes, 1422 on tree, 432.64767 best solution, best possible 364.62259 (2724.34 seconds)
Cbc0010I After 4100 nodes, 1460 on tree, 432.64767 best solution, best possible 364.62259 (2726.31 seconds)
Cbc0010I After 4200 nodes, 1502 on tree, 432.64767 best solution, best possible 364.62259 (2728.26 seconds)
Cbc0010I After 4300 nodes, 1542 on tree, 432.64767 best solution, best possible 364.62259 (2730.15 seconds)
Cbc0010I After 4400 nodes, 1580 on tree, 432.64767 best solution, best possible 364.62259 (2732.10 seconds)
Cbc0010I After 4500 nodes, 1612 on tree, 432.64767 best solution, best possible 364.62259 (2734.12 seconds)
Cbc0004I Integer solution of 431.33073 found after 30366 iterations and 4555 nodes (2735.46 seconds)
Cbc0010I After 4600 nodes, 899 on tree, 431.33073 best solution, best possible 364.66634 (2738.14 seconds)
Cbc0010I After 4700 nodes, 936 on tree, 431.33073 best solution, best possible 364.66634 (2740.66 seconds)
Cbc0010I After 4800 nodes, 973 on tree, 431.33073 best solution, best possible 364.66634 (2743.50 seconds)
Cbc0010I After 4900 nodes, 1017 on tree, 431.33073 best solution, best possible 364.66634 (2745.91 seconds)
Cbc0010I After 5000 nodes, 1063 on tree, 431.33073 best solution, best possible 364.66634 (2748.12 seconds)
Cbc0010I After 5100 nodes, 1099 on tree, 431.33073 best solution, best possible 364.66634 (2750.01 seconds)
Cbc0010I After 5200 nodes, 1131 on tree, 431.33073 best solution, best possible 364.66634 (2751.71 seconds)
Cbc0010I After 5300 nodes, 1162 on tree, 431.33073 best solution, best possible 364.66634 (2753.50 seconds)
Cbc0010I After 5400 nodes, 1193 on tree, 431.33073 best solution, best possible 364.66634 (2755.27 seconds)
Cbc0010I After 5500 nodes, 1225 on tree, 431.33073 best solution, best possible 364.66634 (2756.94 seconds)
Cbc0010I After 5600 nodes, 1250 on tree, 431.33073 best solution, best possible 364.66634 (2758.69 seconds)
Cbc0010I After 5700 nodes, 1262 on tree, 431.33073 best solution, best possible 364.70274 (2760.83 seconds)
Cbc0010I After 5800 nodes, 1300 on tree, 431.33073 best solution, best possible 364.70274 (2763.19 seconds)
Cbc0010I After 5900 nodes, 1340 on tree, 431.33073 best solution, best possible 364.70274 (2765.96 seconds)
Cbc0010I After 6000 nodes, 1384 on tree, 431.33073 best solution, best possible 364.70274 (2768.38 seconds)
Cbc0010I After 6100 nodes, 1432 on tree, 431.33073 best solution, best possible 364.70274 (2770.44 seconds)
Cbc0010I After 6200 nodes, 1473 on tree, 431.33073 best solution, best possible 364.70274 (2772.37 seconds)
Cbc0010I After 6300 nodes, 1504 on tree, 431.33073 best solution, best possible 364.70274 (2774.04 seconds)
Cbc0010I After 6400 nodes, 1537 on tree, 431.33073 best solution, best possible 364.70274 (2775.82 seconds)
Cbc0010I After 6500 nodes, 1567 on tree, 431.33073 best solution, best possible 364.70274 (2777.47 seconds)
Cbc0010I After 6600 nodes, 1600 on tree, 431.33073 best solution, best possible 364.70274 (2779.19 seconds)
Cbc0010I After 6700 nodes, 1628 on tree, 431.33073 best solution, best possible 364.74513 (2781.10 seconds)
Cbc0010I After 6800 nodes, 1661 on tree, 431.33073 best solution, best possible 364.74513 (2783.49 seconds)
Cbc0010I After 6900 nodes, 1689 on tree, 431.33073 best solution, best possible 364.85955 (2785.98 seconds)
Cbc0010I After 7000 nodes, 1724 on tree, 431.33073 best solution, best possible 364.85955 (2788.39 seconds)
Cbc0010I After 7100 nodes, 1763 on tree, 431.33073 best solution, best possible 364.85955 (2791.18 seconds)
Cbc0010I After 7200 nodes, 1804 on tree, 431.33073 best solution, best possible 364.85955 (2793.78 seconds)
Cbc0010I After 7300 nodes, 1851 on tree, 431.33073 best solution, best possible 364.85955 (2795.94 seconds)
Cbc0010I After 7400 nodes, 1892 on tree, 431.33073 best solution, best possible 364.85955 (2797.92 seconds)
Cbc0010I After 7500 nodes, 1925 on tree, 431.33073 best solution, best possible 364.85955 (2799.64 seconds)
Cbc0010I After 7600 nodes, 1956 on tree, 431.33073 best solution, best possible 364.85955 (2801.35 seconds)
Cbc0010I After 7700 nodes, 1992 on tree, 431.33073 best solution, best possible 364.85955 (2803.13 seconds)
Cbc0010I After 7800 nodes, 2018 on tree, 431.33073 best solution, best possible 364.85955 (2804.72 seconds)
Cbc0010I After 7900 nodes, 2053 on tree, 431.33073 best solution, best possible 364.85955 (2806.52 seconds)
Cbc0010I After 8000 nodes, 2065 on tree, 431.33073 best solution, best possible 364.85955 (2808.62 seconds)
Cbc0010I After 8100 nodes, 2095 on tree, 431.33073 best solution, best possible 365.02248 (2810.94 seconds)
Cbc0010I After 8200 nodes, 2126 on tree, 431.33073 best solution, best possible 365.02248 (2813.26 seconds)
Cbc0010I After 8300 nodes, 2156 on tree, 431.33073 best solution, best possible 365.10264 (2815.56 seconds)
Cbc0010I After 8400 nodes, 2194 on tree, 431.33073 best solution, best possible 365.10264 (2817.96 seconds)
Cbc0010I After 8500 nodes, 2223 on tree, 431.33073 best solution, best possible 365.14502 (2820.60 seconds)
Cbc0010I After 8600 nodes, 2255 on tree, 431.33073 best solution, best possible 365.14502 (2822.96 seconds)
Cbc0010I After 8700 nodes, 2280 on tree, 431.33073 best solution, best possible 366.00522 (2825.33 seconds)
Cbc0010I After 8800 nodes, 2316 on tree, 431.33073 best solution, best possible 366.00522 (2827.71 seconds)
Cbc0010I After 8900 nodes, 2353 on tree, 431.33073 best solution, best possible 366.00522 (2830.41 seconds)
Cbc0010I After 9000 nodes, 2385 on tree, 431.33073 best solution, best possible 366.084 (2832.96 seconds)
Cbc0010I After 9100 nodes, 2423 on tree, 431.33073 best solution, best possible 366.084 (2835.30 seconds)
Cbc0010I After 9200 nodes, 2452 on tree, 431.33073 best solution, best possible 366.48389 (2837.64 seconds)
Cbc0010I After 9300 nodes, 2487 on tree, 431.33073 best solution, best possible 366.48389 (2840.11 seconds)
Cbc0010I After 9400 nodes, 2514 on tree, 431.33073 best solution, best possible 367.31342 (2842.49 seconds)
Cbc0010I After 9500 nodes, 2550 on tree, 431.33073 best solution, best possible 367.31342 (2844.83 seconds)
Cbc0010I After 9600 nodes, 2581 on tree, 431.33073 best solution, best possible 367.50911 (2847.32 seconds)
Cbc0010I After 9700 nodes, 2615 on tree, 431.33073 best solution, best possible 367.50911 (2849.81 seconds)
Cbc0010I After 9800 nodes, 2646 on tree, 431.33073 best solution, best possible 368.1669 (2852.23 seconds)
Cbc0010I After 9900 nodes, 2680 on tree, 431.33073 best solution, best possible 368.1669 (2854.54 seconds)
Cbc0010I After 10000 nodes, 2708 on tree, 431.33073 best solution, best possible 368.24569 (2856.92 seconds)
Cbc0010I After 10100 nodes, 2743 on tree, 431.33073 best solution, best possible 368.24569 (2859.23 seconds)
Cbc0010I After 10200 nodes, 2770 on tree, 431.33073 best solution, best possible 368.28945 (2861.56 seconds)
Cbc0010I After 10300 nodes, 2806 on tree, 431.33073 best solution, best possible 368.28945 (2864.03 seconds)
Cbc0010I After 10400 nodes, 2832 on tree, 431.33073 best solution, best possible 368.34658 (2866.47 seconds)
Cbc0010I After 10500 nodes, 2867 on tree, 431.33073 best solution, best possible 368.34658 (2868.79 seconds)
Cbc0010I After 10600 nodes, 2895 on tree, 431.33073 best solution, best possible 368.36823 (2871.19 seconds)
Cbc0010I After 10700 nodes, 2929 on tree, 431.33073 best solution, best possible 368.36823 (2873.80 seconds)
Cbc0010I After 10800 nodes, 2955 on tree, 431.33073 best solution, best possible 368.40999 (2876.28 seconds)
Cbc0010I After 10900 nodes, 2989 on tree, 431.33073 best solution, best possible 368.40999 (2878.72 seconds)
Cbc0010I After 11000 nodes, 3016 on tree, 431.33073 best solution, best possible 368.48877 (2881.15 seconds)
Cbc0010I After 11100 nodes, 3049 on tree, 431.33073 best solution, best possible 368.48877 (2883.55 seconds)
Couenne: new cutoff value 4.3328019555e+02 (3276.33 seconds)
Cbc0010I After 11200 nodes, 3080 on tree, 431.33073 best solution, best possible 368.53253 (2893.33 seconds)
Cbc0010I After 11300 nodes, 3111 on tree, 431.33073 best solution, best possible 368.53253 (2895.76 seconds)
Cbc0010I After 11400 nodes, 3142 on tree, 431.33073 best solution, best possible 368.54918 (2898.52 seconds)
Cbc0010I After 11500 nodes, 3175 on tree, 431.33073 best solution, best possible 368.54918 (2900.95 seconds)
Cbc0010I After 11600 nodes, 3206 on tree, 431.33073 best solution, best possible 368.61132 (2903.62 seconds)
Cbc0010I After 11700 nodes, 3242 on tree, 431.33073 best solution, best possible 368.61132 (2906.08 seconds)
Cbc0010I After 11800 nodes, 3278 on tree, 431.33073 best solution, best possible 368.61132 (2908.83 seconds)
Cbc0010I After 11900 nodes, 3304 on tree, 431.33073 best solution, best possible 368.64558 (2911.41 seconds)
Cbc0010I After 12000 nodes, 3338 on tree, 431.33073 best solution, best possible 368.64558 (2914.02 seconds)
Cbc0010I After 12100 nodes, 3366 on tree, 431.33073 best solution, best possible 368.67172 (2916.52 seconds)
Cbc0010I After 12200 nodes, 3400 on tree, 431.33073 best solution, best possible 368.67172 (2918.89 seconds)
Cbc0010I After 12300 nodes, 3429 on tree, 431.33073 best solution, best possible 368.74647 (2921.45 seconds)
Cbc0010I After 12400 nodes, 3467 on tree, 431.33073 best solution, best possible 368.74647 (2923.97 seconds)
Cbc0010I After 12500 nodes, 3493 on tree, 431.33073 best solution, best possible 368.76812 (2926.71 seconds)
Cbc0010I After 12600 nodes, 3526 on tree, 431.33073 best solution, best possible 368.76812 (2929.27 seconds)
Cbc0010I After 12700 nodes, 3553 on tree, 431.33073 best solution, best possible 368.88866 (2931.84 seconds)
Cbc0010I After 12800 nodes, 3587 on tree, 431.33073 best solution, best possible 368.88866 (2934.21 seconds)
Cbc0010I After 12900 nodes, 3614 on tree, 431.33073 best solution, best possible 369.01121 (2936.72 seconds)
Cbc0010I After 13000 nodes, 3645 on tree, 431.33073 best solution, best possible 369.01121 (2939.11 seconds)
Cbc0010I After 13100 nodes, 3670 on tree, 431.33073 best solution, best possible 369.18949 (2941.59 seconds)
Cbc0010I After 13200 nodes, 3702 on tree, 431.33073 best solution, best possible 369.18949 (2944.01 seconds)
Cbc0010I After 13300 nodes, 3720 on tree, 431.33073 best solution, best possible 369.26279 (2946.31 seconds)
Cbc0010I After 13400 nodes, 3751 on tree, 431.33073 best solution, best possible 369.26279 (2948.96 seconds)
Cbc0010I After 13500 nodes, 3775 on tree, 431.33073 best solution, best possible 369.6673 (2951.52 seconds)
Cbc0010I After 13600 nodes, 3803 on tree, 431.33073 best solution, best possible 369.76547 (2954.01 seconds)
Cbc0010I After 13700 nodes, 3831 on tree, 431.33073 best solution, best possible 369.76547 (2956.59 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 431.33073 (best possible 369.76547), took 106401 iterations and 13737 nodes (3225.04 seconds)
Cbc0035I Maximum depth 606, 5 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2131
Linearization cuts added in total:           2131  (separation time: 0.011514s)
Total solve time:                          3225.1s (3225.1s in branch-and-bound)
Lower bound:                              369.765
Upper bound:                              431.331  (gap: 16.60%)
Branch-and-bound nodes:                     13737
Stats: /tmp/jl_O7TeCD/model.nl 1890 [var]   30 [int] 1920 [con]  149 [aux]   2131 [root]     2131 [tot] 0.011514 [sep]   3225.1 [time]   3225.1 [bb]         3.697655e+02 [lower]         4.313307e+02 [upper]   13737 [nodes]
Performance of                           FBBT:	    40.3579s,    18252 runs. fix:          0 shrnk: 0.00397023 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.66425s,        3 runs. fix:          0 shrnk:    3.14989 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-5.txt
