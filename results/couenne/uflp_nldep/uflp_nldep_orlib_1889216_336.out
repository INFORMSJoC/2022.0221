solving instance uflp nldep orlib 131 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 633934.39      243 12.721409
NLP0014I             2         OPT 633951.29       68 2.805796
Couenne: new cutoff value 6.3395052189e+05 (17.3874 seconds)
Loaded instance "/tmp/jl_uPWufo/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          443 (0 integer)

Coin0506I Presolve 3088 (-151) rows, 2794 (-299) columns and 13622 (-499) elements
Clp0006I 0  Obj -31735.67 Primal inf 12199.706 (201)
Clp0006I 136  Obj 404286.65 Primal inf 607.42492 (103)
Clp0006I 272  Obj 456811.02 Primal inf 418.01028 (83)
Clp0006I 395  Obj 623749.07
Clp0000I Optimal - objective value 623749.07
Clp0032I Optimal objective 623749.0727 - 395 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 623749.07
NLP Heuristic: NLP0014I             3         OPT 633934.39       48 2.30049
no solution.
Clp0000I Optimal - objective value 623749.07
Optimality Based BT: 145 improved bounds
Probing: 42 improved bounds
NLP Heuristic: no solution.
Cbc0031I 96 added rows had average density of 2
Cbc0013I At root node, 96 cuts changed objective from 623749.07 to 633934.19 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1087 row cuts average 2.0 elements, 16 column cuts (112 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (21.04 seconds)
Optimality Based BT: 231 improved bounds
Optimality Based BT: 229 improved bounds
Optimality Based BT: 188 improved bounds
Optimality Based BT: 186 improved bounds
Optimality Based BT: 184 improved bounds
Couenne: new cutoff value 6.3393528704e+05 (132.707 seconds)
Cbc0004I Integer solution of 633935.29 found after 1249 iterations and 68 nodes (115.23 seconds)
Couenne: new cutoff value 6.3393527187e+05 (132.858 seconds)
Cbc0001I Search completed - best objective 633935.2940353822, took 1269 iterations and 74 nodes (115.41 seconds)
Cbc0035I Maximum depth 34, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3239
Linearization cuts added in total:           3239  (separation time: 0.024281s)
Total solve time:                         115.454s (115.454s in branch-and-bound)
Lower bound:                               633935
Upper bound:                               633935  (gap: 0.00%)
Branch-and-bound nodes:                        74
Stats: /tmp/jl_uPWufo/model.nl 2650 [var]   50 [int] 2650 [con]  443 [aux]   3239 [root]     3239 [tot] 0.024281 [sep]  115.454 [time]  115.459 [bb]         6.339353e+05 [lower]         6.339353e+05 [upper]      74 [nodes]
Performance of                           FBBT:	   0.509492s,       91 runs. fix:          0 shrnk:    44.6565 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    20.0784s,        6 runs. fix:    16.1818 shrnk:    760.241 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap131.txt
