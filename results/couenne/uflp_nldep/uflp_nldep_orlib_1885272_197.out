solving instance uflp nldep orlib 93 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 653354.58      505 9.071457
Couenne: new cutoff value 6.5335484424e+05 (9.52689 seconds)
Loaded instance "/tmp/jl_SFChig/model.nl"
Constraints:         1350
Variables:           1325 (25 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 1659 (-76) rows, 1370 (-174) columns and 6940 (-299) elements
Clp0006I 0  Obj 0 Primal inf 22376.934 (314)
Clp0006I 108  Obj 543731.48 Primal inf 373421.77 (113)
Clp0006I 216  Obj 652322.66 Primal inf 960.17321 (57)
Clp0006I 284  Obj 652677.99
Clp0000I Optimal - objective value 652677.99
Clp0032I Optimal objective 652677.9894 - 284 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 652677.99
NLP Heuristic: NLP0014I             2         OPT 653354.58       39 0.928947
no solution.
Clp0000I Optimal - objective value 652677.99
Optimality Based BT: 56 improved bounds
Probing: 10 improved bounds
Cbc0031I 47 added rows had average density of 2
Cbc0013I At root node, 79 cuts changed objective from 652677.99 to 653354.91 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 138 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0001I Search completed - best objective 1e+50, took 108 iterations and 0 nodes (5.11 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1735
Linearization cuts added in total:           1735  (separation time: 0.010846s)
Total solve time:                         5.13305s (5.13305s in branch-and-bound)
Lower bound:                               653355
Upper bound:                               653355  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_SFChig/model.nl 1325 [var]   25 [int] 1350 [con]  219 [aux]   1735 [root]     1735 [tot] 0.010846 [sep]  5.13305 [time]  5.13545 [bb]         6.533548e+05 [lower]         6.533548e+05 [upper]       0 [nodes]
Performance of                           FBBT:	   0.014064s,        6 runs. fix:          0 shrnk:    121.311 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     1.4569s,        1 runs. fix:          5 shrnk:    174.485 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap93.txt
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 0.0
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
f0 = 15.439217871399736
