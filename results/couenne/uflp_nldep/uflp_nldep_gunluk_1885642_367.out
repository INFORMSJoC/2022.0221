solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-6.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 384.95263       64 60.121056
NLP0014I             2         OPT 385.05149       42 2.167226
Couenne: new cutoff value 3.8505171258e+02 (65.5734 seconds)
Loaded instance "/tmp/jl_Fpsnla/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14596.263 (520)
Clp0006I 152  Obj 3.4375181e-14 Primal inf 2229.3263 (242)
Clp0006I 304  Obj 172.3843 Primal inf 489.9746 (227)
Clp0006I 456  Obj 382.87094 Primal inf 4834.0761 (79)
Clp0006I 541  Obj 384.11827
Clp0000I Optimal - objective value 384.11827
Clp0032I Optimal objective 384.1182737 - 541 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 384.11827
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 384.11827
Optimality Based BT: 61 improved bounds
Probing: 2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 62 added rows had average density of 2
Cbc0013I At root node, 62 cuts changed objective from 384.11827 to 384.85402 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 657 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (15.17 seconds)
Optimality Based BT: 60 improved bounds
Optimality Based BT: 56 improved bounds
Optimality Based BT: 37 improved bounds
Optimality Based BT: 21 improved bounds
Cbc0010I After 100 nodes, 37 on tree, 1e+50 best solution, best possible 384.95055 (106.07 seconds)
Cbc0010I After 200 nodes, 84 on tree, 1e+50 best solution, best possible 384.95055 (112.60 seconds)
Cbc0010I After 300 nodes, 133 on tree, 1e+50 best solution, best possible 384.95055 (118.85 seconds)
Cbc0010I After 400 nodes, 183 on tree, 1e+50 best solution, best possible 384.95055 (124.91 seconds)
Couenne: new cutoff value 3.8495332595e+02 (191.363 seconds)
Couenne: new cutoff value 3.8495321083e+02 (191.437 seconds)
Cbc0004I Integer solution of 384.95321 found after 4156 iterations and 412 nodes (125.65 seconds)
Cbc0001I Search completed - best objective 384.9532108294339, took 4376 iterations and 422 nodes (127.29 seconds)
Cbc0035I Maximum depth 205, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.030814s)
Total solve time:                         127.367s (127.367s in branch-and-bound)
Lower bound:                              384.953
Upper bound:                              384.953  (gap: 0.00%)
Branch-and-bound nodes:                       422
Stats: /tmp/jl_Fpsnla/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.030814 [sep]  127.367 [time]  127.374 [bb]         3.849532e+02 [lower]         3.849532e+02 [upper]     422 [nodes]
Performance of                           FBBT:	     2.8431s,      482 runs. fix:          0 shrnk:     35.632 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    15.5461s,        5 runs. fix:    8.07692 shrnk:    242.535 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-6.txt
f0 = 0.06528583557049034
f0 = 0.07410824578271875
f0 = 0.0008822410212228425
f0 = 0.06793255863415887
f0 = 0.06352135352804464
f0 = 0.0855773790586157
f0 = 0.057345666379484746
f0 = 0.06087463046437613
f0 = 0.052052220252147695
f0 = 0.055581184337039076
f0 = 0.04852325616725633
f0 = 0.06087463046437613
f0 = 0.0008822410212228425
f0 = 0.0688147996553817
f0 = 0.05646342535826192
f0 = 0.023820507573016746
f0 = 0.010586892254674109
f0 = 0.01411585633956548
f0 = 0.07410824578271875
f0 = 0.07763720986761014
f0 = 0.03970084595502791
f0 = 0.08293065599494719
f0 = 0.013233615318342636
f0 = 0.026467230636685272
f0 = 0.06352135352804464
f0 = 0.001764482042445685
f0 = 0.04940549718847917
f0 = 0.052052220252147695
f0 = 0.001764482042445685
f0 = 0.052052220252147695
f0 = 0.013233615318342636
f0 = 0.08028393293127865
f0 = 0.010586892254674109
f0 = 0.0855773790586157
f0 = 0.005293446127337054
f0 = 0.01146913327589695
f0 = 0.0811661739525015
f0 = 0.013233615318342636
f0 = 0.019409302466902534
f0 = 0.052934461273370544
