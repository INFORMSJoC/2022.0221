solving instance uflp nldep holmberg 46 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3970.7613       66 77.077332
NLP0014I             2         OPT 4389.4554       53 1.800949
Loaded instance "/tmp/jl_Z4eTCy/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          279 (0 integer)

Coin0506I Presolve 2620 (-91) rows, 2250 (-219) columns and 9300 (-2439) elements
Clp0006I 0  Obj 0 Primal inf 12438.132 (400)
Clp0006I 127  Obj 127 Primal inf 142.92249 (86)
Clp0006I 254  Obj 1839.0161 Primal inf 293.59612 (348)
Clp0006I 381  Obj 3477.1202 Primal inf 14757144 (215)
Clp0006I 445  Obj 3965.0898
Clp0000I Optimal - objective value 3965.0898
Clp0032I Optimal objective 3965.089824 - 445 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 3965.0898
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 3965.0898
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 3965.0898 to 3965.1286 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.28 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: Couenne: new cutoff value 1.4208307577e+04 (108.247 seconds)
0 improved bounds
Optimality Based BT: 10 improved bounds
Optimality Based BT: 19 improved bounds
Optimality Based BT: 4 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 3970.6678 (81.67 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 3970.6678 (86.03 seconds)
Couenne: new cutoff value 3.9707635853e+03 (167.658 seconds)
Cbc0004I Integer solution of 3970.7636 found after 7633 iterations and 233 nodes (87.15 seconds)
Cbc0001I Search completed - best objective 3970.76358525719, took 7659 iterations and 235 nodes (87.20 seconds)
Cbc0035I Maximum depth 116, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2711
Linearization cuts added in total:           2711  (separation time: 0.013612s)
Total solve time:                         87.2465s (87.2465s in branch-and-bound)
Lower bound:                              3970.76
Upper bound:                              3970.76  (gap: 0.00%)
Branch-and-bound nodes:                       235
Stats: /tmp/jl_Z4eTCy/model.nl 2190 [var]   30 [int] 2230 [con]  279 [aux]   2711 [root]     2711 [tot] 0.013612 [sep]  87.2465 [time]  87.2488 [bb]         3.970764e+03 [lower]         3.970764e+03 [upper]     235 [nodes]
Performance of                           FBBT:	    1.44505s,      394 runs. fix:          0 shrnk:   0.881289 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    20.6903s,        7 runs. fix:          0 shrnk:   0.543383 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p46
