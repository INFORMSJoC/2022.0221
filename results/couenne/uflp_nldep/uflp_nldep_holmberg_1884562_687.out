solving instance uflp nldep holmberg 69 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8917.6425       42 367.49364
Couenne: new cutoff value 8.9176346770e+03 (376.979 seconds)
Loaded instance "/tmp/jl_x3S6p2/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          409 (0 integer)

Coin0506I Presolve 6649 (-92) rows, 6149 (-350) columns and 30927 (-442) elements
Clp0006I 0  Obj 0 Primal inf 12856.246 (530) Dual inf 1.847376e+15 (6090)
Clp0006I 339  Obj 8917.6447 Primal inf 273.44734 (79) Dual inf 8.3382068e+13 (330)
Clp0006I 549  Obj 8917.6447 Primal inf 8.537828 (19) Dual inf 23690895 (95)
Clp0006I 725  Obj 8903.879
Clp0000I Optimal - objective value 8903.879
Clp0032I Optimal objective 8903.878955 - 725 iterations time 0.122, Presolve 0.03
Clp0000I Optimal - objective value 8903.879
NLP Heuristic: NLP0014I             2         OPT 8917.6425       19 2.498775
no solution.
Clp0000I Optimal - objective value 8903.879
Optimality Based BT: 80 improved bounds
Probing: 1 improved bounds
NLP Heuristic: no solution.
Cbc0031I 59 added rows had average density of 2
Cbc0013I At root node, 59 cuts changed objective from 8903.879 to 8917.6116 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 266 row cuts average 2.0 elements, 9 column cuts (9 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (54.36 seconds)
Optimality Based BT: 61 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 306 iterations and 2 nodes (85.38 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6741
Linearization cuts added in total:           6741  (separation time: 0.059676s)
Total solve time:                         85.5065s (85.5064s in branch-and-bound)
Lower bound:                              8917.63
Upper bound:                              8917.63  (gap: 0.00%)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_x3S6p2/model.nl 6090 [var]   30 [int] 6260 [con]  409 [aux]   6741 [root]     6741 [tot] 0.059676 [sep]  85.5065 [time]  85.5167 [bb]         8.917635e+03 [lower]         8.917635e+03 [upper]       2 [nodes]
Performance of                           FBBT:	   0.185892s,       12 runs. fix:          0 shrnk:    103.068 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    9.43956s,        2 runs. fix:          9 shrnk:    907.865 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p69
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
f0 = 0.7057928169782736
