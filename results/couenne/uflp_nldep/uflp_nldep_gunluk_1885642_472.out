solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-7.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.2240087541e+03 (6.58711 seconds)
6.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 701.78832       69 4.739871
NLP0014I             2         OPT 811.58382       35 4.168102
Loaded instance "/tmp/jl_PEoDxI/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          249 (0 integer)

Coin0506I Presolve 5600 (-1) rows, 5250 (-149) columns and 26149 (-150) elements
Clp0006I 0  Obj 0 Primal inf 24688.931 (100) Dual inf 4.2695943e+13 (5001)
Clp0029I End of values pass after 50 iterations
Clp0006I 50  Obj 0 Primal inf 24688.931 (100) Dual inf 4.2695943e+13 (5050)
Clp0006I 237  Obj 365.6732 Primal inf 19928.118 (104) Dual inf 2.5808065e+13 (4340)
Clp0006I 435  Obj 827.60549 Primal inf 812.83983 (8) Dual inf 94762354 (1929)
Clp0006I 623  Obj 689.09175 Dual inf 10.293796 (319)
Clp0006I 810  Obj 609.18341 Dual inf 0.8588525 (96)
Clp0006I 893  Obj 594.03502
Clp0000I Optimal - objective value 594.03502
Clp0000I Optimal - objective value 594.03502
Clp0032I Optimal objective 594.0350236 - 893 iterations time 0.142, Presolve 0.02
Clp0000I Optimal - objective value 594.03502
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 594.03502
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 594.03502 to 594.08093 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 135 row cuts average 2.0 elements, 664 column cuts (664 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (30.28 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0127933949e+03 (97.6589 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 9.9191887251e+02 (192.86 seconds)
Cbc0010I After 100 nodes, 26 on tree, 1e+50 best solution, best possible 615.7272 (223.82 seconds)
Cbc0010I After 200 nodes, 75 on tree, 1e+50 best solution, best possible 615.7272 (233.94 seconds)
Cbc0010I After 300 nodes, 125 on tree, 1e+50 best solution, best possible 615.7272 (242.65 seconds)
Cbc0010I After 400 nodes, 175 on tree, 1e+50 best solution, best possible 615.7272 (249.12 seconds)
Couenne: new cutoff value 7.0627005294e+02 (267.205 seconds)
Couenne: new cutoff value 7.0626612060e+02 (267.341 seconds)
Cbc0010I After 500 nodes, 188 on tree, 1e+50 best solution, best possible 615.87444 (275.89 seconds)
Cbc0010I After 600 nodes, 198 on tree, 1e+50 best solution, best possible 616.1068 (286.26 seconds)
Cbc0010I After 700 nodes, 201 on tree, 1e+50 best solution, best possible 617.17306 (296.39 seconds)
Cbc0010I After 800 nodes, 230 on tree, 1e+50 best solution, best possible 617.17306 (307.32 seconds)
Cbc0010I After 900 nodes, 272 on tree, 1e+50 best solution, best possible 617.17306 (318.35 seconds)
Cbc0010I After 1000 nodes, 321 on tree, 1e+50 best solution, best possible 617.17306 (328.28 seconds)
Couenne: new cutoff value 7.0517001023e+02 (346.694 seconds)
Couenne: new cutoff value 7.0516716568e+02 (346.907 seconds)
Cbc0010I After 1100 nodes, 330 on tree, 1e+50 best solution, best possible 636.78629 (338.57 seconds)
Cbc0010I After 1200 nodes, 341 on tree, 1e+50 best solution, best possible 653.94527 (348.58 seconds)
Cbc0010I After 1300 nodes, 351 on tree, 1e+50 best solution, best possible 655.21342 (358.69 seconds)
Cbc0010I After 1400 nodes, 361 on tree, 1e+50 best solution, best possible 668.80596 (368.69 seconds)
Cbc0010I After 1500 nodes, 375 on tree, 1e+50 best solution, best possible 669.68318 (379.21 seconds)
Cbc0010I After 1600 nodes, 384 on tree, 1e+50 best solution, best possible 670.17349 (389.37 seconds)
Cbc0010I After 1700 nodes, 410 on tree, 1e+50 best solution, best possible 670.17349 (400.66 seconds)
Cbc0010I After 1800 nodes, 444 on tree, 1e+50 best solution, best possible 670.17349 (413.46 seconds)
Couenne: new cutoff value 7.0507981689e+02 (437.69 seconds)
Cbc0010I After 1900 nodes, 471 on tree, 1e+50 best solution, best possible 670.7243 (423.26 seconds)
Cbc0010I After 2000 nodes, 486 on tree, 1e+50 best solution, best possible 672.24012 (433.55 seconds)
Cbc0010I After 2100 nodes, 498 on tree, 1e+50 best solution, best possible 673.80209 (443.61 seconds)
Cbc0010I After 2200 nodes, 512 on tree, 1e+50 best solution, best possible 673.8567 (453.97 seconds)
Cbc0010I After 2300 nodes, 522 on tree, 1e+50 best solution, best possible 673.92448 (464.00 seconds)
Cbc0010I After 2400 nodes, 535 on tree, 1e+50 best solution, best possible 673.93297 (473.84 seconds)
Cbc0010I After 2500 nodes, 543 on tree, 1e+50 best solution, best possible 674.31683 (483.85 seconds)
Cbc0010I After 2600 nodes, 557 on tree, 1e+50 best solution, best possible 674.3802 (493.92 seconds)
Cbc0010I After 2700 nodes, 568 on tree, 1e+50 best solution, best possible 674.66475 (503.92 seconds)
Cbc0010I After 2800 nodes, 585 on tree, 1e+50 best solution, best possible 674.73227 (514.50 seconds)
Cbc0010I After 2900 nodes, 602 on tree, 1e+50 best solution, best possible 676.48784 (524.98 seconds)
Cbc0010I After 3000 nodes, 634 on tree, 1e+50 best solution, best possible 676.48784 (536.01 seconds)
Cbc0010I After 3100 nodes, 680 on tree, 1e+50 best solution, best possible 676.48784 (548.10 seconds)
Cbc0010I After 3200 nodes, 727 on tree, 1e+50 best solution, best possible 676.48784 (558.47 seconds)
Couenne: new cutoff value 7.0288601540e+02 (577.5 seconds)
Cbc0010I After 3300 nodes, 733 on tree, 1e+50 best solution, best possible 679.07074 (568.24 seconds)
Cbc0010I After 3400 nodes, 760 on tree, 1e+50 best solution, best possible 679.07074 (579.75 seconds)
Cbc0010I After 3500 nodes, 786 on tree, 1e+50 best solution, best possible 679.07074 (590.40 seconds)
Couenne: new cutoff value 7.0243656272e+02 (618.87 seconds)
Cbc0010I After 3600 nodes, 834 on tree, 1e+50 best solution, best possible 679.07074 (601.22 seconds)
Cbc0010I After 3700 nodes, 844 on tree, 1e+50 best solution, best possible 682.91879 (610.94 seconds)
Cbc0010I After 3800 nodes, 863 on tree, 1e+50 best solution, best possible 683.42541 (621.62 seconds)
Cbc0010I After 3900 nodes, 868 on tree, 1e+50 best solution, best possible 684.25055 (631.61 seconds)
Cbc0010I After 4000 nodes, 887 on tree, 1e+50 best solution, best possible 684.3061 (642.06 seconds)
Cbc0010I After 4100 nodes, 911 on tree, 1e+50 best solution, best possible 684.3061 (652.80 seconds)
Cbc0010I After 4200 nodes, 955 on tree, 1e+50 best solution, best possible 684.3061 (663.39 seconds)
Couenne: new cutoff value 7.0221139671e+02 (682.828 seconds)
Cbc0010I After 4300 nodes, 969 on tree, 1e+50 best solution, best possible 686.08962 (674.14 seconds)
Cbc0010I After 4400 nodes, 980 on tree, 1e+50 best solution, best possible 686.93528 (684.51 seconds)
Cbc0010I After 4500 nodes, 993 on tree, 1e+50 best solution, best possible 687.83289 (694.87 seconds)
Cbc0010I After 4600 nodes, 1001 on tree, 1e+50 best solution, best possible 688.70174 (705.23 seconds)
Cbc0010I After 4700 nodes, 1010 on tree, 1e+50 best solution, best possible 690.95689 (715.60 seconds)
Cbc0010I After 4800 nodes, 1025 on tree, 1e+50 best solution, best possible 691.64194 (726.04 seconds)
Cbc0010I After 4900 nodes, 1036 on tree, 1e+50 best solution, best possible 692.33227 (736.35 seconds)
Cbc0010I After 5000 nodes, 1041 on tree, 1e+50 best solution, best possible 692.54143 (746.24 seconds)
Cbc0010I After 5100 nodes, 1047 on tree, 1e+50 best solution, best possible 692.97603 (756.24 seconds)
Cbc0010I After 5200 nodes, 1056 on tree, 1e+50 best solution, best possible 693.19717 (767.08 seconds)
Cbc0010I After 5300 nodes, 1058 on tree, 1e+50 best solution, best possible 693.75566 (776.76 seconds)
Cbc0010I After 5400 nodes, 1066 on tree, 1e+50 best solution, best possible 693.94039 (787.74 seconds)
Cbc0010I After 5500 nodes, 1068 on tree, 1e+50 best solution, best possible 694.17202 (797.86 seconds)
Cbc0010I After 5600 nodes, 1073 on tree, 1e+50 best solution, best possible 694.56212 (808.24 seconds)
Cbc0010I After 5700 nodes, 1078 on tree, 1e+50 best solution, best possible 694.8529 (818.93 seconds)
Cbc0010I After 5800 nodes, 1084 on tree, 1e+50 best solution, best possible 694.92944 (828.83 seconds)
Cbc0010I After 5900 nodes, 1084 on tree, 1e+50 best solution, best possible 695.0621 (839.08 seconds)
Cbc0010I After 6000 nodes, 1092 on tree, 1e+50 best solution, best possible 695.23351 (849.83 seconds)
Cbc0010I After 6100 nodes, 1093 on tree, 1e+50 best solution, best possible 695.47674 (860.10 seconds)
Cbc0010I After 6200 nodes, 1092 on tree, 1e+50 best solution, best possible 695.58725 (869.82 seconds)
Cbc0010I After 6300 nodes, 1097 on tree, 1e+50 best solution, best possible 695.74761 (880.07 seconds)
Cbc0010I After 6400 nodes, 1099 on tree, 1e+50 best solution, best possible 695.87522 (889.89 seconds)
Cbc0010I After 6500 nodes, 1098 on tree, 1e+50 best solution, best possible 696.01538 (899.83 seconds)
Cbc0010I After 6600 nodes, 1095 on tree, 1e+50 best solution, best possible 696.20191 (909.34 seconds)
Cbc0010I After 6700 nodes, 1094 on tree, 1e+50 best solution, best possible 696.29313 (922.30 seconds)
Cbc0010I After 6800 nodes, 1104 on tree, 1e+50 best solution, best possible 696.39615 (932.32 seconds)
Cbc0010I After 6900 nodes, 1109 on tree, 1e+50 best solution, best possible 696.42423 (942.52 seconds)
Cbc0010I After 7000 nodes, 1114 on tree, 1e+50 best solution, best possible 696.53012 (952.87 seconds)
Cbc0010I After 7100 nodes, 1113 on tree, 1e+50 best solution, best possible 696.63865 (962.66 seconds)
Cbc0010I After 7200 nodes, 1113 on tree, 1e+50 best solution, best possible 696.77798 (972.87 seconds)
Cbc0010I After 7300 nodes, 1116 on tree, 1e+50 best solution, best possible 696.89912 (983.00 seconds)
Cbc0010I After 7400 nodes, 1115 on tree, 1e+50 best solution, best possible 697.01216 (992.73 seconds)
Cbc0010I After 7500 nodes, 1115 on tree, 1e+50 best solution, best possible 697.16621 (1002.71 seconds)
Cbc0010I After 7600 nodes, 1107 on tree, 1e+50 best solution, best possible 697.25859 (1011.92 seconds)
Cbc0010I After 7700 nodes, 1104 on tree, 1e+50 best solution, best possible 697.43918 (1022.41 seconds)
Cbc0010I After 7800 nodes, 1099 on tree, 1e+50 best solution, best possible 697.57661 (1032.29 seconds)
Cbc0010I After 7900 nodes, 1102 on tree, 1e+50 best solution, best possible 697.66445 (1042.12 seconds)
Cbc0010I After 8000 nodes, 1097 on tree, 1e+50 best solution, best possible 697.80417 (1052.23 seconds)
Cbc0010I After 8100 nodes, 1092 on tree, 1e+50 best solution, best possible 697.87115 (1073.43 seconds)
Cbc0010I After 8200 nodes, 1081 on tree, 1e+50 best solution, best possible 698.03899 (1082.69 seconds)
Cbc0010I After 8300 nodes, 1080 on tree, 1e+50 best solution, best possible 698.14581 (1097.72 seconds)
Cbc0010I After 8400 nodes, 1099 on tree, 1e+50 best solution, best possible 698.14581 (1108.31 seconds)
Cbc0010I After 8500 nodes, 1149 on tree, 1e+50 best solution, best possible 698.14581 (1119.40 seconds)
Couenne: new cutoff value 7.0182268608e+02 (1138.58 seconds)
Couenne: new cutoff value 7.0181482716e+02 (1138.74 seconds)
Cbc0010I After 8600 nodes, 1168 on tree, 1e+50 best solution, best possible 698.17007 (1130.13 seconds)
Cbc0010I After 8700 nodes, 1191 on tree, 1e+50 best solution, best possible 698.17007 (1141.67 seconds)
Couenne: new cutoff value 7.0179788848e+02 (1161.19 seconds)
Cbc0010I After 8800 nodes, 1207 on tree, 1e+50 best solution, best possible 698.18839 (1151.94 seconds)
Cbc0010I After 8900 nodes, 1220 on tree, 1e+50 best solution, best possible 698.28534 (1162.80 seconds)
Cbc0010I After 9000 nodes, 1241 on tree, 1e+50 best solution, best possible 698.30433 (1173.92 seconds)
Cbc0010I After 9100 nodes, 1247 on tree, 1e+50 best solution, best possible 698.35748 (1183.99 seconds)
Cbc0010I After 9200 nodes, 1259 on tree, 1e+50 best solution, best possible 698.43132 (1195.04 seconds)
Cbc0010I After 9300 nodes, 1277 on tree, 1e+50 best solution, best possible 698.46645 (1206.54 seconds)
Cbc0010I After 9400 nodes, 1268 on tree, 1e+50 best solution, best possible 698.53804 (1216.08 seconds)
Cbc0010I After 9500 nodes, 1288 on tree, 1e+50 best solution, best possible 698.55813 (1227.82 seconds)
Cbc0010I After 9600 nodes, 1302 on tree, 1e+50 best solution, best possible 698.59881 (1238.83 seconds)
Cbc0010I After 9700 nodes, 1297 on tree, 1e+50 best solution, best possible 698.69325 (1250.58 seconds)
Cbc0010I After 9800 nodes, 1308 on tree, 1e+50 best solution, best possible 698.75177 (1297.61 seconds)
Cbc0010I After 9900 nodes, 1326 on tree, 1e+50 best solution, best possible 698.77142 (1354.63 seconds)
Cbc0010I After 10000 nodes, 1342 on tree, 1e+50 best solution, best possible 698.80044 (1365.45 seconds)
Cbc0010I After 10100 nodes, 1353 on tree, 1e+50 best solution, best possible 698.85338 (1376.12 seconds)
Cbc0010I After 10200 nodes, 1358 on tree, 1e+50 best solution, best possible 698.9313 (1386.07 seconds)
Cbc0010I After 10300 nodes, 1358 on tree, 1e+50 best solution, best possible 698.98407 (1396.15 seconds)
Cbc0010I After 10400 nodes, 1377 on tree, 1e+50 best solution, best possible 699.00336 (1407.37 seconds)
Cbc0010I After 10500 nodes, 1392 on tree, 1e+50 best solution, best possible 699.06025 (1418.22 seconds)
Cbc0010I After 10600 nodes, 1388 on tree, 1e+50 best solution, best possible 699.14686 (1428.23 seconds)
Cbc0010I After 10700 nodes, 1409 on tree, 1e+50 best solution, best possible 699.182 (1439.86 seconds)
Cbc0010I After 10800 nodes, 1383 on tree, 1e+50 best solution, best possible 699.46872 (1449.05 seconds)
Cbc0010I After 10900 nodes, 1396 on tree, 1e+50 best solution, best possible 699.5067 (1459.98 seconds)
Cbc0010I After 11000 nodes, 1408 on tree, 1e+50 best solution, best possible 699.52348 (1470.83 seconds)
Cbc0010I After 11100 nodes, 1417 on tree, 1e+50 best solution, best possible 699.58628 (1482.29 seconds)
Cbc0010I After 11200 nodes, 1418 on tree, 1e+50 best solution, best possible 699.60691 (1492.45 seconds)
Cbc0010I After 11300 nodes, 1419 on tree, 1e+50 best solution, best possible 699.62066 (1502.48 seconds)
Cbc0010I After 11400 nodes, 1420 on tree, 1e+50 best solution, best possible 699.66359 (1512.27 seconds)
Cbc0010I After 11500 nodes, 1408 on tree, 1e+50 best solution, best possible 699.76895 (1522.25 seconds)
Cbc0010I After 11600 nodes, 1391 on tree, 1e+50 best solution, best possible 699.88821 (1531.51 seconds)
Cbc0010I After 11700 nodes, 1392 on tree, 1e+50 best solution, best possible 699.94429 (1542.25 seconds)
Cbc0010I After 11800 nodes, 1409 on tree, 1e+50 best solution, best possible 699.94429 (1552.61 seconds)
Couenne: new cutoff value 7.0178924315e+02 (1571.16 seconds)
Cbc0010I After 11900 nodes, 1386 on tree, 1e+50 best solution, best possible 700.10764 (1561.51 seconds)
Cbc0010I After 12000 nodes, 1381 on tree, 1e+50 best solution, best possible 700.14239 (1570.71 seconds)
Cbc0010I After 12100 nodes, 1381 on tree, 1e+50 best solution, best possible 700.20107 (1580.62 seconds)
Cbc0010I After 12200 nodes, 1385 on tree, 1e+50 best solution, best possible 700.25601 (1590.48 seconds)
Cbc0010I After 12300 nodes, 1371 on tree, 1e+50 best solution, best possible 700.34314 (1600.03 seconds)
Cbc0010I After 12400 nodes, 1361 on tree, 1e+50 best solution, best possible 700.37454 (1609.35 seconds)
Cbc0010I After 12500 nodes, 1355 on tree, 1e+50 best solution, best possible 700.42282 (1618.74 seconds)
Cbc0010I After 12600 nodes, 1340 on tree, 1e+50 best solution, best possible 700.52204 (1627.52 seconds)
Cbc0010I After 12700 nodes, 1329 on tree, 1e+50 best solution, best possible 700.55271 (1637.15 seconds)
Cbc0010I After 12800 nodes, 1305 on tree, 1e+50 best solution, best possible 700.6413 (1646.41 seconds)
Cbc0010I After 12900 nodes, 1289 on tree, 1e+50 best solution, best possible 700.68471 (1655.49 seconds)
Cbc0010I After 13000 nodes, 1260 on tree, 1e+50 best solution, best possible 700.77212 (1663.63 seconds)
Cbc0010I After 13100 nodes, 1239 on tree, 1e+50 best solution, best possible 700.80279 (1672.49 seconds)
Cbc0010I After 13200 nodes, 1221 on tree, 1e+50 best solution, best possible 700.83615 (1681.20 seconds)
Cbc0010I After 13300 nodes, 1203 on tree, 1e+50 best solution, best possible 700.87558 (1690.63 seconds)
Cbc0010I After 13400 nodes, 1189 on tree, 1e+50 best solution, best possible 700.90633 (1699.34 seconds)
Cbc0010I After 13500 nodes, 1167 on tree, 1e+50 best solution, best possible 700.96056 (1707.22 seconds)
Cbc0010I After 13600 nodes, 1147 on tree, 1e+50 best solution, best possible 701.01677 (1715.50 seconds)
Cbc0010I After 13700 nodes, 1124 on tree, 1e+50 best solution, best possible 701.09479 (1724.05 seconds)
Cbc0010I After 13800 nodes, 1096 on tree, 1e+50 best solution, best possible 701.14562 (1732.07 seconds)
Cbc0010I After 13900 nodes, 1061 on tree, 1e+50 best solution, best possible 701.23849 (1740.26 seconds)
Cbc0010I After 14000 nodes, 1026 on tree, 1e+50 best solution, best possible 701.33768 (1747.56 seconds)
Cbc0010I After 14100 nodes, 990 on tree, 1e+50 best solution, best possible 701.42629 (1754.80 seconds)
Cbc0010I After 14200 nodes, 951 on tree, 1e+50 best solution, best possible 701.53149 (1762.76 seconds)
Cbc0010I After 14300 nodes, 930 on tree, 1e+50 best solution, best possible 701.61109 (1771.29 seconds)
Cbc0010I After 14400 nodes, 903 on tree, 1e+50 best solution, best possible 701.67996 (1779.24 seconds)
Cbc0010I After 14500 nodes, 885 on tree, 1e+50 best solution, best possible 701.71539 (1788.75 seconds)
Cbc0010I After 14600 nodes, 846 on tree, 1e+50 best solution, best possible 701.77224 (1795.85 seconds)
Cbc0010I After 14700 nodes, 796 on tree, 1e+50 best solution, best possible 701.80225 (1800.57 seconds)
Cbc0010I After 14800 nodes, 746 on tree, 1e+50 best solution, best possible 701.82465 (1804.17 seconds)
Cbc0010I After 14900 nodes, 696 on tree, 1e+50 best solution, best possible 702.0592 (1807.01 seconds)
Cbc0010I After 15000 nodes, 646 on tree, 1e+50 best solution, best possible 702.21934 (1810.07 seconds)
Cbc0010I After 15100 nodes, 596 on tree, 1e+50 best solution, best possible 702.41473 (1812.89 seconds)
Cbc0010I After 15200 nodes, 546 on tree, 1e+50 best solution, best possible 702.48911 (1816.43 seconds)
Cbc0010I After 15300 nodes, 496 on tree, 1e+50 best solution, best possible 702.88344 (1819.74 seconds)
Cbc0010I After 15400 nodes, 446 on tree, 1e+50 best solution, best possible 702.9331 (1824.14 seconds)
Cbc0010I After 15500 nodes, 396 on tree, 1e+50 best solution, best possible 703.40593 (1828.42 seconds)
Cbc0010I After 15600 nodes, 346 on tree, 1e+50 best solution, best possible 704.44426 (1831.07 seconds)
Cbc0010I After 15700 nodes, 296 on tree, 1e+50 best solution, best possible 705.08147 (1833.90 seconds)
Cbc0010I After 15800 nodes, 246 on tree, 1e+50 best solution, best possible 705.14094 (1837.02 seconds)
Cbc0010I After 15900 nodes, 196 on tree, 1e+50 best solution, best possible 705.18591 (1840.21 seconds)
Cbc0010I After 16000 nodes, 146 on tree, 1e+50 best solution, best possible 705.76142 (1843.08 seconds)
Cbc0010I After 16100 nodes, 96 on tree, 1e+50 best solution, best possible 706.28239 (1846.13 seconds)
Cbc0010I After 16200 nodes, 46 on tree, 1e+50 best solution, best possible 707.28265 (1849.91 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1039402 iterations and 16292 nodes (1853.94 seconds)
Cbc0035I Maximum depth 203, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       5601
Linearization cuts added in total:           5601  (separation time: 0.032487s)
Total solve time:                         1854.08s (1854.08s in branch-and-bound)
Lower bound:                              701.789
Upper bound:                              701.789  (gap: 0.00%)
Branch-and-bound nodes:                     16292
Stats: /tmp/jl_PEoDxI/model.nl 5150 [var]   50 [int] 5200 [con]  249 [aux]   5601 [root]     5601 [tot] 0.032487 [sep]  1854.08 [time]  1854.09 [bb]         7.017892e+02 [lower]         7.017892e+02 [upper]   16292 [nodes]
Performance of                           FBBT:	    142.934s,    18991 runs. fix:          0 shrnk:    2.86715 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    16.3539s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-7.txt
