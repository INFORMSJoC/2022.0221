solving instance uflp nldep holmberg 48 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3560.3762       52 27.957937
NLP0014I             2         OPT 4057.5785       49 0.848029
Couenne: new cutoff value 4.0575769974e+03 (29.7261 seconds)
Loaded instance "/tmp/jl_RMFtWt/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 1979 (-62) rows, 1699 (-180) columns and 8617 (-242) elements
Clp0006I 0  Obj 0 Primal inf 9237.0138 (300)
Clp0006I 114  Obj 9.2094692e-10 Primal inf 4617.8615 (160)
Clp0006I 222  Obj 747.50083 Primal inf 384.23583 (208)
Clp0006I 336  Obj 2425.034 Primal inf 3648.3812 (158)
Clp0006I 417  Obj 3555.6752
Clp0000I Optimal - objective value 3555.6738
Clp0032I Optimal objective 3555.673822 - 417 iterations time 0.042, Presolve 0.01
Clp0000I Optimal - objective value 3555.6738
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 3555.6738
Optimality Based BT: 18 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 10 added rows had average density of 2
Cbc0013I At root node, 10 cuts changed objective from 3555.6738 to 3555.7063 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 10 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (4.56 seconds)
Optimality Based BT: 8 improved bounds
Optimality Based BT: 6 improved bounds
Optimality Based BT: 8 improved bounds
Cbc0010I After 100 nodes, 36 on tree, 1e+50 best solution, best possible 3560.3297 (23.34 seconds)
Cbc0010I After 200 nodes, 86 on tree, 1e+50 best solution, best possible 3560.376 (26.44 seconds)
Couenne: new cutoff value 3.5605281570e+03 (57.6561 seconds)
Cbc0004I Integer solution of 3560.5282 found after 7755 iterations and 251 nodes (27.86 seconds)
Cbc0010I After 300 nodes, 26 on tree, 3560.5282 best solution, best possible 3560.3778 (29.25 seconds)
Couenne: new cutoff value 3.5604134779e+03 (60.7041 seconds)
Cbc0004I Integer solution of 3560.4135 found after 10011 iterations and 346 nodes (30.89 seconds)
Couenne: new cutoff value 3.5603909647e+03 (60.8247 seconds)
Cbc0004I Integer solution of 3560.391 found after 10100 iterations and 350 nodes (31.04 seconds)
Couenne: new cutoff value 3.5603777885e+03 (60.885 seconds)
Cbc0004I Integer solution of 3560.3778 found after 10101 iterations and 351 nodes (31.08 seconds)
Cbc0001I Search completed - best objective 3560.377788486035, took 10101 iterations and 351 nodes (31.08 seconds)
Cbc0035I Maximum depth 127, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2041
Linearization cuts added in total:           2041  (separation time: 0.013356s)
Total solve time:                         31.1252s (31.1252s in branch-and-bound)
Lower bound:                              3560.38
Upper bound:                              3560.38  (gap: 0.00%)
Branch-and-bound nodes:                       351
Stats: /tmp/jl_RMFtWt/model.nl 1660 [var]   20 [int] 1720 [con]  219 [aux]   2041 [root]     2041 [tot] 0.013356 [sep]  31.1252 [time]  31.1287 [bb]         3.560378e+03 [lower]         3.560378e+03 [upper]     351 [nodes]
Performance of                           FBBT:	    1.45643s,      476 runs. fix: 0.00251977 shrnk:    33.3628 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.03786s,        4 runs. fix:          0 shrnk:    8.98438 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p48
