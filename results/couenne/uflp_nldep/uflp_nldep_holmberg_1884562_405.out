solving instance uflp nldep holmberg 41 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.0271677387e+04 (0.240797 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3318.621       25 0.264193
Couenne: new cutoff value 3.3186206688e+03 (0.509734 seconds)
Loaded instance "/tmp/jl_bMCNII/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1111 (-20) rows, 951 (-118) columns and 4751 (-138) elements
Clp0006I 0  Obj 0 Primal inf 104.99989 (110)
Clp0006I 97  Obj 2166 Primal inf 60.950343 (70)
Clp0006I 144  Obj 3075.5661
Clp0000I Optimal - objective value 3075.5661
Clp0032I Optimal objective 3075.566084 - 144 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 3075.5661
NLP Heuristic: NLP0014I             2         OPT 3318.621       17 0.181969
no solution.
Clp0000I Optimal - objective value 3075.5661
Optimality Based BT: 9 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 3075.5661 to 3164.661 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 56 row cuts average 2.0 elements, 9 column cuts (9 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.75 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 7 improved bounds
Optimality Based BT: 6 improved bounds
Optimality Based BT: 6 improved bounds
Optimality Based BT: 13 improved bounds
Cbc0010I After 100 nodes, 25 on tree, 1e+50 best solution, best possible 3243.7527 (13.22 seconds)
Optimality Based BT: 3 improved bounds
Cbc0010I After 200 nodes, 46 on tree, 1e+50 best solution, best possible 3271.2689 (20.49 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 54 on tree, 1e+50 best solution, best possible 3296.2735 (28.14 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 400 nodes, 51 on tree, 1e+50 best solution, best possible 3305.9499 (30.86 seconds)
Cbc0010I After 500 nodes, 35 on tree, 1e+50 best solution, best possible 3312.5761 (32.99 seconds)
Cbc0010I After 600 nodes, 23 on tree, 1e+50 best solution, best possible 3318.6189 (34.70 seconds)
Cbc0010I After 700 nodes, 49 on tree, 1e+50 best solution, best possible 3318.6192 (36.20 seconds)
Cbc0010I After 800 nodes, 71 on tree, 1e+50 best solution, best possible 3318.6193 (37.65 seconds)
Cbc0010I After 900 nodes, 95 on tree, 1e+50 best solution, best possible 3318.6193 (39.19 seconds)
Cbc0010I After 1000 nodes, 125 on tree, 1e+50 best solution, best possible 3318.6195 (40.83 seconds)
Cbc0010I After 1100 nodes, 144 on tree, 1e+50 best solution, best possible 3318.6196 (42.33 seconds)
Cbc0010I After 1200 nodes, 168 on tree, 1e+50 best solution, best possible 3318.6196 (43.85 seconds)
Cbc0010I After 1300 nodes, 188 on tree, 1e+50 best solution, best possible 3318.6196 (45.38 seconds)
Cbc0010I After 1400 nodes, 211 on tree, 1e+50 best solution, best possible 3318.6197 (46.93 seconds)
Cbc0010I After 1500 nodes, 232 on tree, 1e+50 best solution, best possible 3318.6197 (48.45 seconds)
Cbc0010I After 1600 nodes, 249 on tree, 1e+50 best solution, best possible 3318.6198 (49.97 seconds)
Cbc0010I After 1700 nodes, 269 on tree, 1e+50 best solution, best possible 3318.6199 (51.49 seconds)
Cbc0010I After 1800 nodes, 283 on tree, 1e+50 best solution, best possible 3318.6199 (52.96 seconds)
Cbc0010I After 1900 nodes, 295 on tree, 1e+50 best solution, best possible 3318.6199 (54.37 seconds)
Cbc0010I After 2000 nodes, 309 on tree, 1e+50 best solution, best possible 3318.62 (55.80 seconds)
Cbc0010I After 2100 nodes, 316 on tree, 1e+50 best solution, best possible 3318.62 (57.20 seconds)
Cbc0010I After 2200 nodes, 327 on tree, 1e+50 best solution, best possible 3318.62 (58.63 seconds)
Cbc0010I After 2300 nodes, 334 on tree, 1e+50 best solution, best possible 3318.6201 (60.03 seconds)
Cbc0010I After 2400 nodes, 342 on tree, 1e+50 best solution, best possible 3318.6201 (61.45 seconds)
Cbc0010I After 2500 nodes, 346 on tree, 1e+50 best solution, best possible 3318.6202 (62.83 seconds)
Cbc0010I After 2600 nodes, 348 on tree, 1e+50 best solution, best possible 3318.6202 (64.24 seconds)
Cbc0010I After 2700 nodes, 350 on tree, 1e+50 best solution, best possible 3318.6202 (65.63 seconds)
Cbc0010I After 2800 nodes, 336 on tree, 1e+50 best solution, best possible 3318.6203 (66.92 seconds)
Cbc0010I After 2900 nodes, 322 on tree, 1e+50 best solution, best possible 3318.6203 (68.18 seconds)
Cbc0010I After 3000 nodes, 304 on tree, 1e+50 best solution, best possible 3318.6204 (69.35 seconds)
Cbc0010I After 3100 nodes, 280 on tree, 1e+50 best solution, best possible 3318.6205 (70.43 seconds)
Cbc0010I After 3200 nodes, 249 on tree, 1e+50 best solution, best possible 3318.6206 (71.48 seconds)
Cbc0010I After 3300 nodes, 204 on tree, 1e+50 best solution, best possible 3318.6208 (72.34 seconds)
Cbc0010I After 3400 nodes, 154 on tree, 1e+50 best solution, best possible 3318.6211 (73.08 seconds)
Cbc0010I After 3500 nodes, 104 on tree, 1e+50 best solution, best possible 3318.6215 (73.82 seconds)
Cbc0010I After 3600 nodes, 54 on tree, 1e+50 best solution, best possible 3318.6227 (74.56 seconds)
Cbc0010I After 3700 nodes, 4 on tree, 1e+50 best solution, best possible 3318.6287 (75.32 seconds)
Cbc0001I Search completed - best objective 1e+50, took 16065 iterations and 3708 nodes (75.38 seconds)
Cbc0035I Maximum depth 69, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1131
Linearization cuts added in total:           1131  (separation time: 0.005811s)
Total solve time:                         75.3996s (75.3996s in branch-and-bound)
Lower bound:                              3318.62
Upper bound:                              3318.62  (gap: 0.00%)
Branch-and-bound nodes:                      3708
Stats: /tmp/jl_bMCNII/model.nl  930 [var]   10 [int] 1010 [con]  139 [aux]   1131 [root]     1131 [tot] 0.005811 [sep]  75.3996 [time]  75.4011 [bb]         3.318621e+03 [lower]         3.318621e+03 [upper]    3708 [nodes]
Performance of                           FBBT:	    3.83679s,     2414 runs. fix:          0 shrnk:    1.69604 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	    2.77534s,       12 runs. fix:  0.0580475 shrnk:    16.9227 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p41
