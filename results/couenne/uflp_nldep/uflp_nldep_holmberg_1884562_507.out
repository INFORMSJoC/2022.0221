solving instance uflp nldep holmberg 51 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4183.2665       56 17.759338
Couenne: new cutoff value 4.1832695437e+03 (18.9299 seconds)
NLP0014I             2         OPT 4183.2667       65 1.23412
Couenne: new cutoff value 4.1832679408e+03 (20.1669 seconds)
Loaded instance "/tmp/jl_3ufFTG/model.nl"
Constraints:         2140
Variables:           2060 (20 integer)
Auxiliaries:          239 (0 integer)

Coin0506I Presolve 2399 (-62) rows, 2099 (-200) columns and 10617 (-262) elements
Clp0006I 0  Obj 0 Primal inf 5241.0441 (320)
Clp0006I 122  Obj 3.3322552e-14 Primal inf 7331.6992 (126)
Clp0006I 244  Obj 4095 Primal inf 73.594512 (128)
Clp0006I 366  Obj 4169.5364 Primal inf 2034.201 (109)
Clp0006I 368  Obj 4169.8196
Clp0000I Optimal - objective value 4169.8196
Clp0032I Optimal objective 4169.81959 - 368 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 4169.8196
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 4169.8196
Optimality Based BT: 35 improved bounds
Probing: 2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 35 added rows had average density of 2
Cbc0013I At root node, 35 cuts changed objective from 4169.8196 to 4176.1137 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 175 row cuts average 2.0 elements, 14 column cuts (14 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (6.13 seconds)
Optimality Based BT: 35 improved bounds
Optimality Based BT: 35 improved bounds
Optimality Based BT: 36 improved bounds
Optimality Based BT: 39 improved bounds
Optimality Based BT: 47 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 1398 iterations and 26 nodes (53.81 seconds)
Cbc0035I Maximum depth 8, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2461
Linearization cuts added in total:           2461  (separation time: 0.014931s)
Total solve time:                         53.8502s (53.8502s in branch-and-bound)
Lower bound:                              4183.27
Upper bound:                              4183.27  (gap: 0.00%)
Branch-and-bound nodes:                        26
Stats: /tmp/jl_3ufFTG/model.nl 2060 [var]   20 [int] 2140 [con]  239 [aux]   2461 [root]     2461 [tot] 0.014931 [sep]  53.8502 [time]  53.8545 [bb]         4.183268e+03 [lower]         4.183268e+03 [upper]      26 [nodes]
Performance of                           FBBT:	   0.246865s,       75 runs. fix: 0.00932215 shrnk:    16.1959 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	      6.773s,        6 runs. fix:    13.7895 shrnk:    102.865 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p51
f0 = 0.30349091130065775
f0 = 0.2726124755578583
f0 = 0.3846570852531593
f0 = 0.3846570852531593
f0 = 0.4296513773355242
f0 = 0.33260486500101155
f0 = 0.35642537257402834
f0 = 0.41112431588984455
f0 = 0.2708479935154126
f0 = 0.274376957600304
f0 = 0.358189854616474
f0 = 0.3828926032107136
f0 = 0.26643678840929835
f0 = 0.33260486500101155
f0 = 0.2761414396427497
f0 = 0.3378983111283486
f0 = 0.38553932627438214
f0 = 0.36877674687114814
f0 = 0.4287691363143014
f0 = 0.4137710389535131
