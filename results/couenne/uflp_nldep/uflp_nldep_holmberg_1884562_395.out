solving instance uflp nldep holmberg 40 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 6.8818968395e+04 (6.05781 seconds)
6.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8202.4025       35 3.202325
NLP0014I             2         OPT 8202.9582       40 2.112252
Couenne: new cutoff value 8.2029509242e+03 (11.4789 seconds)
Loaded instance "/tmp/jl_XsZkak/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          299 (0 integer)

Coin0506I Presolve 5031 (-40) rows, 4671 (-218) columns and 23291 (-258) elements
Clp0006I 0  Obj 0 Primal inf 1961.6891 (210)
Clp0006I 175  Obj 6141 Primal inf 238.36103 (131)
Clp0006I 261  Obj 7889
Clp0000I Optimal - objective value 7889
Clp0032I Optimal objective 7889 - 261 iterations time 0.082, Presolve 0.06
Clp0000I Optimal - objective value 7889
NLP Heuristic: NLP0014I             3         OPT 8202.4025       40 3.103509
no solution.
Clp0000I Optimal - objective value 7889
Optimality Based BT: 30 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 58 added rows had average density of 2
Cbc0013I At root node, 58 cuts changed objective from 7889 to 8017.2755 in 11 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 157 row cuts average 2.0 elements, 20 column cuts (20 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (34.83 seconds)
Optimality Based BT: 26 improved bounds
Optimality Based BT: 26 improved bounds
Optimality Based BT: 27 improved bounds
Optimality Based BT: 27 improved bounds
Optimality Based BT: 28 improved bounds
Cbc0010I After 100 nodes, 36 on tree, 1e+50 best solution, best possible 8052.658 (252.91 seconds)
Cbc0010I After 200 nodes, 82 on tree, 1e+50 best solution, best possible 8052.658 (267.99 seconds)
Cbc0010I After 300 nodes, 127 on tree, 1e+50 best solution, best possible 8052.658 (281.22 seconds)
Cbc0010I After 400 nodes, 177 on tree, 1e+50 best solution, best possible 8052.658 (292.53 seconds)
Cbc0010I After 500 nodes, 227 on tree, 1e+50 best solution, best possible 8052.658 (303.32 seconds)
Cbc0010I After 600 nodes, 277 on tree, 1e+50 best solution, best possible 8052.658 (313.70 seconds)
Cbc0010I After 700 nodes, 327 on tree, 1e+50 best solution, best possible 8052.658 (323.92 seconds)
Cbc0010I After 800 nodes, 372 on tree, 1e+50 best solution, best possible 8052.658 (334.37 seconds)
Cbc0010I After 900 nodes, 419 on tree, 1e+50 best solution, best possible 8052.658 (344.20 seconds)
Cbc0010I After 1000 nodes, 469 on tree, 1e+50 best solution, best possible 8052.658 (354.40 seconds)
Cbc0010I After 1100 nodes, 517 on tree, 1e+50 best solution, best possible 8052.658 (364.37 seconds)
Couenne: new cutoff value 8.2024355579e+03 (380.975 seconds)
Cbc0004I Integer solution of 8202.4356 found after 9914 iterations and 1150 nodes (369.15 seconds)
Optimality Based BT: 30 improved bounds
Optimality Based BT: 30 improved bounds
Optimality Based BT: 27 improved bounds
Cbc0010I After 1200 nodes, 458 on tree, 8202.4356 best solution, best possible 8066.3449 (506.23 seconds)
Cbc0010I After 1300 nodes, 490 on tree, 8202.4356 best solution, best possible 8066.8292 (570.14 seconds)
Optimality Based BT: 27 improved bounds
Cbc0010I After 1400 nodes, 520 on tree, 8202.4356 best solution, best possible 8067.2513 (664.02 seconds)
Optimality Based BT: 30 improved bounds
Cbc0010I After 1500 nodes, 549 on tree, 8202.4356 best solution, best possible 8079.2006 (732.57 seconds)
Optimality Based BT: 25 improved bounds
Cbc0010I After 1600 nodes, 586 on tree, 8202.4356 best solution, best possible 8099.5792 (796.63 seconds)
Optimality Based BT: 30 improved bounds
Cbc0010I After 1700 nodes, 613 on tree, 8202.4356 best solution, best possible 8118.6227 (821.54 seconds)
Cbc0010I After 1800 nodes, 635 on tree, 8202.4356 best solution, best possible 8136.5903 (840.20 seconds)
Cbc0010I After 1900 nodes, 646 on tree, 8202.4356 best solution, best possible 8138.8663 (876.87 seconds)
Optimality Based BT: 23 improved bounds
Cbc0010I After 2000 nodes, 660 on tree, 8202.4356 best solution, best possible 8145.2993 (915.78 seconds)
Optimality Based BT: 27 improved bounds
Cbc0010I After 2100 nodes, 677 on tree, 8202.4356 best solution, best possible 8146.1223 (933.73 seconds)
Cbc0010I After 2200 nodes, 678 on tree, 8202.4356 best solution, best possible 8150.0458 (1040.28 seconds)
Cbc0010I After 2300 nodes, 681 on tree, 8202.4356 best solution, best possible 8153.1216 (1105.06 seconds)
Cbc0010I After 2400 nodes, 691 on tree, 8202.4356 best solution, best possible 8154.084 (1118.64 seconds)
Cbc0010I After 2500 nodes, 699 on tree, 8202.4356 best solution, best possible 8156.051 (1131.83 seconds)
Cbc0010I After 2600 nodes, 718 on tree, 8202.4356 best solution, best possible 8158.7854 (1151.41 seconds)
Cbc0010I After 2700 nodes, 732 on tree, 8202.4356 best solution, best possible 8160.8041 (1166.15 seconds)
Cbc0010I After 2800 nodes, 737 on tree, 8202.4356 best solution, best possible 8163.9419 (1180.39 seconds)
Cbc0010I After 2900 nodes, 738 on tree, 8202.4356 best solution, best possible 8165.0115 (1222.28 seconds)
Cbc0010I After 3000 nodes, 761 on tree, 8202.4356 best solution, best possible 8165.6994 (1238.48 seconds)
Cbc0010I After 3100 nodes, 776 on tree, 8202.4356 best solution, best possible 8167.0412 (1253.36 seconds)
Cbc0010I After 3200 nodes, 800 on tree, 8202.4356 best solution, best possible 8167.8969 (1273.66 seconds)
Cbc0010I After 3300 nodes, 812 on tree, 8202.4356 best solution, best possible 8168.6087 (1289.46 seconds)
Cbc0010I After 3400 nodes, 811 on tree, 8202.4356 best solution, best possible 8170.8257 (1304.65 seconds)
Cbc0010I After 3500 nodes, 826 on tree, 8202.4356 best solution, best possible 8172.7549 (1318.72 seconds)
Cbc0010I After 3600 nodes, 841 on tree, 8202.4356 best solution, best possible 8173.8209 (1333.61 seconds)
Cbc0010I After 3700 nodes, 856 on tree, 8202.4356 best solution, best possible 8174.9803 (1348.90 seconds)
Cbc0010I After 3800 nodes, 872 on tree, 8202.4356 best solution, best possible 8176.2374 (1363.64 seconds)
Cbc0010I After 3900 nodes, 888 on tree, 8202.4356 best solution, best possible 8177.0127 (1378.83 seconds)
Cbc0010I After 4000 nodes, 902 on tree, 8202.4356 best solution, best possible 8178.052 (1393.70 seconds)
Cbc0010I After 4100 nodes, 923 on tree, 8202.4356 best solution, best possible 8178.2771 (1409.38 seconds)
Cbc0010I After 4200 nodes, 943 on tree, 8202.4356 best solution, best possible 8178.8851 (1423.72 seconds)
Cbc0010I After 4300 nodes, 949 on tree, 8202.4356 best solution, best possible 8179.3816 (1436.43 seconds)
Cbc0010I After 4400 nodes, 956 on tree, 8202.4356 best solution, best possible 8180.1375 (1449.82 seconds)
Cbc0010I After 4500 nodes, 961 on tree, 8202.4356 best solution, best possible 8180.7268 (1464.23 seconds)
Cbc0010I After 4600 nodes, 967 on tree, 8202.4356 best solution, best possible 8181.0618 (1477.99 seconds)
Cbc0010I After 4700 nodes, 975 on tree, 8202.4356 best solution, best possible 8181.2486 (1516.35 seconds)
Cbc0010I After 4800 nodes, 981 on tree, 8202.4356 best solution, best possible 8181.6445 (1528.65 seconds)
Cbc0010I After 4900 nodes, 987 on tree, 8202.4356 best solution, best possible 8182.3211 (1542.54 seconds)
Cbc0010I After 5000 nodes, 996 on tree, 8202.4356 best solution, best possible 8182.5875 (1556.73 seconds)
Cbc0010I After 5100 nodes, 1008 on tree, 8202.4356 best solution, best possible 8182.8974 (1573.33 seconds)
Cbc0010I After 5200 nodes, 1022 on tree, 8202.4356 best solution, best possible 8182.998 (1587.91 seconds)
Cbc0010I After 5300 nodes, 1030 on tree, 8202.4356 best solution, best possible 8183.3771 (1601.77 seconds)
Cbc0010I After 5400 nodes, 1033 on tree, 8202.4356 best solution, best possible 8183.696 (1637.80 seconds)
Cbc0010I After 5500 nodes, 1035 on tree, 8202.4356 best solution, best possible 8184.1223 (1651.83 seconds)
Cbc0010I After 5600 nodes, 1047 on tree, 8202.4356 best solution, best possible 8184.2679 (1667.10 seconds)
Cbc0010I After 5700 nodes, 1059 on tree, 8202.4356 best solution, best possible 8184.6101 (1682.68 seconds)
Cbc0010I After 5800 nodes, 1064 on tree, 8202.4356 best solution, best possible 8184.9172 (1695.92 seconds)
Cbc0010I After 5900 nodes, 1078 on tree, 8202.4356 best solution, best possible 8185.2352 (1710.68 seconds)
Cbc0010I After 6000 nodes, 1088 on tree, 8202.4356 best solution, best possible 8185.6009 (1725.44 seconds)
Cbc0010I After 6100 nodes, 1094 on tree, 8202.4356 best solution, best possible 8186.1046 (1739.08 seconds)
Cbc0010I After 6200 nodes, 1110 on tree, 8202.4356 best solution, best possible 8186.22 (1754.95 seconds)
Cbc0010I After 6300 nodes, 1113 on tree, 8202.4356 best solution, best possible 8186.6207 (1768.19 seconds)
Cbc0010I After 6400 nodes, 1119 on tree, 8202.4356 best solution, best possible 8187.0284 (1782.20 seconds)
Cbc0010I After 6500 nodes, 1136 on tree, 8202.4356 best solution, best possible 8187.2447 (1798.22 seconds)
Cbc0010I After 6600 nodes, 1149 on tree, 8202.4356 best solution, best possible 8187.4528 (1815.32 seconds)
Cbc0010I After 6700 nodes, 1160 on tree, 8202.4356 best solution, best possible 8187.6076 (1830.36 seconds)
Cbc0010I After 6800 nodes, 1170 on tree, 8202.4356 best solution, best possible 8188.0602 (1846.95 seconds)
Cbc0010I After 6900 nodes, 1181 on tree, 8202.4356 best solution, best possible 8188.2299 (1861.92 seconds)
Cbc0010I After 7000 nodes, 1202 on tree, 8202.4356 best solution, best possible 8188.3114 (1877.55 seconds)
Cbc0010I After 7100 nodes, 1218 on tree, 8202.4356 best solution, best possible 8188.54 (1893.04 seconds)
Cbc0010I After 7200 nodes, 1224 on tree, 8202.4356 best solution, best possible 8188.6883 (1907.83 seconds)
Cbc0010I After 7300 nodes, 1234 on tree, 8202.4356 best solution, best possible 8188.7671 (1922.72 seconds)
Cbc0010I After 7400 nodes, 1242 on tree, 8202.4356 best solution, best possible 8189.098 (1937.52 seconds)
Cbc0010I After 7500 nodes, 1251 on tree, 8202.4356 best solution, best possible 8189.24 (1952.10 seconds)
Cbc0010I After 7600 nodes, 1257 on tree, 8202.4356 best solution, best possible 8189.4755 (1968.45 seconds)
Cbc0010I After 7700 nodes, 1256 on tree, 8202.4356 best solution, best possible 8189.7868 (1982.12 seconds)
Cbc0010I After 7800 nodes, 1273 on tree, 8202.4356 best solution, best possible 8189.8781 (1997.55 seconds)
Cbc0010I After 7900 nodes, 1302 on tree, 8202.4356 best solution, best possible 8189.9576 (2012.54 seconds)
Cbc0010I After 8000 nodes, 1310 on tree, 8202.4356 best solution, best possible 8190.3052 (2026.86 seconds)
Cbc0010I After 8100 nodes, 1318 on tree, 8202.4356 best solution, best possible 8190.4271 (2041.71 seconds)
Cbc0010I After 8200 nodes, 1323 on tree, 8202.4356 best solution, best possible 8190.6131 (2056.39 seconds)
Cbc0010I After 8300 nodes, 1326 on tree, 8202.4356 best solution, best possible 8190.7319 (2073.18 seconds)
Cbc0010I After 8400 nodes, 1332 on tree, 8202.4356 best solution, best possible 8190.7815 (2087.54 seconds)
Cbc0010I After 8500 nodes, 1345 on tree, 8202.4356 best solution, best possible 8190.9556 (2102.80 seconds)
Cbc0010I After 8600 nodes, 1350 on tree, 8202.4356 best solution, best possible 8191.065 (2117.48 seconds)
Cbc0010I After 8700 nodes, 1358 on tree, 8202.4356 best solution, best possible 8191.1507 (2132.04 seconds)
Cbc0010I After 8800 nodes, 1363 on tree, 8202.4356 best solution, best possible 8191.3166 (2146.77 seconds)
Cbc0010I After 8900 nodes, 1368 on tree, 8202.4356 best solution, best possible 8191.428 (2161.25 seconds)
Cbc0010I After 9000 nodes, 1375 on tree, 8202.4356 best solution, best possible 8191.6016 (2175.27 seconds)
Cbc0010I After 9100 nodes, 1377 on tree, 8202.4356 best solution, best possible 8191.7619 (2190.10 seconds)
Cbc0010I After 9200 nodes, 1386 on tree, 8202.4356 best solution, best possible 8191.838 (2205.33 seconds)
Cbc0010I After 9300 nodes, 1385 on tree, 8202.4356 best solution, best possible 8192.0603 (2219.81 seconds)
Cbc0010I After 9400 nodes, 1387 on tree, 8202.4356 best solution, best possible 8192.2732 (2233.99 seconds)
Cbc0010I After 9500 nodes, 1396 on tree, 8202.4356 best solution, best possible 8192.392 (2249.35 seconds)
Cbc0010I After 9600 nodes, 1398 on tree, 8202.4356 best solution, best possible 8192.6178 (2263.30 seconds)
Cbc0010I After 9700 nodes, 1401 on tree, 8202.4356 best solution, best possible 8192.775 (2277.17 seconds)
Cbc0010I After 9800 nodes, 1400 on tree, 8202.4356 best solution, best possible 8192.8728 (2291.38 seconds)
Cbc0010I After 9900 nodes, 1400 on tree, 8202.4356 best solution, best possible 8193.0098 (2307.50 seconds)
Cbc0010I After 10000 nodes, 1402 on tree, 8202.4356 best solution, best possible 8193.1041 (2321.58 seconds)
Cbc0010I After 10100 nodes, 1401 on tree, 8202.4356 best solution, best possible 8193.2719 (2338.22 seconds)
Cbc0010I After 10200 nodes, 1403 on tree, 8202.4356 best solution, best possible 8193.3959 (2352.65 seconds)
Cbc0010I After 10300 nodes, 1402 on tree, 8202.4356 best solution, best possible 8193.589 (2366.41 seconds)
Cbc0010I After 10400 nodes, 1400 on tree, 8202.4356 best solution, best possible 8193.7402 (2380.29 seconds)
Cbc0010I After 10500 nodes, 1398 on tree, 8202.4356 best solution, best possible 8193.8594 (2395.79 seconds)
Cbc0010I After 10600 nodes, 1393 on tree, 8202.4356 best solution, best possible 8193.9879 (2409.69 seconds)
Cbc0010I After 10700 nodes, 1389 on tree, 8202.4356 best solution, best possible 8194.1311 (2423.14 seconds)
Cbc0010I After 10800 nodes, 1386 on tree, 8202.4356 best solution, best possible 8194.3169 (2437.17 seconds)
Cbc0010I After 10900 nodes, 1383 on tree, 8202.4356 best solution, best possible 8194.5635 (2452.32 seconds)
Cbc0010I After 11000 nodes, 1384 on tree, 8202.4356 best solution, best possible 8194.6283 (2466.92 seconds)
Cbc0010I After 11100 nodes, 1384 on tree, 8202.4356 best solution, best possible 8194.6718 (2481.13 seconds)
Cbc0010I After 11200 nodes, 1379 on tree, 8202.4356 best solution, best possible 8194.7606 (2494.73 seconds)
Cbc0010I After 11300 nodes, 1373 on tree, 8202.4356 best solution, best possible 8194.863 (2507.67 seconds)
Cbc0010I After 11400 nodes, 1369 on tree, 8202.4356 best solution, best possible 8194.9776 (2521.85 seconds)
Cbc0010I After 11500 nodes, 1367 on tree, 8202.4356 best solution, best possible 8195.0565 (2537.93 seconds)
Cbc0010I After 11600 nodes, 1362 on tree, 8202.4356 best solution, best possible 8195.1311 (2551.56 seconds)
Cbc0010I After 11700 nodes, 1362 on tree, 8202.4356 best solution, best possible 8195.2114 (2565.57 seconds)
Cbc0010I After 11800 nodes, 1364 on tree, 8202.4356 best solution, best possible 8195.3226 (2580.19 seconds)
Cbc0010I After 11900 nodes, 1354 on tree, 8202.4356 best solution, best possible 8195.4152 (2593.75 seconds)
Cbc0010I After 12000 nodes, 1345 on tree, 8202.4356 best solution, best possible 8195.5194 (2607.59 seconds)
Cbc0010I After 12100 nodes, 1339 on tree, 8202.4356 best solution, best possible 8195.63 (2621.54 seconds)
Cbc0010I After 12200 nodes, 1325 on tree, 8202.4356 best solution, best possible 8195.7416 (2634.82 seconds)
Cbc0010I After 12300 nodes, 1311 on tree, 8202.4356 best solution, best possible 8195.9958 (2648.98 seconds)
Cbc0010I After 12400 nodes, 1297 on tree, 8202.4356 best solution, best possible 8196.139 (2661.75 seconds)
Cbc0010I After 12500 nodes, 1299 on tree, 8202.4356 best solution, best possible 8196.2372 (2676.75 seconds)
Cbc0010I After 12600 nodes, 1285 on tree, 8202.4356 best solution, best possible 8196.3464 (2689.48 seconds)
Cbc0010I After 12700 nodes, 1284 on tree, 8202.4356 best solution, best possible 8196.4365 (2703.74 seconds)
Cbc0010I After 12800 nodes, 1276 on tree, 8202.4356 best solution, best possible 8196.5476 (2717.36 seconds)
Cbc0010I After 12900 nodes, 1257 on tree, 8202.4356 best solution, best possible 8196.7364 (2731.03 seconds)
Cbc0010I After 13000 nodes, 1247 on tree, 8202.4356 best solution, best possible 8196.9428 (2745.61 seconds)
Cbc0010I After 13100 nodes, 1270 on tree, 8202.4356 best solution, best possible 8196.9691 (2762.14 seconds)
Cbc0010I After 13200 nodes, 1302 on tree, 8202.4356 best solution, best possible 8196.9741 (2776.17 seconds)
Cbc0010I After 13300 nodes, 1298 on tree, 8202.4356 best solution, best possible 8197.1192 (2792.91 seconds)
Cbc0010I After 13400 nodes, 1296 on tree, 8202.4356 best solution, best possible 8197.2487 (2807.98 seconds)
Cbc0010I After 13500 nodes, 1299 on tree, 8202.4356 best solution, best possible 8197.317 (2823.09 seconds)
Cbc0010I After 13600 nodes, 1313 on tree, 8202.4356 best solution, best possible 8197.3626 (2837.10 seconds)
Cbc0010I After 13700 nodes, 1302 on tree, 8202.4356 best solution, best possible 8197.5405 (2851.03 seconds)
Cbc0010I After 13800 nodes, 1287 on tree, 8202.4356 best solution, best possible 8197.669 (2864.62 seconds)
Cbc0010I After 13900 nodes, 1296 on tree, 8202.4356 best solution, best possible 8197.754 (2880.57 seconds)
Cbc0010I After 14000 nodes, 1289 on tree, 8202.4356 best solution, best possible 8197.9242 (2895.21 seconds)
Cbc0010I After 14100 nodes, 1292 on tree, 8202.4356 best solution, best possible 8198.0442 (2910.56 seconds)
Cbc0010I After 14200 nodes, 1291 on tree, 8202.4356 best solution, best possible 8198.1355 (2925.67 seconds)
Cbc0010I After 14300 nodes, 1289 on tree, 8202.4356 best solution, best possible 8198.2916 (2941.30 seconds)
Cbc0010I After 14400 nodes, 1300 on tree, 8202.4356 best solution, best possible 8198.3584 (2957.66 seconds)
Cbc0010I After 14500 nodes, 1299 on tree, 8202.4356 best solution, best possible 8198.4741 (2972.87 seconds)
Cbc0010I After 14600 nodes, 1306 on tree, 8202.4356 best solution, best possible 8198.5464 (2988.31 seconds)
Cbc0010I After 14700 nodes, 1302 on tree, 8202.4356 best solution, best possible 8198.7136 (3002.79 seconds)
Cbc0010I After 14800 nodes, 1306 on tree, 8202.4356 best solution, best possible 8198.8564 (3017.83 seconds)
Cbc0010I After 14900 nodes, 1315 on tree, 8202.4356 best solution, best possible 8198.9437 (3033.85 seconds)
Cbc0010I After 15000 nodes, 1301 on tree, 8202.4356 best solution, best possible 8199.0845 (3047.74 seconds)
Cbc0010I After 15100 nodes, 1305 on tree, 8202.4356 best solution, best possible 8199.121 (3063.06 seconds)
Cbc0010I After 15200 nodes, 1324 on tree, 8202.4356 best solution, best possible 8199.1337 (3079.13 seconds)
Cbc0010I After 15300 nodes, 1330 on tree, 8202.4356 best solution, best possible 8199.2047 (3095.12 seconds)
Cbc0010I After 15400 nodes, 1338 on tree, 8202.4356 best solution, best possible 8199.2651 (3112.57 seconds)
Cbc0010I After 15500 nodes, 1345 on tree, 8202.4356 best solution, best possible 8199.3123 (3128.74 seconds)
Cbc0010I After 15600 nodes, 1347 on tree, 8202.4356 best solution, best possible 8199.3754 (3143.66 seconds)
Cbc0010I After 15700 nodes, 1347 on tree, 8202.4356 best solution, best possible 8199.4364 (3159.36 seconds)
Cbc0010I After 15800 nodes, 1375 on tree, 8202.4356 best solution, best possible 8199.4417 (3175.48 seconds)
Cbc0010I After 15900 nodes, 1380 on tree, 8202.4356 best solution, best possible 8199.4776 (3191.42 seconds)
Cbc0010I After 16000 nodes, 1408 on tree, 8202.4356 best solution, best possible 8199.508 (3207.93 seconds)
Cbc0010I After 16100 nodes, 1408 on tree, 8202.4356 best solution, best possible 8199.5641 (3222.99 seconds)
Cbc0010I After 16200 nodes, 1415 on tree, 8202.4356 best solution, best possible 8199.6278 (3238.96 seconds)
Cbc0010I After 16300 nodes, 1421 on tree, 8202.4356 best solution, best possible 8199.663 (3257.07 seconds)
Cbc0010I After 16400 nodes, 1432 on tree, 8202.4356 best solution, best possible 8199.686 (3273.48 seconds)
Cbc0010I After 16500 nodes, 1432 on tree, 8202.4356 best solution, best possible 8199.7341 (3288.70 seconds)
Cbc0010I After 16600 nodes, 1434 on tree, 8202.4356 best solution, best possible 8199.8035 (3303.58 seconds)
Cbc0010I After 16700 nodes, 1445 on tree, 8202.4356 best solution, best possible 8199.843 (3319.59 seconds)
Cbc0010I After 16800 nodes, 1462 on tree, 8202.4356 best solution, best possible 8199.8457 (3335.91 seconds)
Cbc0010I After 16900 nodes, 1470 on tree, 8202.4356 best solution, best possible 8199.8932 (3351.88 seconds)
Cbc0010I After 17000 nodes, 1479 on tree, 8202.4356 best solution, best possible 8199.9438 (3367.05 seconds)
Cbc0010I After 17100 nodes, 1481 on tree, 8202.4356 best solution, best possible 8200.0213 (3382.73 seconds)
Cbc0010I After 17200 nodes, 1494 on tree, 8202.4356 best solution, best possible 8200.0316 (3398.89 seconds)
Cbc0010I After 17300 nodes, 1502 on tree, 8202.4356 best solution, best possible 8200.0495 (3415.06 seconds)
Cbc0010I After 17400 nodes, 1501 on tree, 8202.4356 best solution, best possible 8200.0771 (3430.69 seconds)
Cbc0010I After 17500 nodes, 1512 on tree, 8202.4356 best solution, best possible 8200.1019 (3446.78 seconds)
Cbc0010I After 17600 nodes, 1510 on tree, 8202.4356 best solution, best possible 8200.133 (3461.51 seconds)
Cbc0010I After 17700 nodes, 1515 on tree, 8202.4356 best solution, best possible 8200.1574 (3477.17 seconds)
Cbc0010I After 17800 nodes, 1516 on tree, 8202.4356 best solution, best possible 8200.1931 (3492.86 seconds)
Cbc0010I After 17900 nodes, 1525 on tree, 8202.4356 best solution, best possible 8200.2097 (3509.02 seconds)
Cbc0010I After 18000 nodes, 1530 on tree, 8202.4356 best solution, best possible 8200.2369 (3525.06 seconds)
Cbc0010I After 18100 nodes, 1537 on tree, 8202.4356 best solution, best possible 8200.261 (3541.28 seconds)
Cbc0010I After 18200 nodes, 1537 on tree, 8202.4356 best solution, best possible 8200.3141 (3556.48 seconds)
Cbc0010I After 18300 nodes, 1541 on tree, 8202.4356 best solution, best possible 8200.3302 (3572.85 seconds)
Cbc0010I After 18400 nodes, 1536 on tree, 8202.4356 best solution, best possible 8200.3717 (3587.55 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 8202.4356 (best possible 8200.3717), took 817384 iterations and 18405 nodes (3601.61 seconds)
Cbc0035I Maximum depth 575, 4794 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5071
Linearization cuts added in total:           5071  (separation time: 0.037317s)
Total solve time:                         3601.73s (3601.73s in branch-and-bound)
Lower bound:                              8200.37
Upper bound:                              8202.44  (gap: 0.03%)
Branch-and-bound nodes:                     18405
Stats: /tmp/jl_XsZkak/model.nl 4590 [var]   30 [int] 4710 [con]  299 [aux]   5071 [root]     5071 [tot] 0.037317 [sep]  3601.73 [time]  3601.74 [bb]         8.200372e+03 [lower]         8.202436e+03 [upper]   18405 [nodes]
Performance of                           FBBT:	    286.077s,    25990 runs. fix: 1.5923e-06 shrnk:   0.556322 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    28.8614s,       15 runs. fix:    2.74388 shrnk:    52.0669 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p40
