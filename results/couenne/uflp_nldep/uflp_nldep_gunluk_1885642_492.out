solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-9.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.5703463233e+03 (6.09819 seconds)
6.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 640.01099       63 4.15142
NLP0014I             2         OPT 756.65433       33 3.565917
Loaded instance "/tmp/jl_hQd0AC/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          249 (0 integer)

Coin0506I Presolve 5600 (-1) rows, 5250 (-149) columns and 26149 (-150) elements
Clp0006I 0  Obj 0 Primal inf 19733.277 (100) Dual inf 4.1278505e+13 (5001)
Clp0029I End of values pass after 50 iterations
Clp0006I 50  Obj 0 Primal inf 19733.277 (100) Dual inf 4.1278505e+13 (5050)
Clp0006I 238  Obj 200.17042 Primal inf 17730.828 (97) Dual inf 2.5778286e+13 (4470)
Clp0006I 434  Obj 817.20093 Primal inf 1840.652 (22) Dual inf 2.4252546e+09 (2240)
Clp0006I 621  Obj 805.22932 Dual inf 18.157435 (419)
Clp0006I 804  Obj 627.48943 Dual inf 8.9014524 (251)
Clp0006I 986  Obj 550.18065
Clp0000I Optimal - objective value 550.18065
Clp0006I 0  Obj 550.18065 Dual inf 4.6396009e-07 (1)
Clp0000I Optimal - objective value 550.18065
Clp0032I Optimal objective 550.1806516 - 986 iterations time 0.162, Presolve 0.02
Clp0006I 0  Obj 550.18065 Dual inf 4.6396009e-07 (1)
Clp0000I Optimal - objective value 550.18065
NLP Heuristic: time limit reached.
Clp0006I 0  Obj 550.18065 Dual inf 8.6396009e-07 (1)
Clp0006I 0  Obj 550.18065 Dual inf 8.6396009e-07 (1)
Clp0006I 1  Obj 550.17798
Clp0000I Optimal - objective value 550.17798
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 550.17798 to 550.21301 in 11 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 204 row cuts average 2.0 elements, 892 column cuts (892 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (21.53 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 550.27164 (218.51 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 550.27164 (227.90 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 550.27164 (236.41 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 550.27164 (244.26 seconds)
Couenne: new cutoff value 6.9042402115e+02 (265.773 seconds)
Cbc0010I After 500 nodes, 246 on tree, 1e+50 best solution, best possible 550.27164 (250.09 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 600 nodes, 260 on tree, 1e+50 best solution, best possible 564.68918 (324.83 seconds)
Cbc0010I After 700 nodes, 308 on tree, 1e+50 best solution, best possible 564.68918 (336.37 seconds)
Cbc0010I After 800 nodes, 358 on tree, 1e+50 best solution, best possible 564.68918 (347.16 seconds)
Cbc0010I After 900 nodes, 408 on tree, 1e+50 best solution, best possible 564.68918 (357.24 seconds)
Couenne: new cutoff value 6.4126795560e+02 (379.548 seconds)
Cbc0010I After 1000 nodes, 445 on tree, 1e+50 best solution, best possible 564.73887 (365.78 seconds)
Cbc0010I After 1100 nodes, 455 on tree, 1e+50 best solution, best possible 564.73887 (374.78 seconds)
Cbc0010I After 1200 nodes, 489 on tree, 1e+50 best solution, best possible 564.73887 (385.69 seconds)
Cbc0010I After 1300 nodes, 532 on tree, 1e+50 best solution, best possible 564.73887 (397.25 seconds)
Cbc0010I After 1400 nodes, 582 on tree, 1e+50 best solution, best possible 564.73887 (408.31 seconds)
Couenne: new cutoff value 6.4072640814e+02 (424.862 seconds)
Cbc0010I After 1500 nodes, 590 on tree, 1e+50 best solution, best possible 610.45788 (421.55 seconds)
Cbc0010I After 1600 nodes, 618 on tree, 1e+50 best solution, best possible 610.45788 (431.63 seconds)
Cbc0010I After 1700 nodes, 661 on tree, 1e+50 best solution, best possible 610.45788 (442.78 seconds)
Cbc0010I After 1800 nodes, 709 on tree, 1e+50 best solution, best possible 610.45788 (453.73 seconds)
Couenne: new cutoff value 6.3998723562e+02 (474.518 seconds)
Couenne: new cutoff value 6.3998097690e+02 (474.615 seconds)
Cbc0010I After 1900 nodes, 729 on tree, 1e+50 best solution, best possible 629.21224 (463.08 seconds)
Cbc0010I After 2000 nodes, 742 on tree, 1e+50 best solution, best possible 629.61676 (472.00 seconds)
Cbc0010I After 2100 nodes, 757 on tree, 1e+50 best solution, best possible 629.64336 (481.27 seconds)
Cbc0010I After 2200 nodes, 770 on tree, 1e+50 best solution, best possible 629.9862 (490.45 seconds)
Cbc0010I After 2300 nodes, 782 on tree, 1e+50 best solution, best possible 630.6027 (499.85 seconds)
Cbc0010I After 2400 nodes, 790 on tree, 1e+50 best solution, best possible 631.11393 (508.91 seconds)
Cbc0010I After 2500 nodes, 801 on tree, 1e+50 best solution, best possible 631.8525 (517.85 seconds)
Cbc0010I After 2600 nodes, 807 on tree, 1e+50 best solution, best possible 633.41298 (526.42 seconds)
Cbc0010I After 2700 nodes, 803 on tree, 1e+50 best solution, best possible 634.61007 (547.56 seconds)
Cbc0010I After 2800 nodes, 825 on tree, 1e+50 best solution, best possible 634.79224 (557.96 seconds)
Cbc0010I After 2900 nodes, 842 on tree, 1e+50 best solution, best possible 635.06538 (567.89 seconds)
Cbc0010I After 3000 nodes, 863 on tree, 1e+50 best solution, best possible 635.29713 (578.66 seconds)
Cbc0010I After 3100 nodes, 883 on tree, 1e+50 best solution, best possible 635.47894 (604.64 seconds)
Cbc0010I After 3200 nodes, 901 on tree, 1e+50 best solution, best possible 635.64117 (614.91 seconds)
Cbc0010I After 3300 nodes, 914 on tree, 1e+50 best solution, best possible 635.77597 (624.43 seconds)
Cbc0010I After 3400 nodes, 935 on tree, 1e+50 best solution, best possible 635.81421 (634.70 seconds)
Cbc0010I After 3500 nodes, 952 on tree, 1e+50 best solution, best possible 635.82051 (645.03 seconds)
Cbc0010I After 3600 nodes, 966 on tree, 1e+50 best solution, best possible 635.88202 (654.97 seconds)
Cbc0010I After 3700 nodes, 985 on tree, 1e+50 best solution, best possible 635.93785 (665.26 seconds)
Cbc0010I After 3800 nodes, 1003 on tree, 1e+50 best solution, best possible 636.00348 (675.74 seconds)
Cbc0010I After 3900 nodes, 1026 on tree, 1e+50 best solution, best possible 636.03785 (686.30 seconds)
Cbc0010I After 4000 nodes, 1040 on tree, 1e+50 best solution, best possible 636.06233 (696.72 seconds)
Cbc0010I After 4100 nodes, 1062 on tree, 1e+50 best solution, best possible 636.13663 (707.33 seconds)
Cbc0010I After 4200 nodes, 1078 on tree, 1e+50 best solution, best possible 636.16041 (717.76 seconds)
Cbc0010I After 4300 nodes, 1098 on tree, 1e+50 best solution, best possible 636.25772 (728.32 seconds)
Cbc0010I After 4400 nodes, 1115 on tree, 1e+50 best solution, best possible 636.32586 (738.52 seconds)
Cbc0010I After 4500 nodes, 1136 on tree, 1e+50 best solution, best possible 636.37439 (748.57 seconds)
Cbc0010I After 4600 nodes, 1146 on tree, 1e+50 best solution, best possible 636.38913 (758.15 seconds)
Cbc0010I After 4700 nodes, 1155 on tree, 1e+50 best solution, best possible 636.46324 (768.14 seconds)
Cbc0010I After 4800 nodes, 1166 on tree, 1e+50 best solution, best possible 636.47767 (777.93 seconds)
Cbc0010I After 4900 nodes, 1179 on tree, 1e+50 best solution, best possible 636.50256 (787.90 seconds)
Cbc0010I After 5000 nodes, 1188 on tree, 1e+50 best solution, best possible 636.5217 (798.02 seconds)
Cbc0010I After 5100 nodes, 1200 on tree, 1e+50 best solution, best possible 636.54236 (807.89 seconds)
Cbc0010I After 5200 nodes, 1211 on tree, 1e+50 best solution, best possible 636.57363 (817.85 seconds)
Cbc0010I After 5300 nodes, 1218 on tree, 1e+50 best solution, best possible 636.59828 (827.57 seconds)
Cbc0010I After 5400 nodes, 1222 on tree, 1e+50 best solution, best possible 636.63096 (836.87 seconds)
Cbc0010I After 5500 nodes, 1233 on tree, 1e+50 best solution, best possible 636.65187 (846.49 seconds)
Cbc0010I After 5600 nodes, 1244 on tree, 1e+50 best solution, best possible 636.70659 (856.41 seconds)
Cbc0010I After 5700 nodes, 1250 on tree, 1e+50 best solution, best possible 636.72492 (865.99 seconds)
Cbc0010I After 5800 nodes, 1260 on tree, 1e+50 best solution, best possible 636.75372 (875.34 seconds)
Cbc0010I After 5900 nodes, 1271 on tree, 1e+50 best solution, best possible 636.78833 (884.96 seconds)
Cbc0010I After 6000 nodes, 1281 on tree, 1e+50 best solution, best possible 636.8236 (894.64 seconds)
Cbc0010I After 6100 nodes, 1289 on tree, 1e+50 best solution, best possible 636.86774 (903.91 seconds)
Cbc0010I After 6200 nodes, 1307 on tree, 1e+50 best solution, best possible 636.88504 (1156.32 seconds)
Cbc0010I After 6300 nodes, 1323 on tree, 1e+50 best solution, best possible 636.91505 (1166.11 seconds)
Cbc0010I After 6400 nodes, 1331 on tree, 1e+50 best solution, best possible 636.96929 (1175.38 seconds)
Cbc0010I After 6500 nodes, 1342 on tree, 1e+50 best solution, best possible 637.01374 (1184.84 seconds)
Cbc0010I After 6600 nodes, 1353 on tree, 1e+50 best solution, best possible 637.03686 (1194.27 seconds)
Cbc0010I After 6700 nodes, 1360 on tree, 1e+50 best solution, best possible 637.07118 (1219.11 seconds)
Cbc0010I After 6800 nodes, 1367 on tree, 1e+50 best solution, best possible 637.11648 (1228.53 seconds)
Cbc0010I After 6900 nodes, 1368 on tree, 1e+50 best solution, best possible 637.16754 (1237.54 seconds)
Cbc0010I After 7000 nodes, 1375 on tree, 1e+50 best solution, best possible 637.1804 (1247.06 seconds)
Cbc0010I After 7100 nodes, 1380 on tree, 1e+50 best solution, best possible 637.19657 (1256.06 seconds)
Cbc0010I After 7200 nodes, 1387 on tree, 1e+50 best solution, best possible 637.21015 (1265.33 seconds)
Cbc0010I After 7300 nodes, 1391 on tree, 1e+50 best solution, best possible 637.23286 (1274.46 seconds)
Cbc0010I After 7400 nodes, 1399 on tree, 1e+50 best solution, best possible 637.26493 (1284.11 seconds)
Cbc0010I After 7500 nodes, 1405 on tree, 1e+50 best solution, best possible 637.29304 (1293.13 seconds)
Cbc0010I After 7600 nodes, 1411 on tree, 1e+50 best solution, best possible 637.31443 (1302.46 seconds)
Cbc0010I After 7700 nodes, 1411 on tree, 1e+50 best solution, best possible 637.34249 (1311.24 seconds)
Cbc0010I After 7800 nodes, 1421 on tree, 1e+50 best solution, best possible 637.35607 (1320.96 seconds)
Cbc0010I After 7900 nodes, 1426 on tree, 1e+50 best solution, best possible 637.37029 (1329.85 seconds)
Cbc0010I After 8000 nodes, 1434 on tree, 1e+50 best solution, best possible 637.38595 (1339.35 seconds)
Cbc0010I After 8100 nodes, 1435 on tree, 1e+50 best solution, best possible 637.41131 (1348.37 seconds)
Cbc0010I After 8200 nodes, 1441 on tree, 1e+50 best solution, best possible 637.42446 (1357.86 seconds)
Cbc0010I After 8300 nodes, 1445 on tree, 1e+50 best solution, best possible 637.4343 (1367.08 seconds)
Cbc0010I After 8400 nodes, 1450 on tree, 1e+50 best solution, best possible 637.45376 (1376.39 seconds)
Cbc0010I After 8500 nodes, 1452 on tree, 1e+50 best solution, best possible 637.4717 (1385.68 seconds)
Cbc0010I After 8600 nodes, 1455 on tree, 1e+50 best solution, best possible 637.49973 (1395.03 seconds)
Cbc0010I After 8700 nodes, 1463 on tree, 1e+50 best solution, best possible 637.51475 (1404.42 seconds)
Cbc0010I After 8800 nodes, 1467 on tree, 1e+50 best solution, best possible 637.53866 (1413.55 seconds)
Cbc0010I After 8900 nodes, 1472 on tree, 1e+50 best solution, best possible 637.55974 (1422.60 seconds)
Cbc0010I After 9000 nodes, 1473 on tree, 1e+50 best solution, best possible 637.58005 (1431.31 seconds)
Cbc0010I After 9100 nodes, 1475 on tree, 1e+50 best solution, best possible 637.59937 (1440.04 seconds)
Cbc0010I After 9200 nodes, 1477 on tree, 1e+50 best solution, best possible 637.61384 (1448.94 seconds)
Cbc0010I After 9300 nodes, 1481 on tree, 1e+50 best solution, best possible 637.63215 (1458.27 seconds)
Cbc0010I After 9400 nodes, 1484 on tree, 1e+50 best solution, best possible 637.65716 (1467.60 seconds)
Cbc0010I After 9500 nodes, 1484 on tree, 1e+50 best solution, best possible 637.68189 (1476.51 seconds)
Cbc0010I After 9600 nodes, 1482 on tree, 1e+50 best solution, best possible 637.70317 (1485.52 seconds)
Cbc0010I After 9700 nodes, 1483 on tree, 1e+50 best solution, best possible 637.73044 (1494.85 seconds)
Cbc0010I After 9800 nodes, 1486 on tree, 1e+50 best solution, best possible 637.74764 (1503.90 seconds)
Cbc0010I After 9900 nodes, 1483 on tree, 1e+50 best solution, best possible 637.77061 (1513.08 seconds)
Cbc0010I After 10000 nodes, 1484 on tree, 1e+50 best solution, best possible 637.80726 (1522.39 seconds)
Cbc0010I After 10100 nodes, 1476 on tree, 1e+50 best solution, best possible 637.84023 (1533.69 seconds)
Cbc0010I After 10200 nodes, 1480 on tree, 1e+50 best solution, best possible 637.85704 (1542.99 seconds)
Cbc0010I After 10300 nodes, 1487 on tree, 1e+50 best solution, best possible 637.87833 (1552.36 seconds)
Cbc0010I After 10400 nodes, 1490 on tree, 1e+50 best solution, best possible 637.89429 (1561.44 seconds)
Cbc0010I After 10500 nodes, 1491 on tree, 1e+50 best solution, best possible 637.90023 (1570.26 seconds)
Cbc0010I After 10600 nodes, 1488 on tree, 1e+50 best solution, best possible 637.92393 (1579.10 seconds)
Cbc0010I After 10700 nodes, 1489 on tree, 1e+50 best solution, best possible 637.93745 (1587.98 seconds)
Cbc0010I After 10800 nodes, 1492 on tree, 1e+50 best solution, best possible 637.95801 (1597.04 seconds)
Cbc0010I After 10900 nodes, 1492 on tree, 1e+50 best solution, best possible 637.97217 (1605.90 seconds)
Cbc0010I After 11000 nodes, 1487 on tree, 1e+50 best solution, best possible 637.99864 (1614.48 seconds)
Cbc0010I After 11100 nodes, 1487 on tree, 1e+50 best solution, best possible 638.01879 (1623.02 seconds)
Cbc0010I After 11200 nodes, 1487 on tree, 1e+50 best solution, best possible 638.03837 (1631.39 seconds)
Cbc0010I After 11300 nodes, 1481 on tree, 1e+50 best solution, best possible 638.05481 (1639.37 seconds)
Cbc0010I After 11400 nodes, 1478 on tree, 1e+50 best solution, best possible 638.07148 (1647.63 seconds)
Cbc0010I After 11500 nodes, 1476 on tree, 1e+50 best solution, best possible 638.07852 (1655.97 seconds)
Cbc0010I After 11600 nodes, 1471 on tree, 1e+50 best solution, best possible 638.09167 (1663.88 seconds)
Cbc0010I After 11700 nodes, 1473 on tree, 1e+50 best solution, best possible 638.09934 (1673.12 seconds)
Cbc0010I After 11800 nodes, 1472 on tree, 1e+50 best solution, best possible 638.10882 (1681.40 seconds)
Cbc0010I After 11900 nodes, 1470 on tree, 1e+50 best solution, best possible 638.11865 (1690.22 seconds)
Cbc0010I After 12000 nodes, 1467 on tree, 1e+50 best solution, best possible 638.13186 (1698.50 seconds)
Cbc0010I After 12100 nodes, 1458 on tree, 1e+50 best solution, best possible 638.14617 (1706.33 seconds)
Cbc0010I After 12200 nodes, 1453 on tree, 1e+50 best solution, best possible 638.15923 (1714.58 seconds)
Cbc0010I After 12300 nodes, 1450 on tree, 1e+50 best solution, best possible 638.16998 (1723.22 seconds)
Cbc0010I After 12400 nodes, 1444 on tree, 1e+50 best solution, best possible 638.18455 (1731.48 seconds)
Cbc0010I After 12500 nodes, 1436 on tree, 1e+50 best solution, best possible 638.19555 (1739.61 seconds)
Cbc0010I After 12600 nodes, 1428 on tree, 1e+50 best solution, best possible 638.20996 (1747.78 seconds)
Cbc0010I After 12700 nodes, 1422 on tree, 1e+50 best solution, best possible 638.22857 (1756.24 seconds)
Cbc0010I After 12800 nodes, 1415 on tree, 1e+50 best solution, best possible 638.23991 (1764.02 seconds)
Cbc0010I After 12900 nodes, 1412 on tree, 1e+50 best solution, best possible 638.2466 (1772.36 seconds)
Cbc0010I After 13000 nodes, 1404 on tree, 1e+50 best solution, best possible 638.26434 (1779.99 seconds)
Cbc0010I After 13100 nodes, 1395 on tree, 1e+50 best solution, best possible 638.27954 (1787.81 seconds)
Cbc0010I After 13200 nodes, 1387 on tree, 1e+50 best solution, best possible 638.28963 (1795.86 seconds)
Cbc0010I After 13300 nodes, 1378 on tree, 1e+50 best solution, best possible 638.301 (1803.68 seconds)
Cbc0010I After 13400 nodes, 1368 on tree, 1e+50 best solution, best possible 638.31873 (1811.34 seconds)
Cbc0010I After 13500 nodes, 1355 on tree, 1e+50 best solution, best possible 638.34716 (1818.79 seconds)
Cbc0010I After 13600 nodes, 1343 on tree, 1e+50 best solution, best possible 638.37069 (1827.20 seconds)
Cbc0010I After 13700 nodes, 1329 on tree, 1e+50 best solution, best possible 638.38939 (1834.51 seconds)
Cbc0010I After 13800 nodes, 1313 on tree, 1e+50 best solution, best possible 638.40904 (1842.06 seconds)
Cbc0010I After 13900 nodes, 1305 on tree, 1e+50 best solution, best possible 638.44129 (1900.15 seconds)
Cbc0010I After 14000 nodes, 1287 on tree, 1e+50 best solution, best possible 638.47421 (1908.35 seconds)
Cbc0010I After 14100 nodes, 1264 on tree, 1e+50 best solution, best possible 638.50832 (1915.96 seconds)
Cbc0010I After 14200 nodes, 1246 on tree, 1e+50 best solution, best possible 638.5433 (1923.89 seconds)
Cbc0010I After 14300 nodes, 1241 on tree, 1e+50 best solution, best possible 638.56114 (1932.46 seconds)
Cbc0010I After 14400 nodes, 1228 on tree, 1e+50 best solution, best possible 638.59112 (1940.45 seconds)
Cbc0010I After 14500 nodes, 1208 on tree, 1e+50 best solution, best possible 638.62045 (1947.82 seconds)
Cbc0010I After 14600 nodes, 1183 on tree, 1e+50 best solution, best possible 638.6617 (1955.10 seconds)
Cbc0010I After 14700 nodes, 1171 on tree, 1e+50 best solution, best possible 638.68483 (1963.26 seconds)
Cbc0010I After 14800 nodes, 1148 on tree, 1e+50 best solution, best possible 638.70966 (1970.87 seconds)
Cbc0010I After 14900 nodes, 1124 on tree, 1e+50 best solution, best possible 638.73401 (1978.03 seconds)
Cbc0010I After 15000 nodes, 1116 on tree, 1e+50 best solution, best possible 638.74398 (1986.30 seconds)
Cbc0010I After 15100 nodes, 1110 on tree, 1e+50 best solution, best possible 638.77038 (1995.26 seconds)
Cbc0010I After 15200 nodes, 1100 on tree, 1e+50 best solution, best possible 638.7933 (2004.24 seconds)
Cbc0010I After 15300 nodes, 1093 on tree, 1e+50 best solution, best possible 638.81351 (2013.83 seconds)
Cbc0010I After 15400 nodes, 1079 on tree, 1e+50 best solution, best possible 638.85413 (2022.36 seconds)
Cbc0010I After 15500 nodes, 1060 on tree, 1e+50 best solution, best possible 638.90287 (2030.55 seconds)
Cbc0010I After 15600 nodes, 1038 on tree, 1e+50 best solution, best possible 638.97821 (2039.25 seconds)
Cbc0010I After 15700 nodes, 1011 on tree, 1e+50 best solution, best possible 639.02391 (2047.54 seconds)
Cbc0010I After 15800 nodes, 980 on tree, 1e+50 best solution, best possible 639.09859 (2056.18 seconds)
Cbc0010I After 15900 nodes, 951 on tree, 1e+50 best solution, best possible 639.18686 (2064.71 seconds)
Cbc0010I After 16000 nodes, 926 on tree, 1e+50 best solution, best possible 639.27239 (2073.14 seconds)
Cbc0010I After 16100 nodes, 901 on tree, 1e+50 best solution, best possible 639.34015 (2081.73 seconds)
Cbc0010I After 16200 nodes, 859 on tree, 1e+50 best solution, best possible 639.48441 (2088.41 seconds)
Cbc0010I After 16300 nodes, 829 on tree, 1e+50 best solution, best possible 639.57404 (2096.08 seconds)
Cbc0010I After 16400 nodes, 817 on tree, 1e+50 best solution, best possible 639.61561 (2105.05 seconds)
Cbc0010I After 16500 nodes, 797 on tree, 1e+50 best solution, best possible 639.6993 (2113.21 seconds)
Cbc0010I After 16600 nodes, 782 on tree, 1e+50 best solution, best possible 639.771 (2121.58 seconds)
Cbc0010I After 16700 nodes, 771 on tree, 1e+50 best solution, best possible 639.81553 (2130.25 seconds)
Cbc0010I After 16800 nodes, 775 on tree, 1e+50 best solution, best possible 639.83156 (2140.22 seconds)
Cbc0010I After 16900 nodes, 767 on tree, 1e+50 best solution, best possible 639.86086 (2148.93 seconds)
Cbc0010I After 17000 nodes, 753 on tree, 1e+50 best solution, best possible 639.88866 (2157.15 seconds)
Cbc0010I After 17100 nodes, 736 on tree, 1e+50 best solution, best possible 639.91444 (2165.05 seconds)
Cbc0010I After 17200 nodes, 721 on tree, 1e+50 best solution, best possible 639.9285 (2173.12 seconds)
Cbc0010I After 17300 nodes, 700 on tree, 1e+50 best solution, best possible 639.95168 (2180.51 seconds)
Cbc0010I After 17400 nodes, 677 on tree, 1e+50 best solution, best possible 639.96909 (2187.59 seconds)
Cbc0010I After 17500 nodes, 649 on tree, 1e+50 best solution, best possible 639.98149 (2193.98 seconds)
Cbc0010I After 17600 nodes, 599 on tree, 1e+50 best solution, best possible 640.01373 (2197.72 seconds)
Cbc0010I After 17700 nodes, 549 on tree, 1e+50 best solution, best possible 640.26269 (2200.45 seconds)
Cbc0010I After 17800 nodes, 499 on tree, 1e+50 best solution, best possible 640.73025 (2203.06 seconds)
Cbc0010I After 17900 nodes, 449 on tree, 1e+50 best solution, best possible 640.79505 (2205.93 seconds)
Cbc0010I After 18000 nodes, 399 on tree, 1e+50 best solution, best possible 641.24904 (2208.61 seconds)
Cbc0010I After 18100 nodes, 349 on tree, 1e+50 best solution, best possible 641.28028 (2212.52 seconds)
Cbc0010I After 18200 nodes, 299 on tree, 1e+50 best solution, best possible 641.38983 (2216.85 seconds)
Cbc0010I After 18300 nodes, 249 on tree, 1e+50 best solution, best possible 654.78562 (2220.16 seconds)
Cbc0010I After 18400 nodes, 199 on tree, 1e+50 best solution, best possible 690.39381 (2247.12 seconds)
Cbc0010I After 18500 nodes, 149 on tree, 1e+50 best solution, best possible 690.43705 (2251.08 seconds)
Cbc0010I After 18600 nodes, 99 on tree, 1e+50 best solution, best possible 690.58252 (2254.03 seconds)
Cbc0010I After 18700 nodes, 49 on tree, 1e+50 best solution, best possible 706.59223 (2256.72 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1144392 iterations and 18798 nodes (2261.57 seconds)
Cbc0035I Maximum depth 249, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       5601
Linearization cuts added in total:           5601  (separation time: 0.03121s)
Total solve time:                         2261.73s (2261.73s in branch-and-bound)
Lower bound:                              639.981
Upper bound:                              639.981  (gap: 0.00%)
Branch-and-bound nodes:                     18798
Stats: /tmp/jl_hQd0AC/model.nl 5150 [var]   50 [int] 5200 [con]  249 [aux]   5601 [root]     5601 [tot] 0.03121 [sep]  2261.73 [time]  2261.74 [bb]         6.399810e+02 [lower]         6.399810e+02 [upper]   18798 [nodes]
Performance of                           FBBT:	     167.12s,    21834 runs. fix: 0.000143032 shrnk:    2.68004 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    24.3349s,        8 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-9.txt
