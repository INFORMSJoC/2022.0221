solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-9.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.0113114476e+03 (0.202671 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 375.74559       37 0.474136
NLP0014I             2         OPT 394.37208       24 0.237796
Loaded instance "/tmp/jl_Y8boNA/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 1040 (-1) rows, 900 (-59) columns and 4459 (-60) elements
Clp0006I 0  Obj -3259.6875 Primal inf 1230620.2 (60)
Clp0006I 95  Obj -1345.4079 Primal inf 2395648.4 (97)
Clp0006I 190  Obj -3.3328477 Primal inf 5121.642 (45)
Clp0006I 285  Obj 234.50275 Primal inf 7532.6898 (20)
Clp0006I 316  Obj 283.23355
Clp0000I Optimal - objective value 283.23355
Clp0000I Optimal - objective value 283.23355
Clp0032I Optimal objective 283.2335537 - 316 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 283.23355
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 283.23355
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 13 added rows had average density of 2
Cbc0013I At root node, 13 cuts changed objective from 283.23355 to 283.76796 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 163 row cuts average 2.0 elements, 456 column cuts (456 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.72 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 5.1606047062e+02 (13.1291 seconds)
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 288.20446 (15.05 seconds)
Cbc0010I After 200 nodes, 96 on tree, 1e+50 best solution, best possible 288.20446 (17.03 seconds)
Couenne: new cutoff value 4.1218204749e+02 (18.9243 seconds)
Couenne: new cutoff value 4.1217732351e+02 (18.9495 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 133 on tree, 1e+50 best solution, best possible 288.6676 (25.07 seconds)
Cbc0010I After 400 nodes, 157 on tree, 1e+50 best solution, best possible 321.31478 (30.62 seconds)
Cbc0010I After 500 nodes, 204 on tree, 1e+50 best solution, best possible 321.31478 (32.52 seconds)
Couenne: new cutoff value 4.0930527550e+02 (34.0471 seconds)
Cbc0010I After 600 nodes, 244 on tree, 1e+50 best solution, best possible 322.08021 (34.48 seconds)
Cbc0010I After 700 nodes, 294 on tree, 1e+50 best solution, best possible 322.08021 (36.42 seconds)
Couenne: new cutoff value 3.7847158909e+02 (38.2123 seconds)
Cbc0004I Integer solution of 378.47159 found after 13341 iterations and 760 nodes (37.23 seconds)
Cbc0010I After 800 nodes, 35 on tree, 378.47159 best solution, best possible 323.71084 (38.96 seconds)
Cbc0010I After 900 nodes, 36 on tree, 378.47159 best solution, best possible 349.48335 (41.05 seconds)
Cbc0010I After 1000 nodes, 50 on tree, 378.47159 best solution, best possible 352.66969 (43.00 seconds)
Cbc0010I After 1100 nodes, 90 on tree, 378.47159 best solution, best possible 353.33886 (45.11 seconds)
Couenne: new cutoff value 3.7657989903e+02 (47.029 seconds)
Cbc0010I After 1200 nodes, 123 on tree, 378.47159 best solution, best possible 356.7734 (46.89 seconds)
Cbc0010I After 1300 nodes, 128 on tree, 378.47159 best solution, best possible 359.4325 (48.67 seconds)
Cbc0010I After 1400 nodes, 122 on tree, 378.47159 best solution, best possible 365.77863 (50.37 seconds)
Cbc0010I After 1500 nodes, 145 on tree, 378.47159 best solution, best possible 367.23024 (53.70 seconds)
Couenne: new cutoff value 3.7574571413e+02 (56.1136 seconds)
Cbc0010I After 1600 nodes, 184 on tree, 378.47159 best solution, best possible 367.70876 (55.36 seconds)
Optimality Based BT: 7 improved bounds
Cbc0010I After 1700 nodes, 173 on tree, 378.47159 best solution, best possible 371.65771 (57.43 seconds)
Cbc0010I After 1800 nodes, 165 on tree, 378.47159 best solution, best possible 373.5662 (59.15 seconds)
Cbc0010I After 1900 nodes, 139 on tree, 378.47159 best solution, best possible 375.68349 (60.56 seconds)
Cbc0010I After 2000 nodes, 100 on tree, 378.47159 best solution, best possible 375.76759 (61.44 seconds)
Cbc0010I After 2100 nodes, 50 on tree, 378.47159 best solution, best possible 376.58915 (61.86 seconds)
Cbc0001I Search completed - best objective 378.4715923647229, took 42063 iterations and 2200 nodes (62.26 seconds)
Cbc0035I Maximum depth 134, 299 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1041
Linearization cuts added in total:           1041  (separation time: 0.004904s)
Total solve time:                          62.279s (62.279s in branch-and-bound)
Lower bound:                              375.746
Upper bound:                              375.746  (gap: 0.00%)
Branch-and-bound nodes:                      2200
Stats: /tmp/jl_Y8boNA/model.nl  860 [var]   20 [int]  880 [con]   99 [aux]   1041 [root]     1041 [tot] 0.004904 [sep]   62.279 [time]  62.2799 [bb]         3.757457e+02 [lower]         3.757457e+02 [upper]    2200 [nodes]
Performance of                           FBBT:	    2.89743s,     3016 runs. fix: 0.000533529 shrnk:    2.26429 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.73631s,       11 runs. fix:    1.32353 shrnk:   0.884434 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-9.txt
