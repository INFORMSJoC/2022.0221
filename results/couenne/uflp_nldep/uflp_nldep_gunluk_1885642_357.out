solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-5.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 331.82973       70 68.733985
NLP0014I             2         OPT 331.98593       43 2.053394
Couenne: new cutoff value 3.3198632378e+02 (74.0873 seconds)
Loaded instance "/tmp/jl_NnWN27/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14094.058 (520)
Clp0006I 152  Obj 6.6655496e-14 Primal inf 8230.2686 (238)
Clp0006I 304  Obj 232.91018 Primal inf 125367.49 (171)
Clp0006I 456  Obj 329.44558 Primal inf 43196.12 (109)
Clp0006I 509  Obj 330.73474
Clp0000I Optimal - objective value 330.73474
Clp0032I Optimal objective 330.7347421 - 509 iterations time 0.052, Presolve 0.02
Clp0000I Optimal - objective value 330.73474
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 330.73474
Optimality Based BT: 67 improved bounds
Probing: 3 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 58 added rows had average density of 2
Cbc0013I At root node, 58 cuts changed objective from 330.73474 to 331.60236 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 329 row cuts average 2.0 elements, 13 column cuts (13 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (15.29 seconds)
Optimality Based BT: 53 improved bounds
Optimality Based BT: 34 improved bounds
Cbc0010I After 100 nodes, 16 on tree, 1e+50 best solution, best possible 331.79873 (67.34 seconds)
Cbc0010I After 200 nodes, 44 on tree, 1e+50 best solution, best possible 331.79873 (74.29 seconds)
Cbc0010I After 300 nodes, 84 on tree, 1e+50 best solution, best possible 331.79873 (81.46 seconds)
Cbc0010I After 400 nodes, 134 on tree, 1e+50 best solution, best possible 331.79873 (88.55 seconds)
Couenne: new cutoff value 3.3183033570e+02 (167.046 seconds)
Cbc0004I Integer solution of 331.83034 found after 4502 iterations and 461 nodes (92.75 seconds)
Cbc0001I Search completed - best objective 331.830335697164, took 4629 iterations and 467 nodes (94.60 seconds)
Cbc0035I Maximum depth 230, 3 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.030313s)
Total solve time:                         94.6716s (94.6716s in branch-and-bound)
Lower bound:                               331.83
Upper bound:                               331.83  (gap: 0.00%)
Branch-and-bound nodes:                       467
Stats: /tmp/jl_NnWN27/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.030313 [sep]  94.6716 [time]  94.6782 [bb]         3.318303e+02 [lower]         3.318303e+02 [upper]     467 [nodes]
Performance of                           FBBT:	    3.04611s,      490 runs. fix:          0 shrnk:    52.4664 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    9.88874s,        3 runs. fix:    6.33333 shrnk:    211.696 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-5.txt
f0 = 0.05999238944315326
f0 = 0.02205602553057105
f0 = 0.06263911250682179
f0 = 0.08293065599494714
f0 = 0.00441120510611421
f0 = 0.007057928169782736
f0 = 0.06263911250682179
f0 = 0.05116997923092483
f0 = 0.03617188187013652
f0 = 0.00441120510611421
f0 = 0.011469133275896945
f0 = 0.04146532799747357
f0 = 0.00441120510611421
f0 = 0.05116997923092483
f0 = 0.033525158806467996
f0 = 0.08734186110106136
f0 = 0.025584989615462416
f0 = 0.033525158806467996
f0 = 0.0026467230636685263
f0 = 0.08645962007983853
f0 = 0.014115856339565473
f0 = 0.07322600476149589
f0 = 0.04587653310358778
f0 = 0.08557737905861568
f0 = 0.015880338382011156
f0 = 0.050287738209702
f0 = 0.04234756901869642
f0 = 0.03617188187013652
f0 = 0.04675877412481063
f0 = 0.037936363912582205
f0 = 0.08734186110106136
f0 = 0.06175687148559894
f0 = 0.03176067676402231
f0 = 0.06969704067660452
f0 = 0.0608746304643761
f0 = 0.037936363912582205
f0 = 0.04852325616725631
f0 = 0.019409302466902523
f0 = 0.024702748594239578
f0 = 0.015880338382011156
