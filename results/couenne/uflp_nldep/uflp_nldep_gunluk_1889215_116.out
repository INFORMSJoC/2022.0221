solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-1.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 310.18699       52 1.703903
NLP0014I             2         OPT 310.58178       56 0.475545
Couenne: new cutoff value 3.1058180485e+02 (2.41532 seconds)
Loaded instance "/tmp/jl_2TmdXJ/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          199 (0 integer)

Coin0506I Presolve 1039 (-82) rows, 899 (-160) columns and 4437 (-242) elements
Clp0006I 0  Obj -95.854669 Primal inf 1849.9529 (99)
Clp0006I 95  Obj 96.963887 Primal inf 143.52711 (62)
Clp0006I 168  Obj 236.67684
Clp0000I Optimal - objective value 236.67684
Clp0032I Optimal objective 236.6768433 - 168 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 236.67684
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 236.67684
Optimality Based BT: 32 improved bounds
Probing: 19 improved bounds
NLP Heuristic: no solution.
Cbc0031I 14 added rows had average density of 2
Cbc0013I At root node, 14 cuts changed objective from 236.67684 to 267.44945 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 36 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.33 seconds)
Optimality Based BT: 27 improved bounds
Optimality Based BT: 24 improved bounds
Optimality Based BT: 35 improved bounds
Optimality Based BT: 37 improved bounds
Optimality Based BT: 48 improved bounds
Optimality Based BT: 38 improved bounds
Cbc0010I After 100 nodes, 24 on tree, 1e+50 best solution, best possible 302.2679 (21.69 seconds)
Cbc0010I After 200 nodes, 54 on tree, 1e+50 best solution, best possible 302.2679 (23.66 seconds)
Cbc0010I After 300 nodes, 90 on tree, 1e+50 best solution, best possible 302.2679 (25.22 seconds)
Cbc0010I After 400 nodes, 139 on tree, 1e+50 best solution, best possible 302.2679 (26.68 seconds)
Couenne: new cutoff value 3.1047148954e+02 (29.1684 seconds)
Cbc0004I Integer solution of 310.4715 found after 2651 iterations and 404 nodes (26.73 seconds)
Cbc0010I After 500 nodes, 104 on tree, 310.4715 best solution, best possible 302.41979 (31.49 seconds)
Cbc0010I After 600 nodes, 138 on tree, 310.4715 best solution, best possible 302.41979 (33.06 seconds)
Couenne: new cutoff value 3.1046236419e+02 (36.0566 seconds)
Cbc0004I Integer solution of 310.46237 found after 4499 iterations and 638 nodes (33.65 seconds)
Cbc0010I After 700 nodes, 104 on tree, 310.46237 best solution, best possible 302.47662 (35.13 seconds)
Cbc0010I After 800 nodes, 130 on tree, 310.46237 best solution, best possible 302.47662 (36.79 seconds)
Couenne: new cutoff value 3.1044145462e+02 (40.2492 seconds)
Cbc0004I Integer solution of 310.44146 found after 6004 iterations and 872 nodes (37.84 seconds)
Cbc0010I After 900 nodes, 100 on tree, 310.44146 best solution, best possible 302.62973 (38.48 seconds)
Cbc0010I After 1000 nodes, 123 on tree, 310.44146 best solution, best possible 302.71206 (40.59 seconds)
Cbc0010I After 1100 nodes, 144 on tree, 310.44146 best solution, best possible 306.20902 (44.34 seconds)
Cbc0010I After 1200 nodes, 168 on tree, 310.44146 best solution, best possible 306.40978 (46.56 seconds)
Cbc0010I After 1300 nodes, 192 on tree, 310.44146 best solution, best possible 306.43204 (48.77 seconds)
Cbc0010I After 1400 nodes, 210 on tree, 310.44146 best solution, best possible 306.57429 (50.92 seconds)
Cbc0010I After 1500 nodes, 229 on tree, 310.44146 best solution, best possible 306.64399 (53.11 seconds)
Cbc0010I After 1600 nodes, 249 on tree, 310.44146 best solution, best possible 306.78011 (55.22 seconds)
Cbc0010I After 1700 nodes, 268 on tree, 310.44146 best solution, best possible 306.7862 (57.33 seconds)
Cbc0010I After 1800 nodes, 286 on tree, 310.44146 best solution, best possible 306.84006 (59.40 seconds)
Cbc0010I After 1900 nodes, 304 on tree, 310.44146 best solution, best possible 306.9685 (61.89 seconds)
Cbc0010I After 2000 nodes, 322 on tree, 310.44146 best solution, best possible 307.02173 (63.97 seconds)
Cbc0010I After 2100 nodes, 341 on tree, 310.44146 best solution, best possible 307.15237 (66.11 seconds)
Cbc0010I After 2200 nodes, 364 on tree, 310.44146 best solution, best possible 307.19187 (68.33 seconds)
Cbc0010I After 2300 nodes, 384 on tree, 310.44146 best solution, best possible 307.22662 (70.44 seconds)
Cbc0010I After 2400 nodes, 402 on tree, 310.44146 best solution, best possible 307.33869 (72.65 seconds)
Cbc0010I After 2500 nodes, 416 on tree, 310.44146 best solution, best possible 307.43333 (74.68 seconds)
Cbc0010I After 2600 nodes, 430 on tree, 310.44146 best solution, best possible 307.46191 (76.64 seconds)
Cbc0010I After 2700 nodes, 442 on tree, 310.44146 best solution, best possible 307.51643 (78.59 seconds)
Cbc0010I After 2800 nodes, 460 on tree, 310.44146 best solution, best possible 307.56721 (80.79 seconds)
Cbc0010I After 2900 nodes, 473 on tree, 310.44146 best solution, best possible 307.60909 (82.78 seconds)
Cbc0010I After 3000 nodes, 488 on tree, 310.44146 best solution, best possible 307.6392 (84.92 seconds)
Cbc0010I After 3100 nodes, 499 on tree, 310.44146 best solution, best possible 307.69034 (87.13 seconds)
Cbc0010I After 3200 nodes, 511 on tree, 310.44146 best solution, best possible 307.72574 (89.15 seconds)
Cbc0010I After 3300 nodes, 524 on tree, 310.44146 best solution, best possible 307.76772 (91.29 seconds)
Cbc0010I After 3400 nodes, 533 on tree, 310.44146 best solution, best possible 307.81162 (93.19 seconds)
Cbc0010I After 3500 nodes, 554 on tree, 310.44146 best solution, best possible 307.8519 (95.48 seconds)
Cbc0010I After 3600 nodes, 561 on tree, 310.44146 best solution, best possible 307.87692 (97.69 seconds)
Cbc0010I After 3700 nodes, 563 on tree, 310.44146 best solution, best possible 307.94768 (99.54 seconds)
Cbc0010I After 3800 nodes, 570 on tree, 310.44146 best solution, best possible 308.04066 (101.48 seconds)
Cbc0010I After 3900 nodes, 578 on tree, 310.44146 best solution, best possible 308.06415 (103.39 seconds)
Cbc0010I After 4000 nodes, 586 on tree, 310.44146 best solution, best possible 308.07941 (105.47 seconds)
Cbc0010I After 4100 nodes, 598 on tree, 310.44146 best solution, best possible 308.14686 (107.71 seconds)
Cbc0010I After 4200 nodes, 603 on tree, 310.44146 best solution, best possible 308.18383 (109.97 seconds)
Cbc0010I After 4300 nodes, 608 on tree, 310.44146 best solution, best possible 308.25245 (112.11 seconds)
Cbc0010I After 4400 nodes, 614 on tree, 310.44146 best solution, best possible 308.27806 (114.19 seconds)
Cbc0010I After 4500 nodes, 618 on tree, 310.44146 best solution, best possible 308.34141 (116.14 seconds)
Cbc0010I After 4600 nodes, 627 on tree, 310.44146 best solution, best possible 308.37501 (118.52 seconds)
Cbc0010I After 4700 nodes, 631 on tree, 310.44146 best solution, best possible 308.43966 (120.39 seconds)
Cbc0010I After 4800 nodes, 634 on tree, 310.44146 best solution, best possible 308.49399 (122.35 seconds)
Cbc0010I After 4900 nodes, 645 on tree, 310.44146 best solution, best possible 308.50968 (124.97 seconds)
Cbc0010I After 5000 nodes, 643 on tree, 310.44146 best solution, best possible 308.58361 (127.18 seconds)
Cbc0010I After 5100 nodes, 649 on tree, 310.44146 best solution, best possible 308.64285 (129.25 seconds)
Cbc0010I After 5200 nodes, 653 on tree, 310.44146 best solution, best possible 308.68438 (131.31 seconds)
Cbc0010I After 5300 nodes, 661 on tree, 310.44146 best solution, best possible 308.709 (133.37 seconds)
Cbc0010I After 5400 nodes, 664 on tree, 310.44146 best solution, best possible 308.73108 (135.28 seconds)
Cbc0010I After 5500 nodes, 661 on tree, 310.44146 best solution, best possible 308.77454 (137.33 seconds)
Cbc0010I After 5600 nodes, 667 on tree, 310.44146 best solution, best possible 308.7984 (139.65 seconds)
Cbc0010I After 5700 nodes, 667 on tree, 310.44146 best solution, best possible 308.86639 (141.67 seconds)
Cbc0010I After 5800 nodes, 663 on tree, 310.44146 best solution, best possible 308.93384 (143.73 seconds)
Cbc0010I After 5900 nodes, 659 on tree, 310.44146 best solution, best possible 308.99057 (145.71 seconds)
Cbc0010I After 6000 nodes, 667 on tree, 310.44146 best solution, best possible 309.01343 (147.80 seconds)
Cbc0010I After 6100 nodes, 670 on tree, 310.44146 best solution, best possible 309.03989 (149.92 seconds)
Cbc0010I After 6200 nodes, 670 on tree, 310.44146 best solution, best possible 309.08624 (151.96 seconds)
Cbc0010I After 6300 nodes, 669 on tree, 310.44146 best solution, best possible 309.11021 (154.07 seconds)
Cbc0010I After 6400 nodes, 668 on tree, 310.44146 best solution, best possible 309.13814 (156.16 seconds)
Cbc0010I After 6500 nodes, 664 on tree, 310.44146 best solution, best possible 309.15949 (158.27 seconds)
Cbc0010I After 6600 nodes, 666 on tree, 310.44146 best solution, best possible 309.18471 (160.26 seconds)
Cbc0010I After 6700 nodes, 667 on tree, 310.44146 best solution, best possible 309.19685 (162.52 seconds)
Cbc0010I After 6800 nodes, 665 on tree, 310.44146 best solution, best possible 309.21424 (164.61 seconds)
Cbc0010I After 6900 nodes, 667 on tree, 310.44146 best solution, best possible 309.24488 (166.80 seconds)
Cbc0010I After 7000 nodes, 678 on tree, 310.44146 best solution, best possible 309.27987 (168.98 seconds)
Cbc0010I After 7100 nodes, 690 on tree, 310.44146 best solution, best possible 309.29372 (171.25 seconds)
Cbc0010I After 7200 nodes, 679 on tree, 310.44146 best solution, best possible 309.35068 (173.13 seconds)
Cbc0010I After 7300 nodes, 679 on tree, 310.44146 best solution, best possible 309.39249 (175.33 seconds)
Cbc0010I After 7400 nodes, 685 on tree, 310.44146 best solution, best possible 309.41222 (177.58 seconds)
Cbc0010I After 7500 nodes, 685 on tree, 310.44146 best solution, best possible 309.43599 (179.81 seconds)
Cbc0010I After 7600 nodes, 696 on tree, 310.44146 best solution, best possible 309.44877 (182.02 seconds)
Cbc0010I After 7700 nodes, 729 on tree, 310.44146 best solution, best possible 309.44877 (183.61 seconds)
Couenne: new cutoff value 3.1039171333e+02 (187.126 seconds)
Cbc0004I Integer solution of 310.39172 found after 74493 iterations and 7770 nodes (184.71 seconds)
Cbc0010I After 7800 nodes, 673 on tree, 310.39172 best solution, best possible 309.4575 (185.53 seconds)
Cbc0010I After 7900 nodes, 670 on tree, 310.39172 best solution, best possible 309.48326 (187.72 seconds)
Cbc0010I After 8000 nodes, 670 on tree, 310.39172 best solution, best possible 309.50157 (189.96 seconds)
Cbc0010I After 8100 nodes, 666 on tree, 310.39172 best solution, best possible 309.52213 (192.23 seconds)
Cbc0010I After 8200 nodes, 650 on tree, 310.39172 best solution, best possible 309.54451 (194.40 seconds)
Cbc0010I After 8300 nodes, 646 on tree, 310.39172 best solution, best possible 309.5672 (196.67 seconds)
Cbc0010I After 8400 nodes, 637 on tree, 310.39172 best solution, best possible 309.60349 (198.92 seconds)
Cbc0010I After 8500 nodes, 623 on tree, 310.39172 best solution, best possible 309.62193 (201.17 seconds)
Cbc0010I After 8600 nodes, 611 on tree, 310.39172 best solution, best possible 309.63612 (203.36 seconds)
Cbc0010I After 8700 nodes, 595 on tree, 310.39172 best solution, best possible 309.65711 (205.37 seconds)
Cbc0010I After 8800 nodes, 579 on tree, 310.39172 best solution, best possible 309.69488 (207.33 seconds)
Cbc0010I After 8900 nodes, 567 on tree, 310.39172 best solution, best possible 309.72242 (209.69 seconds)
Cbc0010I After 9000 nodes, 552 on tree, 310.39172 best solution, best possible 309.74968 (211.93 seconds)
Cbc0010I After 9100 nodes, 541 on tree, 310.39172 best solution, best possible 309.77042 (214.22 seconds)
Cbc0010I After 9200 nodes, 521 on tree, 310.39172 best solution, best possible 309.80347 (216.51 seconds)
Cbc0010I After 9300 nodes, 504 on tree, 310.39172 best solution, best possible 309.83638 (218.71 seconds)
Cbc0010I After 9400 nodes, 475 on tree, 310.39172 best solution, best possible 309.87375 (220.77 seconds)
Cbc0010I After 9500 nodes, 470 on tree, 310.39172 best solution, best possible 309.88864 (223.07 seconds)
Cbc0010I After 9600 nodes, 461 on tree, 310.39172 best solution, best possible 309.90369 (225.33 seconds)
Cbc0010I After 9700 nodes, 440 on tree, 310.39172 best solution, best possible 309.93253 (227.45 seconds)
Cbc0010I After 9800 nodes, 416 on tree, 310.39172 best solution, best possible 309.98047 (229.59 seconds)
Cbc0010I After 9900 nodes, 396 on tree, 310.39172 best solution, best possible 310.01243 (231.75 seconds)
Cbc0010I After 10000 nodes, 370 on tree, 310.39172 best solution, best possible 310.03906 (233.70 seconds)
Cbc0010I After 10100 nodes, 351 on tree, 310.39172 best solution, best possible 310.06465 (235.63 seconds)
Cbc0010I After 10200 nodes, 329 on tree, 310.39172 best solution, best possible 310.09109 (237.69 seconds)
Cbc0010I After 10300 nodes, 305 on tree, 310.39172 best solution, best possible 310.11769 (239.89 seconds)
Cbc0010I After 10400 nodes, 278 on tree, 310.39172 best solution, best possible 310.15152 (241.79 seconds)
Cbc0010I After 10500 nodes, 249 on tree, 310.39172 best solution, best possible 310.18402 (243.72 seconds)
Cbc0010I After 10600 nodes, 209 on tree, 310.39172 best solution, best possible 310.2386 (245.43 seconds)
Cbc0010I After 10700 nodes, 159 on tree, 310.39172 best solution, best possible 310.28047 (246.93 seconds)
Cbc0010I After 10800 nodes, 117 on tree, 310.39172 best solution, best possible 310.31459 (248.47 seconds)
Cbc0010I After 10900 nodes, 78 on tree, 310.39172 best solution, best possible 310.35064 (249.96 seconds)
Cbc0010I After 11000 nodes, 62 on tree, 310.39172 best solution, best possible 310.37032 (251.45 seconds)
Cbc0010I After 11100 nodes, 20 on tree, 310.39172 best solution, best possible 310.39079 (252.76 seconds)
Cbc0010I After 11200 nodes, 12 on tree, 310.39172 best solution, best possible 310.39169 (254.07 seconds)
Cbc0010I After 11300 nodes, 13 on tree, 310.39172 best solution, best possible 310.3917 (255.27 seconds)
Cbc0001I Search completed - best objective 310.3917163544542, took 121802 iterations and 11356 nodes (255.80 seconds)
Cbc0035I Maximum depth 165, 785 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1121
Linearization cuts added in total:           1121  (separation time: 0.00626s)
Total solve time:                         255.812s (255.812s in branch-and-bound)
Lower bound:                              310.392
Upper bound:                              310.392  (gap: 0.00%)
Branch-and-bound nodes:                     11356
Stats: /tmp/jl_2TmdXJ/model.nl  860 [var]   20 [int]  880 [con]  199 [aux]   1121 [root]     1121 [tot] 0.00626 [sep]  255.812 [time]  255.814 [bb]         3.103917e+02 [lower]         3.103917e+02 [upper]   11356 [nodes]
Performance of                           FBBT:	     16.854s,    14329 runs. fix: 0.00132132 shrnk:    1.55223 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.75609s,        7 runs. fix:   0.682119 shrnk:    91.2075 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-1.txt
