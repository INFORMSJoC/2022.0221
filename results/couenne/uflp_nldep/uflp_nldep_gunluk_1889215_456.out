solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-5.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 376.18243       60 254.45264
NLP0014I             2         OPT 378.66515       40 3.816574
Couenne: new cutoff value 3.7866595494e+02 (266.476 seconds)
Loaded instance "/tmp/jl_nos0uq/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          499 (0 integer)

Coin0506I Presolve 5599 (-202) rows, 5249 (-400) columns and 26097 (-602) elements
Clp0006I 0  Obj 0 Primal inf 3572.6466 (249) Dual inf 6.899136e+12 (478)
Clp0029I End of values pass after 149 iterations
Clp0006I 149  Obj 378.67595 Primal inf 283.59024 (100) Dual inf 1.579346e+14 (5001)
Clp0006I 409  Obj 378.67595 Primal inf 7.9337504 (22) Dual inf 1.9786152e+13 (4427)
Clp0006I 604  Obj 331.45776 Dual inf 20.907757 (31)
Clp0006I 645  Obj 323.86912
Clp0000I Optimal - objective value 323.86912
Clp0032I Optimal objective 323.8691238 - 645 iterations time 0.142, Presolve 0.03
Clp0000I Optimal - objective value 323.86912
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 323.86912
Optimality Based BT: 87 improved bounds
Probing: 50 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 25 added rows had average density of 2
Cbc0013I At root node, 25 cuts changed objective from 323.86912 to 352.03752 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 47 row cuts average 2.0 elements, 9 column cuts (9 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (38.83 seconds)
Optimality Based BT: 98 improved bounds
Optimality Based BT: 88 improved bounds
Optimality Based BT: 95 improved bounds
Optimality Based BT: 96 improved bounds
Optimality Based BT: 96 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 1e+50 best solution, best possible 369.05922 (261.20 seconds)
Cbc0010I After 200 nodes, 83 on tree, 1e+50 best solution, best possible 369.05922 (274.98 seconds)
Cbc0010I After 300 nodes, 131 on tree, 1e+50 best solution, best possible 369.05922 (286.58 seconds)
Cbc0010I After 400 nodes, 177 on tree, 1e+50 best solution, best possible 369.05922 (298.78 seconds)
Cbc0010I After 500 nodes, 227 on tree, 1e+50 best solution, best possible 369.05922 (311.16 seconds)
Cbc0010I After 600 nodes, 277 on tree, 1e+50 best solution, best possible 369.05922 (323.33 seconds)
Couenne: new cutoff value 3.7629751977e+02 (591.09 seconds)
Cbc0004I Integer solution of 376.29752 found after 3709 iterations and 607 nodes (324.13 seconds)
Optimality Based BT: 104 improved bounds
Optimality Based BT: 109 improved bounds
Cbc0010I After 700 nodes, 85 on tree, 376.29752 best solution, best possible 372.51999 (401.69 seconds)
Cbc0010I After 800 nodes, 104 on tree, 376.29752 best solution, best possible 372.51999 (414.17 seconds)
Cbc0010I After 900 nodes, 133 on tree, 376.29752 best solution, best possible 372.51999 (426.63 seconds)
Cbc0010I After 1000 nodes, 168 on tree, 376.29752 best solution, best possible 372.51999 (439.53 seconds)
Cbc0010I After 1100 nodes, 216 on tree, 376.29752 best solution, best possible 372.51999 (453.94 seconds)
Couenne: new cutoff value 3.7618772981e+02 (722.303 seconds)
Cbc0004I Integer solution of 376.18773 found after 6877 iterations and 1110 nodes (455.35 seconds)
Cbc0010I After 1200 nodes, 118 on tree, 376.18773 best solution, best possible 373.08552 (472.98 seconds)
Cbc0010I After 1300 nodes, 142 on tree, 376.18773 best solution, best possible 373.31498 (489.03 seconds)
Cbc0010I After 1400 nodes, 172 on tree, 376.18773 best solution, best possible 373.40318 (508.40 seconds)
Cbc0010I After 1500 nodes, 196 on tree, 376.18773 best solution, best possible 373.52106 (524.70 seconds)
Cbc0010I After 1600 nodes, 220 on tree, 376.18773 best solution, best possible 373.54733 (541.78 seconds)
Cbc0010I After 1700 nodes, 247 on tree, 376.18773 best solution, best possible 373.55818 (558.79 seconds)
Cbc0010I After 1800 nodes, 275 on tree, 376.18773 best solution, best possible 373.60133 (578.47 seconds)
Cbc0010I After 1900 nodes, 297 on tree, 376.18773 best solution, best possible 373.66397 (597.02 seconds)
Cbc0010I After 2000 nodes, 322 on tree, 376.18773 best solution, best possible 373.69597 (614.24 seconds)
Optimality Based BT: 128 improved bounds
Cbc0010I After 2100 nodes, 343 on tree, 376.18773 best solution, best possible 373.74321 (637.17 seconds)
Cbc0010I After 2200 nodes, 372 on tree, 376.18773 best solution, best possible 373.76983 (655.19 seconds)
Cbc0010I After 2300 nodes, 399 on tree, 376.18773 best solution, best possible 373.85629 (673.69 seconds)
Cbc0010I After 2400 nodes, 426 on tree, 376.18773 best solution, best possible 373.91349 (691.61 seconds)
Cbc0010I After 2500 nodes, 443 on tree, 376.18773 best solution, best possible 373.91663 (706.72 seconds)
Cbc0010I After 2600 nodes, 469 on tree, 376.18773 best solution, best possible 373.97453 (727.19 seconds)
Cbc0010I After 2700 nodes, 492 on tree, 376.18773 best solution, best possible 374.03699 (743.28 seconds)
Cbc0010I After 2800 nodes, 519 on tree, 376.18773 best solution, best possible 374.08243 (763.00 seconds)
Cbc0010I After 2900 nodes, 541 on tree, 376.18773 best solution, best possible 374.10591 (780.38 seconds)
Cbc0010I After 3000 nodes, 562 on tree, 376.18773 best solution, best possible 374.13843 (797.80 seconds)
Cbc0010I After 3100 nodes, 586 on tree, 376.18773 best solution, best possible 374.15207 (816.10 seconds)
Cbc0010I After 3200 nodes, 610 on tree, 376.18773 best solution, best possible 374.15678 (832.25 seconds)
Cbc0010I After 3300 nodes, 634 on tree, 376.18773 best solution, best possible 374.20444 (850.46 seconds)
Cbc0010I After 3400 nodes, 663 on tree, 376.18773 best solution, best possible 374.22638 (869.51 seconds)
Cbc0010I After 3500 nodes, 684 on tree, 376.18773 best solution, best possible 374.24226 (886.45 seconds)
Cbc0010I After 3600 nodes, 709 on tree, 376.18773 best solution, best possible 374.2459 (907.33 seconds)
Cbc0010I After 3700 nodes, 734 on tree, 376.18773 best solution, best possible 374.25102 (924.66 seconds)
Cbc0010I After 3800 nodes, 754 on tree, 376.18773 best solution, best possible 374.26671 (944.09 seconds)
Cbc0010I After 3900 nodes, 780 on tree, 376.18773 best solution, best possible 374.28697 (961.33 seconds)
Cbc0010I After 4000 nodes, 800 on tree, 376.18773 best solution, best possible 374.28949 (978.88 seconds)
Cbc0010I After 4100 nodes, 819 on tree, 376.18773 best solution, best possible 374.29364 (996.85 seconds)
Cbc0010I After 4200 nodes, 836 on tree, 376.18773 best solution, best possible 374.30318 (1011.42 seconds)
Cbc0010I After 4300 nodes, 858 on tree, 376.18773 best solution, best possible 374.31558 (1027.63 seconds)
Cbc0010I After 4400 nodes, 880 on tree, 376.18773 best solution, best possible 374.33951 (1045.14 seconds)
Cbc0010I After 4500 nodes, 905 on tree, 376.18773 best solution, best possible 374.37164 (1065.03 seconds)
Cbc0010I After 4600 nodes, 926 on tree, 376.18773 best solution, best possible 374.38535 (1082.61 seconds)
Cbc0010I After 4700 nodes, 945 on tree, 376.18773 best solution, best possible 374.39146 (1098.29 seconds)
Cbc0010I After 4800 nodes, 969 on tree, 376.18773 best solution, best possible 374.41559 (1117.36 seconds)
Cbc0010I After 4900 nodes, 988 on tree, 376.18773 best solution, best possible 374.42669 (1133.38 seconds)
Cbc0010I After 5000 nodes, 1008 on tree, 376.18773 best solution, best possible 374.43788 (1154.53 seconds)
Cbc0010I After 5100 nodes, 1025 on tree, 376.18773 best solution, best possible 374.45278 (1170.74 seconds)
Cbc0010I After 5200 nodes, 1045 on tree, 376.18773 best solution, best possible 374.4724 (1189.87 seconds)
Cbc0010I After 5300 nodes, 1065 on tree, 376.18773 best solution, best possible 374.4836 (1208.65 seconds)
Cbc0010I After 5400 nodes, 1087 on tree, 376.18773 best solution, best possible 374.49919 (1227.97 seconds)
Cbc0010I After 5500 nodes, 1102 on tree, 376.18773 best solution, best possible 374.5175 (1246.94 seconds)
Cbc0010I After 5600 nodes, 1126 on tree, 376.18773 best solution, best possible 374.52508 (1264.17 seconds)
Cbc0010I After 5700 nodes, 1152 on tree, 376.18773 best solution, best possible 374.53549 (1282.83 seconds)
Cbc0010I After 5800 nodes, 1171 on tree, 376.18773 best solution, best possible 374.54136 (1301.29 seconds)
Cbc0010I After 5900 nodes, 1193 on tree, 376.18773 best solution, best possible 374.5532 (1319.40 seconds)
Cbc0010I After 6000 nodes, 1211 on tree, 376.18773 best solution, best possible 374.56822 (1337.69 seconds)
Cbc0010I After 6100 nodes, 1231 on tree, 376.18773 best solution, best possible 374.57821 (1356.42 seconds)
Cbc0010I After 6200 nodes, 1251 on tree, 376.18773 best solution, best possible 374.59583 (1377.68 seconds)
Cbc0010I After 6300 nodes, 1273 on tree, 376.18773 best solution, best possible 374.61007 (1395.40 seconds)
Cbc0010I After 6400 nodes, 1297 on tree, 376.18773 best solution, best possible 374.61144 (1414.06 seconds)
Cbc0010I After 6500 nodes, 1321 on tree, 376.18773 best solution, best possible 374.62326 (1435.67 seconds)
Cbc0010I After 6600 nodes, 1341 on tree, 376.18773 best solution, best possible 374.64483 (1454.19 seconds)
Cbc0010I After 6700 nodes, 1355 on tree, 376.18773 best solution, best possible 374.65976 (1470.99 seconds)
Cbc0010I After 6800 nodes, 1377 on tree, 376.18773 best solution, best possible 374.66446 (1491.84 seconds)
Cbc0010I After 6900 nodes, 1400 on tree, 376.18773 best solution, best possible 374.66954 (1510.47 seconds)
Cbc0010I After 7000 nodes, 1419 on tree, 376.18773 best solution, best possible 374.67597 (1528.89 seconds)
Cbc0010I After 7100 nodes, 1438 on tree, 376.18773 best solution, best possible 374.6924 (1547.04 seconds)
Cbc0010I After 7200 nodes, 1453 on tree, 376.18773 best solution, best possible 374.69618 (1562.62 seconds)
Cbc0010I After 7300 nodes, 1466 on tree, 376.18773 best solution, best possible 374.70381 (1579.03 seconds)
Cbc0010I After 7400 nodes, 1484 on tree, 376.18773 best solution, best possible 374.71249 (1596.96 seconds)
Cbc0010I After 7500 nodes, 1508 on tree, 376.18773 best solution, best possible 374.72472 (1615.86 seconds)
Cbc0010I After 7600 nodes, 1532 on tree, 376.18773 best solution, best possible 374.72819 (1634.55 seconds)
Cbc0010I After 7700 nodes, 1547 on tree, 376.18773 best solution, best possible 374.74792 (1652.56 seconds)
Cbc0010I After 7800 nodes, 1565 on tree, 376.18773 best solution, best possible 374.75416 (1670.92 seconds)
Cbc0010I After 7900 nodes, 1587 on tree, 376.18773 best solution, best possible 374.75852 (1690.22 seconds)
Cbc0010I After 8000 nodes, 1607 on tree, 376.18773 best solution, best possible 374.75979 (1707.84 seconds)
Cbc0010I After 8100 nodes, 1626 on tree, 376.18773 best solution, best possible 374.76607 (1726.84 seconds)
Cbc0010I After 8200 nodes, 1642 on tree, 376.18773 best solution, best possible 374.76835 (1744.86 seconds)
Cbc0010I After 8300 nodes, 1660 on tree, 376.18773 best solution, best possible 374.77397 (1763.98 seconds)
Cbc0010I After 8400 nodes, 1677 on tree, 376.18773 best solution, best possible 374.78455 (1782.62 seconds)
Cbc0010I After 8500 nodes, 1696 on tree, 376.18773 best solution, best possible 374.78761 (1800.00 seconds)
Cbc0010I After 8600 nodes, 1715 on tree, 376.18773 best solution, best possible 374.79272 (1820.74 seconds)
Cbc0010I After 8700 nodes, 1732 on tree, 376.18773 best solution, best possible 374.79658 (1836.19 seconds)
Cbc0010I After 8800 nodes, 1751 on tree, 376.18773 best solution, best possible 374.80511 (1853.12 seconds)
Cbc0010I After 8900 nodes, 1770 on tree, 376.18773 best solution, best possible 374.80661 (1872.03 seconds)
Cbc0010I After 9000 nodes, 1789 on tree, 376.18773 best solution, best possible 374.80953 (1888.35 seconds)
Cbc0010I After 9100 nodes, 1810 on tree, 376.18773 best solution, best possible 374.81504 (1907.87 seconds)
Cbc0010I After 9200 nodes, 1829 on tree, 376.18773 best solution, best possible 374.8174 (1926.52 seconds)
Cbc0010I After 9300 nodes, 1852 on tree, 376.18773 best solution, best possible 374.82289 (1946.17 seconds)
Cbc0010I After 9400 nodes, 1872 on tree, 376.18773 best solution, best possible 374.82806 (1963.89 seconds)
Cbc0010I After 9500 nodes, 1889 on tree, 376.18773 best solution, best possible 374.83273 (1982.34 seconds)
Cbc0010I After 9600 nodes, 1900 on tree, 376.18773 best solution, best possible 374.8425 (1999.09 seconds)
Cbc0010I After 9700 nodes, 1920 on tree, 376.18773 best solution, best possible 374.85321 (2017.66 seconds)
Cbc0010I After 9800 nodes, 1937 on tree, 376.18773 best solution, best possible 374.85685 (2035.99 seconds)
Cbc0010I After 9900 nodes, 1957 on tree, 376.18773 best solution, best possible 374.86493 (2055.37 seconds)
Cbc0010I After 10000 nodes, 1973 on tree, 376.18773 best solution, best possible 374.87254 (2074.20 seconds)
Cbc0010I After 10100 nodes, 1985 on tree, 376.18773 best solution, best possible 374.87658 (2093.22 seconds)
Cbc0010I After 10200 nodes, 2003 on tree, 376.18773 best solution, best possible 374.88297 (2110.13 seconds)
Cbc0010I After 10300 nodes, 2022 on tree, 376.18773 best solution, best possible 374.88974 (2128.46 seconds)
Cbc0010I After 10400 nodes, 2039 on tree, 376.18773 best solution, best possible 374.89232 (2144.97 seconds)
Cbc0010I After 10500 nodes, 2057 on tree, 376.18773 best solution, best possible 374.89893 (2160.39 seconds)
Cbc0010I After 10600 nodes, 2076 on tree, 376.18773 best solution, best possible 374.90159 (2177.46 seconds)
Cbc0010I After 10700 nodes, 2093 on tree, 376.18773 best solution, best possible 374.90419 (2195.51 seconds)
Cbc0010I After 10800 nodes, 2110 on tree, 376.18773 best solution, best possible 374.91032 (2212.22 seconds)
Cbc0010I After 10900 nodes, 2126 on tree, 376.18773 best solution, best possible 374.91677 (2229.53 seconds)
Cbc0010I After 11000 nodes, 2143 on tree, 376.18773 best solution, best possible 374.9238 (2247.43 seconds)
Cbc0010I After 11100 nodes, 2155 on tree, 376.18773 best solution, best possible 374.92455 (2264.35 seconds)
Cbc0010I After 11200 nodes, 2174 on tree, 376.18773 best solution, best possible 374.92764 (2280.96 seconds)
Cbc0010I After 11300 nodes, 2187 on tree, 376.18773 best solution, best possible 374.93517 (2298.66 seconds)
Cbc0010I After 11400 nodes, 2204 on tree, 376.18773 best solution, best possible 374.94147 (2316.58 seconds)
Cbc0010I After 11500 nodes, 2218 on tree, 376.18773 best solution, best possible 374.95046 (2335.34 seconds)
Cbc0010I After 11600 nodes, 2229 on tree, 376.18773 best solution, best possible 374.96336 (2353.14 seconds)
Cbc0010I After 11700 nodes, 2248 on tree, 376.18773 best solution, best possible 374.96507 (2372.15 seconds)
Cbc0010I After 11800 nodes, 2261 on tree, 376.18773 best solution, best possible 374.96916 (2391.49 seconds)
Cbc0010I After 11900 nodes, 2272 on tree, 376.18773 best solution, best possible 374.97597 (2411.65 seconds)
Cbc0010I After 12000 nodes, 2285 on tree, 376.18773 best solution, best possible 374.98014 (2428.83 seconds)
Cbc0010I After 12100 nodes, 2298 on tree, 376.18773 best solution, best possible 374.9835 (2445.68 seconds)
Cbc0010I After 12200 nodes, 2314 on tree, 376.18773 best solution, best possible 374.98495 (2465.16 seconds)
Cbc0010I After 12300 nodes, 2334 on tree, 376.18773 best solution, best possible 374.98636 (2481.48 seconds)
Cbc0010I After 12400 nodes, 2346 on tree, 376.18773 best solution, best possible 374.98945 (2497.59 seconds)
Cbc0010I After 12500 nodes, 2363 on tree, 376.18773 best solution, best possible 374.99239 (2513.60 seconds)
Cbc0010I After 12600 nodes, 2377 on tree, 376.18773 best solution, best possible 374.99511 (2530.54 seconds)
Cbc0010I After 12700 nodes, 2390 on tree, 376.18773 best solution, best possible 374.99847 (2547.69 seconds)
Cbc0010I After 12800 nodes, 2399 on tree, 376.18773 best solution, best possible 375.00614 (2564.59 seconds)
Cbc0010I After 12900 nodes, 2413 on tree, 376.18773 best solution, best possible 375.01048 (2581.08 seconds)
Cbc0010I After 13000 nodes, 2424 on tree, 376.18773 best solution, best possible 375.01424 (2598.52 seconds)
Cbc0010I After 13100 nodes, 2443 on tree, 376.18773 best solution, best possible 375.01931 (2615.87 seconds)
Cbc0010I After 13200 nodes, 2463 on tree, 376.18773 best solution, best possible 375.02265 (2632.95 seconds)
Cbc0010I After 13300 nodes, 2476 on tree, 376.18773 best solution, best possible 375.0269 (2649.83 seconds)
Cbc0010I After 13400 nodes, 2492 on tree, 376.18773 best solution, best possible 375.03163 (2667.73 seconds)
Cbc0010I After 13500 nodes, 2505 on tree, 376.18773 best solution, best possible 375.03553 (2685.18 seconds)
Cbc0010I After 13600 nodes, 2519 on tree, 376.18773 best solution, best possible 375.03958 (2702.98 seconds)
Cbc0010I After 13700 nodes, 2534 on tree, 376.18773 best solution, best possible 375.04593 (2720.38 seconds)
Cbc0010I After 13800 nodes, 2547 on tree, 376.18773 best solution, best possible 375.05244 (2737.61 seconds)
Cbc0010I After 13900 nodes, 2566 on tree, 376.18773 best solution, best possible 375.05554 (2754.32 seconds)
Cbc0010I After 14000 nodes, 2580 on tree, 376.18773 best solution, best possible 375.05982 (2771.18 seconds)
Cbc0010I After 14100 nodes, 2593 on tree, 376.18773 best solution, best possible 375.06243 (2789.08 seconds)
Cbc0010I After 14200 nodes, 2611 on tree, 376.18773 best solution, best possible 375.06667 (2805.83 seconds)
Cbc0010I After 14300 nodes, 2626 on tree, 376.18773 best solution, best possible 375.06856 (2821.62 seconds)
Cbc0010I After 14400 nodes, 2642 on tree, 376.18773 best solution, best possible 375.07184 (2839.11 seconds)
Cbc0010I After 14500 nodes, 2655 on tree, 376.18773 best solution, best possible 375.07505 (2855.73 seconds)
Cbc0010I After 14600 nodes, 2677 on tree, 376.18773 best solution, best possible 375.07749 (2872.48 seconds)
Cbc0010I After 14700 nodes, 2694 on tree, 376.18773 best solution, best possible 375.07997 (2889.86 seconds)
Cbc0010I After 14800 nodes, 2712 on tree, 376.18773 best solution, best possible 375.08062 (2906.03 seconds)
Cbc0010I After 14900 nodes, 2728 on tree, 376.18773 best solution, best possible 375.08364 (2923.42 seconds)
Cbc0010I After 15000 nodes, 2739 on tree, 376.18773 best solution, best possible 375.08666 (2938.98 seconds)
Cbc0010I After 15100 nodes, 2758 on tree, 376.18773 best solution, best possible 375.08944 (2955.99 seconds)
Cbc0010I After 15200 nodes, 2771 on tree, 376.18773 best solution, best possible 375.09435 (2972.66 seconds)
Cbc0010I After 15300 nodes, 2785 on tree, 376.18773 best solution, best possible 375.09789 (2989.45 seconds)
Cbc0010I After 15400 nodes, 2797 on tree, 376.18773 best solution, best possible 375.10411 (3006.18 seconds)
Cbc0010I After 15500 nodes, 2816 on tree, 376.18773 best solution, best possible 375.10974 (3023.08 seconds)
Cbc0010I After 15600 nodes, 2832 on tree, 376.18773 best solution, best possible 375.11363 (3039.88 seconds)
Cbc0010I After 15700 nodes, 2848 on tree, 376.18773 best solution, best possible 375.11883 (3057.22 seconds)
Cbc0010I After 15800 nodes, 2859 on tree, 376.18773 best solution, best possible 375.12735 (3074.21 seconds)
Cbc0010I After 15900 nodes, 2879 on tree, 376.18773 best solution, best possible 375.13021 (3092.26 seconds)
Cbc0010I After 16000 nodes, 2894 on tree, 376.18773 best solution, best possible 375.13263 (3109.43 seconds)
Cbc0010I After 16100 nodes, 2909 on tree, 376.18773 best solution, best possible 375.1369 (3126.92 seconds)
Cbc0010I After 16200 nodes, 2923 on tree, 376.18773 best solution, best possible 375.13895 (3143.28 seconds)
Cbc0010I After 16300 nodes, 2941 on tree, 376.18773 best solution, best possible 375.14023 (3161.86 seconds)
Cbc0010I After 16400 nodes, 2960 on tree, 376.18773 best solution, best possible 375.14206 (3178.56 seconds)
Cbc0010I After 16500 nodes, 2973 on tree, 376.18773 best solution, best possible 375.14484 (3196.25 seconds)
Cbc0010I After 16600 nodes, 2986 on tree, 376.18773 best solution, best possible 375.14843 (3213.20 seconds)
Cbc0010I After 16700 nodes, 3002 on tree, 376.18773 best solution, best possible 375.15015 (3230.67 seconds)
Cbc0010I After 16800 nodes, 3017 on tree, 376.18773 best solution, best possible 375.15259 (3245.79 seconds)
Cbc0010I After 16900 nodes, 3030 on tree, 376.18773 best solution, best possible 375.15765 (3263.36 seconds)
Cbc0010I After 17000 nodes, 3047 on tree, 376.18773 best solution, best possible 375.15964 (3280.13 seconds)
Cbc0010I After 17100 nodes, 3061 on tree, 376.18773 best solution, best possible 375.16228 (3298.27 seconds)
Cbc0010I After 17200 nodes, 3081 on tree, 376.18773 best solution, best possible 375.16447 (3315.84 seconds)
Cbc0010I After 17300 nodes, 3091 on tree, 376.18773 best solution, best possible 375.16647 (3332.03 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 376.18773 (best possible 375.16647), took 202120 iterations and 17306 nodes (3343.62 seconds)
Cbc0035I Maximum depth 303, 7819 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5801
Linearization cuts added in total:           5801  (separation time: 0.057107s)
Total solve time:                         3343.79s (3343.79s in branch-and-bound)
Lower bound:                              375.166
Upper bound:                              376.188  (gap: 0.27%)
Branch-and-bound nodes:                     17306
Stats: /tmp/jl_nos0uq/model.nl 5150 [var]   50 [int] 5200 [con]  499 [aux]   5801 [root]     5801 [tot] 0.057107 [sep]  3343.79 [time]   3343.8 [bb]         3.751665e+02 [lower]         3.761877e+02 [upper]   17306 [nodes]
Performance of                           FBBT:	    333.753s,    24193 runs. fix:  0.0193361 shrnk:    2.49694 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	    65.2844s,        9 runs. fix:    1.23547 shrnk:    277.361 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-5.txt
