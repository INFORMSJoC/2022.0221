solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-5.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 275.48037       86 0.316694
NLP0014I             2         OPT 275.48479       38 0.093685
Couenne: new cutoff value 2.7548479187e+02 (0.446461 seconds)
Loaded instance "/tmp/jl_DgAvhF/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           89 (0 integer)

Coin0506I Presolve 369 (-32) rows, 249 (-70) columns and 1307 (-102) elements
Clp0006I 0  Obj 0 Primal inf 2215.5706 (130)
Clp0006I 71  Obj 239.292 Primal inf 132192.37 (42)
Clp0006I 100  Obj 248.3512
Clp0000I Optimal - objective value 248.3512
Clp0032I Optimal objective 248.3512006 - 100 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 248.3512
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 248.3512
Optimality Based BT: 14 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 248.3512 to 258.23905 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 31 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.45 seconds)
Optimality Based BT: 15 improved bounds
Optimality Based BT: 11 improved bounds
Optimality Based BT: 21 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 14 improved bounds
Optimality Based BT: 12 improved bounds
Optimality Based BT: 13 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 1e+50 best solution, best possible 271.04863 (4.53 seconds)
Optimality Based BT: 10 improved bounds
Cbc0010I After 200 nodes, 69 on tree, 1e+50 best solution, best possible 271.24474 (5.99 seconds)
Cbc0010I After 300 nodes, 102 on tree, 1e+50 best solution, best possible 271.43782 (6.76 seconds)
Cbc0010I After 400 nodes, 128 on tree, 1e+50 best solution, best possible 271.51378 (7.87 seconds)
Cbc0010I After 500 nodes, 157 on tree, 1e+50 best solution, best possible 271.56603 (8.54 seconds)
Cbc0010I After 600 nodes, 173 on tree, 1e+50 best solution, best possible 271.64625 (9.18 seconds)
Cbc0010I After 700 nodes, 199 on tree, 1e+50 best solution, best possible 271.75369 (9.89 seconds)
Optimality Based BT: 9 improved bounds
Cbc0010I After 800 nodes, 227 on tree, 1e+50 best solution, best possible 271.77643 (10.98 seconds)
Cbc0010I After 900 nodes, 246 on tree, 1e+50 best solution, best possible 271.96631 (11.66 seconds)
Cbc0010I After 1000 nodes, 261 on tree, 1e+50 best solution, best possible 272.04303 (12.47 seconds)
Cbc0010I After 1100 nodes, 279 on tree, 1e+50 best solution, best possible 272.25238 (13.18 seconds)
Optimality Based BT: 12 improved bounds
Cbc0010I After 1200 nodes, 288 on tree, 1e+50 best solution, best possible 272.2781 (14.75 seconds)
Cbc0010I After 1300 nodes, 295 on tree, 1e+50 best solution, best possible 272.32666 (15.39 seconds)
Cbc0010I After 1400 nodes, 302 on tree, 1e+50 best solution, best possible 272.44692 (16.21 seconds)
Cbc0010I After 1500 nodes, 314 on tree, 1e+50 best solution, best possible 272.53878 (17.11 seconds)
Cbc0010I After 1600 nodes, 322 on tree, 1e+50 best solution, best possible 272.64307 (17.82 seconds)
Cbc0010I After 1700 nodes, 326 on tree, 1e+50 best solution, best possible 272.70942 (18.39 seconds)
Cbc0010I After 1800 nodes, 331 on tree, 1e+50 best solution, best possible 272.75443 (18.94 seconds)
Cbc0010I After 1900 nodes, 325 on tree, 1e+50 best solution, best possible 272.88118 (19.47 seconds)
Cbc0010I After 2000 nodes, 324 on tree, 1e+50 best solution, best possible 272.95985 (20.04 seconds)
Cbc0010I After 2100 nodes, 323 on tree, 1e+50 best solution, best possible 273.0505 (20.57 seconds)
Cbc0010I After 2200 nodes, 318 on tree, 1e+50 best solution, best possible 273.18487 (21.10 seconds)
Cbc0010I After 2300 nodes, 324 on tree, 1e+50 best solution, best possible 273.27397 (21.82 seconds)
Cbc0010I After 2400 nodes, 317 on tree, 1e+50 best solution, best possible 273.43707 (22.60 seconds)
Optimality Based BT: 11 improved bounds
Optimality Based BT: 10 improved bounds
Cbc0010I After 2500 nodes, 321 on tree, 1e+50 best solution, best possible 273.60883 (24.12 seconds)
Cbc0010I After 2600 nodes, 325 on tree, 1e+50 best solution, best possible 273.75148 (24.73 seconds)
Cbc0010I After 2700 nodes, 333 on tree, 1e+50 best solution, best possible 273.82394 (25.36 seconds)
Cbc0010I After 2800 nodes, 330 on tree, 1e+50 best solution, best possible 273.99379 (25.97 seconds)
Cbc0010I After 2900 nodes, 322 on tree, 1e+50 best solution, best possible 274.13497 (26.55 seconds)
Cbc0010I After 3000 nodes, 327 on tree, 1e+50 best solution, best possible 274.24207 (27.29 seconds)
Optimality Based BT: 6 improved bounds
Cbc0010I After 3100 nodes, 323 on tree, 1e+50 best solution, best possible 274.37005 (28.00 seconds)
Cbc0010I After 3200 nodes, 336 on tree, 1e+50 best solution, best possible 274.45531 (28.76 seconds)
Cbc0010I After 3300 nodes, 357 on tree, 1e+50 best solution, best possible 274.51531 (29.44 seconds)
Cbc0010I After 3400 nodes, 369 on tree, 1e+50 best solution, best possible 274.5646 (30.16 seconds)
Cbc0010I After 3500 nodes, 382 on tree, 1e+50 best solution, best possible 274.60715 (30.76 seconds)
Cbc0010I After 3600 nodes, 387 on tree, 1e+50 best solution, best possible 274.66336 (31.37 seconds)
Cbc0010I After 3700 nodes, 393 on tree, 1e+50 best solution, best possible 274.71907 (32.06 seconds)
Cbc0010I After 3800 nodes, 388 on tree, 1e+50 best solution, best possible 274.77264 (32.64 seconds)
Cbc0010I After 3900 nodes, 387 on tree, 1e+50 best solution, best possible 274.81555 (33.25 seconds)
Cbc0010I After 4000 nodes, 378 on tree, 1e+50 best solution, best possible 274.85874 (33.82 seconds)
Cbc0010I After 4100 nodes, 384 on tree, 1e+50 best solution, best possible 274.88501 (34.45 seconds)
Cbc0010I After 4200 nodes, 377 on tree, 1e+50 best solution, best possible 274.92086 (35.03 seconds)
Cbc0010I After 4300 nodes, 376 on tree, 1e+50 best solution, best possible 274.9479 (35.59 seconds)
Cbc0010I After 4400 nodes, 377 on tree, 1e+50 best solution, best possible 274.98045 (36.19 seconds)
Cbc0010I After 4500 nodes, 369 on tree, 1e+50 best solution, best possible 275.00717 (36.85 seconds)
Cbc0010I After 4600 nodes, 361 on tree, 1e+50 best solution, best possible 275.03758 (37.43 seconds)
Cbc0010I After 4700 nodes, 352 on tree, 1e+50 best solution, best possible 275.05958 (38.00 seconds)
Cbc0010I After 4800 nodes, 340 on tree, 1e+50 best solution, best possible 275.08928 (38.57 seconds)
Cbc0010I After 4900 nodes, 328 on tree, 1e+50 best solution, best possible 275.11918 (39.10 seconds)
Cbc0010I After 5000 nodes, 323 on tree, 1e+50 best solution, best possible 275.14465 (39.64 seconds)
Couenne: new cutoff value 2.7548267980e+02 (40.3851 seconds)
Cbc0004I Integer solution of 275.48268 found after 56000 iterations and 5047 nodes (39.93 seconds)
Cbc0010I After 5100 nodes, 320 on tree, 275.48268 best solution, best possible 275.15895 (40.23 seconds)
Cbc0010I After 5200 nodes, 305 on tree, 275.48268 best solution, best possible 275.18463 (40.77 seconds)
Cbc0010I After 5300 nodes, 301 on tree, 275.48268 best solution, best possible 275.21048 (41.36 seconds)
Cbc0010I After 5400 nodes, 292 on tree, 275.48268 best solution, best possible 275.22341 (41.94 seconds)
Cbc0010I After 5500 nodes, 283 on tree, 275.48268 best solution, best possible 275.23779 (42.53 seconds)
Cbc0010I After 5600 nodes, 271 on tree, 275.48268 best solution, best possible 275.26494 (43.15 seconds)
Cbc0010I After 5700 nodes, 249 on tree, 275.48268 best solution, best possible 275.29265 (43.68 seconds)
Cbc0010I After 5800 nodes, 237 on tree, 275.48268 best solution, best possible 275.3132 (44.23 seconds)
Cbc0010I After 5900 nodes, 210 on tree, 275.48268 best solution, best possible 275.3345 (44.81 seconds)
Cbc0010I After 6000 nodes, 208 on tree, 275.48268 best solution, best possible 275.34918 (45.47 seconds)
Cbc0010I After 6100 nodes, 188 on tree, 275.48268 best solution, best possible 275.37667 (45.99 seconds)
Cbc0010I After 6200 nodes, 174 on tree, 275.48268 best solution, best possible 275.3924 (46.55 seconds)
Cbc0010I After 6300 nodes, 155 on tree, 275.48268 best solution, best possible 275.40746 (47.06 seconds)
Couenne: new cutoff value 2.7548151936e+02 (47.8265 seconds)
Cbc0004I Integer solution of 275.48152 found after 68899 iterations and 6356 nodes (47.37 seconds)
Cbc0010I After 6400 nodes, 158 on tree, 275.48152 best solution, best possible 275.41349 (47.60 seconds)
Cbc0010I After 6500 nodes, 148 on tree, 275.48152 best solution, best possible 275.42449 (48.15 seconds)
Cbc0010I After 6600 nodes, 128 on tree, 275.48152 best solution, best possible 275.43832 (48.65 seconds)
Couenne: new cutoff value 2.7548081469e+02 (49.2594 seconds)
Cbc0004I Integer solution of 275.48081 found after 71158 iterations and 6630 nodes (48.81 seconds)
Cbc0010I After 6700 nodes, 112 on tree, 275.48081 best solution, best possible 275.45009 (49.24 seconds)
Cbc0010I After 6800 nodes, 87 on tree, 275.48081 best solution, best possible 275.4614 (49.70 seconds)
Cbc0010I After 6900 nodes, 62 on tree, 275.48081 best solution, best possible 275.47085 (50.15 seconds)
Couenne: new cutoff value 2.7548079600e+02 (50.9114 seconds)
Cbc0004I Integer solution of 275.4808 found after 73538 iterations and 6969 nodes (50.46 seconds)
Cbc0010I After 7000 nodes, 33 on tree, 275.4808 best solution, best possible 275.47878 (50.56 seconds)
Couenne: new cutoff value 2.7548042547e+02 (51.1295 seconds)
Cbc0004I Integer solution of 275.48043 found after 73801 iterations and 7024 nodes (50.68 seconds)
Couenne: new cutoff value 2.7548039483e+02 (51.3806 seconds)
Cbc0004I Integer solution of 275.48039 found after 74059 iterations and 7080 nodes (50.93 seconds)
Cbc0010I After 7100 nodes, 18 on tree, 275.48039 best solution, best possible 275.48006 (51.01 seconds)
Cbc0010I After 7200 nodes, 16 on tree, 275.48039 best solution, best possible 275.48032 (51.42 seconds)
Cbc0001I Search completed - best objective 275.4803948286297, took 74717 iterations and 7260 nodes (51.63 seconds)
Cbc0035I Maximum depth 46, 124 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        401
Linearization cuts added in total:            401  (separation time: 0.001716s)
Total solve time:                         51.6364s (51.6364s in branch-and-bound)
Lower bound:                               275.48
Upper bound:                               275.48  (gap: 0.00%)
Branch-and-bound nodes:                      7260
Stats: /tmp/jl_DgAvhF/model.nl  230 [var]   10 [int]  240 [con]   89 [aux]    401 [root]      401 [tot] 0.001716 [sep]  51.6364 [time]   51.637 [bb]         2.754804e+02 [lower]         2.754804e+02 [upper]    7260 [nodes]
Performance of                           FBBT:	    2.78436s,     9658 runs. fix:          0 shrnk:   0.678163 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	    1.52143s,       14 runs. fix:   0.816036 shrnk:    34.1786 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-5.txt
f0 = 0.05999238944315326
f0 = 0.02205602553057105
f0 = 0.06263911250682179
f0 = 0.08293065599494714
f0 = 0.00441120510611421
f0 = 0.007057928169782736
f0 = 0.06263911250682179
f0 = 0.05116997923092483
f0 = 0.03617188187013652
f0 = 0.00441120510611421
