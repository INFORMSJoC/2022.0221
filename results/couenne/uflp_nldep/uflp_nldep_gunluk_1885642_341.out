solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-4.txt exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 598.96749       88 410.33046
NLP0014I             2         OPT 618.40555       52 3.492614
Couenne: new cutoff value 6.1840613400e+02 (417.142 seconds)
Loaded instance "/tmp/jl_Cmaevi/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 42151.571 (520)
Clp0006I 152  Obj 3.0843649e-12 Primal inf 77240.528 (337)
Clp0006I 299  Obj 0.00025310906 Primal inf 1489441.9 (161)
Clp0006I 451  Obj 438.47529 Primal inf 2826461.6 (209)
Clp0006I 603  Obj 583.73044 Primal inf 735.14929 (37)
Clp0006I 633  Obj 598.90341
Clp0000I Optimal - objective value 598.90239
Clp0032I Optimal objective 598.9023889 - 633 iterations time 0.082, Presolve 0.02
Clp0000I Optimal - objective value 598.90239
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 598.90239
Optimality Based BT: 29 improved bounds
Probing: Couenne: new cutoff value 6.1840611384e+02 (420.999 seconds)
1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 22 added rows had average density of 2
Cbc0013I At root node, 22 cuts changed objective from 598.90239 to 598.90498 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 45 row cuts average 2.0 elements, 5 column cuts (5 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (16.44 seconds)
Optimality Based BT: 26 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 21 improved bounds
Cbc0010I After 100 nodes, 30 on tree, 1e+50 best solution, best possible 598.96725 (86.74 seconds)
Cbc0010I After 200 nodes, 80 on tree, 1e+50 best solution, best possible 598.96799 (94.61 seconds)
Couenne: new cutoff value 5.9904574399e+02 (512.03 seconds)
Couenne: new cutoff value 5.9899535176e+02 (515.475 seconds)
Couenne: new cutoff value 5.9899020507e+02 (515.577 seconds)
Couenne: new cutoff value 5.9897980717e+02 (515.72 seconds)
Couenne: new cutoff value 5.9897563152e+02 (516.373 seconds)
Couenne: new cutoff value 5.9896819961e+02 (517.421 seconds)
Couenne: new cutoff value 5.9896799032e+02 (517.582 seconds)
Cbc0004I Integer solution of 598.96799 found after 5111 iterations and 284 nodes (100.20 seconds)
Cbc0001I Search completed - best objective 598.9679903210625, took 5111 iterations and 284 nodes (100.42 seconds)
Cbc0035I Maximum depth 141, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.032478s)
Total solve time:                         100.521s (100.521s in branch-and-bound)
Lower bound:                              598.968
Upper bound:                              598.968  (gap: 0.00%)
Branch-and-bound nodes:                       284
Stats: /tmp/jl_Cmaevi/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.032478 [sep]  100.521 [time]  100.528 [bb]         5.989680e+02 [lower]         5.989680e+02 [upper]     284 [nodes]
Performance of                           FBBT:	    2.89913s,      416 runs. fix: 0.000536557 shrnk:    65.8842 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    14.1695s,        4 runs. fix:   0.307692 shrnk:    42.5835 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-4.txt
