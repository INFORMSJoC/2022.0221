solving instance uflp nldep orlib 133 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.2861868750e+06 (1.7456 seconds)
1.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 627444.51       44 1.823158
NLP0014I             2         OPT 627626.86       55 2.427041
Couenne: new cutoff value 6.2762610110e+05 (6.08343 seconds)
Loaded instance "/tmp/jl_zOqZes/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          296 (0 integer)

Coin0506I Presolve 3080 (-61) rows, 2786 (-160) columns and 13557 (-270) elements
Clp0006I 0  Obj 0 Primal inf 229.08036 (50)
Clp0006I 136  Obj 619716.54 Primal inf 86.038455 (64)
Clp0006I 251  Obj 624902.4
Clp0000I Optimal - objective value 624902.4
Clp0032I Optimal objective 624902.3968 - 251 iterations time 0.052, Presolve 0.04
Clp0000I Optimal - objective value 624902.4
NLP Heuristic: NLP0014I             3         OPT 627444.51       51 2.460868
no solution.
Clp0000I Optimal - objective value 624902.4
Optimality Based BT: 60 improved bounds
Probing: Couenne: new cutoff value 6.2744538962e+05 (10.3508 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 97 added rows had average density of 2
Cbc0013I At root node, 97 cuts changed objective from 624902.4 to 627444.46 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 165 row cuts average 2.0 elements, 5 column cuts (5 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (14.32 seconds)
Optimality Based BT: 88 improved bounds
Optimality Based BT: 84 improved bounds
Optimality Based BT: 86 improved bounds
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 627445.32 (75.42 seconds)
Cbc0010I After 200 nodes, 32 on tree, 1e+50 best solution, best possible 627445.32 (78.72 seconds)
Couenne: new cutoff value 6.2744538754e+05 (87.2153 seconds)
Cbc0010I After 300 nodes, 50 on tree, 1e+50 best solution, best possible 627445.34 (89.89 seconds)
Cbc0010I After 400 nodes, 59 on tree, 1e+50 best solution, best possible 627445.36 (93.47 seconds)
Cbc0010I After 500 nodes, 73 on tree, 1e+50 best solution, best possible 627445.37 (97.19 seconds)
Cbc0010I After 600 nodes, 82 on tree, 1e+50 best solution, best possible 627445.37 (100.82 seconds)
Cbc0010I After 700 nodes, 87 on tree, 1e+50 best solution, best possible 627445.37 (104.44 seconds)
Cbc0010I After 800 nodes, 92 on tree, 1e+50 best solution, best possible 627445.37 (108.04 seconds)
Cbc0010I After 900 nodes, 102 on tree, 1e+50 best solution, best possible 627445.37 (111.69 seconds)
Cbc0010I After 1000 nodes, 103 on tree, 1e+50 best solution, best possible 627445.37 (115.22 seconds)
Cbc0010I After 1100 nodes, 97 on tree, 1e+50 best solution, best possible 627445.38 (118.82 seconds)
Cbc0010I After 1200 nodes, 99 on tree, 1e+50 best solution, best possible 627445.38 (122.30 seconds)
Cbc0010I After 1300 nodes, 96 on tree, 1e+50 best solution, best possible 627445.38 (125.65 seconds)
Cbc0010I After 1400 nodes, 95 on tree, 1e+50 best solution, best possible 627445.38 (129.29 seconds)
Cbc0010I After 1500 nodes, 84 on tree, 1e+50 best solution, best possible 627445.38 (132.48 seconds)
Cbc0010I After 1600 nodes, 79 on tree, 1e+50 best solution, best possible 627445.39 (135.48 seconds)
Couenne: new cutoff value 6.2744538744e+05 (142.318 seconds)
Cbc0010I After 1700 nodes, 73 on tree, 1e+50 best solution, best possible 627445.39 (138.22 seconds)
Cbc0010I After 1800 nodes, 32 on tree, 1e+50 best solution, best possible 627445.39 (139.96 seconds)
Cbc0001I Search completed - best objective 1e+50, took 7001 iterations and 1864 nodes (140.76 seconds)
Cbc0035I Maximum depth 135, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3141
Linearization cuts added in total:           3141  (separation time: 0.020541s)
Total solve time:                         140.815s (140.815s in branch-and-bound)
Lower bound:                               627445
Upper bound:                               627445  (gap: 0.00%)
Branch-and-bound nodes:                      1864
Stats: /tmp/jl_zOqZes/model.nl 2650 [var]   50 [int] 2650 [con]  296 [aux]   3141 [root]     3141 [tot] 0.020541 [sep]  140.815 [time]  140.818 [bb]         6.274454e+05 [lower]         6.274454e+05 [upper]    1864 [nodes]
Performance of                           FBBT:	    5.20779s,     1058 runs. fix:  0.0271755 shrnk:    16.9983 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.05678s,        4 runs. fix:       2.25 shrnk:    522.505 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap133.txt
