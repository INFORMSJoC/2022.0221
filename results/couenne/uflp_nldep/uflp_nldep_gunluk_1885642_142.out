solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-4.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 9.7951873894e+02 (0.197782 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 421.49732       36 0.414838
NLP0014I             2         OPT 427.72855       24 0.238555
Loaded instance "/tmp/jl_LOHxK4/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 1040 (-1) rows, 900 (-59) columns and 4459 (-60) elements
Clp0006I 0  Obj -2576.25 Primal inf 1461932.9 (60)
Clp0006I 95  Obj -702.98094 Primal inf 1743882.4 (87)
Clp0006I 190  Obj 171.37318 Primal inf 11935.223 (46)
Clp0006I 285  Obj 319.75721
Clp0000I Optimal - objective value 319.75721
Clp0000I Optimal - objective value 319.75721
Clp0032I Optimal objective 319.7572148 - 285 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 319.75721
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 319.75721
Optimality Based BT: 0 improved bounds
Probing: Couenne: new cutoff value 4.2772867687e+02 (1.26296 seconds)
0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 319.75721 to 320.5752 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 132 row cuts average 2.0 elements, 403 column cuts (403 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.22 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.2772866006e+02 (2.50783 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.2772865960e+02 (10.0227 seconds)
Cbc0010I After 100 nodes, 38 on tree, 1e+50 best solution, best possible 321.3214 (11.72 seconds)
Cbc0010I After 200 nodes, 88 on tree, 1e+50 best solution, best possible 321.3214 (13.49 seconds)
Couenne: new cutoff value 4.2149742068e+02 (14.7681 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 108 on tree, 1e+50 best solution, best possible 359.02346 (22.76 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 400 nodes, 119 on tree, 1e+50 best solution, best possible 364.21233 (25.79 seconds)
Cbc0010I After 500 nodes, 123 on tree, 1e+50 best solution, best possible 397.71103 (28.62 seconds)
Cbc0010I After 600 nodes, 152 on tree, 1e+50 best solution, best possible 400.54263 (30.50 seconds)
Cbc0010I After 700 nodes, 201 on tree, 1e+50 best solution, best possible 400.54263 (32.14 seconds)
Couenne: new cutoff value 4.1935735263e+02 (33.1308 seconds)
Couenne: new cutoff value 4.1935169732e+02 (33.1458 seconds)
Cbc0010I After 800 nodes, 208 on tree, 1e+50 best solution, best possible 406.86314 (33.91 seconds)
Cbc0010I After 900 nodes, 205 on tree, 1e+50 best solution, best possible 411.76827 (35.62 seconds)
Cbc0010I After 1000 nodes, 199 on tree, 1e+50 best solution, best possible 414.80006 (37.23 seconds)
Cbc0010I After 1100 nodes, 190 on tree, 1e+50 best solution, best possible 417.48866 (38.77 seconds)
Cbc0010I After 1200 nodes, 165 on tree, 1e+50 best solution, best possible 419.04893 (40.10 seconds)
Cbc0010I After 1300 nodes, 120 on tree, 1e+50 best solution, best possible 419.39707 (40.83 seconds)
Cbc0010I After 1400 nodes, 70 on tree, 1e+50 best solution, best possible 421.4997 (41.26 seconds)
Cbc0010I After 1500 nodes, 20 on tree, 1e+50 best solution, best possible 421.95379 (41.75 seconds)
Cbc0001I Search completed - best objective 1e+50, took 54200 iterations and 1540 nodes (41.93 seconds)
Cbc0035I Maximum depth 114, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1041
Linearization cuts added in total:           1041  (separation time: 0.00476s)
Total solve time:                         41.9408s (41.9408s in branch-and-bound)
Lower bound:                              419.352
Upper bound:                              419.352  (gap: 0.00%)
Branch-and-bound nodes:                      1540
Stats: /tmp/jl_LOHxK4/model.nl  860 [var]   20 [int]  880 [con]   99 [aux]   1041 [root]     1041 [tot] 0.00476 [sep]  41.9408 [time]  41.9417 [bb]         4.193517e+02 [lower]         4.193517e+02 [upper]    1540 [nodes]
Performance of                           FBBT:	    1.67287s,     1798 runs. fix:          0 shrnk:     3.0027 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.17535s,        9 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-4.txt
