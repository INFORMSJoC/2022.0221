solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-5.txt exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 339.08379       99 0.414752
NLP0014I             2         OPT 580.54033       48 0.13545
Couenne: new cutoff value 5.8054032878e+02 (0.584576 seconds)
Loaded instance "/tmp/jl_Rqulyh/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           89 (0 integer)

Coin0506I Presolve 369 (-32) rows, 249 (-70) columns and 1307 (-102) elements
Clp0006I 0  Obj 0 Primal inf 3384.8833 (130)
Clp0006I 63  Obj 3.3791834e-12 Primal inf 666.70725 (60)
Clp0006I 109  Obj 138.71163 Primal inf 4877.4828 (68)
Clp0006I 150  Obj 314.60317
Clp0000I Optimal - objective value 314.60317
Clp0032I Optimal objective 314.6031702 - 150 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 314.60317
Cbc0012I Integer solution of 580.54033 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 314.60317
Optimality Based BT: Couenne: new cutoff value 5.5684977244e+02 (0.70651 seconds)
Couenne: new cutoff value 4.6882451507e+02 (0.709251 seconds)
9 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 5 added rows had average density of 2
Cbc0013I At root node, 5 cuts changed objective from 314.60317 to 314.60359 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 5 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 580.54033 best solution, best possible 314.60359 (0.34 seconds)
Optimality Based BT: 8 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 12 improved bounds
Optimality Based BT: 4 improved bounds
Optimality Based BT: 8 improved bounds
Couenne: new cutoff value 3.7521684800e+02 (4.08352 seconds)
Cbc0004I Integer solution of 375.21685 found after 1562 iterations and 97 nodes (3.49 seconds)
Cbc0010I After 100 nodes, 31 on tree, 375.21685 best solution, best possible 323.20971 (3.76 seconds)
Optimality Based BT: 7 improved bounds
Couenne: new cutoff value 3.3969913155e+02 (5.01066 seconds)
Cbc0004I Integer solution of 339.69913 found after 2345 iterations and 162 nodes (4.42 seconds)
Cbc0010I After 200 nodes, 33 on tree, 339.69913 best solution, best possible 328.17638 (4.91 seconds)
Cbc0010I After 300 nodes, 49 on tree, 339.69913 best solution, best possible 329.81548 (5.62 seconds)
Cbc0010I After 400 nodes, 83 on tree, 339.69913 best solution, best possible 330.7053 (6.39 seconds)
Couenne: new cutoff value 3.3909657596e+02 (7.012 seconds)
Couenne: new cutoff value 3.3909621134e+02 (7.02584 seconds)
Cbc0004I Integer solution of 339.09621 found after 5140 iterations and 409 nodes (6.44 seconds)
Cbc0010I After 500 nodes, 82 on tree, 339.09621 best solution, best possible 332.63209 (7.10 seconds)
Cbc0010I After 600 nodes, 89 on tree, 339.09621 best solution, best possible 334.00045 (7.73 seconds)
Cbc0010I After 700 nodes, 82 on tree, 339.09621 best solution, best possible 335.00702 (8.25 seconds)
Cbc0010I After 800 nodes, 79 on tree, 339.09621 best solution, best possible 335.71926 (8.83 seconds)
Cbc0010I After 900 nodes, 62 on tree, 339.09621 best solution, best possible 336.76266 (9.31 seconds)
Cbc0010I After 1000 nodes, 42 on tree, 339.09621 best solution, best possible 337.90162 (9.79 seconds)
Cbc0010I After 1100 nodes, 33 on tree, 339.09621 best solution, best possible 338.51505 (10.32 seconds)
Cbc0010I After 1200 nodes, 19 on tree, 339.09621 best solution, best possible 339.03939 (10.80 seconds)
Couenne: new cutoff value 3.3908890423e+02 (11.4611 seconds)
Cbc0004I Integer solution of 339.08891 found after 13809 iterations and 1215 nodes (10.87 seconds)
Cbc0001I Search completed - best objective 339.0889050439592, took 13946 iterations and 1247 nodes (10.98 seconds)
Cbc0035I Maximum depth 48, 26 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        401
Linearization cuts added in total:            401  (separation time: 0.001671s)
Total solve time:                         10.9884s (10.9884s in branch-and-bound)
Lower bound:                              339.089
Upper bound:                              339.089  (gap: 0.00%)
Branch-and-bound nodes:                      1247
Stats: /tmp/jl_Rqulyh/model.nl  230 [var]   10 [int]  240 [con]   89 [aux]    401 [root]      401 [tot] 0.001671 [sep]  10.9884 [time]  10.9884 [bb]         3.390889e+02 [lower]         3.390889e+02 [upper]    1247 [nodes]
Performance of                           FBBT:	   0.522425s,     1782 runs. fix: 0.00227505 shrnk:    3.58946 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.28314s,        7 runs. fix:    1.02752 shrnk:    5.50404 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-5.txt
