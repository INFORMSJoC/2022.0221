solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 9.0019584035e+02 (0.192301 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 224.72994       24 0.272521
NLP0014I             2         OPT 224.72994       26 0.211077
Couenne: new cutoff value 2.2473003274e+02 (0.709907 seconds)
Loaded instance "/tmp/jl_nzii02/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1051 (-30) rows, 911 (-88) columns and 4441 (-118) elements
Clp0006I 0  Obj 0 Primal inf 93.01331 (40)
Clp0006I 96  Obj 217.12699 Primal inf 19.899721 (17)
Clp0006I 113  Obj 217.12699
Clp0000I Optimal - objective value 217.12699
Clp0032I Optimal objective 217.1269887 - 113 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 217.12699
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 217.12699
Optimality Based BT: 24 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 33 added rows had average density of 2
Cbc0013I At root node, 33 cuts changed objective from 217.12699 to 224.72939 in 6 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 105 row cuts average 2.0 elements, 7 column cuts (7 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.18 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 29 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 21 improved bounds
Optimality Based BT: 4 improved bounds
Cbc0010I After 100 nodes, 36 on tree, 1e+50 best solution, best possible 224.72951 (15.56 seconds)
Cbc0010I After 200 nodes, 68 on tree, 1e+50 best solution, best possible 224.72951 (17.00 seconds)
Cbc0010I After 300 nodes, 98 on tree, 1e+50 best solution, best possible 224.72957 (18.47 seconds)
Cbc0010I After 400 nodes, 125 on tree, 1e+50 best solution, best possible 224.7296 (19.54 seconds)
Optimality Based BT: 3 improved bounds
Cbc0010I After 500 nodes, 152 on tree, 1e+50 best solution, best possible 224.72964 (22.09 seconds)
Cbc0010I After 600 nodes, 174 on tree, 1e+50 best solution, best possible 224.72965 (24.00 seconds)
Optimality Based BT: 24 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 700 nodes, 205 on tree, 1e+50 best solution, best possible 224.72965 (26.58 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 27 improved bounds
Optimality Based BT: 2 improved bounds
Cbc0010I After 800 nodes, 234 on tree, 1e+50 best solution, best possible 224.72967 (37.71 seconds)
Cbc0010I After 900 nodes, 257 on tree, 1e+50 best solution, best possible 224.72968 (38.78 seconds)
Cbc0010I After 1000 nodes, 285 on tree, 1e+50 best solution, best possible 224.72969 (39.87 seconds)
Cbc0010I After 1100 nodes, 306 on tree, 1e+50 best solution, best possible 224.72969 (40.94 seconds)
Cbc0010I After 1200 nodes, 335 on tree, 1e+50 best solution, best possible 224.72969 (42.11 seconds)
Cbc0010I After 1300 nodes, 360 on tree, 1e+50 best solution, best possible 224.7297 (43.56 seconds)
Cbc0010I After 1400 nodes, 384 on tree, 1e+50 best solution, best possible 224.7297 (45.74 seconds)
Cbc0010I After 1500 nodes, 413 on tree, 1e+50 best solution, best possible 224.72972 (46.86 seconds)
Cbc0010I After 1600 nodes, 441 on tree, 1e+50 best solution, best possible 224.72973 (47.93 seconds)
Cbc0010I After 1700 nodes, 466 on tree, 1e+50 best solution, best possible 224.72974 (49.07 seconds)
Cbc0010I After 1800 nodes, 492 on tree, 1e+50 best solution, best possible 224.72974 (50.22 seconds)
Cbc0010I After 1900 nodes, 516 on tree, 1e+50 best solution, best possible 224.72975 (52.51 seconds)
Cbc0010I After 2000 nodes, 540 on tree, 1e+50 best solution, best possible 224.72975 (53.61 seconds)
Cbc0010I After 2100 nodes, 563 on tree, 1e+50 best solution, best possible 224.72975 (54.76 seconds)
Cbc0010I After 2200 nodes, 593 on tree, 1e+50 best solution, best possible 224.72975 (55.92 seconds)
Cbc0010I After 2300 nodes, 619 on tree, 1e+50 best solution, best possible 224.72976 (57.56 seconds)
Cbc0010I After 2400 nodes, 640 on tree, 1e+50 best solution, best possible 224.72976 (58.67 seconds)
Cbc0010I After 2500 nodes, 664 on tree, 1e+50 best solution, best possible 224.72977 (59.81 seconds)
Cbc0010I After 2600 nodes, 688 on tree, 1e+50 best solution, best possible 224.72977 (60.99 seconds)
Cbc0010I After 2700 nodes, 711 on tree, 1e+50 best solution, best possible 224.72978 (63.31 seconds)
Cbc0010I After 2800 nodes, 734 on tree, 1e+50 best solution, best possible 224.72978 (64.45 seconds)
Cbc0010I After 2900 nodes, 752 on tree, 1e+50 best solution, best possible 224.72979 (65.54 seconds)
Optimality Based BT: 4 improved bounds
Cbc0010I After 3000 nodes, 777 on tree, 1e+50 best solution, best possible 224.72979 (67.32 seconds)
Cbc0010I After 3100 nodes, 796 on tree, 1e+50 best solution, best possible 224.72979 (68.60 seconds)
Cbc0010I After 3200 nodes, 813 on tree, 1e+50 best solution, best possible 224.7298 (70.41 seconds)
Cbc0010I After 3300 nodes, 832 on tree, 1e+50 best solution, best possible 224.7298 (71.54 seconds)
Optimality Based BT: 1 improved bounds
Cbc0010I After 3400 nodes, 851 on tree, 1e+50 best solution, best possible 224.72981 (76.60 seconds)
Cbc0010I After 3500 nodes, 868 on tree, 1e+50 best solution, best possible 224.72981 (79.24 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3600 nodes, 881 on tree, 1e+50 best solution, best possible 224.72982 (80.51 seconds)
Cbc0010I After 3700 nodes, 896 on tree, 1e+50 best solution, best possible 224.72982 (81.61 seconds)
Cbc0010I After 3800 nodes, 917 on tree, 1e+50 best solution, best possible 224.72982 (82.75 seconds)
Cbc0010I After 3900 nodes, 932 on tree, 1e+50 best solution, best possible 224.72983 (83.83 seconds)
Cbc0010I After 4000 nodes, 953 on tree, 1e+50 best solution, best possible 224.72983 (84.97 seconds)
Cbc0010I After 4100 nodes, 967 on tree, 1e+50 best solution, best possible 224.72983 (86.05 seconds)
Cbc0010I After 4200 nodes, 978 on tree, 1e+50 best solution, best possible 224.72983 (87.17 seconds)
Cbc0010I After 4300 nodes, 988 on tree, 1e+50 best solution, best possible 224.72984 (88.22 seconds)
Cbc0010I After 4400 nodes, 1001 on tree, 1e+50 best solution, best possible 224.72984 (89.33 seconds)
Cbc0010I After 4500 nodes, 1007 on tree, 1e+50 best solution, best possible 224.72985 (90.52 seconds)
Cbc0010I After 4600 nodes, 1019 on tree, 1e+50 best solution, best possible 224.72985 (91.58 seconds)
Cbc0010I After 4700 nodes, 1028 on tree, 1e+50 best solution, best possible 224.72985 (92.65 seconds)
Cbc0010I After 4800 nodes, 1046 on tree, 1e+50 best solution, best possible 224.72985 (94.32 seconds)
Cbc0010I After 4900 nodes, 1057 on tree, 1e+50 best solution, best possible 224.72986 (95.37 seconds)
Cbc0010I After 5000 nodes, 1065 on tree, 1e+50 best solution, best possible 224.72986 (96.41 seconds)
Cbc0010I After 5100 nodes, 1071 on tree, 1e+50 best solution, best possible 224.72986 (97.45 seconds)
Cbc0010I After 5200 nodes, 1081 on tree, 1e+50 best solution, best possible 224.72987 (98.49 seconds)
Cbc0010I After 5300 nodes, 1096 on tree, 1e+50 best solution, best possible 224.72987 (99.57 seconds)
Cbc0010I After 5400 nodes, 1103 on tree, 1e+50 best solution, best possible 224.72987 (101.51 seconds)
Cbc0010I After 5500 nodes, 1107 on tree, 1e+50 best solution, best possible 224.72987 (102.54 seconds)
Cbc0010I After 5600 nodes, 1119 on tree, 1e+50 best solution, best possible 224.72988 (103.60 seconds)
Cbc0010I After 5700 nodes, 1123 on tree, 1e+50 best solution, best possible 224.72988 (104.62 seconds)
Cbc0010I After 5800 nodes, 1128 on tree, 1e+50 best solution, best possible 224.72988 (105.65 seconds)
Cbc0010I After 5900 nodes, 1128 on tree, 1e+50 best solution, best possible 224.72988 (106.65 seconds)
Cbc0010I After 6000 nodes, 1134 on tree, 1e+50 best solution, best possible 224.72989 (108.02 seconds)
Cbc0010I After 6100 nodes, 1143 on tree, 1e+50 best solution, best possible 224.72989 (109.06 seconds)
Cbc0010I After 6200 nodes, 1154 on tree, 1e+50 best solution, best possible 224.72989 (110.14 seconds)
Cbc0010I After 6300 nodes, 1151 on tree, 1e+50 best solution, best possible 224.72989 (112.19 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 6400 nodes, 1158 on tree, 1e+50 best solution, best possible 224.72989 (116.17 seconds)
Cbc0010I After 6500 nodes, 1156 on tree, 1e+50 best solution, best possible 224.7299 (119.87 seconds)
Cbc0010I After 6600 nodes, 1157 on tree, 1e+50 best solution, best possible 224.7299 (120.88 seconds)
Cbc0010I After 6700 nodes, 1159 on tree, 1e+50 best solution, best possible 224.7299 (121.91 seconds)
Cbc0010I After 6800 nodes, 1157 on tree, 1e+50 best solution, best possible 224.7299 (122.89 seconds)
Cbc0010I After 6900 nodes, 1163 on tree, 1e+50 best solution, best possible 224.72991 (124.27 seconds)
Cbc0010I After 7000 nodes, 1157 on tree, 1e+50 best solution, best possible 224.72991 (125.27 seconds)
Cbc0010I After 7100 nodes, 1154 on tree, 1e+50 best solution, best possible 224.72992 (127.30 seconds)
Cbc0010I After 7200 nodes, 1155 on tree, 1e+50 best solution, best possible 224.72992 (128.32 seconds)
Cbc0010I After 7300 nodes, 1151 on tree, 1e+50 best solution, best possible 224.72992 (129.29 seconds)
Cbc0010I After 7400 nodes, 1141 on tree, 1e+50 best solution, best possible 224.72993 (130.22 seconds)
Cbc0010I After 7500 nodes, 1134 on tree, 1e+50 best solution, best possible 224.72993 (131.15 seconds)
Cbc0010I After 7600 nodes, 1123 on tree, 1e+50 best solution, best possible 224.72994 (132.03 seconds)
Cbc0010I After 7700 nodes, 1108 on tree, 1e+50 best solution, best possible 224.72994 (132.89 seconds)
Cbc0010I After 7800 nodes, 1103 on tree, 1e+50 best solution, best possible 224.72994 (133.87 seconds)
Cbc0010I After 7900 nodes, 1098 on tree, 1e+50 best solution, best possible 224.72995 (135.73 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 8000 nodes, 1098 on tree, 1e+50 best solution, best possible 224.72995 (137.28 seconds)
Cbc0010I After 8100 nodes, 1088 on tree, 1e+50 best solution, best possible 224.72996 (138.28 seconds)
Cbc0010I After 8200 nodes, 1075 on tree, 1e+50 best solution, best possible 224.72996 (139.15 seconds)
Cbc0010I After 8300 nodes, 1066 on tree, 1e+50 best solution, best possible 224.72996 (140.09 seconds)
Cbc0010I After 8400 nodes, 1049 on tree, 1e+50 best solution, best possible 224.72997 (141.99 seconds)
Cbc0010I After 8500 nodes, 1038 on tree, 1e+50 best solution, best possible 224.72997 (142.90 seconds)
Cbc0010I After 8600 nodes, 1022 on tree, 1e+50 best solution, best possible 224.72997 (143.76 seconds)
Cbc0010I After 8700 nodes, 1004 on tree, 1e+50 best solution, best possible 224.72998 (144.59 seconds)
Cbc0010I After 8800 nodes, 991 on tree, 1e+50 best solution, best possible 224.72998 (145.45 seconds)
Cbc0010I After 8900 nodes, 979 on tree, 1e+50 best solution, best possible 224.72998 (146.34 seconds)
Cbc0010I After 9000 nodes, 959 on tree, 1e+50 best solution, best possible 224.72999 (147.19 seconds)
Cbc0010I After 9100 nodes, 934 on tree, 1e+50 best solution, best possible 224.72999 (148.02 seconds)
Cbc0010I After 9200 nodes, 904 on tree, 1e+50 best solution, best possible 224.73 (148.79 seconds)
Cbc0010I After 9300 nodes, 875 on tree, 1e+50 best solution, best possible 224.73001 (149.57 seconds)
Cbc0010I After 9400 nodes, 835 on tree, 1e+50 best solution, best possible 224.73002 (150.25 seconds)
Cbc0010I After 9500 nodes, 785 on tree, 1e+50 best solution, best possible 224.73004 (150.84 seconds)
Cbc0010I After 9600 nodes, 735 on tree, 1e+50 best solution, best possible 224.73006 (151.41 seconds)
Cbc0010I After 9700 nodes, 685 on tree, 1e+50 best solution, best possible 224.73008 (151.99 seconds)
Cbc0010I After 9800 nodes, 635 on tree, 1e+50 best solution, best possible 224.73011 (152.55 seconds)
Cbc0010I After 9900 nodes, 585 on tree, 1e+50 best solution, best possible 224.73012 (153.11 seconds)
Cbc0010I After 10000 nodes, 535 on tree, 1e+50 best solution, best possible 224.73014 (153.67 seconds)
Cbc0010I After 10100 nodes, 485 on tree, 1e+50 best solution, best possible 224.73017 (154.23 seconds)
Cbc0010I After 10200 nodes, 435 on tree, 1e+50 best solution, best possible 224.73021 (154.81 seconds)
Cbc0010I After 10300 nodes, 385 on tree, 1e+50 best solution, best possible 224.73025 (155.36 seconds)
Cbc0010I After 10400 nodes, 335 on tree, 1e+50 best solution, best possible 224.7303 (155.90 seconds)
Cbc0010I After 10500 nodes, 285 on tree, 1e+50 best solution, best possible 224.73037 (156.42 seconds)
Cbc0010I After 10600 nodes, 235 on tree, 1e+50 best solution, best possible 224.73048 (156.93 seconds)
Cbc0010I After 10700 nodes, 185 on tree, 1e+50 best solution, best possible 224.73059 (157.43 seconds)
Cbc0010I After 10800 nodes, 135 on tree, 1e+50 best solution, best possible 224.73082 (157.88 seconds)
Cbc0010I After 10900 nodes, 85 on tree, 1e+50 best solution, best possible 224.73113 (158.35 seconds)
Cbc0010I After 11000 nodes, 35 on tree, 1e+50 best solution, best possible 224.73193 (158.78 seconds)
Cbc0001I Search completed - best objective 1e+50, took 37299 iterations and 11070 nodes (159.09 seconds)
Cbc0035I Maximum depth 43, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1081
Linearization cuts added in total:           1081  (separation time: 0.004477s)
Total solve time:                         159.105s (159.105s in branch-and-bound)
Lower bound:                               224.73
Upper bound:                               224.73  (gap: 0.00%)
Branch-and-bound nodes:                     11070
Stats: /tmp/jl_nzii02/model.nl  860 [var]   20 [int]  880 [con]  139 [aux]   1081 [root]     1081 [tot] 0.004477 [sep]  159.105 [time]  159.107 [bb]         2.247300e+02 [lower]         2.247300e+02 [upper]   11070 [nodes]
Performance of                           FBBT:	    6.03376s,     5554 runs. fix:          0 shrnk:    1.71192 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.80849s,       18 runs. fix:          0 shrnk:    21.8257 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-5.txt
