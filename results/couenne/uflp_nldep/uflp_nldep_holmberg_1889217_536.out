solving instance uflp nldep holmberg 54 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5838.8145       46 3.53289
Couenne: new cutoff value 5.8388133195e+03 (3.82999 seconds)
Loaded instance "/tmp/jl_v9TaDb/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1201 (-40) rows, 1051 (-158) columns and 5221 (-198) elements
Clp0006I 0  Obj -334.80052 Primal inf 1213.3682 (130)
Clp0006I 99  Obj 3533.7532 Primal inf 158.08001 (108)
Clp0006I 170  Obj 5260.0445
Clp0000I Optimal - objective value 5260.0445
Clp0032I Optimal objective 5260.044547 - 170 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 5260.0445
NLP Heuristic: NLP0014I             2         OPT 5838.8145       11 0.15009
no solution.
Clp0000I Optimal - objective value 5260.0445
Optimality Based BT: 32 improved bounds
Probing: 6 improved bounds
NLP Heuristic: no solution.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 5260.0445 to 5630.0903 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 14 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.35 seconds)
Optimality Based BT: 21 improved bounds
Optimality Based BT: 29 improved bounds
Optimality Based BT: 33 improved bounds
Optimality Based BT: 30 improved bounds
Optimality Based BT: 29 improved bounds
Cbc0010I After 100 nodes, 16 on tree, 1e+50 best solution, best possible 5833.4894 (17.87 seconds)
Cbc0010I After 200 nodes, 24 on tree, 1e+50 best solution, best possible 5835.4882 (20.31 seconds)
Cbc0010I After 300 nodes, 1 on tree, 1e+50 best solution, best possible 5838.7472 (22.22 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2314 iterations and 308 nodes (22.34 seconds)
Cbc0035I Maximum depth 23, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1241
Linearization cuts added in total:           1241  (separation time: 0.009163s)
Total solve time:                         22.3537s (22.3537s in branch-and-bound)
Lower bound:                              5838.81
Upper bound:                              5838.81  (gap: 0.00%)
Branch-and-bound nodes:                       308
Stats: /tmp/jl_v9TaDb/model.nl 1030 [var]   10 [int] 1120 [con]  179 [aux]   1241 [root]     1241 [tot] 0.009163 [sep]  22.3537 [time]  22.3559 [bb]         5.838813e+03 [lower]         5.838813e+03 [upper]     308 [nodes]
Performance of                           FBBT:	   0.564576s,      353 runs. fix:          0 shrnk:     9.8432 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.73923s,        6 runs. fix:    1.94545 shrnk:    95.4932 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p54
