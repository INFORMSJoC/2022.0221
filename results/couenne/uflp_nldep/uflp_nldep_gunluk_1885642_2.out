solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-10.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 5.7778083095e+02 (0.025241 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 283.70405       30 0.117431
Couenne: new cutoff value 2.8370406974e+02 (0.145701 seconds)
NLP0014I             2         OPT 283.70405       22 0.060545
Couenne: new cutoff value 2.8370406887e+02 (0.207145 seconds)
Loaded instance "/tmp/jl_5GgRiP/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           49 (0 integer)

Coin0506I Presolve 320 (-1) rows, 250 (-29) columns and 1229 (-30) elements
Clp0006I 0  Obj -1473.75 Primal inf 246072.68 (30)
Clp0006I 69  Obj 47.004703 Primal inf 2564.4049 (22)
Clp0006I 103  Obj 160.95522
Clp0000I Optimal - objective value 160.95522
Clp0032I Optimal objective 160.9552197 - 103 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 160.95522
Cbc0012I Integer solution of 283.70407 found by Couenne Rounding NLP after 0 iterations and 0 nodes (0.00 seconds)
NLP Heuristic: NLP0014I             3         OPT 339.51463       20 0.05348
no solution.
Clp0000I Optimal - objective value 160.95522
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 160.95522 to 176.81745 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 101 row cuts average 2.0 elements, 192 column cuts (192 active)
Cbc0010I After 0 nodes, 1 on tree, 283.70407 best solution, best possible 176.81745 (0.33 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 283.70407 best solution, best possible 226.17973 (4.43 seconds)
Optimality Based BT: 2 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 4 improved bounds
Cbc0010I After 200 nodes, 37 on tree, 283.70407 best solution, best possible 229.63719 (5.50 seconds)
Optimality Based BT: 6 improved bounds
Cbc0010I After 300 nodes, 41 on tree, 283.70407 best solution, best possible 250.64943 (6.49 seconds)
Cbc0010I After 400 nodes, 47 on tree, 283.70407 best solution, best possible 263.8877 (7.14 seconds)
Cbc0010I After 500 nodes, 56 on tree, 283.70407 best solution, best possible 269.62886 (7.83 seconds)
Cbc0010I After 600 nodes, 57 on tree, 283.70407 best solution, best possible 275.19945 (8.51 seconds)
Cbc0010I After 700 nodes, 60 on tree, 283.70407 best solution, best possible 277.70702 (9.07 seconds)
Cbc0010I After 800 nodes, 47 on tree, 283.70407 best solution, best possible 279.26155 (9.50 seconds)
Cbc0010I After 900 nodes, 24 on tree, 283.70407 best solution, best possible 281.40794 (9.92 seconds)
Cbc0010I After 1000 nodes, 5 on tree, 283.70407 best solution, best possible 283.5184 (10.35 seconds)
Cbc0001I Search completed - best objective 283.7040688732312, took 17125 iterations and 1028 nodes (10.44 seconds)
Cbc0035I Maximum depth 40, 119 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        321
Linearization cuts added in total:            321  (separation time: 0.000974s)
Total solve time:                         10.4487s (10.4487s in branch-and-bound)
Lower bound:                              283.704
Upper bound:                              283.704  (gap: 0.00%)
Branch-and-bound nodes:                      1028
Stats: /tmp/jl_5GgRiP/model.nl  230 [var]   10 [int]  240 [con]   49 [aux]    321 [root]      321 [tot] 0.000974 [sep]  10.4487 [time]  10.4487 [bb]         2.837041e+02 [lower]         2.837041e+02 [upper]    1028 [nodes]
Performance of                           FBBT:	   0.383689s,     1640 runs. fix:          0 shrnk:    1.09303 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.05592s,       14 runs. fix:          0 shrnk:     4.7303 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-10.txt
