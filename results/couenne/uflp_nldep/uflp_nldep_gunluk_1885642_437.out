solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-3.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 6.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 358.69224       66 161.85354
NLP0014I             2         OPT 360.64205       63 4.90986
Couenne: new cutoff value 3.6064270089e+02 (174.187 seconds)
Loaded instance "/tmp/jl_LqEUoO/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          449 (0 integer)

Coin0506I Presolve 5849 (-152) rows, 5249 (-350) columns and 26547 (-502) elements
Clp0006I 0  Obj 0 Primal inf 19056.546 (650) Dual inf 1.300976e+15 (5150)
Clp0006I 201  Obj 0 Primal inf 2036.6891 (230) Dual inf 4.3193699e+14 (992)
Clp0006I 469  Obj 1447.2864 Primal inf 355.59962 (79) Dual inf 7181365.6 (1976)
Clp0006I 663  Obj 1560.1702 Primal inf 312.98575 (65) Dual inf 132455.96 (333)
Clp0006I 854  Obj 1515.1554 Primal inf 282.75682 (42) Dual inf 19132452 (1148)
Clp0006I 1045  Obj 1436.6859 Primal inf 227.8173 (17) Dual inf 22877774 (1844)
Clp0006I 1238  Obj 1342.7977 Primal inf 211.3475 (17) Dual inf 19781166 (1968)
Clp0006I 1432  Obj 1230.3254 Primal inf 180.08944 (5) Dual inf 17282277 (988)
Clp0006I 1623  Obj 1026.5704 Primal inf 153.37148 (8) Dual inf 23393359 (1224)
Clp0006I 1815  Obj 743.1524 Primal inf 89.805232 (13) Dual inf 19989185 (1252)
Clp0006I 2008  Obj 573.32956 Primal inf 35.645053 (9) Dual inf 14326460 (1457)
Clp0006I 2201  Obj 521.75148 Primal inf 9.633416 (12) Dual inf 13401417 (1534)
Clp0006I 2395  Obj 455.12601 Primal inf 0.97697724 (4) Dual inf 49923.4 (160)
Clp0006I 2586  Obj 386.44495 Primal inf 0.23224146 (1) Dual inf 8661.1866 (97)
Clp0006I 2740  Obj 357.78209
Clp0000I Optimal - objective value 357.78209
Clp0032I Optimal objective 357.7820867 - 2740 iterations time 0.472, Presolve 0.02
Clp0000I Optimal - objective value 357.78209
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 357.78209
Optimality Based BT: 109 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 78 added rows had average density of 2
Cbc0013I At root node, 78 cuts changed objective from 357.78209 to 358.48351 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 139 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (27.24 seconds)
Optimality Based BT: 97 improved bounds
Optimality Based BT: 93 improved bounds
Optimality Based BT: 100 improved bounds
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 358.60996 (172.22 seconds)
Cbc0010I After 200 nodes, 87 on tree, 1e+50 best solution, best possible 358.60996 (181.77 seconds)
Cbc0010I After 300 nodes, 137 on tree, 1e+50 best solution, best possible 358.60996 (191.88 seconds)
Cbc0010I After 400 nodes, 187 on tree, 1e+50 best solution, best possible 358.60996 (202.30 seconds)
Cbc0010I After 500 nodes, 237 on tree, 1e+50 best solution, best possible 358.60996 (212.50 seconds)
Cbc0010I After 600 nodes, 287 on tree, 1e+50 best solution, best possible 358.60996 (222.54 seconds)
Cbc0010I After 700 nodes, 337 on tree, 1e+50 best solution, best possible 358.60996 (232.53 seconds)
Couenne: new cutoff value 3.5869317434e+02 (410.412 seconds)
Cbc0004I Integer solution of 358.69317 found after 5360 iterations and 729 nodes (235.46 seconds)
Cbc0010I After 800 nodes, 6 on tree, 358.69317 best solution, best possible 358.66242 (272.33 seconds)
Cbc0010I After 900 nodes, 8 on tree, 358.69317 best solution, best possible 358.67093 (280.30 seconds)
Cbc0010I After 1000 nodes, 3 on tree, 358.69317 best solution, best possible 358.68945 (287.58 seconds)
Cbc0010I After 1100 nodes, 1 on tree, 358.69317 best solution, best possible 358.68945 (294.86 seconds)
Cbc0001I Search completed - best objective 358.6931743356319, took 11354 iterations and 1121 nodes (296.52 seconds)
Cbc0035I Maximum depth 364, 8 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6001
Linearization cuts added in total:           6001  (separation time: 0.044048s)
Total solve time:                         297.013s (297.013s in branch-and-bound)
Lower bound:                              358.693
Upper bound:                              358.693  (gap: 0.00%)
Branch-and-bound nodes:                      1121
Stats: /tmp/jl_LqEUoO/model.nl 5150 [var]   50 [int] 5200 [con]  449 [aux]   6001 [root]     6001 [tot] 0.044048 [sep]  297.013 [time]  297.023 [bb]         3.586932e+02 [lower]         3.586932e+02 [upper]    1121 [nodes]
Performance of                           FBBT:	    10.2647s,     1042 runs. fix:          0 shrnk:    61.6713 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    22.0947s,        4 runs. fix:       1.25 shrnk:    296.106 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-3.txt
f0 = 0.04940549718847917
f0 = 0.010586892254674109
f0 = 0.06969704067660455
f0 = 0.008822410212228423
f0 = 0.00352896408489137
f0 = 0.08381289701617003
f0 = 0.03528964084891369
f0 = 0.06528583557049034
f0 = 0.020291543488125376
f0 = 0.07940169191005582
f0 = 0.08028393293127865
f0 = 0.08293065599494719
f0 = 0.05028773820970202
f0 = 0.03352515880646801
f0 = 0.05999238944315328
f0 = 0.07675496884638729
f0 = 0.03881860493380507
f0 = 0.03881860493380507
f0 = 0.00705792816978274
f0 = 0.07322600476149592
f0 = 0.05999238944315328
f0 = 0.053816702294593385
f0 = 0.00352896408489137
f0 = 0.04940549718847917
f0 = 0.08822410212228424
f0 = 0.03970084595502791
f0 = 0.00352896408489137
f0 = 0.052052220252147695
f0 = 0.07763720986761014
f0 = 0.0229382665517939
f0 = 0.06087463046437613
f0 = 0.03793636391258222
f0 = 0.00705792816978274
f0 = 0.07410824578271875
f0 = 0.013233615318342636
f0 = 0.06705031761293602
f0 = 0.08822410212228424
f0 = 0.027349471657908114
f0 = 0.046758774124810644
f0 = 0.046758774124810644
f0 = 0.006175687148559896
f0 = 0.03176067676402232
f0 = 0.07587272782516444
f0 = 0.020291543488125376
f0 = 0.04499429208236496
f0 = 0.07322600476149592
f0 = 0.01146913327589695
f0 = 0.06175687148559897
f0 = 0.001764482042445685
f0 = 0.03528964084891369
