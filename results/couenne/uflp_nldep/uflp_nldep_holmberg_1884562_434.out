solving instance uflp nldep holmberg 44 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.3380999997e+04 (0.238877 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3257.0108       24 0.28876
Couenne: new cutoff value 3.2570104306e+03 (0.532351 seconds)
Loaded instance "/tmp/jl_po7XWk/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1111 (-20) rows, 951 (-118) columns and 4751 (-138) elements
Clp0006I 0  Obj 0 Primal inf 726.8397 (110)
Clp0006I 97  Obj 2303 Primal inf 140.1716 (93)
Clp0006I 138  Obj 3035.2952
Clp0000I Optimal - objective value 3035.2952
Clp0032I Optimal objective 3035.295188 - 138 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 3035.2952
NLP Heuristic: NLP0014I             2         OPT 3257.0108       13 0.144449
no solution.
Clp0000I Optimal - objective value 3035.2952
Optimality Based BT: 19 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 3035.2952 to 3240.8859 in 14 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 70 row cuts average 2.0 elements, 15 column cuts (15 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.69 seconds)
Optimality Based BT: 19 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 6 improved bounds
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 3257.0014 (8.03 seconds)
Cbc0010I After 200 nodes, 59 on tree, 1e+50 best solution, best possible 3257.0023 (9.28 seconds)
Cbc0010I After 300 nodes, 82 on tree, 1e+50 best solution, best possible 3257.0032 (10.54 seconds)
Optimality Based BT: 17 improved bounds
Optimality Based BT: 12 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 8 improved bounds
Cbc0010I After 400 nodes, 103 on tree, 1e+50 best solution, best possible 3257.0041 (15.75 seconds)
Cbc0010I After 500 nodes, 117 on tree, 1e+50 best solution, best possible 3257.0046 (16.96 seconds)
Cbc0010I After 600 nodes, 134 on tree, 1e+50 best solution, best possible 3257.0054 (18.16 seconds)
Optimality Based BT: 13 improved bounds
Cbc0010I After 700 nodes, 144 on tree, 1e+50 best solution, best possible 3257.0058 (19.62 seconds)
Cbc0010I After 800 nodes, 150 on tree, 1e+50 best solution, best possible 3257.0061 (20.78 seconds)
Cbc0010I After 900 nodes, 160 on tree, 1e+50 best solution, best possible 3257.0067 (23.05 seconds)
Cbc0010I After 1000 nodes, 167 on tree, 1e+50 best solution, best possible 3257.007 (24.26 seconds)
Cbc0010I After 1100 nodes, 173 on tree, 1e+50 best solution, best possible 3257.0073 (25.42 seconds)
Cbc0010I After 1200 nodes, 172 on tree, 1e+50 best solution, best possible 3257.0078 (26.58 seconds)
Cbc0010I After 1300 nodes, 170 on tree, 1e+50 best solution, best possible 3257.0082 (27.74 seconds)
Cbc0010I After 1400 nodes, 163 on tree, 1e+50 best solution, best possible 3257.0087 (28.86 seconds)
Cbc0010I After 1500 nodes, 154 on tree, 1e+50 best solution, best possible 3257.0089 (29.95 seconds)
Cbc0010I After 1600 nodes, 131 on tree, 1e+50 best solution, best possible 3257.0093 (31.03 seconds)
Cbc0010I After 1700 nodes, 115 on tree, 1e+50 best solution, best possible 3257.0097 (32.10 seconds)
Cbc0010I After 1800 nodes, 77 on tree, 1e+50 best solution, best possible 3257.0103 (33.03 seconds)
Cbc0010I After 1900 nodes, 27 on tree, 1e+50 best solution, best possible 3257.0131 (33.72 seconds)
Cbc0001I Search completed - best objective 1e+50, took 7119 iterations and 1954 nodes (34.11 seconds)
Cbc0035I Maximum depth 36, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1131
Linearization cuts added in total:           1131  (separation time: 0.005907s)
Total solve time:                         34.1321s (34.1321s in branch-and-bound)
Lower bound:                              3257.01
Upper bound:                              3257.01  (gap: 0.00%)
Branch-and-bound nodes:                      1954
Stats: /tmp/jl_po7XWk/model.nl  930 [var]   10 [int] 1010 [con]  139 [aux]   1131 [root]     1131 [tot] 0.005907 [sep]  34.1321 [time]  34.1337 [bb]         3.257010e+03 [lower]         3.257010e+03 [upper]    1954 [nodes]
Performance of                           FBBT:	    1.56068s,     1069 runs. fix:          0 shrnk:     2.2855 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.21536s,       10 runs. fix:          0 shrnk:    73.5648 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p44
