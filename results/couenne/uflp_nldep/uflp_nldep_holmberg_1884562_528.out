solving instance uflp nldep holmberg 53 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 6195.8337      246 272.54003
NLP0014I             1      FAILED 6195.8337      246 273.02689   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_4FRhU6/model.nl"
Constraints:         2140
Variables:           2060 (20 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 2240 (-41) rows, 2060 (-159) columns and 8260 (-2219) elements
Clp0006I 0  Obj 7.902e-05 Primal inf 158.67854 (100)
Clp0006I 119  Obj 4548.9821 Primal inf 85.734211 (55)
Clp0006I 170  Obj 5315.9015
Clp0000I Optimal - objective value 5315.9015
Clp0032I Optimal objective 5315.901467 - 170 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 5315.9015
NLP Heuristic: NLP0014I             3      FAILED 6195.4579      185 176.67811
no solution.
Clp0000I Optimal - objective value 5315.9015
Optimality Based BT: Couenne: new cutoff value 2.1979000075e+04 (723.791 seconds)
0 improved bounds
Probing: Couenne: new cutoff value 6.3605934147e+03 (724.038 seconds)
0 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 5315.9015 to 5315.9015 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (451.27 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 5732.5876 (2054.83 seconds)
Cbc0010I After 200 nodes, 65 on tree, 1e+50 best solution, best possible 5732.5876 (2058.32 seconds)
Cbc0010I After 300 nodes, 115 on tree, 1e+50 best solution, best possible 5732.5876 (2060.51 seconds)
Cbc0010I After 400 nodes, 160 on tree, 1e+50 best solution, best possible 5732.5876 (2063.04 seconds)
Cbc0010I After 500 nodes, 210 on tree, 1e+50 best solution, best possible 5732.5876 (2065.41 seconds)
Cbc0010I After 600 nodes, 259 on tree, 1e+50 best solution, best possible 5732.5876 (2068.03 seconds)
Cbc0010I After 700 nodes, 308 on tree, 1e+50 best solution, best possible 5732.5876 (2071.28 seconds)
Cbc0010I After 800 nodes, 332 on tree, 1e+50 best solution, best possible 5732.5876 (2073.83 seconds)
Couenne: new cutoff value 6.1643020747e+03 (2621.72 seconds)
Cbc0010I After 900 nodes, 343 on tree, 1e+50 best solution, best possible 5734.412 (2077.66 seconds)
Cbc0010I After 1000 nodes, 359 on tree, 1e+50 best solution, best possible 5785.1864 (2081.71 seconds)
Cbc0010I After 1100 nodes, 379 on tree, 1e+50 best solution, best possible 5792.4176 (2085.99 seconds)
Cbc0010I After 1200 nodes, 392 on tree, 1e+50 best solution, best possible 5842.4432 (2090.04 seconds)
Cbc0010I After 1300 nodes, 407 on tree, 1e+50 best solution, best possible 5849.6871 (2094.48 seconds)
Cbc0010I After 1400 nodes, 423 on tree, 1e+50 best solution, best possible 5863.1914 (2098.80 seconds)
Cbc0010I After 1500 nodes, 440 on tree, 1e+50 best solution, best possible 5870.4219 (2103.26 seconds)
Cbc0010I After 1600 nodes, 459 on tree, 1e+50 best solution, best possible 5881.2209 (2107.64 seconds)
Cbc0010I After 1700 nodes, 474 on tree, 1e+50 best solution, best possible 5896.9084 (2112.02 seconds)
Cbc0010I After 1800 nodes, 487 on tree, 1e+50 best solution, best possible 5902.7504 (2116.49 seconds)
Cbc0010I After 1900 nodes, 506 on tree, 1e+50 best solution, best possible 5904.6386 (2120.56 seconds)
Cbc0010I After 2000 nodes, 550 on tree, 1e+50 best solution, best possible 5904.6386 (2124.93 seconds)
Cbc0010I After 2100 nodes, 599 on tree, 1e+50 best solution, best possible 5904.6386 (2127.84 seconds)
Cbc0010I After 2200 nodes, 633 on tree, 1e+50 best solution, best possible 5904.6386 (2130.99 seconds)
Cbc0010I After 2300 nodes, 667 on tree, 1e+50 best solution, best possible 5904.6386 (2133.82 seconds)
Cbc0010I After 2400 nodes, 699 on tree, 1e+50 best solution, best possible 5904.6386 (2136.64 seconds)
Cbc0010I After 2500 nodes, 725 on tree, 1e+50 best solution, best possible 5904.6386 (2139.84 seconds)
Cbc0010I After 2600 nodes, 730 on tree, 1e+50 best solution, best possible 5904.6716 (2143.05 seconds)
Cbc0010I After 2700 nodes, 746 on tree, 1e+50 best solution, best possible 5910.0714 (2147.66 seconds)
Cbc0010I After 2800 nodes, 760 on tree, 1e+50 best solution, best possible 5912.9407 (2151.66 seconds)
Cbc0010I After 2900 nodes, 777 on tree, 1e+50 best solution, best possible 5919.2739 (2612.73 seconds)
Cbc0010I After 3000 nodes, 796 on tree, 1e+50 best solution, best possible 5922.6427 (2617.55 seconds)
Cbc0010I After 3100 nodes, 806 on tree, 1e+50 best solution, best possible 5926.5216 (2621.86 seconds)
Cbc0010I After 3200 nodes, 821 on tree, 1e+50 best solution, best possible 5929.9449 (2626.20 seconds)
Cbc0010I After 3300 nodes, 832 on tree, 1e+50 best solution, best possible 5933.7517 (2630.71 seconds)
Cbc0010I After 3400 nodes, 845 on tree, 1e+50 best solution, best possible 5940.0659 (2635.00 seconds)
Cbc0010I After 3500 nodes, 859 on tree, 1e+50 best solution, best possible 5945.8832 (2639.50 seconds)
Cbc0010I After 3600 nodes, 870 on tree, 1e+50 best solution, best possible 5956.8211 (2643.92 seconds)
Cbc0010I After 3700 nodes, 887 on tree, 1e+50 best solution, best possible 5964.0819 (2648.13 seconds)
Cbc0010I After 3800 nodes, 896 on tree, 1e+50 best solution, best possible 5965.2645 (2652.37 seconds)
Cbc0010I After 3900 nodes, 906 on tree, 1e+50 best solution, best possible 5967.1045 (2656.78 seconds)
Cbc0010I After 4000 nodes, 919 on tree, 1e+50 best solution, best possible 5971.5511 (2661.35 seconds)
Cbc0010I After 4100 nodes, 931 on tree, 1e+50 best solution, best possible 5974.4414 (2665.76 seconds)
Cbc0010I After 4200 nodes, 942 on tree, 1e+50 best solution, best possible 5977.4342 (2670.23 seconds)
Cbc0010I After 4300 nodes, 954 on tree, 1e+50 best solution, best possible 5978.0817 (2674.62 seconds)
Cbc0010I After 4400 nodes, 969 on tree, 1e+50 best solution, best possible 5982.5866 (2679.08 seconds)
Cbc0010I After 4500 nodes, 980 on tree, 1e+50 best solution, best possible 5984.7222 (2683.58 seconds)
Cbc0010I After 4600 nodes, 987 on tree, 1e+50 best solution, best possible 5985.4932 (2687.80 seconds)
Cbc0010I After 4700 nodes, 997 on tree, 1e+50 best solution, best possible 5987.617 (2692.05 seconds)
Cbc0010I After 4800 nodes, 1009 on tree, 1e+50 best solution, best possible 5989.583 (2696.41 seconds)
Cbc0010I After 4900 nodes, 1018 on tree, 1e+50 best solution, best possible 5991.6376 (2700.86 seconds)
Cbc0010I After 5000 nodes, 1028 on tree, 1e+50 best solution, best possible 5994.8856 (2705.26 seconds)
Cbc0010I After 5100 nodes, 1037 on tree, 1e+50 best solution, best possible 5995.5362 (2709.57 seconds)
Cbc0010I After 5200 nodes, 1045 on tree, 1e+50 best solution, best possible 5998.0801 (2713.85 seconds)
Cbc0010I After 5300 nodes, 1054 on tree, 1e+50 best solution, best possible 5998.9194 (2718.21 seconds)
Cbc0010I After 5400 nodes, 1064 on tree, 1e+50 best solution, best possible 5999.7848 (2722.56 seconds)
Cbc0010I After 5500 nodes, 1075 on tree, 1e+50 best solution, best possible 6000.9198 (2727.08 seconds)
Cbc0010I After 5600 nodes, 1083 on tree, 1e+50 best solution, best possible 6001.8168 (2731.26 seconds)
Cbc0010I After 5700 nodes, 1093 on tree, 1e+50 best solution, best possible 6005.6158 (2735.66 seconds)
Cbc0010I After 5800 nodes, 1102 on tree, 1e+50 best solution, best possible 6007.3313 (2740.00 seconds)
Cbc0010I After 5900 nodes, 1111 on tree, 1e+50 best solution, best possible 6008.3534 (2744.34 seconds)
Cbc0010I After 6000 nodes, 1122 on tree, 1e+50 best solution, best possible 6009.9377 (2748.85 seconds)
Cbc0010I After 6100 nodes, 1130 on tree, 1e+50 best solution, best possible 6012.1265 (2753.17 seconds)
Cbc0010I After 6200 nodes, 1137 on tree, 1e+50 best solution, best possible 6015.8083 (2757.42 seconds)
Cbc0010I After 6300 nodes, 1149 on tree, 1e+50 best solution, best possible 6019.0919 (2761.82 seconds)
Cbc0010I After 6400 nodes, 1156 on tree, 1e+50 best solution, best possible 6019.8886 (2766.18 seconds)
Cbc0010I After 6500 nodes, 1161 on tree, 1e+50 best solution, best possible 6022.3341 (2770.36 seconds)
Cbc0010I After 6600 nodes, 1168 on tree, 1e+50 best solution, best possible 6023.3843 (2774.71 seconds)
Cbc0010I After 6700 nodes, 1192 on tree, 1e+50 best solution, best possible 6024.933 (2779.13 seconds)
Cbc0010I After 6800 nodes, 1234 on tree, 1e+50 best solution, best possible 6024.933 (2782.57 seconds)
Cbc0010I After 6900 nodes, 1272 on tree, 1e+50 best solution, best possible 6024.933 (2785.74 seconds)
Cbc0010I After 7000 nodes, 1297 on tree, 1e+50 best solution, best possible 6024.933 (2788.49 seconds)
Cbc0010I After 7100 nodes, 1320 on tree, 1e+50 best solution, best possible 6024.933 (2791.07 seconds)
Cbc0010I After 7200 nodes, 1337 on tree, 1e+50 best solution, best possible 6026.1801 (2794.51 seconds)
Cbc0010I After 7300 nodes, 1339 on tree, 1e+50 best solution, best possible 6028.3685 (2798.76 seconds)
Cbc0010I After 7400 nodes, 1347 on tree, 1e+50 best solution, best possible 6029.3559 (2803.08 seconds)
Cbc0010I After 7500 nodes, 1373 on tree, 1e+50 best solution, best possible 6029.4217 (2807.60 seconds)
Cbc0010I After 7600 nodes, 1423 on tree, 1e+50 best solution, best possible 6029.4217 (2810.69 seconds)
Cbc0010I After 7700 nodes, 1462 on tree, 1e+50 best solution, best possible 6029.4217 (2813.86 seconds)
Cbc0010I After 7800 nodes, 1489 on tree, 1e+50 best solution, best possible 6029.4217 (2816.58 seconds)
Cbc0010I After 7900 nodes, 1519 on tree, 1e+50 best solution, best possible 6029.4217 (2819.35 seconds)
Cbc0010I After 8000 nodes, 1541 on tree, 1e+50 best solution, best possible 6029.4217 (2821.89 seconds)
Cbc0010I After 8100 nodes, 1550 on tree, 1e+50 best solution, best possible 6029.6489 (2825.61 seconds)
Cbc0010I After 8200 nodes, 1585 on tree, 1e+50 best solution, best possible 6029.6489 (2829.74 seconds)
Cbc0010I After 8300 nodes, 1635 on tree, 1e+50 best solution, best possible 6029.6489 (2832.79 seconds)
Cbc0010I After 8400 nodes, 1667 on tree, 1e+50 best solution, best possible 6029.6489 (2835.63 seconds)
Cbc0010I After 8500 nodes, 1692 on tree, 1e+50 best solution, best possible 6029.6489 (2838.15 seconds)
Cbc0010I After 8600 nodes, 1722 on tree, 1e+50 best solution, best possible 6029.6489 (2840.86 seconds)
Cbc0010I After 8700 nodes, 1738 on tree, 1e+50 best solution, best possible 6029.6489 (2843.74 seconds)
Cbc0010I After 8800 nodes, 1747 on tree, 1e+50 best solution, best possible 6031.4841 (2848.15 seconds)
Cbc0010I After 8900 nodes, 1755 on tree, 1e+50 best solution, best possible 6032.937 (2852.51 seconds)
Cbc0010I After 9000 nodes, 1762 on tree, 1e+50 best solution, best possible 6033.5974 (2856.97 seconds)
Cbc0010I After 9100 nodes, 1768 on tree, 1e+50 best solution, best possible 6037.8924 (2861.35 seconds)
Cbc0010I After 9200 nodes, 1775 on tree, 1e+50 best solution, best possible 6039.2974 (2865.60 seconds)
Cbc0010I After 9300 nodes, 1800 on tree, 1e+50 best solution, best possible 6039.4471 (2869.95 seconds)
Cbc0010I After 9400 nodes, 1847 on tree, 1e+50 best solution, best possible 6039.4471 (2873.56 seconds)
Cbc0010I After 9500 nodes, 1887 on tree, 1e+50 best solution, best possible 6039.4471 (2876.77 seconds)
Cbc0010I After 9600 nodes, 1924 on tree, 1e+50 best solution, best possible 6039.4471 (2879.85 seconds)
Cbc0010I After 9700 nodes, 1953 on tree, 1e+50 best solution, best possible 6039.4471 (2882.48 seconds)
Cbc0010I After 9800 nodes, 1982 on tree, 1e+50 best solution, best possible 6039.4471 (2885.06 seconds)
Cbc0010I After 9900 nodes, 1994 on tree, 1e+50 best solution, best possible 6039.4471 (2887.97 seconds)
Couenne: new cutoff value 6.1636491760e+03 (3436.42 seconds)
Couenne: new cutoff value 6.1636381022e+03 (3436.48 seconds)
Cbc0010I After 10000 nodes, 2000 on tree, 1e+50 best solution, best possible 6041.0471 (2892.30 seconds)
Cbc0010I After 10100 nodes, 2000 on tree, 1e+50 best solution, best possible 6043.8773 (2896.51 seconds)
Cbc0010I After 10200 nodes, 2005 on tree, 1e+50 best solution, best possible 6045.7454 (2900.82 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 6045.7454), took 116034 iterations and 10205 nodes (3057.74 seconds)
Cbc0035I Maximum depth 418, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2281
Linearization cuts added in total:           2281  (separation time: 0.013612s)
Total solve time:                         3057.76s (3057.76s in branch-and-bound)
Lower bound:                              6045.75
Upper bound:                              6163.64  (gap: 1.95%)
Branch-and-bound nodes:                     10205
Stats: /tmp/jl_4FRhU6/model.nl 2060 [var]   20 [int] 2140 [con]  159 [aux]   2281 [root]     2281 [tot] 0.013612 [sep]  3057.76 [time]  3057.76 [bb]         6.045745e+03 [lower]         6.163638e+03 [upper]   10205 [nodes]
Performance of                           FBBT:	    41.9949s,    12358 runs. fix:          0 shrnk: 0.00178776 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.10988s,        3 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p53
