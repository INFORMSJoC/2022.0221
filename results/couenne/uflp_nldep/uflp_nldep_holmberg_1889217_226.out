solving instance uflp nldep holmberg 23 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3720.632       41 12.634317
Couenne: new cutoff value 3.7206336642e+03 (12.9409 seconds)
Loaded instance "/tmp/jl_S7ChxY/model.nl"
Constraints:         1090
Variables:           1060 (20 integer)
Auxiliaries:          209 (0 integer)

Coin0506I Presolve 1251 (-80) rows, 1101 (-168) columns and 5441 (-248) elements
Clp0006I 0  Obj -863.55564 Primal inf 2763.1527 (110)
Clp0006I 100  Obj -34.940471 Primal inf 200.4953 (53)
Clp0006I 179  Obj 3010.0552
Clp0000I Optimal - objective value 3010.0552
Clp0032I Optimal objective 3010.055197 - 179 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 3010.0552
NLP Heuristic: NLP0014I             2         OPT 3720.6321       11 0.170801
no solution.
Clp0000I Optimal - objective value 3010.0552
Optimality Based BT: 54 improved bounds
Probing: 13 improved bounds
NLP Heuristic: no solution.
Cbc0031I 24 added rows had average density of 2
Cbc0013I At root node, 24 cuts changed objective from 3010.0552 to 3674.8263 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 133 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.87 seconds)
Optimality Based BT: 86 improved bounds
Optimality Based BT: 74 improved bounds
Optimality Based BT: 73 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 415 iterations and 18 nodes (13.46 seconds)
Cbc0035I Maximum depth 8, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1331
Linearization cuts added in total:           1331  (separation time: 0.008413s)
Total solve time:                         13.4752s (13.4752s in branch-and-bound)
Lower bound:                              3720.63
Upper bound:                              3720.63  (gap: 0.00%)
Branch-and-bound nodes:                        18
Stats: /tmp/jl_S7ChxY/model.nl 1060 [var]   20 [int] 1090 [con]  209 [aux]   1331 [root]     1331 [tot] 0.008413 [sep]  13.4752 [time]  13.4775 [bb]         3.720634e+03 [lower]         3.720634e+03 [upper]      18 [nodes]
Performance of                           FBBT:	   0.094757s,       40 runs. fix:          0 shrnk:     24.903 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.18112s,        4 runs. fix:          4 shrnk:    329.312 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p23
