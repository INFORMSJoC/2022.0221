solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-7.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 346.25271       66 60.334114
NLP0014I             2         OPT 347.70717       57 2.641862
Couenne: new cutoff value 3.4770800915e+02 (66.3711 seconds)
Loaded instance "/tmp/jl_1C86sr/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14950.113 (520)
Clp0006I 152  Obj 3.3905509e-14 Primal inf 19438.48 (247)
Clp0006I 304  Obj 116.47279 Primal inf 19619.682 (146)
Clp0006I 456  Obj 343.78637 Primal inf 3547.5174 (90)
Clp0006I 538  Obj 345.20895
Clp0000I Optimal - objective value 345.20895
Clp0032I Optimal objective 345.2089505 - 538 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 345.20895
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 345.20895
Optimality Based BT: 65 improved bounds
Probing: Couenne: new cutoff value 3.4770797530e+02 (69.9729 seconds)
2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 57 added rows had average density of 2
Cbc0013I At root node, 57 cuts changed objective from 345.20895 to 345.85652 in 6 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 112 row cuts average 2.0 elements, 7 column cuts (7 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (15.03 seconds)
Optimality Based BT: 32 improved bounds
Optimality Based BT: 31 improved bounds
Optimality Based BT: 32 improved bounds
Cbc0010I After 100 nodes, 42 on tree, 1e+50 best solution, best possible 346.09498 (107.87 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 346.09498 (113.96 seconds)
Cbc0010I After 300 nodes, 142 on tree, 1e+50 best solution, best possible 346.09498 (119.61 seconds)
Cbc0010I After 400 nodes, 192 on tree, 1e+50 best solution, best possible 346.09498 (125.36 seconds)
Cbc0010I After 500 nodes, 242 on tree, 1e+50 best solution, best possible 346.09498 (131.04 seconds)
Couenne: new cutoff value 3.4625354557e+02 (200.927 seconds)
Couenne: new cutoff value 3.4625334036e+02 (201.042 seconds)
Cbc0004I Integer solution of 346.25334 found after 3975 iterations and 560 nodes (134.48 seconds)
Cbc0001I Search completed - best objective 346.2533403559102, took 4489 iterations and 578 nodes (137.51 seconds)
Cbc0035I Maximum depth 279, 18 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.026927s)
Total solve time:                         137.583s (137.583s in branch-and-bound)
Lower bound:                              346.253
Upper bound:                              346.253  (gap: 0.00%)
Branch-and-bound nodes:                       578
Stats: /tmp/jl_1C86sr/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.026927 [sep]  137.583 [time]  137.589 [bb]         3.462533e+02 [lower]         3.462533e+02 [upper]     578 [nodes]
Performance of                           FBBT:	    3.78515s,      692 runs. fix: 0.00327524 shrnk:     52.831 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     13.228s,        4 runs. fix:       0.75 shrnk:    125.765 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-7.txt
f0 = 0.03970084595502791
f0 = 0.0458765331035878
f0 = 0.06616807659171318
f0 = 0.019409302466902534
f0 = 0.042347569018696435
f0 = 0.06969704067660455
f0 = 0.01411585633956548
f0 = 0.023820507573016746
f0 = 0.004411205106114212
f0 = 0.07234376374027307
f0 = 0.009704651233451267
f0 = 0.046758774124810644
f0 = 0.05028773820970202
f0 = 0.027349471657908114
f0 = 0.07322600476149592
f0 = 0.03793636391258222
f0 = 0.06352135352804464
f0 = 0.017644820424456847
f0 = 0.06263911250682182
f0 = 0.07410824578271875
f0 = 0.06793255863415887
f0 = 0.024702748594239585
f0 = 0.06263911250682182
f0 = 0.02999619472157664
f0 = 0.0229382665517939
f0 = 0.0582279074007076
f0 = 0.042347569018696435
f0 = 0.04764101514603349
f0 = 0.04764101514603349
f0 = 0.030878435742799484
f0 = 0.07675496884638729
f0 = 0.0749904868039416
f0 = 0.07940169191005582
f0 = 0.06969704067660455
f0 = 0.07587272782516444
f0 = 0.08028393293127865
f0 = 0.010586892254674109
f0 = 0.012351374297119792
f0 = 0.06969704067660455
f0 = 0.0811661739525015
