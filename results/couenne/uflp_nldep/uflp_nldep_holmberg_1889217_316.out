solving instance uflp nldep holmberg 32 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8637.7403       68 686.02335
NLP0014I             2         OPT 8657.2909       71 4.105149
Couenne: new cutoff value 8.6572862390e+03 (696.744 seconds)
Loaded instance "/tmp/jl_Ai7jQb/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          389 (0 integer)

Coin0506I Presolve 4979 (-92) rows, 4679 (-300) columns and 23217 (-392) elements
Clp0006I 0  Obj -1813.4669 Primal inf 3680.2917 (240)
Clp0006I 174  Obj 2735.0307 Primal inf 478.05748 (174)
Clp0006I 348  Obj 7507.1833 Primal inf 159.11939 (120)
Clp0006I 430  Obj 7643.5244
Clp0000I Optimal - objective value 7643.5244
Clp0032I Optimal objective 7643.524415 - 430 iterations time 0.052, Presolve 0.02
Clp0000I Optimal - objective value 7643.5244
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 7643.5244
Optimality Based BT: 35 improved bounds
Probing: 28 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 2 added rows had average density of 2
Cbc0013I At root node, 2 cuts changed objective from 7643.5244 to 7734.1219 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (37.04 seconds)
Optimality Based BT: 25 improved bounds
Optimality Based BT: 25 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 40 improved bounds
Cbc0010I After 100 nodes, 18 on tree, 1e+50 best solution, best possible 7807.0013 (238.22 seconds)
Cbc0010I After 200 nodes, 60 on tree, 1e+50 best solution, best possible 7807.0013 (251.48 seconds)
Cbc0010I After 300 nodes, 109 on tree, 1e+50 best solution, best possible 7807.0013 (264.58 seconds)
Cbc0010I After 400 nodes, 159 on tree, 1e+50 best solution, best possible 7807.0013 (276.16 seconds)
Couenne: new cutoff value 8.6432428220e+03 (981.765 seconds)
Cbc0004I Integer solution of 8643.2429 found after 4928 iterations and 475 nodes (284.76 seconds)
Optimality Based BT: 33 improved bounds
Optimality Based BT: 30 improved bounds
Optimality Based BT: 36 improved bounds
Cbc0010I After 500 nodes, 136 on tree, 8643.2429 best solution, best possible 7820.4233 (477.83 seconds)
Cbc0010I After 600 nodes, 159 on tree, 8643.2429 best solution, best possible 7820.4233 (488.61 seconds)
Cbc0010I After 700 nodes, 175 on tree, 8643.2429 best solution, best possible 7826.4228 (575.45 seconds)
Cbc0010I After 800 nodes, 198 on tree, 8643.2429 best solution, best possible 7827.0163 (588.09 seconds)
Cbc0010I After 900 nodes, 222 on tree, 8643.2429 best solution, best possible 7827.0163 (600.50 seconds)
Cbc0010I After 1000 nodes, 236 on tree, 8643.2429 best solution, best possible 7827.261 (613.27 seconds)
Cbc0010I After 1100 nodes, 258 on tree, 8643.2429 best solution, best possible 7831.1607 (628.40 seconds)
Cbc0010I After 1200 nodes, 283 on tree, 8643.2429 best solution, best possible 7831.1607 (641.51 seconds)
Optimality Based BT: 25 improved bounds
Cbc0010I After 1300 nodes, 301 on tree, 8643.2429 best solution, best possible 7836.8873 (691.97 seconds)
Cbc0010I After 1400 nodes, 322 on tree, 8643.2429 best solution, best possible 7861.4723 (704.71 seconds)
Cbc0010I After 1500 nodes, 345 on tree, 8643.2429 best solution, best possible 7861.4723 (717.09 seconds)
Optimality Based BT: 33 improved bounds
Cbc0010I After 1600 nodes, 364 on tree, 8643.2429 best solution, best possible 7876.7897 (731.18 seconds)
Cbc0010I After 1700 nodes, 379 on tree, 8643.2429 best solution, best possible 7878.7829 (742.68 seconds)
Cbc0010I After 1800 nodes, 415 on tree, 8643.2429 best solution, best possible 7878.7829 (755.27 seconds)
Optimality Based BT: 24 improved bounds
Cbc0010I After 1900 nodes, 438 on tree, 8643.2429 best solution, best possible 7879.2706 (909.78 seconds)
Cbc0010I After 2000 nodes, 461 on tree, 8643.2429 best solution, best possible 7919.7347 (922.37 seconds)
Cbc0010I After 2100 nodes, 481 on tree, 8643.2429 best solution, best possible 7930.5249 (934.80 seconds)
Cbc0010I After 2200 nodes, 507 on tree, 8643.2429 best solution, best possible 7930.5249 (946.35 seconds)
Cbc0010I After 2300 nodes, 530 on tree, 8643.2429 best solution, best possible 7931.9757 (960.56 seconds)
Cbc0010I After 2400 nodes, 566 on tree, 8643.2429 best solution, best possible 7931.9757 (974.03 seconds)
Cbc0010I After 2500 nodes, 584 on tree, 8643.2429 best solution, best possible 7976.1616 (986.99 seconds)
Cbc0010I After 2600 nodes, 616 on tree, 8643.2429 best solution, best possible 8020.4329 (1002.89 seconds)
Cbc0010I After 2700 nodes, 639 on tree, 8643.2429 best solution, best possible 8020.4329 (1015.78 seconds)
Cbc0010I After 2800 nodes, 671 on tree, 8643.2429 best solution, best possible 8020.9075 (1029.42 seconds)
Cbc0010I After 2900 nodes, 694 on tree, 8643.2429 best solution, best possible 8020.9075 (1042.13 seconds)
Cbc0010I After 3000 nodes, 715 on tree, 8643.2429 best solution, best possible 8032.6974 (1059.90 seconds)
Cbc0010I After 3100 nodes, 748 on tree, 8643.2429 best solution, best possible 8032.6974 (1072.59 seconds)
Cbc0010I After 3200 nodes, 766 on tree, 8643.2429 best solution, best possible 8062.4025 (1086.06 seconds)
Cbc0010I After 3300 nodes, 787 on tree, 8643.2429 best solution, best possible 8064.6441 (1099.54 seconds)
Cbc0010I After 3400 nodes, 802 on tree, 8643.2429 best solution, best possible 8121.4535 (1112.15 seconds)
Cbc0010I After 3500 nodes, 820 on tree, 8643.2429 best solution, best possible 8127.3891 (1124.86 seconds)
Cbc0010I After 3600 nodes, 846 on tree, 8643.2429 best solution, best possible 8141.8832 (1137.71 seconds)
Cbc0010I After 3700 nodes, 868 on tree, 8643.2429 best solution, best possible 8147.9438 (1150.56 seconds)
Cbc0010I After 3800 nodes, 887 on tree, 8643.2429 best solution, best possible 8150.1857 (1163.04 seconds)
Cbc0010I After 3900 nodes, 904 on tree, 8643.2429 best solution, best possible 8159.5795 (1175.44 seconds)
Cbc0010I After 4000 nodes, 923 on tree, 8643.2429 best solution, best possible 8161.8255 (1188.79 seconds)
Cbc0010I After 4100 nodes, 940 on tree, 8643.2429 best solution, best possible 8186.8478 (1202.29 seconds)
Cbc0010I After 4200 nodes, 949 on tree, 8643.2429 best solution, best possible 8194.4174 (1214.84 seconds)
Cbc0010I After 4300 nodes, 977 on tree, 8643.2429 best solution, best possible 8206.6181 (1227.62 seconds)
Cbc0010I After 4400 nodes, 1004 on tree, 8643.2429 best solution, best possible 8206.6181 (1239.90 seconds)
Cbc0010I After 4500 nodes, 1028 on tree, 8643.2429 best solution, best possible 8206.6847 (1253.84 seconds)
Cbc0010I After 4600 nodes, 1051 on tree, 8643.2429 best solution, best possible 8207.9228 (1266.80 seconds)
Cbc0010I After 4700 nodes, 1073 on tree, 8643.2429 best solution, best possible 8224.4492 (1280.37 seconds)
Cbc0010I After 4800 nodes, 1097 on tree, 8643.2429 best solution, best possible 8225.7937 (1293.69 seconds)
Cbc0010I After 4900 nodes, 1120 on tree, 8643.2429 best solution, best possible 8226.2919 (1307.16 seconds)
Cbc0010I After 5000 nodes, 1140 on tree, 8643.2429 best solution, best possible 8226.7858 (1320.33 seconds)
Cbc0010I After 5100 nodes, 1168 on tree, 8643.2429 best solution, best possible 8234.9767 (1334.58 seconds)
Cbc0010I After 5200 nodes, 1191 on tree, 8643.2429 best solution, best possible 8252.3043 (1347.81 seconds)
Cbc0010I After 5300 nodes, 1219 on tree, 8643.2429 best solution, best possible 8256.0188 (1361.32 seconds)
Cbc0010I After 5400 nodes, 1238 on tree, 8643.2429 best solution, best possible 8281.2242 (1374.70 seconds)
Cbc0010I After 5500 nodes, 1265 on tree, 8643.2429 best solution, best possible 8283.9666 (1387.82 seconds)
Cbc0010I After 5600 nodes, 1283 on tree, 8643.2429 best solution, best possible 8333.9187 (1401.27 seconds)
Cbc0010I After 5700 nodes, 1300 on tree, 8643.2429 best solution, best possible 8347.4546 (1413.50 seconds)
Cbc0010I After 5800 nodes, 1318 on tree, 8643.2429 best solution, best possible 8373.1149 (1427.59 seconds)
Cbc0010I After 5900 nodes, 1333 on tree, 8643.2429 best solution, best possible 8376.2404 (1440.71 seconds)
Cbc0010I After 6000 nodes, 1350 on tree, 8643.2429 best solution, best possible 8391.5034 (1453.86 seconds)
Cbc0010I After 6100 nodes, 1377 on tree, 8643.2429 best solution, best possible 8394.6325 (1467.28 seconds)
Cbc0010I After 6200 nodes, 1400 on tree, 8643.2429 best solution, best possible 8397.756 (1480.11 seconds)
Cbc0010I After 6300 nodes, 1430 on tree, 8643.2429 best solution, best possible 8398.2985 (1493.51 seconds)
Cbc0010I After 6400 nodes, 1454 on tree, 8643.2429 best solution, best possible 8400.8993 (1506.85 seconds)
Cbc0010I After 6500 nodes, 1481 on tree, 8643.2429 best solution, best possible 8408.9541 (1519.68 seconds)
Cbc0010I After 6600 nodes, 1505 on tree, 8643.2429 best solution, best possible 8425.7662 (1533.70 seconds)
Cbc0010I After 6700 nodes, 1521 on tree, 8643.2429 best solution, best possible 8452.4813 (1547.20 seconds)
Cbc0010I After 6800 nodes, 1545 on tree, 8643.2429 best solution, best possible 8457.7245 (1560.48 seconds)
Cbc0010I After 6900 nodes, 1568 on tree, 8643.2429 best solution, best possible 8464.777 (1573.75 seconds)
Cbc0010I After 7000 nodes, 1589 on tree, 8643.2429 best solution, best possible 8468.8601 (1587.05 seconds)
Cbc0010I After 7100 nodes, 1604 on tree, 8643.2429 best solution, best possible 8472.4359 (1600.63 seconds)
Cbc0010I After 7200 nodes, 1631 on tree, 8643.2429 best solution, best possible 8476.7367 (1613.50 seconds)
Cbc0010I After 7300 nodes, 1649 on tree, 8643.2429 best solution, best possible 8480.796 (1625.62 seconds)
Cbc0010I After 7400 nodes, 1669 on tree, 8643.2429 best solution, best possible 8490.7167 (1638.20 seconds)
Cbc0010I After 7500 nodes, 1689 on tree, 8643.2429 best solution, best possible 8495.6211 (1652.93 seconds)
Cbc0010I After 7600 nodes, 1709 on tree, 8643.2429 best solution, best possible 8500.7254 (1665.73 seconds)
Cbc0010I After 7700 nodes, 1733 on tree, 8643.2429 best solution, best possible 8506.0122 (1678.73 seconds)
Cbc0010I After 7800 nodes, 1765 on tree, 8643.2429 best solution, best possible 8507.7599 (1693.01 seconds)
Cbc0010I After 7900 nodes, 1784 on tree, 8643.2429 best solution, best possible 8509.6512 (1706.81 seconds)
Cbc0010I After 8000 nodes, 1806 on tree, 8643.2429 best solution, best possible 8511.1476 (1721.01 seconds)
Cbc0010I After 8100 nodes, 1825 on tree, 8643.2429 best solution, best possible 8512.5618 (1734.95 seconds)
Cbc0010I After 8200 nodes, 1847 on tree, 8643.2429 best solution, best possible 8513.0397 (1752.40 seconds)
Cbc0010I After 8300 nodes, 1866 on tree, 8643.2429 best solution, best possible 8515.9936 (1766.34 seconds)
Cbc0010I After 8400 nodes, 1882 on tree, 8643.2429 best solution, best possible 8516.8851 (1779.97 seconds)
Cbc0010I After 8500 nodes, 1900 on tree, 8643.2429 best solution, best possible 8517.9758 (1793.03 seconds)
Cbc0010I After 8600 nodes, 1923 on tree, 8643.2429 best solution, best possible 8518.2799 (1806.22 seconds)
Cbc0010I After 8700 nodes, 1954 on tree, 8643.2429 best solution, best possible 8518.4672 (1820.42 seconds)
Cbc0010I After 8800 nodes, 1979 on tree, 8643.2429 best solution, best possible 8519.4831 (1834.14 seconds)
Cbc0010I After 8900 nodes, 2010 on tree, 8643.2429 best solution, best possible 8520.0345 (1847.90 seconds)
Cbc0010I After 9000 nodes, 2039 on tree, 8643.2429 best solution, best possible 8520.1452 (1861.53 seconds)
Cbc0010I After 9100 nodes, 2052 on tree, 8643.2429 best solution, best possible 8522.2329 (1875.45 seconds)
Cbc0010I After 9200 nodes, 2078 on tree, 8643.2429 best solution, best possible 8524.1176 (1887.66 seconds)
Cbc0010I After 9300 nodes, 2100 on tree, 8643.2429 best solution, best possible 8524.132 (1899.81 seconds)
Cbc0010I After 9400 nodes, 2123 on tree, 8643.2429 best solution, best possible 8524.3505 (1912.04 seconds)
Cbc0010I After 9500 nodes, 2150 on tree, 8643.2429 best solution, best possible 8524.7757 (1926.30 seconds)
Cbc0010I After 9600 nodes, 2172 on tree, 8643.2429 best solution, best possible 8526.1652 (1939.92 seconds)
Cbc0010I After 9700 nodes, 2198 on tree, 8643.2429 best solution, best possible 8526.3299 (1953.72 seconds)
Cbc0010I After 9800 nodes, 2223 on tree, 8643.2429 best solution, best possible 8526.35 (1967.25 seconds)
Cbc0010I After 9900 nodes, 2245 on tree, 8643.2429 best solution, best possible 8527.5813 (1979.57 seconds)
Cbc0010I After 10000 nodes, 2269 on tree, 8643.2429 best solution, best possible 8530.0038 (1992.09 seconds)
Cbc0010I After 10100 nodes, 2289 on tree, 8643.2429 best solution, best possible 8531.436 (2005.30 seconds)
Cbc0010I After 10200 nodes, 2317 on tree, 8643.2429 best solution, best possible 8531.4523 (2018.30 seconds)
Cbc0010I After 10300 nodes, 2347 on tree, 8643.2429 best solution, best possible 8531.4542 (2031.54 seconds)
Cbc0010I After 10400 nodes, 2374 on tree, 8643.2429 best solution, best possible 8532.3158 (2045.39 seconds)
Cbc0010I After 10500 nodes, 2399 on tree, 8643.2429 best solution, best possible 8532.5201 (2059.64 seconds)
Cbc0010I After 10600 nodes, 2421 on tree, 8643.2429 best solution, best possible 8533.2352 (2072.98 seconds)
Cbc0010I After 10700 nodes, 2446 on tree, 8643.2429 best solution, best possible 8534.1935 (2086.37 seconds)
Cbc0010I After 10800 nodes, 2470 on tree, 8643.2429 best solution, best possible 8534.2221 (2099.87 seconds)
Cbc0010I After 10900 nodes, 2490 on tree, 8643.2429 best solution, best possible 8534.2377 (2112.71 seconds)
Cbc0010I After 11000 nodes, 2514 on tree, 8643.2429 best solution, best possible 8535.3293 (2125.78 seconds)
Cbc0010I After 11100 nodes, 2529 on tree, 8643.2429 best solution, best possible 8538.9986 (2138.81 seconds)
Cbc0010I After 11200 nodes, 2548 on tree, 8643.2429 best solution, best possible 8539.1057 (2151.40 seconds)
Cbc0010I After 11300 nodes, 2574 on tree, 8643.2429 best solution, best possible 8539.3276 (2167.48 seconds)
Cbc0010I After 11400 nodes, 2594 on tree, 8643.2429 best solution, best possible 8540.1245 (2181.49 seconds)
Cbc0010I After 11500 nodes, 2616 on tree, 8643.2429 best solution, best possible 8540.4099 (2195.52 seconds)
Cbc0010I After 11600 nodes, 2635 on tree, 8643.2429 best solution, best possible 8540.4102 (2208.89 seconds)
Cbc0010I After 11700 nodes, 2653 on tree, 8643.2429 best solution, best possible 8541.4894 (2222.62 seconds)
Cbc0010I After 11800 nodes, 2682 on tree, 8643.2429 best solution, best possible 8541.9566 (2235.87 seconds)
Cbc0010I After 11900 nodes, 2708 on tree, 8643.2429 best solution, best possible 8542.147 (2250.29 seconds)
Cbc0010I After 12000 nodes, 2727 on tree, 8643.2429 best solution, best possible 8544.0783 (2264.57 seconds)
Cbc0010I After 12100 nodes, 2747 on tree, 8643.2429 best solution, best possible 8544.1179 (2278.30 seconds)
Cbc0010I After 12200 nodes, 2764 on tree, 8643.2429 best solution, best possible 8546.1272 (2291.45 seconds)
Cbc0010I After 12300 nodes, 2784 on tree, 8643.2429 best solution, best possible 8547.392 (2305.01 seconds)
Cbc0010I After 12400 nodes, 2801 on tree, 8643.2429 best solution, best possible 8548.4152 (2318.82 seconds)
Cbc0010I After 12500 nodes, 2817 on tree, 8643.2429 best solution, best possible 8548.4384 (2332.09 seconds)
Cbc0010I After 12600 nodes, 2833 on tree, 8643.2429 best solution, best possible 8550.0881 (2345.20 seconds)
Cbc0010I After 12700 nodes, 2857 on tree, 8643.2429 best solution, best possible 8551.413 (2358.86 seconds)
Cbc0010I After 12800 nodes, 2878 on tree, 8643.2429 best solution, best possible 8553.3637 (2376.66 seconds)
Cbc0010I After 12900 nodes, 2896 on tree, 8643.2429 best solution, best possible 8554.6041 (2393.50 seconds)
Cbc0010I After 13000 nodes, 2916 on tree, 8643.2429 best solution, best possible 8556.3825 (2406.95 seconds)
Cbc0010I After 13100 nodes, 2946 on tree, 8643.2429 best solution, best possible 8556.6725 (2420.17 seconds)
Cbc0010I After 13200 nodes, 2967 on tree, 8643.2429 best solution, best possible 8557.9812 (2433.84 seconds)
Cbc0010I After 13300 nodes, 2993 on tree, 8643.2429 best solution, best possible 8558.2826 (2447.63 seconds)
Cbc0010I After 13400 nodes, 3015 on tree, 8643.2429 best solution, best possible 8559.089 (2460.25 seconds)
Cbc0010I After 13500 nodes, 3042 on tree, 8643.2429 best solution, best possible 8560.9077 (2475.04 seconds)
Cbc0010I After 13600 nodes, 3062 on tree, 8643.2429 best solution, best possible 8561.4208 (2488.01 seconds)
Cbc0010I After 13700 nodes, 3091 on tree, 8643.2429 best solution, best possible 8562.4374 (2501.20 seconds)
Cbc0010I After 13800 nodes, 3122 on tree, 8643.2429 best solution, best possible 8562.9978 (2513.58 seconds)
Cbc0010I After 13900 nodes, 3152 on tree, 8643.2429 best solution, best possible 8565.0215 (2531.47 seconds)
Cbc0010I After 14000 nodes, 3171 on tree, 8643.2429 best solution, best possible 8566.5113 (2544.04 seconds)
Cbc0010I After 14100 nodes, 3193 on tree, 8643.2429 best solution, best possible 8567.0662 (2557.55 seconds)
Cbc0010I After 14200 nodes, 3223 on tree, 8643.2429 best solution, best possible 8567.2913 (2570.37 seconds)
Cbc0010I After 14300 nodes, 3247 on tree, 8643.2429 best solution, best possible 8568.8429 (2583.51 seconds)
Cbc0010I After 14400 nodes, 3273 on tree, 8643.2429 best solution, best possible 8569.9908 (2596.45 seconds)
Cbc0010I After 14500 nodes, 3304 on tree, 8643.2429 best solution, best possible 8570.0015 (2609.62 seconds)
Cbc0010I After 14600 nodes, 3328 on tree, 8643.2429 best solution, best possible 8570.151 (2621.88 seconds)
Cbc0010I After 14700 nodes, 3347 on tree, 8643.2429 best solution, best possible 8570.3843 (2635.69 seconds)
Cbc0010I After 14800 nodes, 3371 on tree, 8643.2429 best solution, best possible 8570.73 (2648.71 seconds)
Cbc0010I After 14900 nodes, 3397 on tree, 8643.2429 best solution, best possible 8572.2617 (2662.78 seconds)
Cbc0010I After 15000 nodes, 3419 on tree, 8643.2429 best solution, best possible 8572.3469 (2675.60 seconds)
Cbc0010I After 15100 nodes, 3444 on tree, 8643.2429 best solution, best possible 8573.2964 (2689.09 seconds)
Cbc0010I After 15200 nodes, 3463 on tree, 8643.2429 best solution, best possible 8574.7327 (2702.52 seconds)
Cbc0010I After 15300 nodes, 3487 on tree, 8643.2429 best solution, best possible 8575.1089 (2716.57 seconds)
Cbc0010I After 15400 nodes, 3511 on tree, 8643.2429 best solution, best possible 8575.2681 (2729.98 seconds)
Cbc0010I After 15500 nodes, 3536 on tree, 8643.2429 best solution, best possible 8575.4141 (2743.42 seconds)
Cbc0010I After 15600 nodes, 3556 on tree, 8643.2429 best solution, best possible 8575.7927 (2756.56 seconds)
Cbc0010I After 15700 nodes, 3577 on tree, 8643.2429 best solution, best possible 8576.0593 (2770.47 seconds)
Cbc0010I After 15800 nodes, 3597 on tree, 8643.2429 best solution, best possible 8576.1232 (2784.49 seconds)
Cbc0010I After 15900 nodes, 3616 on tree, 8643.2429 best solution, best possible 8576.415 (2804.83 seconds)
Cbc0010I After 16000 nodes, 3635 on tree, 8643.2429 best solution, best possible 8577.242 (2817.49 seconds)
Cbc0010I After 16100 nodes, 3669 on tree, 8643.2429 best solution, best possible 8577.2908 (2830.46 seconds)
Cbc0010I After 16200 nodes, 3697 on tree, 8643.2429 best solution, best possible 8578.1695 (2843.45 seconds)
Cbc0010I After 16300 nodes, 3722 on tree, 8643.2429 best solution, best possible 8578.8443 (2857.56 seconds)
Cbc0010I After 16400 nodes, 3745 on tree, 8643.2429 best solution, best possible 8579.1239 (2871.19 seconds)
Cbc0010I After 16500 nodes, 3760 on tree, 8643.2429 best solution, best possible 8580.564 (2882.40 seconds)
Cbc0010I After 16600 nodes, 3786 on tree, 8643.2429 best solution, best possible 8581.0722 (2893.91 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 8643.2429 (best possible 8581.0722), took 240678 iterations and 16675 nodes (2914.75 seconds)
Cbc0035I Maximum depth 237, 4837 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5071
Linearization cuts added in total:           5071  (separation time: 0.050192s)
Total solve time:                         2914.82s (2914.82s in branch-and-bound)
Lower bound:                              8581.07
Upper bound:                              8643.24  (gap: 0.72%)
Branch-and-bound nodes:                     16675
Stats: /tmp/jl_Ai7jQb/model.nl 4590 [var]   30 [int] 4710 [con]  389 [aux]   5071 [root]     5071 [tot] 0.050192 [sep]  2914.82 [time]  2914.83 [bb]         8.581072e+03 [lower]         8.643243e+03 [upper]   16675 [nodes]
Performance of                           FBBT:	    259.341s,    23285 runs. fix:   0.012116 shrnk:    2.06858 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     35.317s,       12 runs. fix:   0.243655 shrnk:    68.6166 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p32
