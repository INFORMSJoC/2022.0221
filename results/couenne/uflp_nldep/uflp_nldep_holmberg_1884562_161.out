solving instance uflp nldep holmberg 17 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6314.8864       62 4.827371
NLP0014I             2         OPT 6820.5802       47 0.516221
Couenne: new cutoff value 6.8205815550e+03 (5.75164 seconds)
Loaded instance "/tmp/jl_XOULSl/model.nl"
Constraints:         1090
Variables:           1060 (20 integer)
Auxiliaries:          189 (0 integer)

Coin0506I Presolve 1349 (-62) rows, 1099 (-150) columns and 5617 (-212) elements
Clp0006I 0  Obj 0 Primal inf 15195.345 (270)
Clp0006I 101  Obj 3.2841099e-12 Primal inf 1248.4576 (140)
Clp0006I 193  Obj 3198 Primal inf 296.52338 (101)
Clp0006I 294  Obj 6311.5748 Primal inf 110.76716 (12)
Clp0006I 307  Obj 6311.6545
Clp0000I Optimal - objective value 6311.6545
Clp0032I Optimal objective 6311.65447 - 307 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 6311.6545
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 6311.6545
Optimality Based BT: 29 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 6311.6545 to 6312.4288 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 27 row cuts average 2.0 elements, 5 column cuts (5 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.57 seconds)
Optimality Based BT: 14 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 28 improved bounds
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 6314.8795 (19.25 seconds)
Cbc0010I After 200 nodes, 96 on tree, 1e+50 best solution, best possible 6314.8795 (21.00 seconds)
Couenne: new cutoff value 6.3149444036e+03 (26.9643 seconds)
Cbc0004I Integer solution of 6314.9445 found after 3206 iterations and 211 nodes (21.18 seconds)
Cbc0001I Search completed - best objective 6314.944493169121, took 4361 iterations and 256 nodes (21.81 seconds)
Cbc0035I Maximum depth 106, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1411
Linearization cuts added in total:           1411  (separation time: 0.008012s)
Total solve time:                         21.8369s (21.8369s in branch-and-bound)
Lower bound:                              6314.94
Upper bound:                              6314.94  (gap: 0.00%)
Branch-and-bound nodes:                       256
Stats: /tmp/jl_XOULSl/model.nl 1060 [var]   20 [int] 1090 [con]  189 [aux]   1411 [root]     1411 [tot] 0.008012 [sep]  21.8369 [time]  21.8391 [bb]         6.314944e+03 [lower]         6.314944e+03 [upper]     256 [nodes]
Performance of                           FBBT:	   0.482764s,      312 runs. fix: 0.00415924 shrnk:    29.9896 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.08363s,        4 runs. fix:       11.8 shrnk:      70.06 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p17
