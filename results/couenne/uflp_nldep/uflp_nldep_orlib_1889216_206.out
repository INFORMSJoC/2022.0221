solving instance uflp nldep orlib 94 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      INFEAS 1.0000002      444 7.959468
Loaded instance "/tmp/jl_RorkeH/model.nl"
Constraints:         1350
Variables:           1325 (25 integer)
Auxiliaries:          243 (0 integer)

Coin0506I Presolve 1541 (-98) rows, 1372 (-196) columns and 6728 (-343) elements
Clp0006I 0  Obj -51813.339 Primal inf 13050.355 (122)
Clp0006I 105  Obj 90845.139 Primal inf 1019.075 (105)
Clp0006I 205  Obj 646101.36
Clp0000I Optimal - objective value 646101.36
Clp0032I Optimal objective 646101.3637 - 205 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 646101.36
NLP Heuristic: NLP0014I             2         OPT 680279.48       50 0.948901
no solution.
Clp0000I Optimal - objective value 646101.36
Optimality Based BT: Couenne: new cutoff value 1.9603378655e+06 (9.88924 seconds)
Couenne: new cutoff value 1.6598985405e+06 (9.89857 seconds)
Couenne: new cutoff value 1.4306495155e+06 (9.90313 seconds)
Couenne: new cutoff value 1.3551224155e+06 (9.90772 seconds)
Couenne: new cutoff value 1.2483617995e+06 (9.93585 seconds)
1 improved bounds
Probing: 21 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 646101.36 to 647111.25 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (6.73 seconds)
Optimality Based BT: Couenne: new cutoff value 1.2481429000e+06 (15.9232 seconds)
41 improved bounds
Optimality Based BT: 36 improved bounds
Optimality Based BT: 45 improved bounds
Optimality Based BT: 36 improved bounds
Optimality Based BT: 41 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 664717.58 (37.63 seconds)
Cbc0010I After 200 nodes, 98 on tree, 1e+50 best solution, best possible 664717.58 (39.99 seconds)
Cbc0010I After 300 nodes, 148 on tree, 1e+50 best solution, best possible 664717.58 (42.19 seconds)
Cbc0010I After 400 nodes, 198 on tree, 1e+50 best solution, best possible 664717.58 (44.23 seconds)
Cbc0010I After 500 nodes, 248 on tree, 1e+50 best solution, best possible 664717.58 (46.15 seconds)
Couenne: new cutoff value 6.8027987282e+05 (54.7128 seconds)
Optimality Based BT: 54 improved bounds
Couenne: new cutoff value 6.8027986473e+05 (64.2414 seconds)
Cbc0004I Integer solution of 680279.87 found after 4752 iterations and 597 nodes (55.81 seconds)
Cbc0010I After 600 nodes, 5 on tree, 680279.87 best solution, best possible 680279.83 (55.92 seconds)
Couenne: new cutoff value 6.8027986328e+05 (64.561 seconds)
Couenne: new cutoff value 6.8027986328e+05 (64.5947 seconds)
Cbc0004I Integer solution of 680279.86 found after 4811 iterations and 615 nodes (56.15 seconds)
Cbc0001I Search completed - best objective 680279.8632793283, took 4811 iterations and 615 nodes (56.15 seconds)
Cbc0035I Maximum depth 254, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1639
Linearization cuts added in total:           1639  (separation time: 0.007194s)
Total solve time:                         56.1661s (56.1661s in branch-and-bound)
Lower bound:                               680280
Upper bound:                               680280  (gap: 0.00%)
Branch-and-bound nodes:                       615
Stats: /tmp/jl_RorkeH/model.nl 1325 [var]   25 [int] 1350 [con]  243 [aux]   1639 [root]     1639 [tot] 0.007194 [sep]  56.1661 [time]  56.1675 [bb]         6.802799e+05 [lower]         6.802799e+05 [upper]     615 [nodes]
Performance of                           FBBT:	    1.52261s,      793 runs. fix: 0.00491267 shrnk:   0.943362 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.61247s,        7 runs. fix:    0.26087 shrnk:     76.639 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap94.txt
