solving instance uflp nldep holmberg 25 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 6.8678000000e+04 (5.75383 seconds)
5.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9297.8591       64 5.586269
NLP0014I             2         OPT 10065.544       37 2.443886
Loaded instance "/tmp/jl_S3t4D8/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          239 (0 integer)

Coin0506I Presolve 4950 (-1) rows, 4650 (-179) columns and 23189 (-180) elements
Clp0006I 0  Obj -34849.687 Primal inf 3687905.4 (180)
Clp0006I 174  Obj -881.26719 Primal inf 4083580.9 (234)
Clp0006I 348  Obj 5299.1335 Primal inf 21029.313 (143)
Clp0006I 522  Obj 8265.9902 Primal inf 4799.0517 (6)
Clp0006I 532  Obj 8269.257
Clp0000I Optimal - objective value 8269.257
Clp0000I Optimal - objective value 8269.257
Clp0032I Optimal objective 8269.257004 - 532 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 8269.257
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 8269.257
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 8269.257 to 8271.3574 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 44 row cuts average 2.0 elements, 255 column cuts (255 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (27.44 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0160931580e+04 (67.675 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 1e+50 best solution, best possible 8571.7089 (118.96 seconds)
Couenne: new cutoff value 9.3535522650e+03 (144.271 seconds)
Cbc0010I After 200 nodes, 89 on tree, 1e+50 best solution, best possible 8571.7089 (129.16 seconds)
Cbc0010I After 300 nodes, 126 on tree, 1e+50 best solution, best possible 9139.1196 (146.20 seconds)
Couenne: new cutoff value 9.2986422589e+03 (169.872 seconds)
Couenne: new cutoff value 9.2986115084e+03 (170.121 seconds)
Cbc0010I After 400 nodes, 166 on tree, 1e+50 best solution, best possible 9166.7205 (156.14 seconds)
Cbc0010I After 500 nodes, 191 on tree, 1e+50 best solution, best possible 9195.923 (167.36 seconds)
Couenne: new cutoff value 9.2982026667e+03 (186.521 seconds)
Couenne: new cutoff value 9.2981971910e+03 (186.586 seconds)
Cbc0010I After 600 nodes, 217 on tree, 1e+50 best solution, best possible 9203.3989 (176.69 seconds)
Cbc0010I After 700 nodes, 233 on tree, 1e+50 best solution, best possible 9244.7593 (197.64 seconds)
Cbc0010I After 800 nodes, 251 on tree, 1e+50 best solution, best possible 9248.2621 (209.64 seconds)
Couenne: new cutoff value 9.2979728314e+03 (230.879 seconds)
Cbc0010I After 900 nodes, 281 on tree, 1e+50 best solution, best possible 9250.9492 (218.99 seconds)
Cbc0010I After 1000 nodes, 287 on tree, 1e+50 best solution, best possible 9259.0462 (230.43 seconds)
Cbc0010I After 1100 nodes, 305 on tree, 1e+50 best solution, best possible 9260.3934 (242.18 seconds)
Cbc0010I After 1200 nodes, 312 on tree, 1e+50 best solution, best possible 9262.9833 (252.51 seconds)
Cbc0010I After 1300 nodes, 301 on tree, 1e+50 best solution, best possible 9271.1898 (262.45 seconds)
Cbc0010I After 1400 nodes, 284 on tree, 1e+50 best solution, best possible 9284.49 (271.95 seconds)
Cbc0010I After 1500 nodes, 262 on tree, 1e+50 best solution, best possible 9290.8967 (280.19 seconds)
Cbc0010I After 1600 nodes, 255 on tree, 1e+50 best solution, best possible 9294.6189 (289.99 seconds)
Cbc0010I After 1700 nodes, 290 on tree, 1e+50 best solution, best possible 9294.6189 (299.35 seconds)
Couenne: new cutoff value 9.2978834570e+03 (314.736 seconds)
Couenne: new cutoff value 9.2978822592e+03 (314.82 seconds)
Cbc0010I After 1800 nodes, 285 on tree, 1e+50 best solution, best possible 9295.7349 (309.14 seconds)
Cbc0010I After 1900 nodes, 263 on tree, 1e+50 best solution, best possible 9297.3104 (318.25 seconds)
Cbc0010I After 2000 nodes, 256 on tree, 1e+50 best solution, best possible 9297.6929 (327.94 seconds)
Cbc0010I After 2100 nodes, 216 on tree, 1e+50 best solution, best possible 9297.9 (333.30 seconds)
Cbc0010I After 2200 nodes, 166 on tree, 1e+50 best solution, best possible 9298.166 (335.67 seconds)
Cbc0010I After 2300 nodes, 116 on tree, 1e+50 best solution, best possible 9298.6558 (337.56 seconds)
Cbc0010I After 2400 nodes, 66 on tree, 1e+50 best solution, best possible 9353.118 (339.60 seconds)
Cbc0010I After 2500 nodes, 16 on tree, 1e+50 best solution, best possible 9359.745 (341.44 seconds)
Cbc0001I Search completed - best objective 1e+50, took 50273 iterations and 2532 nodes (342.36 seconds)
Cbc0035I Maximum depth 101, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4951
Linearization cuts added in total:           4951  (separation time: 0.029273s)
Total solve time:                         342.429s (342.429s in branch-and-bound)
Lower bound:                              9297.88
Upper bound:                              9297.88  (gap: 0.00%)
Branch-and-bound nodes:                      2532
Stats: /tmp/jl_S3t4D8/model.nl 4590 [var]   30 [int] 4710 [con]  239 [aux]   4951 [root]     4951 [tot] 0.029273 [sep]  342.429 [time]  342.435 [bb]         9.297882e+03 [lower]         9.297882e+03 [upper]    2532 [nodes]
Performance of                           FBBT:	     23.135s,     2771 runs. fix:          0 shrnk:    4.78894 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.91197s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p25
