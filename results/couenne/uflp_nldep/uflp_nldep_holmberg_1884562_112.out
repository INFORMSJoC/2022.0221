solving instance uflp nldep holmberg 12 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 2.3339000000e+04 (0.087591 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6989.7464       23 0.159616
Couenne: new cutoff value 6.9897471280e+03 (0.250053 seconds)
Loaded instance "/tmp/jl_zkvtNO/model.nl"
Constraints:          570
Variables:            530 (10 integer)
Auxiliaries:           79 (0 integer)

Coin0506I Presolve 650 (-1) rows, 550 (-59) columns and 2729 (-60) elements
Clp0006I 0  Obj -19687.5 Primal inf 412293.15 (60)
Clp0006I 88  Obj 405.33834 Primal inf 4999.1925 (50)
Clp0006I 172  Obj 5245.9712
Clp0000I Optimal - objective value 5245.9712
Clp0000I Optimal - objective value 5245.9712
Clp0032I Optimal objective 5245.971239 - 172 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 5245.9712
NLP Heuristic: NLP0014I             2         OPT 6989.7464       11 0.077354
no solution.
Clp0000I Optimal - objective value 5245.9712
Optimality Based BT: 1 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 5245.9712 to 5422.5571 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 86 row cuts average 2.0 elements, 82 column cuts (82 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.77 seconds)
Optimality Based BT: 6 improved bounds
Optimality Based BT: 6 improved bounds
Cbc0010I After 100 nodes, 17 on tree, 1e+50 best solution, best possible 6750.7589 (3.79 seconds)
Cbc0010I After 200 nodes, 21 on tree, 1e+50 best solution, best possible 6892.8473 (4.60 seconds)
Cbc0010I After 300 nodes, 30 on tree, 1e+50 best solution, best possible 6932.9317 (5.65 seconds)
Cbc0010I After 400 nodes, 16 on tree, 1e+50 best solution, best possible 6975.5655 (6.58 seconds)
Cbc0010I After 500 nodes, 11 on tree, 1e+50 best solution, best possible 6987.1639 (7.50 seconds)
Cbc0001I Search completed - best objective 1e+50, took 5369 iterations and 578 nodes (8.14 seconds)
Cbc0035I Maximum depth 79, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        651
Linearization cuts added in total:            651  (separation time: 0.003367s)
Total solve time:                         8.14501s (8.14501s in branch-and-bound)
Lower bound:                              6989.75
Upper bound:                              6989.75  (gap: 0.00%)
Branch-and-bound nodes:                       578
Stats: /tmp/jl_zkvtNO/model.nl  530 [var]   10 [int]  570 [con]   79 [aux]    651 [root]      651 [tot] 0.003367 [sep]  8.14501 [time]  8.14605 [bb]         6.989747e+03 [lower]         6.989747e+03 [upper]     578 [nodes]
Performance of                           FBBT:	   0.414547s,      661 runs. fix:          0 shrnk:     3.7164 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.435091s,        3 runs. fix:          0 shrnk:    25.1489 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p12
