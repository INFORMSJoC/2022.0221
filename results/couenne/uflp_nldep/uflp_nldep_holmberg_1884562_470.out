solving instance uflp nldep holmberg 47 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.5936000000e+04 (0.234108 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3162.3894       24 0.256466
Couenne: new cutoff value 3.1623886239e+03 (0.494809 seconds)
Loaded instance "/tmp/jl_UWu0JY/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          119 (0 integer)

Coin0506I Presolve 1061 (-20) rows, 931 (-118) columns and 4641 (-138) elements
Clp0006I 0  Obj 0 Primal inf 205.63946 (90)
Clp0006I 96  Obj 1891.3269 Primal inf 121.46404 (90)
Clp0006I 125  Obj 2179.3077
Clp0000I Optimal - objective value 2179.3077
Clp0032I Optimal objective 2179.307692 - 125 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 2179.3077
NLP Heuristic: NLP0014I             2         OPT 3162.3894       12 0.139868
no solution.
Clp0000I Optimal - objective value 2179.3077
Optimality Based BT: 9 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 2179.3077 to 2574.7606 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.52 seconds)
Optimality Based BT: 14 improved bounds
Optimality Based BT: 18 improved bounds
Cbc0010I After 100 nodes, 12 on tree, 1e+50 best solution, best possible 2920.12 (8.98 seconds)
Cbc0010I After 200 nodes, 29 on tree, 1e+50 best solution, best possible 2976.4633 (11.63 seconds)
Cbc0010I After 300 nodes, 46 on tree, 1e+50 best solution, best possible 3022.7584 (20.63 seconds)
Optimality Based BT: 21 improved bounds
Cbc0010I After 400 nodes, 55 on tree, 1e+50 best solution, best possible 3061.5406 (24.94 seconds)
Cbc0010I After 500 nodes, 54 on tree, 1e+50 best solution, best possible 3094.2241 (26.84 seconds)
Cbc0010I After 600 nodes, 33 on tree, 1e+50 best solution, best possible 3137.0291 (28.32 seconds)
Cbc0010I After 700 nodes, 15 on tree, 1e+50 best solution, best possible 3162.3869 (29.14 seconds)
Cbc0010I After 800 nodes, 18 on tree, 1e+50 best solution, best possible 3162.3879 (30.01 seconds)
Cbc0010I After 900 nodes, 8 on tree, 1e+50 best solution, best possible 3162.3901 (30.82 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4362 iterations and 916 nodes (30.91 seconds)
Cbc0035I Maximum depth 79, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1081
Linearization cuts added in total:           1081  (separation time: 0.006531s)
Total solve time:                         30.9329s (30.9329s in branch-and-bound)
Lower bound:                              3162.39
Upper bound:                              3162.39  (gap: 0.00%)
Branch-and-bound nodes:                       916
Stats: /tmp/jl_UWu0JY/model.nl  930 [var]   10 [int] 1010 [con]  119 [aux]   1081 [root]     1081 [tot] 0.006531 [sep]  30.9329 [time]  30.9348 [bb]         3.162389e+03 [lower]         3.162389e+03 [upper]     916 [nodes]
Performance of                           FBBT:	    1.12896s,      802 runs. fix:          0 shrnk:    2.88305 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.498468s,        4 runs. fix:          0 shrnk:    19.9365 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p47
