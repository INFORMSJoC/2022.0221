solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-1.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 268.93871       48 33.806121
Couenne: new cutoff value 2.6893920054e+02 (34.811 seconds)
NLP0014I             2         OPT 268.93873       36 0.820171
Couenne: new cutoff value 2.6893870604e+02 (35.6339 seconds)
Loaded instance "/tmp/jl_3BtBjO/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          269 (0 integer)

Coin0506I Presolve 2309 (-92) rows, 1949 (-210) columns and 9927 (-302) elements
Clp0006I 0  Obj 0 Primal inf 10197.269 (390)
Clp0006I 121  Obj 4.8834482e-14 Primal inf 16146.916 (202)
Clp0006I 242  Obj 126.03458 Primal inf 94147.347 (131)
Clp0006I 363  Obj 266.56387 Primal inf 4455.8688 (63)
Clp0006I 437  Obj 267.76082
Clp0000I Optimal - objective value 267.76082
Clp0032I Optimal objective 267.7608217 - 437 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 267.76082
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 267.76082
Optimality Based BT: 58 improved bounds
Probing: 0 improved bounds
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 52 added rows had average density of 2
Cbc0013I At root node, 52 cuts changed objective from 267.76082 to 268.93903 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 278 row cuts average 2.0 elements, 8 column cuts (8 active)
Cbc0001I Search completed - best objective 1e+50, took 284 iterations and 0 nodes (6.94 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2401
Linearization cuts added in total:           2401  (separation time: 0.015184s)
Total solve time:                         6.97771s (6.97771s in branch-and-bound)
Lower bound:                              268.939
Upper bound:                              268.939  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_3BtBjO/model.nl 1890 [var]   30 [int] 1920 [con]  269 [aux]   2401 [root]     2401 [tot] 0.015184 [sep]  6.97772 [time]  6.98141 [bb]         2.689387e+02 [lower]         2.689387e+02 [upper]       0 [nodes]
Performance of                           FBBT:	   0.030858s,        9 runs. fix:          0 shrnk:    171.098 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.90123s,        1 runs. fix:          5 shrnk:    270.988 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-1.txt
f0 = 0.05822790740070758
f0 = 0.07499048680394158
f0 = 0.010586892254674105
f0 = 0.0026467230636685263
f0 = 0.0061756871485598944
f0 = 0.08645962007983853
f0 = 0.0608746304643761
f0 = 0.0061756871485598944
f0 = 0.06969704067660452
f0 = 0.01764482042445684
f0 = 0.03528964084891368
f0 = 0.0776372098676101
f0 = 0.02999619472157663
f0 = 0.05822790740070758
f0 = 0.025584989615462416
f0 = 0.08557737905861568
f0 = 0.04234756901869642
f0 = 0.07234376374027304
f0 = 0.08204841497372431
f0 = 0.07675496884638726
f0 = 0.03176067676402231
f0 = 0.05999238944315326
f0 = 0.04234756901869642
f0 = 0.07057928169782736
f0 = 0.052052220252147674
f0 = 0.08116617395250147
f0 = 0.04058308697625074
f0 = 0.025584989615462416
f0 = 0.07851945088883294
f0 = 0.028231712679130945
