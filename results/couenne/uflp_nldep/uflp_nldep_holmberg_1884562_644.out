solving instance uflp nldep holmberg 65 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 9.7970999991e+04 (9.68213 seconds)
9.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9061.6862       28 3.496713
Couenne: new cutoff value 9.0616783812e+03 (13.2107 seconds)
Loaded instance "/tmp/jl_Rdm2Bz/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          349 (0 integer)

Coin0506I Presolve 6581 (-40) rows, 6171 (-268) columns and 30791 (-308) elements
Clp0006I 0  Obj 0 Primal inf 594.01104 (200) Dual inf 8.9428498e+13 (6000)
Clp0029I End of values pass after 60 iterations
Clp0006I 60  Obj 0 Primal inf 594.01104 (200) Dual inf 8.9428498e+13 (6000)
Clp0006I 439  Obj 9472.6265 Primal inf 2.8261068 (1) Dual inf 1.2951069e+11 (90)
Clp0006I 538  Obj 8882
Clp0000I Optimal - objective value 8882
Clp0032I Optimal objective 8882 - 538 iterations time 0.132, Presolve 0.09
Clp0000I Optimal - objective value 8882
NLP Heuristic: NLP0014I             2         OPT 9061.6862       20 2.526006
no solution.
Clp0000I Optimal - objective value 8882
Optimality Based BT: 79 improved bounds
Probing: 0 improved bounds
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 61 added rows had average density of 2
Cbc0013I At root node, 61 cuts changed objective from 8882 to 9061.6813 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 282 row cuts average 2.0 elements, 8 column cuts (8 active)
Cbc0001I Search completed - best objective 1e+50, took 275 iterations and 0 nodes (52.08 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6621
Linearization cuts added in total:           6621  (separation time: 0.055172s)
Total solve time:                         52.2152s (52.2152s in branch-and-bound)
Lower bound:                              9061.68
Upper bound:                              9061.68  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_Rdm2Bz/model.nl 6090 [var]   30 [int] 6260 [con]  349 [aux]   6621 [root]     6621 [tot] 0.055172 [sep]  52.2152 [time]  52.2266 [bb]         9.061678e+03 [lower]         9.061678e+03 [upper]       0 [nodes]
Performance of                           FBBT:	   0.148467s,        9 runs. fix:          0 shrnk:    69.3064 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.66421s,        1 runs. fix:          0 shrnk:    377.472 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p65
