solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-1.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 332.46913       63 58.518914
Couenne: new cutoff value 3.3260755745e+02 (61.7125 seconds)
NLP0014I             2         OPT 332.60681       41 2.058734
Couenne: new cutoff value 3.3260688774e+02 (63.7754 seconds)
Loaded instance "/tmp/jl_GAKlE9/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14951.461 (520)
Clp0006I 152  Obj 1.9550538e-12 Primal inf 2924.4417 (251)
Clp0006I 304  Obj 164.17591 Primal inf 291.96128 (161)
Clp0006I 456  Obj 330.17713 Primal inf 427.83655 (85)
Clp0006I 554  Obj 331.54004
Clp0000I Optimal - objective value 331.54004
Clp0032I Optimal objective 331.5400436 - 554 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 331.54004
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 331.54004
Optimality Based BT: 68 improved bounds
Probing: 3 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 61 added rows had average density of 2
Cbc0013I At root node, 61 cuts changed objective from 331.54004 to 332.32846 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 448 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (16.38 seconds)
Optimality Based BT: 59 improved bounds
Optimality Based BT: 60 improved bounds
Optimality Based BT: 31 improved bounds
Optimality Based BT: 29 improved bounds
Cbc0010I After 100 nodes, 31 on tree, 1e+50 best solution, best possible 332.4574 (109.19 seconds)
Cbc0010I After 200 nodes, 73 on tree, 1e+50 best solution, best possible 332.4574 (116.69 seconds)
Cbc0010I After 300 nodes, 120 on tree, 1e+50 best solution, best possible 332.4574 (123.81 seconds)
Cbc0010I After 400 nodes, 170 on tree, 1e+50 best solution, best possible 332.4574 (130.90 seconds)
Couenne: new cutoff value 3.3246976030e+02 (199.236 seconds)
Cbc0004I Integer solution of 332.46979 found after 4120 iterations and 463 nodes (135.30 seconds)
Couenne: new cutoff value 3.3246972788e+02 (202.123 seconds)
Cbc0004I Integer solution of 332.46973 found after 4529 iterations and 483 nodes (138.13 seconds)
Cbc0001I Search completed - best objective 332.4697278771566, took 4529 iterations and 483 nodes (138.21 seconds)
Cbc0035I Maximum depth 231, 9 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.031141s)
Total solve time:                         138.289s (138.289s in branch-and-bound)
Lower bound:                               332.47
Upper bound:                               332.47  (gap: 0.00%)
Branch-and-bound nodes:                       483
Stats: /tmp/jl_GAKlE9/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.031141 [sep]  138.289 [time]  138.297 [bb]         3.324697e+02 [lower]         3.324697e+02 [upper]     483 [nodes]
Performance of                           FBBT:	     3.4549s,      530 runs. fix: 0.000173026 shrnk:    40.5563 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    18.2215s,        5 runs. fix:    7.84615 shrnk:    213.008 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-1.txt
f0 = 0.05822790740070758
f0 = 0.07499048680394158
f0 = 0.010586892254674105
f0 = 0.0026467230636685263
f0 = 0.0061756871485598944
f0 = 0.08645962007983853
f0 = 0.0608746304643761
f0 = 0.0061756871485598944
f0 = 0.06969704067660452
f0 = 0.01764482042445684
f0 = 0.03528964084891368
f0 = 0.0776372098676101
f0 = 0.02999619472157663
f0 = 0.05822790740070758
f0 = 0.025584989615462416
f0 = 0.08557737905861568
f0 = 0.04234756901869642
f0 = 0.07234376374027304
f0 = 0.08204841497372431
f0 = 0.07675496884638726
f0 = 0.03176067676402231
f0 = 0.05999238944315326
f0 = 0.04234756901869642
f0 = 0.07057928169782736
f0 = 0.052052220252147674
f0 = 0.08116617395250147
f0 = 0.04058308697625074
f0 = 0.025584989615462416
f0 = 0.07851945088883294
f0 = 0.028231712679130945
f0 = 0.024702748594239578
f0 = 0.07322600476149589
f0 = 0.000882241021222842
f0 = 0.06352135352804462
f0 = 0.005293446127337053
f0 = 0.055581184337039055
f0 = 0.03528964084891368
f0 = 0.049405497188479156
f0 = 0.016762579403233998
f0 = 0.055581184337039055
