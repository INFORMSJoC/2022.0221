solving instance uflp nldep holmberg 50 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6432.3683       57 4.095619
NLP0014I             2         OPT 6432.3685       32 0.309316
Couenne: new cutoff value 6.4323681720e+03 (4.69357 seconds)
Loaded instance "/tmp/jl_rYRLFF/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          169 (0 integer)

Coin0506I Presolve 1249 (-32) rows, 1049 (-150) columns and 5307 (-182) elements
Clp0006I 0  Obj 0 Primal inf 4816.1546 (210)
Clp0006I 90  Obj 3.6788097e-12 Primal inf 1831.7285 (147)
Clp0006I 167  Obj 4.2365918e-09 Primal inf 261405.26 (430)
Clp0006I 253  Obj 4412.146 Primal inf 201.55151 (194)
Clp0006I 343  Obj 6421.8081
Clp0000I Optimal - objective value 6421.8081
Clp0032I Optimal objective 6421.808059 - 343 iterations time 0.032, Presolve 0.00
Clp0000I Optimal - objective value 6421.8081
NLP Heuristic: NLP0014I             3         OPT 6432.3683       24 0.265235
no solution.
Clp0000I Optimal - objective value 6421.8081
Optimality Based BT: 13 improved bounds
Probing: 2 improved bounds
NLP Heuristic: no solution.
Cbc0031I 10 added rows had average density of 2
Cbc0013I At root node, 10 cuts changed objective from 6421.8081 to 6432.2416 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 63 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.98 seconds)
Optimality Based BT: 12 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 151 iterations and 2 nodes (3.17 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1281
Linearization cuts added in total:           1281  (separation time: 0.005871s)
Total solve time:                         3.20319s (3.20319s in branch-and-bound)
Lower bound:                              6432.37
Upper bound:                              6432.37  (gap: 0.00%)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_rYRLFF/model.nl 1030 [var]   10 [int] 1120 [con]  169 [aux]   1281 [root]     1281 [tot] 0.005871 [sep]  3.20319 [time]   3.2053 [bb]         6.432368e+03 [lower]         6.432368e+03 [upper]       2 [nodes]
Performance of                           FBBT:	   0.022995s,       15 runs. fix:          0 shrnk:    28.1575 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     0.4792s,        2 runs. fix:          1 shrnk:    80.2631 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p50
