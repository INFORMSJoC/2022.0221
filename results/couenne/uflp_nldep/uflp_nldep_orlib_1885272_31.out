solving instance uflp nldep orlib 44 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 977813.56      249 3.134453
NLP0014I             2         OPT 992400.04       52 0.43119
Couenne: new cutoff value 9.9240006295e+05 (3.84886 seconds)
Loaded instance "/tmp/jl_eu4Sxl/model.nl"
Constraints:          882
Variables:            848 (16 integer)
Auxiliaries:          156 (0 integer)

Coin0506I Presolve 1029 (-49) rows, 875 (-129) columns and 4321 (-227) elements
Clp0006I 0  Obj 0 Primal inf 115443.25 (170)
Clp0006I 95  Obj 1.2910569e-12 Primal inf 5205.1776 (180)
Clp0006I 174  Obj 4.1161679e-10 Primal inf 461181.28 (166)
Clp0006I 249  Obj 847722.47 Primal inf 1305.923 (46)
Clp0006I 303  Obj 977803.19
Clp0000I Optimal - objective value 977803.19
Clp0032I Optimal objective 977803.1881 - 303 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 977803.19
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 977803.19
Optimality Based BT: 25 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 8 added rows had average density of 2
Cbc0013I At root node, 8 cuts changed objective from 977803.19 to 977804.65 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 16 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.88 seconds)
Optimality Based BT: 20 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 16 improved bounds
Optimality Based BT: 16 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 977813.66 (16.39 seconds)
Couenne: new cutoff value 9.7781423771e+05 (20.8047 seconds)
Couenne: new cutoff value 9.7781384395e+05 (20.8584 seconds)
Couenne: new cutoff value 9.7781369627e+05 (20.8796 seconds)
Couenne: new cutoff value 9.7781368355e+05 (20.941 seconds)
Cbc0010I After 200 nodes, 50 on tree, 1e+50 best solution, best possible 977837.29 (17.25 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2886 iterations and 300 nodes (17.67 seconds)
Cbc0035I Maximum depth 77, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1078
Linearization cuts added in total:           1078  (separation time: 0.006556s)
Total solve time:                         17.6983s (17.6983s in branch-and-bound)
Lower bound:                               977814
Upper bound:                               977814  (gap: 0.00%)
Branch-and-bound nodes:                       300
Stats: /tmp/jl_eu4Sxl/model.nl  848 [var]   16 [int]  882 [con]  156 [aux]   1078 [root]     1078 [tot] 0.006556 [sep]  17.6983 [time]  17.6999 [bb]         9.778137e+05 [lower]         9.778137e+05 [upper]     300 [nodes]
Performance of                           FBBT:	   0.213948s,      192 runs. fix:          0 shrnk:     14.087 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.33763s,        6 runs. fix:   0.571429 shrnk:    35.3246 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap44.txt
