solving instance uflp nldep holmberg 41 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4971.0638       54 7.286274
NLP0014I             2         OPT 4971.0639       31 0.259746
Couenne: new cutoff value 4.9710635769e+03 (7.80465 seconds)
Loaded instance "/tmp/jl_TcmUSa/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 1139 (-32) rows, 949 (-140) columns and 4807 (-172) elements
Clp0006I 0  Obj 0 Primal inf 4420.3449 (200)
Clp0006I 97  Obj 5.2258244e-13 Primal inf 2512.7844 (123)
Clp0006I 154  Obj 1074.0021 Primal inf 320.87057 (213)
Clp0006I 251  Obj 3558.5947 Primal inf 200.51076 (234)
Clp0006I 344  Obj 4960.3717
Clp0000I Optimal - objective value 4960.3717
Clp0032I Optimal objective 4960.3717 - 344 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 4960.3717
NLP Heuristic: NLP0014I             3         OPT 4971.0638       25 0.269999
no solution.
Clp0000I Optimal - objective value 4960.3717
Optimality Based BT: 31 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 16 added rows had average density of 2
Cbc0013I At root node, 16 cuts changed objective from 4960.3717 to 4969.6906 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 51 row cuts average 2.0 elements, 17 column cuts (17 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.02 seconds)
Optimality Based BT: 7 improved bounds
Optimality Based BT: 12 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 8 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 147 iterations and 10 nodes (6.68 seconds)
Cbc0035I Maximum depth 4, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1171
Linearization cuts added in total:           1171  (separation time: 0.007s)
Total solve time:                         6.70551s (6.70551s in branch-and-bound)
Lower bound:                              4971.06
Upper bound:                              4971.06  (gap: 0.00%)
Branch-and-bound nodes:                        10
Stats: /tmp/jl_TcmUSa/model.nl  930 [var]   10 [int] 1010 [con]  159 [aux]   1171 [root]     1171 [tot]  0.007 [sep]  6.70551 [time]  6.70736 [bb]         4.971064e+03 [lower]         4.971064e+03 [upper]      10 [nodes]
Performance of                           FBBT:	   0.046537s,       35 runs. fix:          0 shrnk:    13.6806 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.59101s,        5 runs. fix:    23.3333 shrnk:     73.264 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p41
