solving instance uflp nldep holmberg 69 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9681.7581       35 234.25191
Couenne: new cutoff value 9.6817504220e+03 (243.397 seconds)
Loaded instance "/tmp/jl_rlFxgG/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          439 (0 integer)

Coin0506I Presolve 6501 (-120) rows, 6151 (-378) columns and 30661 (-498) elements
Clp0006I 0  Obj 0 Primal inf 3889.0714 (290) Dual inf 9.1565024e+13 (6121)
Clp0029I End of values pass after 91 iterations
Clp0006I 91  Obj 9681.7604 Primal inf 924.83457 (201) Dual inf 3.803841e+14 (6121)
Clp0006I 472  Obj 9675.2297 Dual inf 6957.7479 (173)
Clp0006I 634  Obj 8564.0688
Clp0000I Optimal - objective value 8564.0688
Clp0032I Optimal objective 8564.068841 - 634 iterations time 0.092, Presolve 0.02
Clp0000I Optimal - objective value 8564.0688
NLP Heuristic: NLP0014I             2         OPT 9681.7581       14 1.68463
no solution.
Clp0000I Optimal - objective value 8564.0688
Optimality Based BT: 78 improved bounds
Probing: 30 improved bounds
NLP Heuristic: no solution.
Cbc0031I 29 added rows had average density of 2
Cbc0013I At root node, 29 cuts changed objective from 8564.0688 to 9471.3978 in 9 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 68 row cuts average 2.0 elements, 10 column cuts (10 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (46.48 seconds)
Optimality Based BT: 110 improved bounds
Optimality Based BT: 112 improved bounds
Optimality Based BT: 112 improved bounds
Optimality Based BT: 113 improved bounds
Optimality Based BT: 115 improved bounds
Cbc0010I After 100 nodes, 16 on tree, 1e+50 best solution, best possible 9675.2765 (243.12 seconds)
Optimality Based BT: 108 improved bounds
Cbc0010I After 200 nodes, 30 on tree, 1e+50 best solution, best possible 9676.9288 (261.67 seconds)
Cbc0010I After 300 nodes, 35 on tree, 1e+50 best solution, best possible 9677.2571 (276.46 seconds)
Cbc0010I After 400 nodes, 38 on tree, 1e+50 best solution, best possible 9677.7076 (289.46 seconds)
Cbc0010I After 500 nodes, 33 on tree, 1e+50 best solution, best possible 9678.3367 (303.46 seconds)
Cbc0010I After 600 nodes, 18 on tree, 1e+50 best solution, best possible 9680.8423 (317.29 seconds)
Cbc0001I Search completed - best objective 1e+50, took 9666 iterations and 688 nodes (326.57 seconds)
Cbc0035I Maximum depth 38, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6621
Linearization cuts added in total:           6621  (separation time: 0.059965s)
Total solve time:                         326.665s (326.665s in branch-and-bound)
Lower bound:                              9681.75
Upper bound:                              9681.75  (gap: 0.00%)
Branch-and-bound nodes:                       688
Stats: /tmp/jl_rlFxgG/model.nl 6090 [var]   30 [int] 6260 [con]  439 [aux]   6621 [root]     6621 [tot] 0.059965 [sep]  326.665 [time]  326.675 [bb]         9.681750e+03 [lower]         9.681750e+03 [upper]     688 [nodes]
Performance of                           FBBT:	    8.68269s,      657 runs. fix:          0 shrnk:    16.3459 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    30.9778s,        7 runs. fix:    1.17073 shrnk:    297.868 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p69
