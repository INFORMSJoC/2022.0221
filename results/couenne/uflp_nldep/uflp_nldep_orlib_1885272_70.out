solving instance uflp nldep orlib 62 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 2.4678919250e+06 (0.190198 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 879322.44       46 0.595349
Couenne: new cutoff value 8.7932246285e+05 (0.790114 seconds)
Loaded instance "/tmp/jl_gsCyG1/model.nl"
Constraints:          882
Variables:            848 (16 integer)
Auxiliaries:           96 (0 integer)

Coin0506I Presolve 961 (-27) rows, 852 (-92) columns and 4170 (-168) elements
Clp0006I 0  Obj 0 Primal inf 237.01748 (50)
Clp0006I 94  Obj 842669.41 Primal inf 17.488578 (15)
Clp0006I 105  Obj 849879.51
Clp0000I Optimal - objective value 849879.51
Clp0032I Optimal objective 849879.5131 - 105 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 849879.51
NLP Heuristic: NLP0014I             2         OPT 879322.44       39 0.406868
no solution.
Clp0000I Optimal - objective value 849879.51
Optimality Based BT: 16 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 15 added rows had average density of 2
Cbc0013I At root node, 15 cuts changed objective from 849879.51 to 867208.28 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 30 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.54 seconds)
Optimality Based BT: 8 improved bounds
Optimality Based BT: 10 improved bounds
Optimality Based BT: 9 improved bounds
Optimality Based BT: 11 improved bounds
Cbc0010I After 100 nodes, 14 on tree, 1e+50 best solution, best possible 877479.73 (11.95 seconds)
Cbc0010I After 200 nodes, 23 on tree, 1e+50 best solution, best possible 878528.97 (13.29 seconds)
Cbc0010I After 300 nodes, 26 on tree, 1e+50 best solution, best possible 879322.29 (14.37 seconds)
Cbc0010I After 400 nodes, 36 on tree, 1e+50 best solution, best possible 879322.3 (15.29 seconds)
Cbc0010I After 500 nodes, 46 on tree, 1e+50 best solution, best possible 879322.31 (16.24 seconds)
Cbc0010I After 600 nodes, 50 on tree, 1e+50 best solution, best possible 879322.34 (17.24 seconds)
Cbc0010I After 700 nodes, 54 on tree, 1e+50 best solution, best possible 879322.37 (18.28 seconds)
Cbc0010I After 800 nodes, 46 on tree, 1e+50 best solution, best possible 879322.38 (19.25 seconds)
Cbc0010I After 900 nodes, 20 on tree, 1e+50 best solution, best possible 879322.42 (20.17 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4452 iterations and 942 nodes (20.46 seconds)
Cbc0035I Maximum depth 69, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        988
Linearization cuts added in total:            988  (separation time: 0.00492s)
Total solve time:                         20.4725s (20.4725s in branch-and-bound)
Lower bound:                               879322
Upper bound:                               879322  (gap: 0.00%)
Branch-and-bound nodes:                       942
Stats: /tmp/jl_gsCyG1/model.nl  848 [var]   16 [int]  882 [con]   96 [aux]    988 [root]      988 [tot] 0.00492 [sep]  20.4725 [time]   20.474 [bb]         8.793225e+05 [lower]         8.793225e+05 [upper]     942 [nodes]
Performance of                           FBBT:	   0.766249s,      750 runs. fix:          0 shrnk:    4.15348 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.26431s,        5 runs. fix:          0 shrnk:    25.9661 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap62.txt
