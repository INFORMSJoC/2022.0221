solving instance uflp nldep holmberg 47 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3012.9832       39 2.417391
Couenne: new cutoff value 3.0129824109e+03 (2.66028 seconds)
Loaded instance "/tmp/jl_q03pPt/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          119 (0 integer)

Coin0506I Presolve 1068 (-13) rows, 938 (-111) columns and 4655 (-124) elements
Clp0006I 0  Obj 3.877e-05 Primal inf 204.14908 (90)
Clp0006I 79  Obj 339.96671 Primal inf 174.00077 (88)
Clp0006I 174  Obj 2179.3077
Clp0000I Optimal - objective value 2179.3077
Clp0032I Optimal objective 2179.307727 - 174 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 2179.3077
NLP Heuristic: NLP0014I             2         OPT 3012.9832        9 0.095495
no solution.
Clp0000I Optimal - objective value 2179.3077
Optimality Based BT: 9 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 2179.3077 to 2497.9316 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.60 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 15 on tree, 1e+50 best solution, best possible 2701.4988 (11.07 seconds)
Cbc0010I After 200 nodes, 41 on tree, 1e+50 best solution, best possible 2701.4988 (12.01 seconds)
Cbc0010I After 300 nodes, 61 on tree, 1e+50 best solution, best possible 2810.9652 (13.60 seconds)
Cbc0010I After 400 nodes, 58 on tree, 1e+50 best solution, best possible 2920.176 (15.13 seconds)
Cbc0010I After 500 nodes, 48 on tree, 1e+50 best solution, best possible 3012.9241 (16.30 seconds)
Cbc0010I After 600 nodes, 68 on tree, 1e+50 best solution, best possible 3012.9355 (17.40 seconds)
Cbc0010I After 700 nodes, 84 on tree, 1e+50 best solution, best possible 3012.9407 (18.42 seconds)
Cbc0010I After 800 nodes, 103 on tree, 1e+50 best solution, best possible 3012.951 (19.49 seconds)
Cbc0010I After 900 nodes, 125 on tree, 1e+50 best solution, best possible 3012.9529 (20.55 seconds)
Cbc0010I After 1000 nodes, 129 on tree, 1e+50 best solution, best possible 3012.9567 (21.56 seconds)
Cbc0010I After 1100 nodes, 138 on tree, 1e+50 best solution, best possible 3012.9623 (22.56 seconds)
Cbc0010I After 1200 nodes, 162 on tree, 1e+50 best solution, best possible 3012.964 (23.64 seconds)
Cbc0010I After 1300 nodes, 182 on tree, 1e+50 best solution, best possible 3012.9646 (24.73 seconds)
Cbc0010I After 1400 nodes, 199 on tree, 1e+50 best solution, best possible 3012.9664 (25.77 seconds)
Cbc0010I After 1500 nodes, 214 on tree, 1e+50 best solution, best possible 3012.9677 (26.87 seconds)
Cbc0010I After 1600 nodes, 225 on tree, 1e+50 best solution, best possible 3012.9691 (27.93 seconds)
Cbc0010I After 1700 nodes, 235 on tree, 1e+50 best solution, best possible 3012.9699 (29.04 seconds)
Cbc0010I After 1800 nodes, 250 on tree, 1e+50 best solution, best possible 3012.9705 (30.08 seconds)
Cbc0010I After 1900 nodes, 258 on tree, 1e+50 best solution, best possible 3012.9713 (31.12 seconds)
Cbc0010I After 2000 nodes, 265 on tree, 1e+50 best solution, best possible 3012.9724 (32.15 seconds)
Cbc0010I After 2100 nodes, 272 on tree, 1e+50 best solution, best possible 3012.9735 (33.24 seconds)
Cbc0010I After 2200 nodes, 285 on tree, 1e+50 best solution, best possible 3012.9742 (34.33 seconds)
Cbc0010I After 2300 nodes, 287 on tree, 1e+50 best solution, best possible 3012.9748 (35.34 seconds)
Cbc0010I After 2400 nodes, 305 on tree, 1e+50 best solution, best possible 3012.9749 (36.43 seconds)
Cbc0010I After 2500 nodes, 321 on tree, 1e+50 best solution, best possible 3012.9753 (37.45 seconds)
Cbc0010I After 2600 nodes, 327 on tree, 1e+50 best solution, best possible 3012.9758 (38.55 seconds)
Cbc0010I After 2700 nodes, 331 on tree, 1e+50 best solution, best possible 3012.9763 (39.60 seconds)
Cbc0010I After 2800 nodes, 341 on tree, 1e+50 best solution, best possible 3012.9766 (40.64 seconds)
Cbc0010I After 2900 nodes, 351 on tree, 1e+50 best solution, best possible 3012.9772 (41.76 seconds)
Cbc0010I After 3000 nodes, 354 on tree, 1e+50 best solution, best possible 3012.9775 (42.84 seconds)
Cbc0010I After 3100 nodes, 354 on tree, 1e+50 best solution, best possible 3012.978 (43.81 seconds)
Cbc0010I After 3200 nodes, 365 on tree, 1e+50 best solution, best possible 3012.9782 (44.82 seconds)
Cbc0010I After 3300 nodes, 359 on tree, 1e+50 best solution, best possible 3012.9786 (45.86 seconds)
Cbc0010I After 3400 nodes, 354 on tree, 1e+50 best solution, best possible 3012.9788 (46.88 seconds)
Cbc0010I After 3500 nodes, 355 on tree, 1e+50 best solution, best possible 3012.979 (47.93 seconds)
Cbc0010I After 3600 nodes, 346 on tree, 1e+50 best solution, best possible 3012.9794 (48.93 seconds)
Cbc0010I After 3700 nodes, 352 on tree, 1e+50 best solution, best possible 3012.9796 (49.94 seconds)
Cbc0010I After 3800 nodes, 334 on tree, 1e+50 best solution, best possible 3012.9799 (50.90 seconds)
Cbc0010I After 3900 nodes, 337 on tree, 1e+50 best solution, best possible 3012.9801 (51.90 seconds)
Cbc0010I After 4000 nodes, 338 on tree, 1e+50 best solution, best possible 3012.9802 (52.85 seconds)
Cbc0010I After 4100 nodes, 340 on tree, 1e+50 best solution, best possible 3012.9804 (53.86 seconds)
Cbc0010I After 4200 nodes, 330 on tree, 1e+50 best solution, best possible 3012.9807 (54.78 seconds)
Cbc0010I After 4300 nodes, 320 on tree, 1e+50 best solution, best possible 3012.9809 (55.73 seconds)
Cbc0010I After 4400 nodes, 308 on tree, 1e+50 best solution, best possible 3012.981 (56.74 seconds)
Cbc0010I After 4500 nodes, 298 on tree, 1e+50 best solution, best possible 3012.9812 (57.62 seconds)
Cbc0010I After 4600 nodes, 282 on tree, 1e+50 best solution, best possible 3012.9815 (58.51 seconds)
Cbc0010I After 4700 nodes, 265 on tree, 1e+50 best solution, best possible 3012.9816 (59.46 seconds)
Cbc0010I After 4800 nodes, 235 on tree, 1e+50 best solution, best possible 3012.9819 (60.31 seconds)
Cbc0010I After 4900 nodes, 194 on tree, 1e+50 best solution, best possible 3012.9824 (61.10 seconds)
Cbc0010I After 5000 nodes, 144 on tree, 1e+50 best solution, best possible 3012.9833 (61.71 seconds)
Cbc0010I After 5100 nodes, 94 on tree, 1e+50 best solution, best possible 3012.9857 (62.35 seconds)
Cbc0010I After 5200 nodes, 44 on tree, 1e+50 best solution, best possible 3012.9889 (62.98 seconds)
Cbc0001I Search completed - best objective 1e+50, took 41208 iterations and 5288 nodes (63.58 seconds)
Cbc0035I Maximum depth 117, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1081
Linearization cuts added in total:           1081  (separation time: 0.00628s)
Total solve time:                         63.5964s (63.5964s in branch-and-bound)
Lower bound:                              3012.98
Upper bound:                              3012.98  (gap: 0.00%)
Branch-and-bound nodes:                      5288
Stats: /tmp/jl_q03pPt/model.nl  930 [var]   10 [int] 1010 [con]  119 [aux]   1081 [root]     1081 [tot] 0.00628 [sep]  63.5964 [time]  63.5982 [bb]         3.012982e+03 [lower]         3.012982e+03 [upper]    5288 [nodes]
Performance of                           FBBT:	    4.88979s,     3101 runs. fix: 0.000592906 shrnk:    3.59951 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	   0.846889s,        4 runs. fix:       0.25 shrnk:    11.6218 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p47
