solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 407.85787      167 4.922969
NLP0014I             1      FAILED 407.85787      167 4.940275   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_BEq1cU/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:           97 (0 integer)

Coin0506I Presolve 985 (-22) rows, 875 (-82) columns and 4209 (-182) elements
Clp0006I 0  Obj 1.155e-05 Primal inf 70.554408 (40)
Clp0006I 77  Obj 112.10283 Primal inf 57.29334 (36)
Clp0006I 149  Obj 295.55756
Clp0000I Optimal - objective value 295.55756
Clp0032I Optimal objective 295.5575606 - 149 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 295.55756
NLP Heuristic: NLP0014I             3      FAILED 407.91138      136 15.041747
no solution.
Clp0000I Optimal - objective value 295.55756
Optimality Based BT: Couenne: new cutoff value 1.2507997085e+03 (25.2652 seconds)
Couenne: new cutoff value 1.1606697067e+03 (25.2696 seconds)
Couenne: new cutoff value 8.2680701187e+02 (25.2782 seconds)
Couenne: new cutoff value 8.2109076287e+02 (25.3435 seconds)
0 improved bounds
Probing: Couenne: new cutoff value 4.3245522156e+02 (25.397 seconds)
0 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 295.55756 to 295.55756 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (36.39 seconds)
Optimality Based BT: 12 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.2598862858e+02 (333.642 seconds)
Cbc0010I After 100 nodes, 42 on tree, 1e+50 best solution, best possible 318.46328 (2881.89 seconds)
Cbc0010I After 200 nodes, 91 on tree, 1e+50 best solution, best possible 318.46328 (2883.08 seconds)
Cbc0010I After 300 nodes, 141 on tree, 1e+50 best solution, best possible 318.46328 (2884.00 seconds)
Cbc0010I After 400 nodes, 191 on tree, 1e+50 best solution, best possible 318.46328 (2884.93 seconds)
Cbc0010I After 500 nodes, 239 on tree, 1e+50 best solution, best possible 318.46328 (2885.92 seconds)
Cbc0010I After 600 nodes, 269 on tree, 1e+50 best solution, best possible 318.46328 (2886.90 seconds)
Cbc0010I After 700 nodes, 295 on tree, 1e+50 best solution, best possible 319.05692 (2913.21 seconds)
Cbc0010I After 800 nodes, 341 on tree, 1e+50 best solution, best possible 319.05692 (2914.25 seconds)
Cbc0010I After 900 nodes, 391 on tree, 1e+50 best solution, best possible 319.05692 (2915.07 seconds)
Cbc0010I After 1000 nodes, 440 on tree, 1e+50 best solution, best possible 319.05692 (2915.90 seconds)
Cbc0010I After 1100 nodes, 490 on tree, 1e+50 best solution, best possible 319.05692 (2916.78 seconds)
Cbc0010I After 1200 nodes, 540 on tree, 1e+50 best solution, best possible 319.05692 (2917.64 seconds)
Cbc0010I After 1300 nodes, 590 on tree, 1e+50 best solution, best possible 319.05692 (2918.62 seconds)
Couenne: new cutoff value 4.1042353636e+02 (2929.41 seconds)
Cbc0010I After 1400 nodes, 620 on tree, 1e+50 best solution, best possible 331.58129 (2962.00 seconds)
Cbc0010I After 1500 nodes, 662 on tree, 1e+50 best solution, best possible 331.58129 (2963.09 seconds)
Cbc0010I After 1600 nodes, 702 on tree, 1e+50 best solution, best possible 331.58129 (2964.16 seconds)
Cbc0010I After 1700 nodes, 726 on tree, 1e+50 best solution, best possible 331.58129 (2964.97 seconds)
Cbc0010I After 1800 nodes, 754 on tree, 1e+50 best solution, best possible 331.58129 (2965.88 seconds)
Cbc0010I After 1900 nodes, 787 on tree, 1e+50 best solution, best possible 331.58129 (2966.80 seconds)
Couenne: new cutoff value 4.1036971673e+02 (2977.87 seconds)
Cbc0010I After 2000 nodes, 804 on tree, 1e+50 best solution, best possible 332.57765 (2967.85 seconds)
Cbc0010I After 2100 nodes, 842 on tree, 1e+50 best solution, best possible 332.57765 (2968.96 seconds)
Cbc0010I After 2200 nodes, 879 on tree, 1e+50 best solution, best possible 333.02559 (2970.18 seconds)
Cbc0010I After 2300 nodes, 924 on tree, 1e+50 best solution, best possible 333.02559 (2971.25 seconds)
Cbc0010I After 2400 nodes, 959 on tree, 1e+50 best solution, best possible 338.52163 (2972.34 seconds)
Cbc0010I After 2500 nodes, 996 on tree, 1e+50 best solution, best possible 343.01528 (2973.37 seconds)
Cbc0010I After 2600 nodes, 1031 on tree, 1e+50 best solution, best possible 343.67907 (2974.49 seconds)
Cbc0010I After 2700 nodes, 1075 on tree, 1e+50 best solution, best possible 343.67907 (2988.46 seconds)
Cbc0010I After 2800 nodes, 1107 on tree, 1e+50 best solution, best possible 344.13402 (2989.60 seconds)
Cbc0010I After 2900 nodes, 1139 on tree, 1e+50 best solution, best possible 344.27069 (2990.63 seconds)
Cbc0010I After 3000 nodes, 1170 on tree, 1e+50 best solution, best possible 344.67544 (2991.74 seconds)
Cbc0010I After 3100 nodes, 1216 on tree, 1e+50 best solution, best possible 344.67544 (2992.87 seconds)
Cbc0010I After 3200 nodes, 1249 on tree, 1e+50 best solution, best possible 345.12361 (2994.04 seconds)
Cbc0010I After 3300 nodes, 1279 on tree, 1e+50 best solution, best possible 345.23515 (3014.59 seconds)
Cbc0010I After 3400 nodes, 1311 on tree, 1e+50 best solution, best possible 347.04369 (3017.91 seconds)
Cbc0010I After 3500 nodes, 1343 on tree, 1e+50 best solution, best possible 348.60774 (3018.99 seconds)
Cbc0010I After 3600 nodes, 1385 on tree, 1e+50 best solution, best possible 348.80046 (3027.72 seconds)
Optimality Based BT: 4 improved bounds
Cbc0010I After 3700 nodes, 1411 on tree, 1e+50 best solution, best possible 349.26773 (3052.10 seconds)
Cbc0010I After 3800 nodes, 1435 on tree, 1e+50 best solution, best possible 350.00659 (3053.31 seconds)
Cbc0010I After 3900 nodes, 1465 on tree, 1e+50 best solution, best possible 350.11927 (3054.40 seconds)
Cbc0010I After 4000 nodes, 1497 on tree, 1e+50 best solution, best possible 350.66988 (3055.54 seconds)
Cbc0010I After 4100 nodes, 1528 on tree, 1e+50 best solution, best possible 351.33007 (3079.21 seconds)
Cbc0010I After 4200 nodes, 1556 on tree, 1e+50 best solution, best possible 352.84976 (3095.66 seconds)
Cbc0010I After 4300 nodes, 1596 on tree, 1e+50 best solution, best possible 353.26853 (3096.71 seconds)
Cbc0010I After 4400 nodes, 1635 on tree, 1e+50 best solution, best possible 353.26853 (3097.68 seconds)
Cbc0010I After 4500 nodes, 1681 on tree, 1e+50 best solution, best possible 353.26853 (3098.60 seconds)
Cbc0010I After 4600 nodes, 1716 on tree, 1e+50 best solution, best possible 353.26853 (3099.45 seconds)
Cbc0010I After 4700 nodes, 1750 on tree, 1e+50 best solution, best possible 353.26853 (3100.40 seconds)
Cbc0010I After 4800 nodes, 1789 on tree, 1e+50 best solution, best possible 353.26853 (3101.30 seconds)
Couenne: new cutoff value 4.0930858806e+02 (3112.15 seconds)
Couenne: new cutoff value 4.0929851868e+02 (3112.16 seconds)
Cbc0010I After 4900 nodes, 1826 on tree, 1e+50 best solution, best possible 353.4138 (3102.44 seconds)
Cbc0010I After 5000 nodes, 1856 on tree, 1e+50 best solution, best possible 354.0442 (3103.52 seconds)
Cbc0010I After 5100 nodes, 1881 on tree, 1e+50 best solution, best possible 354.07238 (3104.55 seconds)
Cbc0010I After 5200 nodes, 1910 on tree, 1e+50 best solution, best possible 354.24282 (3105.59 seconds)
Cbc0010I After 5300 nodes, 1943 on tree, 1e+50 best solution, best possible 354.45535 (3106.70 seconds)
Cbc0010I After 5400 nodes, 1982 on tree, 1e+50 best solution, best possible 354.47712 (3107.82 seconds)
Cbc0010I After 5500 nodes, 2014 on tree, 1e+50 best solution, best possible 355.6008 (3109.00 seconds)
Cbc0010I After 5600 nodes, 2048 on tree, 1e+50 best solution, best possible 356.14357 (3109.98 seconds)
Cbc0010I After 5700 nodes, 2081 on tree, 1e+50 best solution, best possible 356.43604 (3111.09 seconds)
Cbc0010I After 5800 nodes, 2121 on tree, 1e+50 best solution, best possible 356.44954 (3117.68 seconds)
Cbc0010I After 5900 nodes, 2143 on tree, 1e+50 best solution, best possible 357.19224 (3118.74 seconds)
Cbc0010I After 6000 nodes, 2186 on tree, 1e+50 best solution, best possible 357.19224 (3119.86 seconds)
Cbc0010I After 6100 nodes, 2207 on tree, 1e+50 best solution, best possible 357.35255 (3120.98 seconds)
Cbc0010I After 6200 nodes, 2251 on tree, 1e+50 best solution, best possible 357.35255 (3121.99 seconds)
Cbc0010I After 6300 nodes, 2278 on tree, 1e+50 best solution, best possible 357.42097 (3123.13 seconds)
Cbc0010I After 6400 nodes, 2310 on tree, 1e+50 best solution, best possible 357.89536 (3124.12 seconds)
Cbc0010I After 6500 nodes, 2353 on tree, 1e+50 best solution, best possible 357.90388 (3153.93 seconds)
Cbc0010I After 6600 nodes, 2385 on tree, 1e+50 best solution, best possible 358.0431 (3155.08 seconds)
Cbc0010I After 6700 nodes, 2416 on tree, 1e+50 best solution, best possible 358.18861 (3156.10 seconds)
Cbc0010I After 6800 nodes, 2448 on tree, 1e+50 best solution, best possible 358.4049 (3157.25 seconds)
Cbc0010I After 6900 nodes, 2473 on tree, 1e+50 best solution, best possible 358.41883 (3158.38 seconds)
Cbc0010I After 7000 nodes, 2511 on tree, 1e+50 best solution, best possible 358.63668 (3159.41 seconds)
Cbc0010I After 7100 nodes, 2537 on tree, 1e+50 best solution, best possible 358.88615 (3160.43 seconds)
Cbc0010I After 7200 nodes, 2570 on tree, 1e+50 best solution, best possible 359.1608 (3163.39 seconds)
Cbc0010I After 7300 nodes, 2599 on tree, 1e+50 best solution, best possible 359.34893 (3178.31 seconds)
Cbc0010I After 7400 nodes, 2618 on tree, 1e+50 best solution, best possible 359.44809 (3197.85 seconds)
Cbc0010I After 7500 nodes, 2638 on tree, 1e+50 best solution, best possible 359.69168 (3198.85 seconds)
Cbc0010I After 7600 nodes, 2678 on tree, 1e+50 best solution, best possible 359.85219 (3199.92 seconds)
Cbc0010I After 7700 nodes, 2716 on tree, 1e+50 best solution, best possible 359.87567 (3200.95 seconds)
Cbc0010I After 7800 nodes, 2753 on tree, 1e+50 best solution, best possible 359.95024 (3201.97 seconds)
Cbc0010I After 7900 nodes, 2800 on tree, 1e+50 best solution, best possible 359.95024 (3203.15 seconds)
Cbc0010I After 8000 nodes, 2850 on tree, 1e+50 best solution, best possible 359.95024 (3204.13 seconds)
Cbc0010I After 8100 nodes, 2894 on tree, 1e+50 best solution, best possible 359.95024 (3205.00 seconds)
Cbc0010I After 8200 nodes, 2933 on tree, 1e+50 best solution, best possible 359.95024 (3205.86 seconds)
Cbc0010I After 8300 nodes, 2974 on tree, 1e+50 best solution, best possible 359.95024 (3206.80 seconds)
Cbc0004I Integer solution of 407.07944 found after 74479 iterations and 8395 nodes (3207.78 seconds)
Cbc0010I After 8400 nodes, 1988 on tree, 407.07944 best solution, best possible 359.95024 (3208.58 seconds)
Cbc0010I After 8500 nodes, 2028 on tree, 407.07944 best solution, best possible 360.42386 (3209.68 seconds)
Cbc0010I After 8600 nodes, 2065 on tree, 407.07944 best solution, best possible 360.4284 (3210.77 seconds)
Cbc0010I After 8700 nodes, 2093 on tree, 407.07944 best solution, best possible 360.57804 (3211.90 seconds)
Cbc0010I After 8800 nodes, 2119 on tree, 407.07944 best solution, best possible 360.69437 (3213.04 seconds)
Cbc0010I After 8900 nodes, 2150 on tree, 407.07944 best solution, best possible 360.74545 (3214.14 seconds)
Cbc0010I After 9000 nodes, 2168 on tree, 407.07944 best solution, best possible 360.95672 (3215.22 seconds)
Cbc0010I After 9100 nodes, 2189 on tree, 407.07944 best solution, best possible 361.4861 (3216.26 seconds)
Cbc0010I After 9200 nodes, 2209 on tree, 407.07944 best solution, best possible 361.59247 (3217.26 seconds)
Cbc0010I After 9300 nodes, 2240 on tree, 407.07944 best solution, best possible 361.63912 (3218.27 seconds)
Cbc0010I After 9400 nodes, 2280 on tree, 407.07944 best solution, best possible 361.69052 (3219.34 seconds)
Cbc0010I After 9500 nodes, 2313 on tree, 407.07944 best solution, best possible 361.74429 (3220.26 seconds)
Cbc0010I After 9600 nodes, 2350 on tree, 407.07944 best solution, best possible 361.80362 (3221.47 seconds)
Cbc0010I After 9700 nodes, 2365 on tree, 407.07944 best solution, best possible 361.91911 (3232.77 seconds)
Cbc0010I After 9800 nodes, 2380 on tree, 407.07944 best solution, best possible 361.92239 (3258.23 seconds)
Cbc0010I After 9900 nodes, 2411 on tree, 407.07944 best solution, best possible 362.03785 (3259.30 seconds)
Cbc0010I After 10000 nodes, 2442 on tree, 407.07944 best solution, best possible 362.16855 (3260.40 seconds)
Cbc0010I After 10100 nodes, 2481 on tree, 407.07944 best solution, best possible 362.16855 (3261.40 seconds)
Cbc0010I After 10200 nodes, 2495 on tree, 407.07944 best solution, best possible 362.23664 (3262.33 seconds)
Cbc0010I After 10300 nodes, 2512 on tree, 407.07944 best solution, best possible 362.24327 (3270.67 seconds)
Cbc0010I After 10400 nodes, 2534 on tree, 407.07944 best solution, best possible 362.41211 (3271.70 seconds)
Cbc0010I After 10500 nodes, 2572 on tree, 407.07944 best solution, best possible 362.58098 (3272.78 seconds)
Cbc0010I After 10600 nodes, 2601 on tree, 407.07944 best solution, best possible 362.72885 (3273.75 seconds)
Cbc0010I After 10700 nodes, 2626 on tree, 407.07944 best solution, best possible 362.73596 (3274.62 seconds)
Cbc0010I After 10800 nodes, 2666 on tree, 407.07944 best solution, best possible 362.73596 (3275.62 seconds)
Cbc0010I After 10900 nodes, 2707 on tree, 407.07944 best solution, best possible 362.84178 (3276.64 seconds)
Cbc0010I After 11000 nodes, 2745 on tree, 407.07944 best solution, best possible 362.9058 (3277.69 seconds)
Cbc0010I After 11100 nodes, 2771 on tree, 407.07944 best solution, best possible 363.04504 (3278.68 seconds)
Cbc0010I After 11200 nodes, 2806 on tree, 407.07944 best solution, best possible 363.04504 (3279.64 seconds)
Cbc0010I After 11300 nodes, 2847 on tree, 407.07944 best solution, best possible 363.04504 (3280.81 seconds)
Cbc0010I After 11400 nodes, 2883 on tree, 407.07944 best solution, best possible 363.1175 (3288.90 seconds)
Cbc0010I After 11500 nodes, 2916 on tree, 407.07944 best solution, best possible 363.12985 (3290.00 seconds)
Cbc0010I After 11600 nodes, 2947 on tree, 407.07944 best solution, best possible 363.13142 (3291.03 seconds)
Cbc0010I After 11700 nodes, 2966 on tree, 407.07944 best solution, best possible 363.63732 (3292.03 seconds)
Cbc0010I After 11800 nodes, 2986 on tree, 407.07944 best solution, best possible 363.68059 (3293.07 seconds)
Cbc0010I After 11900 nodes, 3003 on tree, 407.07944 best solution, best possible 363.73176 (3293.99 seconds)
Cbc0010I After 12000 nodes, 3049 on tree, 407.07944 best solution, best possible 363.73176 (3295.03 seconds)
Cbc0010I After 12100 nodes, 3069 on tree, 407.07944 best solution, best possible 364.05075 (3295.97 seconds)
Cbc0010I After 12200 nodes, 3106 on tree, 407.07944 best solution, best possible 364.09847 (3296.92 seconds)
Cbc0010I After 12300 nodes, 3144 on tree, 407.07944 best solution, best possible 364.12137 (3297.86 seconds)
Cbc0010I After 12400 nodes, 3184 on tree, 407.07944 best solution, best possible 364.12848 (3298.85 seconds)
Cbc0010I After 12500 nodes, 3225 on tree, 407.07944 best solution, best possible 364.12848 (3299.82 seconds)
Cbc0010I After 12600 nodes, 3267 on tree, 407.07944 best solution, best possible 364.3394 (3302.59 seconds)
Cbc0010I After 12700 nodes, 3305 on tree, 407.07944 best solution, best possible 364.36378 (3303.66 seconds)
Cbc0010I After 12800 nodes, 3325 on tree, 407.07944 best solution, best possible 364.36512 (3304.67 seconds)
Cbc0010I After 12900 nodes, 3362 on tree, 407.07944 best solution, best possible 364.37685 (3305.66 seconds)
Cbc0010I After 13000 nodes, 3381 on tree, 407.07944 best solution, best possible 364.43756 (3306.63 seconds)
Cbc0010I After 13100 nodes, 3419 on tree, 407.07944 best solution, best possible 364.43756 (3307.75 seconds)
Cbc0010I After 13200 nodes, 3459 on tree, 407.07944 best solution, best possible 364.43756 (3308.89 seconds)
Cbc0010I After 13300 nodes, 3500 on tree, 407.07944 best solution, best possible 364.44868 (3310.01 seconds)
Cbc0010I After 13400 nodes, 3539 on tree, 407.07944 best solution, best possible 364.58112 (3311.02 seconds)
Cbc0010I After 13500 nodes, 3577 on tree, 407.07944 best solution, best possible 364.62138 (3379.17 seconds)
Cbc0010I After 13600 nodes, 3614 on tree, 407.07944 best solution, best possible 364.63669 (3380.16 seconds)
Cbc0010I After 13700 nodes, 3646 on tree, 407.07944 best solution, best possible 364.67845 (3381.28 seconds)
Cbc0010I After 13800 nodes, 3676 on tree, 407.07944 best solution, best possible 364.71655 (3392.97 seconds)
Cbc0010I After 13900 nodes, 3711 on tree, 407.07944 best solution, best possible 364.7268 (3394.00 seconds)
Cbc0010I After 14000 nodes, 3744 on tree, 407.07944 best solution, best possible 364.82547 (3395.10 seconds)
Cbc0010I After 14100 nodes, 3762 on tree, 407.07944 best solution, best possible 364.8831 (3396.04 seconds)
Cbc0010I After 14200 nodes, 3785 on tree, 407.07944 best solution, best possible 364.8866 (3396.94 seconds)
Cbc0010I After 14300 nodes, 3824 on tree, 407.07944 best solution, best possible 364.89372 (3397.88 seconds)
Cbc0010I After 14400 nodes, 3867 on tree, 407.07944 best solution, best possible 364.89372 (3398.88 seconds)
Cbc0010I After 14500 nodes, 3910 on tree, 407.07944 best solution, best possible 364.9048 (3407.08 seconds)
Cbc0010I After 14600 nodes, 3936 on tree, 407.07944 best solution, best possible 365.06278 (3408.04 seconds)
Cbc0010I After 14700 nodes, 3972 on tree, 407.07944 best solution, best possible 365.09904 (3409.03 seconds)
Cbc0010I After 14800 nodes, 4002 on tree, 407.07944 best solution, best possible 365.12399 (3410.00 seconds)
Cbc0010I After 14900 nodes, 4041 on tree, 407.07944 best solution, best possible 365.19202 (3410.99 seconds)
Cbc0010I After 15000 nodes, 4083 on tree, 407.07944 best solution, best possible 365.2028 (3412.07 seconds)
Cbc0010I After 15100 nodes, 4126 on tree, 407.07944 best solution, best possible 365.2028 (3413.16 seconds)
Cbc0010I After 15200 nodes, 4163 on tree, 407.07944 best solution, best possible 365.2028 (3414.22 seconds)
Cbc0010I After 15300 nodes, 4205 on tree, 407.07944 best solution, best possible 365.23546 (3415.28 seconds)
Cbc0010I After 15400 nodes, 4245 on tree, 407.07944 best solution, best possible 365.26096 (3416.31 seconds)
Cbc0010I After 15500 nodes, 4285 on tree, 407.07944 best solution, best possible 365.26808 (3417.24 seconds)
Cbc0010I After 15600 nodes, 4325 on tree, 407.07944 best solution, best possible 365.26808 (3418.21 seconds)
Cbc0010I After 15700 nodes, 4365 on tree, 407.07944 best solution, best possible 365.43406 (3419.20 seconds)
Cbc0010I After 15800 nodes, 4406 on tree, 407.07944 best solution, best possible 365.50496 (3420.22 seconds)
Cbc0010I After 15900 nodes, 4446 on tree, 407.07944 best solution, best possible 365.57716 (3421.21 seconds)
Cbc0010I After 16000 nodes, 4486 on tree, 407.07944 best solution, best possible 365.57716 (3422.25 seconds)
Cbc0010I After 16100 nodes, 4524 on tree, 407.07944 best solution, best possible 365.57716 (3423.33 seconds)
Cbc0010I After 16200 nodes, 4562 on tree, 407.07944 best solution, best possible 365.57716 (3424.45 seconds)
Cbc0010I After 16300 nodes, 4594 on tree, 407.07944 best solution, best possible 365.58369 (3425.50 seconds)
Cbc0010I After 16400 nodes, 4633 on tree, 407.07944 best solution, best possible 365.60676 (3426.53 seconds)
Cbc0010I After 16500 nodes, 4671 on tree, 407.07944 best solution, best possible 365.67377 (3427.56 seconds)
Cbc0010I After 16600 nodes, 4703 on tree, 407.07944 best solution, best possible 365.67377 (3428.50 seconds)
Cbc0010I After 16700 nodes, 4746 on tree, 407.07944 best solution, best possible 365.67377 (3429.53 seconds)
Cbc0010I After 16800 nodes, 4788 on tree, 407.07944 best solution, best possible 365.67377 (3430.57 seconds)
Cbc0010I After 16900 nodes, 4832 on tree, 407.07944 best solution, best possible 365.74966 (3431.64 seconds)
Cbc0010I After 17000 nodes, 4872 on tree, 407.07944 best solution, best possible 365.84643 (3432.72 seconds)
Cbc0010I After 17100 nodes, 4911 on tree, 407.07944 best solution, best possible 365.84797 (3433.78 seconds)
Cbc0010I After 17200 nodes, 4948 on tree, 407.07944 best solution, best possible 365.86149 (3434.77 seconds)
Cbc0010I After 17300 nodes, 4980 on tree, 407.07944 best solution, best possible 365.86363 (3546.72 seconds)
Cbc0010I After 17400 nodes, 5017 on tree, 407.07944 best solution, best possible 365.90463 (3547.72 seconds)
Cbc0010I After 17500 nodes, 5049 on tree, 407.07944 best solution, best possible 365.90972 (3548.61 seconds)
Cbc0010I After 17600 nodes, 5087 on tree, 407.07944 best solution, best possible 365.94625 (3549.56 seconds)
Cbc0010I After 17700 nodes, 5119 on tree, 407.07944 best solution, best possible 365.95367 (3550.53 seconds)
Cbc0010I After 17800 nodes, 5155 on tree, 407.07944 best solution, best possible 365.96931 (3551.55 seconds)
Cbc0010I After 17900 nodes, 5184 on tree, 407.07944 best solution, best possible 365.98286 (3552.60 seconds)
Cbc0010I After 18000 nodes, 5225 on tree, 407.07944 best solution, best possible 365.98286 (3553.72 seconds)
Cbc0010I After 18100 nodes, 5262 on tree, 407.07944 best solution, best possible 366.00687 (3554.84 seconds)
Cbc0010I After 18200 nodes, 5303 on tree, 407.07944 best solution, best possible 366.00741 (3555.97 seconds)
Cbc0010I After 18300 nodes, 5332 on tree, 407.07944 best solution, best possible 366.01913 (3557.05 seconds)
Cbc0010I After 18400 nodes, 5370 on tree, 407.07944 best solution, best possible 366.0987 (3558.14 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 407.07944 (best possible 366.0987), took 169363 iterations and 18483 nodes (3591.40 seconds)
Cbc0035I Maximum depth 367, 139 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1007
Linearization cuts added in total:           1007  (separation time: 0.004653s)
Total solve time:                         3591.42s (3591.42s in branch-and-bound)
Lower bound:                              366.099
Upper bound:                              407.079  (gap: 11.16%)
Branch-and-bound nodes:                     18483
Stats: /tmp/jl_BEq1cU/model.nl  860 [var]   20 [int]  880 [con]   97 [aux]   1007 [root]     1007 [tot] 0.004653 [sep]  3591.42 [time]  3591.42 [bb]         3.660987e+02 [lower]         4.070794e+02 [upper]   18483 [nodes]
Performance of                           FBBT:	    22.8337s,    26667 runs. fix: 2.96408e-05 shrnk: 0.00486144 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.37967s,        7 runs. fix:   0.146789 shrnk:     7.7596 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt
