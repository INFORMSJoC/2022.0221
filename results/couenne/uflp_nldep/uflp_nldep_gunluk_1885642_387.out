solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-8.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 338.74222       60 59.119049
NLP0014I             2         OPT 338.8737       38 1.668434
Couenne: new cutoff value 3.3887386588e+02 (63.8957 seconds)
Loaded instance "/tmp/jl_V798xH/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14669.572 (520)
Clp0006I 152  Obj 1.6819266e-13 Primal inf 28849.002 (263)
Clp0006I 304  Obj 113.22279 Primal inf 325.94418 (143)
Clp0006I 456  Obj 336.60868 Primal inf 235.19092 (63)
Clp0006I 565  Obj 337.98712
Clp0000I Optimal - objective value 337.98712
Clp0032I Optimal objective 337.9871202 - 565 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 337.98712
NLP Heuristic: NLP0014I             3         OPT 338.74222       31 1.479802
no solution.
Clp0000I Optimal - objective value 337.98712
Optimality Based BT: 67 improved bounds
Probing: 4 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 68 added rows had average density of 2
Cbc0013I At root node, 68 cuts changed objective from 337.98712 to 338.68614 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 498 row cuts average 2.0 elements, 14 column cuts (14 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (17.35 seconds)
Optimality Based BT: 63 improved bounds
Optimality Based BT: 61 improved bounds
Optimality Based BT: 27 improved bounds
Optimality Based BT: 28 improved bounds
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 338.7387 (108.18 seconds)
Cbc0010I After 200 nodes, 75 on tree, 1e+50 best solution, best possible 338.7387 (114.65 seconds)
Cbc0010I After 300 nodes, 124 on tree, 1e+50 best solution, best possible 338.7387 (120.95 seconds)
Cbc0010I After 400 nodes, 174 on tree, 1e+50 best solution, best possible 338.7387 (127.13 seconds)
Couenne: new cutoff value 3.3874415837e+02 (195.974 seconds)
Couenne: new cutoff value 3.3874282897e+02 (196.048 seconds)
Cbc0004I Integer solution of 338.74283 found after 3653 iterations and 480 nodes (131.96 seconds)
Cbc0001I Search completed - best objective 338.7428289673311, took 3967 iterations and 488 nodes (148.51 seconds)
Cbc0035I Maximum depth 239, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.02818s)
Total solve time:                         148.579s (148.579s in branch-and-bound)
Lower bound:                              338.743
Upper bound:                              338.743  (gap: 0.00%)
Branch-and-bound nodes:                       488
Stats: /tmp/jl_V798xH/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.02818 [sep]  148.579 [time]  148.586 [bb]         3.387428e+02 [lower]         3.387428e+02 [upper]     488 [nodes]
Performance of                           FBBT:	    2.97672s,      518 runs. fix:          0 shrnk:    43.8944 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    15.6103s,        5 runs. fix:        6.4 shrnk:    217.927 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-8.txt
f0 = 0.0608746304643761
f0 = 0.07940169191005579
f0 = 0.005293446127337053
f0 = 0.07587272782516441
f0 = 0.02911395370035379
f0 = 0.04058308697625074
f0 = 0.0441120510611421
f0 = 0.05822790740070758
f0 = 0.044994292082364946
f0 = 0.08734186110106136
f0 = 0.06175687148559894
f0 = 0.0882241021222842
f0 = 0.06705031761293599
f0 = 0.00882241021222842
f0 = 0.03881860493380505
f0 = 0.014998097360788314
f0 = 0.01852706144567968
f0 = 0.01852706144567968
f0 = 0.07940169191005579
f0 = 0.033525158806467996
f0 = 0.0061756871485598944
f0 = 0.02205602553057105
f0 = 0.028231712679130945
f0 = 0.009704651233451262
f0 = 0.05116997923092483
f0 = 0.00441120510611421
f0 = 0.08557737905861568
f0 = 0.03087843574279947
f0 = 0.003528964084891368
f0 = 0.005293446127337053
f0 = 0.04675877412481063
f0 = 0.07322600476149589
f0 = 0.05822790740070758
f0 = 0.011469133275896945
f0 = 0.055581184337039055
f0 = 0.08116617395250147
f0 = 0.08028393293127861
f0 = 0.04234756901869642
f0 = 0.028231712679130945
f0 = 0.024702748594239578
