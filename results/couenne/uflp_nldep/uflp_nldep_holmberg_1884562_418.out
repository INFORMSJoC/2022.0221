solving instance uflp nldep holmberg 42 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3728.7819       49 8.860603
Couenne: new cutoff value 3.7287808542e+03 (9.58583 seconds)
Loaded instance "/tmp/jl_6RwJpd/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1838 (-23) rows, 1678 (-121) columns and 8315 (-144) elements
Clp0006I 0  Obj 7.902e-05 Primal inf 173.36556 (80)
Clp0006I 94  Obj 7.902e-05 Primal inf 169239.2 (172)
Clp0006I 205  Obj 1834.2611 Primal inf 232.88746 (153)
Clp0006I 264  Obj 2449.3793
Clp0000I Optimal - objective value 2449.3793
Clp0032I Optimal objective 2449.379267 - 264 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 2449.3793
NLP Heuristic: NLP0014I             2      FAILED 3720.2845      222 75.208064
NLP0014I *           1         OPT 3723.1741       91 2.735867   resolve robustness
no solution.
Clp0000I Optimal - objective value 2449.3793
Optimality Based BT: 1 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 2449.3793 to 2465.0282 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (622.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 35 on tree, 1e+50 best solution, best possible 2747.8532 (2825.93 seconds)
Cbc0010I After 200 nodes, 81 on tree, 1e+50 best solution, best possible 2747.8532 (2828.60 seconds)
Cbc0010I After 300 nodes, 131 on tree, 1e+50 best solution, best possible 2747.8532 (2831.33 seconds)
Cbc0010I After 400 nodes, 180 on tree, 1e+50 best solution, best possible 2747.8532 (2833.02 seconds)
Cbc0010I After 500 nodes, 230 on tree, 1e+50 best solution, best possible 2747.8532 (2834.99 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 2747.8532 (2837.02 seconds)
Cbc0010I After 700 nodes, 330 on tree, 1e+50 best solution, best possible 2747.8532 (2838.92 seconds)
Cbc0010I After 800 nodes, 380 on tree, 1e+50 best solution, best possible 2747.8532 (2840.99 seconds)
Couenne: new cutoff value 3.6928709762e+03 (2851.14 seconds)
Couenne: new cutoff value 3.6928135288e+03 (2851.17 seconds)
Cbc0004I Integer solution of 3692.8135 found after 4795 iterations and 822 nodes (2841.51 seconds)
Cbc0010I After 900 nodes, 327 on tree, 3692.8135 best solution, best possible 2864.9192 (2843.40 seconds)
Cbc0010I After 1000 nodes, 371 on tree, 3692.8135 best solution, best possible 2864.9192 (2846.16 seconds)
Cbc0010I After 1100 nodes, 412 on tree, 3692.8135 best solution, best possible 2912.9166 (2848.76 seconds)
Cbc0010I After 1200 nodes, 449 on tree, 3692.8135 best solution, best possible 2918.0614 (2851.60 seconds)
Cbc0010I After 1300 nodes, 487 on tree, 3692.8135 best solution, best possible 2964.5038 (2854.52 seconds)
Cbc0010I After 1400 nodes, 530 on tree, 3692.8135 best solution, best possible 2964.5038 (2857.23 seconds)
Cbc0010I After 1500 nodes, 569 on tree, 3692.8135 best solution, best possible 2965.2485 (2859.79 seconds)
Cbc0010I After 1600 nodes, 610 on tree, 3692.8135 best solution, best possible 2965.2485 (2862.80 seconds)
Cbc0010I After 1700 nodes, 653 on tree, 3692.8135 best solution, best possible 2978.7107 (2865.25 seconds)
Cbc0010I After 1800 nodes, 687 on tree, 3692.8135 best solution, best possible 2993.2648 (2868.19 seconds)
Cbc0010I After 1900 nodes, 725 on tree, 3692.8135 best solution, best possible 3004.2372 (2870.99 seconds)
Cbc0010I After 2000 nodes, 763 on tree, 3692.8135 best solution, best possible 3018.0599 (2873.86 seconds)
Cbc0010I After 2100 nodes, 807 on tree, 3692.8135 best solution, best possible 3018.0599 (2876.50 seconds)
Cbc0010I After 2200 nodes, 848 on tree, 3692.8135 best solution, best possible 3018.9534 (2879.25 seconds)
Cbc0010I After 2300 nodes, 887 on tree, 3692.8135 best solution, best possible 3024.457 (2881.96 seconds)
Cbc0010I After 2400 nodes, 929 on tree, 3692.8135 best solution, best possible 3024.457 (2884.63 seconds)
Cbc0010I After 2500 nodes, 968 on tree, 3692.8135 best solution, best possible 3043.7485 (2887.75 seconds)
Cbc0010I After 2600 nodes, 1005 on tree, 3692.8135 best solution, best possible 3045.6455 (2896.10 seconds)
Cbc0010I After 2700 nodes, 1044 on tree, 3692.8135 best solution, best possible 3050.1006 (2898.86 seconds)
Cbc0010I After 2800 nodes, 1087 on tree, 3692.8135 best solution, best possible 3050.1006 (2901.84 seconds)
Cbc0010I After 2900 nodes, 1127 on tree, 3692.8135 best solution, best possible 3058.4176 (2904.63 seconds)
Cbc0010I After 3000 nodes, 1161 on tree, 3692.8135 best solution, best possible 3064.0587 (2907.44 seconds)
Cbc0010I After 3100 nodes, 1198 on tree, 3692.8135 best solution, best possible 3070.8986 (2910.31 seconds)
Cbc0010I After 3200 nodes, 1241 on tree, 3692.8135 best solution, best possible 3070.8986 (2913.16 seconds)
Cbc0010I After 3300 nodes, 1277 on tree, 3692.8135 best solution, best possible 3071.3341 (2915.69 seconds)
Cbc0010I After 3400 nodes, 1314 on tree, 3692.8135 best solution, best possible 3072.5095 (2918.33 seconds)
Cbc0010I After 3500 nodes, 1352 on tree, 3692.8135 best solution, best possible 3073.7538 (2921.23 seconds)
Cbc0010I After 3600 nodes, 1390 on tree, 3692.8135 best solution, best possible 3075.4556 (2924.28 seconds)
Cbc0010I After 3700 nodes, 1427 on tree, 3692.8135 best solution, best possible 3075.7892 (2927.22 seconds)
Cbc0010I After 3800 nodes, 1467 on tree, 3692.8135 best solution, best possible 3077.3509 (2930.07 seconds)
Cbc0010I After 3900 nodes, 1507 on tree, 3692.8135 best solution, best possible 3084.1062 (2933.13 seconds)
Cbc0010I After 4000 nodes, 1549 on tree, 3692.8135 best solution, best possible 3084.1062 (2935.71 seconds)
Cbc0010I After 4100 nodes, 1586 on tree, 3692.8135 best solution, best possible 3086.9077 (2938.56 seconds)
Cbc0010I After 4200 nodes, 1619 on tree, 3692.8135 best solution, best possible 3089.7473 (2941.46 seconds)
Cbc0010I After 4300 nodes, 1661 on tree, 3692.8135 best solution, best possible 3089.7473 (2944.46 seconds)
Cbc0010I After 4400 nodes, 1701 on tree, 3692.8135 best solution, best possible 3090.4583 (2947.21 seconds)
Cbc0010I After 4500 nodes, 1734 on tree, 3692.8135 best solution, best possible 3090.9458 (2949.87 seconds)
Cbc0010I After 4600 nodes, 1771 on tree, 3692.8135 best solution, best possible 3092.833 (2952.65 seconds)
Cbc0010I After 4700 nodes, 1810 on tree, 3692.8135 best solution, best possible 3095.1233 (2955.44 seconds)
Cbc0010I After 4800 nodes, 1848 on tree, 3692.8135 best solution, best possible 3098.1981 (2958.22 seconds)
Cbc0010I After 4900 nodes, 1885 on tree, 3692.8135 best solution, best possible 3098.2501 (2961.21 seconds)
Cbc0010I After 5000 nodes, 1928 on tree, 3692.8135 best solution, best possible 3098.2501 (2964.14 seconds)
Cbc0010I After 5100 nodes, 1966 on tree, 3692.8135 best solution, best possible 3098.7159 (2967.00 seconds)
Cbc0010I After 5200 nodes, 2004 on tree, 3692.8135 best solution, best possible 3101.1442 (2969.69 seconds)
Cbc0010I After 5300 nodes, 2041 on tree, 3692.8135 best solution, best possible 3103.0395 (2972.55 seconds)
Cbc0010I After 5400 nodes, 2081 on tree, 3692.8135 best solution, best possible 3103.4056 (2975.28 seconds)
Cbc0010I After 5500 nodes, 2119 on tree, 3692.8135 best solution, best possible 3104.397 (2978.16 seconds)
Cbc0010I After 5600 nodes, 2155 on tree, 3692.8135 best solution, best possible 3106.8116 (2981.15 seconds)
Cbc0010I After 5700 nodes, 2190 on tree, 3692.8135 best solution, best possible 3107.6265 (2984.03 seconds)
Cbc0010I After 5800 nodes, 2230 on tree, 3692.8135 best solution, best possible 3107.6265 (2986.90 seconds)
Cbc0010I After 5900 nodes, 2266 on tree, 3692.8135 best solution, best possible 3112.5963 (2989.99 seconds)
Cbc0010I After 6000 nodes, 2305 on tree, 3692.8135 best solution, best possible 3112.5963 (2992.62 seconds)
Cbc0010I After 6100 nodes, 2341 on tree, 3692.8135 best solution, best possible 3112.8568 (2995.47 seconds)
Cbc0010I After 6200 nodes, 2380 on tree, 3692.8135 best solution, best possible 3112.8672 (2998.40 seconds)
Cbc0010I After 6300 nodes, 2421 on tree, 3692.8135 best solution, best possible 3115.2419 (3001.38 seconds)
Cbc0010I After 6400 nodes, 2456 on tree, 3692.8135 best solution, best possible 3115.2419 (3004.06 seconds)
Cbc0010I After 6500 nodes, 2494 on tree, 3692.8135 best solution, best possible 3116.1469 (3006.88 seconds)
Cbc0010I After 6600 nodes, 2529 on tree, 3692.8135 best solution, best possible 3116.6344 (3009.59 seconds)
Cbc0010I After 6700 nodes, 2566 on tree, 3692.8135 best solution, best possible 3117.9178 (3012.33 seconds)
Cbc0010I After 6800 nodes, 2606 on tree, 3692.8135 best solution, best possible 3118.5216 (3014.99 seconds)
Cbc0010I After 6900 nodes, 2645 on tree, 3692.8135 best solution, best possible 3120.8119 (3017.87 seconds)
Cbc0010I After 7000 nodes, 2684 on tree, 3692.8135 best solution, best possible 3121.7497 (3020.62 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 3692.8135 (best possible 3121.7497), took 63775 iterations and 7065 nodes (3603.56 seconds)
Cbc0035I Maximum depth 410, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       1861
Linearization cuts added in total:           1861  (separation time: 0.011073s)
Total solve time:                         3603.61s (3603.61s in branch-and-bound)
Lower bound:                              3121.75
Upper bound:                              3692.81  (gap: 18.29%)
Branch-and-bound nodes:                      7065
Stats: /tmp/jl_6RwJpd/model.nl 1660 [var]   20 [int] 1720 [con]  139 [aux]   1861 [root]     1861 [tot] 0.011073 [sep]  3603.61 [time]  3603.61 [bb]         3.121750e+03 [lower]         3.692814e+03 [upper]    7065 [nodes]
Performance of                           FBBT:	     27.372s,    11530 runs. fix:          0 shrnk:    2.13653 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.62279s,        6 runs. fix:          0 shrnk:   0.585485 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p42
