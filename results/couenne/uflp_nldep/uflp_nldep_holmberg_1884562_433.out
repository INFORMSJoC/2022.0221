solving instance uflp nldep holmberg 44 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.3381000000e+04 (0.238984 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3118.0445       24 0.292247
Couenne: new cutoff value 3.1180440529e+03 (0.535941 seconds)
Loaded instance "/tmp/jl_dpgipp/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1091 (-20) rows, 951 (-118) columns and 4711 (-138) elements
Clp0006I 0  Obj 0 Primal inf 223.5998 (90)
Clp0006I 96  Obj 2345 Primal inf 142.57254 (94)
Clp0006I 136  Obj 3019.6804
Clp0000I Optimal - objective value 3019.6804
Clp0032I Optimal objective 3019.680378 - 136 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 3019.6804
NLP Heuristic: NLP0014I             2         OPT 3118.0445       12 0.137145
no solution.
Clp0000I Optimal - objective value 3019.6804
Optimality Based BT: 25 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 3019.6804 to 3118.038 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 60 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.84 seconds)
Optimality Based BT: 18 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 16 improved bounds
Optimality Based BT: 12 improved bounds
Cbc0010I After 100 nodes, 21 on tree, 1e+50 best solution, best possible 3118.0404 (12.07 seconds)
Optimality Based BT: 14 improved bounds
Cbc0010I After 200 nodes, 29 on tree, 1e+50 best solution, best possible 3118.0421 (14.91 seconds)
Optimality Based BT: 16 improved bounds
Optimality Based BT: 16 improved bounds
Cbc0010I After 300 nodes, 27 on tree, 1e+50 best solution, best possible 3118.0432 (18.94 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1350 iterations and 376 nodes (19.60 seconds)
Cbc0035I Maximum depth 24, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1111
Linearization cuts added in total:           1111  (separation time: 0.006927s)
Total solve time:                         19.6193s (19.6193s in branch-and-bound)
Lower bound:                              3118.04
Upper bound:                              3118.04  (gap: 0.00%)
Branch-and-bound nodes:                       376
Stats: /tmp/jl_dpgipp/model.nl  930 [var]   10 [int] 1010 [con]  139 [aux]   1111 [root]     1111 [tot] 0.006927 [sep]  19.6193 [time]  19.6208 [bb]         3.118044e+03 [lower]         3.118044e+03 [upper]     376 [nodes]
Performance of                           FBBT:	   0.299073s,      209 runs. fix:          0 shrnk:    6.21073 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.18786s,       10 runs. fix:          0 shrnk:    46.4433 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p44
