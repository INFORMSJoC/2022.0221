solving instance uflp nldep holmberg 43 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 8.7873626753e+03 (1.24636 seconds)
1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1736.5099       27 1.131216
Couenne: new cutoff value 1.7365125571e+03 (2.46435 seconds)
NLP0014I             2         OPT 1736.51       28 0.721825
Couenne: new cutoff value 1.7365071231e+03 (3.18885 seconds)
Loaded instance "/tmp/jl_HtsrxD/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 2551 (-40) rows, 2271 (-138) columns and 11291 (-178) elements
Clp0006I 0  Obj 0 Primal inf 114.99987 (130)
Clp0006I 126  Obj 1329 Primal inf 86.945075 (115)
Clp0006I 205  Obj 1583
Clp0000I Optimal - objective value 1583
Clp0032I Optimal objective 1583 - 205 iterations time 0.042, Presolve 0.03
Clp0000I Optimal - objective value 1583
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 1583
Optimality Based BT: 28 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 53 added rows had average density of 2
Cbc0013I At root node, 53 cuts changed objective from 1583 to 1657.1312 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 115 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (6.67 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 5 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 1706.7446 (50.68 seconds)
Cbc0010I After 200 nodes, 33 on tree, 1e+50 best solution, best possible 1718.6423 (61.27 seconds)
Cbc0010I After 300 nodes, 50 on tree, 1e+50 best solution, best possible 1721.0808 (66.85 seconds)
Cbc0010I After 400 nodes, 65 on tree, 1e+50 best solution, best possible 1723.3122 (72.70 seconds)
Cbc0010I After 500 nodes, 87 on tree, 1e+50 best solution, best possible 1723.8142 (78.79 seconds)
Cbc0010I After 600 nodes, 101 on tree, 1e+50 best solution, best possible 1725.5324 (84.28 seconds)
Cbc0010I After 700 nodes, 110 on tree, 1e+50 best solution, best possible 1726.0314 (89.63 seconds)
Cbc0010I After 800 nodes, 119 on tree, 1e+50 best solution, best possible 1727.1094 (95.02 seconds)
Cbc0010I After 900 nodes, 121 on tree, 1e+50 best solution, best possible 1730.5563 (100.50 seconds)
Cbc0010I After 1000 nodes, 125 on tree, 1e+50 best solution, best possible 1731.2476 (106.00 seconds)
Cbc0010I After 1100 nodes, 126 on tree, 1e+50 best solution, best possible 1731.7016 (111.57 seconds)
Cbc0010I After 1200 nodes, 126 on tree, 1e+50 best solution, best possible 1731.9392 (117.07 seconds)
Cbc0010I After 1300 nodes, 129 on tree, 1e+50 best solution, best possible 1732.4017 (122.59 seconds)
Cbc0010I After 1400 nodes, 131 on tree, 1e+50 best solution, best possible 1732.6846 (128.28 seconds)
Cbc0010I After 1500 nodes, 131 on tree, 1e+50 best solution, best possible 1733.06 (134.11 seconds)
Cbc0010I After 1600 nodes, 126 on tree, 1e+50 best solution, best possible 1733.3571 (139.66 seconds)
Cbc0010I After 1700 nodes, 117 on tree, 1e+50 best solution, best possible 1733.71 (145.56 seconds)
Cbc0010I After 1800 nodes, 112 on tree, 1e+50 best solution, best possible 1734.0502 (151.60 seconds)
Cbc0010I After 1900 nodes, 101 on tree, 1e+50 best solution, best possible 1734.4023 (157.50 seconds)
Cbc0010I After 2000 nodes, 90 on tree, 1e+50 best solution, best possible 1734.7218 (163.95 seconds)
Cbc0010I After 2100 nodes, 86 on tree, 1e+50 best solution, best possible 1735.3037 (169.74 seconds)
Cbc0010I After 2200 nodes, 71 on tree, 1e+50 best solution, best possible 1735.8259 (175.18 seconds)
Cbc0010I After 2300 nodes, 33 on tree, 1e+50 best solution, best possible 1736.3444 (180.66 seconds)
Cbc0010I After 2400 nodes, 28 on tree, 1e+50 best solution, best possible 1736.4919 (184.96 seconds)
Cbc0010I After 2500 nodes, 3 on tree, 1e+50 best solution, best possible 1736.5159 (188.23 seconds)
Cbc0001I Search completed - best objective 1e+50, took 83922 iterations and 2506 nodes (188.37 seconds)
Cbc0035I Maximum depth 61, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2591
Linearization cuts added in total:           2591  (separation time: 0.015419s)
Total solve time:                         188.414s (188.414s in branch-and-bound)
Lower bound:                              1736.51
Upper bound:                              1736.51  (gap: 0.00%)
Branch-and-bound nodes:                      2506
Stats: /tmp/jl_HtsrxD/model.nl 2190 [var]   30 [int] 2230 [con]  219 [aux]   2591 [root]     2591 [tot] 0.015419 [sep]  188.414 [time]  188.418 [bb]         1.736507e+03 [lower]         1.736507e+03 [upper]    2506 [nodes]
Performance of                           FBBT:	    11.6427s,     3310 runs. fix:          0 shrnk:    5.21983 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.84651s,        5 runs. fix:          0 shrnk:    78.6865 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p43
