solving instance uflp nldep orlib 93 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 813768.77      246 4.613666
NLP0014I             2         OPT 843749.59       58 0.919744
Couenne: new cutoff value 8.4374979317e+05 (6.23034 seconds)
Loaded instance "/tmp/jl_aDhxad/model.nl"
Constraints:         1350
Variables:           1325 (25 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 1587 (-76) rows, 1370 (-174) columns and 6796 (-299) elements
Clp0006I 0  Obj 0 Primal inf 183520.49 (242)
Clp0006I 106  Obj 5.2372947e-12 Primal inf 11141.167 (99)
Clp0006I 203  Obj 8.7048654e-11 Primal inf 4062.0806 (141)
Clp0006I 292  Obj 0.00010681113 Primal inf 35937.991 (222)
Clp0006I 384  Obj 689155.49 Primal inf 938.37112 (52)
Clp0006I 459  Obj 813763.04
Clp0000I Optimal - objective value 813763.03
Clp0032I Optimal objective 813763.034 - 459 iterations time 0.042, Presolve 0.01
Clp0000I Optimal - objective value 813763.03
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 813763.03
Optimality Based BT: 30 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 11 added rows had average density of 2
Cbc0013I At root node, 11 cuts changed objective from 813763.03 to 813763.03 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 32 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (5.35 seconds)
Optimality Based BT: 34 improved bounds
Optimality Based BT: 6 improved bounds
Optimality Based BT: 21 improved bounds
Optimality Based BT: 24 improved bounds
Optimality Based BT: 20 improved bounds
Optimality Based BT: 16 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 813768.92 (39.74 seconds)
Cbc0010I After 200 nodes, 99 on tree, 1e+50 best solution, best possible 813769.09 (41.96 seconds)
Couenne: new cutoff value 8.1377312740e+05 (49.2642 seconds)
Couenne: new cutoff value 8.1377083553e+05 (49.3207 seconds)
Couenne: new cutoff value 8.1376962817e+05 (49.3732 seconds)
Couenne: new cutoff value 8.1376917558e+05 (49.4445 seconds)
Couenne: new cutoff value 8.1376909765e+05 (49.4977 seconds)
Couenne: new cutoff value 8.1376909330e+05 (49.6165 seconds)
Cbc0010I After 300 nodes, 103 on tree, 1e+50 best solution, best possible 813771.15 (43.66 seconds)
Cbc0010I After 400 nodes, 53 on tree, 1e+50 best solution, best possible 813970.14 (44.59 seconds)
Cbc0010I After 500 nodes, 3 on tree, 1e+50 best solution, best possible 832134.57 (45.32 seconds)
Cbc0001I Search completed - best objective 1e+50, took 10241 iterations and 506 nodes (45.36 seconds)
Cbc0035I Maximum depth 131, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1663
Linearization cuts added in total:           1663  (separation time: 0.010349s)
Total solve time:                         45.4061s (45.4061s in branch-and-bound)
Lower bound:                               813769
Upper bound:                               813769  (gap: 0.00%)
Branch-and-bound nodes:                       506
Stats: /tmp/jl_aDhxad/model.nl 1325 [var]   25 [int] 1350 [con]  219 [aux]   1663 [root]     1663 [tot] 0.010349 [sep]  45.4061 [time]  45.4085 [bb]         8.137691e+05 [lower]         8.137691e+05 [upper]     506 [nodes]
Performance of                           FBBT:	   0.623039s,      310 runs. fix:          0 shrnk:    23.0993 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    9.29422s,        7 runs. fix:          0 shrnk:    52.1434 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap93.txt
