solving instance uflp nldep orlib 91 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.5 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      INFEAS 0.85642034      215 4.297179
Loaded instance "/tmp/jl_DXjGoH/model.nl"
Constraints:         1350
Variables:           1325 (25 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 1588 (-75) rows, 1371 (-173) columns and 5526 (-1569) elements
Clp0006I 0  Obj 0 Primal inf 184902.86 (242)
Clp0006I 106  Obj 308078.5 Primal inf 42078.521 (62)
Clp0006I 212  Obj 735712.74
Clp0000I Optimal - objective value 735712.74
Clp0032I Optimal objective 735712.7411 - 212 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 735712.74
NLP Heuristic: NLP0014I             2         OPT 735714.89       50 0.959474
no solution.
Clp0000I Optimal - objective value 735712.74
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 18 added rows had average density of 2
Cbc0013I At root node, 18 cuts changed objective from 735712.74 to 735712.74 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 50 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (6.60 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 735714.98 (42.54 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 735715.22 (44.56 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 735715.26 (46.50 seconds)
Couenne: new cutoff value 7.3571526343e+05 (51.6504 seconds)
Cbc0010I After 400 nodes, 116 on tree, 1e+50 best solution, best possible 735770.38 (47.74 seconds)
Cbc0010I After 500 nodes, 66 on tree, 1e+50 best solution, best possible 736269.2 (48.70 seconds)
Cbc0010I After 600 nodes, 16 on tree, 1e+50 best solution, best possible 749110.39 (49.45 seconds)
Cbc0001I Search completed - best objective 1e+50, took 16251 iterations and 632 nodes (49.70 seconds)
Cbc0035I Maximum depth 158, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1663
Linearization cuts added in total:           1663  (separation time: 0.008023s)
Total solve time:                         49.7173s (49.7173s in branch-and-bound)
Lower bound:                               735715
Upper bound:                               735715  (gap: 0.00%)
Branch-and-bound nodes:                       632
Stats: /tmp/jl_DXjGoH/model.nl 1325 [var]   25 [int] 1350 [con]  219 [aux]   1663 [root]     1663 [tot] 0.008023 [sep]  49.7173 [time]  49.7191 [bb]         7.357153e+05 [lower]         7.357153e+05 [upper]     632 [nodes]
Performance of                           FBBT:	   0.788903s,      363 runs. fix:          0 shrnk:   0.906762 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.94303s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap91.txt
