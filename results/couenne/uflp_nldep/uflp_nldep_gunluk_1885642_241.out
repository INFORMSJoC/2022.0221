solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-4.txt exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 518.67218       80 33.138887
NLP0014I             2         OPT 544.98262       48 1.379426
Couenne: new cutoff value 5.4498273314e+02 (35.6658 seconds)
Loaded instance "/tmp/jl_MSv4k5/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          269 (0 integer)

Coin0506I Presolve 2309 (-92) rows, 1949 (-210) columns and 9927 (-302) elements
Clp0006I 0  Obj 0 Primal inf 24711.122 (390)
Clp0006I 121  Obj 8.8106189e-11 Primal inf 1283.914 (176)
Clp0006I 237  Obj 0.0021602691 Primal inf 11664.592 (184)
Clp0006I 318  Obj 260.81109 Primal inf 327.32158 (218)
Clp0006I 342  Obj 286.03434 Primal inf 314.93364 (269)
Clp0006I 463  Obj 509.28852 Primal inf 266.44957 (27)
Clp0006I 490  Obj 518.45052
Clp0000I Optimal - objective value 518.4463
Clp0032I Optimal objective 518.4462983 - 490 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 518.4463
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 518.4463
Optimality Based BT: 19 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 19 added rows had average density of 2
Cbc0013I At root node, 19 cuts changed objective from 518.4463 to 518.44789 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 28 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.58 seconds)
Optimality Based BT: 9 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 8 improved bounds
Cbc0010I After 100 nodes, 36 on tree, 1e+50 best solution, best possible 518.55562 (37.93 seconds)
Couenne: new cutoff value 5.1872489528e+02 (77.5999 seconds)
Cbc0010I After 200 nodes, 86 on tree, 1e+50 best solution, best possible 518.55562 (41.89 seconds)
Couenne: new cutoff value 5.1869326607e+02 (78.34 seconds)
Couenne: new cutoff value 5.1867445621e+02 (78.8117 seconds)
Couenne: new cutoff value 5.1867371938e+02 (78.8934 seconds)
Couenne: new cutoff value 5.1867306028e+02 (79.2712 seconds)
Cbc0004I Integer solution of 518.67306 found after 5713 iterations and 245 nodes (43.52 seconds)
Couenne: new cutoff value 5.1867243874e+02 (79.6581 seconds)
Cbc0004I Integer solution of 518.67244 found after 5909 iterations and 254 nodes (43.89 seconds)
Cbc0001I Search completed - best objective 518.6724387443271, took 5909 iterations and 254 nodes (43.89 seconds)
Cbc0035I Maximum depth 122, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2401
Linearization cuts added in total:           2401  (separation time: 0.014266s)
Total solve time:                         43.9506s (43.9506s in branch-and-bound)
Lower bound:                              518.672
Upper bound:                              518.672  (gap: 0.00%)
Branch-and-bound nodes:                       254
Stats: /tmp/jl_MSv4k5/model.nl 1890 [var]   30 [int] 1920 [con]  269 [aux]   2401 [root]     2401 [tot] 0.014266 [sep]  43.9506 [time]  43.9548 [bb]         5.186724e+02 [lower]         5.186724e+02 [upper]     254 [nodes]
Performance of                           FBBT:	    1.22239s,      375 runs. fix:          0 shrnk:    50.9732 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     10.605s,        4 runs. fix:    41.8462 shrnk:    13.2336 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-4.txt
