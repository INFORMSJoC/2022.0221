solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-2.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 197.27708       77 0.331076
Couenne: new cutoff value 1.9727712169e+02 (0.359017 seconds)
NLP0014I             2         OPT 197.27708       47 0.122419
Couenne: new cutoff value 1.9727709867e+02 (0.48261 seconds)
Loaded instance "/tmp/jl_4XFDq6/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 319 (-42) rows, 249 (-80) columns and 1217 (-122) elements
Clp0006I 0  Obj -33.592313 Primal inf 703.7648 (49)
Clp0006I 70  Obj 147.33935 Primal inf 20.992502 (26)
Clp0006I 87  Obj 152.97364
Clp0000I Optimal - objective value 152.97364
Clp0032I Optimal objective 152.9736394 - 87 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 152.97364
NLP Heuristic: NLP0014I             3         OPT 197.27708       17 0.053326
no solution.
Clp0000I Optimal - objective value 152.97364
Optimality Based BT: 26 improved bounds
Probing: 8 improved bounds
NLP Heuristic: no solution.
Cbc0031I 8 added rows had average density of 2
Cbc0013I At root node, 8 cuts changed objective from 152.97364 to 166.09092 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 8 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.45 seconds)
Optimality Based BT: 20 improved bounds
Optimality Based BT: 23 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 28 improved bounds
Optimality Based BT: 33 improved bounds
Optimality Based BT: 28 improved bounds
Cbc0010I After 100 nodes, 16 on tree, 1e+50 best solution, best possible 196.47829 (4.29 seconds)
Cbc0010I After 200 nodes, 34 on tree, 1e+50 best solution, best possible 197.27704 (4.71 seconds)
Cbc0010I After 300 nodes, 63 on tree, 1e+50 best solution, best possible 197.27705 (5.11 seconds)
Cbc0010I After 400 nodes, 93 on tree, 1e+50 best solution, best possible 197.27705 (5.50 seconds)
Cbc0010I After 500 nodes, 124 on tree, 1e+50 best solution, best possible 197.27706 (5.88 seconds)
Cbc0010I After 600 nodes, 157 on tree, 1e+50 best solution, best possible 197.27706 (6.28 seconds)
Cbc0010I After 700 nodes, 186 on tree, 1e+50 best solution, best possible 197.27706 (6.66 seconds)
Cbc0010I After 800 nodes, 220 on tree, 1e+50 best solution, best possible 197.27706 (7.08 seconds)
Cbc0010I After 900 nodes, 247 on tree, 1e+50 best solution, best possible 197.27706 (7.48 seconds)
Cbc0010I After 1000 nodes, 277 on tree, 1e+50 best solution, best possible 197.27707 (7.87 seconds)
Cbc0010I After 1100 nodes, 299 on tree, 1e+50 best solution, best possible 197.27707 (8.26 seconds)
Cbc0010I After 1200 nodes, 322 on tree, 1e+50 best solution, best possible 197.27707 (8.64 seconds)
Cbc0010I After 1300 nodes, 342 on tree, 1e+50 best solution, best possible 197.27707 (9.03 seconds)
Cbc0010I After 1400 nodes, 358 on tree, 1e+50 best solution, best possible 197.27707 (9.42 seconds)
Cbc0010I After 1500 nodes, 379 on tree, 1e+50 best solution, best possible 197.27707 (9.79 seconds)
Cbc0010I After 1600 nodes, 396 on tree, 1e+50 best solution, best possible 197.27707 (10.17 seconds)
Cbc0010I After 1700 nodes, 420 on tree, 1e+50 best solution, best possible 197.27707 (10.56 seconds)
Cbc0010I After 1800 nodes, 443 on tree, 1e+50 best solution, best possible 197.27707 (10.94 seconds)
Cbc0010I After 1900 nodes, 466 on tree, 1e+50 best solution, best possible 197.27707 (11.34 seconds)
Cbc0010I After 2000 nodes, 490 on tree, 1e+50 best solution, best possible 197.27707 (11.74 seconds)
Cbc0010I After 2100 nodes, 515 on tree, 1e+50 best solution, best possible 197.27708 (12.14 seconds)
Cbc0010I After 2200 nodes, 538 on tree, 1e+50 best solution, best possible 197.27708 (12.54 seconds)
Cbc0010I After 2300 nodes, 560 on tree, 1e+50 best solution, best possible 197.27708 (12.93 seconds)
Cbc0010I After 2400 nodes, 585 on tree, 1e+50 best solution, best possible 197.27708 (13.33 seconds)
Cbc0010I After 2500 nodes, 612 on tree, 1e+50 best solution, best possible 197.27708 (13.74 seconds)
Cbc0010I After 2600 nodes, 629 on tree, 1e+50 best solution, best possible 197.27708 (14.11 seconds)
Cbc0010I After 2700 nodes, 651 on tree, 1e+50 best solution, best possible 197.27708 (14.50 seconds)
Cbc0010I After 2800 nodes, 664 on tree, 1e+50 best solution, best possible 197.27708 (14.88 seconds)
Cbc0010I After 2900 nodes, 681 on tree, 1e+50 best solution, best possible 197.27708 (15.28 seconds)
Cbc0010I After 3000 nodes, 692 on tree, 1e+50 best solution, best possible 197.27708 (15.67 seconds)
Cbc0010I After 3100 nodes, 715 on tree, 1e+50 best solution, best possible 197.27708 (16.07 seconds)
Cbc0010I After 3200 nodes, 726 on tree, 1e+50 best solution, best possible 197.27708 (16.47 seconds)
Cbc0010I After 3300 nodes, 737 on tree, 1e+50 best solution, best possible 197.27708 (16.84 seconds)
Cbc0010I After 3400 nodes, 756 on tree, 1e+50 best solution, best possible 197.27708 (17.27 seconds)
Cbc0010I After 3500 nodes, 769 on tree, 1e+50 best solution, best possible 197.27708 (17.64 seconds)
Cbc0010I After 3600 nodes, 785 on tree, 1e+50 best solution, best possible 197.27708 (18.03 seconds)
Cbc0010I After 3700 nodes, 798 on tree, 1e+50 best solution, best possible 197.27708 (18.42 seconds)
Cbc0010I After 3800 nodes, 815 on tree, 1e+50 best solution, best possible 197.27708 (18.82 seconds)
Cbc0010I After 3900 nodes, 825 on tree, 1e+50 best solution, best possible 197.27708 (19.19 seconds)
Cbc0010I After 4000 nodes, 836 on tree, 1e+50 best solution, best possible 197.27708 (19.60 seconds)
Cbc0010I After 4100 nodes, 841 on tree, 1e+50 best solution, best possible 197.27708 (19.95 seconds)
Cbc0010I After 4200 nodes, 855 on tree, 1e+50 best solution, best possible 197.27708 (20.38 seconds)
Cbc0010I After 4300 nodes, 871 on tree, 1e+50 best solution, best possible 197.27708 (20.76 seconds)
Cbc0010I After 4400 nodes, 882 on tree, 1e+50 best solution, best possible 197.27708 (21.13 seconds)
Cbc0010I After 4500 nodes, 896 on tree, 1e+50 best solution, best possible 197.27708 (21.52 seconds)
Cbc0010I After 4600 nodes, 913 on tree, 1e+50 best solution, best possible 197.27708 (21.93 seconds)
Cbc0010I After 4700 nodes, 917 on tree, 1e+50 best solution, best possible 197.27708 (22.30 seconds)
Cbc0010I After 4800 nodes, 925 on tree, 1e+50 best solution, best possible 197.27709 (22.69 seconds)
Cbc0010I After 4900 nodes, 931 on tree, 1e+50 best solution, best possible 197.27709 (23.08 seconds)
Cbc0010I After 5000 nodes, 934 on tree, 1e+50 best solution, best possible 197.27709 (23.45 seconds)
Cbc0010I After 5100 nodes, 948 on tree, 1e+50 best solution, best possible 197.27709 (23.84 seconds)
Cbc0010I After 5200 nodes, 951 on tree, 1e+50 best solution, best possible 197.27709 (24.24 seconds)
Cbc0010I After 5300 nodes, 952 on tree, 1e+50 best solution, best possible 197.27709 (24.61 seconds)
Cbc0010I After 5400 nodes, 955 on tree, 1e+50 best solution, best possible 197.27709 (25.03 seconds)
Cbc0010I After 5500 nodes, 959 on tree, 1e+50 best solution, best possible 197.27709 (25.43 seconds)
Cbc0010I After 5600 nodes, 955 on tree, 1e+50 best solution, best possible 197.27709 (25.81 seconds)
Cbc0010I After 5700 nodes, 953 on tree, 1e+50 best solution, best possible 197.27709 (26.20 seconds)
Cbc0010I After 5800 nodes, 953 on tree, 1e+50 best solution, best possible 197.27709 (26.61 seconds)
Cbc0010I After 5900 nodes, 948 on tree, 1e+50 best solution, best possible 197.27709 (26.99 seconds)
Cbc0010I After 6000 nodes, 945 on tree, 1e+50 best solution, best possible 197.27709 (27.40 seconds)
Cbc0010I After 6100 nodes, 936 on tree, 1e+50 best solution, best possible 197.27709 (27.83 seconds)
Cbc0010I After 6200 nodes, 937 on tree, 1e+50 best solution, best possible 197.27709 (28.23 seconds)
Cbc0010I After 6300 nodes, 931 on tree, 1e+50 best solution, best possible 197.27709 (28.63 seconds)
Cbc0010I After 6400 nodes, 928 on tree, 1e+50 best solution, best possible 197.27709 (29.00 seconds)
Cbc0010I After 6500 nodes, 909 on tree, 1e+50 best solution, best possible 197.27709 (29.41 seconds)
Cbc0010I After 6600 nodes, 893 on tree, 1e+50 best solution, best possible 197.27709 (29.79 seconds)
Cbc0004I Integer solution of 197.27713 found after 11392 iterations and 6603 nodes (29.80 seconds)
Cbc0010I After 6700 nodes, 866 on tree, 197.27713 best solution, best possible 197.27709 (30.18 seconds)
Cbc0010I After 6800 nodes, 860 on tree, 197.27713 best solution, best possible 197.27709 (30.55 seconds)
Cbc0010I After 6900 nodes, 841 on tree, 197.27713 best solution, best possible 197.27709 (30.90 seconds)
Cbc0010I After 7000 nodes, 831 on tree, 197.27713 best solution, best possible 197.27709 (31.26 seconds)
Cbc0010I After 7100 nodes, 809 on tree, 197.27713 best solution, best possible 197.27709 (31.66 seconds)
Cbc0010I After 7200 nodes, 792 on tree, 197.27713 best solution, best possible 197.27709 (32.01 seconds)
Cbc0010I After 7300 nodes, 772 on tree, 197.27713 best solution, best possible 197.27709 (32.36 seconds)
Cbc0010I After 7400 nodes, 746 on tree, 197.27713 best solution, best possible 197.27709 (32.71 seconds)
Cbc0010I After 7500 nodes, 714 on tree, 197.27713 best solution, best possible 197.27709 (33.04 seconds)
Cbc0010I After 7600 nodes, 680 on tree, 197.27713 best solution, best possible 197.27709 (33.38 seconds)
Cbc0010I After 7700 nodes, 646 on tree, 197.27713 best solution, best possible 197.27709 (33.72 seconds)
Cbc0010I After 7800 nodes, 616 on tree, 197.27713 best solution, best possible 197.2771 (34.06 seconds)
Cbc0010I After 7900 nodes, 583 on tree, 197.27713 best solution, best possible 197.2771 (34.39 seconds)
Cbc0010I After 8000 nodes, 543 on tree, 197.27713 best solution, best possible 197.2771 (34.71 seconds)
Cbc0010I After 8100 nodes, 501 on tree, 197.27713 best solution, best possible 197.2771 (35.01 seconds)
Cbc0010I After 8200 nodes, 452 on tree, 197.27713 best solution, best possible 197.2771 (35.24 seconds)
Cbc0010I After 8300 nodes, 402 on tree, 197.27713 best solution, best possible 197.2771 (35.45 seconds)
Cbc0010I After 8400 nodes, 352 on tree, 197.27713 best solution, best possible 197.2771 (35.68 seconds)
Cbc0010I After 8500 nodes, 302 on tree, 197.27713 best solution, best possible 197.2771 (35.90 seconds)
Cbc0010I After 8600 nodes, 252 on tree, 197.27713 best solution, best possible 197.27711 (36.12 seconds)
Cbc0010I After 8700 nodes, 202 on tree, 197.27713 best solution, best possible 197.27711 (36.35 seconds)
Cbc0010I After 8800 nodes, 152 on tree, 197.27713 best solution, best possible 197.27711 (36.57 seconds)
Cbc0010I After 8900 nodes, 102 on tree, 197.27713 best solution, best possible 197.27711 (36.80 seconds)
Cbc0010I After 9000 nodes, 52 on tree, 197.27713 best solution, best possible 197.27712 (37.02 seconds)
Cbc0010I After 9100 nodes, 2 on tree, 197.27713 best solution, best possible 197.27712 (37.24 seconds)
Cbc0001I Search completed - best objective 197.2771316645418, took 15166 iterations and 9104 nodes (37.24 seconds)
Cbc0035I Maximum depth 49, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        361
Linearization cuts added in total:            361  (separation time: 0.002029s)
Total solve time:                         37.2503s (37.2503s in branch-and-bound)
Lower bound:                              197.277
Upper bound:                              197.277  (gap: 0.00%)
Branch-and-bound nodes:                      9104
Stats: /tmp/jl_4XFDq6/model.nl  230 [var]   10 [int]  240 [con]   99 [aux]    361 [root]      361 [tot] 0.002029 [sep]  37.2503 [time]  37.2509 [bb]         1.972771e+02 [lower]         1.972771e+02 [upper]    9104 [nodes]
Performance of                           FBBT:	    1.57759s,     5421 runs. fix:  0.0753209 shrnk:    3.37264 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	   0.983138s,        8 runs. fix:        1.6 shrnk:    49.3112 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-2.txt
