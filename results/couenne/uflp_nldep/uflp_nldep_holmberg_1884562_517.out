solving instance uflp nldep holmberg 52 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5645.9062       42 5.064326
Couenne: new cutoff value 5.6459082814e+03 (5.36066 seconds)
Loaded instance "/tmp/jl_I0QhCe/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          169 (0 integer)

Coin0506I Presolve 1249 (-32) rows, 1049 (-150) columns and 5307 (-182) elements
Clp0006I 0  Obj 0 Primal inf 2940.7352 (210)
Clp0006I 99  Obj 2754 Primal inf 137809 (140)
Clp0006I 198  Obj 5623.5761 Primal inf 123.55888 (28)
Clp0006I 226  Obj 5626.7851
Clp0000I Optimal - objective value 5626.7851
Clp0032I Optimal objective 5626.78507 - 226 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 5626.7851
NLP Heuristic: NLP0014I             2         OPT 5645.9062        9 0.106883
no solution.
Clp0000I Optimal - objective value 5626.7851
Optimality Based BT: 22 improved bounds
Probing: 3 improved bounds
NLP Heuristic: no solution.
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 5626.7851 to 5641.8833 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 246 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.47 seconds)
Optimality Based BT: 18 improved bounds
Couenne: new cutoff value 5.6459070154e+03 (9.4711 seconds)
Cbc0004I Integer solution of 5645.907 found after 334 iterations and 1 nodes (4.08 seconds)
Optimality Based BT: 17 improved bounds
Cbc0001I Search completed - best objective 5645.90701542106, took 388 iterations and 2 nodes (6.00 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1281
Linearization cuts added in total:           1281  (separation time: 0.00836s)
Total solve time:                         6.02524s (6.02524s in branch-and-bound)
Lower bound:                              5645.91
Upper bound:                              5645.91  (gap: 0.00%)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_I0QhCe/model.nl 1030 [var]   10 [int] 1120 [con]  169 [aux]   1281 [root]     1281 [tot] 0.00836 [sep]  6.02524 [time]   6.0261 [bb]         5.645907e+03 [lower]         5.645907e+03 [upper]       2 [nodes]
Performance of                           FBBT:	    0.04957s,       32 runs. fix:          0 shrnk:    13.3166 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.09712s,        3 runs. fix:    1.66667 shrnk:     67.171 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p52
f0 = 0.30349091130065764
f0 = 0.27261247555785817
f0 = 0.38465708525315917
f0 = 0.38465708525315917
f0 = 0.42965137733552405
f0 = 0.33260486500101144
f0 = 0.3564253725740282
f0 = 0.4111243158898444
f0 = 0.2708479935154125
f0 = 0.2743769576003039
