solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-9.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 231.42594       48 1.530809
NLP0014I             2         OPT 231.42596       34 0.298436
Couenne: new cutoff value 2.3142604226e+02 (2.06388 seconds)
Loaded instance "/tmp/jl_rxYn3Z/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1139 (-62) rows, 899 (-140) columns and 4617 (-202) elements
Clp0006I 0  Obj 0 Primal inf 5595.8482 (260)
Clp0006I 97  Obj 53.08329 Primal inf 247242.31 (82)
Clp0006I 194  Obj 229.2994 Primal inf 195.92435 (48)
Clp0006I 255  Obj 230.20383
Clp0000I Optimal - objective value 230.20383
Clp0032I Optimal objective 230.2038347 - 255 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 230.20383
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 230.20383
Optimality Based BT: 40 improved bounds
Probing: 2 improved bounds
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 31 added rows had average density of 2
Cbc0013I At root node, 31 cuts changed objective from 230.20383 to 231.42607 in 9 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 225 row cuts average 2.0 elements, 10 column cuts (10 active)
Cbc0001I Search completed - best objective 1e+50, took 242 iterations and 0 nodes (2.19 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.006868s)
Total solve time:                         2.20679s (2.20679s in branch-and-bound)
Lower bound:                              231.426
Upper bound:                              231.426  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_rxYn3Z/model.nl  860 [var]   20 [int]  880 [con]  179 [aux]   1201 [root]     1201 [tot] 0.006868 [sep]  2.20679 [time]  2.20871 [bb]         2.314260e+02 [lower]         2.314260e+02 [upper]       0 [nodes]
Performance of                           FBBT:	   0.014443s,       11 runs. fix:          0 shrnk:    94.1448 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    0.79834s,        1 runs. fix:          4 shrnk:    151.452 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-9.txt
f0 = 0.07410824578271875
f0 = 0.00705792816978274
f0 = 0.08822410212228424
f0 = 0.023820507573016746
f0 = 0.05469894331581623
f0 = 0.07851945088883297
f0 = 0.005293446127337054
f0 = 0.05999238944315328
f0 = 0.08822410212228424
f0 = 0.0688147996553817
f0 = 0.07675496884638729
f0 = 0.02205602553057106
f0 = 0.07675496884638729
f0 = 0.05116997923092485
f0 = 0.046758774124810644
f0 = 0.006175687148559896
f0 = 0.06705031761293602
f0 = 0.03881860493380507
f0 = 0.023820507573016746
f0 = 0.0644035945492675
