solving instance uflp nldep holmberg 49 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 864.08158       49 37.805609
NLP0014I             2         OPT 864.08163       57 1.330308
Loaded instance "/tmp/jl_uWRiuT/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          279 (0 integer)

Coin0506I Presolve 2620 (-91) rows, 2250 (-219) columns and 9300 (-2439) elements
Clp0006I 0  Obj 0 Primal inf 7172.6193 (400)
Clp0006I 127  Obj 93 Primal inf 281.84239 (148)
Clp0006I 254  Obj 846 Primal inf 84018.224 (151)
Clp0006I 364  Obj 856.56927
Clp0000I Optimal - objective value 856.56927
Clp0032I Optimal objective 856.5692699 - 364 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 856.56927
NLP Heuristic: NLP0014I             3         OPT 864.08157       46 1.592113
no solution.
Clp0000I Optimal - objective value 856.56927
Optimality Based BT: Couenne: new cutoff value 9.4670000000e+03 (42.7497 seconds)
Couenne: new cutoff value 9.1130000000e+03 (42.757 seconds)
Couenne: new cutoff value 8.6230000000e+03 (42.7929 seconds)
0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 27 added rows had average density of 2
Cbc0013I At root node, 27 cuts changed objective from 856.56927 to 856.5859 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 27 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (13.44 seconds)
Optimality Based BT: 29 improved bounds
Optimality Based BT: 55 improved bounds
Optimality Based BT: 29 improved bounds
Optimality Based BT: 31 improved bounds
Optimality Based BT: 31 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 859.72433 (75.32 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 860.67874 (80.18 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 860.67874 (85.26 seconds)
Cbc0010I After 400 nodes, 200 on tree, 1e+50 best solution, best possible 860.67874 (89.93 seconds)
Cbc0010I After 500 nodes, 250 on tree, 1e+50 best solution, best possible 860.67874 (94.03 seconds)
Cbc0010I After 600 nodes, 300 on tree, 1e+50 best solution, best possible 860.67874 (97.34 seconds)
Cbc0010I After 700 nodes, 349 on tree, 1e+50 best solution, best possible 860.67874 (100.56 seconds)
Couenne: new cutoff value 8.6408800008e+02 (143.167 seconds)
Cbc0004I Integer solution of 864.088 found after 7660 iterations and 767 nodes (102.74 seconds)
Cbc0010I After 800 nodes, 27 on tree, 864.088 best solution, best possible 861.1048 (104.89 seconds)
Couenne: new cutoff value 8.6408645214e+02 (146.415 seconds)
Cbc0004I Integer solution of 864.08645 found after 9249 iterations and 824 nodes (105.99 seconds)
Couenne: new cutoff value 8.6408552944e+02 (149.445 seconds)
Cbc0004I Integer solution of 864.08553 found after 11666 iterations and 893 nodes (109.02 seconds)
Cbc0010I After 900 nodes, 22 on tree, 864.08553 best solution, best possible 864.08391 (109.38 seconds)
Couenne: new cutoff value 8.6408460890e+02 (150.829 seconds)
Cbc0004I Integer solution of 864.08461 found after 12002 iterations and 922 nodes (110.40 seconds)
Couenne: new cutoff value 8.6408400294e+02 (151.442 seconds)
Cbc0004I Integer solution of 864.084 found after 12078 iterations and 937 nodes (111.01 seconds)
Cbc0001I Search completed - best objective 864.08400293765, took 12119 iterations and 944 nodes (111.24 seconds)
Cbc0035I Maximum depth 383, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2711
Linearization cuts added in total:           2711  (separation time: 0.012293s)
Total solve time:                         111.276s (111.276s in branch-and-bound)
Lower bound:                              864.084
Upper bound:                              864.084  (gap: 0.00%)
Branch-and-bound nodes:                       944
Stats: /tmp/jl_uWRiuT/model.nl 2190 [var]   30 [int] 2230 [con]  279 [aux]   2711 [root]     2711 [tot] 0.012293 [sep]  111.276 [time]  111.278 [bb]         8.640840e+02 [lower]         8.640840e+02 [upper]     944 [nodes]
Performance of                           FBBT:	    5.02464s,     1456 runs. fix:          0 shrnk:    0.97471 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.1671s,        6 runs. fix:          0 shrnk:    3.66569 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p49
f0 = 0.30349091130065775
f0 = 0.2726124755578583
f0 = 0.3846570852531593
f0 = 0.3846570852531593
f0 = 0.4296513773355242
f0 = 0.33260486500101155
f0 = 0.35642537257402834
f0 = 0.41112431588984455
f0 = 0.2708479935154126
f0 = 0.274376957600304
f0 = 0.358189854616474
f0 = 0.3828926032107136
f0 = 0.26643678840929835
f0 = 0.33260486500101155
f0 = 0.2761414396427497
f0 = 0.3378983111283486
f0 = 0.38553932627438214
f0 = 0.36877674687114814
f0 = 0.4287691363143014
f0 = 0.4137710389535131
f0 = 0.35730761359525115
f0 = 0.2805526447488639
f0 = 0.3802458801470451
f0 = 0.3378983111283486
f0 = 0.3881860493380506
f0 = 0.4252401722294101
f0 = 0.39877294159272475
f0 = 0.39877294159272475
f0 = 0.2726124755578583
f0 = 0.39436173648661055
