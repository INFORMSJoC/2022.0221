solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-7.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 335.41905       56 45.983486
NLP0014I             2         OPT 335.53769       64 1.446107
Couenne: new cutoff value 3.3553777438e+02 (48.5104 seconds)
Loaded instance "/tmp/jl_hmImxO/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          269 (0 integer)

Coin0506I Presolve 2309 (-92) rows, 1949 (-210) columns and 9927 (-302) elements
Clp0006I 0  Obj 0 Primal inf 10404.64 (390)
Clp0006I 121  Obj 9.0345847e-14 Primal inf 20063.123 (172)
Clp0006I 240  Obj 326.24889 Primal inf 140816.33 (138)
Clp0006I 361  Obj 333.52523 Primal inf 42368.412 (81)
Clp0006I 395  Obj 334.34432
Clp0000I Optimal - objective value 334.34432
Clp0032I Optimal objective 334.3443203 - 395 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 334.34432
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 334.34432
Optimality Based BT: 49 improved bounds
Probing: 5 improved bounds
NLP Heuristic: no solution.
Cbc0031I 50 added rows had average density of 2
Cbc0013I At root node, 50 cuts changed objective from 334.34432 to 335.21418 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 370 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.66 seconds)
Optimality Based BT: 50 improved bounds
Optimality Based BT: 46 improved bounds
Optimality Based BT: 29 improved bounds
Optimality Based BT: 28 improved bounds
Optimality Based BT: 21 improved bounds
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 335.40696 (61.93 seconds)
Cbc0010I After 200 nodes, 85 on tree, 1e+50 best solution, best possible 335.40696 (65.64 seconds)
Cbc0010I After 300 nodes, 134 on tree, 1e+50 best solution, best possible 335.40696 (69.40 seconds)
Couenne: new cutoff value 3.3543160700e+02 (120.092 seconds)
Cbc0004I Integer solution of 335.43162 found after 3253 iterations and 357 nodes (71.51 seconds)
Cbc0010I After 400 nodes, 63 on tree, 335.43162 best solution, best possible 335.41183 (86.93 seconds)
Cbc0010I After 500 nodes, 90 on tree, 335.43162 best solution, best possible 335.41183 (90.04 seconds)
Couenne: new cutoff value 3.3542947578e+02 (139.149 seconds)
Cbc0004I Integer solution of 335.42949 found after 4749 iterations and 516 nodes (90.57 seconds)
Optimality Based BT: 9 improved bounds
Couenne: new cutoff value 3.3542924119e+02 (153.1 seconds)
Cbc0004I Integer solution of 335.42924 found after 5641 iterations and 577 nodes (104.50 seconds)
Couenne: new cutoff value 3.3542909536e+02 (153.873 seconds)
Cbc0004I Integer solution of 335.4291 found after 5864 iterations and 599 nodes (105.27 seconds)
Cbc0010I After 600 nodes, 1 on tree, 335.4291 best solution, best possible 335.41183 (105.33 seconds)
Cbc0001I Search completed - best objective 335.4290953610594, took 5899 iterations and 601 nodes (105.34 seconds)
Cbc0035I Maximum depth 178, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2401
Linearization cuts added in total:           2401  (separation time: 0.015213s)
Total solve time:                         105.384s (105.384s in branch-and-bound)
Lower bound:                              335.429
Upper bound:                              335.429  (gap: 0.00%)
Branch-and-bound nodes:                       601
Stats: /tmp/jl_hmImxO/model.nl 1890 [var]   30 [int] 1920 [con]  269 [aux]   2401 [root]     2401 [tot] 0.015213 [sep]  105.384 [time]  105.388 [bb]         3.354291e+02 [lower]         3.354291e+02 [upper]     601 [nodes]
Performance of                           FBBT:	    2.01976s,      620 runs. fix:          0 shrnk:    22.8161 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    11.8059s,        7 runs. fix:     3.3871 shrnk:    133.095 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-7.txt
f0 = 0.03970084595502791
f0 = 0.0458765331035878
f0 = 0.06616807659171318
f0 = 0.019409302466902534
f0 = 0.042347569018696435
f0 = 0.06969704067660455
f0 = 0.01411585633956548
f0 = 0.023820507573016746
f0 = 0.004411205106114212
f0 = 0.07234376374027307
f0 = 0.009704651233451267
f0 = 0.046758774124810644
f0 = 0.05028773820970202
f0 = 0.027349471657908114
f0 = 0.07322600476149592
f0 = 0.03793636391258222
f0 = 0.06352135352804464
f0 = 0.017644820424456847
f0 = 0.06263911250682182
f0 = 0.07410824578271875
f0 = 0.06793255863415887
f0 = 0.024702748594239585
f0 = 0.06263911250682182
f0 = 0.02999619472157664
f0 = 0.0229382665517939
f0 = 0.0582279074007076
f0 = 0.042347569018696435
f0 = 0.04764101514603349
f0 = 0.04764101514603349
f0 = 0.030878435742799484
