solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-6.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.3777738696e+03 (2.81303 seconds)
2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 539.24551       48 2.549387
Couenne: new cutoff value 6.1074617992e+02 (5.84119 seconds)
NLP0014I             2         OPT 594.95143       27 1.734819
Couenne: new cutoff value 5.9495165764e+02 (7.57975 seconds)
Loaded instance "/tmp/jl_VsBmyq/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          199 (0 integer)

Coin0506I Presolve 3681 (0) rows, 3401 (-118) columns and 16921 (-118) elements
Clp0006I 0  Obj -5658.75 Primal inf 7724446.4 (120)
Clp0006I 148  Obj -5658.75 Primal inf 1.6291898e+09 (118)
Clp0006I 296  Obj 79.911882 Primal inf 9888.4493 (79)
Clp0006I 444  Obj 354.81113 Primal inf 71927.017 (142)
Clp0006I 563  Obj 482.41806
Clp0000I Optimal - objective value 482.41806
Clp0000I Optimal - objective value 482.41806
Clp0032I Optimal objective 482.4180551 - 563 iterations time 0.062, Presolve 0.01
Clp0000I Optimal - objective value 482.41806
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 482.41806
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 482.41806 to 482.54281 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 267 row cuts average 2.0 elements, 578 column cuts (578 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (10.66 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 528.48898 (63.90 seconds)
Cbc0010I After 200 nodes, 73 on tree, 1e+50 best solution, best possible 528.48898 (71.55 seconds)
Cbc0010I After 300 nodes, 123 on tree, 1e+50 best solution, best possible 528.48898 (77.63 seconds)
Couenne: new cutoff value 5.4760188603e+02 (89.2516 seconds)
Cbc0010I After 400 nodes, 159 on tree, 1e+50 best solution, best possible 531.08505 (82.76 seconds)
Cbc0010I After 500 nodes, 200 on tree, 1e+50 best solution, best possible 531.08505 (90.35 seconds)
Cbc0010I After 600 nodes, 250 on tree, 1e+50 best solution, best possible 531.08505 (97.99 seconds)
Cbc0010I After 700 nodes, 300 on tree, 1e+50 best solution, best possible 531.08505 (104.65 seconds)
Couenne: new cutoff value 5.3924604014e+02 (112.567 seconds)
Cbc0010I After 800 nodes, 306 on tree, 1e+50 best solution, best possible 537.43765 (111.16 seconds)
Cbc0010I After 900 nodes, 308 on tree, 1e+50 best solution, best possible 538.05746 (117.88 seconds)
Cbc0010I After 1000 nodes, 287 on tree, 1e+50 best solution, best possible 539.10569 (123.29 seconds)
Cbc0010I After 1100 nodes, 241 on tree, 1e+50 best solution, best possible 539.26851 (126.84 seconds)
Cbc0010I After 1200 nodes, 191 on tree, 1e+50 best solution, best possible 539.5733 (129.05 seconds)
Cbc0010I After 1300 nodes, 141 on tree, 1e+50 best solution, best possible 547.56073 (130.90 seconds)
Cbc0010I After 1400 nodes, 91 on tree, 1e+50 best solution, best possible 547.62612 (133.19 seconds)
Cbc0010I After 1500 nodes, 41 on tree, 1e+50 best solution, best possible 548.09391 (135.11 seconds)
Cbc0001I Search completed - best objective 1e+50, took 48278 iterations and 1582 nodes (139.23 seconds)
Cbc0035I Maximum depth 188, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3681
Linearization cuts added in total:           3681  (separation time: 0.021228s)
Total solve time:                         139.299s (139.299s in branch-and-bound)
Lower bound:                              539.246
Upper bound:                              539.246  (gap: 0.00%)
Branch-and-bound nodes:                      1582
Stats: /tmp/jl_VsBmyq/model.nl 3320 [var]   40 [int] 3360 [con]  199 [aux]   3681 [root]     3681 [tot] 0.021228 [sep]  139.299 [time]  139.305 [bb]         5.392460e+02 [lower]         5.392460e+02 [upper]    1582 [nodes]
Performance of                           FBBT:	    6.74336s,     1453 runs. fix:          0 shrnk:    17.3531 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.67319s,        4 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-6.txt
