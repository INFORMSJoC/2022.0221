solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-10.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 427.63112       64 254.42336
NLP0014I             2         OPT 429.19214       45 4.227332
Couenne: new cutoff value 4.2914705904e+02 (266.678 seconds)
Loaded instance "/tmp/jl_zHcQkv/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          499 (0 integer)

Coin0506I Presolve 5599 (-202) rows, 5249 (-400) columns and 26097 (-602) elements
Clp0006I 0  Obj 0 Primal inf 3412.0498 (249) Dual inf 6.7368396e+12 (699)
Clp0029I End of values pass after 149 iterations
Clp0006I 149  Obj 429.15706 Primal inf 259.9118 (100) Dual inf 1.2682933e+14 (5001)
Clp0006I 393  Obj 429.15706 Primal inf 39.45321 (28) Dual inf 1.5681817e+13 (1486)
Clp0006I 585  Obj 399.24302 Dual inf 145.59604 (93)
Clp0006I 686  Obj 341.82969
Clp0000I Optimal - objective value 341.82969
Clp0032I Optimal objective 341.829689 - 686 iterations time 0.162, Presolve 0.03
Clp0000I Optimal - objective value 341.82969
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 341.82969
Optimality Based BT: 78 improved bounds
Probing: 50 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 24 added rows had average density of 2
Cbc0013I At root node, 24 cuts changed objective from 341.82969 to 378.8085 in 9 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 60 row cuts average 2.0 elements, 10 column cuts (10 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (39.32 seconds)
Optimality Based BT: 69 improved bounds
Optimality Based BT: 73 improved bounds
Optimality Based BT: 68 improved bounds
Optimality Based BT: 72 improved bounds
Cbc0010I After 100 nodes, 20 on tree, 1e+50 best solution, best possible 391.45695 (269.80 seconds)
Cbc0010I After 200 nodes, 47 on tree, 1e+50 best solution, best possible 391.45695 (284.82 seconds)
Cbc0010I After 300 nodes, 78 on tree, 1e+50 best solution, best possible 391.45695 (300.97 seconds)
Cbc0010I After 400 nodes, 102 on tree, 1e+50 best solution, best possible 391.45695 (314.94 seconds)
Cbc0010I After 500 nodes, 133 on tree, 1e+50 best solution, best possible 391.45695 (328.96 seconds)
Cbc0010I After 600 nodes, 178 on tree, 1e+50 best solution, best possible 391.45695 (344.66 seconds)
Couenne: new cutoff value 4.2909388004e+02 (619.2 seconds)
Cbc0004I Integer solution of 429.09389 found after 6054 iterations and 644 nodes (352.13 seconds)
Optimality Based BT: 64 improved bounds
Optimality Based BT: 68 improved bounds
Optimality Based BT: 74 improved bounds
Cbc0010I After 700 nodes, 126 on tree, 429.09389 best solution, best possible 414.02268 (506.60 seconds)
Cbc0010I After 800 nodes, 160 on tree, 429.09389 best solution, best possible 414.02268 (519.58 seconds)
Cbc0010I After 900 nodes, 195 on tree, 429.09389 best solution, best possible 414.02268 (532.97 seconds)
Cbc0010I After 1000 nodes, 237 on tree, 429.09389 best solution, best possible 414.02268 (545.63 seconds)
Cbc0010I After 1100 nodes, 283 on tree, 429.09389 best solution, best possible 414.02268 (558.84 seconds)
Cbc0010I After 1200 nodes, 333 on tree, 429.09389 best solution, best possible 414.02268 (573.07 seconds)
Cbc0010I After 1300 nodes, 383 on tree, 429.09389 best solution, best possible 414.02268 (587.03 seconds)
Couenne: new cutoff value 4.2794613749e+02 (858.565 seconds)
Cbc0004I Integer solution of 427.94614 found after 11974 iterations and 1333 nodes (591.39 seconds)
Cbc0010I After 1400 nodes, 136 on tree, 427.94614 best solution, best possible 419.54672 (697.22 seconds)
Cbc0010I After 1500 nodes, 145 on tree, 427.94614 best solution, best possible 423.30597 (711.50 seconds)
Cbc0010I After 1600 nodes, 174 on tree, 427.94614 best solution, best possible 423.30597 (727.13 seconds)
Cbc0010I After 1700 nodes, 197 on tree, 427.94614 best solution, best possible 423.55478 (738.62 seconds)
Cbc0010I After 1800 nodes, 222 on tree, 427.94614 best solution, best possible 423.60075 (755.09 seconds)
Cbc0010I After 1900 nodes, 241 on tree, 427.94614 best solution, best possible 423.85693 (769.81 seconds)
Cbc0010I After 2000 nodes, 268 on tree, 427.94614 best solution, best possible 423.85693 (783.08 seconds)
Cbc0010I After 2100 nodes, 297 on tree, 427.94614 best solution, best possible 423.85693 (798.47 seconds)
Cbc0010I After 2200 nodes, 326 on tree, 427.94614 best solution, best possible 423.85693 (811.35 seconds)
Cbc0010I After 2300 nodes, 364 on tree, 427.94614 best solution, best possible 423.85693 (825.03 seconds)
Cbc0010I After 2400 nodes, 404 on tree, 427.94614 best solution, best possible 423.85693 (839.87 seconds)
Couenne: new cutoff value 4.2783339850e+02 (1117.93 seconds)
Cbc0004I Integer solution of 427.8334 found after 27040 iterations and 2468 nodes (850.75 seconds)
Cbc0010I After 2500 nodes, 285 on tree, 427.8334 best solution, best possible 424.28462 (857.48 seconds)
Cbc0010I After 2600 nodes, 312 on tree, 427.8334 best solution, best possible 424.28462 (871.65 seconds)
Cbc0010I After 2700 nodes, 322 on tree, 427.8334 best solution, best possible 424.41447 (885.17 seconds)
Cbc0010I After 2800 nodes, 353 on tree, 427.8334 best solution, best possible 424.41447 (900.54 seconds)
Cbc0010I After 2900 nodes, 370 on tree, 427.8334 best solution, best possible 424.44457 (913.78 seconds)
Cbc0010I After 3000 nodes, 398 on tree, 427.8334 best solution, best possible 424.44457 (929.35 seconds)
Cbc0010I After 3100 nodes, 434 on tree, 427.8334 best solution, best possible 424.44457 (944.14 seconds)
Cbc0010I After 3200 nodes, 464 on tree, 427.8334 best solution, best possible 424.44457 (956.98 seconds)
Cbc0010I After 3300 nodes, 505 on tree, 427.8334 best solution, best possible 424.44457 (971.82 seconds)
Couenne: new cutoff value 4.2774530843e+02 (1249.24 seconds)
Cbc0004I Integer solution of 427.74531 found after 37336 iterations and 3365 nodes (982.06 seconds)
Cbc0010I After 3400 nodes, 386 on tree, 427.74531 best solution, best possible 424.47899 (990.20 seconds)
Cbc0010I After 3500 nodes, 401 on tree, 427.74531 best solution, best possible 424.51402 (1003.26 seconds)
Cbc0010I After 3600 nodes, 431 on tree, 427.74531 best solution, best possible 424.51402 (1018.34 seconds)
Cbc0010I After 3700 nodes, 442 on tree, 427.74531 best solution, best possible 424.55881 (1032.99 seconds)
Cbc0010I After 3800 nodes, 463 on tree, 427.74531 best solution, best possible 424.63086 (1047.56 seconds)
Cbc0010I After 3900 nodes, 489 on tree, 427.74531 best solution, best possible 424.63086 (1061.76 seconds)
Cbc0010I After 4000 nodes, 507 on tree, 427.74531 best solution, best possible 424.65906 (1074.23 seconds)
Cbc0010I After 4100 nodes, 529 on tree, 427.74531 best solution, best possible 424.66852 (1089.29 seconds)
Cbc0010I After 4200 nodes, 557 on tree, 427.74531 best solution, best possible 424.66852 (1105.72 seconds)
Cbc0010I After 4300 nodes, 585 on tree, 427.74531 best solution, best possible 424.69896 (1120.91 seconds)
Cbc0010I After 4400 nodes, 614 on tree, 427.74531 best solution, best possible 424.69896 (1135.86 seconds)
Cbc0010I After 4500 nodes, 645 on tree, 427.74531 best solution, best possible 424.69896 (1150.01 seconds)
Cbc0010I After 4600 nodes, 683 on tree, 427.74531 best solution, best possible 424.69896 (1164.96 seconds)
Cbc0010I After 4700 nodes, 726 on tree, 427.74531 best solution, best possible 424.69896 (1180.00 seconds)
Couenne: new cutoff value 4.2767411639e+02 (1449.69 seconds)
Cbc0004I Integer solution of 427.67412 found after 55511 iterations and 4715 nodes (1182.51 seconds)
Cbc0010I After 4800 nodes, 597 on tree, 427.67412 best solution, best possible 424.71443 (1198.07 seconds)
Cbc0010I After 4900 nodes, 612 on tree, 427.67412 best solution, best possible 424.73666 (1212.27 seconds)
Cbc0010I After 5000 nodes, 634 on tree, 427.67412 best solution, best possible 424.74905 (1228.81 seconds)
Cbc0010I After 5100 nodes, 647 on tree, 427.67412 best solution, best possible 424.75412 (1243.44 seconds)
Cbc0010I After 5200 nodes, 664 on tree, 427.67412 best solution, best possible 424.80263 (1256.61 seconds)
Cbc0010I After 5300 nodes, 687 on tree, 427.67412 best solution, best possible 424.83287 (1271.47 seconds)
Cbc0010I After 5400 nodes, 716 on tree, 427.67412 best solution, best possible 424.85259 (1287.87 seconds)
Cbc0010I After 5500 nodes, 735 on tree, 427.67412 best solution, best possible 424.85313 (1302.75 seconds)
Cbc0010I After 5600 nodes, 754 on tree, 427.67412 best solution, best possible 424.85727 (1316.29 seconds)
Cbc0010I After 5700 nodes, 783 on tree, 427.67412 best solution, best possible 424.87666 (1332.35 seconds)
Cbc0010I After 5800 nodes, 803 on tree, 427.67412 best solution, best possible 424.87717 (1348.78 seconds)
Cbc0010I After 5900 nodes, 820 on tree, 427.67412 best solution, best possible 424.8877 (1362.77 seconds)
Cbc0010I After 6000 nodes, 844 on tree, 427.67412 best solution, best possible 424.91526 (1379.13 seconds)
Cbc0010I After 6100 nodes, 866 on tree, 427.67412 best solution, best possible 424.91526 (1395.14 seconds)
Cbc0010I After 6200 nodes, 894 on tree, 427.67412 best solution, best possible 424.92236 (1410.60 seconds)
Cbc0010I After 6300 nodes, 918 on tree, 427.67412 best solution, best possible 424.94709 (1425.97 seconds)
Cbc0010I After 6400 nodes, 942 on tree, 427.67412 best solution, best possible 424.97364 (1441.08 seconds)
Cbc0010I After 6500 nodes, 960 on tree, 427.67412 best solution, best possible 424.98336 (1457.24 seconds)
Cbc0010I After 6600 nodes, 983 on tree, 427.67412 best solution, best possible 424.98457 (1472.25 seconds)
Cbc0010I After 6700 nodes, 1005 on tree, 427.67412 best solution, best possible 425.00076 (1488.85 seconds)
Cbc0010I After 6800 nodes, 1019 on tree, 427.67412 best solution, best possible 425.0194 (1503.79 seconds)
Cbc0010I After 6900 nodes, 1031 on tree, 427.67412 best solution, best possible 425.05469 (1572.35 seconds)
Cbc0010I After 7000 nodes, 1052 on tree, 427.67412 best solution, best possible 425.05877 (1587.51 seconds)
Cbc0010I After 7100 nodes, 1079 on tree, 427.67412 best solution, best possible 425.05877 (1604.21 seconds)
Cbc0010I After 7200 nodes, 1107 on tree, 427.67412 best solution, best possible 425.06975 (1619.95 seconds)
Cbc0010I After 7300 nodes, 1129 on tree, 427.67412 best solution, best possible 425.06975 (1636.17 seconds)
Cbc0010I After 7400 nodes, 1150 on tree, 427.67412 best solution, best possible 425.07711 (1650.94 seconds)
Cbc0010I After 7500 nodes, 1169 on tree, 427.67412 best solution, best possible 425.08873 (1666.48 seconds)
Cbc0010I After 7600 nodes, 1191 on tree, 427.67412 best solution, best possible 425.09954 (1682.92 seconds)
Cbc0010I After 7700 nodes, 1208 on tree, 427.67412 best solution, best possible 425.10743 (1699.25 seconds)
Cbc0010I After 7800 nodes, 1231 on tree, 427.67412 best solution, best possible 425.10962 (1714.56 seconds)
Cbc0010I After 7900 nodes, 1246 on tree, 427.67412 best solution, best possible 425.12251 (1729.86 seconds)
Cbc0010I After 8000 nodes, 1273 on tree, 427.67412 best solution, best possible 425.12397 (1747.90 seconds)
Cbc0010I After 8100 nodes, 1291 on tree, 427.67412 best solution, best possible 425.13085 (1763.44 seconds)
Cbc0010I After 8200 nodes, 1308 on tree, 427.67412 best solution, best possible 425.13122 (1779.22 seconds)
Cbc0010I After 8300 nodes, 1336 on tree, 427.67412 best solution, best possible 425.13477 (1795.45 seconds)
Cbc0010I After 8400 nodes, 1354 on tree, 427.67412 best solution, best possible 425.1605 (1811.55 seconds)
Cbc0010I After 8500 nodes, 1377 on tree, 427.67412 best solution, best possible 425.17335 (1827.39 seconds)
Cbc0010I After 8600 nodes, 1407 on tree, 427.67412 best solution, best possible 425.17733 (1844.65 seconds)
Cbc0010I After 8700 nodes, 1424 on tree, 427.67412 best solution, best possible 425.17945 (1859.62 seconds)
Cbc0010I After 8800 nodes, 1452 on tree, 427.67412 best solution, best possible 425.17945 (1876.51 seconds)
Cbc0010I After 8900 nodes, 1477 on tree, 427.67412 best solution, best possible 425.18237 (1892.44 seconds)
Cbc0010I After 9000 nodes, 1497 on tree, 427.67412 best solution, best possible 425.18323 (1908.69 seconds)
Cbc0010I After 9100 nodes, 1524 on tree, 427.67412 best solution, best possible 425.18354 (1925.30 seconds)
Cbc0010I After 9200 nodes, 1543 on tree, 427.67412 best solution, best possible 425.19293 (1941.40 seconds)
Cbc0010I After 9300 nodes, 1569 on tree, 427.67412 best solution, best possible 425.19293 (1958.01 seconds)
Cbc0010I After 9400 nodes, 1593 on tree, 427.67412 best solution, best possible 425.19383 (1974.14 seconds)
Cbc0010I After 9500 nodes, 1616 on tree, 427.67412 best solution, best possible 425.2 (1990.09 seconds)
Cbc0010I After 9600 nodes, 1632 on tree, 427.67412 best solution, best possible 425.20948 (2005.80 seconds)
Cbc0010I After 9700 nodes, 1662 on tree, 427.67412 best solution, best possible 425.23546 (2024.27 seconds)
Cbc0010I After 9800 nodes, 1677 on tree, 427.67412 best solution, best possible 425.24185 (2039.85 seconds)
Cbc0010I After 9900 nodes, 1706 on tree, 427.67412 best solution, best possible 425.24215 (2056.74 seconds)
Cbc0010I After 10000 nodes, 1730 on tree, 427.67412 best solution, best possible 425.24343 (2073.39 seconds)
Cbc0010I After 10100 nodes, 1757 on tree, 427.67412 best solution, best possible 425.24593 (2090.50 seconds)
Cbc0010I After 10200 nodes, 1786 on tree, 427.67412 best solution, best possible 425.24624 (2107.19 seconds)
Cbc0010I After 10300 nodes, 1808 on tree, 427.67412 best solution, best possible 425.24752 (2124.14 seconds)
Cbc0010I After 10400 nodes, 1833 on tree, 427.67412 best solution, best possible 425.2519 (2141.02 seconds)
Cbc0010I After 10500 nodes, 1859 on tree, 427.67412 best solution, best possible 425.25287 (2157.54 seconds)
Cbc0010I After 10600 nodes, 1880 on tree, 427.67412 best solution, best possible 425.25599 (2173.66 seconds)
Cbc0010I After 10700 nodes, 1904 on tree, 427.67412 best solution, best possible 425.26255 (2190.30 seconds)
Cbc0010I After 10800 nodes, 1925 on tree, 427.67412 best solution, best possible 425.29381 (2207.34 seconds)
Cbc0010I After 10900 nodes, 1950 on tree, 427.67412 best solution, best possible 425.29786 (2223.17 seconds)
Cbc0010I After 11000 nodes, 1972 on tree, 427.67412 best solution, best possible 425.30392 (2239.23 seconds)
Cbc0010I After 11100 nodes, 1994 on tree, 427.67412 best solution, best possible 425.31126 (2255.73 seconds)
Cbc0010I After 11200 nodes, 2023 on tree, 427.67412 best solution, best possible 425.31156 (2275.01 seconds)
Cbc0010I After 11300 nodes, 2049 on tree, 427.67412 best solution, best possible 425.3146 (2291.83 seconds)
Cbc0010I After 11400 nodes, 2074 on tree, 427.67412 best solution, best possible 425.31534 (2308.61 seconds)
Cbc0010I After 11500 nodes, 2097 on tree, 427.67412 best solution, best possible 425.31565 (2325.08 seconds)
Cbc0010I After 11600 nodes, 2122 on tree, 427.67412 best solution, best possible 425.31869 (2341.62 seconds)
Cbc0010I After 11700 nodes, 2144 on tree, 427.67412 best solution, best possible 425.32599 (2357.61 seconds)
Cbc0010I After 11800 nodes, 2170 on tree, 427.67412 best solution, best possible 425.33325 (2373.73 seconds)
Cbc0010I After 11900 nodes, 2196 on tree, 427.67412 best solution, best possible 425.33343 (2390.16 seconds)
Cbc0010I After 12000 nodes, 2208 on tree, 427.67412 best solution, best possible 425.33638 (2406.02 seconds)
Cbc0010I After 12100 nodes, 2222 on tree, 427.67412 best solution, best possible 425.33734 (2420.54 seconds)
Cbc0010I After 12200 nodes, 2250 on tree, 427.67412 best solution, best possible 425.33868 (2436.91 seconds)
Cbc0010I After 12300 nodes, 2270 on tree, 427.67412 best solution, best possible 425.34191 (2452.97 seconds)
Cbc0010I After 12400 nodes, 2295 on tree, 427.67412 best solution, best possible 425.35039 (2471.98 seconds)
Cbc0010I After 12500 nodes, 2320 on tree, 427.67412 best solution, best possible 425.3507 (2488.78 seconds)
Cbc0010I After 12600 nodes, 2347 on tree, 427.67412 best solution, best possible 425.35478 (2504.99 seconds)
Cbc0010I After 12700 nodes, 2373 on tree, 427.67412 best solution, best possible 425.36602 (2521.85 seconds)
Cbc0010I After 12800 nodes, 2398 on tree, 427.67412 best solution, best possible 425.36789 (2537.72 seconds)
Cbc0010I After 12900 nodes, 2423 on tree, 427.67412 best solution, best possible 425.3682 (2554.28 seconds)
Cbc0010I After 13000 nodes, 2449 on tree, 427.67412 best solution, best possible 425.3687 (2571.35 seconds)
Cbc0010I After 13100 nodes, 2472 on tree, 427.67412 best solution, best possible 425.3707 (2589.31 seconds)
Cbc0010I After 13200 nodes, 2495 on tree, 427.67412 best solution, best possible 425.37086 (2605.72 seconds)
Cbc0010I After 13300 nodes, 2523 on tree, 427.67412 best solution, best possible 425.37198 (2623.30 seconds)
Cbc0010I After 13400 nodes, 2547 on tree, 427.67412 best solution, best possible 425.37228 (2639.65 seconds)
Cbc0010I After 13500 nodes, 2571 on tree, 427.67412 best solution, best possible 425.37944 (2656.38 seconds)
Cbc0010I After 13600 nodes, 2598 on tree, 427.67412 best solution, best possible 425.38401 (2673.05 seconds)
Cbc0010I After 13700 nodes, 2624 on tree, 427.67412 best solution, best possible 425.39976 (2689.09 seconds)
Cbc0010I After 13800 nodes, 2645 on tree, 427.67412 best solution, best possible 425.40025 (2705.10 seconds)
Cbc0010I After 13900 nodes, 2665 on tree, 427.67412 best solution, best possible 425.40648 (2721.76 seconds)
Cbc0010I After 14000 nodes, 2683 on tree, 427.67412 best solution, best possible 425.41449 (2738.41 seconds)
Cbc0010I After 14100 nodes, 2712 on tree, 427.67412 best solution, best possible 425.41697 (2754.74 seconds)
Cbc0010I After 14200 nodes, 2725 on tree, 427.67412 best solution, best possible 425.41858 (2769.73 seconds)
Cbc0010I After 14300 nodes, 2753 on tree, 427.67412 best solution, best possible 425.4198 (2786.71 seconds)
Cbc0010I After 14400 nodes, 2779 on tree, 427.67412 best solution, best possible 425.42011 (2803.81 seconds)
Cbc0010I After 14500 nodes, 2806 on tree, 427.67412 best solution, best possible 425.422 (2820.82 seconds)
Cbc0010I After 14600 nodes, 2826 on tree, 427.67412 best solution, best possible 425.42315 (2836.72 seconds)
Cbc0010I After 14700 nodes, 2849 on tree, 427.67412 best solution, best possible 425.42351 (2852.04 seconds)
Cbc0010I After 14800 nodes, 2868 on tree, 427.67412 best solution, best possible 425.42403 (2870.38 seconds)
Cbc0010I After 14900 nodes, 2894 on tree, 427.67412 best solution, best possible 425.42419 (2886.85 seconds)
Cbc0010I After 15000 nodes, 2919 on tree, 427.67412 best solution, best possible 425.42419 (2902.93 seconds)
Cbc0010I After 15100 nodes, 2942 on tree, 427.67412 best solution, best possible 425.42872 (2921.03 seconds)
Cbc0010I After 15200 nodes, 2967 on tree, 427.67412 best solution, best possible 425.43059 (2936.10 seconds)
Cbc0010I After 15300 nodes, 2993 on tree, 427.67412 best solution, best possible 425.4309 (2952.27 seconds)
Cbc0010I After 15400 nodes, 3023 on tree, 427.67412 best solution, best possible 425.43281 (2969.59 seconds)
Cbc0010I After 15500 nodes, 3046 on tree, 427.67412 best solution, best possible 425.43468 (2985.40 seconds)
Cbc0010I After 15600 nodes, 3068 on tree, 427.67412 best solution, best possible 425.43498 (3001.27 seconds)
Cbc0010I After 15700 nodes, 3095 on tree, 427.67412 best solution, best possible 425.44289 (3016.59 seconds)
Cbc0010I After 15800 nodes, 3118 on tree, 427.67412 best solution, best possible 425.44371 (3032.24 seconds)
Cbc0010I After 15900 nodes, 3140 on tree, 427.67412 best solution, best possible 425.44667 (3049.13 seconds)
Cbc0010I After 16000 nodes, 3162 on tree, 427.67412 best solution, best possible 425.44961 (3064.58 seconds)
Cbc0010I After 16100 nodes, 3176 on tree, 427.67412 best solution, best possible 425.45192 (3080.08 seconds)
Cbc0010I After 16200 nodes, 3204 on tree, 427.67412 best solution, best possible 425.45216 (3096.84 seconds)
Cbc0010I After 16300 nodes, 3219 on tree, 427.67412 best solution, best possible 425.46984 (3111.21 seconds)
Cbc0010I After 16400 nodes, 3246 on tree, 427.67412 best solution, best possible 425.47015 (3126.92 seconds)
Cbc0010I After 16500 nodes, 3273 on tree, 427.67412 best solution, best possible 425.47393 (3143.26 seconds)
Cbc0010I After 16600 nodes, 3300 on tree, 427.67412 best solution, best possible 425.47424 (3159.56 seconds)
Cbc0010I After 16700 nodes, 3325 on tree, 427.67412 best solution, best possible 425.47645 (3176.00 seconds)
Cbc0010I After 16800 nodes, 3349 on tree, 427.67412 best solution, best possible 425.47719 (3192.51 seconds)
Cbc0010I After 16900 nodes, 3379 on tree, 427.67412 best solution, best possible 425.48054 (3209.90 seconds)
Cbc0010I After 17000 nodes, 3402 on tree, 427.67412 best solution, best possible 425.48128 (3226.83 seconds)
Cbc0010I After 17100 nodes, 3424 on tree, 427.67412 best solution, best possible 425.48847 (3243.12 seconds)
Cbc0010I After 17200 nodes, 3449 on tree, 427.67412 best solution, best possible 425.49254 (3261.29 seconds)
Cbc0010I After 17300 nodes, 3476 on tree, 427.67412 best solution, best possible 425.49538 (3277.61 seconds)
Cbc0010I After 17400 nodes, 3505 on tree, 427.67412 best solution, best possible 425.49546 (3296.59 seconds)
Cbc0010I After 17500 nodes, 3528 on tree, 427.67412 best solution, best possible 425.49664 (3312.43 seconds)
Cbc0010I After 17600 nodes, 3551 on tree, 427.67412 best solution, best possible 425.49813 (3328.83 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 427.67412 (best possible 425.49813), took 261604 iterations and 17634 nodes (3350.40 seconds)
Cbc0035I Maximum depth 345, 6855 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5801
Linearization cuts added in total:           5801  (separation time: 0.057131s)
Total solve time:                         3350.59s (3350.59s in branch-and-bound)
Lower bound:                              425.498
Upper bound:                              427.674  (gap: 0.51%)
Branch-and-bound nodes:                     17634
Stats: /tmp/jl_zHcQkv/model.nl 5150 [var]   50 [int] 5200 [con]  499 [aux]   5801 [root]     5801 [tot] 0.057131 [sep]  3350.59 [time]   3350.6 [bb]         4.254981e+02 [lower]         4.276741e+02 [upper]   17634 [nodes]
Performance of                           FBBT:	    301.708s,    21164 runs. fix:  0.0025645 shrnk:    5.68811 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    54.6294s,        8 runs. fix:          0 shrnk:    166.109 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-10.txt
