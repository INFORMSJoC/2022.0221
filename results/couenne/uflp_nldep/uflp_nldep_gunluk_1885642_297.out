solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-9.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 257.37947       52 33.165686
NLP0014I             2         OPT 257.38566       40 0.841788
Couenne: new cutoff value 2.5738576794e+02 (34.9944 seconds)
Loaded instance "/tmp/jl_MZoELV/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          269 (0 integer)

Coin0506I Presolve 2309 (-92) rows, 1949 (-210) columns and 9927 (-302) elements
Clp0006I 0  Obj 0 Primal inf 9676.8447 (390)
Clp0006I 121  Obj 2.0460629e-14 Primal inf 45645.167 (157)
Clp0006I 242  Obj 255.14192 Primal inf 163.55336 (119)
Clp0006I 363  Obj 255.46321 Primal inf 42951.894 (77)
Clp0006I 389  Obj 256.29812
Clp0000I Optimal - objective value 256.29812
Clp0032I Optimal objective 256.2981197 - 389 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 256.29812
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 256.29812
Optimality Based BT: 56 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 52 added rows had average density of 2
Cbc0013I At root node, 52 cuts changed objective from 256.29812 to 257.37968 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 366 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.28 seconds)
Optimality Based BT: 62 improved bounds
Optimality Based BT: 51 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 5 improved bounds
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 257.3798 (46.78 seconds)
Couenne: new cutoff value 2.5737980439e+02 (82.6447 seconds)
Cbc0004I Integer solution of 257.3798 found after 970 iterations and 125 nodes (47.57 seconds)
Cbc0001I Search completed - best objective 257.3798043916664, took 970 iterations and 125 nodes (47.60 seconds)
Cbc0035I Maximum depth 62, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2401
Linearization cuts added in total:           2401  (separation time: 0.015333s)
Total solve time:                         47.6374s (47.6374s in branch-and-bound)
Lower bound:                               257.38
Upper bound:                               257.38  (gap: 0.00%)
Branch-and-bound nodes:                       125
Stats: /tmp/jl_MZoELV/model.nl 1890 [var]   30 [int] 1920 [con]  269 [aux]   2401 [root]     2401 [tot] 0.015333 [sep]  47.6374 [time]  47.6413 [bb]         2.573798e+02 [lower]         2.573798e+02 [upper]     125 [nodes]
Performance of                           FBBT:	   0.433524s,      143 runs. fix:          0 shrnk:    51.7369 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    7.27875s,        5 runs. fix:        7.8 shrnk:    219.259 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-9.txt
f0 = 0.07410824578271875
f0 = 0.00705792816978274
f0 = 0.08822410212228424
f0 = 0.023820507573016746
f0 = 0.05469894331581623
f0 = 0.07851945088883297
f0 = 0.005293446127337054
f0 = 0.05999238944315328
f0 = 0.08822410212228424
f0 = 0.0688147996553817
f0 = 0.07675496884638729
f0 = 0.02205602553057106
f0 = 0.07675496884638729
f0 = 0.05116997923092485
f0 = 0.046758774124810644
f0 = 0.006175687148559896
f0 = 0.06705031761293602
f0 = 0.03881860493380507
f0 = 0.023820507573016746
f0 = 0.0644035945492675
f0 = 0.027349471657908114
f0 = 0.01411585633956548
f0 = 0.01146913327589695
f0 = 0.017644820424456847
f0 = 0.07763720986761014
f0 = 0.024702748594239585
f0 = 0.001764482042445685
f0 = 0.030878435742799484
f0 = 0.04940549718847917
f0 = 0.024702748594239585
