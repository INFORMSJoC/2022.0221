solving instance uflp nldep holmberg 67 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 9.7726000000e+04 (9.79354 seconds)
9.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 16701.267       45 5.751453
NLP0014I             2         OPT 16916.007       31 2.835828
Couenne: new cutoff value 1.6915998822e+04 (19.2403 seconds)
Loaded instance "/tmp/jl_yS9PV7/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          289 (0 integer)

Coin0506I Presolve 6501 (0) rows, 6151 (-228) columns and 30691 (-228) elements
Clp0006I 0  Obj 0 Primal inf 582.57645 (200) Dual inf 1.5057207e+14 (6001)
Clp0029I End of values pass after 31 iterations
Clp0006I 31  Obj 0 Primal inf 582.57645 (200) Dual inf 1.5057207e+14 (6030)
Clp0006I 236  Obj 1.5596749e-08 Primal inf 582.57645 (200) Dual inf 5.7946455e+13 (4493)
Clp0006I 441  Obj 3.7391276e-08 Primal inf 582.57645 (200) Dual inf 5.7463704e+12 (4066)
Clp0006I 646  Obj 7.6416383e-08 Primal inf 582.57645 (200) Dual inf 4.9126699e+12 (3861)
Clp0006I 851  Obj 1.1761163e-07 Primal inf 582.57645 (200) Dual inf 4.2594706e+12 (3656)
Clp0006I 1056  Obj 1.5828528e-07 Primal inf 582.57645 (200) Dual inf 3.7070776e+12 (3451)
Clp0006I 1261  Obj 2.009453e-07 Primal inf 582.57645 (200) Dual inf 3.2251385e+12 (3246)
Clp0006I 1466  Obj 2.4481722e-07 Primal inf 582.57645 (200) Dual inf 2.7941627e+12 (3041)
Clp0006I 1671  Obj 2.8954613e-07 Primal inf 582.57645 (200) Dual inf 2.4083587e+12 (2836)
Clp0006I 1876  Obj 3.3486384e-07 Primal inf 582.57645 (200) Dual inf 2.0603943e+12 (2631)
Clp0006I 2081  Obj 3.7924784e-07 Primal inf 582.57645 (200) Dual inf 1.7422979e+12 (2426)
Clp0006I 2286  Obj 4.2380759e-07 Primal inf 582.57645 (200) Dual inf 1.4500915e+12 (2221)
Clp0006I 2491  Obj 4.6919025e-07 Primal inf 582.57645 (200) Dual inf 1.1878012e+12 (2016)
Clp0006I 2696  Obj 5.147531e-07 Primal inf 582.57645 (200) Dual inf 9.5247641e+11 (1811)
Clp0006I 2901  Obj 5.5901533e-07 Primal inf 582.57645 (200) Dual inf 7.4296466e+11 (1606)
Clp0006I 3106  Obj 6.0324261e-07 Primal inf 582.57645 (200) Dual inf 5.595773e+11 (1401)
Clp0006I 3311  Obj 16916.009 Primal inf 541.72764 (201) Dual inf 3.2376994e+10 (997)
Clp0006I 3516  Obj 16916.009 Primal inf 533.53432 (201) Dual inf 1.084237e+11 (1430)
Clp0006I 3721  Obj 16916.009 Primal inf 527.84188 (116) Dual inf 1.5876897e+13 (4214)
Clp0006I 3926  Obj 16916.009 Primal inf 523.44178 (122) Dual inf 1.1949825e+13 (4010)
Clp0006I 4131  Obj 16916.009 Primal inf 522.04686 (127) Dual inf 4.8899147e+12 (3123)
Clp0006I 4337  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.1584415e+13 (1797)
Clp0006I 4500  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 2.6372193e+13 (1603)
Clp0006I 4649  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.5700535e+11 (1506)
Clp0006I 4821  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.5814853e+11 (1333)
Clp0006I 4989  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.5174673e+11 (1185)
Clp0006I 5141  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.57204e+11 (1063)
Clp0006I 5291  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.793746e+11 (1009)
Clp0006I 5444  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 2.0202435e+11 (988)
Clp0006I 5593  Obj 16916.009 Primal inf 501.94905 (124) Dual inf 1.4438072e+13 (3478)
Clp0006I 5738  Obj 16916.009 Primal inf 501.82822 (123) Dual inf 1.1309642e+13 (3208)
Clp0006I 5864  Obj 16916.009 Primal inf 501.82822 (123) Dual inf 1.0124574e+13 (3156)
Clp0006I 5992  Obj 16916.009 Primal inf 501.82822 (123) Dual inf 8.7701406e+12 (3005)
Clp0006I 6118  Obj 16916.009 Primal inf 501.82822 (123) Dual inf 8.3341357e+12 (3094)
Clp0006I 6245  Obj 16916.009 Primal inf 501.82822 (123) Dual inf 8.3634002e+12 (3064)
Clp0006I 6367  Obj 16916.009 Primal inf 501.82821 (123) Dual inf 8.2786856e+12 (3088)
Clp0006I 6501  Obj 16916.009 Primal inf 501.82818 (124) Dual inf 8.5541556e+12 (3064)
Clp0006I 6633  Obj 16916.009 Primal inf 489.96283 (126) Dual inf 7.5931099e+12 (2706)
Clp0006I 6757  Obj 16916.009 Primal inf 474.13521 (190) Dual inf 8.7128787e+12 (3630)
Clp0006I 6885  Obj 16916.009 Primal inf 454.44351 (178) Dual inf 4.3430004e+12 (1374)
Clp0006I 7016  Obj 16916.009 Primal inf 393.00043 (167) Dual inf 5.8138645e+13 (2003)
Clp0006I 7221  Obj 16916.009 Primal inf 367.91302 (172) Dual inf 1.4828194e+13 (2226)
Clp0006I 7377  Obj 16916.009 Primal inf 352.03605 (166) Dual inf 2.6736028e+13 (1151)
Clp0006I 7526  Obj 16916.009 Primal inf 346.26984 (163) Dual inf 5.4463976e+13 (3021)
Clp0006I 7670  Obj 16916.009 Primal inf 336.80209 (155) Dual inf 2.4871499e+14 (3236)
Clp0006I 7828  Obj 16916.009 Primal inf 321.05774 (160) Dual inf 5.2106021e+12 (1553)
Clp0006I 7989  Obj 16916.009 Primal inf 318.15669 (158) Dual inf 1.8627172e+13 (1866)
Clp0006I 8163  Obj 16916.009 Primal inf 314.11743 (152) Dual inf 4.3187571e+12 (1461)
Clp0006I 8292  Obj 16916.009 Primal inf 303.80433 (149) Dual inf 2.6688811e+12 (1211)
Clp0006I 8416  Obj 16916.009 Primal inf 296.27012 (153) Dual inf 3.6930556e+12 (1184)
Clp0006I 8553  Obj 16916.009 Primal inf 287.69447 (146) Dual inf 4.7547383e+12 (1379)
Clp0006I 8693  Obj 16916.009 Primal inf 277.75741 (138) Dual inf 4.5802801e+12 (1268)
Clp0006I 8841  Obj 16916.009 Primal inf 249.66382 (148) Dual inf 2.9080771e+14 (3017)
Clp0006I 8994  Obj 16916.009 Primal inf 239.56513 (136) Dual inf 4.4727179e+13 (2517)
Clp0006I 9124  Obj 16916.009 Primal inf 221.96362 (136) Dual inf 2.9462735e+13 (2094)
Clp0006I 9281  Obj 16916.009 Primal inf 211.16215 (117) Dual inf 7.478234e+12 (1338)
Clp0006I 9434  Obj 16916.009 Primal inf 204.06988 (112) Dual inf 2.2434942e+12 (936)
Clp0006I 9542  Obj 16916.009 Primal inf 201.32871 (104) Dual inf 2.9497429e+12 (1022)
Clp0006I 9679  Obj 16916.009 Primal inf 194.87101 (109) Dual inf 3.9716461e+12 (1373)
Clp0006I 9839  Obj 16916.009 Primal inf 187.71341 (114) Dual inf 1.0847458e+14 (1259)
Clp0006I 10035  Obj 16916.009 Primal inf 185.75903 (116) Dual inf 4.3532706e+12 (1269)
Clp0006I 10161  Obj 16916.009 Primal inf 181.63308 (109) Dual inf 1.2318983e+13 (1175)
Clp0006I 10300  Obj 16916.009 Primal inf 176.12503 (110) Dual inf 9.5183057e+11 (765)
Clp0006I 10445  Obj 16916.009 Primal inf 163.53525 (113) Dual inf 1.6979451e+13 (1127)
Clp0006I 10589  Obj 16916.009 Primal inf 148.53704 (101) Dual inf 5.7712352e+12 (1977)
Clp0006I 10721  Obj 16916.009 Primal inf 140.25696 (88) Dual inf 1.525194e+13 (3321)
Clp0006I 10844  Obj 16916.009 Primal inf 125.74704 (99) Dual inf 4.9598486e+13 (3565)
Clp0006I 10980  Obj 16916.009 Primal inf 110.51738 (104) Dual inf 1.418405e+14 (2227)
Clp0006I 11122  Obj 16916.009 Primal inf 98.613449 (82) Dual inf 8.0745407e+12 (1346)
Clp0006I 11261  Obj 16916.009 Primal inf 85.54743 (80) Dual inf 2.1601464e+13 (2496)
Clp0006I 11397  Obj 16916.009 Primal inf 75.481186 (89) Dual inf 9.4351174e+12 (1513)
Clp0006I 11539  Obj 16916.009 Primal inf 64.162997 (83) Dual inf 2.7341329e+13 (2815)
Clp0006I 11695  Obj 16916.009 Primal inf 58.523312 (76) Dual inf 5.570914e+14 (3190)
Clp0006I 11838  Obj 16916.009 Primal inf 53.507464 (76) Dual inf 5.5288858e+12 (1105)
Clp0006I 11976  Obj 16916.009 Primal inf 46.942492 (64) Dual inf 5.066931e+12 (1175)
Clp0006I 12104  Obj 16916.009 Primal inf 41.104969 (57) Dual inf 6.2914726e+13 (3350)
Clp0006I 12246  Obj 16916.009 Primal inf 35.735932 (52) Dual inf 1.0054805e+14 (878)
Clp0006I 12449  Obj 16916.009 Primal inf 31.429522 (38) Dual inf 2.9558812e+13 (1254)
Clp0006I 12613  Obj 16916.009 Primal inf 28.424478 (30) Dual inf 5.0479886e+12 (1534)
Clp0006I 12741  Obj 16916.009 Primal inf 26.63896 (27) Dual inf 8.0501457e+11 (661)
Clp0006I 12895  Obj 16916.009 Primal inf 24.099801 (24) Dual inf 5.2154678e+13 (3312)
Clp0006I 13037  Obj 16916.009 Primal inf 19.1941 (18) Dual inf 1.9216689e+12 (861)
Clp0006I 13181  Obj 16916.009 Primal inf 14.038063 (19) Dual inf 2.5624107e+12 (802)
Clp0006I 13320  Obj 16916.009 Primal inf 11.757246 (14) Dual inf 1.0779448e+11 (302)
Clp0006I 13456  Obj 16916.009 Primal inf 0.49359897 (8) Dual inf 1.0392853e+11 (214)
Clp0006I 13476  Obj 16916.009 Dual inf 259.36507 (1)
Clp0006I 13633  Obj 15429.945 Dual inf 1064.7835 (106)
Clp0006I 13792  Obj 14182.993
Clp0000I Optimal - objective value 14182.993
Clp0000I Optimal - objective value 14183.002
Clp0032I Optimal objective 14183.0015 - 13792 iterations time 11.632, Presolve 0.02
Clp0000I Optimal - objective value 14183.002
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 14183.002
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 14183.002 to 14186.409 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 202 row cuts average 2.0 elements, 290 column cuts (290 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (37.05 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 3 on tree, 1e+50 best solution, best possible 16273.229 (185.20 seconds)
Cbc0010I After 200 nodes, 42 on tree, 1e+50 best solution, best possible 16426.44 (202.21 seconds)
Cbc0010I After 300 nodes, 92 on tree, 1e+50 best solution, best possible 16426.44 (219.83 seconds)
Cbc0010I After 400 nodes, 142 on tree, 1e+50 best solution, best possible 16426.44 (236.69 seconds)
Cbc0010I After 500 nodes, 192 on tree, 1e+50 best solution, best possible 16426.44 (250.48 seconds)
Couenne: new cutoff value 1.6701282966e+04 (283.622 seconds)
Cbc0010I After 600 nodes, 199 on tree, 1e+50 best solution, best possible 16533.071 (263.17 seconds)
Cbc0010I After 700 nodes, 207 on tree, 1e+50 best solution, best possible 16575.747 (277.44 seconds)
Cbc0010I After 800 nodes, 224 on tree, 1e+50 best solution, best possible 16582.872 (293.90 seconds)
Cbc0010I After 900 nodes, 239 on tree, 1e+50 best solution, best possible 16594.197 (309.40 seconds)
Cbc0010I After 1000 nodes, 257 on tree, 1e+50 best solution, best possible 16595.703 (325.71 seconds)
Cbc0010I After 1100 nodes, 278 on tree, 1e+50 best solution, best possible 16599.395 (341.67 seconds)
Cbc0010I After 1200 nodes, 297 on tree, 1e+50 best solution, best possible 16603.594 (357.37 seconds)
Cbc0010I After 1300 nodes, 316 on tree, 1e+50 best solution, best possible 16608.493 (373.94 seconds)
Cbc0010I After 1400 nodes, 335 on tree, 1e+50 best solution, best possible 16613.356 (390.17 seconds)
Cbc0010I After 1500 nodes, 348 on tree, 1e+50 best solution, best possible 16618.524 (405.66 seconds)
Cbc0010I After 1600 nodes, 361 on tree, 1e+50 best solution, best possible 16622.178 (421.04 seconds)
Cbc0010I After 1700 nodes, 373 on tree, 1e+50 best solution, best possible 16624.322 (436.04 seconds)
Cbc0010I After 1800 nodes, 384 on tree, 1e+50 best solution, best possible 16627.996 (450.62 seconds)
Cbc0010I After 1900 nodes, 396 on tree, 1e+50 best solution, best possible 16629.575 (465.19 seconds)
Cbc0010I After 2000 nodes, 404 on tree, 1e+50 best solution, best possible 16632.903 (481.09 seconds)
Cbc0010I After 2100 nodes, 414 on tree, 1e+50 best solution, best possible 16636.059 (496.09 seconds)
Cbc0010I After 2200 nodes, 418 on tree, 1e+50 best solution, best possible 16639.64 (511.12 seconds)
Cbc0010I After 2300 nodes, 435 on tree, 1e+50 best solution, best possible 16640.341 (527.89 seconds)
Cbc0010I After 2400 nodes, 437 on tree, 1e+50 best solution, best possible 16642.519 (541.77 seconds)
Cbc0010I After 2500 nodes, 444 on tree, 1e+50 best solution, best possible 16644.992 (556.58 seconds)
Cbc0010I After 2600 nodes, 460 on tree, 1e+50 best solution, best possible 16646.308 (573.63 seconds)
Cbc0010I After 2700 nodes, 466 on tree, 1e+50 best solution, best possible 16649.21 (588.61 seconds)
Cbc0010I After 2800 nodes, 478 on tree, 1e+50 best solution, best possible 16650.66 (604.85 seconds)
Cbc0010I After 2900 nodes, 492 on tree, 1e+50 best solution, best possible 16651.545 (621.10 seconds)
Cbc0010I After 3000 nodes, 499 on tree, 1e+50 best solution, best possible 16654.107 (637.08 seconds)
Cbc0010I After 3100 nodes, 515 on tree, 1e+50 best solution, best possible 16654.472 (654.42 seconds)
Cbc0010I After 3200 nodes, 518 on tree, 1e+50 best solution, best possible 16655.619 (668.87 seconds)
Cbc0010I After 3300 nodes, 524 on tree, 1e+50 best solution, best possible 16656.789 (684.08 seconds)
Cbc0010I After 3400 nodes, 534 on tree, 1e+50 best solution, best possible 16658.207 (701.05 seconds)
Cbc0010I After 3500 nodes, 537 on tree, 1e+50 best solution, best possible 16659.519 (715.95 seconds)
Cbc0010I After 3600 nodes, 541 on tree, 1e+50 best solution, best possible 16660.292 (730.69 seconds)
Cbc0010I After 3700 nodes, 541 on tree, 1e+50 best solution, best possible 16661.58 (745.07 seconds)
Cbc0010I After 3800 nodes, 544 on tree, 1e+50 best solution, best possible 16662.863 (759.80 seconds)
Cbc0010I After 3900 nodes, 548 on tree, 1e+50 best solution, best possible 16663.545 (774.55 seconds)
Cbc0010I After 4000 nodes, 550 on tree, 1e+50 best solution, best possible 16664.086 (789.57 seconds)
Cbc0010I After 4100 nodes, 548 on tree, 1e+50 best solution, best possible 16664.866 (803.37 seconds)
Cbc0010I After 4200 nodes, 556 on tree, 1e+50 best solution, best possible 16665.827 (818.80 seconds)
Cbc0010I After 4300 nodes, 560 on tree, 1e+50 best solution, best possible 16666.329 (834.06 seconds)
Cbc0010I After 4400 nodes, 560 on tree, 1e+50 best solution, best possible 16667.245 (848.37 seconds)
Cbc0010I After 4500 nodes, 563 on tree, 1e+50 best solution, best possible 16668.681 (863.60 seconds)
Cbc0010I After 4600 nodes, 573 on tree, 1e+50 best solution, best possible 16669.593 (879.91 seconds)
Cbc0010I After 4700 nodes, 576 on tree, 1e+50 best solution, best possible 16670.159 (895.64 seconds)
Cbc0010I After 4800 nodes, 573 on tree, 1e+50 best solution, best possible 16671.123 (910.69 seconds)
Cbc0010I After 4900 nodes, 581 on tree, 1e+50 best solution, best possible 16671.857 (926.87 seconds)
Cbc0010I After 5000 nodes, 584 on tree, 1e+50 best solution, best possible 16672.764 (942.21 seconds)
Cbc0010I After 5100 nodes, 584 on tree, 1e+50 best solution, best possible 16674.021 (957.78 seconds)
Cbc0010I After 5200 nodes, 584 on tree, 1e+50 best solution, best possible 16674.738 (972.78 seconds)
Cbc0010I After 5300 nodes, 591 on tree, 1e+50 best solution, best possible 16675.368 (989.04 seconds)
Cbc0010I After 5400 nodes, 589 on tree, 1e+50 best solution, best possible 16676.059 (1004.14 seconds)
Cbc0010I After 5500 nodes, 589 on tree, 1e+50 best solution, best possible 16677.181 (1019.48 seconds)
Cbc0010I After 5600 nodes, 588 on tree, 1e+50 best solution, best possible 16678.127 (1035.64 seconds)
Cbc0010I After 5700 nodes, 587 on tree, 1e+50 best solution, best possible 16678.994 (1050.93 seconds)
Cbc0010I After 5800 nodes, 580 on tree, 1e+50 best solution, best possible 16679.601 (1065.38 seconds)
Cbc0010I After 5900 nodes, 573 on tree, 1e+50 best solution, best possible 16679.989 (1079.11 seconds)
Cbc0010I After 6000 nodes, 577 on tree, 1e+50 best solution, best possible 16680.618 (1095.38 seconds)
Cbc0010I After 6100 nodes, 574 on tree, 1e+50 best solution, best possible 16681.26 (1111.06 seconds)
Cbc0010I After 6200 nodes, 574 on tree, 1e+50 best solution, best possible 16682.571 (1126.69 seconds)
Cbc0010I After 6300 nodes, 574 on tree, 1e+50 best solution, best possible 16683.198 (1141.34 seconds)
Cbc0010I After 6400 nodes, 565 on tree, 1e+50 best solution, best possible 16683.77 (1155.55 seconds)
Cbc0010I After 6500 nodes, 555 on tree, 1e+50 best solution, best possible 16684.527 (1171.24 seconds)
Cbc0010I After 6600 nodes, 543 on tree, 1e+50 best solution, best possible 16685.403 (1185.30 seconds)
Cbc0010I After 6700 nodes, 534 on tree, 1e+50 best solution, best possible 16685.907 (1200.36 seconds)
Cbc0010I After 6800 nodes, 526 on tree, 1e+50 best solution, best possible 16686.493 (1215.01 seconds)
Cbc0010I After 6900 nodes, 513 on tree, 1e+50 best solution, best possible 16687.301 (1230.07 seconds)
Cbc0010I After 7000 nodes, 502 on tree, 1e+50 best solution, best possible 16688.239 (1245.32 seconds)
Cbc0010I After 7100 nodes, 490 on tree, 1e+50 best solution, best possible 16688.917 (1261.19 seconds)
Cbc0010I After 7200 nodes, 472 on tree, 1e+50 best solution, best possible 16689.359 (1275.20 seconds)
Cbc0010I After 7300 nodes, 456 on tree, 1e+50 best solution, best possible 16689.759 (1288.97 seconds)
Cbc0010I After 7400 nodes, 442 on tree, 1e+50 best solution, best possible 16690.198 (1304.15 seconds)
Cbc0010I After 7500 nodes, 427 on tree, 1e+50 best solution, best possible 16690.572 (1317.97 seconds)
Cbc0010I After 7600 nodes, 407 on tree, 1e+50 best solution, best possible 16691.631 (1331.06 seconds)
Cbc0010I After 7700 nodes, 383 on tree, 1e+50 best solution, best possible 16692.493 (1344.81 seconds)
Cbc0010I After 7800 nodes, 360 on tree, 1e+50 best solution, best possible 16692.974 (1357.66 seconds)
Cbc0010I After 7900 nodes, 331 on tree, 1e+50 best solution, best possible 16693.997 (1370.34 seconds)
Cbc0010I After 8000 nodes, 312 on tree, 1e+50 best solution, best possible 16694.862 (1383.50 seconds)
Cbc0010I After 8100 nodes, 282 on tree, 1e+50 best solution, best possible 16696.254 (1395.06 seconds)
Cbc0010I After 8200 nodes, 245 on tree, 1e+50 best solution, best possible 16697.716 (1404.76 seconds)
Cbc0010I After 8300 nodes, 243 on tree, 1e+50 best solution, best possible 16698.004 (1418.09 seconds)
Cbc0010I After 8400 nodes, 228 on tree, 1e+50 best solution, best possible 16698.62 (1431.16 seconds)
Cbc0010I After 8500 nodes, 218 on tree, 1e+50 best solution, best possible 16699.1 (1443.77 seconds)
Cbc0010I After 8600 nodes, 193 on tree, 1e+50 best solution, best possible 16700.132 (1454.01 seconds)
Cbc0010I After 8700 nodes, 179 on tree, 1e+50 best solution, best possible 16700.809 (1465.21 seconds)
Cbc0010I After 8800 nodes, 173 on tree, 1e+50 best solution, best possible 16701.049 (1477.16 seconds)
Cbc0010I After 8900 nodes, 163 on tree, 1e+50 best solution, best possible 16701.189 (1487.53 seconds)
Cbc0010I After 9000 nodes, 159 on tree, 1e+50 best solution, best possible 16701.267 (1497.51 seconds)
Cbc0010I After 9100 nodes, 134 on tree, 1e+50 best solution, best possible 16701.353 (1505.05 seconds)
Cbc0010I After 9200 nodes, 84 on tree, 1e+50 best solution, best possible 16702.571 (1510.47 seconds)
Cbc0010I After 9300 nodes, 34 on tree, 1e+50 best solution, best possible 16715.863 (1515.24 seconds)
Cbc0001I Search completed - best objective 1e+50, took 179325 iterations and 9368 nodes (1517.63 seconds)
Cbc0035I Maximum depth 258, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6501
Linearization cuts added in total:           6501  (separation time: 0.049547s)
Total solve time:                         1529.27s (1529.27s in branch-and-bound)
Lower bound:                              16701.3
Upper bound:                              16701.3  (gap: 0.00%)
Branch-and-bound nodes:                      9368
Stats: /tmp/jl_yS9PV7/model.nl 6090 [var]   30 [int] 6260 [con]  289 [aux]   6501 [root]     6501 [tot] 0.049547 [sep]  1529.27 [time]  1529.28 [bb]         1.670128e+04 [lower]         1.670128e+04 [upper]    9368 [nodes]
Performance of                           FBBT:	    150.311s,    11236 runs. fix:          0 shrnk:    3.58722 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    6.18429s,        3 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p67
