solving instance uflp nldep holmberg 16 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.9366000000e+04 (0.294825 seconds)
0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6457.2821       33 0.485187
Couenne: new cutoff value 6.9822855835e+03 (0.878368 seconds)
NLP0014I             2         OPT 6641.5319       25 0.294482
Couenne: new cutoff value 6.6415333523e+03 (1.17449 seconds)
Loaded instance "/tmp/jl_Ezj1Ka/model.nl"
Constraints:         1090
Variables:           1060 (20 integer)
Auxiliaries:          109 (0 integer)

Coin0506I Presolve 1250 (-1) rows, 1100 (-69) columns and 5459 (-70) elements
Clp0006I 0  Obj -39375 Primal inf 2306659.1 (70)
Clp0006I 100  Obj -18015.808 Primal inf 352253.81 (72)
Clp0006I 200  Obj 1178.8174 Primal inf 8471.3506 (53)
Clp0006I 300  Obj 4698.6969 Primal inf 1477.0445 (5)
Clp0006I 305  Obj 4704.0959
Clp0000I Optimal - objective value 4704.0959
Clp0000I Optimal - objective value 4704.0959
Clp0032I Optimal objective 4704.09591 - 305 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 4704.0959
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 4704.0959
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 10 added rows had average density of 2
Cbc0013I At root node, 10 cuts changed objective from 4704.0959 to 4708.6526 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 95 row cuts average 2.0 elements, 240 column cuts (240 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.57 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 24 on tree, 1e+50 best solution, best possible 5361.402 (10.50 seconds)
Cbc0010I After 200 nodes, 70 on tree, 1e+50 best solution, best possible 5361.402 (13.03 seconds)
Couenne: new cutoff value 6.5504559543e+03 (15.5842 seconds)
Cbc0010I After 300 nodes, 107 on tree, 1e+50 best solution, best possible 5586.6729 (15.17 seconds)
Cbc0010I After 400 nodes, 141 on tree, 1e+50 best solution, best possible 5586.6729 (17.59 seconds)
Cbc0010I After 500 nodes, 191 on tree, 1e+50 best solution, best possible 5586.6729 (19.91 seconds)
Couenne: new cutoff value 6.5189693314e+03 (21.3859 seconds)
Cbc0010I After 600 nodes, 212 on tree, 1e+50 best solution, best possible 5730.8285 (22.17 seconds)
Cbc0010I After 700 nodes, 240 on tree, 1e+50 best solution, best possible 5901.0096 (24.61 seconds)
Cbc0010I After 800 nodes, 288 on tree, 1e+50 best solution, best possible 5901.0096 (27.14 seconds)
Couenne: new cutoff value 6.4994658778e+03 (29.3583 seconds)
Cbc0010I After 900 nodes, 312 on tree, 1e+50 best solution, best possible 5936.8412 (29.27 seconds)
Cbc0010I After 1000 nodes, 327 on tree, 1e+50 best solution, best possible 6275.7654 (31.59 seconds)
Cbc0010I After 1100 nodes, 349 on tree, 1e+50 best solution, best possible 6300.6345 (34.08 seconds)
Cbc0010I After 1200 nodes, 376 on tree, 1e+50 best solution, best possible 6315.7823 (36.60 seconds)
Cbc0010I After 1300 nodes, 413 on tree, 1e+50 best solution, best possible 6322.1138 (39.16 seconds)
Cbc0010I After 1400 nodes, 463 on tree, 1e+50 best solution, best possible 6322.1138 (41.53 seconds)
Couenne: new cutoff value 6.4572846018e+03 (42.8327 seconds)
Cbc0010I After 1500 nodes, 483 on tree, 1e+50 best solution, best possible 6326.4371 (44.02 seconds)
Cbc0010I After 1600 nodes, 497 on tree, 1e+50 best solution, best possible 6335.2753 (46.47 seconds)
Cbc0010I After 1700 nodes, 509 on tree, 1e+50 best solution, best possible 6349.3408 (48.90 seconds)
Cbc0010I After 1800 nodes, 523 on tree, 1e+50 best solution, best possible 6356.9455 (51.32 seconds)
Cbc0010I After 1900 nodes, 531 on tree, 1e+50 best solution, best possible 6365.4317 (53.59 seconds)
Cbc0010I After 2000 nodes, 535 on tree, 1e+50 best solution, best possible 6371.0564 (55.89 seconds)
Cbc0010I After 2100 nodes, 538 on tree, 1e+50 best solution, best possible 6378.8079 (58.03 seconds)
Cbc0010I After 2200 nodes, 539 on tree, 1e+50 best solution, best possible 6389.4952 (60.26 seconds)
Cbc0010I After 2300 nodes, 545 on tree, 1e+50 best solution, best possible 6395.2572 (62.50 seconds)
Cbc0010I After 2400 nodes, 544 on tree, 1e+50 best solution, best possible 6401.8235 (64.76 seconds)
Cbc0010I After 2500 nodes, 540 on tree, 1e+50 best solution, best possible 6404.9882 (66.94 seconds)
Cbc0010I After 2600 nodes, 531 on tree, 1e+50 best solution, best possible 6410.9855 (69.07 seconds)
Cbc0010I After 2700 nodes, 519 on tree, 1e+50 best solution, best possible 6414.5685 (71.29 seconds)
Cbc0010I After 2800 nodes, 494 on tree, 1e+50 best solution, best possible 6421.0127 (73.58 seconds)
Cbc0010I After 2900 nodes, 467 on tree, 1e+50 best solution, best possible 6427.1046 (75.72 seconds)
Cbc0010I After 3000 nodes, 428 on tree, 1e+50 best solution, best possible 6437.5418 (77.46 seconds)
Cbc0010I After 3100 nodes, 379 on tree, 1e+50 best solution, best possible 6454.4385 (78.72 seconds)
Cbc0010I After 3200 nodes, 331 on tree, 1e+50 best solution, best possible 6458.1336 (79.55 seconds)
Cbc0010I After 3300 nodes, 281 on tree, 1e+50 best solution, best possible 6473.7017 (80.21 seconds)
Cbc0010I After 3400 nodes, 231 on tree, 1e+50 best solution, best possible 6499.5419 (80.80 seconds)
Cbc0010I After 3500 nodes, 181 on tree, 1e+50 best solution, best possible 6502.4789 (81.51 seconds)
Cbc0010I After 3600 nodes, 131 on tree, 1e+50 best solution, best possible 6519.3929 (82.20 seconds)
Cbc0010I After 3700 nodes, 81 on tree, 1e+50 best solution, best possible 6550.4709 (82.82 seconds)
Cbc0010I After 3800 nodes, 31 on tree, 1e+50 best solution, best possible 6553.921 (83.51 seconds)
Cbc0001I Search completed - best objective 1e+50, took 92412 iterations and 3862 nodes (83.88 seconds)
Cbc0035I Maximum depth 139, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1251
Linearization cuts added in total:           1251  (separation time: 0.006717s)
Total solve time:                         83.8949s (83.8949s in branch-and-bound)
Lower bound:                              6457.28
Upper bound:                              6457.28  (gap: 0.00%)
Branch-and-bound nodes:                      3862
Stats: /tmp/jl_Ezj1Ka/model.nl 1060 [var]   20 [int] 1090 [con]  109 [aux]   1251 [root]     1251 [tot] 0.006717 [sep]  83.8949 [time]  83.8969 [bb]         6.457285e+03 [lower]         6.457285e+03 [upper]    3862 [nodes]
Performance of                           FBBT:	    5.49828s,     4586 runs. fix:          0 shrnk:    2.59901 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.73649s,        4 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p16
