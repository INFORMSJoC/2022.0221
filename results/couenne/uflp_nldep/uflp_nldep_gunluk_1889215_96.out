solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-9.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 226.34077       70 0.301196
NLP0014I             2         OPT 226.34077       32 0.081433
Couenne: new cutoff value 2.2634078703e+02 (0.409163 seconds)
Loaded instance "/tmp/jl_NRQr4Q/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 319 (-42) rows, 249 (-80) columns and 1217 (-122) elements
Clp0006I 0  Obj -53.71316 Primal inf 607.57767 (49)
Clp0006I 79  Obj 150.45769 Primal inf 5.4838906 (8)
Clp0006I 85  Obj 152.19617
Clp0000I Optimal - objective value 152.19617
Clp0032I Optimal objective 152.1961696 - 85 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 152.19617
NLP Heuristic: NLP0014I             3         OPT 227.21637       17 0.045241
no solution.
Clp0000I Optimal - objective value 152.19617
Optimality Based BT: 28 improved bounds
Probing: 8 improved bounds
NLP Heuristic: no solution.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 152.19617 to 175.28402 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 9 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.43 seconds)
Optimality Based BT: 25 improved bounds
Optimality Based BT: 26 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 27 improved bounds
Optimality Based BT: 25 improved bounds
Optimality Based BT: 26 improved bounds
Cbc0010I After 100 nodes, 11 on tree, 1e+50 best solution, best possible 225.79542 (4.14 seconds)
Cbc0010I After 200 nodes, 31 on tree, 1e+50 best solution, best possible 226.34055 (4.57 seconds)
Cbc0010I After 300 nodes, 66 on tree, 1e+50 best solution, best possible 226.34056 (4.97 seconds)
Cbc0010I After 400 nodes, 96 on tree, 1e+50 best solution, best possible 226.34058 (5.38 seconds)
Cbc0010I After 500 nodes, 127 on tree, 1e+50 best solution, best possible 226.34058 (5.80 seconds)
Cbc0010I After 600 nodes, 152 on tree, 1e+50 best solution, best possible 226.3406 (6.21 seconds)
Cbc0010I After 700 nodes, 180 on tree, 1e+50 best solution, best possible 226.34062 (6.62 seconds)
Cbc0010I After 800 nodes, 200 on tree, 1e+50 best solution, best possible 226.34064 (6.99 seconds)
Cbc0010I After 900 nodes, 221 on tree, 1e+50 best solution, best possible 226.34065 (7.39 seconds)
Cbc0010I After 1000 nodes, 245 on tree, 1e+50 best solution, best possible 226.34065 (7.79 seconds)
Cbc0010I After 1100 nodes, 269 on tree, 1e+50 best solution, best possible 226.34066 (8.17 seconds)
Cbc0010I After 1200 nodes, 289 on tree, 1e+50 best solution, best possible 226.34066 (8.56 seconds)
Cbc0010I After 1300 nodes, 312 on tree, 1e+50 best solution, best possible 226.34067 (8.96 seconds)
Cbc0010I After 1400 nodes, 333 on tree, 1e+50 best solution, best possible 226.34067 (9.36 seconds)
Cbc0010I After 1500 nodes, 354 on tree, 1e+50 best solution, best possible 226.34067 (9.76 seconds)
Cbc0010I After 1600 nodes, 368 on tree, 1e+50 best solution, best possible 226.34068 (10.15 seconds)
Cbc0010I After 1700 nodes, 390 on tree, 1e+50 best solution, best possible 226.34068 (10.55 seconds)
Cbc0010I After 1800 nodes, 402 on tree, 1e+50 best solution, best possible 226.34068 (10.93 seconds)
Cbc0010I After 1900 nodes, 426 on tree, 1e+50 best solution, best possible 226.34069 (11.36 seconds)
Cbc0010I After 2000 nodes, 447 on tree, 1e+50 best solution, best possible 226.34069 (11.75 seconds)
Cbc0010I After 2100 nodes, 461 on tree, 1e+50 best solution, best possible 226.34069 (12.13 seconds)
Cbc0010I After 2200 nodes, 488 on tree, 1e+50 best solution, best possible 226.34069 (12.54 seconds)
Cbc0010I After 2300 nodes, 511 on tree, 1e+50 best solution, best possible 226.34069 (12.95 seconds)
Cbc0010I After 2400 nodes, 531 on tree, 1e+50 best solution, best possible 226.3407 (13.35 seconds)
Cbc0010I After 2500 nodes, 538 on tree, 1e+50 best solution, best possible 226.34071 (13.72 seconds)
Cbc0010I After 2600 nodes, 548 on tree, 1e+50 best solution, best possible 226.34071 (14.09 seconds)
Cbc0010I After 2700 nodes, 565 on tree, 1e+50 best solution, best possible 226.34071 (14.49 seconds)
Cbc0010I After 2800 nodes, 579 on tree, 1e+50 best solution, best possible 226.34071 (14.88 seconds)
Cbc0010I After 2900 nodes, 589 on tree, 1e+50 best solution, best possible 226.34072 (15.28 seconds)
Cbc0010I After 3000 nodes, 600 on tree, 1e+50 best solution, best possible 226.34072 (15.66 seconds)
Cbc0010I After 3100 nodes, 614 on tree, 1e+50 best solution, best possible 226.34072 (16.06 seconds)
Cbc0010I After 3200 nodes, 627 on tree, 1e+50 best solution, best possible 226.34072 (16.53 seconds)
Cbc0010I After 3300 nodes, 643 on tree, 1e+50 best solution, best possible 226.34073 (16.92 seconds)
Cbc0010I After 3400 nodes, 657 on tree, 1e+50 best solution, best possible 226.34073 (17.33 seconds)
Cbc0010I After 3500 nodes, 668 on tree, 1e+50 best solution, best possible 226.34073 (17.78 seconds)
Cbc0010I After 3600 nodes, 675 on tree, 1e+50 best solution, best possible 226.34073 (18.16 seconds)
Cbc0010I After 3700 nodes, 684 on tree, 1e+50 best solution, best possible 226.34074 (18.55 seconds)
Cbc0010I After 3800 nodes, 698 on tree, 1e+50 best solution, best possible 226.34074 (18.94 seconds)
Cbc0010I After 3900 nodes, 707 on tree, 1e+50 best solution, best possible 226.34074 (19.33 seconds)
Cbc0010I After 4000 nodes, 719 on tree, 1e+50 best solution, best possible 226.34074 (19.75 seconds)
Cbc0010I After 4100 nodes, 726 on tree, 1e+50 best solution, best possible 226.34074 (20.13 seconds)
Cbc0010I After 4200 nodes, 732 on tree, 1e+50 best solution, best possible 226.34075 (20.53 seconds)
Cbc0010I After 4300 nodes, 738 on tree, 1e+50 best solution, best possible 226.34075 (20.90 seconds)
Cbc0010I After 4400 nodes, 747 on tree, 1e+50 best solution, best possible 226.34075 (21.30 seconds)
Cbc0010I After 4500 nodes, 755 on tree, 1e+50 best solution, best possible 226.34075 (21.69 seconds)
Cbc0010I After 4600 nodes, 756 on tree, 1e+50 best solution, best possible 226.34076 (22.05 seconds)
Cbc0010I After 4700 nodes, 771 on tree, 1e+50 best solution, best possible 226.34076 (22.46 seconds)
Cbc0010I After 4800 nodes, 780 on tree, 1e+50 best solution, best possible 226.34076 (22.89 seconds)
Cbc0010I After 4900 nodes, 799 on tree, 1e+50 best solution, best possible 226.34076 (23.30 seconds)
Cbc0010I After 5000 nodes, 801 on tree, 1e+50 best solution, best possible 226.34076 (23.69 seconds)
Cbc0010I After 5100 nodes, 809 on tree, 1e+50 best solution, best possible 226.34076 (24.08 seconds)
Cbc0010I After 5200 nodes, 819 on tree, 1e+50 best solution, best possible 226.34076 (24.50 seconds)
Cbc0010I After 5300 nodes, 830 on tree, 1e+50 best solution, best possible 226.34076 (24.92 seconds)
Cbc0010I After 5400 nodes, 837 on tree, 1e+50 best solution, best possible 226.34077 (25.30 seconds)
Cbc0010I After 5500 nodes, 834 on tree, 1e+50 best solution, best possible 226.34077 (25.68 seconds)
Cbc0010I After 5600 nodes, 837 on tree, 1e+50 best solution, best possible 226.34077 (26.06 seconds)
Cbc0010I After 5700 nodes, 833 on tree, 1e+50 best solution, best possible 226.34077 (26.45 seconds)
Cbc0010I After 5800 nodes, 837 on tree, 1e+50 best solution, best possible 226.34077 (26.84 seconds)
Cbc0010I After 5900 nodes, 835 on tree, 1e+50 best solution, best possible 226.34077 (27.23 seconds)
Cbc0010I After 6000 nodes, 832 on tree, 1e+50 best solution, best possible 226.34077 (27.63 seconds)
Cbc0010I After 6100 nodes, 826 on tree, 1e+50 best solution, best possible 226.34077 (28.00 seconds)
Cbc0010I After 6200 nodes, 813 on tree, 1e+50 best solution, best possible 226.34078 (28.37 seconds)
Cbc0010I After 6300 nodes, 796 on tree, 1e+50 best solution, best possible 226.34078 (28.74 seconds)
Cbc0010I After 6400 nodes, 780 on tree, 1e+50 best solution, best possible 226.34078 (29.11 seconds)
Cbc0010I After 6500 nodes, 770 on tree, 1e+50 best solution, best possible 226.34078 (29.50 seconds)
Cbc0010I After 6600 nodes, 750 on tree, 1e+50 best solution, best possible 226.34078 (29.89 seconds)
Cbc0010I After 6700 nodes, 739 on tree, 1e+50 best solution, best possible 226.34078 (30.27 seconds)
Cbc0010I After 6800 nodes, 717 on tree, 1e+50 best solution, best possible 226.34078 (30.67 seconds)
Cbc0010I After 6900 nodes, 687 on tree, 1e+50 best solution, best possible 226.34078 (31.04 seconds)
Cbc0004I Integer solution of 226.34079 found after 17634 iterations and 6952 nodes (31.23 seconds)
Cbc0001I Search completed - best objective 226.340791986672, took 17634 iterations and 6952 nodes (31.50 seconds)
Cbc0035I Maximum depth 67, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        361
Linearization cuts added in total:            361  (separation time: 0.000711s)
Total solve time:                         31.5109s (31.5109s in branch-and-bound)
Lower bound:                              226.341
Upper bound:                              226.341  (gap: 0.00%)
Branch-and-bound nodes:                      6952
Stats: /tmp/jl_NRQr4Q/model.nl  230 [var]   10 [int]  240 [con]   99 [aux]    361 [root]      361 [tot] 0.000711 [sep]  31.5109 [time]  31.5109 [bb]         2.263408e+02 [lower]         2.263408e+02 [upper]    6952 [nodes]
Performance of                           FBBT:	    1.31702s,     4487 runs. fix: 0.00215783 shrnk:    4.02572 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.02015s,        8 runs. fix:   0.466667 shrnk:    43.2705 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-9.txt
