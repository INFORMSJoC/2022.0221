solving instance uflp nldep holmberg 59 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9868.4407       45 372.7482
Couenne: new cutoff value 9.8684329191e+03 (382.473 seconds)
Loaded instance "/tmp/jl_wVubhm/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          439 (0 integer)

Coin0506I Presolve 6505 (-116) rows, 6155 (-374) columns and 30669 (-490) elements
Clp0006I 0  Obj 0 Primal inf 3824.8072 (290) Dual inf 9.1534662e+13 (6121)
Clp0029I End of values pass after 95 iterations
Clp0006I 95  Obj 9868.4429 Primal inf 600.838 (202) Dual inf 9.0927121e+13 (6005)
Clp0006I 448  Obj 9868.4429 Primal inf 27.265271 (15) Dual inf 1.8099165e+12 (160)
Clp0006I 609  Obj 8494.142
Clp0000I Optimal - objective value 8494.142
Clp0032I Optimal objective 8494.141977 - 609 iterations time 0.092, Presolve 0.03
Clp0000I Optimal - objective value 8494.142
NLP Heuristic: NLP0014I             2         OPT 9868.4407       11 1.42364
no solution.
Clp0000I Optimal - objective value 8494.142
Optimality Based BT: 71 improved bounds
Probing: 30 improved bounds
NLP Heuristic: no solution.
Cbc0031I 27 added rows had average density of 2
Cbc0013I At root node, 27 cuts changed objective from 8494.142 to 9567.0826 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 52 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (52.61 seconds)
Optimality Based BT: 97 improved bounds
Optimality Based BT: 112 improved bounds
Cbc0010I After 100 nodes, 26 on tree, 1e+50 best solution, best possible 9798.138 (286.42 seconds)
Cbc0010I After 200 nodes, 46 on tree, 1e+50 best solution, best possible 9801.9166 (302.44 seconds)
Cbc0010I After 300 nodes, 82 on tree, 1e+50 best solution, best possible 9811.5294 (413.09 seconds)
Optimality Based BT: 111 improved bounds
Cbc0010I After 400 nodes, 112 on tree, 1e+50 best solution, best possible 9812.5967 (436.71 seconds)
Optimality Based BT: 109 improved bounds
Optimality Based BT: 113 improved bounds
Cbc0010I After 500 nodes, 144 on tree, 1e+50 best solution, best possible 9816.5787 (468.41 seconds)
Cbc0010I After 600 nodes, 174 on tree, 1e+50 best solution, best possible 9818.965 (489.45 seconds)
Cbc0010I After 700 nodes, 206 on tree, 1e+50 best solution, best possible 9822.9797 (508.97 seconds)
Cbc0010I After 800 nodes, 235 on tree, 1e+50 best solution, best possible 9823.3549 (528.58 seconds)
Cbc0010I After 900 nodes, 265 on tree, 1e+50 best solution, best possible 9824.1921 (550.05 seconds)
Cbc0010I After 1000 nodes, 296 on tree, 1e+50 best solution, best possible 9826.3474 (568.45 seconds)
Cbc0010I After 1100 nodes, 326 on tree, 1e+50 best solution, best possible 9827.6413 (590.12 seconds)
Cbc0010I After 1200 nodes, 356 on tree, 1e+50 best solution, best possible 9828.0418 (610.62 seconds)
Cbc0010I After 1300 nodes, 387 on tree, 1e+50 best solution, best possible 9828.527 (629.78 seconds)
Cbc0010I After 1400 nodes, 417 on tree, 1e+50 best solution, best possible 9829.0462 (649.19 seconds)
Cbc0010I After 1500 nodes, 440 on tree, 1e+50 best solution, best possible 9829.789 (665.88 seconds)
Cbc0010I After 1600 nodes, 465 on tree, 1e+50 best solution, best possible 9830.8696 (685.41 seconds)
Cbc0010I After 1700 nodes, 497 on tree, 1e+50 best solution, best possible 9831.6147 (707.54 seconds)
Cbc0010I After 1800 nodes, 529 on tree, 1e+50 best solution, best possible 9831.802 (728.69 seconds)
Cbc0010I After 1900 nodes, 558 on tree, 1e+50 best solution, best possible 9832.3208 (748.87 seconds)
Cbc0010I After 2000 nodes, 588 on tree, 1e+50 best solution, best possible 9832.6989 (769.01 seconds)
Cbc0010I After 2100 nodes, 616 on tree, 1e+50 best solution, best possible 9832.8838 (789.68 seconds)
Cbc0010I After 2200 nodes, 644 on tree, 1e+50 best solution, best possible 9833.0346 (810.76 seconds)
Cbc0010I After 2300 nodes, 671 on tree, 1e+50 best solution, best possible 9833.3444 (830.07 seconds)
Cbc0010I After 2400 nodes, 698 on tree, 1e+50 best solution, best possible 9833.451 (897.39 seconds)
Cbc0010I After 2500 nodes, 722 on tree, 1e+50 best solution, best possible 9833.6055 (916.34 seconds)
Cbc0010I After 2600 nodes, 748 on tree, 1e+50 best solution, best possible 9834.3828 (935.06 seconds)
Cbc0010I After 2700 nodes, 777 on tree, 1e+50 best solution, best possible 9834.614 (955.40 seconds)
Cbc0010I After 2800 nodes, 803 on tree, 1e+50 best solution, best possible 9834.9311 (974.96 seconds)
Cbc0010I After 2900 nodes, 826 on tree, 1e+50 best solution, best possible 9835.4072 (994.15 seconds)
Cbc0010I After 3000 nodes, 851 on tree, 1e+50 best solution, best possible 9835.5842 (1015.41 seconds)
Cbc0010I After 3100 nodes, 875 on tree, 1e+50 best solution, best possible 9836.1163 (1034.58 seconds)
Cbc0010I After 3200 nodes, 900 on tree, 1e+50 best solution, best possible 9836.5489 (1055.99 seconds)
Cbc0010I After 3300 nodes, 927 on tree, 1e+50 best solution, best possible 9836.7644 (1076.06 seconds)
Cbc0010I After 3400 nodes, 956 on tree, 1e+50 best solution, best possible 9836.9123 (1097.06 seconds)
Cbc0010I After 3500 nodes, 983 on tree, 1e+50 best solution, best possible 9837.0647 (1117.55 seconds)
Cbc0010I After 3600 nodes, 1008 on tree, 1e+50 best solution, best possible 9837.1691 (1138.38 seconds)
Cbc0010I After 3700 nodes, 1033 on tree, 1e+50 best solution, best possible 9837.2201 (1157.56 seconds)
Cbc0010I After 3800 nodes, 1055 on tree, 1e+50 best solution, best possible 9837.4386 (1177.25 seconds)
Cbc0010I After 3900 nodes, 1083 on tree, 1e+50 best solution, best possible 9837.6642 (1197.68 seconds)
Cbc0010I After 4000 nodes, 1104 on tree, 1e+50 best solution, best possible 9837.6974 (1216.66 seconds)
Cbc0010I After 4100 nodes, 1131 on tree, 1e+50 best solution, best possible 9837.8825 (1238.16 seconds)
Cbc0010I After 4200 nodes, 1155 on tree, 1e+50 best solution, best possible 9838.0096 (1257.38 seconds)
Cbc0010I After 4300 nodes, 1179 on tree, 1e+50 best solution, best possible 9838.0258 (1274.72 seconds)
Cbc0010I After 4400 nodes, 1201 on tree, 1e+50 best solution, best possible 9838.1028 (1294.04 seconds)
Cbc0010I After 4500 nodes, 1222 on tree, 1e+50 best solution, best possible 9838.2704 (1311.90 seconds)
Cbc0010I After 4600 nodes, 1248 on tree, 1e+50 best solution, best possible 9838.4492 (1331.18 seconds)
Cbc0010I After 4700 nodes, 1271 on tree, 1e+50 best solution, best possible 9838.599 (1350.43 seconds)
Cbc0010I After 4800 nodes, 1296 on tree, 1e+50 best solution, best possible 9838.7758 (1369.45 seconds)
Cbc0010I After 4900 nodes, 1321 on tree, 1e+50 best solution, best possible 9838.8553 (1390.02 seconds)
Cbc0010I After 5000 nodes, 1346 on tree, 1e+50 best solution, best possible 9839.018 (1409.85 seconds)
Cbc0010I After 5100 nodes, 1371 on tree, 1e+50 best solution, best possible 9839.3245 (1429.78 seconds)
Cbc0010I After 5200 nodes, 1393 on tree, 1e+50 best solution, best possible 9839.356 (1450.85 seconds)
Cbc0010I After 5300 nodes, 1418 on tree, 1e+50 best solution, best possible 9839.4171 (1469.69 seconds)
Cbc0010I After 5400 nodes, 1440 on tree, 1e+50 best solution, best possible 9839.7182 (1488.74 seconds)
Cbc0010I After 5500 nodes, 1461 on tree, 1e+50 best solution, best possible 9839.9273 (1507.68 seconds)
Cbc0010I After 5600 nodes, 1486 on tree, 1e+50 best solution, best possible 9840.3487 (1528.12 seconds)
Cbc0010I After 5700 nodes, 1512 on tree, 1e+50 best solution, best possible 9840.5396 (1549.49 seconds)
Cbc0010I After 5800 nodes, 1534 on tree, 1e+50 best solution, best possible 9840.7175 (1569.13 seconds)
Cbc0010I After 5900 nodes, 1561 on tree, 1e+50 best solution, best possible 9840.7951 (1591.04 seconds)
Cbc0010I After 6000 nodes, 1588 on tree, 1e+50 best solution, best possible 9841.0073 (1612.93 seconds)
Cbc0010I After 6100 nodes, 1613 on tree, 1e+50 best solution, best possible 9841.2374 (1634.22 seconds)
Cbc0010I After 6200 nodes, 1636 on tree, 1e+50 best solution, best possible 9841.3771 (1654.80 seconds)
Cbc0010I After 6300 nodes, 1659 on tree, 1e+50 best solution, best possible 9841.5399 (1675.35 seconds)
Cbc0010I After 6400 nodes, 1681 on tree, 1e+50 best solution, best possible 9841.6314 (1695.17 seconds)
Cbc0010I After 6500 nodes, 1702 on tree, 1e+50 best solution, best possible 9841.6632 (1714.41 seconds)
Cbc0010I After 6600 nodes, 1723 on tree, 1e+50 best solution, best possible 9841.8598 (1734.46 seconds)
Cbc0010I After 6700 nodes, 1747 on tree, 1e+50 best solution, best possible 9841.9489 (1755.93 seconds)
Cbc0010I After 6800 nodes, 1770 on tree, 1e+50 best solution, best possible 9841.9928 (1777.85 seconds)
Cbc0010I After 6900 nodes, 1793 on tree, 1e+50 best solution, best possible 9842.092 (1799.78 seconds)
Cbc0010I After 7000 nodes, 1815 on tree, 1e+50 best solution, best possible 9842.1054 (1819.99 seconds)
Cbc0010I After 7100 nodes, 1837 on tree, 1e+50 best solution, best possible 9842.1417 (1839.49 seconds)
Cbc0010I After 7200 nodes, 1856 on tree, 1e+50 best solution, best possible 9842.2331 (1857.57 seconds)
Cbc0010I After 7300 nodes, 1874 on tree, 1e+50 best solution, best possible 9842.2905 (1875.14 seconds)
Cbc0010I After 7400 nodes, 1891 on tree, 1e+50 best solution, best possible 9842.4261 (1897.29 seconds)
Cbc0010I After 7500 nodes, 1917 on tree, 1e+50 best solution, best possible 9842.4826 (1918.44 seconds)
Cbc0010I After 7600 nodes, 1941 on tree, 1e+50 best solution, best possible 9842.5657 (1937.60 seconds)
Cbc0010I After 7700 nodes, 1962 on tree, 1e+50 best solution, best possible 9842.6322 (1958.58 seconds)
Cbc0010I After 7800 nodes, 1983 on tree, 1e+50 best solution, best possible 9842.7059 (1978.89 seconds)
Cbc0010I After 7900 nodes, 2003 on tree, 1e+50 best solution, best possible 9842.8222 (1998.69 seconds)
Cbc0010I After 8000 nodes, 2024 on tree, 1e+50 best solution, best possible 9842.9176 (2020.01 seconds)
Cbc0010I After 8100 nodes, 2046 on tree, 1e+50 best solution, best possible 9842.9807 (2037.96 seconds)
Cbc0010I After 8200 nodes, 2069 on tree, 1e+50 best solution, best possible 9843.0402 (2057.95 seconds)
Cbc0010I After 8300 nodes, 2091 on tree, 1e+50 best solution, best possible 9843.0753 (2075.82 seconds)
Cbc0010I After 8400 nodes, 2108 on tree, 1e+50 best solution, best possible 9843.201 (2093.47 seconds)
Cbc0010I After 8500 nodes, 2131 on tree, 1e+50 best solution, best possible 9843.282 (2112.56 seconds)
Cbc0010I After 8600 nodes, 2151 on tree, 1e+50 best solution, best possible 9843.4026 (2130.58 seconds)
Cbc0010I After 8700 nodes, 2175 on tree, 1e+50 best solution, best possible 9843.49 (2149.64 seconds)
Cbc0010I After 8800 nodes, 2195 on tree, 1e+50 best solution, best possible 9843.5403 (2168.66 seconds)
Cbc0010I After 8900 nodes, 2215 on tree, 1e+50 best solution, best possible 9843.6306 (2187.98 seconds)
Cbc0010I After 9000 nodes, 2238 on tree, 1e+50 best solution, best possible 9843.734 (2209.33 seconds)
Cbc0010I After 9100 nodes, 2258 on tree, 1e+50 best solution, best possible 9843.7961 (2226.51 seconds)
Cbc0010I After 9200 nodes, 2276 on tree, 1e+50 best solution, best possible 9843.8338 (2246.42 seconds)
Cbc0010I After 9300 nodes, 2297 on tree, 1e+50 best solution, best possible 9843.9068 (2265.43 seconds)
Cbc0010I After 9400 nodes, 2315 on tree, 1e+50 best solution, best possible 9844.0287 (2283.78 seconds)
Cbc0010I After 9500 nodes, 2339 on tree, 1e+50 best solution, best possible 9844.2297 (2303.61 seconds)
Cbc0010I After 9600 nodes, 2361 on tree, 1e+50 best solution, best possible 9844.3565 (2322.82 seconds)
Cbc0010I After 9700 nodes, 2383 on tree, 1e+50 best solution, best possible 9844.5139 (2347.01 seconds)
Cbc0010I After 9800 nodes, 2405 on tree, 1e+50 best solution, best possible 9844.5958 (2368.77 seconds)
Cbc0010I After 9900 nodes, 2424 on tree, 1e+50 best solution, best possible 9844.6464 (2388.32 seconds)
Cbc0010I After 10000 nodes, 2446 on tree, 1e+50 best solution, best possible 9844.6991 (2409.74 seconds)
Cbc0010I After 10100 nodes, 2466 on tree, 1e+50 best solution, best possible 9844.7848 (2430.92 seconds)
Cbc0010I After 10200 nodes, 2491 on tree, 1e+50 best solution, best possible 9845.0341 (2454.48 seconds)
Cbc0010I After 10300 nodes, 2512 on tree, 1e+50 best solution, best possible 9845.1303 (2473.52 seconds)
Cbc0010I After 10400 nodes, 2531 on tree, 1e+50 best solution, best possible 9845.1892 (2494.01 seconds)
Cbc0010I After 10500 nodes, 2553 on tree, 1e+50 best solution, best possible 9845.343 (2517.13 seconds)
Cbc0010I After 10600 nodes, 2573 on tree, 1e+50 best solution, best possible 9845.4552 (2536.93 seconds)
Cbc0010I After 10700 nodes, 2590 on tree, 1e+50 best solution, best possible 9845.5385 (2554.81 seconds)
Cbc0010I After 10800 nodes, 2608 on tree, 1e+50 best solution, best possible 9845.6153 (2572.86 seconds)
Cbc0010I After 10900 nodes, 2625 on tree, 1e+50 best solution, best possible 9845.687 (2593.81 seconds)
Cbc0010I After 11000 nodes, 2644 on tree, 1e+50 best solution, best possible 9845.7531 (2612.96 seconds)
Cbc0010I After 11100 nodes, 2661 on tree, 1e+50 best solution, best possible 9845.7729 (2631.61 seconds)
Cbc0010I After 11200 nodes, 2678 on tree, 1e+50 best solution, best possible 9845.9671 (2653.06 seconds)
Cbc0010I After 11300 nodes, 2698 on tree, 1e+50 best solution, best possible 9846.0051 (2672.25 seconds)
Cbc0010I After 11400 nodes, 2713 on tree, 1e+50 best solution, best possible 9846.0659 (2692.22 seconds)
Cbc0010I After 11500 nodes, 2732 on tree, 1e+50 best solution, best possible 9846.0947 (2711.58 seconds)
Cbc0010I After 11600 nodes, 2756 on tree, 1e+50 best solution, best possible 9846.1716 (2731.86 seconds)
Cbc0010I After 11700 nodes, 2779 on tree, 1e+50 best solution, best possible 9846.2334 (2751.89 seconds)
Cbc0010I After 11800 nodes, 2797 on tree, 1e+50 best solution, best possible 9846.3048 (2773.51 seconds)
Cbc0010I After 11900 nodes, 2818 on tree, 1e+50 best solution, best possible 9846.4064 (2793.25 seconds)
Cbc0010I After 12000 nodes, 2836 on tree, 1e+50 best solution, best possible 9846.4878 (2812.88 seconds)
Cbc0010I After 12100 nodes, 2856 on tree, 1e+50 best solution, best possible 9846.5624 (2832.61 seconds)
Optimality Based BT: 107 improved bounds
Cbc0010I After 12200 nodes, 2873 on tree, 1e+50 best solution, best possible 9846.5794 (2856.27 seconds)
Cbc0010I After 12300 nodes, 2892 on tree, 1e+50 best solution, best possible 9846.6806 (2877.04 seconds)
Cbc0010I After 12400 nodes, 2911 on tree, 1e+50 best solution, best possible 9846.7516 (2896.60 seconds)
Cbc0010I After 12500 nodes, 2932 on tree, 1e+50 best solution, best possible 9846.7962 (2916.28 seconds)
Cbc0010I After 12600 nodes, 2948 on tree, 1e+50 best solution, best possible 9846.8496 (2935.27 seconds)
Cbc0010I After 12700 nodes, 2970 on tree, 1e+50 best solution, best possible 9846.9051 (2955.86 seconds)
Cbc0010I After 12800 nodes, 2988 on tree, 1e+50 best solution, best possible 9846.9409 (2974.44 seconds)
Cbc0010I After 12900 nodes, 3006 on tree, 1e+50 best solution, best possible 9847.0009 (2992.98 seconds)
Cbc0010I After 13000 nodes, 3022 on tree, 1e+50 best solution, best possible 9847.0283 (3011.85 seconds)
Cbc0010I After 13100 nodes, 3040 on tree, 1e+50 best solution, best possible 9847.072 (3030.92 seconds)
Cbc0010I After 13200 nodes, 3059 on tree, 1e+50 best solution, best possible 9847.1553 (3052.22 seconds)
Cbc0010I After 13300 nodes, 3078 on tree, 1e+50 best solution, best possible 9847.1651 (3073.57 seconds)
Cbc0010I After 13400 nodes, 3096 on tree, 1e+50 best solution, best possible 9847.2119 (3092.28 seconds)
Cbc0010I After 13500 nodes, 3114 on tree, 1e+50 best solution, best possible 9847.2566 (3111.10 seconds)
Cbc0010I After 13600 nodes, 3132 on tree, 1e+50 best solution, best possible 9847.2816 (3131.33 seconds)
Cbc0010I After 13700 nodes, 3148 on tree, 1e+50 best solution, best possible 9847.3463 (3149.34 seconds)
Cbc0010I After 13800 nodes, 3165 on tree, 1e+50 best solution, best possible 9847.3798 (3165.06 seconds)
Cbc0010I After 13900 nodes, 3182 on tree, 1e+50 best solution, best possible 9847.4116 (3181.35 seconds)
Cbc0010I After 14000 nodes, 3200 on tree, 1e+50 best solution, best possible 9847.464 (3197.19 seconds)
Cbc0010I After 14100 nodes, 3215 on tree, 1e+50 best solution, best possible 9847.4916 (3212.58 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 9847.4916), took 147529 iterations and 14128 nodes (3225.78 seconds)
Cbc0035I Maximum depth 70, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       6621
Linearization cuts added in total:           6621  (separation time: 0.069972s)
Total solve time:                         3225.88s (3225.88s in branch-and-bound)
Lower bound:                              9847.49
Upper bound:                              9868.43  (gap: 0.21%)
Branch-and-bound nodes:                     14128
Stats: /tmp/jl_wVubhm/model.nl 6090 [var]   30 [int] 6260 [con]  439 [aux]   6621 [root]     6621 [tot] 0.069972 [sep]  3225.88 [time]  3225.89 [bb]         9.847492e+03 [lower]         9.868433e+03 [upper]   14128 [nodes]
Performance of                           FBBT:	    307.102s,    18857 runs. fix:          0 shrnk:    1.16896 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    34.7787s,        7 runs. fix:    2.77045 shrnk:    281.232 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p59
