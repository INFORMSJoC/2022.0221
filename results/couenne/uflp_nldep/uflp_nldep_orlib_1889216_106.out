solving instance uflp nldep orlib 72 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      INFEAS 1.0000002      214 2.508287
Loaded instance "/tmp/jl_YyjLaj/model.nl"
Constraints:          882
Variables:            848 (16 integer)
Auxiliaries:          171 (0 integer)

Coin0506I Presolve 1000 (-63) rows, 876 (-143) columns and 3465 (-1068) elements
Clp0006I 0  Obj -16191.669 Primal inf 8387.6722 (95)
Clp0006I 95  Obj 614747.21 Primal inf 78.114234 (43)
Clp0006I 147  Obj 835723.23
Clp0000I Optimal - objective value 835723.23
Clp0032I Optimal objective 835723.2252 - 147 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 835723.23
NLP Heuristic: NLP0014I             2         OPT 852784.61       41 0.410222
no solution.
Clp0000I Optimal - objective value 835723.23
Optimality Based BT: Couenne: new cutoff value 1.9477279327e+06 (3.36268 seconds)
Couenne: new cutoff value 1.6472886077e+06 (3.36853 seconds)
Couenne: new cutoff value 1.4180395827e+06 (3.37141 seconds)
Couenne: new cutoff value 1.3425124827e+06 (3.37431 seconds)
Couenne: new cutoff value 1.2482523497e+06 (3.39145 seconds)
8 improved bounds
Probing: 11 improved bounds
NLP Heuristic: no solution.
Cbc0013I At root node, 0 cuts changed objective from 835723.23 to 836119.61 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3.14 seconds)
Optimality Based BT: 29 improved bounds
Optimality Based BT: 26 improved bounds
Optimality Based BT: 30 improved bounds
Optimality Based BT: 25 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible 844648.53 (16.17 seconds)
Cbc0010I After 200 nodes, 99 on tree, 1e+50 best solution, best possible 844648.53 (17.59 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1e+50 best solution, best possible 844648.53 (18.82 seconds)
Cbc0010I After 400 nodes, 199 on tree, 1e+50 best solution, best possible 844648.53 (19.85 seconds)
Couenne: new cutoff value 8.5278480248e+05 (22.7012 seconds)
Cbc0004I Integer solution of 852784.8 found after 2454 iterations and 413 nodes (19.98 seconds)
Couenne: new cutoff value 8.5278480240e+05 (23.473 seconds)
Cbc0001I Search completed - best objective 852784.8024798457, took 2881 iterations and 478 nodes (20.77 seconds)
Cbc0035I Maximum depth 206, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1063
Linearization cuts added in total:           1063  (separation time: 0.004945s)
Total solve time:                         20.7809s (20.7809s in branch-and-bound)
Lower bound:                               852785
Upper bound:                               852785  (gap: 0.00%)
Branch-and-bound nodes:                       478
Stats: /tmp/jl_YyjLaj/model.nl  848 [var]   16 [int]  882 [con]  171 [aux]   1063 [root]     1063 [tot] 0.004945 [sep]  20.7809 [time]  20.7817 [bb]         8.527848e+05 [lower]         8.527848e+05 [upper]     478 [nodes]
Performance of                           FBBT:	   0.641629s,      597 runs. fix: 0.00029152 shrnk:   0.607919 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.30969s,        5 runs. fix:        0.2 shrnk:    37.5021 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap72.txt
