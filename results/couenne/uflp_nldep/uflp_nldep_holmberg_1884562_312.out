solving instance uflp nldep holmberg 32 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 6.8975000000e+04 (5.9905 seconds)
6.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10084.258       66 5.987404
NLP0014I             2         OPT 11073.651       35 2.477884
Loaded instance "/tmp/jl_qs4ds1/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          239 (0 integer)

Coin0506I Presolve 4951 (0) rows, 4651 (-178) columns and 23191 (-178) elements
Clp0006I 0  Obj -59062.5 Primal inf 3764824.4 (180)
Clp0006I 165  Obj 4110.3053 Primal inf 310.14826 (111)
Clp0006I 339  Obj 7967.5735 Primal inf 5376.0506 (41)
Clp0006I 397  Obj 8374.8416
Clp0000I Optimal - objective value 8374.8416
Clp0000I Optimal - objective value 8374.8416
Clp0032I Optimal objective 8374.841609 - 397 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 8374.8416
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 8374.8416
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 9 added rows had average density of 2
Cbc0013I At root node, 9 cuts changed objective from 8374.8416 to 8378.6216 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 106 row cuts average 2.0 elements, 624 column cuts (624 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (20.78 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.1512451902e+04 (200.32 seconds)
Cbc0010I After 100 nodes, 47 on tree, 1e+50 best solution, best possible 9135.1521 (198.28 seconds)
Couenne: new cutoff value 1.0085338733e+04 (219.516 seconds)
Couenne: new cutoff value 1.0085328076e+04 (219.59 seconds)
Cbc0010I After 200 nodes, 81 on tree, 1e+50 best solution, best possible 9549.0238 (209.39 seconds)
Cbc0010I After 300 nodes, 99 on tree, 1e+50 best solution, best possible 9739.8252 (221.88 seconds)
Cbc0010I After 400 nodes, 99 on tree, 1e+50 best solution, best possible 9943.367 (236.15 seconds)
Cbc0010I After 500 nodes, 119 on tree, 1e+50 best solution, best possible 9954.3825 (246.83 seconds)
Couenne: new cutoff value 1.0085238485e+04 (265.378 seconds)
Cbc0010I After 600 nodes, 144 on tree, 1e+50 best solution, best possible 9969.4001 (257.36 seconds)
Cbc0010I After 700 nodes, 172 on tree, 1e+50 best solution, best possible 9977.8773 (269.69 seconds)
Couenne: new cutoff value 1.0084790778e+04 (290.407 seconds)
Couenne: new cutoff value 1.0084786804e+04 (290.484 seconds)
Cbc0010I After 800 nodes, 208 on tree, 1e+50 best solution, best possible 9984.7807 (280.25 seconds)
Cbc0010I After 900 nodes, 220 on tree, 1e+50 best solution, best possible 10013.485 (292.56 seconds)
Cbc0010I After 1000 nodes, 219 on tree, 1e+50 best solution, best possible 10030.629 (303.09 seconds)
Cbc0010I After 1100 nodes, 213 on tree, 1e+50 best solution, best possible 10042.392 (315.21 seconds)
Cbc0010I After 1200 nodes, 186 on tree, 1e+50 best solution, best possible 10060.071 (324.35 seconds)
Cbc0010I After 1300 nodes, 206 on tree, 1e+50 best solution, best possible 10063.734 (334.67 seconds)
Couenne: new cutoff value 1.0084291324e+04 (354.085 seconds)
Couenne: new cutoff value 1.0084280609e+04 (354.205 seconds)
Cbc0010I After 1400 nodes, 231 on tree, 1e+50 best solution, best possible 10065.559 (344.12 seconds)
Cbc0010I After 1500 nodes, 238 on tree, 1e+50 best solution, best possible 10068.464 (353.38 seconds)
Cbc0010I After 1600 nodes, 217 on tree, 1e+50 best solution, best possible 10076.057 (361.44 seconds)
Cbc0010I After 1700 nodes, 218 on tree, 1e+50 best solution, best possible 10079.034 (371.36 seconds)
Cbc0010I After 1800 nodes, 225 on tree, 1e+50 best solution, best possible 10080.022 (380.71 seconds)
Cbc0010I After 1900 nodes, 227 on tree, 1e+50 best solution, best possible 10080.992 (390.03 seconds)
Cbc0010I After 2000 nodes, 230 on tree, 1e+50 best solution, best possible 10081.727 (399.49 seconds)
Cbc0010I After 2100 nodes, 210 on tree, 1e+50 best solution, best possible 10082.943 (407.86 seconds)
Cbc0010I After 2200 nodes, 193 on tree, 1e+50 best solution, best possible 10083.551 (415.49 seconds)
Cbc0010I After 2300 nodes, 174 on tree, 1e+50 best solution, best possible 10083.953 (422.88 seconds)
Cbc0010I After 2400 nodes, 136 on tree, 1e+50 best solution, best possible 10084.299 (427.96 seconds)
Cbc0010I After 2500 nodes, 86 on tree, 1e+50 best solution, best possible 10084.868 (430.04 seconds)
Cbc0010I After 2600 nodes, 36 on tree, 1e+50 best solution, best possible 10085.348 (431.90 seconds)
Cbc0001I Search completed - best objective 1e+50, took 76853 iterations and 2672 nodes (433.94 seconds)
Cbc0035I Maximum depth 92, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4951
Linearization cuts added in total:           4951  (separation time: 0.029802s)
Total solve time:                         433.995s (433.995s in branch-and-bound)
Lower bound:                              10084.3
Upper bound:                              10084.3  (gap: 0.00%)
Branch-and-bound nodes:                      2672
Stats: /tmp/jl_qs4ds1/model.nl 4590 [var]   30 [int] 4710 [con]  239 [aux]   4951 [root]     4951 [tot] 0.029802 [sep]  433.995 [time]  434.001 [bb]         1.008428e+04 [lower]         1.008428e+04 [upper]    2672 [nodes]
Performance of                           FBBT:	    26.5789s,     3167 runs. fix:          0 shrnk:    3.20739 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    14.2982s,        8 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p32
