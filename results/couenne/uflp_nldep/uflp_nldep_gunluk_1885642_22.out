solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-2.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 4.8024125458e+02 (0.023459 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 228.39475       36 0.190169
NLP0014I             2         OPT 228.39475       21 0.056633
Couenne: new cutoff value 2.2839476514e+02 (0.275422 seconds)
Loaded instance "/tmp/jl_lKOV4J/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           49 (0 integer)

Coin0506I Presolve 330 (-1) rows, 250 (-29) columns and 1249 (-30) elements
Clp0006I 0  Obj -1094.0625 Primal inf 196874.64 (30)
Clp0006I 65  Obj 0.25883918 Primal inf 1327.1302 (20)
Clp0006I 113  Obj 149.19766
Clp0000I Optimal - objective value 149.19766
Clp0032I Optimal objective 149.1976599 - 113 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 149.19766
NLP Heuristic: NLP0014I             3         OPT 252.16434       19 0.050822
no solution.
Clp0000I Optimal - objective value 149.19766
Optimality Based BT: 2 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 15 added rows had average density of 2
Cbc0013I At root node, 15 cuts changed objective from 149.19766 to 175.8139 in 17 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 112 row cuts average 2.0 elements, 208 column cuts (208 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.33 seconds)
Optimality Based BT: 4 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 9 improved bounds
Optimality Based BT: 11 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 7 improved bounds
Optimality Based BT: 9 improved bounds
Cbc0010I After 100 nodes, 15 on tree, 1e+50 best solution, best possible 207.55566 (3.88 seconds)
Couenne: new cutoff value 2.2835923858e+02 (4.33478 seconds)
Optimality Based BT: 10 improved bounds
Optimality Based BT: 8 improved bounds
Cbc0010I After 200 nodes, 34 on tree, 1e+50 best solution, best possible 219.01481 (4.97 seconds)
Couenne: new cutoff value 2.2808154982e+02 (5.55382 seconds)
Cbc0010I After 300 nodes, 60 on tree, 1e+50 best solution, best possible 223.14939 (5.62 seconds)
Cbc0010I After 400 nodes, 28 on tree, 1e+50 best solution, best possible 228.1045 (6.20 seconds)
Cbc0001I Search completed - best objective 1e+50, took 4876 iterations and 456 nodes (6.27 seconds)
Cbc0035I Maximum depth 51, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        331
Linearization cuts added in total:            331  (separation time: 0.001479s)
Total solve time:                         6.27757s (6.27757s in branch-and-bound)
Lower bound:                              228.082
Upper bound:                              228.082  (gap: 0.00%)
Branch-and-bound nodes:                       456
Stats: /tmp/jl_lKOV4J/model.nl  230 [var]   10 [int]  240 [con]   49 [aux]    331 [root]      331 [tot] 0.001479 [sep]  6.27757 [time]  6.27806 [bb]         2.280815e+02 [lower]         2.280815e+02 [upper]     456 [nodes]
Performance of                           FBBT:	   0.133033s,      563 runs. fix:   0.001534 shrnk:    2.12528 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.867668s,       11 runs. fix:    2.96639 shrnk:    27.1328 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-2.txt
