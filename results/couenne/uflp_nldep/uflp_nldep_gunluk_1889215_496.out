solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-9.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 7.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 444.01225       49 3.029759
NLP0014I             2         OPT 446.24496       41 3.70925
Couenne: new cutoff value 4.4624519885e+02 (14.8188 seconds)
Loaded instance "/tmp/jl_dUHruq/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          499 (0 integer)

Coin0506I Presolve 5599 (-202) rows, 5249 (-400) columns and 26097 (-602) elements
Clp0006I 0  Obj 0 Primal inf 3529.0194 (249) Dual inf 6.245699e+12 (610)
Clp0029I End of values pass after 149 iterations
Clp0006I 149  Obj 446.2552 Primal inf 250.67025 (100) Dual inf 1.174422e+14 (5001)
Clp0006I 397  Obj 446.2552 Primal inf 17.150233 (23) Dual inf 6.8587549e+12 (807)
Clp0006I 585  Obj 446.2552 Primal inf 0.50439297 (2) Dual inf 368732.85 (121)
Clp0006I 723  Obj 377.44722
Clp0000I Optimal - objective value 377.44722
Clp0032I Optimal objective 377.4472201 - 723 iterations time 0.172, Presolve 0.03
Clp0000I Optimal - objective value 377.44722
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 377.44722
Optimality Based BT: 80 improved bounds
Probing: 50 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 25 added rows had average density of 2
Cbc0013I At root node, 25 cuts changed objective from 377.44722 to 416.15458 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 58 row cuts average 2.0 elements, 9 column cuts (9 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (39.35 seconds)
Optimality Based BT: 76 improved bounds
Optimality Based BT: 94 improved bounds
Optimality Based BT: 98 improved bounds
Cbc0010I After 100 nodes, 42 on tree, 1e+50 best solution, best possible 439.2049 (291.22 seconds)
Cbc0010I After 200 nodes, 80 on tree, 1e+50 best solution, best possible 439.2049 (305.05 seconds)
Cbc0010I After 300 nodes, 125 on tree, 1e+50 best solution, best possible 439.2049 (317.29 seconds)
Cbc0010I After 400 nodes, 173 on tree, 1e+50 best solution, best possible 439.2049 (329.90 seconds)
Cbc0010I After 500 nodes, 223 on tree, 1e+50 best solution, best possible 439.2049 (343.64 seconds)
Cbc0010I After 600 nodes, 273 on tree, 1e+50 best solution, best possible 439.2049 (357.16 seconds)
Couenne: new cutoff value 4.4419341375e+02 (377.996 seconds)
Cbc0004I Integer solution of 444.19342 found after 4137 iterations and 642 nodes (362.74 seconds)
Cbc0010I After 700 nodes, 113 on tree, 444.19342 best solution, best possible 440.05209 (492.28 seconds)
Cbc0010I After 800 nodes, 141 on tree, 444.19342 best solution, best possible 440.25498 (509.25 seconds)
Cbc0010I After 900 nodes, 169 on tree, 444.19342 best solution, best possible 440.3872 (565.56 seconds)
Cbc0010I After 1000 nodes, 196 on tree, 444.19342 best solution, best possible 440.44325 (581.78 seconds)
Cbc0010I After 1100 nodes, 216 on tree, 444.19342 best solution, best possible 440.59086 (597.93 seconds)
Cbc0010I After 1200 nodes, 238 on tree, 444.19342 best solution, best possible 440.82817 (614.20 seconds)
Cbc0010I After 1300 nodes, 264 on tree, 444.19342 best solution, best possible 440.83787 (630.95 seconds)
Cbc0010I After 1400 nodes, 283 on tree, 444.19342 best solution, best possible 440.98681 (647.11 seconds)
Cbc0010I After 1500 nodes, 312 on tree, 444.19342 best solution, best possible 441.02919 (662.82 seconds)
Cbc0010I After 1600 nodes, 344 on tree, 444.19342 best solution, best possible 441.02919 (676.24 seconds)
Cbc0010I After 1700 nodes, 376 on tree, 444.19342 best solution, best possible 441.02919 (687.85 seconds)
Cbc0010I After 1800 nodes, 417 on tree, 444.19342 best solution, best possible 441.02919 (702.16 seconds)
Cbc0010I After 1900 nodes, 463 on tree, 444.19342 best solution, best possible 441.02919 (717.16 seconds)
Couenne: new cutoff value 4.4403245505e+02 (739.688 seconds)
Cbc0004I Integer solution of 444.03246 found after 16459 iterations and 1952 nodes (724.46 seconds)
Cbc0010I After 2000 nodes, 307 on tree, 444.03246 best solution, best possible 441.03709 (735.76 seconds)
Cbc0010I After 2100 nodes, 335 on tree, 444.03246 best solution, best possible 441.07344 (752.28 seconds)
Cbc0010I After 2200 nodes, 353 on tree, 444.03246 best solution, best possible 441.09737 (767.64 seconds)
Cbc0010I After 2300 nodes, 378 on tree, 444.03246 best solution, best possible 441.23209 (786.41 seconds)
Cbc0010I After 2400 nodes, 401 on tree, 444.03246 best solution, best possible 441.23876 (805.90 seconds)
Cbc0010I After 2500 nodes, 427 on tree, 444.03246 best solution, best possible 441.26283 (822.76 seconds)
Cbc0010I After 2600 nodes, 452 on tree, 444.03246 best solution, best possible 441.26283 (839.18 seconds)
Cbc0010I After 2700 nodes, 466 on tree, 444.03246 best solution, best possible 441.30984 (856.49 seconds)
Cbc0010I After 2800 nodes, 496 on tree, 444.03246 best solution, best possible 441.31185 (873.63 seconds)
Cbc0010I After 2900 nodes, 523 on tree, 444.03246 best solution, best possible 441.31891 (890.79 seconds)
Cbc0010I After 3000 nodes, 547 on tree, 444.03246 best solution, best possible 441.3544 (907.29 seconds)
Cbc0010I After 3100 nodes, 570 on tree, 444.03246 best solution, best possible 441.37087 (924.22 seconds)
Cbc0010I After 3200 nodes, 595 on tree, 444.03246 best solution, best possible 441.3879 (941.21 seconds)
Cbc0010I After 3300 nodes, 617 on tree, 444.03246 best solution, best possible 441.40468 (958.40 seconds)
Cbc0010I After 3400 nodes, 640 on tree, 444.03246 best solution, best possible 441.43897 (975.45 seconds)
Cbc0010I After 3500 nodes, 660 on tree, 444.03246 best solution, best possible 441.4486 (991.67 seconds)
Cbc0010I After 3600 nodes, 681 on tree, 444.03246 best solution, best possible 441.48576 (1008.19 seconds)
Cbc0010I After 3700 nodes, 699 on tree, 444.03246 best solution, best possible 441.50663 (1024.81 seconds)
Cbc0010I After 3800 nodes, 726 on tree, 444.03246 best solution, best possible 441.51155 (1042.26 seconds)
Cbc0010I After 3900 nodes, 753 on tree, 444.03246 best solution, best possible 441.51428 (1059.11 seconds)
Cbc0010I After 4000 nodes, 776 on tree, 444.03246 best solution, best possible 441.52328 (1076.42 seconds)
Cbc0010I After 4100 nodes, 798 on tree, 444.03246 best solution, best possible 441.52328 (1091.19 seconds)
Cbc0010I After 4200 nodes, 822 on tree, 444.03246 best solution, best possible 441.53081 (1107.77 seconds)
Cbc0010I After 4300 nodes, 851 on tree, 444.03246 best solution, best possible 441.5347 (1125.59 seconds)
Cbc0010I After 4400 nodes, 876 on tree, 444.03246 best solution, best possible 441.53747 (1143.31 seconds)
Cbc0010I After 4500 nodes, 903 on tree, 444.03246 best solution, best possible 441.53921 (1160.77 seconds)
Cbc0010I After 4600 nodes, 927 on tree, 444.03246 best solution, best possible 441.54199 (1177.45 seconds)
Cbc0010I After 4700 nodes, 952 on tree, 444.03246 best solution, best possible 441.56138 (1194.50 seconds)
Cbc0010I After 4800 nodes, 971 on tree, 444.03246 best solution, best possible 441.56523 (1210.65 seconds)
Cbc0010I After 4900 nodes, 994 on tree, 444.03246 best solution, best possible 441.56671 (1227.00 seconds)
Cbc0010I After 5000 nodes, 1019 on tree, 444.03246 best solution, best possible 441.5738 (1245.01 seconds)
Cbc0010I After 5100 nodes, 1042 on tree, 444.03246 best solution, best possible 441.5793 (1261.89 seconds)
Cbc0010I After 5200 nodes, 1066 on tree, 444.03246 best solution, best possible 441.58875 (1278.69 seconds)
Cbc0010I After 5300 nodes, 1091 on tree, 444.03246 best solution, best possible 441.58976 (1296.07 seconds)
Cbc0010I After 5400 nodes, 1116 on tree, 444.03246 best solution, best possible 441.59508 (1313.40 seconds)
Cbc0010I After 5500 nodes, 1143 on tree, 444.03246 best solution, best possible 441.60008 (1330.67 seconds)
Cbc0010I After 5600 nodes, 1166 on tree, 444.03246 best solution, best possible 441.61611 (1348.30 seconds)
Cbc0010I After 5700 nodes, 1183 on tree, 444.03246 best solution, best possible 441.63415 (1364.82 seconds)
Cbc0010I After 5800 nodes, 1205 on tree, 444.03246 best solution, best possible 441.64016 (1381.38 seconds)
Cbc0010I After 5900 nodes, 1229 on tree, 444.03246 best solution, best possible 441.64449 (1398.88 seconds)
Cbc0010I After 6000 nodes, 1243 on tree, 444.03246 best solution, best possible 441.65764 (1414.51 seconds)
Cbc0010I After 6100 nodes, 1265 on tree, 444.03246 best solution, best possible 441.65794 (1431.80 seconds)
Cbc0010I After 6200 nodes, 1286 on tree, 444.03246 best solution, best possible 441.67595 (1448.79 seconds)
Cbc0010I After 6300 nodes, 1311 on tree, 444.03246 best solution, best possible 441.68807 (1468.97 seconds)
Cbc0010I After 6400 nodes, 1331 on tree, 444.03246 best solution, best possible 441.69583 (1486.37 seconds)
Cbc0010I After 6500 nodes, 1353 on tree, 444.03246 best solution, best possible 441.71432 (1503.39 seconds)
Cbc0010I After 6600 nodes, 1375 on tree, 444.03246 best solution, best possible 441.72132 (1520.75 seconds)
Cbc0010I After 6700 nodes, 1401 on tree, 444.03246 best solution, best possible 441.72609 (1538.23 seconds)
Cbc0010I After 6800 nodes, 1425 on tree, 444.03246 best solution, best possible 441.73504 (1556.08 seconds)
Cbc0010I After 6900 nodes, 1447 on tree, 444.03246 best solution, best possible 441.74048 (1572.56 seconds)
Cbc0010I After 7000 nodes, 1466 on tree, 444.03246 best solution, best possible 441.74572 (1590.10 seconds)
Cbc0010I After 7100 nodes, 1489 on tree, 444.03246 best solution, best possible 441.74705 (1606.79 seconds)
Cbc0010I After 7200 nodes, 1506 on tree, 444.03246 best solution, best possible 441.74896 (1623.60 seconds)
Cbc0010I After 7300 nodes, 1531 on tree, 444.03246 best solution, best possible 441.75051 (1640.70 seconds)
Cbc0010I After 7400 nodes, 1551 on tree, 444.03246 best solution, best possible 441.75259 (1656.99 seconds)
Cbc0010I After 7500 nodes, 1580 on tree, 444.03246 best solution, best possible 441.75259 (1673.53 seconds)
Cbc0010I After 7600 nodes, 1598 on tree, 444.03246 best solution, best possible 441.75259 (1687.38 seconds)
Cbc0010I After 7700 nodes, 1608 on tree, 444.03246 best solution, best possible 441.75259 (1699.95 seconds)
Couenne: new cutoff value 4.4403043995e+02 (1728.55 seconds)
Cbc0004I Integer solution of 444.03045 found after 87809 iterations and 7794 nodes (1713.30 seconds)
Cbc0010I After 7800 nodes, 1592 on tree, 444.03045 best solution, best possible 441.75554 (1715.47 seconds)
Cbc0010I After 7900 nodes, 1622 on tree, 444.03045 best solution, best possible 441.75554 (1732.52 seconds)
Cbc0010I After 8000 nodes, 1636 on tree, 444.03045 best solution, best possible 441.75623 (1750.03 seconds)
Cbc0010I After 8100 nodes, 1654 on tree, 444.03045 best solution, best possible 441.75947 (1766.64 seconds)
Cbc0010I After 8200 nodes, 1675 on tree, 444.03045 best solution, best possible 441.76243 (1784.37 seconds)
Cbc0010I After 8300 nodes, 1700 on tree, 444.03045 best solution, best possible 441.76305 (1801.68 seconds)
Cbc0010I After 8400 nodes, 1723 on tree, 444.03045 best solution, best possible 441.77307 (1819.42 seconds)
Cbc0010I After 8500 nodes, 1744 on tree, 444.03045 best solution, best possible 441.78401 (1835.90 seconds)
Cbc0010I After 8600 nodes, 1767 on tree, 444.03045 best solution, best possible 441.79626 (1853.14 seconds)
Cbc0010I After 8700 nodes, 1782 on tree, 444.03045 best solution, best possible 441.80377 (1869.40 seconds)
Cbc0010I After 8800 nodes, 1802 on tree, 444.03045 best solution, best possible 441.80378 (1886.00 seconds)
Cbc0010I After 8900 nodes, 1825 on tree, 444.03045 best solution, best possible 441.80511 (1902.30 seconds)
Cbc0010I After 9000 nodes, 1852 on tree, 444.03045 best solution, best possible 441.80511 (1919.60 seconds)
Cbc0010I After 9100 nodes, 1876 on tree, 444.03045 best solution, best possible 441.80889 (1937.11 seconds)
Cbc0010I After 9200 nodes, 1900 on tree, 444.03045 best solution, best possible 441.8122 (1954.83 seconds)
Cbc0010I After 9300 nodes, 1923 on tree, 444.03045 best solution, best possible 441.81621 (1974.82 seconds)
Cbc0010I After 9400 nodes, 1943 on tree, 444.03045 best solution, best possible 441.81868 (1995.20 seconds)
Cbc0010I After 9500 nodes, 1968 on tree, 444.03045 best solution, best possible 441.82329 (2013.04 seconds)
Cbc0010I After 9600 nodes, 1989 on tree, 444.03045 best solution, best possible 441.82517 (2032.70 seconds)
Cbc0010I After 9700 nodes, 2007 on tree, 444.03045 best solution, best possible 441.8272 (2049.17 seconds)
Cbc0010I After 9800 nodes, 2022 on tree, 444.03045 best solution, best possible 441.84395 (2066.18 seconds)
Cbc0010I After 9900 nodes, 2039 on tree, 444.03045 best solution, best possible 441.84578 (2084.65 seconds)
Cbc0010I After 10000 nodes, 2058 on tree, 444.03045 best solution, best possible 441.85091 (2101.70 seconds)
Cbc0010I After 10100 nodes, 2074 on tree, 444.03045 best solution, best possible 441.85741 (2118.86 seconds)
Cbc0010I After 10200 nodes, 2095 on tree, 444.03045 best solution, best possible 441.86103 (2136.26 seconds)
Cbc0010I After 10300 nodes, 2109 on tree, 444.03045 best solution, best possible 441.8637 (2153.04 seconds)
Cbc0010I After 10400 nodes, 2125 on tree, 444.03045 best solution, best possible 441.86613 (2169.60 seconds)
Cbc0010I After 10500 nodes, 2151 on tree, 444.03045 best solution, best possible 441.86906 (2187.90 seconds)
Cbc0010I After 10600 nodes, 2171 on tree, 444.03045 best solution, best possible 441.87248 (2205.04 seconds)
Cbc0010I After 10700 nodes, 2192 on tree, 444.03045 best solution, best possible 441.87825 (2223.14 seconds)
Cbc0010I After 10800 nodes, 2216 on tree, 444.03045 best solution, best possible 441.88186 (2241.05 seconds)
Cbc0010I After 10900 nodes, 2231 on tree, 444.03045 best solution, best possible 441.88927 (2257.42 seconds)
Cbc0010I After 11000 nodes, 2247 on tree, 444.03045 best solution, best possible 441.89693 (2273.59 seconds)
Cbc0010I After 11100 nodes, 2271 on tree, 444.03045 best solution, best possible 441.90705 (2290.99 seconds)
Cbc0010I After 11200 nodes, 2289 on tree, 444.03045 best solution, best possible 441.91095 (2307.08 seconds)
Cbc0010I After 11300 nodes, 2308 on tree, 444.03045 best solution, best possible 441.9124 (2324.44 seconds)
Cbc0010I After 11400 nodes, 2324 on tree, 444.03045 best solution, best possible 441.9142 (2341.22 seconds)
Cbc0010I After 11500 nodes, 2348 on tree, 444.03045 best solution, best possible 441.91622 (2361.12 seconds)
Cbc0010I After 11600 nodes, 2366 on tree, 444.03045 best solution, best possible 441.91909 (2377.21 seconds)
Cbc0010I After 11700 nodes, 2385 on tree, 444.03045 best solution, best possible 441.92083 (2393.76 seconds)
Cbc0010I After 11800 nodes, 2401 on tree, 444.03045 best solution, best possible 441.92467 (2409.41 seconds)
Cbc0010I After 11900 nodes, 2414 on tree, 444.03045 best solution, best possible 441.92706 (2425.08 seconds)
Cbc0010I After 12000 nodes, 2436 on tree, 444.03045 best solution, best possible 441.92962 (2442.52 seconds)
Cbc0010I After 12100 nodes, 2459 on tree, 444.03045 best solution, best possible 441.93168 (2460.30 seconds)
Cbc0010I After 12200 nodes, 2477 on tree, 444.03045 best solution, best possible 441.93577 (2477.13 seconds)
Cbc0010I After 12300 nodes, 2500 on tree, 444.03045 best solution, best possible 441.93577 (2494.43 seconds)
Cbc0010I After 12400 nodes, 2525 on tree, 444.03045 best solution, best possible 441.93819 (2512.67 seconds)
Cbc0010I After 12500 nodes, 2537 on tree, 444.03045 best solution, best possible 441.95006 (2528.58 seconds)
Cbc0010I After 12600 nodes, 2552 on tree, 444.03045 best solution, best possible 441.95332 (2547.25 seconds)
Cbc0010I After 12700 nodes, 2575 on tree, 444.03045 best solution, best possible 441.9583 (2565.03 seconds)
Cbc0010I After 12800 nodes, 2588 on tree, 444.03045 best solution, best possible 441.96496 (2584.13 seconds)
Cbc0010I After 12900 nodes, 2614 on tree, 444.03045 best solution, best possible 441.97094 (2602.88 seconds)
Cbc0010I After 13000 nodes, 2627 on tree, 444.03045 best solution, best possible 441.97505 (2618.57 seconds)
Cbc0010I After 13100 nodes, 2650 on tree, 444.03045 best solution, best possible 441.97952 (2635.90 seconds)
Cbc0010I After 13200 nodes, 2670 on tree, 444.03045 best solution, best possible 441.9801 (2651.81 seconds)
Cbc0010I After 13300 nodes, 2685 on tree, 444.03045 best solution, best possible 441.98415 (2668.49 seconds)
Cbc0010I After 13400 nodes, 2710 on tree, 444.03045 best solution, best possible 441.98734 (2686.17 seconds)
Cbc0010I After 13500 nodes, 2731 on tree, 444.03045 best solution, best possible 441.98921 (2703.50 seconds)
Cbc0010I After 13600 nodes, 2751 on tree, 444.03045 best solution, best possible 441.99128 (2720.24 seconds)
Cbc0010I After 13700 nodes, 2773 on tree, 444.03045 best solution, best possible 441.99214 (2737.85 seconds)
Cbc0010I After 13800 nodes, 2794 on tree, 444.03045 best solution, best possible 441.99427 (2754.92 seconds)
Cbc0010I After 13900 nodes, 2809 on tree, 444.03045 best solution, best possible 441.99979 (2773.45 seconds)
Cbc0010I After 14000 nodes, 2830 on tree, 444.03045 best solution, best possible 442.01225 (2790.20 seconds)
Cbc0010I After 14100 nodes, 2847 on tree, 444.03045 best solution, best possible 442.01555 (2807.21 seconds)
Cbc0010I After 14200 nodes, 2863 on tree, 444.03045 best solution, best possible 442.02088 (2823.33 seconds)
Cbc0010I After 14300 nodes, 2880 on tree, 444.03045 best solution, best possible 442.02455 (2841.32 seconds)
Cbc0010I After 14400 nodes, 2898 on tree, 444.03045 best solution, best possible 442.02526 (2857.65 seconds)
Cbc0010I After 14500 nodes, 2920 on tree, 444.03045 best solution, best possible 442.028 (2874.78 seconds)
Cbc0010I After 14600 nodes, 2938 on tree, 444.03045 best solution, best possible 442.03659 (2890.95 seconds)
Cbc0010I After 14700 nodes, 2955 on tree, 444.03045 best solution, best possible 442.04172 (2906.55 seconds)
Cbc0010I After 14800 nodes, 2978 on tree, 444.03045 best solution, best possible 442.04264 (2926.47 seconds)
Cbc0010I After 14900 nodes, 2999 on tree, 444.03045 best solution, best possible 442.04349 (2943.73 seconds)
Optimality Based BT: 127 improved bounds
Cbc0010I After 15000 nodes, 3016 on tree, 444.03045 best solution, best possible 442.04419 (2969.58 seconds)
Cbc0010I After 15100 nodes, 3035 on tree, 444.03045 best solution, best possible 442.04729 (2985.79 seconds)
Cbc0010I After 15200 nodes, 3057 on tree, 444.03045 best solution, best possible 442.04748 (3003.20 seconds)
Cbc0010I After 15300 nodes, 3077 on tree, 444.03045 best solution, best possible 442.04849 (3020.84 seconds)
Cbc0010I After 15400 nodes, 3094 on tree, 444.03045 best solution, best possible 442.05096 (3036.80 seconds)
Cbc0010I After 15500 nodes, 3113 on tree, 444.03045 best solution, best possible 442.05801 (3052.96 seconds)
Cbc0010I After 15600 nodes, 3127 on tree, 444.03045 best solution, best possible 442.06851 (3069.39 seconds)
Cbc0010I After 15700 nodes, 3139 on tree, 444.03045 best solution, best possible 442.07855 (3084.63 seconds)
Cbc0010I After 15800 nodes, 3159 on tree, 444.03045 best solution, best possible 442.08083 (3102.17 seconds)
Cbc0010I After 15900 nodes, 3177 on tree, 444.03045 best solution, best possible 442.08231 (3118.01 seconds)
Cbc0010I After 16000 nodes, 3195 on tree, 444.03045 best solution, best possible 442.0841 (3133.92 seconds)
Cbc0010I After 16100 nodes, 3214 on tree, 444.03045 best solution, best possible 442.08633 (3150.62 seconds)
Cbc0010I After 16200 nodes, 3232 on tree, 444.03045 best solution, best possible 442.08768 (3166.85 seconds)
Cbc0010I After 16300 nodes, 3249 on tree, 444.03045 best solution, best possible 442.09012 (3182.21 seconds)
Cbc0010I After 16400 nodes, 3262 on tree, 444.03045 best solution, best possible 442.09374 (3197.98 seconds)
Cbc0010I After 16500 nodes, 3282 on tree, 444.03045 best solution, best possible 442.09566 (3213.74 seconds)
Cbc0010I After 16600 nodes, 3299 on tree, 444.03045 best solution, best possible 442.09879 (3230.31 seconds)
Cbc0010I After 16700 nodes, 3315 on tree, 444.03045 best solution, best possible 442.10166 (3246.45 seconds)
Cbc0010I After 16800 nodes, 3332 on tree, 444.03045 best solution, best possible 442.10581 (3263.46 seconds)
Cbc0010I After 16900 nodes, 3347 on tree, 444.03045 best solution, best possible 442.10939 (3278.97 seconds)
Cbc0010I After 17000 nodes, 3363 on tree, 444.03045 best solution, best possible 442.11096 (3294.61 seconds)
Cbc0010I After 17100 nodes, 3383 on tree, 444.03045 best solution, best possible 442.11954 (3311.22 seconds)
Cbc0010I After 17200 nodes, 3397 on tree, 444.03045 best solution, best possible 442.1216 (3326.81 seconds)
Cbc0010I After 17300 nodes, 3414 on tree, 444.03045 best solution, best possible 442.12722 (3343.44 seconds)
Cbc0010I After 17400 nodes, 3426 on tree, 444.03045 best solution, best possible 442.12973 (3358.72 seconds)
Cbc0010I After 17500 nodes, 3440 on tree, 444.03045 best solution, best possible 442.13279 (3374.96 seconds)
Cbc0010I After 17600 nodes, 3456 on tree, 444.03045 best solution, best possible 442.13405 (3391.04 seconds)
Cbc0010I After 17700 nodes, 3476 on tree, 444.03045 best solution, best possible 442.13621 (3407.44 seconds)
Cbc0010I After 17800 nodes, 3487 on tree, 444.03045 best solution, best possible 442.13897 (3422.13 seconds)
Cbc0010I After 17900 nodes, 3500 on tree, 444.03045 best solution, best possible 442.1409 (3437.97 seconds)
Cbc0010I After 18000 nodes, 3516 on tree, 444.03045 best solution, best possible 442.14167 (3454.09 seconds)
Cbc0010I After 18100 nodes, 3531 on tree, 444.03045 best solution, best possible 442.14487 (3469.74 seconds)
Cbc0010I After 18200 nodes, 3546 on tree, 444.03045 best solution, best possible 442.14636 (3485.63 seconds)
Cbc0010I After 18300 nodes, 3560 on tree, 444.03045 best solution, best possible 442.14982 (3500.54 seconds)
Cbc0010I After 18400 nodes, 3575 on tree, 444.03045 best solution, best possible 442.15206 (3516.77 seconds)
Cbc0010I After 18500 nodes, 3595 on tree, 444.03045 best solution, best possible 442.15489 (3533.63 seconds)
Cbc0010I After 18600 nodes, 3606 on tree, 444.03045 best solution, best possible 442.15817 (3548.95 seconds)
Cbc0010I After 18700 nodes, 3626 on tree, 444.03045 best solution, best possible 442.15915 (3565.34 seconds)
Cbc0010I After 18800 nodes, 3641 on tree, 444.03045 best solution, best possible 442.1613 (3581.19 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 444.03045 (best possible 442.1613), took 248586 iterations and 18820 nodes (3599.89 seconds)
Cbc0035I Maximum depth 321, 6489 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5801
Linearization cuts added in total:           5801  (separation time: 0.05434s)
Total solve time:                         3600.08s (3600.08s in branch-and-bound)
Lower bound:                              442.161
Upper bound:                               444.03  (gap: 0.42%)
Branch-and-bound nodes:                     18820
Stats: /tmp/jl_dUHruq/model.nl 5150 [var]   50 [int] 5200 [con]  499 [aux]   5801 [root]     5801 [tot] 0.05434 [sep]  3600.08 [time]   3600.1 [bb]         4.421613e+02 [lower]         4.440304e+02 [upper]   18820 [nodes]
Performance of                           FBBT:	    327.432s,    23191 runs. fix:          0 shrnk:    2.99171 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	     36.123s,        5 runs. fix:   0.816327 shrnk:    350.271 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-9.txt
