solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-8.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 306.50594       46 32.492708
NLP0014I             2         OPT 306.54669       52 1.186792
Couenne: new cutoff value 3.0654655419e+02 (34.7056 seconds)
Loaded instance "/tmp/jl_EEpcv1/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          269 (0 integer)

Coin0506I Presolve 2309 (-92) rows, 1949 (-210) columns and 9927 (-302) elements
Clp0006I 0  Obj 0 Primal inf 10057.965 (390)
Clp0006I 121  Obj 2.4308784e-14 Primal inf 11861.756 (153)
Clp0006I 242  Obj 304.54521 Primal inf 55369.64 (131)
Clp0006I 363  Obj 305.14458 Primal inf 24739.31 (72)
Clp0006I 396  Obj 305.60886
Clp0000I Optimal - objective value 305.60886
Clp0032I Optimal objective 305.6088643 - 396 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 305.60886
NLP Heuristic: NLP0014I             3         OPT 306.50593       26 0.871532
no solution.
Clp0000I Optimal - objective value 305.60886
Optimality Based BT: 59 improved bounds
Probing: 5 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 52 added rows had average density of 2
Cbc0013I At root node, 52 cuts changed objective from 305.60886 to 306.49232 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 496 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.98 seconds)
Optimality Based BT: 60 improved bounds
Optimality Based BT: 59 improved bounds
Optimality Based BT: 7 improved bounds
Optimality Based BT: 7 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 5 improved bounds
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 306.50623 (50.42 seconds)
Cbc0010I After 200 nodes, 96 on tree, 1e+50 best solution, best possible 306.50624 (53.81 seconds)
Couenne: new cutoff value 3.0650705804e+02 (90.642 seconds)
Couenne: new cutoff value 3.0650624228e+02 (90.7166 seconds)
Cbc0004I Integer solution of 306.50624 found after 1761 iterations and 262 nodes (55.92 seconds)
Cbc0001I Search completed - best objective 306.5062422788577, took 1761 iterations and 262 nodes (56.17 seconds)
Cbc0035I Maximum depth 130, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2401
Linearization cuts added in total:           2401  (separation time: 0.015211s)
Total solve time:                         56.2103s (56.2103s in branch-and-bound)
Lower bound:                              306.506
Upper bound:                              306.506  (gap: 0.00%)
Branch-and-bound nodes:                       262
Stats: /tmp/jl_EEpcv1/model.nl 1890 [var]   30 [int] 1920 [con]  269 [aux]   2401 [root]     2401 [tot] 0.015211 [sep]  56.2103 [time]  56.2135 [bb]         3.065062e+02 [lower]         3.065062e+02 [upper]     262 [nodes]
Performance of                           FBBT:	     0.8878s,      290 runs. fix: 0.00114169 shrnk:    37.8113 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    10.3769s,        7 runs. fix:    5.78313 shrnk:    210.462 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-8.txt
f0 = 0.06087463046437613
f0 = 0.07940169191005582
f0 = 0.005293446127337054
f0 = 0.07587272782516444
f0 = 0.0291139537003538
f0 = 0.04058308697625075
f0 = 0.04411205106114212
f0 = 0.0582279074007076
f0 = 0.04499429208236496
f0 = 0.08734186110106139
f0 = 0.06175687148559897
f0 = 0.08822410212228424
f0 = 0.06705031761293602
f0 = 0.008822410212228423
f0 = 0.03881860493380507
f0 = 0.01499809736078832
f0 = 0.01852706144567969
f0 = 0.01852706144567969
f0 = 0.07940169191005582
f0 = 0.03352515880646801
f0 = 0.006175687148559896
f0 = 0.02205602553057106
f0 = 0.02823171267913096
f0 = 0.009704651233451267
f0 = 0.05116997923092485
f0 = 0.004411205106114212
f0 = 0.0855773790586157
f0 = 0.030878435742799484
f0 = 0.00352896408489137
f0 = 0.005293446127337054
