solving instance uflp nldep orlib 123 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.2861868748e+06 (1.80635 seconds)
1.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 631651.03       44 1.840012
NLP0014I             2         OPT 631951.73       50 2.37972
Couenne: new cutoff value 6.3195098944e+05 (6.14804 seconds)
Loaded instance "/tmp/jl_fBWb1C/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          296 (0 integer)

Coin0506I Presolve 3173 (-61) rows, 2786 (-160) columns and 13743 (-270) elements
Clp0006I 0  Obj 0 Primal inf 12742.475 (154)
Clp0006I 138  Obj 561887.16 Primal inf 152.6434 (59)
Clp0006I 251  Obj 624862.78
Clp0000I Optimal - objective value 624862.78
Clp0032I Optimal objective 624862.7816 - 251 iterations time 0.052, Presolve 0.04
Clp0000I Optimal - objective value 624862.78
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 624862.78
Optimality Based BT: 56 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 98 added rows had average density of 2
Cbc0013I At root node, 98 cuts changed objective from 624862.78 to 631626.64 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 365 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (12.22 seconds)
Optimality Based BT: 86 improved bounds
Couenne: new cutoff value 6.3190815807e+05 (29.6225 seconds)
Optimality Based BT: 84 improved bounds
Optimality Based BT: 88 improved bounds
Optimality Based BT: 86 improved bounds
Couenne: new cutoff value 6.3173095534e+05 (65.2942 seconds)
Couenne: new cutoff value 6.3165973015e+05 (79.58 seconds)
Cbc0010I After 100 nodes, 22 on tree, 1e+50 best solution, best possible 631651.71 (89.73 seconds)
Cbc0010I After 200 nodes, 49 on tree, 1e+50 best solution, best possible 631651.71 (92.68 seconds)
Cbc0010I After 300 nodes, 78 on tree, 1e+50 best solution, best possible 631651.79 (95.95 seconds)
Cbc0010I After 400 nodes, 115 on tree, 1e+50 best solution, best possible 631651.79 (99.59 seconds)
Cbc0010I After 500 nodes, 158 on tree, 1e+50 best solution, best possible 631651.79 (103.17 seconds)
Cbc0010I After 600 nodes, 207 on tree, 1e+50 best solution, best possible 631651.79 (106.82 seconds)
Cbc0010I After 700 nodes, 256 on tree, 1e+50 best solution, best possible 631651.79 (110.42 seconds)
Cbc0010I After 800 nodes, 306 on tree, 1e+50 best solution, best possible 631651.79 (114.11 seconds)
Cbc0010I After 900 nodes, 356 on tree, 1e+50 best solution, best possible 631651.79 (117.84 seconds)
Cbc0010I After 1000 nodes, 406 on tree, 1e+50 best solution, best possible 631651.79 (121.59 seconds)
Cbc0010I After 1100 nodes, 456 on tree, 1e+50 best solution, best possible 631651.79 (125.32 seconds)
Cbc0010I After 1200 nodes, 506 on tree, 1e+50 best solution, best possible 631651.79 (128.99 seconds)
Couenne: new cutoff value 6.3165190262e+05 (135.513 seconds)
Cbc0004I Integer solution of 631651.9 found after 3069 iterations and 1206 nodes (129.21 seconds)
Cbc0010I After 1300 nodes, 68 on tree, 631651.9 best solution, best possible 631651.89 (132.61 seconds)
Cbc0010I After 1400 nodes, 39 on tree, 631651.9 best solution, best possible 631651.9 (135.65 seconds)
Cbc0010I After 1500 nodes, 37 on tree, 631651.9 best solution, best possible 631651.9 (138.89 seconds)
Cbc0010I After 1600 nodes, 28 on tree, 631651.9 best solution, best possible 631651.9 (142.17 seconds)
Cbc0001I Search completed - best objective 631651.9026191946, took 4422 iterations and 1662 nodes (143.70 seconds)
Cbc0035I Maximum depth 603, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3234
Linearization cuts added in total:           3234  (separation time: 0.022323s)
Total solve time:                         143.764s (143.764s in branch-and-bound)
Lower bound:                               631652
Upper bound:                               631652  (gap: 0.00%)
Branch-and-bound nodes:                      1662
Stats: /tmp/jl_fBWb1C/model.nl 2650 [var]   50 [int] 2650 [con]  296 [aux]   3234 [root]     3234 [tot] 0.022323 [sep]  143.764 [time]  143.769 [bb]         6.316519e+05 [lower]         6.316519e+05 [upper]    1662 [nodes]
Performance of                           FBBT:	    7.07297s,     1372 runs. fix: 5.11443e-05 shrnk:    21.6957 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    9.51178s,        5 runs. fix:        0.4 shrnk:    454.148 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap123.txt
