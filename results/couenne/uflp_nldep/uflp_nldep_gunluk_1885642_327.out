solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-2.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 341.44927       68 74.912932
NLP0014I             2         OPT 348.68589       62 3.198266
Couenne: new cutoff value 3.4868619309e+02 (81.4265 seconds)
Loaded instance "/tmp/jl_lsr2sT/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14862.999 (520)
Clp0006I 152  Obj 2.7595245e-14 Primal inf 2087.357 (199)
Clp0006I 304  Obj 305.06334 Primal inf 7763.7134 (157)
Clp0006I 456  Obj 339.30995 Primal inf 60155.842 (114)
Clp0006I 501  Obj 340.53808
Clp0000I Optimal - objective value 340.53808
Clp0032I Optimal objective 340.5380772 - 501 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 340.53808
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 340.53808
Optimality Based BT: 65 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 62 added rows had average density of 2
Cbc0013I At root node, 62 cuts changed objective from 340.53808 to 341.04612 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 96 row cuts average 2.0 elements, 5 column cuts (5 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (17.19 seconds)
Optimality Based BT: 29 improved bounds
Optimality Based BT: 35 improved bounds
Optimality Based BT: 30 improved bounds
Optimality Based BT: 34 improved bounds
Optimality Based BT: 32 improved bounds
Cbc0010I After 100 nodes, 42 on tree, 1e+50 best solution, best possible 341.26462 (142.53 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 341.26462 (150.66 seconds)
Cbc0010I After 300 nodes, 142 on tree, 1e+50 best solution, best possible 341.26462 (158.08 seconds)
Cbc0010I After 400 nodes, 192 on tree, 1e+50 best solution, best possible 341.26462 (165.18 seconds)
Cbc0010I After 500 nodes, 242 on tree, 1e+50 best solution, best possible 341.26462 (172.18 seconds)
Cbc0010I After 600 nodes, 292 on tree, 1e+50 best solution, best possible 341.26462 (179.05 seconds)
Couenne: new cutoff value 3.4144983339e+02 (262.349 seconds)
Cbc0004I Integer solution of 341.44983 found after 5211 iterations and 624 nodes (180.71 seconds)
Cbc0001I Search completed - best objective 341.4498333945978, took 5853 iterations and 640 nodes (184.40 seconds)
Cbc0035I Maximum depth 312, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.029345s)
Total solve time:                         184.474s (184.474s in branch-and-bound)
Lower bound:                               341.45
Upper bound:                               341.45  (gap: 0.00%)
Branch-and-bound nodes:                       640
Stats: /tmp/jl_lsr2sT/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.029345 [sep]  184.474 [time]  184.481 [bb]         3.414498e+02 [lower]         3.414498e+02 [upper]     640 [nodes]
Performance of                           FBBT:	    5.12048s,      770 runs. fix:          0 shrnk:    52.0675 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    23.2548s,        6 runs. fix:     1.5625 shrnk:    127.452 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-2.txt
f0 = 0.00352896408489137
f0 = 0.052934461273370544
f0 = 0.06793255863415887
f0 = 0.03352515880646801
f0 = 0.04411205106114212
f0 = 0.01852706144567969
f0 = 0.03881860493380507
f0 = 0.023820507573016746
f0 = 0.01411585633956548
f0 = 0.0458765331035878
f0 = 0.0291139537003538
f0 = 0.04146532799747359
f0 = 0.0811661739525015
f0 = 0.04058308697625075
f0 = 0.042347569018696435
f0 = 0.05469894331581623
f0 = 0.04058308697625075
f0 = 0.002646723063668527
f0 = 0.0749904868039416
f0 = 0.008822410212228423
f0 = 0.016762579403234005
f0 = 0.0229382665517939
f0 = 0.020291543488125376
f0 = 0.04499429208236496
f0 = 0.04852325616725633
f0 = 0.06969704067660455
f0 = 0.030878435742799484
f0 = 0.04146532799747359
f0 = 0.03176067676402232
f0 = 0.02823171267913096
f0 = 0.016762579403234005
f0 = 0.0291139537003538
f0 = 0.06087463046437613
f0 = 0.025584989615462427
f0 = 0.03881860493380507
f0 = 0.06087463046437613
f0 = 0.08381289701617003
f0 = 0.06969704067660455
f0 = 0.06263911250682182
f0 = 0.002646723063668527
