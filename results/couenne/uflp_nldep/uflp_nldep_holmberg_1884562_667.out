solving instance uflp nldep holmberg 67 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8874.4765       41 5.12644
Couenne: new cutoff value 8.8744653884e+03 (14.9317 seconds)
Loaded instance "/tmp/jl_mYfKXc/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          409 (0 integer)

Coin0506I Presolve 6649 (-92) rows, 6149 (-350) columns and 30927 (-442) elements
Clp0006I 0  Obj 0 Primal inf 12821.89 (530) Dual inf 2.0477706e+15 (6090)
Clp0006I 350  Obj 8874.4754 Primal inf 362.51996 (62) Dual inf 7.822898e+13 (335)
Clp0006I 570  Obj 8874.4754 Primal inf 144.29391 (50) Dual inf 1.8979698e+09 (2044)
Clp0006I 792  Obj 8874.4754 Primal inf 3.8748588 (42) Dual inf 79129246 (588)
Clp0006I 1000  Obj 8874.4754 Primal inf 2.0252957 (22) Dual inf 4006003.6 (187)
Clp0006I 1210  Obj 8874.4754 Primal inf 0.74919872 (10) Dual inf 5539097.3 (186)
Clp0006I 1422  Obj 8874.4754 Primal inf 0.0088135542 (1) Dual inf 25053.587 (44)
Clp0006I 1515  Obj 8857.1006
Clp0000I Optimal - objective value 8857.1006
Clp0032I Optimal objective 8857.100599 - 1515 iterations time 0.442, Presolve 0.03
Clp0000I Optimal - objective value 8857.1006
NLP Heuristic: NLP0014I             2         OPT 8874.4765       15 1.987152
no solution.
Clp0000I Optimal - objective value 8857.1006
Optimality Based BT: 90 improved bounds
Probing: 2 improved bounds
NLP Heuristic: no solution.
Cbc0031I 56 added rows had average density of 2
Cbc0013I At root node, 56 cuts changed objective from 8857.1006 to 8874.3552 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 244 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (43.41 seconds)
Optimality Based BT: 63 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 301 iterations and 2 nodes (72.15 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6741
Linearization cuts added in total:           6741  (separation time: 0.06533s)
Total solve time:                         72.5989s (72.5989s in branch-and-bound)
Lower bound:                              8874.47
Upper bound:                              8874.47  (gap: 0.00%)
Branch-and-bound nodes:                         2
Stats: /tmp/jl_mYfKXc/model.nl 6090 [var]   30 [int] 6260 [con]  409 [aux]   6741 [root]     6741 [tot] 0.06533 [sep]  72.5989 [time]  72.6104 [bb]         8.874465e+03 [lower]         8.874465e+03 [upper]       2 [nodes]
Performance of                           FBBT:	   0.210914s,       14 runs. fix:          0 shrnk:    88.3736 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.43928s,        2 runs. fix:        3.5 shrnk:    803.228 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p67
f0 = 1.0542780203612967
f0 = 1.0745695638494221
f0 = 0.8945923955199622
f0 = 1.2660158654547788
f0 = 0.4137710389535131
f0 = 1.3612978957468458
f0 = 0.4446494746963126
f0 = 1.3304194600040462
f0 = 1.192789860693283
f0 = 1.20425899396918
f0 = 0.8654784418196084
f0 = 1.2748382756670071
f0 = 0.9889921847908063
f0 = 0.554047361327945
f0 = 0.8434224162890374
f0 = 0.922824108199093
f0 = 0.9819342566210236
f0 = 0.6069818226013155
f0 = 0.6819723094052572
f0 = 0.996050112960589
f0 = 0.990756666833252
f0 = 1.2351374297119795
f0 = 1.0322219948307256
f0 = 0.6060995815800927
f0 = 0.6113930277074298
f0 = 0.7287310835300679
f0 = 1.0886854201889875
f0 = 0.9828164976422464
f0 = 0.4958194539272374
f0 = 0.48523256167256335
