solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-4.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 200.69336       84 0.306608
Couenne: new cutoff value 2.0069339094e+02 (0.336359 seconds)
NLP0014I             2         OPT 200.69336       54 0.142539
Couenne: new cutoff value 2.0069302105e+02 (0.480145 seconds)
Loaded instance "/tmp/jl_4LCryD/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           89 (0 integer)

Coin0506I Presolve 369 (-32) rows, 249 (-70) columns and 1307 (-102) elements
Clp0006I 0  Obj 0 Primal inf 2220.2 (130)
Clp0006I 69  Obj 167.5327 Primal inf 32834.22 (41)
Clp0006I 102  Obj 181.22086
Clp0000I Optimal - objective value 181.22086
Clp0032I Optimal objective 181.2208626 - 102 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 181.22086
NLP Heuristic: NLP0014I             3         OPT 200.69336       16 0.048392
no solution.
Clp0000I Optimal - objective value 181.22086
Optimality Based BT: 17 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 181.22086 to 183.42407 in 13 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 30 row cuts average 2.0 elements, 14 column cuts (14 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.36 seconds)
Optimality Based BT: 10 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 16 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 12 improved bounds
Optimality Based BT: 20 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 17 improved bounds
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 194.4795 (5.07 seconds)
Cbc0010I After 200 nodes, 58 on tree, 1e+50 best solution, best possible 195.79332 (6.37 seconds)
Optimality Based BT: 7 improved bounds
Cbc0010I After 300 nodes, 79 on tree, 1e+50 best solution, best possible 196.54968 (7.92 seconds)
Optimality Based BT: 13 improved bounds
Cbc0010I After 400 nodes, 100 on tree, 1e+50 best solution, best possible 196.89838 (9.30 seconds)
Cbc0010I After 500 nodes, 99 on tree, 1e+50 best solution, best possible 197.94928 (10.11 seconds)
Cbc0010I After 600 nodes, 95 on tree, 1e+50 best solution, best possible 198.51362 (10.77 seconds)
Cbc0010I After 700 nodes, 93 on tree, 1e+50 best solution, best possible 199.09229 (11.57 seconds)
Cbc0010I After 800 nodes, 92 on tree, 1e+50 best solution, best possible 199.30229 (12.26 seconds)
Cbc0010I After 900 nodes, 92 on tree, 1e+50 best solution, best possible 199.57996 (13.01 seconds)
Cbc0010I After 1000 nodes, 81 on tree, 1e+50 best solution, best possible 199.79166 (13.64 seconds)
Cbc0010I After 1100 nodes, 74 on tree, 1e+50 best solution, best possible 200.04585 (14.24 seconds)
Cbc0010I After 1200 nodes, 65 on tree, 1e+50 best solution, best possible 200.18653 (14.82 seconds)
Cbc0010I After 1300 nodes, 47 on tree, 1e+50 best solution, best possible 200.3996 (15.40 seconds)
Cbc0010I After 1400 nodes, 33 on tree, 1e+50 best solution, best possible 200.61546 (16.00 seconds)
Cbc0010I After 1500 nodes, 24 on tree, 1e+50 best solution, best possible 200.67912 (16.59 seconds)
Cbc0010I After 1600 nodes, 16 on tree, 1e+50 best solution, best possible 200.6928 (17.12 seconds)
Cbc0001I Search completed - best objective 1e+50, took 17193 iterations and 1660 nodes (17.32 seconds)
Cbc0035I Maximum depth 36, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        401
Linearization cuts added in total:            401  (separation time: 0.001059s)
Total solve time:                         17.3235s (17.3235s in branch-and-bound)
Lower bound:                              200.693
Upper bound:                              200.693  (gap: 0.00%)
Branch-and-bound nodes:                      1660
Stats: /tmp/jl_4LCryD/model.nl  230 [var]   10 [int]  240 [con]   89 [aux]    401 [root]      401 [tot] 0.001059 [sep]  17.3235 [time]  17.3238 [bb]         2.006930e+02 [lower]         2.006930e+02 [upper]    1660 [nodes]
Performance of                           FBBT:	   0.759484s,     2608 runs. fix:          0 shrnk:    1.49568 ubd:          0 2ubd:          0 infeas:          1
Performance of                           OBBT:	    1.11821s,       11 runs. fix:   0.628743 shrnk:    35.9088 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-4.txt
f0 = 0.007940169191005575
f0 = 0.023820507573016726
f0 = 0.0529344612733705
f0 = 0.0741082457827187
f0 = 0.07146152271905018
f0 = 0.0696970406766045
f0 = 0.05822790740070756
f0 = 0.0211737845093482
f0 = 0.007057928169782734
f0 = 0.03881860493380503
