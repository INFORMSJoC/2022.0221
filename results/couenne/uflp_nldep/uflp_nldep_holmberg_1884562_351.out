solving instance uflp nldep holmberg 36 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10901.141       83 7.173781
NLP0014I             2         OPT 12051.19       45 3.222884
Loaded instance "/tmp/jl_rLbe6O/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 5100 (-91) rows, 4650 (-299) columns and 18900 (-4919) elements
Clp0006I 0  Obj 0 Primal inf 23479.374 (480)
Clp0006I 177  Obj 4969 Primal inf 387.16357 (201)
Clp0006I 354  Obj 8342.414 Primal inf 1398472.2 (1039)
Clp0006I 399  Obj 9482.6847 Primal inf 317.44726 (1169)
Clp0006I 556  Obj 10895.1
Clp0000I Optimal - objective value 10895.1
Clp0032I Optimal objective 10895.0996 - 556 iterations time 0.072, Presolve 0.02
Clp0000I Optimal - objective value 10895.1
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10895.1
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 7 cuts changed objective from 10895.1 to 10895.128 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (23.99 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 10898.423 (266.45 seconds)
Couenne: new cutoff value 1.0901182485e+04 (288.414 seconds)
Cbc0004I Integer solution of 10901.182 found after 3642 iterations and 166 nodes (270.98 seconds)
Cbc0010I After 200 nodes, 25 on tree, 10901.182 best solution, best possible 10899.294 (274.95 seconds)
Couenne: new cutoff value 1.0901163427e+04 (301.254 seconds)
Couenne: new cutoff value 1.0901163209e+04 (301.388 seconds)
Cbc0004I Integer solution of 10901.163 found after 4730 iterations and 288 nodes (283.95 seconds)
Cbc0010I After 300 nodes, 12 on tree, 10901.163 best solution, best possible 10901.141 (285.00 seconds)
Cbc0010I After 400 nodes, 17 on tree, 10901.163 best solution, best possible 10901.152 (294.09 seconds)
Cbc0010I After 500 nodes, 9 on tree, 10901.163 best solution, best possible 10901.163 (302.66 seconds)
Cbc0001I Search completed - best objective 10901.16320888483, took 6310 iterations and 542 nodes (305.34 seconds)
Cbc0035I Maximum depth 83, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       5191
Linearization cuts added in total:           5191  (separation time: 0.03343s)
Total solve time:                         305.437s (305.437s in branch-and-bound)
Lower bound:                              10901.2
Upper bound:                              10901.2  (gap: 0.00%)
Branch-and-bound nodes:                       542
Stats: /tmp/jl_rLbe6O/model.nl 4590 [var]   30 [int] 4710 [con]  359 [aux]   5191 [root]     5191 [tot] 0.03343 [sep]  305.437 [time]  305.443 [bb]         1.090116e+04 [lower]         1.090116e+04 [upper]     542 [nodes]
Performance of                           FBBT:	    6.60874s,      667 runs. fix:          0 shrnk:   0.777229 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    18.6928s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p36
