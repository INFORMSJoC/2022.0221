solving instance uflp nldep holmberg 31 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 6.8775000000e+04 (6.03383 seconds)
6.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9541.025       64 5.792775
NLP0014I             2         OPT 10523.987       40 2.912705
Loaded instance "/tmp/jl_20D2tJ/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          239 (0 integer)

Coin0506I Presolve 4951 (0) rows, 4651 (-178) columns and 23191 (-178) elements
Clp0006I 0  Obj -42187.5 Primal inf 3764824.4 (180)
Clp0006I 166  Obj 4361.4866 Primal inf 642.78693 (107)
Clp0006I 340  Obj 8057.391 Primal inf 5001.761 (15)
Clp0006I 371  Obj 8298.3622
Clp0000I Optimal - objective value 8298.3622
Clp0000I Optimal - objective value 8298.3622
Clp0032I Optimal objective 8298.362222 - 371 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 8298.3622
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 8298.3622
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 10 added rows had average density of 2
Cbc0013I At root node, 10 cuts changed objective from 8298.3622 to 8300.6082 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 126 row cuts average 2.0 elements, 612 column cuts (612 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (21.16 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 1.0551648761e+04 (62.2994 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 8832.9447 (114.79 seconds)
Couenne: new cutoff value 9.5413253291e+03 (140.816 seconds)
Cbc0010I After 200 nodes, 91 on tree, 1e+50 best solution, best possible 8832.9447 (124.90 seconds)
Couenne: new cutoff value 9.5412893057e+03 (141.042 seconds)
Cbc0010I After 300 nodes, 96 on tree, 1e+50 best solution, best possible 9400.9498 (142.08 seconds)
Cbc0010I After 400 nodes, 118 on tree, 1e+50 best solution, best possible 9421.1758 (153.59 seconds)
Cbc0010I After 500 nodes, 138 on tree, 1e+50 best solution, best possible 9462.8173 (166.05 seconds)
Cbc0010I After 600 nodes, 158 on tree, 1e+50 best solution, best possible 9474.5628 (178.66 seconds)
Couenne: new cutoff value 9.5411418179e+03 (202.617 seconds)
Cbc0010I After 700 nodes, 185 on tree, 1e+50 best solution, best possible 9477.8845 (188.36 seconds)
Cbc0010I After 800 nodes, 202 on tree, 1e+50 best solution, best possible 9485.0968 (200.30 seconds)
Cbc0010I After 900 nodes, 221 on tree, 1e+50 best solution, best possible 9491.6013 (211.30 seconds)
Couenne: new cutoff value 9.5410000394e+03 (233.694 seconds)
Couenne: new cutoff value 9.5409618275e+03 (233.812 seconds)
Cbc0010I After 1000 nodes, 257 on tree, 1e+50 best solution, best possible 9491.7723 (220.09 seconds)
Cbc0010I After 1100 nodes, 276 on tree, 1e+50 best solution, best possible 9492.5666 (231.31 seconds)
Cbc0010I After 1200 nodes, 290 on tree, 1e+50 best solution, best possible 9494.7386 (242.65 seconds)
Cbc0010I After 1300 nodes, 296 on tree, 1e+50 best solution, best possible 9505.2965 (253.88 seconds)
Cbc0010I After 1400 nodes, 280 on tree, 1e+50 best solution, best possible 9513.7419 (264.01 seconds)
Cbc0010I After 1500 nodes, 271 on tree, 1e+50 best solution, best possible 9523.1793 (273.61 seconds)
Cbc0010I After 1600 nodes, 272 on tree, 1e+50 best solution, best possible 9525.4159 (284.38 seconds)
Cbc0010I After 1700 nodes, 270 on tree, 1e+50 best solution, best possible 9526.3951 (293.50 seconds)
Cbc0010I After 1800 nodes, 267 on tree, 1e+50 best solution, best possible 9528.1136 (302.59 seconds)
Cbc0010I After 1900 nodes, 252 on tree, 1e+50 best solution, best possible 9531.1959 (310.89 seconds)
Cbc0010I After 2000 nodes, 236 on tree, 1e+50 best solution, best possible 9535.2699 (319.56 seconds)
Cbc0010I After 2100 nodes, 244 on tree, 1e+50 best solution, best possible 9537.0098 (330.68 seconds)
Cbc0010I After 2200 nodes, 256 on tree, 1e+50 best solution, best possible 9537.2737 (341.58 seconds)
Cbc0010I After 2300 nodes, 268 on tree, 1e+50 best solution, best possible 9537.7123 (352.52 seconds)
Cbc0010I After 2400 nodes, 270 on tree, 1e+50 best solution, best possible 9538.4384 (362.66 seconds)
Cbc0010I After 2500 nodes, 280 on tree, 1e+50 best solution, best possible 9538.6752 (373.45 seconds)
Cbc0010I After 2600 nodes, 275 on tree, 1e+50 best solution, best possible 9538.9785 (382.63 seconds)
Cbc0010I After 2700 nodes, 272 on tree, 1e+50 best solution, best possible 9539.374 (392.29 seconds)
Cbc0010I After 2800 nodes, 266 on tree, 1e+50 best solution, best possible 9539.5724 (401.19 seconds)
Cbc0010I After 2900 nodes, 257 on tree, 1e+50 best solution, best possible 9539.8258 (410.32 seconds)
Cbc0010I After 3000 nodes, 241 on tree, 1e+50 best solution, best possible 9540.125 (418.85 seconds)
Cbc0010I After 3100 nodes, 229 on tree, 1e+50 best solution, best possible 9540.3601 (426.92 seconds)
Cbc0010I After 3200 nodes, 219 on tree, 1e+50 best solution, best possible 9540.4943 (435.83 seconds)
Cbc0010I After 3300 nodes, 206 on tree, 1e+50 best solution, best possible 9540.6692 (444.10 seconds)
Cbc0010I After 3400 nodes, 190 on tree, 1e+50 best solution, best possible 9540.7762 (451.80 seconds)
Cbc0010I After 3500 nodes, 173 on tree, 1e+50 best solution, best possible 9540.8635 (460.43 seconds)
Cbc0010I After 3600 nodes, 154 on tree, 1e+50 best solution, best possible 9540.9233 (469.53 seconds)
Cbc0010I After 3700 nodes, 111 on tree, 1e+50 best solution, best possible 9540.9764 (474.44 seconds)
Cbc0010I After 3800 nodes, 61 on tree, 1e+50 best solution, best possible 9541.2802 (476.59 seconds)
Cbc0010I After 3900 nodes, 11 on tree, 1e+50 best solution, best possible 9548.6525 (478.46 seconds)
Cbc0001I Search completed - best objective 1e+50, took 82067 iterations and 3922 nodes (479.22 seconds)
Cbc0035I Maximum depth 102, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4951
Linearization cuts added in total:           4951  (separation time: 0.031943s)
Total solve time:                         479.282s (479.282s in branch-and-bound)
Lower bound:                              9540.96
Upper bound:                              9540.96  (gap: 0.00%)
Branch-and-bound nodes:                      3922
Stats: /tmp/jl_20D2tJ/model.nl 4590 [var]   30 [int] 4710 [con]  239 [aux]   4951 [root]     4951 [tot] 0.031943 [sep]  479.282 [time]  479.288 [bb]         9.540962e+03 [lower]         9.540962e+03 [upper]    3922 [nodes]
Performance of                           FBBT:	    39.4924s,     4700 runs. fix:          0 shrnk:    3.03782 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    12.5589s,        7 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p31
