solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-4.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 348.15081       58 1.969838
NLP0014I             2         OPT 353.58203       54 1.258695
Couenne: new cutoff value 3.5358215573e+02 (4.41254 seconds)
Loaded instance "/tmp/jl_Tbzpii/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          299 (0 integer)

Coin0506I Presolve 2159 (-122) rows, 1949 (-240) columns and 9657 (-362) elements
Clp0006I 0  Obj -121.0705 Primal inf 3289.8717 (149)
Clp0006I 118  Obj 27.416365 Primal inf 241.84102 (92)
Clp0006I 236  Obj 277.10064 Primal inf 3.3273305 (8)
Clp0006I 242  Obj 277.7454
Clp0000I Optimal - objective value 277.7454
Clp0032I Optimal objective 277.7454027 - 242 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 277.7454
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 277.7454
Optimality Based BT: 65 improved bounds
Probing: 30 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 277.7454 to 333.45817 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 44 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (6.21 seconds)
Optimality Based BT: 54 improved bounds
Optimality Based BT: 56 improved bounds
Optimality Based BT: 51 improved bounds
Optimality Based BT: 54 improved bounds
Cbc0010I After 100 nodes, 43 on tree, 1e+50 best solution, best possible 343.64733 (54.67 seconds)
Cbc0010I After 200 nodes, 91 on tree, 1e+50 best solution, best possible 343.64733 (58.16 seconds)
Cbc0010I After 300 nodes, 139 on tree, 1e+50 best solution, best possible 343.64733 (61.30 seconds)
Couenne: new cutoff value 3.4843715556e+02 (68.2102 seconds)
Cbc0004I Integer solution of 348.43716 found after 1795 iterations and 374 nodes (63.74 seconds)
Optimality Based BT: 62 improved bounds
Optimality Based BT: 74 improved bounds
Cbc0010I After 400 nodes, 73 on tree, 348.43716 best solution, best possible 343.70198 (75.41 seconds)
Optimality Based BT: 63 improved bounds
Optimality Based BT: 67 improved bounds
Cbc0010I After 500 nodes, 104 on tree, 348.43716 best solution, best possible 345.29723 (108.50 seconds)
Cbc0010I After 600 nodes, 130 on tree, 348.43716 best solution, best possible 345.56048 (113.34 seconds)
Cbc0010I After 700 nodes, 152 on tree, 348.43716 best solution, best possible 345.90197 (119.68 seconds)
Cbc0010I After 800 nodes, 170 on tree, 348.43716 best solution, best possible 345.96504 (125.21 seconds)
Cbc0010I After 900 nodes, 193 on tree, 348.43716 best solution, best possible 346.00446 (129.94 seconds)
Cbc0010I After 1000 nodes, 212 on tree, 348.43716 best solution, best possible 346.0565 (134.81 seconds)
Cbc0010I After 1100 nodes, 228 on tree, 348.43716 best solution, best possible 346.204 (139.52 seconds)
Cbc0010I After 1200 nodes, 251 on tree, 348.43716 best solution, best possible 346.28926 (144.54 seconds)
Cbc0010I After 1300 nodes, 276 on tree, 348.43716 best solution, best possible 346.32507 (149.51 seconds)
Optimality Based BT: 60 improved bounds
Cbc0010I After 1400 nodes, 296 on tree, 348.43716 best solution, best possible 346.37983 (158.43 seconds)
Cbc0010I After 1500 nodes, 315 on tree, 348.43716 best solution, best possible 346.43154 (163.26 seconds)
Optimality Based BT: 71 improved bounds
Optimality Based BT: 72 improved bounds
Cbc0010I After 1600 nodes, 341 on tree, 348.43716 best solution, best possible 346.4951 (190.57 seconds)
Cbc0010I After 1700 nodes, 363 on tree, 348.43716 best solution, best possible 346.56089 (195.35 seconds)
Cbc0010I After 1800 nodes, 376 on tree, 348.43716 best solution, best possible 346.5993 (199.78 seconds)
Cbc0010I After 1900 nodes, 395 on tree, 348.43716 best solution, best possible 346.63125 (204.72 seconds)
Cbc0010I After 2000 nodes, 409 on tree, 348.43716 best solution, best possible 346.64114 (209.19 seconds)
Cbc0010I After 2100 nodes, 433 on tree, 348.43716 best solution, best possible 346.66261 (213.88 seconds)
Cbc0010I After 2200 nodes, 445 on tree, 348.43716 best solution, best possible 346.7097 (218.57 seconds)
Cbc0010I After 2300 nodes, 454 on tree, 348.43716 best solution, best possible 346.73705 (223.24 seconds)
Cbc0010I After 2400 nodes, 469 on tree, 348.43716 best solution, best possible 346.7637 (227.86 seconds)
Cbc0010I After 2500 nodes, 485 on tree, 348.43716 best solution, best possible 346.78944 (232.57 seconds)
Cbc0010I After 2600 nodes, 506 on tree, 348.43716 best solution, best possible 346.80133 (237.15 seconds)
Cbc0010I After 2700 nodes, 523 on tree, 348.43716 best solution, best possible 346.81991 (243.52 seconds)
Cbc0010I After 2800 nodes, 535 on tree, 348.43716 best solution, best possible 346.86396 (247.71 seconds)
Cbc0010I After 2900 nodes, 550 on tree, 348.43716 best solution, best possible 346.90397 (252.37 seconds)
Cbc0010I After 3000 nodes, 567 on tree, 348.43716 best solution, best possible 346.91818 (258.42 seconds)
Cbc0010I After 3100 nodes, 578 on tree, 348.43716 best solution, best possible 346.94895 (262.83 seconds)
Cbc0010I After 3200 nodes, 600 on tree, 348.43716 best solution, best possible 346.96109 (267.43 seconds)
Cbc0010I After 3300 nodes, 610 on tree, 348.43716 best solution, best possible 346.97794 (271.70 seconds)
Cbc0010I After 3400 nodes, 631 on tree, 348.43716 best solution, best possible 347.0032 (278.17 seconds)
Cbc0010I After 3500 nodes, 643 on tree, 348.43716 best solution, best possible 347.01683 (282.58 seconds)
Cbc0010I After 3600 nodes, 660 on tree, 348.43716 best solution, best possible 347.05013 (287.28 seconds)
Cbc0010I After 3700 nodes, 669 on tree, 348.43716 best solution, best possible 347.06736 (291.66 seconds)
Cbc0010I After 3800 nodes, 683 on tree, 348.43716 best solution, best possible 347.09607 (296.37 seconds)
Cbc0010I After 3900 nodes, 698 on tree, 348.43716 best solution, best possible 347.11265 (300.98 seconds)
Cbc0010I After 4000 nodes, 719 on tree, 348.43716 best solution, best possible 347.12515 (305.88 seconds)
Cbc0010I After 4100 nodes, 727 on tree, 348.43716 best solution, best possible 347.14617 (310.36 seconds)
Cbc0010I After 4200 nodes, 742 on tree, 348.43716 best solution, best possible 347.17317 (315.14 seconds)
Cbc0010I After 4300 nodes, 755 on tree, 348.43716 best solution, best possible 347.18184 (319.69 seconds)
Cbc0010I After 4400 nodes, 764 on tree, 348.43716 best solution, best possible 347.18928 (324.23 seconds)
Cbc0010I After 4500 nodes, 777 on tree, 348.43716 best solution, best possible 347.21014 (328.92 seconds)
Cbc0010I After 4600 nodes, 779 on tree, 348.43716 best solution, best possible 347.22112 (333.35 seconds)
Cbc0010I After 4700 nodes, 791 on tree, 348.43716 best solution, best possible 347.25695 (338.20 seconds)
Cbc0010I After 4800 nodes, 796 on tree, 348.43716 best solution, best possible 347.27269 (342.76 seconds)
Cbc0010I After 4900 nodes, 801 on tree, 348.43716 best solution, best possible 347.28227 (347.60 seconds)
Cbc0010I After 5000 nodes, 810 on tree, 348.43716 best solution, best possible 347.28815 (352.14 seconds)
Cbc0010I After 5100 nodes, 824 on tree, 348.43716 best solution, best possible 347.30527 (356.67 seconds)
Cbc0010I After 5200 nodes, 829 on tree, 348.43716 best solution, best possible 347.31532 (361.39 seconds)
Cbc0010I After 5300 nodes, 835 on tree, 348.43716 best solution, best possible 347.3327 (366.68 seconds)
Cbc0010I After 5400 nodes, 846 on tree, 348.43716 best solution, best possible 347.34516 (371.42 seconds)
Cbc0010I After 5500 nodes, 853 on tree, 348.43716 best solution, best possible 347.35561 (376.18 seconds)
Cbc0010I After 5600 nodes, 859 on tree, 348.43716 best solution, best possible 347.36991 (381.96 seconds)
Cbc0010I After 5700 nodes, 862 on tree, 348.43716 best solution, best possible 347.38402 (387.63 seconds)
Cbc0010I After 5800 nodes, 881 on tree, 348.43716 best solution, best possible 347.39719 (392.75 seconds)
Cbc0010I After 5900 nodes, 889 on tree, 348.43716 best solution, best possible 347.40908 (398.25 seconds)
Cbc0010I After 6000 nodes, 893 on tree, 348.43716 best solution, best possible 347.42507 (402.64 seconds)
Cbc0010I After 6100 nodes, 900 on tree, 348.43716 best solution, best possible 347.43667 (407.13 seconds)
Cbc0010I After 6200 nodes, 909 on tree, 348.43716 best solution, best possible 347.44851 (412.68 seconds)
Cbc0010I After 6300 nodes, 926 on tree, 348.43716 best solution, best possible 347.45269 (417.14 seconds)
Cbc0010I After 6400 nodes, 938 on tree, 348.43716 best solution, best possible 347.46756 (421.91 seconds)
Cbc0010I After 6500 nodes, 943 on tree, 348.43716 best solution, best possible 347.47588 (426.34 seconds)
Cbc0010I After 6600 nodes, 952 on tree, 348.43716 best solution, best possible 347.48715 (432.33 seconds)
Cbc0010I After 6700 nodes, 964 on tree, 348.43716 best solution, best possible 347.49801 (437.06 seconds)
Cbc0010I After 6800 nodes, 972 on tree, 348.43716 best solution, best possible 347.50928 (442.27 seconds)
Cbc0010I After 6900 nodes, 975 on tree, 348.43716 best solution, best possible 347.52407 (446.75 seconds)
Cbc0010I After 7000 nodes, 979 on tree, 348.43716 best solution, best possible 347.53932 (451.43 seconds)
Cbc0010I After 7100 nodes, 979 on tree, 348.43716 best solution, best possible 347.54849 (456.10 seconds)
Cbc0010I After 7200 nodes, 988 on tree, 348.43716 best solution, best possible 347.56102 (462.06 seconds)
Cbc0010I After 7300 nodes, 987 on tree, 348.43716 best solution, best possible 347.57293 (466.85 seconds)
Cbc0010I After 7400 nodes, 986 on tree, 348.43716 best solution, best possible 347.59059 (471.29 seconds)
Cbc0010I After 7500 nodes, 984 on tree, 348.43716 best solution, best possible 347.60531 (475.91 seconds)
Cbc0010I After 7600 nodes, 983 on tree, 348.43716 best solution, best possible 347.61676 (480.26 seconds)
Cbc0010I After 7700 nodes, 984 on tree, 348.43716 best solution, best possible 347.62647 (484.91 seconds)
Cbc0010I After 7800 nodes, 973 on tree, 348.43716 best solution, best possible 347.64333 (489.59 seconds)
Cbc0010I After 7900 nodes, 966 on tree, 348.43716 best solution, best possible 347.66141 (493.73 seconds)
Cbc0010I After 8000 nodes, 962 on tree, 348.43716 best solution, best possible 347.66835 (498.29 seconds)
Cbc0010I After 8100 nodes, 959 on tree, 348.43716 best solution, best possible 347.68032 (503.06 seconds)
Cbc0010I After 8200 nodes, 944 on tree, 348.43716 best solution, best possible 347.69315 (507.47 seconds)
Cbc0010I After 8300 nodes, 939 on tree, 348.43716 best solution, best possible 347.70088 (512.10 seconds)
Cbc0010I After 8400 nodes, 936 on tree, 348.43716 best solution, best possible 347.71382 (518.53 seconds)
Cbc0010I After 8500 nodes, 929 on tree, 348.43716 best solution, best possible 347.7293 (523.84 seconds)
Cbc0010I After 8600 nodes, 918 on tree, 348.43716 best solution, best possible 347.73906 (528.34 seconds)
Cbc0010I After 8700 nodes, 905 on tree, 348.43716 best solution, best possible 347.75218 (532.56 seconds)
Cbc0010I After 8800 nodes, 895 on tree, 348.43716 best solution, best possible 347.76761 (537.00 seconds)
Cbc0010I After 8900 nodes, 883 on tree, 348.43716 best solution, best possible 347.77858 (541.68 seconds)
Cbc0010I After 9000 nodes, 875 on tree, 348.43716 best solution, best possible 347.79216 (546.28 seconds)
Cbc0010I After 9100 nodes, 859 on tree, 348.43716 best solution, best possible 347.80621 (550.92 seconds)
Cbc0010I After 9200 nodes, 845 on tree, 348.43716 best solution, best possible 347.81595 (565.61 seconds)
Cbc0010I After 9300 nodes, 827 on tree, 348.43716 best solution, best possible 347.82628 (569.88 seconds)
Cbc0010I After 9400 nodes, 808 on tree, 348.43716 best solution, best possible 347.83904 (574.97 seconds)
Cbc0010I After 9500 nodes, 791 on tree, 348.43716 best solution, best possible 347.85147 (579.68 seconds)
Cbc0010I After 9600 nodes, 771 on tree, 348.43716 best solution, best possible 347.86149 (585.23 seconds)
Cbc0010I After 9700 nodes, 754 on tree, 348.43716 best solution, best possible 347.8785 (589.78 seconds)
Cbc0010I After 9800 nodes, 734 on tree, 348.43716 best solution, best possible 347.8931 (594.10 seconds)
Cbc0010I After 9900 nodes, 708 on tree, 348.43716 best solution, best possible 347.91286 (598.59 seconds)
Cbc0010I After 10000 nodes, 682 on tree, 348.43716 best solution, best possible 347.93499 (604.72 seconds)
Cbc0010I After 10100 nodes, 654 on tree, 348.43716 best solution, best possible 347.95246 (608.86 seconds)
Cbc0010I After 10200 nodes, 624 on tree, 348.43716 best solution, best possible 347.97764 (613.17 seconds)
Cbc0010I After 10300 nodes, 606 on tree, 348.43716 best solution, best possible 347.99214 (617.52 seconds)
Cbc0010I After 10400 nodes, 570 on tree, 348.43716 best solution, best possible 348.01017 (621.49 seconds)
Cbc0010I After 10500 nodes, 532 on tree, 348.43716 best solution, best possible 348.04189 (625.55 seconds)
Cbc0010I After 10600 nodes, 497 on tree, 348.43716 best solution, best possible 348.07037 (629.58 seconds)
Cbc0010I After 10700 nodes, 476 on tree, 348.43716 best solution, best possible 348.09372 (634.15 seconds)
Cbc0010I After 10800 nodes, 462 on tree, 348.43716 best solution, best possible 348.11431 (638.20 seconds)
Cbc0010I After 10900 nodes, 454 on tree, 348.43716 best solution, best possible 348.13244 (642.17 seconds)
Optimality Based BT: 69 improved bounds
Cbc0010I After 11000 nodes, 445 on tree, 348.43716 best solution, best possible 348.14192 (647.75 seconds)
Cbc0010I After 11100 nodes, 416 on tree, 348.43716 best solution, best possible 348.16637 (651.47 seconds)
Cbc0010I After 11200 nodes, 388 on tree, 348.43716 best solution, best possible 348.19036 (655.38 seconds)
Cbc0010I After 11300 nodes, 364 on tree, 348.43716 best solution, best possible 348.21048 (659.04 seconds)
Cbc0010I After 11400 nodes, 384 on tree, 348.43716 best solution, best possible 348.21539 (664.68 seconds)
Couenne: new cutoff value 3.4843096103e+02 (670.404 seconds)
Cbc0010I After 11500 nodes, 383 on tree, 348.43716 best solution, best possible 348.22867 (668.32 seconds)
Cbc0010I After 11600 nodes, 403 on tree, 348.43716 best solution, best possible 348.23727 (672.43 seconds)
Couenne: new cutoff value 3.4842762541e+02 (678.335 seconds)
Couenne: new cutoff value 3.4842758342e+02 (678.926 seconds)
Cbc0004I Integer solution of 348.42759 found after 133293 iterations and 11656 nodes (674.46 seconds)
Cbc0010I After 11700 nodes, 316 on tree, 348.42759 best solution, best possible 348.24571 (676.38 seconds)
Cbc0010I After 11800 nodes, 300 on tree, 348.42759 best solution, best possible 348.26126 (680.42 seconds)
Cbc0010I After 11900 nodes, 277 on tree, 348.42759 best solution, best possible 348.28186 (684.06 seconds)
Cbc0010I After 12000 nodes, 252 on tree, 348.42759 best solution, best possible 348.30223 (687.73 seconds)
Cbc0010I After 12100 nodes, 242 on tree, 348.42759 best solution, best possible 348.31303 (691.78 seconds)
Cbc0010I After 12200 nodes, 213 on tree, 348.42759 best solution, best possible 348.32867 (695.81 seconds)
Cbc0010I After 12300 nodes, 176 on tree, 348.42759 best solution, best possible 348.3519 (699.31 seconds)
Cbc0010I After 12400 nodes, 144 on tree, 348.42759 best solution, best possible 348.37205 (702.87 seconds)
Cbc0010I After 12500 nodes, 115 on tree, 348.42759 best solution, best possible 348.38983 (706.29 seconds)
Couenne: new cutoff value 3.4842756616e+02 (712.515 seconds)
Cbc0004I Integer solution of 348.42758 found after 144258 iterations and 12548 nodes (708.05 seconds)
Cbc0010I After 12600 nodes, 101 on tree, 348.42758 best solution, best possible 348.40375 (709.73 seconds)
Cbc0010I After 12700 nodes, 61 on tree, 348.42758 best solution, best possible 348.41918 (713.12 seconds)
Couenne: new cutoff value 3.4842752968e+02 (720.58 seconds)
Couenne: new cutoff value 3.4842751212e+02 (721.071 seconds)
Cbc0004I Integer solution of 348.42752 found after 146529 iterations and 12800 nodes (716.60 seconds)
Cbc0010I After 12800 nodes, 47 on tree, 348.42752 best solution, best possible 348.42249 (716.63 seconds)
Couenne: new cutoff value 3.4842708928e+02 (723.955 seconds)
Cbc0010I After 12900 nodes, 76 on tree, 348.42752 best solution, best possible 348.42377 (720.53 seconds)
Couenne: new cutoff value 3.4842708167e+02 (726.561 seconds)
Cbc0004I Integer solution of 348.42708 found after 147311 iterations and 12940 nodes (722.08 seconds)
Cbc0010I After 13000 nodes, 31 on tree, 348.42708 best solution, best possible 348.42628 (724.35 seconds)
Cbc0010I After 13100 nodes, 23 on tree, 348.42708 best solution, best possible 348.42693 (727.67 seconds)
Cbc0010I After 13200 nodes, 20 on tree, 348.42708 best solution, best possible 348.42705 (731.09 seconds)
Cbc0010I After 13300 nodes, 23 on tree, 348.42708 best solution, best possible 348.42707 (734.22 seconds)
Cbc0010I After 13400 nodes, 27 on tree, 348.42708 best solution, best possible 348.42707 (737.13 seconds)
Couenne: new cutoff value 3.4842707758e+02 (743.356 seconds)
Cbc0010I After 13500 nodes, 11 on tree, 348.42708 best solution, best possible 348.42707 (739.56 seconds)
Cbc0001I Search completed - best objective 348.4270848891286, took 148913 iterations and 13528 nodes (740.17 seconds)
Cbc0035I Maximum depth 187, 6014 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2281
Linearization cuts added in total:           2281  (separation time: 0.016922s)
Total solve time:                         740.206s (740.206s in branch-and-bound)
Lower bound:                              348.427
Upper bound:                              348.427  (gap: 0.00%)
Branch-and-bound nodes:                     13528
Stats: /tmp/jl_Tbzpii/model.nl 1890 [var]   30 [int] 1920 [con]  299 [aux]   2281 [root]     2281 [tot] 0.016922 [sep]  740.206 [time]   740.21 [bb]         3.484271e+02 [lower]         3.484271e+02 [upper]   13528 [nodes]
Performance of                           FBBT:	    50.9467s,    15863 runs. fix: 0.00546398 shrnk:    1.79465 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    22.8934s,       13 runs. fix:    6.64899 shrnk:    183.444 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-4.txt
