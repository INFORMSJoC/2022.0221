solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-2.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.6468635940e+03 (0.914876 seconds)
0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 411.43673       42 1.241997
NLP0014I             2         OPT 429.18678       27 0.745173
Couenne: new cutoff value 4.2918702975e+02 (3.0555 seconds)
Loaded instance "/tmp/jl_nhc3Oe/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 2160 (-1) rows, 1950 (-89) columns and 9689 (-90) elements
Clp0006I 0  Obj -3555 Primal inf 4191338.9 (90)
Clp0006I 118  Obj -2082.0268 Primal inf 2927985.7 (142)
Clp0006I 236  Obj 11.256529 Primal inf 10576.901 (64)
Clp0006I 354  Obj 270.23939 Primal inf 14461.544 (44)
Clp0006I 412  Obj 332.4652
Clp0000I Optimal - objective value 332.4652
Clp0000I Optimal - objective value 332.4652
Clp0032I Optimal objective 332.4652034 - 412 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 332.4652
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 332.4652
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 16 added rows had average density of 2
Cbc0013I At root node, 16 cuts changed objective from 332.4652 to 332.61038 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 168 row cuts average 2.0 elements, 454 column cuts (454 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (4.10 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 25 on tree, 1e+50 best solution, best possible 333.5943 (27.60 seconds)
Cbc0010I After 200 nodes, 75 on tree, 1e+50 best solution, best possible 333.5943 (32.36 seconds)
Cbc0010I After 300 nodes, 125 on tree, 1e+50 best solution, best possible 333.5943 (36.27 seconds)
Couenne: new cutoff value 4.1670689814e+02 (40.0461 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 400 nodes, 146 on tree, 1e+50 best solution, best possible 350.50593 (70.84 seconds)
Cbc0010I After 500 nodes, 191 on tree, 1e+50 best solution, best possible 350.50593 (75.52 seconds)
Cbc0010I After 600 nodes, 241 on tree, 1e+50 best solution, best possible 350.50593 (79.87 seconds)
Couenne: new cutoff value 4.1143701218e+02 (84.3958 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 261 on tree, 1e+50 best solution, best possible 397.38196 (94.69 seconds)
Cbc0010I After 800 nodes, 273 on tree, 1e+50 best solution, best possible 403.72276 (98.70 seconds)
Cbc0010I After 900 nodes, 278 on tree, 1e+50 best solution, best possible 405.71402 (102.77 seconds)
Cbc0010I After 1000 nodes, 284 on tree, 1e+50 best solution, best possible 407.16874 (106.67 seconds)
Cbc0010I After 1100 nodes, 297 on tree, 1e+50 best solution, best possible 407.39774 (110.93 seconds)
Cbc0010I After 1200 nodes, 312 on tree, 1e+50 best solution, best possible 407.72552 (115.20 seconds)
Cbc0010I After 1300 nodes, 307 on tree, 1e+50 best solution, best possible 409.02849 (119.09 seconds)
Cbc0010I After 1400 nodes, 302 on tree, 1e+50 best solution, best possible 409.67144 (123.02 seconds)
Cbc0010I After 1500 nodes, 296 on tree, 1e+50 best solution, best possible 410.0485 (126.75 seconds)
Cbc0010I After 1600 nodes, 282 on tree, 1e+50 best solution, best possible 410.51092 (130.26 seconds)
Cbc0010I After 1700 nodes, 266 on tree, 1e+50 best solution, best possible 410.8706 (133.76 seconds)
Cbc0010I After 1800 nodes, 249 on tree, 1e+50 best solution, best possible 411.22135 (137.20 seconds)
Cbc0010I After 1900 nodes, 205 on tree, 1e+50 best solution, best possible 411.44833 (139.36 seconds)
Cbc0010I After 2000 nodes, 155 on tree, 1e+50 best solution, best possible 411.73899 (141.04 seconds)
Cbc0010I After 2100 nodes, 105 on tree, 1e+50 best solution, best possible 416.70704 (142.11 seconds)
Cbc0010I After 2200 nodes, 55 on tree, 1e+50 best solution, best possible 416.80021 (143.60 seconds)
Cbc0010I After 2300 nodes, 5 on tree, 1e+50 best solution, best possible 421.58843 (145.13 seconds)
Cbc0001I Search completed - best objective 1e+50, took 120572 iterations and 2310 nodes (145.23 seconds)
Cbc0035I Maximum depth 161, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2161
Linearization cuts added in total:           2161  (separation time: 0.011872s)
Total solve time:                         145.257s (145.257s in branch-and-bound)
Lower bound:                              411.437
Upper bound:                              411.437  (gap: 0.00%)
Branch-and-bound nodes:                      2310
Stats: /tmp/jl_nhc3Oe/model.nl 1890 [var]   30 [int] 1920 [con]  149 [aux]   2161 [root]     2161 [tot] 0.011872 [sep]  145.257 [time]   145.26 [bb]         4.114370e+02 [lower]         4.114370e+02 [upper]    2310 [nodes]
Performance of                           FBBT:	    6.35223s,     2554 runs. fix:          0 shrnk:    6.57944 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.09729s,        8 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-2.txt
