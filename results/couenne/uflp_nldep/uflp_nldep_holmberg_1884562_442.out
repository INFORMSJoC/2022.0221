solving instance uflp nldep holmberg 45 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.2921000000e+04 (0.72959 seconds)
0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3884.1119       40 0.927664
NLP0014I             2         OPT 3971.6402       26 0.453059
Couenne: new cutoff value 3.9716408803e+03 (2.24996 seconds)
Loaded instance "/tmp/jl_AY7AEj/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1880 (-1) rows, 1700 (-99) columns and 8459 (-100) elements
Clp0006I 0  Obj -22224.375 Primal inf 794866.16 (100)
Clp0006I 112  Obj -2726.4943 Primal inf 574441.75 (114)
Clp0006I 224  Obj 1108.0474 Primal inf 6837.6911 (81)
Clp0006I 336  Obj 2878.0141 Primal inf 633.00401 (4)
Clp0006I 341  Obj 2887.3491
Clp0000I Optimal - objective value 2887.3491
Clp0032I Optimal objective 2887.349146 - 341 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 2887.3491
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 2887.3491
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 21 added rows had average density of 2
Cbc0013I At root node, 21 cuts changed objective from 2887.3491 to 2899.3936 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 117 row cuts average 2.0 elements, 200 column cuts (200 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3.55 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 19 on tree, 1e+50 best solution, best possible 2906.7637 (25.37 seconds)
Cbc0010I After 200 nodes, 62 on tree, 1e+50 best solution, best possible 2906.7637 (29.25 seconds)
Cbc0010I After 300 nodes, 112 on tree, 1e+50 best solution, best possible 2906.7637 (32.44 seconds)
Couenne: new cutoff value 3.9277243965e+03 (35.087 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 400 nodes, 131 on tree, 1e+50 best solution, best possible 3362.2074 (48.42 seconds)
Cbc0010I After 500 nodes, 171 on tree, 1e+50 best solution, best possible 3362.2074 (52.44 seconds)
Cbc0010I After 600 nodes, 221 on tree, 1e+50 best solution, best possible 3362.2074 (55.80 seconds)
Couenne: new cutoff value 3.8841136232e+03 (58.4796 seconds)
Cbc0010I After 700 nodes, 239 on tree, 1e+50 best solution, best possible 3429.9244 (59.26 seconds)
Cbc0010I After 800 nodes, 252 on tree, 1e+50 best solution, best possible 3430.2658 (62.55 seconds)
Cbc0010I After 900 nodes, 270 on tree, 1e+50 best solution, best possible 3462.5739 (65.95 seconds)
Cbc0010I After 1000 nodes, 287 on tree, 1e+50 best solution, best possible 3513.7381 (69.28 seconds)
Cbc0010I After 1100 nodes, 302 on tree, 1e+50 best solution, best possible 3527.8326 (72.55 seconds)
Cbc0010I After 1200 nodes, 315 on tree, 1e+50 best solution, best possible 3531.5782 (75.82 seconds)
Cbc0010I After 1300 nodes, 329 on tree, 1e+50 best solution, best possible 3533.3694 (79.14 seconds)
Cbc0010I After 1400 nodes, 338 on tree, 1e+50 best solution, best possible 3545.4539 (82.28 seconds)
Cbc0010I After 1500 nodes, 348 on tree, 1e+50 best solution, best possible 3549.169 (85.42 seconds)
Cbc0010I After 1600 nodes, 359 on tree, 1e+50 best solution, best possible 3554.3226 (88.57 seconds)
Cbc0010I After 1700 nodes, 367 on tree, 1e+50 best solution, best possible 3557.7338 (91.70 seconds)
Cbc0010I After 1800 nodes, 378 on tree, 1e+50 best solution, best possible 3567.507 (94.83 seconds)
Cbc0010I After 1900 nodes, 390 on tree, 1e+50 best solution, best possible 3570.1342 (97.96 seconds)
Cbc0010I After 2000 nodes, 403 on tree, 1e+50 best solution, best possible 3590.1503 (100.98 seconds)
Cbc0010I After 2100 nodes, 411 on tree, 1e+50 best solution, best possible 3603.0234 (103.98 seconds)
Cbc0010I After 2200 nodes, 420 on tree, 1e+50 best solution, best possible 3603.7166 (107.08 seconds)
Cbc0010I After 2300 nodes, 435 on tree, 1e+50 best solution, best possible 3609.564 (110.19 seconds)
Cbc0010I After 2400 nodes, 439 on tree, 1e+50 best solution, best possible 3617.5255 (113.02 seconds)
Cbc0010I After 2500 nodes, 451 on tree, 1e+50 best solution, best possible 3619.8249 (116.10 seconds)
Cbc0010I After 2600 nodes, 464 on tree, 1e+50 best solution, best possible 3624.66 (119.14 seconds)
Cbc0010I After 2700 nodes, 469 on tree, 1e+50 best solution, best possible 3641.0948 (121.96 seconds)
Cbc0010I After 2800 nodes, 482 on tree, 1e+50 best solution, best possible 3646.5443 (125.02 seconds)
Cbc0010I After 2900 nodes, 491 on tree, 1e+50 best solution, best possible 3658.5357 (127.97 seconds)
Cbc0010I After 3000 nodes, 497 on tree, 1e+50 best solution, best possible 3667.0624 (131.08 seconds)
Cbc0010I After 3100 nodes, 500 on tree, 1e+50 best solution, best possible 3673.0693 (134.05 seconds)
Cbc0010I After 3200 nodes, 503 on tree, 1e+50 best solution, best possible 3679.9212 (137.07 seconds)
Cbc0010I After 3300 nodes, 499 on tree, 1e+50 best solution, best possible 3703.5093 (139.98 seconds)
Cbc0010I After 3400 nodes, 515 on tree, 1e+50 best solution, best possible 3713.1391 (143.37 seconds)
Cbc0010I After 3500 nodes, 527 on tree, 1e+50 best solution, best possible 3719.3609 (146.77 seconds)
Cbc0010I After 3600 nodes, 544 on tree, 1e+50 best solution, best possible 3728.2616 (150.25 seconds)
Cbc0010I After 3700 nodes, 550 on tree, 1e+50 best solution, best possible 3734.665 (153.46 seconds)
Cbc0010I After 3800 nodes, 563 on tree, 1e+50 best solution, best possible 3739.3577 (156.79 seconds)
Cbc0010I After 3900 nodes, 581 on tree, 1e+50 best solution, best possible 3747.1092 (160.30 seconds)
Cbc0010I After 4000 nodes, 596 on tree, 1e+50 best solution, best possible 3750.2133 (163.83 seconds)
Cbc0010I After 4100 nodes, 608 on tree, 1e+50 best solution, best possible 3752.6018 (167.29 seconds)
Cbc0010I After 4200 nodes, 622 on tree, 1e+50 best solution, best possible 3754.3078 (170.71 seconds)
Cbc0010I After 4300 nodes, 639 on tree, 1e+50 best solution, best possible 3755.0944 (174.15 seconds)
Cbc0010I After 4400 nodes, 654 on tree, 1e+50 best solution, best possible 3758.1676 (177.60 seconds)
Cbc0010I After 4500 nodes, 666 on tree, 1e+50 best solution, best possible 3760.97 (181.05 seconds)
Cbc0010I After 4600 nodes, 676 on tree, 1e+50 best solution, best possible 3764.1729 (184.41 seconds)
Cbc0010I After 4700 nodes, 690 on tree, 1e+50 best solution, best possible 3766.1899 (187.86 seconds)
Cbc0010I After 4800 nodes, 701 on tree, 1e+50 best solution, best possible 3770.7193 (191.20 seconds)
Cbc0010I After 4900 nodes, 716 on tree, 1e+50 best solution, best possible 3771.9252 (194.71 seconds)
Cbc0010I After 5000 nodes, 724 on tree, 1e+50 best solution, best possible 3774.3083 (198.08 seconds)
Cbc0010I After 5100 nodes, 737 on tree, 1e+50 best solution, best possible 3775.8641 (201.50 seconds)
Cbc0010I After 5200 nodes, 745 on tree, 1e+50 best solution, best possible 3778.4917 (204.98 seconds)
Cbc0010I After 5300 nodes, 756 on tree, 1e+50 best solution, best possible 3780.5508 (208.33 seconds)
Cbc0010I After 5400 nodes, 761 on tree, 1e+50 best solution, best possible 3782.1528 (211.66 seconds)
Cbc0010I After 5500 nodes, 775 on tree, 1e+50 best solution, best possible 3784.911 (215.17 seconds)
Cbc0010I After 5600 nodes, 790 on tree, 1e+50 best solution, best possible 3785.6995 (218.69 seconds)
Cbc0010I After 5700 nodes, 801 on tree, 1e+50 best solution, best possible 3786.5143 (222.25 seconds)
Cbc0010I After 5800 nodes, 812 on tree, 1e+50 best solution, best possible 3788.4875 (225.78 seconds)
Cbc0010I After 5900 nodes, 823 on tree, 1e+50 best solution, best possible 3790.2416 (229.22 seconds)
Cbc0010I After 6000 nodes, 834 on tree, 1e+50 best solution, best possible 3791.5423 (232.72 seconds)
Cbc0010I After 6100 nodes, 846 on tree, 1e+50 best solution, best possible 3792.8643 (236.16 seconds)
Cbc0010I After 6200 nodes, 853 on tree, 1e+50 best solution, best possible 3793.7862 (239.38 seconds)
Cbc0010I After 6300 nodes, 867 on tree, 1e+50 best solution, best possible 3795.5861 (242.93 seconds)
Cbc0010I After 6400 nodes, 877 on tree, 1e+50 best solution, best possible 3797.1344 (246.36 seconds)
Cbc0010I After 6500 nodes, 888 on tree, 1e+50 best solution, best possible 3798.7911 (249.83 seconds)
Cbc0010I After 6600 nodes, 902 on tree, 1e+50 best solution, best possible 3799.1934 (253.30 seconds)
Cbc0010I After 6700 nodes, 918 on tree, 1e+50 best solution, best possible 3800.1806 (257.07 seconds)
Cbc0010I After 6800 nodes, 931 on tree, 1e+50 best solution, best possible 3800.8884 (260.57 seconds)
Cbc0010I After 6900 nodes, 937 on tree, 1e+50 best solution, best possible 3802.2118 (263.98 seconds)
Cbc0010I After 7000 nodes, 954 on tree, 1e+50 best solution, best possible 3802.8892 (267.64 seconds)
Cbc0010I After 7100 nodes, 969 on tree, 1e+50 best solution, best possible 3803.9728 (271.20 seconds)
Cbc0010I After 7200 nodes, 981 on tree, 1e+50 best solution, best possible 3804.901 (274.64 seconds)
Cbc0010I After 7300 nodes, 1002 on tree, 1e+50 best solution, best possible 3805.9409 (278.35 seconds)
Cbc0010I After 7400 nodes, 1010 on tree, 1e+50 best solution, best possible 3807.6766 (282.47 seconds)
Cbc0010I After 7500 nodes, 1019 on tree, 1e+50 best solution, best possible 3808.6011 (286.01 seconds)
Cbc0010I After 7600 nodes, 1028 on tree, 1e+50 best solution, best possible 3809.3956 (289.54 seconds)
Cbc0010I After 7700 nodes, 1040 on tree, 1e+50 best solution, best possible 3810.199 (293.12 seconds)
Cbc0010I After 7800 nodes, 1047 on tree, 1e+50 best solution, best possible 3811.2898 (296.56 seconds)
Cbc0010I After 7900 nodes, 1057 on tree, 1e+50 best solution, best possible 3812.0617 (300.03 seconds)
Cbc0010I After 8000 nodes, 1071 on tree, 1e+50 best solution, best possible 3812.4472 (303.49 seconds)
Cbc0010I After 8100 nodes, 1085 on tree, 1e+50 best solution, best possible 3813.2528 (307.08 seconds)
Cbc0010I After 8200 nodes, 1101 on tree, 1e+50 best solution, best possible 3814.422 (311.66 seconds)
Cbc0010I After 8300 nodes, 1109 on tree, 1e+50 best solution, best possible 3815.3309 (315.18 seconds)
Cbc0010I After 8400 nodes, 1118 on tree, 1e+50 best solution, best possible 3816.1212 (318.66 seconds)
Cbc0010I After 8500 nodes, 1134 on tree, 1e+50 best solution, best possible 3817.3156 (322.40 seconds)
Cbc0010I After 8600 nodes, 1138 on tree, 1e+50 best solution, best possible 3818.2853 (325.68 seconds)
Cbc0010I After 8700 nodes, 1143 on tree, 1e+50 best solution, best possible 3818.9969 (329.13 seconds)
Cbc0010I After 8800 nodes, 1161 on tree, 1e+50 best solution, best possible 3819.1489 (332.88 seconds)
Cbc0010I After 8900 nodes, 1165 on tree, 1e+50 best solution, best possible 3819.5347 (336.18 seconds)
Cbc0010I After 9000 nodes, 1172 on tree, 1e+50 best solution, best possible 3820.8674 (339.90 seconds)
Cbc0010I After 9100 nodes, 1183 on tree, 1e+50 best solution, best possible 3821.5227 (343.45 seconds)
Cbc0010I After 9200 nodes, 1196 on tree, 1e+50 best solution, best possible 3822.2448 (346.90 seconds)
Cbc0010I After 9300 nodes, 1209 on tree, 1e+50 best solution, best possible 3823.0781 (350.57 seconds)
Cbc0010I After 9400 nodes, 1220 on tree, 1e+50 best solution, best possible 3823.4524 (354.36 seconds)
Cbc0010I After 9500 nodes, 1224 on tree, 1e+50 best solution, best possible 3824.1872 (357.62 seconds)
Cbc0010I After 9600 nodes, 1230 on tree, 1e+50 best solution, best possible 3824.6497 (361.02 seconds)
Cbc0010I After 9700 nodes, 1236 on tree, 1e+50 best solution, best possible 3824.9501 (364.45 seconds)
Cbc0010I After 9800 nodes, 1250 on tree, 1e+50 best solution, best possible 3825.6794 (368.16 seconds)
Cbc0010I After 9900 nodes, 1260 on tree, 1e+50 best solution, best possible 3826.4154 (371.76 seconds)
Cbc0010I After 10000 nodes, 1267 on tree, 1e+50 best solution, best possible 3827.255 (375.38 seconds)
Cbc0010I After 10100 nodes, 1274 on tree, 1e+50 best solution, best possible 3827.8778 (378.87 seconds)
Cbc0010I After 10200 nodes, 1279 on tree, 1e+50 best solution, best possible 3828.3742 (382.41 seconds)
Cbc0010I After 10300 nodes, 1287 on tree, 1e+50 best solution, best possible 3828.769 (386.15 seconds)
Cbc0010I After 10400 nodes, 1292 on tree, 1e+50 best solution, best possible 3829.2613 (389.42 seconds)
Cbc0010I After 10500 nodes, 1296 on tree, 1e+50 best solution, best possible 3829.9231 (392.84 seconds)
Cbc0010I After 10600 nodes, 1299 on tree, 1e+50 best solution, best possible 3830.3929 (396.19 seconds)
Cbc0010I After 10700 nodes, 1301 on tree, 1e+50 best solution, best possible 3831.1187 (399.43 seconds)
Cbc0010I After 10800 nodes, 1303 on tree, 1e+50 best solution, best possible 3831.6697 (402.67 seconds)
Cbc0010I After 10900 nodes, 1307 on tree, 1e+50 best solution, best possible 3832.1979 (405.93 seconds)
Cbc0010I After 11000 nodes, 1312 on tree, 1e+50 best solution, best possible 3832.5986 (409.25 seconds)
Cbc0010I After 11100 nodes, 1320 on tree, 1e+50 best solution, best possible 3833.1309 (412.81 seconds)
Cbc0010I After 11200 nodes, 1329 on tree, 1e+50 best solution, best possible 3833.7178 (416.33 seconds)
Cbc0010I After 11300 nodes, 1328 on tree, 1e+50 best solution, best possible 3834.7305 (419.39 seconds)
Cbc0010I After 11400 nodes, 1329 on tree, 1e+50 best solution, best possible 3835.3501 (422.80 seconds)
Cbc0010I After 11500 nodes, 1331 on tree, 1e+50 best solution, best possible 3835.8269 (426.14 seconds)
Cbc0010I After 11600 nodes, 1332 on tree, 1e+50 best solution, best possible 3836.3726 (429.61 seconds)
Cbc0010I After 11700 nodes, 1337 on tree, 1e+50 best solution, best possible 3836.9393 (433.11 seconds)
Cbc0010I After 11800 nodes, 1337 on tree, 1e+50 best solution, best possible 3837.7291 (436.35 seconds)
Cbc0010I After 11900 nodes, 1336 on tree, 1e+50 best solution, best possible 3838.0365 (439.80 seconds)
Cbc0010I After 12000 nodes, 1341 on tree, 1e+50 best solution, best possible 3838.6087 (443.38 seconds)
Cbc0010I After 12100 nodes, 1343 on tree, 1e+50 best solution, best possible 3839.2743 (446.84 seconds)
Cbc0010I After 12200 nodes, 1341 on tree, 1e+50 best solution, best possible 3839.5955 (450.12 seconds)
Cbc0010I After 12300 nodes, 1342 on tree, 1e+50 best solution, best possible 3839.9493 (453.36 seconds)
Cbc0010I After 12400 nodes, 1339 on tree, 1e+50 best solution, best possible 3840.3495 (456.70 seconds)
Cbc0010I After 12500 nodes, 1335 on tree, 1e+50 best solution, best possible 3840.898 (460.03 seconds)
Cbc0010I After 12600 nodes, 1336 on tree, 1e+50 best solution, best possible 3841.5449 (463.73 seconds)
Cbc0010I After 12700 nodes, 1334 on tree, 1e+50 best solution, best possible 3841.824 (466.97 seconds)
Cbc0010I After 12800 nodes, 1330 on tree, 1e+50 best solution, best possible 3842.388 (470.22 seconds)
Cbc0010I After 12900 nodes, 1324 on tree, 1e+50 best solution, best possible 3842.9076 (473.55 seconds)
Cbc0010I After 13000 nodes, 1322 on tree, 1e+50 best solution, best possible 3843.5245 (477.05 seconds)
Cbc0010I After 13100 nodes, 1319 on tree, 1e+50 best solution, best possible 3843.9318 (480.35 seconds)
Cbc0010I After 13200 nodes, 1320 on tree, 1e+50 best solution, best possible 3844.5731 (483.82 seconds)
Cbc0010I After 13300 nodes, 1313 on tree, 1e+50 best solution, best possible 3844.7703 (486.90 seconds)
Cbc0010I After 13400 nodes, 1307 on tree, 1e+50 best solution, best possible 3845.1396 (490.21 seconds)
Cbc0010I After 13500 nodes, 1303 on tree, 1e+50 best solution, best possible 3845.5327 (493.63 seconds)
Cbc0010I After 13600 nodes, 1301 on tree, 1e+50 best solution, best possible 3846.1739 (497.11 seconds)
Cbc0010I After 13700 nodes, 1296 on tree, 1e+50 best solution, best possible 3846.5375 (500.47 seconds)
Cbc0010I After 13800 nodes, 1289 on tree, 1e+50 best solution, best possible 3847.0361 (503.75 seconds)
Cbc0010I After 13900 nodes, 1287 on tree, 1e+50 best solution, best possible 3847.4066 (506.97 seconds)
Cbc0010I After 14000 nodes, 1280 on tree, 1e+50 best solution, best possible 3847.9041 (510.21 seconds)
Cbc0010I After 14100 nodes, 1280 on tree, 1e+50 best solution, best possible 3848.3279 (513.85 seconds)
Cbc0010I After 14200 nodes, 1278 on tree, 1e+50 best solution, best possible 3848.8096 (517.41 seconds)
Cbc0010I After 14300 nodes, 1270 on tree, 1e+50 best solution, best possible 3849.2327 (520.59 seconds)
Cbc0010I After 14400 nodes, 1266 on tree, 1e+50 best solution, best possible 3849.5976 (524.05 seconds)
Cbc0010I After 14500 nodes, 1260 on tree, 1e+50 best solution, best possible 3850.112 (527.26 seconds)
Cbc0010I After 14600 nodes, 1252 on tree, 1e+50 best solution, best possible 3850.6019 (530.53 seconds)
Cbc0010I After 14700 nodes, 1240 on tree, 1e+50 best solution, best possible 3851.0456 (533.66 seconds)
Cbc0010I After 14800 nodes, 1229 on tree, 1e+50 best solution, best possible 3851.5605 (536.88 seconds)
Cbc0010I After 14900 nodes, 1219 on tree, 1e+50 best solution, best possible 3852.2913 (540.30 seconds)
Cbc0010I After 15000 nodes, 1212 on tree, 1e+50 best solution, best possible 3852.866 (543.76 seconds)
Cbc0010I After 15100 nodes, 1203 on tree, 1e+50 best solution, best possible 3853.4609 (547.10 seconds)
Cbc0010I After 15200 nodes, 1181 on tree, 1e+50 best solution, best possible 3854.0949 (550.51 seconds)
Cbc0010I After 15300 nodes, 1163 on tree, 1e+50 best solution, best possible 3854.7441 (553.67 seconds)
Cbc0010I After 15400 nodes, 1143 on tree, 1e+50 best solution, best possible 3855.3197 (556.82 seconds)
Cbc0010I After 15500 nodes, 1123 on tree, 1e+50 best solution, best possible 3856.1307 (560.20 seconds)
Cbc0010I After 15600 nodes, 1106 on tree, 1e+50 best solution, best possible 3856.7914 (563.85 seconds)
Cbc0010I After 15700 nodes, 1086 on tree, 1e+50 best solution, best possible 3857.3008 (566.92 seconds)
Cbc0010I After 15800 nodes, 1063 on tree, 1e+50 best solution, best possible 3857.8841 (570.06 seconds)
Cbc0010I After 15900 nodes, 1037 on tree, 1e+50 best solution, best possible 3858.4396 (573.33 seconds)
Cbc0010I After 16000 nodes, 1008 on tree, 1e+50 best solution, best possible 3859.0401 (576.55 seconds)
Cbc0010I After 16100 nodes, 978 on tree, 1e+50 best solution, best possible 3859.7299 (579.68 seconds)
Cbc0010I After 16200 nodes, 954 on tree, 1e+50 best solution, best possible 3860.2437 (582.80 seconds)
Cbc0010I After 16300 nodes, 928 on tree, 1e+50 best solution, best possible 3860.8075 (585.74 seconds)
Cbc0010I After 16400 nodes, 901 on tree, 1e+50 best solution, best possible 3861.4063 (588.85 seconds)
Cbc0010I After 16500 nodes, 871 on tree, 1e+50 best solution, best possible 3861.9834 (591.86 seconds)
Cbc0010I After 16600 nodes, 840 on tree, 1e+50 best solution, best possible 3862.4366 (595.01 seconds)
Cbc0010I After 16700 nodes, 801 on tree, 1e+50 best solution, best possible 3863.0055 (598.38 seconds)
Cbc0010I After 16800 nodes, 765 on tree, 1e+50 best solution, best possible 3863.7516 (601.48 seconds)
Cbc0010I After 16900 nodes, 733 on tree, 1e+50 best solution, best possible 3864.275 (604.50 seconds)
Cbc0010I After 17000 nodes, 695 on tree, 1e+50 best solution, best possible 3865.0788 (607.35 seconds)
Cbc0010I After 17100 nodes, 653 on tree, 1e+50 best solution, best possible 3865.7735 (610.21 seconds)
Cbc0010I After 17200 nodes, 614 on tree, 1e+50 best solution, best possible 3866.7842 (613.01 seconds)
Cbc0010I After 17300 nodes, 573 on tree, 1e+50 best solution, best possible 3867.6964 (615.74 seconds)
Cbc0010I After 17400 nodes, 526 on tree, 1e+50 best solution, best possible 3869.0927 (618.40 seconds)
Cbc0010I After 17500 nodes, 480 on tree, 1e+50 best solution, best possible 3870.433 (620.99 seconds)
Cbc0010I After 17600 nodes, 431 on tree, 1e+50 best solution, best possible 3871.8263 (623.42 seconds)
Cbc0010I After 17700 nodes, 388 on tree, 1e+50 best solution, best possible 3873.4612 (625.75 seconds)
Cbc0010I After 17800 nodes, 344 on tree, 1e+50 best solution, best possible 3875.9533 (628.01 seconds)
Cbc0010I After 17900 nodes, 294 on tree, 1e+50 best solution, best possible 3879.1224 (629.87 seconds)
Cbc0010I After 18000 nodes, 246 on tree, 1e+50 best solution, best possible 3881.7422 (631.53 seconds)
Cbc0010I After 18100 nodes, 205 on tree, 1e+50 best solution, best possible 3883.4643 (633.27 seconds)
Cbc0010I After 18200 nodes, 162 on tree, 1e+50 best solution, best possible 3884.3033 (634.72 seconds)
Cbc0010I After 18300 nodes, 112 on tree, 1e+50 best solution, best possible 3893.2278 (635.83 seconds)
Cbc0010I After 18400 nodes, 62 on tree, 1e+50 best solution, best possible 3927.9054 (636.92 seconds)
Cbc0010I After 18500 nodes, 12 on tree, 1e+50 best solution, best possible 3938.2276 (637.95 seconds)
Cbc0001I Search completed - best objective 1e+50, took 396645 iterations and 18524 nodes (638.18 seconds)
Cbc0035I Maximum depth 155, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1881
Linearization cuts added in total:           1881  (separation time: 0.011166s)
Total solve time:                           638.2s (638.2s in branch-and-bound)
Lower bound:                              3884.11
Upper bound:                              3884.11  (gap: 0.00%)
Branch-and-bound nodes:                     18524
Stats: /tmp/jl_AY7AEj/model.nl 1660 [var]   20 [int] 1720 [con]  139 [aux]   1881 [root]     1881 [tot] 0.011166 [sep]    638.2 [time]  638.203 [bb]         3.884114e+03 [lower]         3.884114e+03 [upper]   18524 [nodes]
Performance of                           FBBT:	    52.2243s,    23392 runs. fix: 7.58232e-05 shrnk:   0.672225 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.22362s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p45
