solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-8.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.9756072486e+03 (0.878907 seconds)
0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 490.5471       43 1.219132
Couenne: new cutoff value 5.7193586300e+02 (2.30199 seconds)
NLP0014I             2         OPT 517.04448       28 0.70796
Couenne: new cutoff value 5.1704439864e+02 (3.0122 seconds)
Loaded instance "/tmp/jl_6DQ1d4/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 2160 (-1) rows, 1950 (-89) columns and 9689 (-90) elements
Clp0006I 0  Obj -3833.4375 Primal inf 4332248.1 (90)
Clp0006I 118  Obj -2497.4267 Primal inf 2236022.5 (134)
Clp0006I 236  Obj -2.988584 Primal inf 10036.397 (66)
Clp0006I 354  Obj 320.4725 Primal inf 12697.1 (49)
Clp0006I 421  Obj 405.17738
Clp0000I Optimal - objective value 405.17738
Clp0000I Optimal - objective value 405.17738
Clp0032I Optimal objective 405.1773803 - 421 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 405.17738
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 405.17738
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 16 added rows had average density of 2
Cbc0013I At root node, 16 cuts changed objective from 405.17738 to 405.94508 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 179 row cuts average 2.0 elements, 179 column cuts (179 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (3.99 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 29 on tree, 1e+50 best solution, best possible 429.8914 (29.84 seconds)
Cbc0010I After 200 nodes, 77 on tree, 1e+50 best solution, best possible 429.8914 (34.08 seconds)
Cbc0010I After 300 nodes, 127 on tree, 1e+50 best solution, best possible 429.8914 (37.55 seconds)
Couenne: new cutoff value 4.9056570395e+02 (42.2114 seconds)
Couenne: new cutoff value 4.9054739551e+02 (42.2448 seconds)
Cbc0010I After 400 nodes, 152 on tree, 1e+50 best solution, best possible 430.112 (40.91 seconds)
Cbc0010I After 500 nodes, 162 on tree, 1e+50 best solution, best possible 457.712 (44.80 seconds)
Cbc0010I After 600 nodes, 173 on tree, 1e+50 best solution, best possible 459.59447 (48.52 seconds)
Cbc0010I After 700 nodes, 178 on tree, 1e+50 best solution, best possible 478.47322 (52.05 seconds)
Cbc0010I After 800 nodes, 188 on tree, 1e+50 best solution, best possible 483.54101 (55.58 seconds)
Cbc0010I After 900 nodes, 199 on tree, 1e+50 best solution, best possible 484.42757 (59.25 seconds)
Cbc0010I After 1000 nodes, 209 on tree, 1e+50 best solution, best possible 485.27844 (63.19 seconds)
Cbc0010I After 1100 nodes, 217 on tree, 1e+50 best solution, best possible 485.57125 (66.88 seconds)
Cbc0010I After 1200 nodes, 225 on tree, 1e+50 best solution, best possible 486.0058 (70.63 seconds)
Cbc0010I After 1300 nodes, 226 on tree, 1e+50 best solution, best possible 486.5129 (74.27 seconds)
Cbc0010I After 1400 nodes, 221 on tree, 1e+50 best solution, best possible 487.27957 (77.86 seconds)
Cbc0010I After 1500 nodes, 207 on tree, 1e+50 best solution, best possible 487.90961 (81.27 seconds)
Cbc0010I After 1600 nodes, 193 on tree, 1e+50 best solution, best possible 488.71474 (84.49 seconds)
Cbc0010I After 1700 nodes, 195 on tree, 1e+50 best solution, best possible 488.84881 (88.16 seconds)
Cbc0010I After 1800 nodes, 205 on tree, 1e+50 best solution, best possible 488.96355 (91.80 seconds)
Cbc0010I After 1900 nodes, 211 on tree, 1e+50 best solution, best possible 489.09007 (95.38 seconds)
Cbc0010I After 2000 nodes, 214 on tree, 1e+50 best solution, best possible 489.34747 (99.27 seconds)
Cbc0010I After 2100 nodes, 211 on tree, 1e+50 best solution, best possible 489.5694 (102.67 seconds)
Cbc0010I After 2200 nodes, 197 on tree, 1e+50 best solution, best possible 489.74616 (106.02 seconds)
Cbc0010I After 2300 nodes, 182 on tree, 1e+50 best solution, best possible 489.91378 (109.23 seconds)
Cbc0010I After 2400 nodes, 159 on tree, 1e+50 best solution, best possible 490.16139 (112.22 seconds)
Cbc0010I After 2500 nodes, 118 on tree, 1e+50 best solution, best possible 490.54815 (114.52 seconds)
Cbc0010I After 2600 nodes, 68 on tree, 1e+50 best solution, best possible 490.61748 (115.92 seconds)
Cbc0010I After 2700 nodes, 18 on tree, 1e+50 best solution, best possible 493.34555 (117.01 seconds)
Cbc0001I Search completed - best objective 1e+50, took 74390 iterations and 2736 nodes (117.35 seconds)
Cbc0035I Maximum depth 177, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2161
Linearization cuts added in total:           2161  (separation time: 0.010395s)
Total solve time:                         117.373s (117.373s in branch-and-bound)
Lower bound:                              490.547
Upper bound:                              490.547  (gap: 0.00%)
Branch-and-bound nodes:                      2736
Stats: /tmp/jl_6DQ1d4/model.nl 1890 [var]   30 [int] 1920 [con]  149 [aux]   2161 [root]     2161 [tot] 0.010395 [sep]  117.373 [time]  117.376 [bb]         4.905474e+02 [lower]         4.905474e+02 [upper]    2736 [nodes]
Performance of                           FBBT:	    7.33531s,     3187 runs. fix: 0.000452385 shrnk:    5.75013 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.86303s,        3 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-8.txt
