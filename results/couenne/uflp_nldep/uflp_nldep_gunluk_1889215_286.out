solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-8.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 346.53462       55 22.521284
NLP0014I             2         OPT 346.64846       38 0.829806
Couenne: new cutoff value 3.4664832749e+02 (24.3314 seconds)
Loaded instance "/tmp/jl_FR2UPX/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          299 (0 integer)

Coin0506I Presolve 2159 (-122) rows, 1949 (-240) columns and 9657 (-362) elements
Clp0006I 0  Obj -117.70263 Primal inf 3040.6811 (149)
Clp0006I 118  Obj 65.299046 Primal inf 220.49653 (92)
Clp0006I 236  Obj 285.64677 Primal inf 2.2943884 (8)
Clp0006I 247  Obj 287.22207
Clp0000I Optimal - objective value 287.22207
Clp0032I Optimal objective 287.2220686 - 247 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 287.22207
NLP Heuristic: NLP0014I             3         OPT 346.53462       33 1.108182
no solution.
Clp0000I Optimal - objective value 287.22207
Optimality Based BT: 73 improved bounds
Probing: 30 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 26 added rows had average density of 2
Cbc0013I At root node, 26 cuts changed objective from 287.22207 to 340.34885 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 55 row cuts average 2.0 elements, 7 column cuts (7 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.61 seconds)
Optimality Based BT: 64 improved bounds
Optimality Based BT: 60 improved bounds
Optimality Based BT: 60 improved bounds
Optimality Based BT: 61 improved bounds
Cbc0010I After 100 nodes, 32 on tree, 1e+50 best solution, best possible 344.29969 (51.70 seconds)
Cbc0010I After 200 nodes, 51 on tree, 1e+50 best solution, best possible 344.29969 (55.38 seconds)
Cbc0010I After 300 nodes, 81 on tree, 1e+50 best solution, best possible 344.29969 (58.96 seconds)
Couenne: new cutoff value 3.4656965339e+02 (86.5181 seconds)
Cbc0004I Integer solution of 346.56965 found after 2609 iterations and 375 nodes (62.10 seconds)
Cbc0010I After 400 nodes, 51 on tree, 346.56965 best solution, best possible 344.36795 (64.59 seconds)
Cbc0010I After 500 nodes, 77 on tree, 346.56965 best solution, best possible 344.36795 (68.76 seconds)
Couenne: new cutoff value 3.4656839641e+02 (94.9373 seconds)
Cbc0004I Integer solution of 346.5684 found after 4418 iterations and 549 nodes (70.52 seconds)
Cbc0010I After 600 nodes, 94 on tree, 346.5684 best solution, best possible 344.48575 (73.93 seconds)
Cbc0010I After 700 nodes, 117 on tree, 346.5684 best solution, best possible 344.86752 (79.05 seconds)
Cbc0010I After 800 nodes, 138 on tree, 346.5684 best solution, best possible 344.95568 (85.12 seconds)
Cbc0010I After 900 nodes, 160 on tree, 346.5684 best solution, best possible 345.00803 (90.17 seconds)
Cbc0010I After 1000 nodes, 181 on tree, 346.5684 best solution, best possible 345.04786 (95.57 seconds)
Cbc0010I After 1100 nodes, 205 on tree, 346.5684 best solution, best possible 345.04786 (99.40 seconds)
Cbc0010I After 1200 nodes, 237 on tree, 346.5684 best solution, best possible 345.04786 (103.26 seconds)
Couenne: new cutoff value 3.4653581372e+02 (129.327 seconds)
Cbc0004I Integer solution of 346.53581 found after 11312 iterations and 1238 nodes (104.91 seconds)
Cbc0010I After 1300 nodes, 176 on tree, 346.53581 best solution, best possible 345.15136 (108.20 seconds)
Cbc0010I After 1400 nodes, 188 on tree, 346.53581 best solution, best possible 345.22128 (118.31 seconds)
Cbc0010I After 1500 nodes, 202 on tree, 346.53581 best solution, best possible 345.25334 (123.30 seconds)
Cbc0010I After 1600 nodes, 216 on tree, 346.53581 best solution, best possible 345.30914 (136.31 seconds)
Cbc0010I After 1700 nodes, 225 on tree, 346.53581 best solution, best possible 345.39497 (140.80 seconds)
Cbc0010I After 1800 nodes, 234 on tree, 346.53581 best solution, best possible 345.47738 (145.80 seconds)
Cbc0010I After 1900 nodes, 240 on tree, 346.53581 best solution, best possible 345.51167 (150.35 seconds)
Cbc0010I After 2000 nodes, 244 on tree, 346.53581 best solution, best possible 345.5358 (154.96 seconds)
Cbc0010I After 2100 nodes, 247 on tree, 346.53581 best solution, best possible 345.60396 (159.38 seconds)
Cbc0010I After 2200 nodes, 245 on tree, 346.53581 best solution, best possible 345.65143 (163.64 seconds)
Cbc0010I After 2300 nodes, 244 on tree, 346.53581 best solution, best possible 345.69036 (167.87 seconds)
Cbc0010I After 2400 nodes, 243 on tree, 346.53581 best solution, best possible 345.72408 (172.16 seconds)
Cbc0010I After 2500 nodes, 238 on tree, 346.53581 best solution, best possible 345.74975 (176.69 seconds)
Cbc0010I After 2600 nodes, 236 on tree, 346.53581 best solution, best possible 345.78304 (180.86 seconds)
Cbc0010I After 2700 nodes, 232 on tree, 346.53581 best solution, best possible 345.80606 (191.76 seconds)
Cbc0010I After 2800 nodes, 222 on tree, 346.53581 best solution, best possible 345.87922 (196.28 seconds)
Cbc0010I After 2900 nodes, 205 on tree, 346.53581 best solution, best possible 345.95462 (200.85 seconds)
Cbc0010I After 3000 nodes, 184 on tree, 346.53581 best solution, best possible 346.00637 (205.20 seconds)
Cbc0010I After 3100 nodes, 173 on tree, 346.53581 best solution, best possible 346.09375 (209.36 seconds)
Cbc0010I After 3200 nodes, 167 on tree, 346.53581 best solution, best possible 346.13156 (213.31 seconds)
Cbc0010I After 3300 nodes, 164 on tree, 346.53581 best solution, best possible 346.17673 (217.72 seconds)
Cbc0010I After 3400 nodes, 153 on tree, 346.53581 best solution, best possible 346.21197 (221.70 seconds)
Cbc0010I After 3500 nodes, 135 on tree, 346.53581 best solution, best possible 346.28002 (226.33 seconds)
Couenne: new cutoff value 3.4653574902e+02 (254.937 seconds)
Cbc0004I Integer solution of 346.53575 found after 40457 iterations and 3599 nodes (230.52 seconds)
Cbc0010I After 3600 nodes, 129 on tree, 346.53575 best solution, best possible 346.31151 (230.57 seconds)
Cbc0010I After 3700 nodes, 111 on tree, 346.53575 best solution, best possible 346.37454 (234.51 seconds)
Couenne: new cutoff value 3.4653545552e+02 (261.088 seconds)
Cbc0004I Integer solution of 346.53546 found after 43182 iterations and 3763 nodes (236.67 seconds)
Cbc0010I After 3800 nodes, 89 on tree, 346.53546 best solution, best possible 346.41849 (237.95 seconds)
Cbc0010I After 3900 nodes, 79 on tree, 346.53546 best solution, best possible 346.45166 (241.54 seconds)
Cbc0010I After 4000 nodes, 89 on tree, 346.53546 best solution, best possible 346.46395 (245.43 seconds)
Couenne: new cutoff value 3.4653536016e+02 (269.976 seconds)
Cbc0004I Integer solution of 346.53536 found after 47239 iterations and 4003 nodes (245.56 seconds)
Couenne: new cutoff value 3.4653525905e+02 (272.031 seconds)
Cbc0004I Integer solution of 346.53526 found after 48218 iterations and 4061 nodes (247.62 seconds)
Cbc0010I After 4100 nodes, 81 on tree, 346.53526 best solution, best possible 346.47723 (249.00 seconds)
Cbc0010I After 4200 nodes, 47 on tree, 346.53526 best solution, best possible 346.52026 (252.05 seconds)
Couenne: new cutoff value 3.4653494938e+02 (279.001 seconds)
Cbc0004I Integer solution of 346.53495 found after 50778 iterations and 4280 nodes (254.59 seconds)
Couenne: new cutoff value 3.4653492414e+02 (279.623 seconds)
Cbc0004I Integer solution of 346.53492 found after 50880 iterations and 4295 nodes (255.21 seconds)
Cbc0010I After 4300 nodes, 8 on tree, 346.53492 best solution, best possible 346.53452 (255.36 seconds)
Cbc0001I Search completed - best objective 346.5349241350095, took 51008 iterations and 4317 nodes (255.97 seconds)
Cbc0035I Maximum depth 156, 1574 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2281
Linearization cuts added in total:           2281  (separation time: 0.017075s)
Total solve time:                         255.999s (255.999s in branch-and-bound)
Lower bound:                              346.535
Upper bound:                              346.535  (gap: 0.00%)
Branch-and-bound nodes:                      4317
Stats: /tmp/jl_FR2UPX/model.nl 1890 [var]   30 [int] 1920 [con]  299 [aux]   2281 [root]     2281 [tot] 0.017075 [sep]  255.999 [time]  256.002 [bb]         3.465349e+02 [lower]         3.465349e+02 [upper]    4317 [nodes]
Performance of                           FBBT:	    14.6797s,     4705 runs. fix:          0 shrnk:    4.48009 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    9.77101s,        5 runs. fix:    2.71429 shrnk:    236.588 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-8.txt
