solving instance uflp nldep holmberg 18 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.8966000000e+04 (0.292447 seconds)
0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4850.6261       31 0.442075
NLP0014I             2         OPT 4850.6264       23 0.249143
Couenne: new cutoff value 4.8506278629e+03 (1.02136 seconds)
Loaded instance "/tmp/jl_x1tk5W/model.nl"
Constraints:         1090
Variables:           1060 (20 integer)
Auxiliaries:          109 (0 integer)

Coin0506I Presolve 1250 (-1) rows, 1100 (-69) columns and 5459 (-70) elements
Clp0006I 0  Obj -16875 Primal inf 2290590.8 (70)
Clp0006I 100  Obj -7721.0607 Primal inf 375827.27 (72)
Clp0006I 200  Obj 1578.8378 Primal inf 10745.82 (53)
Clp0006I 278  Obj 4068.4933
Clp0000I Optimal - objective value 4068.4933
Clp0000I Optimal - objective value 4068.4933
Clp0032I Optimal objective 4068.49327 - 278 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 4068.4933
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 4068.4933
Optimality Based BT: 13 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 34 added rows had average density of 2
Cbc0013I At root node, 34 cuts changed objective from 4068.4933 to 4610.6996 in 19 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 281 row cuts average 2.0 elements, 322 column cuts (322 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.73 seconds)
Optimality Based BT: 17 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 30 improved bounds
Cbc0010I After 100 nodes, 9 on tree, 1e+50 best solution, best possible 4839.7264 (11.28 seconds)
Cbc0001I Search completed - best objective 1e+50, took 2011 iterations and 146 nodes (11.94 seconds)
Cbc0035I Maximum depth 47, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1251
Linearization cuts added in total:           1251  (separation time: 0.005809s)
Total solve time:                         11.9556s (11.9555s in branch-and-bound)
Lower bound:                              4850.63
Upper bound:                              4850.63  (gap: 0.00%)
Branch-and-bound nodes:                       146
Stats: /tmp/jl_x1tk5W/model.nl 1060 [var]   20 [int] 1090 [con]  109 [aux]   1251 [root]     1251 [tot] 0.005809 [sep]  11.9556 [time]  11.9574 [bb]         4.850628e+03 [lower]         4.850628e+03 [upper]     146 [nodes]
Performance of                           FBBT:	   0.258085s,      172 runs. fix:          0 shrnk:    7.82959 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.65526s,        4 runs. fix:          0 shrnk:    110.843 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p18
