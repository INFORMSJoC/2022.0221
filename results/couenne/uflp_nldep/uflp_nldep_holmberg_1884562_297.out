solving instance uflp nldep holmberg 30 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 6.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 7902.2987       60 347.76004
NLP0014I             2         OPT 7902.8281       48 2.727369
Couenne: new cutoff value 7.9028218950e+03 (357.029 seconds)
Loaded instance "/tmp/jl_B7Wtbw/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 5099 (-92) rows, 4649 (-300) columns and 23427 (-392) elements
Clp0006I 0  Obj 0 Primal inf 10065.989 (480)
Clp0006I 176  Obj 7.6522966e-12 Primal inf 62796.598 (392)
Clp0006I 325  Obj 9.3796491e-05 Primal inf 3636784.2 (811)
Clp0006I 501  Obj 7512.5773 Primal inf 15599.029 (374)
Clp0006I 677  Obj 7890.4286 Primal inf 23183.851 (249)
Clp0006I 734  Obj 7895.0876
Clp0000I Optimal - objective value 7895.0872
Clp0032I Optimal objective 7895.08723 - 734 iterations time 0.132, Presolve 0.02
Clp0000I Optimal - objective value 7895.0872
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 7895.0872
Optimality Based BT: 46 improved bounds
Probing: 7 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 44 added rows had average density of 2
Cbc0013I At root node, 44 cuts changed objective from 7895.0872 to 7900.3271 in 19 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 367 row cuts average 2.0 elements, 20 column cuts (20 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (33.71 seconds)
Optimality Based BT: 49 improved bounds
Optimality Based BT: 44 improved bounds
Optimality Based BT: 59 improved bounds
Optimality Based BT: 60 improved bounds
Optimality Based BT: 56 improved bounds
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 7901.6818 (229.23 seconds)
Cbc0010I After 200 nodes, 90 on tree, 1e+50 best solution, best possible 7901.6818 (240.22 seconds)
Cbc0010I After 300 nodes, 140 on tree, 1e+50 best solution, best possible 7901.6818 (250.51 seconds)
Couenne: new cutoff value 7.9024142569e+03 (608.999 seconds)
Cbc0004I Integer solution of 7902.4143 found after 3430 iterations and 311 nodes (251.58 seconds)
Optimality Based BT: 57 improved bounds
Optimality Based BT: 56 improved bounds
Optimality Based BT: 62 improved bounds
Optimality Based BT: 55 improved bounds
Cbc0010I After 400 nodes, 65 on tree, 7902.4143 best solution, best possible 7901.9915 (371.38 seconds)
Cbc0010I After 500 nodes, 108 on tree, 7902.4143 best solution, best possible 7901.9915 (380.89 seconds)
Couenne: new cutoff value 7.9023490844e+03 (743.212 seconds)
Cbc0004I Integer solution of 7902.3491 found after 5905 iterations and 552 nodes (385.79 seconds)
Optimality Based BT: 52 improved bounds
Cbc0010I After 600 nodes, 51 on tree, 7902.3491 best solution, best possible 7902.0934 (444.05 seconds)
Cbc0010I After 700 nodes, 90 on tree, 7902.3491 best solution, best possible 7902.0934 (454.51 seconds)
Couenne: new cutoff value 7.9023293645e+03 (819.018 seconds)
Cbc0004I Integer solution of 7902.3294 found after 9261 iterations and 767 nodes (461.60 seconds)
Optimality Based BT: 41 improved bounds
Cbc0010I After 800 nodes, 38 on tree, 7902.3294 best solution, best possible 7902.2393 (468.58 seconds)
Couenne: new cutoff value 7.9023286022e+03 (835.75 seconds)
Cbc0004I Integer solution of 7902.3287 found after 10768 iterations and 898 nodes (478.39 seconds)
Cbc0010I After 900 nodes, 40 on tree, 7902.3287 best solution, best possible 7902.2936 (478.73 seconds)
Couenne: new cutoff value 7.9023285049e+03 (841.976 seconds)
Cbc0004I Integer solution of 7902.3285 found after 11651 iterations and 977 nodes (484.56 seconds)
Cbc0010I After 1000 nodes, 15 on tree, 7902.3285 best solution, best possible 7902.3284 (486.25 seconds)
Couenne: new cutoff value 7.9023284642e+03 (843.993 seconds)
Cbc0004I Integer solution of 7902.3285 found after 11819 iterations and 1003 nodes (486.57 seconds)
Cbc0001I Search completed - best objective 7902.32846416165, took 11946 iterations and 1016 nodes (487.48 seconds)
Cbc0035I Maximum depth 155, 18 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       5191
Linearization cuts added in total:           5191  (separation time: 0.045084s)
Total solve time:                         487.639s (487.639s in branch-and-bound)
Lower bound:                              7902.33
Upper bound:                              7902.33  (gap: 0.00%)
Branch-and-bound nodes:                      1016
Stats: /tmp/jl_B7Wtbw/model.nl 4590 [var]   30 [int] 4710 [con]  359 [aux]   5191 [root]     5191 [tot] 0.045084 [sep]  487.639 [time]  487.648 [bb]         7.902328e+03 [lower]         7.902328e+03 [upper]    1016 [nodes]
Performance of                           FBBT:	    11.5412s,     1113 runs. fix:          0 shrnk:    10.6935 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    41.4747s,       12 runs. fix:     4.3295 shrnk:    98.7871 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p30
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
f0 = 0.2646723063668526
