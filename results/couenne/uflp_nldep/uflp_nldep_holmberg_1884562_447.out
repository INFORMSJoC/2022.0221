solving instance uflp nldep holmberg 45 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1963.0236       46 10.742339
Couenne: new cutoff value 1.9630242996e+03 (11.4883 seconds)
Loaded instance "/tmp/jl_GzQ9Yv/model.nl"
Constraints:         1720
Variables:           1660 (20 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 1979 (-62) rows, 1699 (-180) columns and 8617 (-242) elements
Clp0006I 0  Obj 0 Primal inf 5140.1038 (300)
Clp0006I 114  Obj 9.4288217e-14 Primal inf 23454.548 (122)
Clp0006I 228  Obj 1946.3035 Primal inf 29.055689 (47)
Clp0006I 320  Obj 1953.3229
Clp0000I Optimal - objective value 1953.3229
Clp0032I Optimal objective 1953.322902 - 320 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 1953.3229
NLP Heuristic: NLP0014I             2         OPT 1963.0236       11 0.236967
no solution.
Clp0000I Optimal - objective value 1953.3229
Optimality Based BT: 45 improved bounds
Probing: 3 improved bounds
NLP Heuristic: no solution.
Cbc0031I 41 added rows had average density of 2
Cbc0013I At root node, 41 cuts changed objective from 1953.3229 to 1963.0133 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 254 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (5.73 seconds)
Optimality Based BT: 48 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 279 iterations and 4 nodes (9.21 seconds)
Cbc0035I Maximum depth 1, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2041
Linearization cuts added in total:           2041  (separation time: 0.013778s)
Total solve time:                         9.23841s (9.23841s in branch-and-bound)
Lower bound:                              1963.02
Upper bound:                              1963.02  (gap: 0.00%)
Branch-and-bound nodes:                         4
Stats: /tmp/jl_GzQ9Yv/model.nl 1660 [var]   20 [int] 1720 [con]  219 [aux]   2041 [root]     2041 [tot] 0.013778 [sep]  9.23841 [time]    9.242 [bb]         1.963024e+03 [lower]         1.963024e+03 [upper]       4 [nodes]
Performance of                           FBBT:	   0.043796s,       16 runs. fix:          0 shrnk:    57.0136 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.22543s,        3 runs. fix:    5.33333 shrnk:    196.455 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p45
f0 = 0.30349091130065786
f0 = 0.2726124755578584
f0 = 0.38465708525315945
f0 = 0.38465708525315945
f0 = 0.4296513773355244
f0 = 0.3326048650010117
f0 = 0.35642537257402845
f0 = 0.4111243158898447
f0 = 0.2708479935154127
f0 = 0.2743769576003041
f0 = 0.3581898546164741
f0 = 0.3828926032107137
f0 = 0.26643678840929846
f0 = 0.3326048650010117
f0 = 0.2761414396427498
f0 = 0.3378983111283487
f0 = 0.3855393262743823
f0 = 0.36877674687114825
f0 = 0.4287691363143016
f0 = 0.41377103895351325
