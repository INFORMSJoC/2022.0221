solving instance uflp nldep holmberg 51 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.5693000000e+04 (1.11379 seconds)
1.1 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5454.0013       50 1.544943
NLP0014I             2         OPT 5637.7024       28 0.63851
Couenne: new cutoff value 5.6377036524e+03 (3.47967 seconds)
Loaded instance "/tmp/jl_BcU9wz/model.nl"
Constraints:         2140
Variables:           2060 (20 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 2300 (-1) rows, 2100 (-119) columns and 10459 (-120) elements
Clp0006I 0  Obj -22224.375 Primal inf 842021.9 (120)
Clp0006I 121  Obj -182.11259 Primal inf 13749.304 (118)
Clp0006I 242  Obj 3738.8134 Primal inf 4659.1847 (57)
Clp0006I 324  Obj 4530.5195
Clp0000I Optimal - objective value 4530.5195
Clp0000I Optimal - objective value 4530.5195
Clp0032I Optimal objective 4530.519529 - 324 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 4530.5195
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 4530.5195
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 8 added rows had average density of 2
Cbc0013I At root node, 8 cuts changed objective from 4530.5195 to 4534.8544 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 59 row cuts average 2.0 elements, 264 column cuts (264 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (4.44 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 37 on tree, 1e+50 best solution, best possible 5116.8313 (31.92 seconds)
Couenne: new cutoff value 5.4567905661e+03 (38.6277 seconds)
Cbc0010I After 200 nodes, 77 on tree, 1e+50 best solution, best possible 5291.6198 (35.92 seconds)
Cbc0010I After 300 nodes, 109 on tree, 1e+50 best solution, best possible 5291.6198 (40.50 seconds)
Couenne: new cutoff value 5.4540030572e+03 (46.2911 seconds)
Cbc0010I After 400 nodes, 138 on tree, 1e+50 best solution, best possible 5331.424 (44.33 seconds)
Cbc0010I After 500 nodes, 153 on tree, 1e+50 best solution, best possible 5395.9662 (48.83 seconds)
Cbc0010I After 600 nodes, 165 on tree, 1e+50 best solution, best possible 5408.9814 (53.22 seconds)
Cbc0010I After 700 nodes, 171 on tree, 1e+50 best solution, best possible 5418.1123 (57.40 seconds)
Cbc0010I After 800 nodes, 174 on tree, 1e+50 best solution, best possible 5425.5575 (61.62 seconds)
Cbc0010I After 900 nodes, 177 on tree, 1e+50 best solution, best possible 5430.6823 (65.72 seconds)
Cbc0010I After 1000 nodes, 167 on tree, 1e+50 best solution, best possible 5435.9536 (69.54 seconds)
Cbc0010I After 1100 nodes, 168 on tree, 1e+50 best solution, best possible 5441.5877 (73.69 seconds)
Cbc0010I After 1200 nodes, 164 on tree, 1e+50 best solution, best possible 5444.5664 (77.55 seconds)
Cbc0010I After 1300 nodes, 155 on tree, 1e+50 best solution, best possible 5448.7995 (81.62 seconds)
Cbc0010I After 1400 nodes, 148 on tree, 1e+50 best solution, best possible 5450.4239 (86.04 seconds)
Cbc0010I After 1500 nodes, 136 on tree, 1e+50 best solution, best possible 5452.8268 (90.33 seconds)
Cbc0010I After 1600 nodes, 112 on tree, 1e+50 best solution, best possible 5453.8253 (94.02 seconds)
Cbc0010I After 1700 nodes, 77 on tree, 1e+50 best solution, best possible 5454.1171 (96.24 seconds)
Cbc0010I After 1800 nodes, 27 on tree, 1e+50 best solution, best possible 5457.4029 (97.05 seconds)
Cbc0001I Search completed - best objective 1e+50, took 27875 iterations and 1854 nodes (97.50 seconds)
Cbc0035I Maximum depth 98, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2301
Linearization cuts added in total:           2301  (separation time: 0.01164s)
Total solve time:                         97.5246s (97.5246s in branch-and-bound)
Lower bound:                                 5454
Upper bound:                                 5454  (gap: 0.00%)
Branch-and-bound nodes:                      1854
Stats: /tmp/jl_BcU9wz/model.nl 2060 [var]   20 [int] 2140 [con]  159 [aux]   2301 [root]     2301 [tot] 0.01164 [sep]  97.5246 [time]  97.5286 [bb]         5.454003e+03 [lower]         5.454003e+03 [upper]    1854 [nodes]
Performance of                           FBBT:	    6.42265s,     2216 runs. fix:          0 shrnk:    3.98182 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.62301s,        4 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p51
