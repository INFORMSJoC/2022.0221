solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-1.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 257.50266       49 1.676175
NLP0014I             2         OPT 257.52825       36 0.307383
Couenne: new cutoff value 2.5752827375e+02 (2.22285 seconds)
Loaded instance "/tmp/jl_MpeURL/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1139 (-62) rows, 899 (-140) columns and 4617 (-202) elements
Clp0006I 0  Obj 0 Primal inf 5875.0967 (260)
Clp0006I 97  Obj 6.6665336e-14 Primal inf 456.09919 (114)
Clp0006I 194  Obj 255.3342 Primal inf 79.559884 (37)
Clp0006I 273  Obj 256.07146
Clp0000I Optimal - objective value 256.07146
Clp0032I Optimal objective 256.0714565 - 273 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 256.07146
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 256.07146
Optimality Based BT: 37 improved bounds
Probing: 2 improved bounds
NLP Heuristic: no solution.
Cbc0031I 32 added rows had average density of 2
Cbc0013I At root node, 32 cuts changed objective from 256.07146 to 257.17957 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 386 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.36 seconds)
Optimality Based BT: 42 improved bounds
Optimality Based BT: 31 improved bounds
Cbc0010I After 100 nodes, 43 on tree, 1e+50 best solution, best possible 257.50277 (9.83 seconds)
Couenne: new cutoff value 2.5750389853e+02 (12.8121 seconds)
Couenne: new cutoff value 2.5750276890e+02 (12.8402 seconds)
Cbc0004I Integer solution of 257.50277 found after 1273 iterations and 150 nodes (10.59 seconds)
Cbc0001I Search completed - best objective 257.5027688978346, took 1273 iterations and 150 nodes (10.63 seconds)
Cbc0035I Maximum depth 74, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.006814s)
Total solve time:                         10.6462s (10.6462s in branch-and-bound)
Lower bound:                              257.503
Upper bound:                              257.503  (gap: 0.00%)
Branch-and-bound nodes:                       150
Stats: /tmp/jl_MpeURL/model.nl  860 [var]   20 [int]  880 [con]  179 [aux]   1201 [root]     1201 [tot] 0.006814 [sep]  10.6462 [time]  10.6482 [bb]         2.575028e+02 [lower]         2.575028e+02 [upper]     150 [nodes]
Performance of                           FBBT:	   0.215288s,      180 runs. fix:          0 shrnk:    23.9559 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.70682s,        3 runs. fix:         19 shrnk:    177.261 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-1.txt
f0 = 0.0582279074007076
f0 = 0.0749904868039416
f0 = 0.010586892254674109
f0 = 0.002646723063668527
f0 = 0.006175687148559896
f0 = 0.08645962007983857
f0 = 0.06087463046437613
f0 = 0.006175687148559896
f0 = 0.06969704067660455
f0 = 0.017644820424456847
f0 = 0.03528964084891369
f0 = 0.07763720986761014
f0 = 0.02999619472157664
f0 = 0.0582279074007076
f0 = 0.025584989615462427
f0 = 0.0855773790586157
f0 = 0.042347569018696435
f0 = 0.07234376374027307
f0 = 0.08204841497372434
f0 = 0.07675496884638729
