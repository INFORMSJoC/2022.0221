solving instance uflp nldep holmberg 41 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.0340999997e+04 (0.233119 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3308.7075       23 0.245393
Couenne: new cutoff value 3.3087072288e+03 (0.483225 seconds)
Loaded instance "/tmp/jl_4gXGxb/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          139 (0 integer)

Coin0506I Presolve 1111 (-20) rows, 951 (-118) columns and 4751 (-138) elements
Clp0006I 0  Obj 0 Primal inf 104.99989 (110)
Clp0006I 97  Obj 2166 Primal inf 61.69954 (70)
Clp0006I 146  Obj 3089.3794
Clp0000I Optimal - objective value 3089.3794
Clp0032I Optimal objective 3089.379353 - 146 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 3089.3794
NLP Heuristic: NLP0014I             2         OPT 3308.7075       15 0.150356
no solution.
Clp0000I Optimal - objective value 3089.3794
Optimality Based BT: 11 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 21 added rows had average density of 2
Cbc0013I At root node, 21 cuts changed objective from 3089.3794 to 3231.6802 in 11 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 61 row cuts average 2.0 elements, 12 column cuts (12 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.71 seconds)
Optimality Based BT: 11 improved bounds
Optimality Based BT: 10 improved bounds
Optimality Based BT: 11 improved bounds
Optimality Based BT: 15 improved bounds
Optimality Based BT: 18 improved bounds
Optimality Based BT: 13 improved bounds
Cbc0010I After 100 nodes, 17 on tree, 1e+50 best solution, best possible 3308.7057 (14.83 seconds)
Cbc0010I After 200 nodes, 30 on tree, 1e+50 best solution, best possible 3308.706 (16.43 seconds)
Cbc0010I After 300 nodes, 27 on tree, 1e+50 best solution, best possible 3308.7069 (17.78 seconds)
Cbc0001I Search completed - best objective 1e+50, took 1073 iterations and 360 nodes (18.21 seconds)
Cbc0035I Maximum depth 25, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1131
Linearization cuts added in total:           1131  (separation time: 0.005737s)
Total solve time:                         18.2303s (18.2303s in branch-and-bound)
Lower bound:                              3308.71
Upper bound:                              3308.71  (gap: 0.00%)
Branch-and-bound nodes:                       360
Stats: /tmp/jl_4gXGxb/model.nl  930 [var]   10 [int] 1010 [con]  139 [aux]   1131 [root]     1131 [tot] 0.005737 [sep]  18.2303 [time]  18.2319 [bb]         3.308707e+03 [lower]         3.308707e+03 [upper]     360 [nodes]
Performance of                           FBBT:	    0.31958s,      223 runs. fix:          0 shrnk:    4.30814 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.14011s,        7 runs. fix:   0.380952 shrnk:    51.6092 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p41
