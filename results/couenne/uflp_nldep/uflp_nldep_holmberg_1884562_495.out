solving instance uflp nldep holmberg 50 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.5092677387e+04 (0.275394 seconds)
0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5460.481       25 0.280429
NLP0014I             2         OPT 5460.481       28 0.269215
Couenne: new cutoff value 5.4604804740e+03 (0.843918 seconds)
Loaded instance "/tmp/jl_GQuq7b/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 1221 (-20) rows, 1051 (-128) columns and 5251 (-148) elements
Clp0006I 0  Obj 0 Primal inf 535.26314 (120)
Clp0006I 99  Obj 4443 Primal inf 141.80351 (103)
Clp0006I 146  Obj 5238.7317
Clp0000I Optimal - objective value 5238.7317
Clp0032I Optimal objective 5238.731739 - 146 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 5238.7317
NLP Heuristic: NLP0014I             3         OPT 5460.481       26 0.269734
no solution.
Clp0000I Optimal - objective value 5238.7317
Optimality Based BT: 10 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 21 added rows had average density of 2
Cbc0013I At root node, 21 cuts changed objective from 5238.7317 to 5314.825 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 70 row cuts average 2.0 elements, 12 column cuts (12 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.44 seconds)
Optimality Based BT: 3 improved bounds
Optimality Based BT: 2 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 6 improved bounds
Cbc0010I After 100 nodes, 20 on tree, 1e+50 best solution, best possible 5424.4528 (23.48 seconds)
Cbc0010I After 200 nodes, 16 on tree, 1e+50 best solution, best possible 5457.0159 (29.25 seconds)
Cbc0010I After 300 nodes, 12 on tree, 1e+50 best solution, best possible 5460.4797 (30.69 seconds)
Cbc0010I After 400 nodes, 13 on tree, 1e+50 best solution, best possible 5460.4802 (31.92 seconds)
Cbc0001I Search completed - best objective 1e+50, took 3889 iterations and 436 nodes (32.25 seconds)
Cbc0035I Maximum depth 41, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1241
Linearization cuts added in total:           1241  (separation time: 0.0064s)
Total solve time:                         32.2697s (32.2697s in branch-and-bound)
Lower bound:                              5460.48
Upper bound:                              5460.48  (gap: 0.00%)
Branch-and-bound nodes:                       436
Stats: /tmp/jl_GQuq7b/model.nl 1030 [var]   10 [int] 1120 [con]  149 [aux]   1241 [root]     1241 [tot] 0.0064 [sep]  32.2697 [time]  32.2714 [bb]         5.460480e+03 [lower]         5.460480e+03 [upper]     436 [nodes]
Performance of                           FBBT:	   0.746706s,      471 runs. fix:          0 shrnk:    2.59017 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.30947s,        6 runs. fix:          0 shrnk:    20.2051 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p50
