solving instance uflp nldep holmberg 31 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 5.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 8427.9114       57 697.17099
NLP0014I             2         OPT 8441.8506       65 3.980957
Couenne: new cutoff value 8.4418461540e+03 (707.858 seconds)
Loaded instance "/tmp/jl_emZ7pJ/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          389 (0 integer)

Coin0506I Presolve 4951 (-120) rows, 4651 (-328) columns and 23161 (-448) elements
Clp0006I 0  Obj -1295.3335 Primal inf 4548.5357 (240)
Clp0006I 174  Obj 1428.6345 Primal inf 383.29911 (144)
Clp0006I 348  Obj 7686.6477 Primal inf 28.169374 (37)
Clp0006I 398  Obj 7718.8779
Clp0000I Optimal - objective value 7718.8779
Clp0032I Optimal objective 7718.877946 - 398 iterations time 0.042, Presolve 0.02
Clp0000I Optimal - objective value 7718.8779
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 7718.8779
Optimality Based BT: 58 improved bounds
Probing: 30 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 10 added rows had average density of 2
Cbc0013I At root node, 10 cuts changed objective from 7718.8779 to 7961.7552 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 20 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (36.22 seconds)
Optimality Based BT: 39 improved bounds
Optimality Based BT: 38 improved bounds
Optimality Based BT: 36 improved bounds
Optimality Based BT: 43 improved bounds
Optimality Based BT: 54 improved bounds
Cbc0010I After 100 nodes, 23 on tree, 1e+50 best solution, best possible 8045.3064 (196.02 seconds)
Cbc0010I After 200 nodes, 70 on tree, 1e+50 best solution, best possible 8045.3064 (208.52 seconds)
Cbc0010I After 300 nodes, 120 on tree, 1e+50 best solution, best possible 8045.3064 (219.26 seconds)
Cbc0010I After 400 nodes, 170 on tree, 1e+50 best solution, best possible 8045.3064 (230.00 seconds)
Couenne: new cutoff value 8.4300888007e+03 (946.791 seconds)
Cbc0004I Integer solution of 8430.0888 found after 4190 iterations and 487 nodes (238.70 seconds)
Optimality Based BT: 46 improved bounds
Optimality Based BT: 49 improved bounds
Cbc0010I After 500 nodes, 118 on tree, 8430.0888 best solution, best possible 8128.6237 (400.69 seconds)
Cbc0010I After 600 nodes, 142 on tree, 8430.0888 best solution, best possible 8128.6237 (413.18 seconds)
Cbc0010I After 700 nodes, 165 on tree, 8430.0888 best solution, best possible 8132.559 (426.17 seconds)
Optimality Based BT: 48 improved bounds
Cbc0010I After 800 nodes, 176 on tree, 8430.0888 best solution, best possible 8168.7365 (442.69 seconds)
Cbc0010I After 900 nodes, 207 on tree, 8430.0888 best solution, best possible 8168.7365 (455.41 seconds)
Cbc0010I After 1000 nodes, 234 on tree, 8430.0888 best solution, best possible 8185.5425 (579.97 seconds)
Cbc0010I After 1100 nodes, 256 on tree, 8430.0888 best solution, best possible 8286.864 (593.18 seconds)
Cbc0010I After 1200 nodes, 279 on tree, 8430.0888 best solution, best possible 8292.8925 (606.50 seconds)
Cbc0010I After 1300 nodes, 302 on tree, 8430.0888 best solution, best possible 8294.3925 (619.68 seconds)
Cbc0010I After 1400 nodes, 322 on tree, 8430.0888 best solution, best possible 8330.9119 (632.64 seconds)
Cbc0010I After 1500 nodes, 346 on tree, 8430.0888 best solution, best possible 8337.1208 (645.58 seconds)
Cbc0010I After 1600 nodes, 371 on tree, 8430.0888 best solution, best possible 8340.4487 (658.86 seconds)
Cbc0010I After 1700 nodes, 393 on tree, 8430.0888 best solution, best possible 8351.091 (672.46 seconds)
Cbc0010I After 1800 nodes, 417 on tree, 8430.0888 best solution, best possible 8369.7243 (685.08 seconds)
Cbc0010I After 1900 nodes, 446 on tree, 8430.0888 best solution, best possible 8371.1605 (699.55 seconds)
Cbc0010I After 2000 nodes, 471 on tree, 8430.0888 best solution, best possible 8385.5232 (713.83 seconds)
Cbc0010I After 2100 nodes, 482 on tree, 8430.0888 best solution, best possible 8389.2884 (726.84 seconds)
Cbc0010I After 2200 nodes, 510 on tree, 8430.0888 best solution, best possible 8402.8743 (740.69 seconds)
Cbc0010I After 2300 nodes, 535 on tree, 8430.0888 best solution, best possible 8402.8746 (753.66 seconds)
Cbc0010I After 2400 nodes, 565 on tree, 8430.0888 best solution, best possible 8403.0966 (767.59 seconds)
Cbc0010I After 2500 nodes, 595 on tree, 8430.0888 best solution, best possible 8403.1153 (780.97 seconds)
Cbc0010I After 2600 nodes, 622 on tree, 8430.0888 best solution, best possible 8403.8811 (795.31 seconds)
Cbc0010I After 2700 nodes, 647 on tree, 8430.0888 best solution, best possible 8404.7103 (809.03 seconds)
Cbc0010I After 2800 nodes, 669 on tree, 8430.0888 best solution, best possible 8404.7238 (822.45 seconds)
Cbc0010I After 2900 nodes, 696 on tree, 8430.0888 best solution, best possible 8404.9284 (836.32 seconds)
Cbc0010I After 3000 nodes, 710 on tree, 8430.0888 best solution, best possible 8405.4068 (851.26 seconds)
Cbc0010I After 3100 nodes, 735 on tree, 8430.0888 best solution, best possible 8406.0788 (865.13 seconds)
Cbc0010I After 3200 nodes, 753 on tree, 8430.0888 best solution, best possible 8406.6082 (878.65 seconds)
Cbc0010I After 3300 nodes, 777 on tree, 8430.0888 best solution, best possible 8406.6461 (892.46 seconds)
Cbc0010I After 3400 nodes, 801 on tree, 8430.0888 best solution, best possible 8406.709 (906.38 seconds)
Cbc0010I After 3500 nodes, 834 on tree, 8430.0888 best solution, best possible 8406.7699 (921.11 seconds)
Cbc0010I After 3600 nodes, 865 on tree, 8430.0888 best solution, best possible 8407.213 (935.72 seconds)
Cbc0010I After 3700 nodes, 890 on tree, 8430.0888 best solution, best possible 8407.3221 (949.58 seconds)
Cbc0010I After 3800 nodes, 912 on tree, 8430.0888 best solution, best possible 8407.4519 (963.02 seconds)
Cbc0010I After 3900 nodes, 936 on tree, 8430.0888 best solution, best possible 8407.5344 (977.17 seconds)
Cbc0010I After 4000 nodes, 963 on tree, 8430.0888 best solution, best possible 8407.7265 (991.74 seconds)
Cbc0010I After 4100 nodes, 988 on tree, 8430.0888 best solution, best possible 8407.8289 (1005.95 seconds)
Cbc0010I After 4200 nodes, 1012 on tree, 8430.0888 best solution, best possible 8407.95 (1019.62 seconds)
Cbc0010I After 4300 nodes, 1034 on tree, 8430.0888 best solution, best possible 8408.0765 (1033.15 seconds)
Cbc0010I After 4400 nodes, 1058 on tree, 8430.0888 best solution, best possible 8408.3308 (1045.51 seconds)
Cbc0010I After 4500 nodes, 1077 on tree, 8430.0888 best solution, best possible 8408.5 (1059.14 seconds)
Cbc0010I After 4600 nodes, 1096 on tree, 8430.0888 best solution, best possible 8408.5639 (1072.55 seconds)
Cbc0010I After 4700 nodes, 1125 on tree, 8430.0888 best solution, best possible 8408.7437 (1086.72 seconds)
Cbc0010I After 4800 nodes, 1150 on tree, 8430.0888 best solution, best possible 8408.7808 (1101.47 seconds)
Cbc0010I After 4900 nodes, 1168 on tree, 8430.0888 best solution, best possible 8408.9436 (1115.18 seconds)
Cbc0010I After 5000 nodes, 1192 on tree, 8430.0888 best solution, best possible 8409.0726 (1128.68 seconds)
Cbc0010I After 5100 nodes, 1221 on tree, 8430.0888 best solution, best possible 8409.2317 (1142.81 seconds)
Cbc0010I After 5200 nodes, 1245 on tree, 8430.0888 best solution, best possible 8409.2807 (1156.89 seconds)
Cbc0010I After 5300 nodes, 1255 on tree, 8430.0888 best solution, best possible 8409.6491 (1170.27 seconds)
Cbc0010I After 5400 nodes, 1285 on tree, 8430.0888 best solution, best possible 8409.6845 (1184.09 seconds)
Cbc0010I After 5500 nodes, 1309 on tree, 8430.0888 best solution, best possible 8409.8547 (1197.54 seconds)
Cbc0010I After 5600 nodes, 1336 on tree, 8430.0888 best solution, best possible 8409.9166 (1211.88 seconds)
Cbc0010I After 5700 nodes, 1364 on tree, 8430.0888 best solution, best possible 8409.9741 (1226.05 seconds)
Cbc0010I After 5800 nodes, 1394 on tree, 8430.0888 best solution, best possible 8410.1215 (1240.82 seconds)
Cbc0010I After 5900 nodes, 1424 on tree, 8430.0888 best solution, best possible 8410.1365 (1255.45 seconds)
Cbc0010I After 6000 nodes, 1448 on tree, 8430.0888 best solution, best possible 8410.1525 (1269.55 seconds)
Cbc0010I After 6100 nodes, 1472 on tree, 8430.0888 best solution, best possible 8410.2037 (1284.02 seconds)
Cbc0010I After 6200 nodes, 1500 on tree, 8430.0888 best solution, best possible 8410.2493 (1298.10 seconds)
Cbc0010I After 6300 nodes, 1531 on tree, 8430.0888 best solution, best possible 8410.3822 (1313.85 seconds)
Cbc0010I After 6400 nodes, 1556 on tree, 8430.0888 best solution, best possible 8410.5221 (1328.16 seconds)
Cbc0010I After 6500 nodes, 1585 on tree, 8430.0888 best solution, best possible 8410.5705 (1342.59 seconds)
Cbc0010I After 6600 nodes, 1607 on tree, 8430.0888 best solution, best possible 8410.6794 (1356.37 seconds)
Cbc0010I After 6700 nodes, 1635 on tree, 8430.0888 best solution, best possible 8410.744 (1371.27 seconds)
Cbc0010I After 6800 nodes, 1662 on tree, 8430.0888 best solution, best possible 8410.8465 (1384.67 seconds)
Cbc0010I After 6900 nodes, 1686 on tree, 8430.0888 best solution, best possible 8410.888 (1398.12 seconds)
Cbc0010I After 7000 nodes, 1714 on tree, 8430.0888 best solution, best possible 8411.0693 (1416.06 seconds)
Cbc0010I After 7100 nodes, 1746 on tree, 8430.0888 best solution, best possible 8411.0884 (1430.87 seconds)
Cbc0010I After 7200 nodes, 1768 on tree, 8430.0888 best solution, best possible 8411.2247 (1444.50 seconds)
Cbc0010I After 7300 nodes, 1794 on tree, 8430.0888 best solution, best possible 8411.2803 (1458.41 seconds)
Cbc0010I After 7400 nodes, 1820 on tree, 8430.0888 best solution, best possible 8411.3313 (1472.10 seconds)
Cbc0010I After 7500 nodes, 1850 on tree, 8430.0888 best solution, best possible 8411.376 (1487.09 seconds)
Cbc0010I After 7600 nodes, 1875 on tree, 8430.0888 best solution, best possible 8411.5335 (1500.99 seconds)
Cbc0010I After 7700 nodes, 1892 on tree, 8430.0888 best solution, best possible 8411.7458 (1514.66 seconds)
Cbc0010I After 7800 nodes, 1920 on tree, 8430.0888 best solution, best possible 8411.7812 (1528.88 seconds)
Cbc0010I After 7900 nodes, 1942 on tree, 8430.0888 best solution, best possible 8411.8377 (1541.69 seconds)
Cbc0010I After 8000 nodes, 1970 on tree, 8430.0888 best solution, best possible 8411.8999 (1556.10 seconds)
Cbc0010I After 8100 nodes, 1993 on tree, 8430.0888 best solution, best possible 8411.96 (1569.54 seconds)
Cbc0010I After 8200 nodes, 2022 on tree, 8430.0888 best solution, best possible 8412.0408 (1584.35 seconds)
Cbc0010I After 8300 nodes, 2046 on tree, 8430.0888 best solution, best possible 8412.0935 (1597.60 seconds)
Cbc0010I After 8400 nodes, 2068 on tree, 8430.0888 best solution, best possible 8412.1426 (1611.45 seconds)
Cbc0010I After 8500 nodes, 2088 on tree, 8430.0888 best solution, best possible 8412.2694 (1624.31 seconds)
Cbc0010I After 8600 nodes, 2121 on tree, 8430.0888 best solution, best possible 8412.2752 (1638.39 seconds)
Cbc0010I After 8700 nodes, 2154 on tree, 8430.0888 best solution, best possible 8412.2909 (1652.91 seconds)
Cbc0010I After 8800 nodes, 2178 on tree, 8430.0888 best solution, best possible 8412.333 (1667.12 seconds)
Cbc0010I After 8900 nodes, 2210 on tree, 8430.0888 best solution, best possible 8412.3697 (1681.75 seconds)
Cbc0010I After 9000 nodes, 2233 on tree, 8430.0888 best solution, best possible 8412.5091 (1696.31 seconds)
Cbc0010I After 9100 nodes, 2263 on tree, 8430.0888 best solution, best possible 8412.5416 (1710.42 seconds)
Cbc0010I After 9200 nodes, 2288 on tree, 8430.0888 best solution, best possible 8412.6373 (1725.60 seconds)
Cbc0010I After 9300 nodes, 2307 on tree, 8430.0888 best solution, best possible 8412.7489 (1738.45 seconds)
Cbc0010I After 9400 nodes, 2329 on tree, 8430.0888 best solution, best possible 8412.7739 (1750.78 seconds)
Cbc0010I After 9500 nodes, 2359 on tree, 8430.0888 best solution, best possible 8412.7833 (1765.34 seconds)
Cbc0010I After 9600 nodes, 2382 on tree, 8430.0888 best solution, best possible 8412.874 (1778.88 seconds)
Cbc0010I After 9700 nodes, 2404 on tree, 8430.0888 best solution, best possible 8412.8991 (1792.07 seconds)
Cbc0010I After 9800 nodes, 2425 on tree, 8430.0888 best solution, best possible 8412.9141 (1805.60 seconds)
Cbc0010I After 9900 nodes, 2453 on tree, 8430.0888 best solution, best possible 8412.9383 (1820.12 seconds)
Cbc0010I After 10000 nodes, 2470 on tree, 8430.0888 best solution, best possible 8412.9829 (1831.68 seconds)
Cbc0010I After 10100 nodes, 2490 on tree, 8430.0888 best solution, best possible 8413.0464 (1846.00 seconds)
Cbc0010I After 10200 nodes, 2516 on tree, 8430.0888 best solution, best possible 8413.0967 (1860.58 seconds)
Cbc0010I After 10300 nodes, 2534 on tree, 8430.0888 best solution, best possible 8413.1207 (1873.70 seconds)
Cbc0010I After 10400 nodes, 2557 on tree, 8430.0888 best solution, best possible 8413.1853 (1887.75 seconds)
Cbc0010I After 10500 nodes, 2579 on tree, 8430.0888 best solution, best possible 8413.2008 (1901.60 seconds)
Cbc0010I After 10600 nodes, 2603 on tree, 8430.0888 best solution, best possible 8413.2222 (1915.32 seconds)
Cbc0010I After 10700 nodes, 2629 on tree, 8430.0888 best solution, best possible 8413.2497 (1928.97 seconds)
Cbc0010I After 10800 nodes, 2651 on tree, 8430.0888 best solution, best possible 8413.3363 (1942.39 seconds)
Cbc0010I After 10900 nodes, 2669 on tree, 8430.0888 best solution, best possible 8413.3771 (1955.36 seconds)
Cbc0010I After 11000 nodes, 2696 on tree, 8430.0888 best solution, best possible 8413.3978 (1968.83 seconds)
Cbc0010I After 11100 nodes, 2723 on tree, 8430.0888 best solution, best possible 8413.4405 (1983.30 seconds)
Cbc0010I After 11200 nodes, 2753 on tree, 8430.0888 best solution, best possible 8413.4769 (1998.12 seconds)
Cbc0010I After 11300 nodes, 2775 on tree, 8430.0888 best solution, best possible 8413.5406 (2011.41 seconds)
Cbc0010I After 11400 nodes, 2799 on tree, 8430.0888 best solution, best possible 8413.5991 (2025.09 seconds)
Cbc0010I After 11500 nodes, 2824 on tree, 8430.0888 best solution, best possible 8413.6806 (2038.43 seconds)
Cbc0010I After 11600 nodes, 2854 on tree, 8430.0888 best solution, best possible 8413.7146 (2053.02 seconds)
Cbc0010I After 11700 nodes, 2871 on tree, 8430.0888 best solution, best possible 8413.7645 (2067.79 seconds)
Cbc0010I After 11800 nodes, 2899 on tree, 8430.0888 best solution, best possible 8413.7712 (2081.97 seconds)
Cbc0010I After 11900 nodes, 2920 on tree, 8430.0888 best solution, best possible 8413.7921 (2095.05 seconds)
Cbc0010I After 12000 nodes, 2943 on tree, 8430.0888 best solution, best possible 8413.8154 (2109.64 seconds)
Cbc0010I After 12100 nodes, 2975 on tree, 8430.0888 best solution, best possible 8413.8618 (2125.11 seconds)
Cbc0010I After 12200 nodes, 3000 on tree, 8430.0888 best solution, best possible 8413.8997 (2140.12 seconds)
Cbc0010I After 12300 nodes, 3019 on tree, 8430.0888 best solution, best possible 8413.9411 (2153.97 seconds)
Cbc0010I After 12400 nodes, 3048 on tree, 8430.0888 best solution, best possible 8413.9744 (2167.98 seconds)
Cbc0010I After 12500 nodes, 3072 on tree, 8430.0888 best solution, best possible 8414.0018 (2182.58 seconds)
Cbc0010I After 12600 nodes, 3101 on tree, 8430.0888 best solution, best possible 8414.0853 (2197.32 seconds)
Cbc0010I After 12700 nodes, 3128 on tree, 8430.0888 best solution, best possible 8414.1157 (2211.10 seconds)
Cbc0010I After 12800 nodes, 3152 on tree, 8430.0888 best solution, best possible 8414.1631 (2225.24 seconds)
Cbc0010I After 12900 nodes, 3178 on tree, 8430.0888 best solution, best possible 8414.1997 (2239.53 seconds)
Cbc0010I After 13000 nodes, 3203 on tree, 8430.0888 best solution, best possible 8414.2056 (2252.77 seconds)
Cbc0010I After 13100 nodes, 3222 on tree, 8430.0888 best solution, best possible 8414.234 (2266.41 seconds)
Cbc0010I After 13200 nodes, 3246 on tree, 8430.0888 best solution, best possible 8414.2882 (2279.89 seconds)
Cbc0010I After 13300 nodes, 3273 on tree, 8430.0888 best solution, best possible 8414.3661 (2294.00 seconds)
Cbc0010I After 13400 nodes, 3297 on tree, 8430.0888 best solution, best possible 8414.3846 (2307.59 seconds)
Cbc0010I After 13500 nodes, 3328 on tree, 8430.0888 best solution, best possible 8414.4048 (2322.61 seconds)
Cbc0010I After 13600 nodes, 3352 on tree, 8430.0888 best solution, best possible 8414.4368 (2337.20 seconds)
Cbc0010I After 13700 nodes, 3377 on tree, 8430.0888 best solution, best possible 8414.4884 (2350.84 seconds)
Cbc0010I After 13800 nodes, 3398 on tree, 8430.0888 best solution, best possible 8414.5267 (2365.17 seconds)
Cbc0010I After 13900 nodes, 3419 on tree, 8430.0888 best solution, best possible 8414.5578 (2379.32 seconds)
Cbc0010I After 14000 nodes, 3445 on tree, 8430.0888 best solution, best possible 8414.579 (2393.58 seconds)
Cbc0010I After 14100 nodes, 3469 on tree, 8430.0888 best solution, best possible 8414.6207 (2408.14 seconds)
Cbc0010I After 14200 nodes, 3494 on tree, 8430.0888 best solution, best possible 8414.6514 (2421.66 seconds)
Cbc0010I After 14300 nodes, 3516 on tree, 8430.0888 best solution, best possible 8414.6621 (2437.20 seconds)
Cbc0010I After 14400 nodes, 3541 on tree, 8430.0888 best solution, best possible 8414.7066 (2450.53 seconds)
Cbc0010I After 14500 nodes, 3567 on tree, 8430.0888 best solution, best possible 8414.751 (2464.47 seconds)
Cbc0010I After 14600 nodes, 3599 on tree, 8430.0888 best solution, best possible 8414.7546 (2481.85 seconds)
Cbc0010I After 14700 nodes, 3619 on tree, 8430.0888 best solution, best possible 8414.7759 (2494.56 seconds)
Cbc0010I After 14800 nodes, 3648 on tree, 8430.0888 best solution, best possible 8414.7852 (2508.85 seconds)
Cbc0010I After 14900 nodes, 3672 on tree, 8430.0888 best solution, best possible 8414.811 (2522.56 seconds)
Cbc0010I After 15000 nodes, 3700 on tree, 8430.0888 best solution, best possible 8414.8374 (2537.44 seconds)
Cbc0010I After 15100 nodes, 3727 on tree, 8430.0888 best solution, best possible 8414.8654 (2551.52 seconds)
Cbc0010I After 15200 nodes, 3753 on tree, 8430.0888 best solution, best possible 8414.8871 (2564.71 seconds)
Cbc0010I After 15300 nodes, 3779 on tree, 8430.0888 best solution, best possible 8414.9042 (2579.18 seconds)
Cbc0010I After 15400 nodes, 3806 on tree, 8430.0888 best solution, best possible 8414.9324 (2593.17 seconds)
Cbc0010I After 15500 nodes, 3832 on tree, 8430.0888 best solution, best possible 8414.9876 (2608.07 seconds)
Cbc0010I After 15600 nodes, 3859 on tree, 8430.0888 best solution, best possible 8415.0221 (2622.90 seconds)
Cbc0010I After 15700 nodes, 3889 on tree, 8430.0888 best solution, best possible 8415.0369 (2636.85 seconds)
Cbc0010I After 15800 nodes, 3908 on tree, 8430.0888 best solution, best possible 8415.0425 (2649.80 seconds)
Cbc0010I After 15900 nodes, 3931 on tree, 8430.0888 best solution, best possible 8415.0596 (2663.68 seconds)
Cbc0010I After 16000 nodes, 3952 on tree, 8430.0888 best solution, best possible 8415.0745 (2677.37 seconds)
Cbc0010I After 16100 nodes, 3981 on tree, 8430.0888 best solution, best possible 8415.112 (2691.46 seconds)
Cbc0010I After 16200 nodes, 4007 on tree, 8430.0888 best solution, best possible 8415.1465 (2705.47 seconds)
Cbc0010I After 16300 nodes, 4029 on tree, 8430.0888 best solution, best possible 8415.1759 (2718.94 seconds)
Cbc0010I After 16400 nodes, 4057 on tree, 8430.0888 best solution, best possible 8415.2065 (2733.33 seconds)
Cbc0010I After 16500 nodes, 4082 on tree, 8430.0888 best solution, best possible 8415.221 (2746.94 seconds)
Cbc0010I After 16600 nodes, 4114 on tree, 8430.0888 best solution, best possible 8415.2276 (2760.84 seconds)
Cbc0010I After 16700 nodes, 4137 on tree, 8430.0888 best solution, best possible 8415.2572 (2775.02 seconds)
Cbc0010I After 16800 nodes, 4165 on tree, 8430.0888 best solution, best possible 8415.2804 (2788.52 seconds)
Cbc0010I After 16900 nodes, 4193 on tree, 8430.0888 best solution, best possible 8415.2855 (2802.74 seconds)
Cbc0010I After 17000 nodes, 4224 on tree, 8430.0888 best solution, best possible 8415.3044 (2817.71 seconds)
Cbc0010I After 17100 nodes, 4251 on tree, 8430.0888 best solution, best possible 8415.3324 (2831.39 seconds)
Cbc0010I After 17200 nodes, 4276 on tree, 8430.0888 best solution, best possible 8415.3536 (2845.08 seconds)
Cbc0010I After 17300 nodes, 4301 on tree, 8430.0888 best solution, best possible 8415.4384 (2858.63 seconds)
Cbc0010I After 17400 nodes, 4328 on tree, 8430.0888 best solution, best possible 8415.4549 (2870.61 seconds)
Cbc0010I After 17500 nodes, 4350 on tree, 8430.0888 best solution, best possible 8415.4668 (2882.57 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 8430.0888 (best possible 8415.4668), took 190066 iterations and 17577 nodes (2908.70 seconds)
Cbc0035I Maximum depth 243, 412 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5071
Linearization cuts added in total:           5071  (separation time: 0.046538s)
Total solve time:                         2908.76s (2908.76s in branch-and-bound)
Lower bound:                              8415.47
Upper bound:                              8430.09  (gap: 0.17%)
Branch-and-bound nodes:                     17577
Stats: /tmp/jl_emZ7pJ/model.nl 4590 [var]   30 [int] 4710 [con]  389 [aux]   5071 [root]     5071 [tot] 0.046538 [sep]  2908.76 [time]  2908.77 [bb]         8.415467e+03 [lower]         8.430089e+03 [upper]   17577 [nodes]
Performance of                           FBBT:	     262.47s,    24932 runs. fix: 0.00626542 shrnk:    2.05351 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    30.7516s,        9 runs. fix:   0.748201 shrnk:    93.7706 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p31
