solving instance uflp nldep holmberg 54 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5389.625       42 3.624193
Couenne: new cutoff value 5.3896238806e+03 (3.91273 seconds)
Loaded instance "/tmp/jl_wi3NUt/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          169 (0 integer)

Coin0506I Presolve 1249 (-32) rows, 1049 (-150) columns and 5307 (-182) elements
Clp0006I 0  Obj 0 Primal inf 2979.5708 (210)
Clp0006I 99  Obj 2328.0201 Primal inf 2339.9614 (134)
Clp0006I 198  Obj 5371.6146 Primal inf 136.4014 (30)
Clp0006I 231  Obj 5374.7635
Clp0000I Optimal - objective value 5374.7635
Clp0032I Optimal objective 5374.763513 - 231 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 5374.7635
NLP Heuristic: NLP0014I             2         OPT 5389.625       13 0.131844
no solution.
Clp0000I Optimal - objective value 5374.7635
Optimality Based BT: 26 improved bounds
Probing: 3 improved bounds
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 5374.7635 to 5389.6257 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 259 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0001I Search completed - best objective 1e+50, took 263 iterations and 0 nodes (2.21 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1281
Linearization cuts added in total:           1281  (separation time: 0.00739s)
Total solve time:                         2.22934s (2.22934s in branch-and-bound)
Lower bound:                              5389.62
Upper bound:                              5389.62  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_wi3NUt/model.nl 1030 [var]   10 [int] 1120 [con]  169 [aux]   1281 [root]     1281 [tot] 0.00739 [sep]  2.22934 [time]  2.23139 [bb]         5.389624e+03 [lower]         5.389624e+03 [upper]       0 [nodes]
Performance of                           FBBT:	   0.026188s,       17 runs. fix:          0 shrnk:    25.1451 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.396728s,        1 runs. fix:          6 shrnk:    101.652 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p54
f0 = 0.30349091130065775
f0 = 0.2726124755578583
f0 = 0.3846570852531593
f0 = 0.3846570852531593
f0 = 0.4296513773355242
f0 = 0.33260486500101155
f0 = 0.35642537257402834
f0 = 0.41112431588984455
f0 = 0.2708479935154126
f0 = 0.274376957600304
