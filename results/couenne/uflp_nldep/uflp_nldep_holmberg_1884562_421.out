solving instance uflp nldep holmberg 43 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4009.7237       79 57.625308
NLP0014I             2         OPT 4451.2358       52 1.810539
Couenne: new cutoff value 4.4512343833e+03 (60.9946 seconds)
Loaded instance "/tmp/jl_0mLkDi/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          279 (0 integer)

Coin0506I Presolve 2619 (-92) rows, 2249 (-220) columns and 11427 (-312) elements
Clp0006I 0  Obj 0 Primal inf 11175.385 (400)
Clp0006I 127  Obj 9.161168e-13 Primal inf 4391.2498 (282)
Clp0006I 247  Obj 2.0948891e-09 Primal inf 1040961.9 (259)
Clp0006I 357  Obj 0.41274607 Primal inf 13413918 (264)
Clp0006I 484  Obj 2491.1144 Primal inf 208.55096 (320)
Clp0006I 611  Obj 3664.7265 Primal inf 476.70102 (152)
Clp0006I 731  Obj 4001.6066
Clp0000I Optimal - objective value 4001.6053
Clp0032I Optimal objective 4001.605279 - 731 iterations time 0.092, Presolve 0.01
Clp0000I Optimal - objective value 4001.6053
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 4001.6053
Optimality Based BT: 4 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 7 cuts changed objective from 4001.6053 to 4001.6417 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 7 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.82 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 12 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 44 on tree, 1e+50 best solution, best possible 4005.8889 (53.17 seconds)
Couenne: new cutoff value 4.0109751490e+03 (117.397 seconds)
Cbc0004I Integer solution of 4010.9752 found after 6264 iterations and 183 nodes (56.27 seconds)
Cbc0010I After 200 nodes, 17 on tree, 4010.9752 best solution, best possible 4008.5739 (57.19 seconds)
Couenne: new cutoff value 4.0109730496e+03 (121.813 seconds)
Cbc0004I Integer solution of 4010.973 found after 8751 iterations and 289 nodes (60.66 seconds)
Cbc0010I After 300 nodes, 11 on tree, 4010.973 best solution, best possible 4010.9215 (61.14 seconds)
Couenne: new cutoff value 4.0109717870e+03 (125.434 seconds)
Cbc0004I Integer solution of 4010.9718 found after 10311 iterations and 380 nodes (64.28 seconds)
Cbc0010I After 400 nodes, 10 on tree, 4010.9718 best solution, best possible 4010.9687 (65.23 seconds)
Cbc0001I Search completed - best objective 4010.971786983183, took 11371 iterations and 492 nodes (68.27 seconds)
Cbc0035I Maximum depth 91, 26 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2711
Linearization cuts added in total:           2711  (separation time: 0.015697s)
Total solve time:                         68.3724s (68.3724s in branch-and-bound)
Lower bound:                              4010.97
Upper bound:                              4010.97  (gap: 0.00%)
Branch-and-bound nodes:                       492
Stats: /tmp/jl_0mLkDi/model.nl 2190 [var]   30 [int] 2230 [con]  279 [aux]   2711 [root]     2711 [tot] 0.015697 [sep]  68.3724 [time]   68.377 [bb]         4.010972e+03 [lower]         4.010972e+03 [upper]     492 [nodes]
Performance of                           FBBT:	    1.91241s,      561 runs. fix:          0 shrnk:    36.0406 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    14.1607s,        4 runs. fix:       58.5 shrnk:    8.56665 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p43
