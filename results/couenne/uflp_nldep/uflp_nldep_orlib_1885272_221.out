solving instance uflp nldep orlib 102 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.4 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 778543.19      246 4.569146
NLP0014I             2         OPT 787866.9       55 0.833271
Couenne: new cutoff value 7.8786711375e+05 (6.02052 seconds)
Loaded instance "/tmp/jl_HEHn5B/model.nl"
Constraints:         1350
Variables:           1325 (25 integer)
Auxiliaries:          219 (0 integer)

Coin0506I Presolve 1587 (-76) rows, 1370 (-174) columns and 6796 (-299) elements
Clp0006I 0  Obj 0 Primal inf 183300.44 (242)
Clp0006I 106  Obj 5.5353832e-12 Primal inf 11490.098 (99)
Clp0006I 201  Obj 3.7013182e-09 Primal inf 98961.552 (134)
Clp0006I 293  Obj 0.021194217 Primal inf 8797086.7 (84)
Clp0006I 399  Obj 762195.22 Primal inf 1972.075 (26)
Clp0006I 421  Obj 778539.24
Clp0000I Optimal - objective value 778539.23
Clp0032I Optimal objective 778539.2256 - 421 iterations time 0.042, Presolve 0.01
Clp0000I Optimal - objective value 778539.23
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 778539.23
Optimality Based BT: 46 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 16 added rows had average density of 2
Cbc0013I At root node, 16 cuts changed objective from 778539.23 to 778539.87 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 41 row cuts average 2.0 elements, 4 column cuts (4 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (4.03 seconds)
Optimality Based BT: 42 improved bounds
Optimality Based BT: 45 improved bounds
Optimality Based BT: 39 improved bounds
Optimality Based BT: 39 improved bounds
Optimality Based BT: 43 improved bounds
Optimality Based BT: 34 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 778543.38 (34.78 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 778543.54 (36.93 seconds)
Couenne: new cutoff value 7.7854371561e+05 (44.0199 seconds)
Couenne: new cutoff value 7.7854355239e+05 (44.3191 seconds)
Cbc0010I After 300 nodes, 110 on tree, 1e+50 best solution, best possible 778548.07 (38.58 seconds)
Cbc0010I After 400 nodes, 60 on tree, 1e+50 best solution, best possible 778654.88 (39.35 seconds)
Cbc0010I After 500 nodes, 10 on tree, 1e+50 best solution, best possible 780377.91 (40.07 seconds)
Cbc0001I Search completed - best objective 1e+50, took 8119 iterations and 520 nodes (40.20 seconds)
Cbc0035I Maximum depth 130, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1663
Linearization cuts added in total:           1663  (separation time: 0.009559s)
Total solve time:                         40.2366s (40.2366s in branch-and-bound)
Lower bound:                               778544
Upper bound:                               778544  (gap: 0.00%)
Branch-and-bound nodes:                       520
Stats: /tmp/jl_HEHn5B/model.nl 1325 [var]   25 [int] 1350 [con]  219 [aux]   1663 [root]     1663 [tot] 0.009559 [sep]  40.2366 [time]  40.2382 [bb]         7.785436e+05 [lower]         7.785436e+05 [upper]     520 [nodes]
Performance of                           FBBT:	   0.567706s,      295 runs. fix: 0.000261314 shrnk:    23.2214 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    8.15553s,        7 runs. fix:   0.771429 shrnk:    63.6475 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap102.txt
