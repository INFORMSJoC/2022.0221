solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-10-20-4.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 250.93581       84 0.296591
NLP0014I             2         OPT 250.93582       33 0.086515
Couenne: new cutoff value 2.5093551002e+02 (0.413549 seconds)
Loaded instance "/tmp/jl_M0KrWQ/model.nl"
Constraints:          240
Variables:            230 (10 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 319 (-42) rows, 249 (-80) columns and 1217 (-122) elements
Clp0006I 0  Obj -41.623379 Primal inf 700.67484 (49)
Clp0006I 72  Obj 177.65094 Primal inf 24.541561 (38)
Clp0006I 84  Obj 187.30922
Clp0000I Optimal - objective value 187.30922
Clp0032I Optimal objective 187.3092217 - 84 iterations time 0.002, Presolve 0.00
Clp0000I Optimal - objective value 187.30922
NLP Heuristic: NLP0014I             3         OPT 250.93582       17 0.046809
no solution.
Clp0000I Optimal - objective value 187.30922
Optimality Based BT: 29 improved bounds
Probing: 8 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 6 added rows had average density of 2
Cbc0013I At root node, 6 cuts changed objective from 187.30922 to 193.02602 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 6 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.34 seconds)
Optimality Based BT: 21 improved bounds
Optimality Based BT: 21 improved bounds
Optimality Based BT: 20 improved bounds
Optimality Based BT: 21 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 24 improved bounds
Optimality Based BT: 26 improved bounds
Optimality Based BT: 26 improved bounds
Cbc0010I After 100 nodes, 26 on tree, 1e+50 best solution, best possible 249.20174 (3.99 seconds)
Couenne: new cutoff value 2.5067530556e+02 (4.58365 seconds)
Cbc0004I Integer solution of 250.67531 found after 920 iterations and 143 nodes (4.17 seconds)
Cbc0010I After 200 nodes, 23 on tree, 250.67531 best solution, best possible 250.23774 (4.46 seconds)
Couenne: new cutoff value 2.5065560811e+02 (5.01159 seconds)
Cbc0010I After 300 nodes, 54 on tree, 250.67531 best solution, best possible 250.64576 (4.86 seconds)
Couenne: new cutoff value 2.5065299853e+02 (5.38105 seconds)
Cbc0004I Integer solution of 250.653 found after 1607 iterations and 326 nodes (4.96 seconds)
Couenne: new cutoff value 2.5065245697e+02 (5.62884 seconds)
Cbc0004I Integer solution of 250.65246 found after 1733 iterations and 393 nodes (5.21 seconds)
Cbc0010I After 400 nodes, 15 on tree, 250.65246 best solution, best possible 250.6524 (5.25 seconds)
Couenne: new cutoff value 2.5065244433e+02 (5.74636 seconds)
Cbc0010I After 500 nodes, 46 on tree, 250.65246 best solution, best possible 250.6524 (5.62 seconds)
Couenne: new cutoff value 2.5065244361e+02 (6.17487 seconds)
Cbc0004I Integer solution of 250.65245 found after 1867 iterations and 563 nodes (5.86 seconds)
Cbc0010I After 600 nodes, 52 on tree, 250.65245 best solution, best possible 250.6524 (6.00 seconds)
Cbc0010I After 700 nodes, 77 on tree, 250.65245 best solution, best possible 250.6524 (6.34 seconds)
Cbc0010I After 800 nodes, 104 on tree, 250.65245 best solution, best possible 250.6524 (6.69 seconds)
Cbc0010I After 900 nodes, 124 on tree, 250.65245 best solution, best possible 250.6524 (7.03 seconds)
Cbc0010I After 1000 nodes, 142 on tree, 250.65245 best solution, best possible 250.6524 (7.38 seconds)
Cbc0010I After 1100 nodes, 162 on tree, 250.65245 best solution, best possible 250.6524 (7.73 seconds)
Cbc0010I After 1200 nodes, 182 on tree, 250.65245 best solution, best possible 250.6524 (8.07 seconds)
Cbc0010I After 1300 nodes, 202 on tree, 250.65245 best solution, best possible 250.6524 (8.42 seconds)
Cbc0010I After 1400 nodes, 219 on tree, 250.65245 best solution, best possible 250.6524 (8.77 seconds)
Cbc0010I After 1500 nodes, 238 on tree, 250.65245 best solution, best possible 250.6524 (9.10 seconds)
Cbc0010I After 1600 nodes, 254 on tree, 250.65245 best solution, best possible 250.6524 (9.43 seconds)
Cbc0010I After 1700 nodes, 271 on tree, 250.65245 best solution, best possible 250.6524 (9.77 seconds)
Cbc0010I After 1800 nodes, 281 on tree, 250.65245 best solution, best possible 250.6524 (10.09 seconds)
Cbc0010I After 1900 nodes, 293 on tree, 250.65245 best solution, best possible 250.6524 (10.43 seconds)
Cbc0010I After 2000 nodes, 302 on tree, 250.65245 best solution, best possible 250.65241 (10.77 seconds)
Cbc0010I After 2100 nodes, 310 on tree, 250.65245 best solution, best possible 250.65241 (11.10 seconds)
Cbc0010I After 2200 nodes, 315 on tree, 250.65245 best solution, best possible 250.65241 (11.42 seconds)
Cbc0010I After 2300 nodes, 319 on tree, 250.65245 best solution, best possible 250.65241 (11.75 seconds)
Cbc0010I After 2400 nodes, 321 on tree, 250.65245 best solution, best possible 250.65241 (12.08 seconds)
Cbc0010I After 2500 nodes, 323 on tree, 250.65245 best solution, best possible 250.65241 (12.41 seconds)
Cbc0010I After 2600 nodes, 325 on tree, 250.65245 best solution, best possible 250.65242 (12.73 seconds)
Cbc0010I After 2700 nodes, 324 on tree, 250.65245 best solution, best possible 250.65242 (13.03 seconds)
Cbc0010I After 2800 nodes, 321 on tree, 250.65245 best solution, best possible 250.65242 (13.34 seconds)
Cbc0010I After 2900 nodes, 308 on tree, 250.65245 best solution, best possible 250.65242 (13.67 seconds)
Cbc0010I After 3000 nodes, 307 on tree, 250.65245 best solution, best possible 250.65242 (13.99 seconds)
Cbc0010I After 3100 nodes, 294 on tree, 250.65245 best solution, best possible 250.65242 (14.31 seconds)
Cbc0010I After 3200 nodes, 291 on tree, 250.65245 best solution, best possible 250.65242 (14.62 seconds)
Cbc0010I After 3300 nodes, 283 on tree, 250.65245 best solution, best possible 250.65242 (14.91 seconds)
Cbc0010I After 3400 nodes, 278 on tree, 250.65245 best solution, best possible 250.65242 (15.22 seconds)
Cbc0010I After 3500 nodes, 267 on tree, 250.65245 best solution, best possible 250.65243 (15.57 seconds)
Cbc0010I After 3600 nodes, 253 on tree, 250.65245 best solution, best possible 250.65243 (15.86 seconds)
Cbc0010I After 3700 nodes, 239 on tree, 250.65245 best solution, best possible 250.65243 (16.16 seconds)
Cbc0010I After 3800 nodes, 225 on tree, 250.65245 best solution, best possible 250.65243 (16.45 seconds)
Cbc0010I After 3900 nodes, 210 on tree, 250.65245 best solution, best possible 250.65243 (16.72 seconds)
Cbc0010I After 4000 nodes, 191 on tree, 250.65245 best solution, best possible 250.65243 (17.00 seconds)
Cbc0010I After 4100 nodes, 169 on tree, 250.65245 best solution, best possible 250.65243 (17.27 seconds)
Cbc0010I After 4200 nodes, 137 on tree, 250.65245 best solution, best possible 250.65243 (17.51 seconds)
Cbc0010I After 4300 nodes, 101 on tree, 250.65245 best solution, best possible 250.65243 (17.76 seconds)
Cbc0010I After 4400 nodes, 61 on tree, 250.65245 best solution, best possible 250.65243 (17.97 seconds)
Cbc0010I After 4500 nodes, 24 on tree, 250.65245 best solution, best possible 250.65243 (18.18 seconds)
Cbc0001I Search completed - best objective 250.6524457426719, took 5164 iterations and 4565 nodes (18.31 seconds)
Cbc0035I Maximum depth 57, 8 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        361
Linearization cuts added in total:            361  (separation time: 0.001901s)
Total solve time:                         18.3146s (18.3146s in branch-and-bound)
Lower bound:                              250.652
Upper bound:                              250.652  (gap: 0.00%)
Branch-and-bound nodes:                      4565
Stats: /tmp/jl_M0KrWQ/model.nl  230 [var]   10 [int]  240 [con]   99 [aux]    361 [root]      361 [tot] 0.001901 [sep]  18.3146 [time]  18.3151 [bb]         2.506524e+02 [lower]         2.506524e+02 [upper]    4565 [nodes]
Performance of                           FBBT:	   0.822532s,     3034 runs. fix:          0 shrnk:    3.63894 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     1.0166s,        9 runs. fix:   0.510638 shrnk:    41.4882 ubd:          0 2ubd:          0 infeas:          1
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-10-20-4.txt
