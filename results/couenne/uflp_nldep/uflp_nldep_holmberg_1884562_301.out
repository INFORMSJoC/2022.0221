solving instance uflp nldep holmberg 31 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 6.0 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 10198.808       81 692.05527
NLP0014I             2         OPT 11134.865       45 3.163255
Loaded instance "/tmp/jl_t6ZL6k/model.nl"
Constraints:         4710
Variables:           4590 (30 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 5100 (-91) rows, 4650 (-299) columns and 18900 (-4919) elements
Clp0006I 0  Obj 0 Primal inf 23479.374 (480)
Clp0006I 177  Obj 4969 Primal inf 378.31867 (201)
Clp0006I 354  Obj 8540.6814 Primal inf 257.58926 (868)
Clp0006I 382  Obj 9209.8814 Primal inf 246.75756 (709)
Clp0006I 524  Obj 10194.5
Clp0000I Optimal - objective value 10194.5
Clp0032I Optimal objective 10194.49971 - 524 iterations time 0.062, Presolve 0.02
Clp0000I Optimal - objective value 10194.5
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 10194.5
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 7 added rows had average density of 2
Cbc0013I At root node, 7 cuts changed objective from 10194.5 to 10194.52 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 7 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (25.68 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 10196.867 (236.10 seconds)
Couenne: new cutoff value 1.0198846441e+04 (943.001 seconds)
Cbc0004I Integer solution of 10198.846 found after 4179 iterations and 168 nodes (240.65 seconds)
Cbc0010I After 200 nodes, 24 on tree, 10198.846 best solution, best possible 10198.734 (244.30 seconds)
Couenne: new cutoff value 1.0198830851e+04 (953.551 seconds)
Cbc0004I Integer solution of 10198.831 found after 5272 iterations and 272 nodes (251.20 seconds)
Cbc0010I After 300 nodes, 15 on tree, 10198.831 best solution, best possible 10198.812 (254.07 seconds)
Cbc0010I After 400 nodes, 11 on tree, 10198.831 best solution, best possible 10198.83 (263.45 seconds)
Cbc0001I Search completed - best objective 10198.83085135985, took 6799 iterations and 482 nodes (268.93 seconds)
Cbc0035I Maximum depth 84, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       5191
Linearization cuts added in total:           5191  (separation time: 0.030998s)
Total solve time:                         269.022s (269.022s in branch-and-bound)
Lower bound:                              10198.8
Upper bound:                              10198.8  (gap: 0.00%)
Branch-and-bound nodes:                       482
Stats: /tmp/jl_t6ZL6k/model.nl 4590 [var]   30 [int] 4710 [con]  359 [aux]   5191 [root]     5191 [tot] 0.030998 [sep]  269.022 [time]  269.028 [bb]         1.019883e+04 [lower]         1.019883e+04 [upper]     482 [nodes]
Performance of                           FBBT:	     6.1668s,      637 runs. fix:          0 shrnk:   0.778539 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    30.4027s,        8 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p31
