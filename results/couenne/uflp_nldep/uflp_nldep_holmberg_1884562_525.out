solving instance uflp nldep holmberg 53 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.0640458825e+04 (1.16831 seconds)
1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5152.9317       29 0.889999
Couenne: new cutoff value 5.1529360649e+03 (2.07717 seconds)
NLP0014I             2         OPT 5152.9317       33 0.680519
Couenne: new cutoff value 5.1529300978e+03 (2.76051 seconds)
Loaded instance "/tmp/jl_fLZ4gr/model.nl"
Constraints:         2140
Variables:           2060 (20 integer)
Auxiliaries:          199 (0 integer)

Coin0506I Presolve 2351 (-30) rows, 2111 (-148) columns and 10521 (-178) elements
Clp0006I 0  Obj 0 Primal inf 937.5819 (140)
Clp0006I 122  Obj 4257 Primal inf 149.65024 (101)
Clp0006I 184  Obj 4929.2176
Clp0000I Optimal - objective value 4929.2176
Clp0032I Optimal objective 4929.217599 - 184 iterations time 0.042, Presolve 0.03
Clp0000I Optimal - objective value 4929.2176
NLP Heuristic: NLP0014I             3         OPT 5152.9317       24 0.690575
no solution.
Clp0000I Optimal - objective value 4929.2176
Optimality Based BT: 29 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 37 added rows had average density of 2
Cbc0013I At root node, 37 cuts changed objective from 4929.2176 to 5048.8703 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 91 row cuts average 2.0 elements, 16 column cuts (16 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (9.36 seconds)
Optimality Based BT: 24 improved bounds
Optimality Based BT: 24 improved bounds
Optimality Based BT: 17 improved bounds
Cbc0010I After 100 nodes, 24 on tree, 1e+50 best solution, best possible 5099.3461 (46.09 seconds)
Optimality Based BT: 28 improved bounds
Cbc0010I After 200 nodes, 42 on tree, 1e+50 best solution, best possible 5137.1823 (72.56 seconds)
Cbc0010I After 300 nodes, 63 on tree, 1e+50 best solution, best possible 5139.5313 (83.96 seconds)
Optimality Based BT: 25 improved bounds
Cbc0010I After 400 nodes, 77 on tree, 1e+50 best solution, best possible 5142.5917 (91.76 seconds)
Optimality Based BT: 25 improved bounds
Cbc0010I After 500 nodes, 86 on tree, 1e+50 best solution, best possible 5144.0705 (98.62 seconds)
Cbc0010I After 600 nodes, 94 on tree, 1e+50 best solution, best possible 5144.6333 (105.26 seconds)
Cbc0010I After 700 nodes, 98 on tree, 1e+50 best solution, best possible 5145.4256 (111.49 seconds)
Cbc0010I After 800 nodes, 98 on tree, 1e+50 best solution, best possible 5146.0055 (117.68 seconds)
Cbc0010I After 900 nodes, 98 on tree, 1e+50 best solution, best possible 5146.6049 (123.48 seconds)
Cbc0010I After 1000 nodes, 96 on tree, 1e+50 best solution, best possible 5147.2942 (129.32 seconds)
Cbc0010I After 1100 nodes, 88 on tree, 1e+50 best solution, best possible 5148.0712 (134.71 seconds)
Cbc0010I After 1200 nodes, 70 on tree, 1e+50 best solution, best possible 5149.3062 (139.64 seconds)
Cbc0010I After 1300 nodes, 30 on tree, 1e+50 best solution, best possible 5151.9779 (144.14 seconds)
Cbc0010I After 1400 nodes, 19 on tree, 1e+50 best solution, best possible 5152.9298 (147.15 seconds)
Cbc0010I After 1500 nodes, 22 on tree, 1e+50 best solution, best possible 5152.9298 (150.01 seconds)
Cbc0010I After 1600 nodes, 29 on tree, 1e+50 best solution, best possible 5152.9298 (153.01 seconds)
Cbc0010I After 1700 nodes, 37 on tree, 1e+50 best solution, best possible 5152.9298 (156.04 seconds)
Cbc0010I After 1800 nodes, 39 on tree, 1e+50 best solution, best possible 5152.9298 (159.08 seconds)
Cbc0010I After 1900 nodes, 39 on tree, 1e+50 best solution, best possible 5152.9298 (162.16 seconds)
Cbc0001I Search completed - best objective 1e+50, took 27059 iterations and 1998 nodes (164.79 seconds)
Cbc0035I Maximum depth 53, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2381
Linearization cuts added in total:           2381  (separation time: 0.015445s)
Total solve time:                         164.832s (164.832s in branch-and-bound)
Lower bound:                              5152.93
Upper bound:                              5152.93  (gap: 0.00%)
Branch-and-bound nodes:                      1998
Stats: /tmp/jl_fLZ4gr/model.nl 2060 [var]   20 [int] 2140 [con]  199 [aux]   2381 [root]     2381 [tot] 0.015445 [sep]  164.832 [time]  164.836 [bb]         5.152930e+03 [lower]         5.152930e+03 [upper]    1998 [nodes]
Performance of                           FBBT:	    9.12972s,     2194 runs. fix:          0 shrnk:     2.4789 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    4.69267s,        7 runs. fix:    1.48148 shrnk:    85.6867 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p53
