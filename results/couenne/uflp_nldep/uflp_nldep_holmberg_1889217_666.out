solving instance uflp nldep holmberg 67 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 9.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 9838.1519       40 372.36504
Couenne: new cutoff value 9.8381408209e+03 (382.108 seconds)
Loaded instance "/tmp/jl_vEFIwV/model.nl"
Constraints:         6260
Variables:           6090 (30 integer)
Auxiliaries:          439 (0 integer)

Coin0506I Presolve 6510 (-111) rows, 6160 (-369) columns and 30679 (-480) elements
Clp0006I 0  Obj 0 Primal inf 3560.3477 (290) Dual inf 9.9079705e+13 (6121)
Clp0029I End of values pass after 100 iterations
Clp0006I 100  Obj 0 Primal inf 582.57645 (200) Dual inf 9.8395374e+13 (6030)
Clp0006I 481  Obj 10157.673 Primal inf 2.8514582 (6) Dual inf 3.7424963e+11 (170)
Clp0006I 632  Obj 8432.8983
Clp0000I Optimal - objective value 8432.8983
Clp0032I Optimal objective 8432.898283 - 632 iterations time 0.072, Presolve 0.03
Clp0000I Optimal - objective value 8432.8983
NLP Heuristic: NLP0014I             2         OPT 9838.1519       13 1.706283
no solution.
Clp0000I Optimal - objective value 8432.8983
Optimality Based BT: 72 improved bounds
Probing: 30 improved bounds
NLP Heuristic: no solution.
Cbc0031I 27 added rows had average density of 2
Cbc0013I At root node, 27 cuts changed objective from 8432.8983 to 9430.207 in 3 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 49 row cuts average 2.0 elements, 3 column cuts (3 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (54.93 seconds)
Optimality Based BT: 72 improved bounds
Optimality Based BT: 110 improved bounds
Cbc0010I After 100 nodes, 26 on tree, 1e+50 best solution, best possible 9749.5027 (296.43 seconds)
Cbc0010I After 200 nodes, 56 on tree, 1e+50 best solution, best possible 9765.0755 (315.70 seconds)
Cbc0010I After 300 nodes, 76 on tree, 1e+50 best solution, best possible 9765.9602 (332.00 seconds)
Optimality Based BT: 112 improved bounds
Cbc0010I After 400 nodes, 108 on tree, 1e+50 best solution, best possible 9768.6656 (360.51 seconds)
Cbc0010I After 500 nodes, 144 on tree, 1e+50 best solution, best possible 9775.7 (428.01 seconds)
Cbc0010I After 600 nodes, 175 on tree, 1e+50 best solution, best possible 9778.3763 (449.78 seconds)
Cbc0010I After 700 nodes, 205 on tree, 1e+50 best solution, best possible 9778.7597 (516.02 seconds)
Cbc0010I After 800 nodes, 240 on tree, 1e+50 best solution, best possible 9781.7991 (536.46 seconds)
Cbc0010I After 900 nodes, 265 on tree, 1e+50 best solution, best possible 9782.6208 (554.92 seconds)
Cbc0010I After 1000 nodes, 292 on tree, 1e+50 best solution, best possible 9785.3069 (575.09 seconds)
Cbc0010I After 1100 nodes, 319 on tree, 1e+50 best solution, best possible 9786.1732 (596.84 seconds)
Cbc0010I After 1200 nodes, 348 on tree, 1e+50 best solution, best possible 9786.6408 (617.18 seconds)
Cbc0010I After 1300 nodes, 375 on tree, 1e+50 best solution, best possible 9786.7499 (637.33 seconds)
Cbc0010I After 1400 nodes, 403 on tree, 1e+50 best solution, best possible 9788.4013 (657.99 seconds)
Cbc0010I After 1500 nodes, 434 on tree, 1e+50 best solution, best possible 9789.3718 (679.21 seconds)
Cbc0010I After 1600 nodes, 469 on tree, 1e+50 best solution, best possible 9790.2751 (745.45 seconds)
Cbc0010I After 1700 nodes, 497 on tree, 1e+50 best solution, best possible 9790.9255 (768.47 seconds)
Cbc0010I After 1800 nodes, 528 on tree, 1e+50 best solution, best possible 9791.8727 (790.18 seconds)
Cbc0010I After 1900 nodes, 555 on tree, 1e+50 best solution, best possible 9792.6713 (811.30 seconds)
Cbc0010I After 2000 nodes, 578 on tree, 1e+50 best solution, best possible 9792.7995 (832.55 seconds)
Cbc0010I After 2100 nodes, 613 on tree, 1e+50 best solution, best possible 9793.2205 (853.67 seconds)
Cbc0010I After 2200 nodes, 643 on tree, 1e+50 best solution, best possible 9793.4277 (878.67 seconds)
Cbc0010I After 2300 nodes, 673 on tree, 1e+50 best solution, best possible 9793.5543 (900.39 seconds)
Cbc0010I After 2400 nodes, 701 on tree, 1e+50 best solution, best possible 9793.9994 (922.78 seconds)
Cbc0010I After 2500 nodes, 724 on tree, 1e+50 best solution, best possible 9794.9717 (943.59 seconds)
Cbc0010I After 2600 nodes, 750 on tree, 1e+50 best solution, best possible 9795.1685 (965.91 seconds)
Cbc0010I After 2700 nodes, 780 on tree, 1e+50 best solution, best possible 9795.501 (987.30 seconds)
Cbc0010I After 2800 nodes, 808 on tree, 1e+50 best solution, best possible 9795.9098 (1010.21 seconds)
Cbc0010I After 2900 nodes, 825 on tree, 1e+50 best solution, best possible 9796.0489 (1027.93 seconds)
Cbc0010I After 3000 nodes, 845 on tree, 1e+50 best solution, best possible 9796.0962 (1045.99 seconds)
Cbc0010I After 3100 nodes, 874 on tree, 1e+50 best solution, best possible 9796.4577 (1068.61 seconds)
Cbc0010I After 3200 nodes, 892 on tree, 1e+50 best solution, best possible 9796.4865 (1086.72 seconds)
Cbc0010I After 3300 nodes, 909 on tree, 1e+50 best solution, best possible 9796.9702 (1104.77 seconds)
Cbc0010I After 3400 nodes, 937 on tree, 1e+50 best solution, best possible 9797.0867 (1125.53 seconds)
Cbc0010I After 3500 nodes, 967 on tree, 1e+50 best solution, best possible 9798.1229 (1146.10 seconds)
Cbc0010I After 3600 nodes, 994 on tree, 1e+50 best solution, best possible 9798.6488 (1169.03 seconds)
Cbc0010I After 3700 nodes, 1019 on tree, 1e+50 best solution, best possible 9798.694 (1188.45 seconds)
Cbc0010I After 3800 nodes, 1036 on tree, 1e+50 best solution, best possible 9798.9802 (1207.00 seconds)
Cbc0010I After 3900 nodes, 1062 on tree, 1e+50 best solution, best possible 9799.1781 (1229.38 seconds)
Cbc0010I After 4000 nodes, 1086 on tree, 1e+50 best solution, best possible 9799.4124 (1249.42 seconds)
Cbc0010I After 4100 nodes, 1106 on tree, 1e+50 best solution, best possible 9799.4598 (1268.59 seconds)
Cbc0010I After 4200 nodes, 1129 on tree, 1e+50 best solution, best possible 9799.9603 (1289.65 seconds)
Cbc0010I After 4300 nodes, 1155 on tree, 1e+50 best solution, best possible 9800.113 (1311.62 seconds)
Cbc0010I After 4400 nodes, 1183 on tree, 1e+50 best solution, best possible 9800.4359 (1335.56 seconds)
Cbc0010I After 4500 nodes, 1211 on tree, 1e+50 best solution, best possible 9800.5419 (1357.87 seconds)
Cbc0010I After 4600 nodes, 1241 on tree, 1e+50 best solution, best possible 9800.7347 (1379.25 seconds)
Cbc0010I After 4700 nodes, 1265 on tree, 1e+50 best solution, best possible 9800.9364 (1401.51 seconds)
Cbc0010I After 4800 nodes, 1288 on tree, 1e+50 best solution, best possible 9801.2827 (1423.25 seconds)
Cbc0010I After 4900 nodes, 1307 on tree, 1e+50 best solution, best possible 9801.513 (1447.50 seconds)
Cbc0010I After 5000 nodes, 1328 on tree, 1e+50 best solution, best possible 9801.9137 (1468.82 seconds)
Cbc0010I After 5100 nodes, 1355 on tree, 1e+50 best solution, best possible 9802.0314 (1491.79 seconds)
Cbc0010I After 5200 nodes, 1375 on tree, 1e+50 best solution, best possible 9802.1759 (1514.27 seconds)
Cbc0010I After 5300 nodes, 1403 on tree, 1e+50 best solution, best possible 9802.302 (1537.85 seconds)
Cbc0010I After 5400 nodes, 1423 on tree, 1e+50 best solution, best possible 9802.6047 (1561.01 seconds)
Cbc0010I After 5500 nodes, 1445 on tree, 1e+50 best solution, best possible 9802.7453 (1582.92 seconds)
Cbc0010I After 5600 nodes, 1470 on tree, 1e+50 best solution, best possible 9802.8745 (1604.27 seconds)
Cbc0010I After 5700 nodes, 1495 on tree, 1e+50 best solution, best possible 9803.1172 (1625.32 seconds)
Cbc0010I After 5800 nodes, 1512 on tree, 1e+50 best solution, best possible 9803.2401 (1647.65 seconds)
Cbc0010I After 5900 nodes, 1534 on tree, 1e+50 best solution, best possible 9803.3803 (1669.04 seconds)
Cbc0010I After 6000 nodes, 1550 on tree, 1e+50 best solution, best possible 9803.6079 (1689.95 seconds)
Cbc0010I After 6100 nodes, 1575 on tree, 1e+50 best solution, best possible 9803.6938 (1714.71 seconds)
Cbc0010I After 6200 nodes, 1591 on tree, 1e+50 best solution, best possible 9803.777 (1736.81 seconds)
Cbc0010I After 6300 nodes, 1621 on tree, 1e+50 best solution, best possible 9803.8589 (1760.83 seconds)
Cbc0010I After 6400 nodes, 1647 on tree, 1e+50 best solution, best possible 9803.9384 (1782.83 seconds)
Cbc0010I After 6500 nodes, 1667 on tree, 1e+50 best solution, best possible 9803.9944 (1806.24 seconds)
Cbc0010I After 6600 nodes, 1684 on tree, 1e+50 best solution, best possible 9804.223 (1828.90 seconds)
Cbc0010I After 6700 nodes, 1707 on tree, 1e+50 best solution, best possible 9804.517 (1852.86 seconds)
Cbc0010I After 6800 nodes, 1726 on tree, 1e+50 best solution, best possible 9804.6642 (1873.91 seconds)
Cbc0010I After 6900 nodes, 1752 on tree, 1e+50 best solution, best possible 9804.8485 (1895.60 seconds)
Cbc0010I After 7000 nodes, 1772 on tree, 1e+50 best solution, best possible 9804.9301 (1915.60 seconds)
Cbc0010I After 7100 nodes, 1792 on tree, 1e+50 best solution, best possible 9804.9814 (1936.75 seconds)
Cbc0010I After 7200 nodes, 1811 on tree, 1e+50 best solution, best possible 9805.1692 (1958.25 seconds)
Cbc0010I After 7300 nodes, 1832 on tree, 1e+50 best solution, best possible 9805.2478 (1980.18 seconds)
Cbc0010I After 7400 nodes, 1856 on tree, 1e+50 best solution, best possible 9805.4064 (2001.63 seconds)
Cbc0010I After 7500 nodes, 1885 on tree, 1e+50 best solution, best possible 9805.441 (2024.11 seconds)
Cbc0010I After 7600 nodes, 1910 on tree, 1e+50 best solution, best possible 9805.5106 (2046.82 seconds)
Cbc0010I After 7700 nodes, 1932 on tree, 1e+50 best solution, best possible 9805.6553 (2070.99 seconds)
Cbc0010I After 7800 nodes, 1949 on tree, 1e+50 best solution, best possible 9805.7254 (2093.02 seconds)
Cbc0010I After 7900 nodes, 1965 on tree, 1e+50 best solution, best possible 9805.8905 (2115.12 seconds)
Cbc0010I After 8000 nodes, 1983 on tree, 1e+50 best solution, best possible 9805.9886 (2136.17 seconds)
Cbc0010I After 8100 nodes, 2013 on tree, 1e+50 best solution, best possible 9806.185 (2158.14 seconds)
Cbc0010I After 8200 nodes, 2028 on tree, 1e+50 best solution, best possible 9806.257 (2180.35 seconds)
Cbc0010I After 8300 nodes, 2047 on tree, 1e+50 best solution, best possible 9806.3753 (2201.85 seconds)
Cbc0010I After 8400 nodes, 2074 on tree, 1e+50 best solution, best possible 9806.4826 (2224.34 seconds)
Cbc0010I After 8500 nodes, 2096 on tree, 1e+50 best solution, best possible 9806.7576 (2245.90 seconds)
Cbc0010I After 8600 nodes, 2122 on tree, 1e+50 best solution, best possible 9807.1439 (2269.14 seconds)
Cbc0010I After 8700 nodes, 2143 on tree, 1e+50 best solution, best possible 9807.2438 (2292.90 seconds)
Cbc0010I After 8800 nodes, 2157 on tree, 1e+50 best solution, best possible 9807.3799 (2313.37 seconds)
Cbc0010I After 8900 nodes, 2176 on tree, 1e+50 best solution, best possible 9807.5486 (2334.29 seconds)
Cbc0010I After 9000 nodes, 2195 on tree, 1e+50 best solution, best possible 9807.6193 (2355.64 seconds)
Cbc0010I After 9100 nodes, 2212 on tree, 1e+50 best solution, best possible 9807.6805 (2376.55 seconds)
Cbc0010I After 9200 nodes, 2224 on tree, 1e+50 best solution, best possible 9807.7881 (2397.51 seconds)
Cbc0010I After 9300 nodes, 2242 on tree, 1e+50 best solution, best possible 9807.8441 (2419.96 seconds)
Cbc0010I After 9400 nodes, 2260 on tree, 1e+50 best solution, best possible 9807.9031 (2441.80 seconds)
Cbc0010I After 9500 nodes, 2279 on tree, 1e+50 best solution, best possible 9808.0056 (2462.65 seconds)
Cbc0010I After 9600 nodes, 2299 on tree, 1e+50 best solution, best possible 9808.1149 (2486.94 seconds)
Cbc0010I After 9700 nodes, 2318 on tree, 1e+50 best solution, best possible 9808.2533 (2511.50 seconds)
Cbc0010I After 9800 nodes, 2336 on tree, 1e+50 best solution, best possible 9808.3705 (2532.08 seconds)
Cbc0010I After 9900 nodes, 2356 on tree, 1e+50 best solution, best possible 9808.4287 (2553.40 seconds)
Cbc0010I After 10000 nodes, 2375 on tree, 1e+50 best solution, best possible 9808.489 (2575.90 seconds)
Cbc0010I After 10100 nodes, 2390 on tree, 1e+50 best solution, best possible 9808.5562 (2598.01 seconds)
Cbc0010I After 10200 nodes, 2408 on tree, 1e+50 best solution, best possible 9808.733 (2619.71 seconds)
Cbc0010I After 10300 nodes, 2420 on tree, 1e+50 best solution, best possible 9808.8424 (2641.74 seconds)
Cbc0010I After 10400 nodes, 2439 on tree, 1e+50 best solution, best possible 9808.8892 (2663.67 seconds)
Cbc0010I After 10500 nodes, 2457 on tree, 1e+50 best solution, best possible 9808.9799 (2685.17 seconds)
Cbc0010I After 10600 nodes, 2471 on tree, 1e+50 best solution, best possible 9809.0849 (2706.18 seconds)
Cbc0010I After 10700 nodes, 2486 on tree, 1e+50 best solution, best possible 9809.1159 (2727.15 seconds)
Cbc0010I After 10800 nodes, 2497 on tree, 1e+50 best solution, best possible 9809.1847 (2747.60 seconds)
Cbc0010I After 10900 nodes, 2512 on tree, 1e+50 best solution, best possible 9809.2492 (2768.83 seconds)
Cbc0010I After 11000 nodes, 2531 on tree, 1e+50 best solution, best possible 9809.3349 (2790.22 seconds)
Cbc0010I After 11100 nodes, 2543 on tree, 1e+50 best solution, best possible 9809.3792 (2809.32 seconds)
Cbc0010I After 11200 nodes, 2556 on tree, 1e+50 best solution, best possible 9809.4521 (2829.54 seconds)
Cbc0010I After 11300 nodes, 2577 on tree, 1e+50 best solution, best possible 9809.4824 (2852.01 seconds)
Optimality Based BT: 100 improved bounds
Cbc0010I After 11400 nodes, 2594 on tree, 1e+50 best solution, best possible 9809.5859 (2877.08 seconds)
Cbc0010I After 11500 nodes, 2610 on tree, 1e+50 best solution, best possible 9809.6329 (2897.96 seconds)
Cbc0010I After 11600 nodes, 2622 on tree, 1e+50 best solution, best possible 9809.675 (2917.90 seconds)
Cbc0010I After 11700 nodes, 2640 on tree, 1e+50 best solution, best possible 9809.799 (2938.65 seconds)
Cbc0010I After 11800 nodes, 2665 on tree, 1e+50 best solution, best possible 9809.8733 (2960.83 seconds)
Cbc0010I After 11900 nodes, 2679 on tree, 1e+50 best solution, best possible 9809.9354 (2981.27 seconds)
Cbc0010I After 12000 nodes, 2693 on tree, 1e+50 best solution, best possible 9810.0355 (3001.72 seconds)
Cbc0010I After 12100 nodes, 2711 on tree, 1e+50 best solution, best possible 9810.1494 (3022.46 seconds)
Cbc0010I After 12200 nodes, 2724 on tree, 1e+50 best solution, best possible 9810.2649 (3041.70 seconds)
Cbc0010I After 12300 nodes, 2738 on tree, 1e+50 best solution, best possible 9810.3295 (3061.08 seconds)
Cbc0010I After 12400 nodes, 2753 on tree, 1e+50 best solution, best possible 9810.4108 (3081.28 seconds)
Cbc0010I After 12500 nodes, 2765 on tree, 1e+50 best solution, best possible 9810.5272 (3101.98 seconds)
Cbc0010I After 12600 nodes, 2782 on tree, 1e+50 best solution, best possible 9810.5716 (3124.35 seconds)
Cbc0010I After 12700 nodes, 2800 on tree, 1e+50 best solution, best possible 9810.6659 (3142.57 seconds)
Cbc0010I After 12800 nodes, 2818 on tree, 1e+50 best solution, best possible 9810.7541 (3160.60 seconds)
Cbc0010I After 12900 nodes, 2834 on tree, 1e+50 best solution, best possible 9810.7916 (3179.19 seconds)
Optimality Based BT: 99 improved bounds
Cbc0010I After 13000 nodes, 2851 on tree, 1e+50 best solution, best possible 9810.8456 (3201.17 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 9810.8456), took 155695 iterations and 13098 nodes (3223.72 seconds)
Cbc0035I Maximum depth 58, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       6621
Linearization cuts added in total:           6621  (separation time: 0.06903s)
Total solve time:                          3223.8s (3223.8s in branch-and-bound)
Lower bound:                              9810.85
Upper bound:                              9838.14  (gap: 0.28%)
Branch-and-bound nodes:                     13098
Stats: /tmp/jl_vEFIwV/model.nl 6090 [var]   30 [int] 6260 [con]  439 [aux]   6621 [root]     6621 [tot] 0.06903 [sep]   3223.8 [time]  3223.81 [bb]         9.810846e+03 [lower]         9.838141e+03 [upper]   13098 [nodes]
Performance of                           FBBT:	    331.402s,    20485 runs. fix:          0 shrnk:   0.955518 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    29.6786s,        6 runs. fix:    1.57911 shrnk:    279.871 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p67
