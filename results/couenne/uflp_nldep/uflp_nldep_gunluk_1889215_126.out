solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-2.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 265.65262       54 2.475038
NLP0014I             2         OPT 266.89283       53 0.462076
Couenne: new cutoff value 2.6689289347e+02 (3.21678 seconds)
Loaded instance "/tmp/jl_9IAE9k/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          199 (0 integer)

Coin0506I Presolve 1039 (-82) rows, 899 (-160) columns and 4437 (-242) elements
Clp0006I 0  Obj -74.352139 Primal inf 1889.008 (99)
Clp0006I 95  Obj 110.84702 Primal inf 129.75707 (69)
Clp0006I 168  Obj 217.19694
Clp0000I Optimal - objective value 217.19694
Clp0032I Optimal objective 217.1969396 - 168 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 217.19694
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 217.19694
Optimality Based BT: 42 improved bounds
Probing: 19 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 217.19694 to 258.31609 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 33 row cuts average 2.0 elements, 5 column cuts (5 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.78 seconds)
Optimality Based BT: 35 improved bounds
Optimality Based BT: 39 improved bounds
Optimality Based BT: 29 improved bounds
Optimality Based BT: 32 improved bounds
Optimality Based BT: 31 improved bounds
Cbc0010I After 100 nodes, 39 on tree, 1e+50 best solution, best possible 260.72302 (16.36 seconds)
Cbc0010I After 200 nodes, 86 on tree, 1e+50 best solution, best possible 260.72302 (17.95 seconds)
Couenne: new cutoff value 2.6587087120e+02 (22.172 seconds)
Cbc0004I Integer solution of 265.87087 found after 1136 iterations and 272 nodes (18.95 seconds)
Optimality Based BT: 30 improved bounds
Optimality Based BT: 35 improved bounds
Cbc0010I After 300 nodes, 29 on tree, 265.87087 best solution, best possible 261.94395 (28.73 seconds)
Cbc0010I After 400 nodes, 48 on tree, 265.87087 best solution, best possible 263.91293 (33.92 seconds)
Cbc0010I After 500 nodes, 80 on tree, 265.87087 best solution, best possible 264.30797 (36.06 seconds)
Cbc0010I After 600 nodes, 125 on tree, 265.87087 best solution, best possible 264.30797 (37.56 seconds)
Couenne: new cutoff value 2.6573382465e+02 (41.6075 seconds)
Cbc0010I After 700 nodes, 156 on tree, 265.87087 best solution, best possible 264.43141 (39.28 seconds)
Cbc0010I After 800 nodes, 176 on tree, 265.87087 best solution, best possible 264.57266 (41.46 seconds)
Cbc0010I After 900 nodes, 213 on tree, 265.87087 best solution, best possible 264.57266 (42.91 seconds)
Couenne: new cutoff value 2.6570217929e+02 (46.8212 seconds)
Cbc0004I Integer solution of 265.70219 found after 4822 iterations and 947 nodes (43.59 seconds)
Cbc0010I After 1000 nodes, 75 on tree, 265.70219 best solution, best possible 264.73079 (44.84 seconds)
Cbc0010I After 1100 nodes, 78 on tree, 265.70219 best solution, best possible 264.9616 (46.91 seconds)
Cbc0010I After 1200 nodes, 61 on tree, 265.70219 best solution, best possible 265.22026 (48.98 seconds)
Couenne: new cutoff value 2.6570176613e+02 (53.6861 seconds)
Cbc0004I Integer solution of 265.70177 found after 7996 iterations and 1298 nodes (50.45 seconds)
Cbc0010I After 1300 nodes, 64 on tree, 265.70177 best solution, best possible 265.25629 (50.50 seconds)
Cbc0010I After 1400 nodes, 29 on tree, 265.70177 best solution, best possible 265.56071 (52.03 seconds)
Cbc0010I After 1500 nodes, 11 on tree, 265.70177 best solution, best possible 265.70172 (53.18 seconds)
Couenne: new cutoff value 2.6570176100e+02 (57.2357 seconds)
Cbc0004I Integer solution of 265.70176 found after 9499 iterations and 1566 nodes (54.02 seconds)
Cbc0001I Search completed - best objective 265.7017618303011, took 9503 iterations and 1568 nodes (54.06 seconds)
Cbc0035I Maximum depth 136, 431 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1121
Linearization cuts added in total:           1121  (separation time: 0.005364s)
Total solve time:                         54.0708s (54.0708s in branch-and-bound)
Lower bound:                              265.702
Upper bound:                              265.702  (gap: 0.00%)
Branch-and-bound nodes:                      1568
Stats: /tmp/jl_9IAE9k/model.nl  860 [var]   20 [int]  880 [con]  199 [aux]   1121 [root]     1121 [tot] 0.005364 [sep]  54.0708 [time]  54.0727 [bb]         2.657018e+02 [lower]         2.657018e+02 [upper]    1568 [nodes]
Performance of                           FBBT:	    2.13921s,     1683 runs. fix:   0.116107 shrnk:    7.83432 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.11869s,        8 runs. fix:    1.22388 shrnk:    96.4514 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-2.txt
