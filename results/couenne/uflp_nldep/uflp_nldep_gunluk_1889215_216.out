solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-1.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 321.39575       50 23.160685
NLP0014I             2         OPT 322.24177       38 0.815015
Couenne: new cutoff value 3.2224172157e+02 (24.9503 seconds)
Loaded instance "/tmp/jl_5BrJ4p/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          299 (0 integer)

Coin0506I Presolve 2159 (-122) rows, 1949 (-240) columns and 9657 (-362) elements
Clp0006I 0  Obj -145.85454 Primal inf 184.55883 (149)
Clp0006I 118  Obj -145.85454 Primal inf 67.03057 (119)
Clp0006I 236  Obj 166.93404 Primal inf 12.546141 (45)
Clp0006I 278  Obj 249.11524
Clp0000I Optimal - objective value 249.11524
Clp0032I Optimal objective 249.1152352 - 278 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 249.11524
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 249.11524
Optimality Based BT: 59 improved bounds
Probing: 30 improved bounds
NLP Heuristic: no solution.
Cbc0031I 29 added rows had average density of 2
Cbc0013I At root node, 29 cuts changed objective from 249.11524 to 307.63032 in 12 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 68 row cuts average 2.0 elements, 13 column cuts (13 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.19 seconds)
Optimality Based BT: 46 improved bounds
Optimality Based BT: 51 improved bounds
Optimality Based BT: 45 improved bounds
Optimality Based BT: 48 improved bounds
Optimality Based BT: 44 improved bounds
Cbc0010I After 100 nodes, 37 on tree, 1e+50 best solution, best possible 317.20491 (59.23 seconds)
Cbc0010I After 200 nodes, 72 on tree, 1e+50 best solution, best possible 317.20491 (62.89 seconds)
Cbc0010I After 300 nodes, 110 on tree, 1e+50 best solution, best possible 317.20491 (66.38 seconds)
Cbc0010I After 400 nodes, 159 on tree, 1e+50 best solution, best possible 317.20491 (70.19 seconds)
Couenne: new cutoff value 3.2180395116e+02 (97.9062 seconds)
Cbc0004I Integer solution of 321.80396 found after 2353 iterations and 475 nodes (72.90 seconds)
Optimality Based BT: 50 improved bounds
Cbc0010I After 500 nodes, 49 on tree, 321.80396 best solution, best possible 317.91136 (87.50 seconds)
Cbc0010I After 600 nodes, 79 on tree, 321.80396 best solution, best possible 317.91136 (91.77 seconds)
Cbc0010I After 700 nodes, 112 on tree, 321.80396 best solution, best possible 317.91136 (95.32 seconds)
Cbc0010I After 800 nodes, 153 on tree, 321.80396 best solution, best possible 317.91136 (98.94 seconds)
Cbc0010I After 900 nodes, 202 on tree, 321.80396 best solution, best possible 317.91136 (102.89 seconds)
Couenne: new cutoff value 3.2143654044e+02 (129.06 seconds)
Cbc0004I Integer solution of 321.43656 found after 4378 iterations and 934 nodes (104.05 seconds)
Cbc0010I After 1000 nodes, 84 on tree, 321.43656 best solution, best possible 318.32553 (107.29 seconds)
Cbc0010I After 1100 nodes, 104 on tree, 321.43656 best solution, best possible 318.41837 (111.42 seconds)
Cbc0010I After 1200 nodes, 124 on tree, 321.43656 best solution, best possible 318.48359 (115.64 seconds)
Cbc0010I After 1300 nodes, 144 on tree, 321.43656 best solution, best possible 318.55174 (121.67 seconds)
Cbc0010I After 1400 nodes, 160 on tree, 321.43656 best solution, best possible 318.81358 (131.47 seconds)
Cbc0010I After 1500 nodes, 177 on tree, 321.43656 best solution, best possible 319.09929 (136.82 seconds)
Cbc0010I After 1600 nodes, 195 on tree, 321.43656 best solution, best possible 319.15503 (141.07 seconds)
Cbc0010I After 1700 nodes, 211 on tree, 321.43656 best solution, best possible 319.18801 (145.55 seconds)
Cbc0010I After 1800 nodes, 227 on tree, 321.43656 best solution, best possible 319.3187 (150.25 seconds)
Cbc0010I After 1900 nodes, 241 on tree, 321.43656 best solution, best possible 319.34438 (155.09 seconds)
Cbc0010I After 2000 nodes, 259 on tree, 321.43656 best solution, best possible 319.43592 (159.68 seconds)
Cbc0010I After 2100 nodes, 270 on tree, 321.43656 best solution, best possible 319.48311 (163.96 seconds)
Cbc0010I After 2200 nodes, 284 on tree, 321.43656 best solution, best possible 319.52011 (168.14 seconds)
Cbc0010I After 2300 nodes, 299 on tree, 321.43656 best solution, best possible 319.61256 (173.19 seconds)
Optimality Based BT: 55 improved bounds
Optimality Based BT: 57 improved bounds
Cbc0010I After 2400 nodes, 315 on tree, 321.43656 best solution, best possible 319.65554 (190.80 seconds)
Cbc0010I After 2500 nodes, 328 on tree, 321.43656 best solution, best possible 319.71267 (196.31 seconds)
Cbc0010I After 2600 nodes, 345 on tree, 321.43656 best solution, best possible 319.76566 (200.82 seconds)
Cbc0010I After 2700 nodes, 353 on tree, 321.43656 best solution, best possible 319.8223 (205.09 seconds)
Cbc0010I After 2800 nodes, 359 on tree, 321.43656 best solution, best possible 319.84941 (209.50 seconds)
Cbc0010I After 2900 nodes, 369 on tree, 321.43656 best solution, best possible 319.8968 (214.63 seconds)
Cbc0010I After 3000 nodes, 377 on tree, 321.43656 best solution, best possible 319.9676 (219.40 seconds)
Cbc0010I After 3100 nodes, 389 on tree, 321.43656 best solution, best possible 320.01359 (224.68 seconds)
Cbc0010I After 3200 nodes, 396 on tree, 321.43656 best solution, best possible 320.06086 (229.51 seconds)
Cbc0010I After 3300 nodes, 406 on tree, 321.43656 best solution, best possible 320.07724 (233.58 seconds)
Cbc0010I After 3400 nodes, 413 on tree, 321.43656 best solution, best possible 320.09389 (237.78 seconds)
Cbc0010I After 3500 nodes, 417 on tree, 321.43656 best solution, best possible 320.14779 (241.79 seconds)
Cbc0010I After 3600 nodes, 424 on tree, 321.43656 best solution, best possible 320.16978 (246.27 seconds)
Cbc0010I After 3700 nodes, 437 on tree, 321.43656 best solution, best possible 320.19717 (250.89 seconds)
Cbc0010I After 3800 nodes, 447 on tree, 321.43656 best solution, best possible 320.22223 (255.75 seconds)
Cbc0010I After 3900 nodes, 446 on tree, 321.43656 best solution, best possible 320.29725 (260.11 seconds)
Cbc0010I After 4000 nodes, 453 on tree, 321.43656 best solution, best possible 320.32256 (264.62 seconds)
Cbc0010I After 4100 nodes, 455 on tree, 321.43656 best solution, best possible 320.36763 (269.05 seconds)
Cbc0010I After 4200 nodes, 456 on tree, 321.43656 best solution, best possible 320.38778 (273.60 seconds)
Cbc0010I After 4300 nodes, 461 on tree, 321.43656 best solution, best possible 320.41015 (277.96 seconds)
Cbc0010I After 4400 nodes, 462 on tree, 321.43656 best solution, best possible 320.43277 (282.26 seconds)
Cbc0010I After 4500 nodes, 462 on tree, 321.43656 best solution, best possible 320.4532 (286.78 seconds)
Cbc0010I After 4600 nodes, 467 on tree, 321.43656 best solution, best possible 320.47388 (291.27 seconds)
Cbc0010I After 4700 nodes, 466 on tree, 321.43656 best solution, best possible 320.49773 (296.05 seconds)
Cbc0010I After 4800 nodes, 467 on tree, 321.43656 best solution, best possible 320.52375 (300.46 seconds)
Cbc0010I After 4900 nodes, 470 on tree, 321.43656 best solution, best possible 320.54748 (305.11 seconds)
Cbc0010I After 5000 nodes, 474 on tree, 321.43656 best solution, best possible 320.56286 (309.68 seconds)
Cbc0010I After 5100 nodes, 473 on tree, 321.43656 best solution, best possible 320.58082 (313.86 seconds)
Cbc0010I After 5200 nodes, 468 on tree, 321.43656 best solution, best possible 320.60571 (318.09 seconds)
Cbc0010I After 5300 nodes, 469 on tree, 321.43656 best solution, best possible 320.61237 (322.23 seconds)
Cbc0010I After 5400 nodes, 470 on tree, 321.43656 best solution, best possible 320.6438 (326.80 seconds)
Cbc0010I After 5500 nodes, 468 on tree, 321.43656 best solution, best possible 320.67158 (331.36 seconds)
Cbc0010I After 5600 nodes, 461 on tree, 321.43656 best solution, best possible 320.69305 (335.28 seconds)
Cbc0010I After 5700 nodes, 460 on tree, 321.43656 best solution, best possible 320.71864 (339.61 seconds)
Cbc0010I After 5800 nodes, 451 on tree, 321.43656 best solution, best possible 320.74579 (344.16 seconds)
Cbc0010I After 5900 nodes, 452 on tree, 321.43656 best solution, best possible 320.75239 (348.66 seconds)
Cbc0010I After 6000 nodes, 442 on tree, 321.43656 best solution, best possible 320.77209 (353.08 seconds)
Cbc0010I After 6100 nodes, 435 on tree, 321.43656 best solution, best possible 320.78514 (357.70 seconds)
Cbc0010I After 6200 nodes, 429 on tree, 321.43656 best solution, best possible 320.80004 (362.12 seconds)
Cbc0010I After 6300 nodes, 416 on tree, 321.43656 best solution, best possible 320.82537 (366.45 seconds)
Cbc0010I After 6400 nodes, 409 on tree, 321.43656 best solution, best possible 320.8393 (370.59 seconds)
Cbc0010I After 6500 nodes, 400 on tree, 321.43656 best solution, best possible 320.8542 (374.91 seconds)
Cbc0010I After 6600 nodes, 390 on tree, 321.43656 best solution, best possible 320.86639 (378.97 seconds)
Cbc0010I After 6700 nodes, 377 on tree, 321.43656 best solution, best possible 320.87622 (383.11 seconds)
Cbc0010I After 6800 nodes, 361 on tree, 321.43656 best solution, best possible 320.89166 (387.27 seconds)
Cbc0010I After 6900 nodes, 344 on tree, 321.43656 best solution, best possible 320.90609 (391.43 seconds)
Cbc0010I After 7000 nodes, 320 on tree, 321.43656 best solution, best possible 320.92917 (395.67 seconds)
Cbc0010I After 7100 nodes, 300 on tree, 321.43656 best solution, best possible 320.94524 (399.81 seconds)
Cbc0010I After 7200 nodes, 278 on tree, 321.43656 best solution, best possible 320.96976 (403.62 seconds)
Cbc0010I After 7300 nodes, 265 on tree, 321.43656 best solution, best possible 320.99386 (407.74 seconds)
Cbc0010I After 7400 nodes, 244 on tree, 321.43656 best solution, best possible 321.0128 (411.94 seconds)
Cbc0010I After 7500 nodes, 223 on tree, 321.43656 best solution, best possible 321.04264 (415.86 seconds)
Cbc0010I After 7600 nodes, 195 on tree, 321.43656 best solution, best possible 321.07479 (419.87 seconds)
Cbc0010I After 7700 nodes, 162 on tree, 321.43656 best solution, best possible 321.14947 (423.78 seconds)
Cbc0010I After 7800 nodes, 121 on tree, 321.43656 best solution, best possible 321.23727 (427.39 seconds)
Cbc0010I After 7900 nodes, 76 on tree, 321.43656 best solution, best possible 321.30845 (430.87 seconds)
Cbc0010I After 8000 nodes, 26 on tree, 321.43656 best solution, best possible 321.41179 (433.20 seconds)
Couenne: new cutoff value 3.2143653940e+02 (459.735 seconds)
Cbc0001I Search completed - best objective 321.4365561760634, took 86346 iterations and 8075 nodes (435.01 seconds)
Cbc0035I Maximum depth 237, 1527 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2281
Linearization cuts added in total:           2281  (separation time: 0.016758s)
Total solve time:                         435.048s (435.048s in branch-and-bound)
Lower bound:                              321.437
Upper bound:                              321.437  (gap: 0.00%)
Branch-and-bound nodes:                      8075
Stats: /tmp/jl_5BrJ4p/model.nl 1890 [var]   30 [int] 1920 [con]  299 [aux]   2281 [root]     2281 [tot] 0.016758 [sep]  435.048 [time]  435.052 [bb]         3.214365e+02 [lower]         3.214365e+02 [upper]    8075 [nodes]
Performance of                           FBBT:	     30.996s,     9638 runs. fix:  0.0437014 shrnk:    3.34726 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     18.285s,        9 runs. fix:   0.285714 shrnk:    197.642 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-1.txt
