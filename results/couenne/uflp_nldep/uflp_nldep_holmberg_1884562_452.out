solving instance uflp nldep holmberg 46 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.1096000000e+04 (1.2535 seconds)
1.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 3371.8922       45 1.628123
NLP0014I             2         OPT 3815.0975       32 0.980404
Loaded instance "/tmp/jl_LtbV9V/model.nl"
Constraints:         2230
Variables:           2190 (30 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 2470 (-1) rows, 2250 (-99) columns and 11189 (-100) elements
Clp0006I 0  Obj -33809.062 Primal inf 1009012.2 (100)
Clp0006I 124  Obj -28854.72 Primal inf 12420810 (252)
Clp0006I 248  Obj -60.646719 Primal inf 5306.7254 (72)
Clp0006I 372  Obj 1499.6925 Primal inf 4539.7619 (64)
Clp0006I 453  Obj 2429.619
Clp0000I Optimal - objective value 2429.619
Clp0032I Optimal objective 2429.619027 - 453 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 2429.619
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 2429.619
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 11 added rows had average density of 2
Cbc0013I At root node, 11 cuts changed objective from 2429.619 to 2439.1956 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 78 row cuts average 2.0 elements, 392 column cuts (392 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (5.21 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 5.5712891843e+03 (52.4159 seconds)
Couenne: new cutoff value 3.6344408348e+03 (59.026 seconds)
Cbc0010I After 100 nodes, 27 on tree, 1e+50 best solution, best possible 2602.6553 (59.94 seconds)
Cbc0010I After 200 nodes, 77 on tree, 1e+50 best solution, best possible 2602.6553 (65.20 seconds)
Cbc0010I After 300 nodes, 127 on tree, 1e+50 best solution, best possible 2602.6553 (69.17 seconds)
Couenne: new cutoff value 3.3978977361e+03 (74.0776 seconds)
Cbc0010I After 400 nodes, 145 on tree, 1e+50 best solution, best possible 2714.6947 (73.70 seconds)
Cbc0010I After 500 nodes, 167 on tree, 1e+50 best solution, best possible 2764.0751 (78.68 seconds)
Cbc0010I After 600 nodes, 178 on tree, 1e+50 best solution, best possible 2813.7211 (83.21 seconds)
Cbc0010I After 700 nodes, 202 on tree, 1e+50 best solution, best possible 2813.7211 (89.41 seconds)
Cbc0010I After 800 nodes, 242 on tree, 1e+50 best solution, best possible 2813.7211 (93.93 seconds)
Couenne: new cutoff value 3.3919633687e+03 (100.471 seconds)
Cbc0010I After 900 nodes, 272 on tree, 1e+50 best solution, best possible 2835.0253 (98.15 seconds)
Cbc0010I After 1000 nodes, 288 on tree, 1e+50 best solution, best possible 2856.249 (102.65 seconds)
Cbc0010I After 1100 nodes, 303 on tree, 1e+50 best solution, best possible 2868.9292 (106.97 seconds)
Cbc0010I After 1200 nodes, 337 on tree, 1e+50 best solution, best possible 2868.9292 (111.58 seconds)
Couenne: new cutoff value 3.3773305237e+03 (119.227 seconds)
Cbc0010I After 1300 nodes, 380 on tree, 1e+50 best solution, best possible 2870.7408 (115.48 seconds)
Cbc0010I After 1400 nodes, 391 on tree, 1e+50 best solution, best possible 2889.7874 (119.48 seconds)
Cbc0010I After 1500 nodes, 410 on tree, 1e+50 best solution, best possible 2959.8917 (123.93 seconds)
Cbc0010I After 1600 nodes, 420 on tree, 1e+50 best solution, best possible 2961.7385 (128.68 seconds)
Cbc0010I After 1700 nodes, 426 on tree, 1e+50 best solution, best possible 2984.0005 (133.66 seconds)
Cbc0010I After 1800 nodes, 439 on tree, 1e+50 best solution, best possible 2994.1201 (138.32 seconds)
Cbc0010I After 1900 nodes, 450 on tree, 1e+50 best solution, best possible 2999.2325 (142.76 seconds)
Cbc0010I After 2000 nodes, 474 on tree, 1e+50 best solution, best possible 2999.9261 (147.66 seconds)
Cbc0010I After 2100 nodes, 506 on tree, 1e+50 best solution, best possible 2999.9261 (151.97 seconds)
Couenne: new cutoff value 3.3732856260e+03 (158.732 seconds)
Cbc0010I After 2200 nodes, 540 on tree, 1e+50 best solution, best possible 3000.7447 (156.11 seconds)
Cbc0010I After 2300 nodes, 552 on tree, 1e+50 best solution, best possible 3002.4028 (160.61 seconds)
Cbc0010I After 2400 nodes, 571 on tree, 1e+50 best solution, best possible 3003.1564 (165.46 seconds)
Cbc0010I After 2500 nodes, 581 on tree, 1e+50 best solution, best possible 3006.7923 (169.91 seconds)
Cbc0010I After 2600 nodes, 598 on tree, 1e+50 best solution, best possible 3008.9805 (174.57 seconds)
Cbc0010I After 2700 nodes, 615 on tree, 1e+50 best solution, best possible 3024.5475 (179.09 seconds)
Cbc0010I After 2800 nodes, 625 on tree, 1e+50 best solution, best possible 3027.7269 (183.60 seconds)
Cbc0010I After 2900 nodes, 636 on tree, 1e+50 best solution, best possible 3034.7535 (188.16 seconds)
Cbc0010I After 3000 nodes, 645 on tree, 1e+50 best solution, best possible 3044.4052 (194.14 seconds)
Cbc0010I After 3100 nodes, 652 on tree, 1e+50 best solution, best possible 3057.3724 (198.39 seconds)
Cbc0010I After 3200 nodes, 664 on tree, 1e+50 best solution, best possible 3059.8953 (203.05 seconds)
Cbc0010I After 3300 nodes, 669 on tree, 1e+50 best solution, best possible 3062.3976 (207.31 seconds)
Cbc0010I After 3400 nodes, 679 on tree, 1e+50 best solution, best possible 3068.172 (211.80 seconds)
Cbc0010I After 3500 nodes, 690 on tree, 1e+50 best solution, best possible 3078.736 (216.30 seconds)
Cbc0010I After 3600 nodes, 702 on tree, 1e+50 best solution, best possible 3081.5174 (220.99 seconds)
Cbc0010I After 3700 nodes, 716 on tree, 1e+50 best solution, best possible 3082.5885 (225.51 seconds)
Cbc0010I After 3800 nodes, 725 on tree, 1e+50 best solution, best possible 3083.9785 (229.83 seconds)
Cbc0010I After 3900 nodes, 740 on tree, 1e+50 best solution, best possible 3088.0441 (234.36 seconds)
Cbc0010I After 4000 nodes, 752 on tree, 1e+50 best solution, best possible 3090.4686 (238.84 seconds)
Cbc0010I After 4100 nodes, 754 on tree, 1e+50 best solution, best possible 3092.5265 (242.76 seconds)
Cbc0010I After 4200 nodes, 766 on tree, 1e+50 best solution, best possible 3096.9074 (247.16 seconds)
Cbc0010I After 4300 nodes, 775 on tree, 1e+50 best solution, best possible 3100.5211 (251.75 seconds)
Cbc0010I After 4400 nodes, 781 on tree, 1e+50 best solution, best possible 3104.8485 (256.09 seconds)
Cbc0010I After 4500 nodes, 789 on tree, 1e+50 best solution, best possible 3111.3717 (260.59 seconds)
Cbc0010I After 4600 nodes, 801 on tree, 1e+50 best solution, best possible 3114.7173 (265.08 seconds)
Cbc0010I After 4700 nodes, 805 on tree, 1e+50 best solution, best possible 3119.212 (269.54 seconds)
Cbc0010I After 4800 nodes, 820 on tree, 1e+50 best solution, best possible 3119.6018 (274.19 seconds)
Cbc0010I After 4900 nodes, 834 on tree, 1e+50 best solution, best possible 3121.5624 (279.12 seconds)
Cbc0010I After 5000 nodes, 844 on tree, 1e+50 best solution, best possible 3123.0592 (283.60 seconds)
Cbc0010I After 5100 nodes, 858 on tree, 1e+50 best solution, best possible 3123.9102 (288.30 seconds)
Cbc0010I After 5200 nodes, 866 on tree, 1e+50 best solution, best possible 3126.6707 (292.91 seconds)
Cbc0010I After 5300 nodes, 870 on tree, 1e+50 best solution, best possible 3128.7304 (297.23 seconds)
Cbc0010I After 5400 nodes, 878 on tree, 1e+50 best solution, best possible 3132.5442 (301.65 seconds)
Cbc0010I After 5500 nodes, 886 on tree, 1e+50 best solution, best possible 3133.9165 (305.89 seconds)
Cbc0010I After 5600 nodes, 890 on tree, 1e+50 best solution, best possible 3135.4669 (310.06 seconds)
Cbc0010I After 5700 nodes, 898 on tree, 1e+50 best solution, best possible 3137.6083 (314.46 seconds)
Cbc0010I After 5800 nodes, 905 on tree, 1e+50 best solution, best possible 3139.4012 (318.71 seconds)
Cbc0010I After 5900 nodes, 920 on tree, 1e+50 best solution, best possible 3140.0728 (323.21 seconds)
Cbc0010I After 6000 nodes, 941 on tree, 1e+50 best solution, best possible 3140.0728 (327.67 seconds)
Couenne: new cutoff value 3.3729797671e+03 (334.463 seconds)
Couenne: new cutoff value 3.3728852173e+03 (334.529 seconds)
Cbc0010I After 6100 nodes, 969 on tree, 1e+50 best solution, best possible 3141.02 (332.17 seconds)
Cbc0010I After 6200 nodes, 972 on tree, 1e+50 best solution, best possible 3144.6643 (336.48 seconds)
Cbc0010I After 6300 nodes, 982 on tree, 1e+50 best solution, best possible 3145.8158 (340.82 seconds)
Cbc0010I After 6400 nodes, 993 on tree, 1e+50 best solution, best possible 3147.347 (345.25 seconds)
Cbc0010I After 6500 nodes, 1014 on tree, 1e+50 best solution, best possible 3147.347 (349.99 seconds)
Couenne: new cutoff value 3.3718948672e+03 (358.081 seconds)
Cbc0010I After 6600 nodes, 1050 on tree, 1e+50 best solution, best possible 3147.6852 (354.19 seconds)
Cbc0010I After 6700 nodes, 1059 on tree, 1e+50 best solution, best possible 3149.2952 (358.46 seconds)
Cbc0010I After 6800 nodes, 1071 on tree, 1e+50 best solution, best possible 3150.6309 (363.08 seconds)
Cbc0010I After 6900 nodes, 1080 on tree, 1e+50 best solution, best possible 3154.1822 (367.44 seconds)
Cbc0010I After 7000 nodes, 1087 on tree, 1e+50 best solution, best possible 3157.0267 (371.70 seconds)
Cbc0010I After 7100 nodes, 1091 on tree, 1e+50 best solution, best possible 3157.8879 (375.89 seconds)
Cbc0010I After 7200 nodes, 1099 on tree, 1e+50 best solution, best possible 3159.0707 (380.02 seconds)
Cbc0010I After 7300 nodes, 1099 on tree, 1e+50 best solution, best possible 3160.8206 (383.87 seconds)
Cbc0010I After 7400 nodes, 1099 on tree, 1e+50 best solution, best possible 3162.4479 (387.98 seconds)
Cbc0010I After 7500 nodes, 1108 on tree, 1e+50 best solution, best possible 3165.7896 (392.44 seconds)
Cbc0010I After 7600 nodes, 1111 on tree, 1e+50 best solution, best possible 3166.5771 (396.58 seconds)
Cbc0010I After 7700 nodes, 1114 on tree, 1e+50 best solution, best possible 3168.4718 (400.58 seconds)
Cbc0010I After 7800 nodes, 1118 on tree, 1e+50 best solution, best possible 3171.066 (404.93 seconds)
Cbc0010I After 7900 nodes, 1127 on tree, 1e+50 best solution, best possible 3171.986 (409.13 seconds)
Cbc0010I After 8000 nodes, 1132 on tree, 1e+50 best solution, best possible 3175.0116 (413.13 seconds)
Cbc0010I After 8100 nodes, 1137 on tree, 1e+50 best solution, best possible 3177.3573 (417.32 seconds)
Cbc0010I After 8200 nodes, 1142 on tree, 1e+50 best solution, best possible 3181.8946 (421.60 seconds)
Cbc0010I After 8300 nodes, 1143 on tree, 1e+50 best solution, best possible 3183.012 (425.69 seconds)
Cbc0010I After 8400 nodes, 1140 on tree, 1e+50 best solution, best possible 3185.0359 (429.64 seconds)
Cbc0010I After 8500 nodes, 1147 on tree, 1e+50 best solution, best possible 3187.3961 (433.97 seconds)
Cbc0010I After 8600 nodes, 1149 on tree, 1e+50 best solution, best possible 3191.8714 (438.27 seconds)
Cbc0010I After 8700 nodes, 1154 on tree, 1e+50 best solution, best possible 3193.2438 (442.54 seconds)
Cbc0010I After 8800 nodes, 1161 on tree, 1e+50 best solution, best possible 3193.9317 (446.83 seconds)
Cbc0010I After 8900 nodes, 1167 on tree, 1e+50 best solution, best possible 3195.8911 (451.03 seconds)
Cbc0010I After 9000 nodes, 1170 on tree, 1e+50 best solution, best possible 3197.0166 (455.51 seconds)
Cbc0010I After 9100 nodes, 1176 on tree, 1e+50 best solution, best possible 3198.5355 (459.81 seconds)
Cbc0010I After 9200 nodes, 1175 on tree, 1e+50 best solution, best possible 3200.6056 (463.87 seconds)
Cbc0010I After 9300 nodes, 1176 on tree, 1e+50 best solution, best possible 3202.9495 (468.10 seconds)
Cbc0010I After 9400 nodes, 1177 on tree, 1e+50 best solution, best possible 3206.1226 (472.46 seconds)
Cbc0010I After 9500 nodes, 1178 on tree, 1e+50 best solution, best possible 3208.3413 (476.82 seconds)
Cbc0010I After 9600 nodes, 1179 on tree, 1e+50 best solution, best possible 3210.2643 (481.06 seconds)
Cbc0010I After 9700 nodes, 1181 on tree, 1e+50 best solution, best possible 3212.1082 (485.19 seconds)
Cbc0010I After 9800 nodes, 1178 on tree, 1e+50 best solution, best possible 3215.0169 (489.20 seconds)
Cbc0010I After 9900 nodes, 1176 on tree, 1e+50 best solution, best possible 3217.4663 (493.29 seconds)
Cbc0010I After 10000 nodes, 1178 on tree, 1e+50 best solution, best possible 3218.4697 (497.64 seconds)
Cbc0010I After 10100 nodes, 1180 on tree, 1e+50 best solution, best possible 3219.4935 (501.60 seconds)
Cbc0010I After 10200 nodes, 1180 on tree, 1e+50 best solution, best possible 3221.4064 (505.67 seconds)
Cbc0010I After 10300 nodes, 1182 on tree, 1e+50 best solution, best possible 3225.2712 (509.84 seconds)
Cbc0010I After 10400 nodes, 1181 on tree, 1e+50 best solution, best possible 3229.4867 (513.97 seconds)
Cbc0010I After 10500 nodes, 1180 on tree, 1e+50 best solution, best possible 3232.4124 (518.36 seconds)
Cbc0010I After 10600 nodes, 1185 on tree, 1e+50 best solution, best possible 3233.8637 (522.76 seconds)
Cbc0010I After 10700 nodes, 1189 on tree, 1e+50 best solution, best possible 3236.4411 (527.30 seconds)
Cbc0010I After 10800 nodes, 1189 on tree, 1e+50 best solution, best possible 3238.7667 (531.42 seconds)
Cbc0010I After 10900 nodes, 1183 on tree, 1e+50 best solution, best possible 3241.115 (535.37 seconds)
Cbc0010I After 11000 nodes, 1178 on tree, 1e+50 best solution, best possible 3245.7324 (539.36 seconds)
Cbc0010I After 11100 nodes, 1173 on tree, 1e+50 best solution, best possible 3249.0695 (543.52 seconds)
Cbc0010I After 11200 nodes, 1181 on tree, 1e+50 best solution, best possible 3252.4918 (547.98 seconds)
Cbc0010I After 11300 nodes, 1177 on tree, 1e+50 best solution, best possible 3256.4474 (553.95 seconds)
Cbc0010I After 11400 nodes, 1171 on tree, 1e+50 best solution, best possible 3259.4045 (558.35 seconds)
Cbc0010I After 11500 nodes, 1168 on tree, 1e+50 best solution, best possible 3262.5182 (562.38 seconds)
Cbc0010I After 11600 nodes, 1164 on tree, 1e+50 best solution, best possible 3264.7606 (566.62 seconds)
Cbc0010I After 11700 nodes, 1163 on tree, 1e+50 best solution, best possible 3267.1333 (572.08 seconds)
Cbc0010I After 11800 nodes, 1160 on tree, 1e+50 best solution, best possible 3269.1842 (576.26 seconds)
Cbc0010I After 11900 nodes, 1167 on tree, 1e+50 best solution, best possible 3269.9885 (580.78 seconds)
Cbc0010I After 12000 nodes, 1164 on tree, 1e+50 best solution, best possible 3274.5284 (585.00 seconds)
Cbc0010I After 12100 nodes, 1167 on tree, 1e+50 best solution, best possible 3277.5653 (589.47 seconds)
Cbc0010I After 12200 nodes, 1171 on tree, 1e+50 best solution, best possible 3278.583 (593.96 seconds)
Cbc0010I After 12300 nodes, 1168 on tree, 1e+50 best solution, best possible 3280.7066 (598.40 seconds)
Cbc0010I After 12400 nodes, 1166 on tree, 1e+50 best solution, best possible 3282.4932 (603.00 seconds)
Cbc0010I After 12500 nodes, 1163 on tree, 1e+50 best solution, best possible 3285.2413 (607.43 seconds)
Cbc0010I After 12600 nodes, 1175 on tree, 1e+50 best solution, best possible 3287.3817 (612.25 seconds)
Cbc0010I After 12700 nodes, 1180 on tree, 1e+50 best solution, best possible 3289.139 (616.61 seconds)
Cbc0010I After 12800 nodes, 1185 on tree, 1e+50 best solution, best possible 3291.0234 (621.08 seconds)
Cbc0010I After 12900 nodes, 1191 on tree, 1e+50 best solution, best possible 3292.1565 (625.65 seconds)
Cbc0010I After 13000 nodes, 1193 on tree, 1e+50 best solution, best possible 3294.089 (629.94 seconds)
Cbc0010I After 13100 nodes, 1198 on tree, 1e+50 best solution, best possible 3295.1922 (634.45 seconds)
Cbc0010I After 13200 nodes, 1197 on tree, 1e+50 best solution, best possible 3296.291 (638.87 seconds)
Cbc0010I After 13300 nodes, 1198 on tree, 1e+50 best solution, best possible 3297.4158 (643.30 seconds)
Cbc0010I After 13400 nodes, 1198 on tree, 1e+50 best solution, best possible 3298.2857 (647.39 seconds)
Cbc0010I After 13500 nodes, 1196 on tree, 1e+50 best solution, best possible 3299.621 (651.89 seconds)
Cbc0010I After 13600 nodes, 1194 on tree, 1e+50 best solution, best possible 3300.9531 (656.35 seconds)
Cbc0010I After 13700 nodes, 1189 on tree, 1e+50 best solution, best possible 3302.26 (660.82 seconds)
Cbc0010I After 13800 nodes, 1187 on tree, 1e+50 best solution, best possible 3303.668 (665.37 seconds)
Cbc0010I After 13900 nodes, 1185 on tree, 1e+50 best solution, best possible 3304.7371 (669.86 seconds)
Cbc0010I After 14000 nodes, 1182 on tree, 1e+50 best solution, best possible 3306.3067 (674.21 seconds)
Cbc0010I After 14100 nodes, 1178 on tree, 1e+50 best solution, best possible 3308.6425 (678.64 seconds)
Cbc0010I After 14200 nodes, 1174 on tree, 1e+50 best solution, best possible 3309.4511 (684.02 seconds)
Cbc0010I After 14300 nodes, 1168 on tree, 1e+50 best solution, best possible 3310.3821 (688.23 seconds)
Cbc0010I After 14400 nodes, 1159 on tree, 1e+50 best solution, best possible 3311.7095 (692.53 seconds)
Cbc0010I After 14500 nodes, 1154 on tree, 1e+50 best solution, best possible 3312.9484 (697.21 seconds)
Cbc0010I After 14600 nodes, 1147 on tree, 1e+50 best solution, best possible 3314.9618 (701.66 seconds)
Cbc0010I After 14700 nodes, 1142 on tree, 1e+50 best solution, best possible 3316.4303 (706.13 seconds)
Cbc0010I After 14800 nodes, 1142 on tree, 1e+50 best solution, best possible 3317.1517 (710.59 seconds)
Cbc0010I After 14900 nodes, 1140 on tree, 1e+50 best solution, best possible 3318.1988 (715.03 seconds)
Cbc0010I After 15000 nodes, 1136 on tree, 1e+50 best solution, best possible 3319.1502 (719.68 seconds)
Cbc0010I After 15100 nodes, 1134 on tree, 1e+50 best solution, best possible 3320.2682 (724.10 seconds)
Cbc0010I After 15200 nodes, 1136 on tree, 1e+50 best solution, best possible 3320.9526 (728.68 seconds)
Cbc0010I After 15300 nodes, 1140 on tree, 1e+50 best solution, best possible 3321.7638 (733.43 seconds)
Cbc0010I After 15400 nodes, 1136 on tree, 1e+50 best solution, best possible 3323.5289 (737.83 seconds)
Cbc0010I After 15500 nodes, 1136 on tree, 1e+50 best solution, best possible 3324.4806 (742.19 seconds)
Cbc0010I After 15600 nodes, 1133 on tree, 1e+50 best solution, best possible 3325.9172 (746.65 seconds)
Cbc0010I After 15700 nodes, 1119 on tree, 1e+50 best solution, best possible 3327.4533 (750.75 seconds)
Cbc0010I After 15800 nodes, 1107 on tree, 1e+50 best solution, best possible 3329.6144 (755.05 seconds)
Cbc0010I After 15900 nodes, 1100 on tree, 1e+50 best solution, best possible 3330.5888 (759.12 seconds)
Cbc0010I After 16000 nodes, 1096 on tree, 1e+50 best solution, best possible 3332.5197 (763.71 seconds)
Cbc0010I After 16100 nodes, 1084 on tree, 1e+50 best solution, best possible 3334.6604 (767.78 seconds)
Cbc0010I After 16200 nodes, 1076 on tree, 1e+50 best solution, best possible 3336.1158 (772.15 seconds)
Cbc0010I After 16300 nodes, 1065 on tree, 1e+50 best solution, best possible 3337.2775 (776.25 seconds)
Cbc0010I After 16400 nodes, 1057 on tree, 1e+50 best solution, best possible 3338.6812 (780.55 seconds)
Cbc0010I After 16500 nodes, 1050 on tree, 1e+50 best solution, best possible 3340.4337 (784.84 seconds)
Cbc0010I After 16600 nodes, 1035 on tree, 1e+50 best solution, best possible 3341.5769 (788.67 seconds)
Cbc0010I After 16700 nodes, 1023 on tree, 1e+50 best solution, best possible 3342.7986 (792.91 seconds)
Cbc0010I After 16800 nodes, 1013 on tree, 1e+50 best solution, best possible 3344.0402 (796.96 seconds)
Cbc0010I After 16900 nodes, 1007 on tree, 1e+50 best solution, best possible 3345.1692 (801.10 seconds)
Cbc0010I After 17000 nodes, 988 on tree, 1e+50 best solution, best possible 3346.3099 (805.28 seconds)
Cbc0010I After 17100 nodes, 975 on tree, 1e+50 best solution, best possible 3347.0438 (809.51 seconds)
Cbc0010I After 17200 nodes, 959 on tree, 1e+50 best solution, best possible 3347.9328 (813.70 seconds)
Cbc0010I After 17300 nodes, 940 on tree, 1e+50 best solution, best possible 3348.5999 (817.63 seconds)
Cbc0010I After 17400 nodes, 917 on tree, 1e+50 best solution, best possible 3349.4285 (821.76 seconds)
Cbc0010I After 17500 nodes, 892 on tree, 1e+50 best solution, best possible 3350.3575 (828.81 seconds)
Cbc0010I After 17600 nodes, 866 on tree, 1e+50 best solution, best possible 3351.2593 (832.96 seconds)
Cbc0010I After 17700 nodes, 841 on tree, 1e+50 best solution, best possible 3352.1864 (837.25 seconds)
Cbc0010I After 17800 nodes, 811 on tree, 1e+50 best solution, best possible 3353.0866 (841.07 seconds)
Cbc0010I After 17900 nodes, 781 on tree, 1e+50 best solution, best possible 3354.1323 (844.90 seconds)
Cbc0010I After 18000 nodes, 746 on tree, 1e+50 best solution, best possible 3355.2374 (848.54 seconds)
Cbc0010I After 18100 nodes, 706 on tree, 1e+50 best solution, best possible 3357.0526 (852.39 seconds)
Cbc0010I After 18200 nodes, 672 on tree, 1e+50 best solution, best possible 3358.7363 (856.08 seconds)
Cbc0010I After 18300 nodes, 649 on tree, 1e+50 best solution, best possible 3360.4235 (860.19 seconds)
Cbc0010I After 18400 nodes, 611 on tree, 1e+50 best solution, best possible 3362.7385 (863.46 seconds)
Cbc0010I After 18500 nodes, 569 on tree, 1e+50 best solution, best possible 3365.2758 (866.61 seconds)
Cbc0010I After 18600 nodes, 528 on tree, 1e+50 best solution, best possible 3367.3347 (870.57 seconds)
Cbc0010I After 18700 nodes, 481 on tree, 1e+50 best solution, best possible 3369.2139 (874.31 seconds)
Cbc0010I After 18800 nodes, 438 on tree, 1e+50 best solution, best possible 3371.7268 (876.76 seconds)
Cbc0010I After 18900 nodes, 388 on tree, 1e+50 best solution, best possible 3372.4035 (878.15 seconds)
Cbc0010I After 19000 nodes, 338 on tree, 1e+50 best solution, best possible 3373.2087 (879.24 seconds)
Cbc0010I After 19100 nodes, 288 on tree, 1e+50 best solution, best possible 3373.8905 (880.47 seconds)
Cbc0010I After 19200 nodes, 238 on tree, 1e+50 best solution, best possible 3377.4282 (881.66 seconds)
Cbc0010I After 19300 nodes, 188 on tree, 1e+50 best solution, best possible 3389.6478 (882.80 seconds)
Cbc0010I After 19400 nodes, 138 on tree, 1e+50 best solution, best possible 3392.2369 (884.08 seconds)
Cbc0010I After 19500 nodes, 88 on tree, 1e+50 best solution, best possible 3398.0297 (885.39 seconds)
Cbc0010I After 19600 nodes, 38 on tree, 1e+50 best solution, best possible 3401.6605 (886.89 seconds)
Cbc0001I Search completed - best objective 1e+50, took 635374 iterations and 19676 nodes (888.43 seconds)
Cbc0035I Maximum depth 160, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2471
Linearization cuts added in total:           2471  (separation time: 0.012153s)
Total solve time:                         888.455s (888.455s in branch-and-bound)
Lower bound:                              3371.89
Upper bound:                              3371.89  (gap: 0.00%)
Branch-and-bound nodes:                     19676
Stats: /tmp/jl_LtbV9V/model.nl 2190 [var]   30 [int] 2230 [con]  159 [aux]   2471 [root]     2471 [tot] 0.012153 [sep]  888.455 [time]  888.458 [bb]         3.371895e+03 [lower]         3.371895e+03 [upper]   19676 [nodes]
Performance of                           FBBT:	    69.9115s,    23130 runs. fix:          0 shrnk:   0.864453 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    5.32277s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p46
