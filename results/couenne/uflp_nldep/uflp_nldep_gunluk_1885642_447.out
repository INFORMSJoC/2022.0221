solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-4.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 6.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 351.31212       58 165.4466
NLP0014I             2         OPT 356.07528       53 4.220199
Couenne: new cutoff value 3.5607470253e+02 (177.089 seconds)
Loaded instance "/tmp/jl_o2w6qW/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          449 (0 integer)

Coin0506I Presolve 5849 (-152) rows, 5249 (-350) columns and 26547 (-502) elements
Clp0006I 0  Obj 0 Primal inf 20190.323 (650) Dual inf 1.1767577e+15 (5150)
Clp0006I 195  Obj 0 Primal inf 2068.3629 (239) Dual inf 2.1700584e+14 (544)
Clp0006I 462  Obj 1427.3305 Primal inf 441.89702 (106) Dual inf 4629163.9 (1784)
Clp0006I 656  Obj 1843.3579 Primal inf 403.62839 (65) Dual inf 86955.105 (171)
Clp0006I 847  Obj 1649.2549 Primal inf 345.32358 (61) Dual inf 20947070 (1686)
Clp0006I 1040  Obj 1447.2688 Primal inf 239.61611 (18) Dual inf 21383161 (1712)
Clp0006I 1231  Obj 1390.0251 Primal inf 227.06059 (18) Dual inf 17130359 (1695)
Clp0006I 1423  Obj 1132.7656 Primal inf 171.6218 (19) Dual inf 31071816 (1453)
Clp0006I 1614  Obj 1006.7031 Primal inf 143.57646 (29) Dual inf 27484069 (1837)
Clp0006I 1805  Obj 530.09157 Primal inf 95.643139 (51) Dual inf 99001038 (2304)
Clp0006I 1938  Obj 522.1056 Primal inf 86.477113 (24) Dual inf 1114637 (903)
Clp0006I 2130  Obj 482.64615 Primal inf 72.593406 (14) Dual inf 359900.23 (398)
Clp0006I 2322  Obj 441.37851 Primal inf 38.036887 (10) Dual inf 49752.89 (67)
Clp0006I 2517  Obj 435.55071 Primal inf 1.8097299 (9) Dual inf 119167.28 (250)
Clp0006I 2708  Obj 406.6757 Primal inf 0.96075881 (3) Dual inf 44756.694 (186)
Clp0006I 2900  Obj 356.0847 Primal inf 0.093660181 (2) Dual inf 3973.2527 (75)
Clp0006I 3038  Obj 350.678
Clp0000I Optimal - objective value 350.678
Clp0000I Optimal - objective value 350.678
Clp0032I Optimal objective 350.6779978 - 3038 iterations time 0.632, Presolve 0.02
Clp0000I Optimal - objective value 350.678
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 350.678
Optimality Based BT: 96 improved bounds
Probing: 2 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 83 added rows had average density of 2
Cbc0013I At root node, 83 cuts changed objective from 350.678 to 351.00553 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 150 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (34.28 seconds)
Optimality Based BT: 95 improved bounds
Optimality Based BT: 89 improved bounds
Cbc0010I After 100 nodes, 32 on tree, 1e+50 best solution, best possible 351.20507 (147.07 seconds)
Cbc0010I After 200 nodes, 80 on tree, 1e+50 best solution, best possible 351.20507 (158.79 seconds)
Cbc0010I After 300 nodes, 130 on tree, 1e+50 best solution, best possible 351.20507 (168.74 seconds)
Cbc0010I After 400 nodes, 180 on tree, 1e+50 best solution, best possible 351.20507 (178.52 seconds)
Cbc0010I After 500 nodes, 230 on tree, 1e+50 best solution, best possible 351.20507 (188.30 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 351.20507 (198.11 seconds)
Cbc0010I After 700 nodes, 330 on tree, 1e+50 best solution, best possible 351.20507 (207.81 seconds)
Cbc0010I After 800 nodes, 380 on tree, 1e+50 best solution, best possible 351.20507 (217.55 seconds)
Couenne: new cutoff value 3.5131398851e+02 (398.573 seconds)
Couenne: new cutoff value 3.5131308296e+02 (398.79 seconds)
Cbc0004I Integer solution of 351.31308 found after 7202 iterations and 832 nodes (220.77 seconds)
Cbc0010I After 900 nodes, 7 on tree, 351.31308 best solution, best possible 351.30361 (234.36 seconds)
Cbc0001I Search completed - best objective 351.3130829589941, took 10998 iterations and 988 nodes (241.54 seconds)
Cbc0035I Maximum depth 415, 51 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6001
Linearization cuts added in total:           6001  (separation time: 0.04542s)
Total solve time:                         242.199s (242.199s in branch-and-bound)
Lower bound:                              351.313
Upper bound:                              351.313  (gap: 0.00%)
Branch-and-bound nodes:                       988
Stats: /tmp/jl_o2w6qW/model.nl 5150 [var]   50 [int] 5200 [con]  449 [aux]   6001 [root]     6001 [tot] 0.04542 [sep]  242.199 [time]  242.209 [bb]         3.513131e+02 [lower]         3.513131e+02 [upper]     988 [nodes]
Performance of                           FBBT:	    10.8475s,     1102 runs. fix:          0 shrnk:    78.2356 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     18.949s,        3 runs. fix:   0.333333 shrnk:    284.839 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-4.txt
f0 = 0.00794016919100558
f0 = 0.023820507573016746
f0 = 0.052934461273370544
f0 = 0.07410824578271875
f0 = 0.07146152271905024
f0 = 0.06969704067660455
f0 = 0.0582279074007076
f0 = 0.021173784509348217
f0 = 0.00705792816978274
f0 = 0.03881860493380507
f0 = 0.07146152271905024
f0 = 0.025584989615462427
f0 = 0.026467230636685272
f0 = 0.008822410212228423
f0 = 0.0291139537003538
f0 = 0.00794016919100558
f0 = 0.02205602553057106
f0 = 0.03264291778524517
f0 = 0.07587272782516444
f0 = 0.08293065599494719
f0 = 0.002646723063668527
f0 = 0.04764101514603349
f0 = 0.04764101514603349
f0 = 0.059110148421930436
f0 = 0.07057928169782739
f0 = 0.0749904868039416
f0 = 0.07410824578271875
f0 = 0.01411585633956548
f0 = 0.036171881870136535
f0 = 0.001764482042445685
f0 = 0.04146532799747359
f0 = 0.00352896408489137
f0 = 0.05999238944315328
f0 = 0.07675496884638729
f0 = 0.05999238944315328
f0 = 0.027349471657908114
f0 = 0.008822410212228423
f0 = 0.08204841497372434
f0 = 0.02205602553057106
f0 = 0.01146913327589695
f0 = 0.010586892254674109
f0 = 0.03264291778524517
f0 = 0.021173784509348217
f0 = 0.03970084595502791
f0 = 0.06616807659171318
f0 = 0.08028393293127865
f0 = 0.07851945088883297
f0 = 0.020291543488125376
f0 = 0.06616807659171318
f0 = 0.07057928169782739
