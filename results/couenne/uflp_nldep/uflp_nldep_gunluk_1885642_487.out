solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-50-100-8.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 6.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 324.87682       73 176.75417
NLP0014I             2         OPT 325.13468       58 4.886143
Couenne: new cutoff value 3.2513477654e+02 (189.321 seconds)
Loaded instance "/tmp/jl_YDNivR/model.nl"
Constraints:         5200
Variables:           5150 (50 integer)
Auxiliaries:          449 (0 integer)

Coin0506I Presolve 5849 (-152) rows, 5249 (-350) columns and 26547 (-502) elements
Clp0006I 0  Obj 0 Primal inf 20021.995 (650) Dual inf 1.3508163e+15 (5150)
Clp0006I 205  Obj 0 Primal inf 2104.7016 (222) Dual inf 7.116015e+14 (1552)
Clp0006I 477  Obj 1221.8666 Primal inf 338.79877 (73) Dual inf 5615527.6 (1674)
Clp0006I 673  Obj 1982.4455 Primal inf 314.97794 (53) Dual inf 157761.25 (208)
Clp0006I 869  Obj 1995.3963 Primal inf 268.64703 (43) Dual inf 42323464 (1546)
Clp0006I 1062  Obj 1765.7904 Primal inf 166.17379 (15) Dual inf 45202323 (1402)
Clp0006I 1254  Obj 1431.9799 Primal inf 135.86648 (19) Dual inf 9066931.6 (1222)
Clp0006I 1446  Obj 1206.7873 Primal inf 119.30593 (7) Dual inf 1893637.3 (75)
Clp0006I 1640  Obj 950.84192 Primal inf 85.110113 (6) Dual inf 27324478 (1003)
Clp0006I 1833  Obj 905.55599 Primal inf 68.26585 (17) Dual inf 20538269 (1528)
Clp0006I 2024  Obj 799.1922 Primal inf 63.143451 (23) Dual inf 28967633 (1355)
Clp0006I 2217  Obj 677.006 Primal inf 50.781834 (8) Dual inf 6859800.5 (242)
Clp0006I 2410  Obj 473.17462 Primal inf 23.819347 (9) Dual inf 31283186 (1470)
Clp0006I 2602  Obj 325.14478 Primal inf 4.7716917 (16) Dual inf 62635618 (1459)
Clp0006I 2791  Obj 325.14478 Primal inf 1.780319 (12) Dual inf 254291.02 (289)
Clp0006I 2982  Obj 325.14478 Primal inf 0.81680646 (3) Dual inf 71324.898 (170)
Clp0006I 3173  Obj 325.14478 Primal inf 0.24734227 (1) Dual inf 98881.436 (102)
Clp0006I 3364  Obj 324.05179
Clp0000I Optimal - objective value 324.05179
Clp0032I Optimal objective 324.0517853 - 3364 iterations time 0.612, Presolve 0.02
Clp0000I Optimal - objective value 324.05179
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 324.05179
Optimality Based BT: 112 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 74 added rows had average density of 2
Cbc0013I At root node, 74 cuts changed objective from 324.05179 to 324.82235 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 177 row cuts average 2.0 elements, 8 column cuts (8 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (27.24 seconds)
Optimality Based BT: 87 improved bounds
Optimality Based BT: 86 improved bounds
Optimality Based BT: 81 improved bounds
Optimality Based BT: 81 improved bounds
Optimality Based BT: 79 improved bounds
Cbc0010I After 100 nodes, 33 on tree, 1e+50 best solution, best possible 324.86178 (155.34 seconds)
Cbc0010I After 200 nodes, 74 on tree, 1e+50 best solution, best possible 324.86178 (164.57 seconds)
Cbc0010I After 300 nodes, 123 on tree, 1e+50 best solution, best possible 324.86178 (174.41 seconds)
Cbc0010I After 400 nodes, 173 on tree, 1e+50 best solution, best possible 324.86178 (184.18 seconds)
Cbc0010I After 500 nodes, 223 on tree, 1e+50 best solution, best possible 324.86178 (193.89 seconds)
Couenne: new cutoff value 3.2487853641e+02 (389.287 seconds)
Couenne: new cutoff value 3.2487785944e+02 (389.454 seconds)
Cbc0004I Integer solution of 324.87786 found after 4120 iterations and 556 nodes (199.23 seconds)
Optimality Based BT: 81 improved bounds
Cbc0010I After 600 nodes, 1 on tree, 324.87786 best solution, best possible 324.86178 (232.55 seconds)
Cbc0001I Search completed - best objective 324.8778594419532, took 4677 iterations and 630 nodes (234.70 seconds)
Cbc0035I Maximum depth 278, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       6001
Linearization cuts added in total:           6001  (separation time: 0.044915s)
Total solve time:                         235.342s (235.342s in branch-and-bound)
Lower bound:                              324.878
Upper bound:                              324.878  (gap: 0.00%)
Branch-and-bound nodes:                       630
Stats: /tmp/jl_YDNivR/model.nl 5150 [var]   50 [int] 5200 [con]  449 [aux]   6001 [root]     6001 [tot] 0.044915 [sep]  235.342 [time]   235.35 [bb]         3.248779e+02 [lower]         3.248779e+02 [upper]     630 [nodes]
Performance of                           FBBT:	    5.98924s,      606 runs. fix:          0 shrnk:    73.5558 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    37.2979s,        7 runs. fix:    153.176 shrnk:    400.365 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-50-100-8.txt
f0 = 0.06087463046437613
f0 = 0.07940169191005582
f0 = 0.005293446127337054
f0 = 0.07587272782516444
f0 = 0.0291139537003538
f0 = 0.04058308697625075
f0 = 0.04411205106114212
f0 = 0.0582279074007076
f0 = 0.04499429208236496
f0 = 0.08734186110106139
f0 = 0.06175687148559897
f0 = 0.08822410212228424
f0 = 0.06705031761293602
f0 = 0.008822410212228423
f0 = 0.03881860493380507
f0 = 0.01499809736078832
f0 = 0.01852706144567969
f0 = 0.01852706144567969
f0 = 0.07940169191005582
f0 = 0.03352515880646801
f0 = 0.006175687148559896
f0 = 0.02205602553057106
f0 = 0.02823171267913096
f0 = 0.009704651233451267
f0 = 0.05116997923092485
f0 = 0.004411205106114212
f0 = 0.0855773790586157
f0 = 0.030878435742799484
f0 = 0.00352896408489137
f0 = 0.005293446127337054
f0 = 0.046758774124810644
f0 = 0.07322600476149592
f0 = 0.0582279074007076
f0 = 0.01146913327589695
f0 = 0.055581184337039076
f0 = 0.0811661739525015
f0 = 0.08028393293127865
f0 = 0.042347569018696435
f0 = 0.02823171267913096
f0 = 0.024702748594239585
f0 = 0.0688147996553817
f0 = 0.012351374297119792
f0 = 0.0229382665517939
f0 = 0.08028393293127865
f0 = 0.07146152271905024
f0 = 0.023820507573016746
f0 = 0.016762579403234005
f0 = 0.08645962007983857
f0 = 0.08204841497372434
f0 = 0.08734186110106139
