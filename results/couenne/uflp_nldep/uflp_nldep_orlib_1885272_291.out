solving instance uflp nldep orlib 121 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 1.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 734720.65      266 12.758746
NLP0014I             2         OPT 766311.68       63 3.7187
Loaded instance "/tmp/jl_4yNlAV/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          394 (0 integer)

Coin0506I Presolve 3139 (-149) rows, 2747 (-297) columns and 13675 (-495) elements
Clp0006I 0  Obj 0 Primal inf 377582.7 (442)
Clp0006I 137  Obj 1.5820538e-12 Primal inf 30431.782 (151)
Clp0006I 256  Obj 1.7344935e-08 Primal inf 10086.435 (246)
Clp0006I 387  Obj 0.080241677 Primal inf 65925.314 (249)
Clp0006I 513  Obj 294133.65 Primal inf 896390.13 (239)
Clp0006I 650  Obj 706721.05 Primal inf 671.34949 (102)
Clp0006I 734  Obj 734719.16
Clp0000I Optimal - objective value 734718.95
Clp0032I Optimal objective 734718.949 - 734 iterations time 0.092, Presolve 0.01
Clp0000I Optimal - objective value 734718.95
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 734718.95
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 17 added rows had average density of 2
Cbc0013I At root node, 17 cuts changed objective from 734718.95 to 734718.95 in 4 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 48 row cuts average 2.0 elements, 0 column cuts (0 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (21.18 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 734721.19 (138.40 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 734721.44 (143.09 seconds)
Couenne: new cutoff value 7.3472148027e+05 (167.177 seconds)
Cbc0010I After 300 nodes, 149 on tree, 1e+50 best solution, best possible 734721.51 (147.41 seconds)
Cbc0010I After 400 nodes, 100 on tree, 1e+50 best solution, best possible 734795.41 (149.42 seconds)
Cbc0010I After 500 nodes, 50 on tree, 1e+50 best solution, best possible 735499.49 (151.04 seconds)
Cbc0001I Search completed - best objective 1e+50, took 18287 iterations and 600 nodes (152.55 seconds)
Cbc0035I Maximum depth 150, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3288
Linearization cuts added in total:           3288  (separation time: 0.01854s)
Total solve time:                         152.649s (152.649s in branch-and-bound)
Lower bound:                               734721
Upper bound:                               734721  (gap: 0.00%)
Branch-and-bound nodes:                       600
Stats: /tmp/jl_4yNlAV/model.nl 2650 [var]   50 [int] 2650 [con]  394 [aux]   3288 [root]     3288 [tot] 0.01854 [sep]  152.649 [time]  152.653 [bb]         7.347215e+05 [lower]         7.347215e+05 [upper]     600 [nodes]
Performance of                           FBBT:	     2.0748s,      347 runs. fix:          0 shrnk:    1.78526 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    17.1694s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap121.txt
