solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 245.57728       50 1.509801
Couenne: new cutoff value 2.4568685478e+02 (1.77834 seconds)
NLP0014I             2         OPT 245.68669       34 0.314192
Couenne: new cutoff value 2.4568665686e+02 (2.09467 seconds)
Loaded instance "/tmp/jl_Vy0Y4g/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1139 (-62) rows, 899 (-140) columns and 4617 (-202) elements
Clp0006I 0  Obj 0 Primal inf 5542.8023 (260)
Clp0006I 97  Obj 5.3560663e-14 Primal inf 13713.742 (79)
Clp0006I 194  Obj 242.63535 Primal inf 149.77379 (34)
Clp0006I 235  Obj 243.22285
Clp0000I Optimal - objective value 243.22285
Clp0032I Optimal objective 243.2228537 - 235 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 243.22285
NLP Heuristic: NLP0014I             3         OPT 245.57728       28 0.393751
no solution.
Clp0000I Optimal - objective value 243.22285
Optimality Based BT: 30 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 25 added rows had average density of 2
Cbc0013I At root node, 25 cuts changed objective from 243.22285 to 244.06008 in 6 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 53 row cuts average 2.0 elements, 7 column cuts (7 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.36 seconds)
Optimality Based BT: 19 improved bounds
Couenne: new cutoff value 2.4557745117e+02 (5.21117 seconds)
Optimality Based BT: 21 improved bounds
Optimality Based BT: 15 improved bounds
Optimality Based BT: 33 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 755 iterations and 24 nodes (10.29 seconds)
Cbc0035I Maximum depth 8, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.005767s)
Total solve time:                         10.3095s (10.3095s in branch-and-bound)
Lower bound:                              245.577
Upper bound:                              245.577  (gap: 0.00%)
Branch-and-bound nodes:                        24
Stats: /tmp/jl_Vy0Y4g/model.nl  860 [var]   20 [int]  880 [con]  179 [aux]   1201 [root]     1201 [tot] 0.005767 [sep]  10.3095 [time]  10.3113 [bb]         2.455775e+02 [lower]         2.455775e+02 [upper]      24 [nodes]
Performance of                           FBBT:	   0.072129s,       60 runs. fix:          0 shrnk:    36.8685 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    3.32255s,        5 runs. fix:    2.47059 shrnk:    60.0462 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt
f0 = 0.06528583557049031
f0 = 0.07410824578271873
f0 = 0.000882241021222842
f0 = 0.06793255863415884
f0 = 0.06352135352804462
f0 = 0.08557737905861568
f0 = 0.057345666379484725
f0 = 0.0608746304643761
f0 = 0.052052220252147674
f0 = 0.055581184337039055
f0 = 0.04852325616725631
f0 = 0.0608746304643761
f0 = 0.000882241021222842
f0 = 0.06881479965538168
f0 = 0.05646342535826189
f0 = 0.023820507573016736
f0 = 0.010586892254674105
f0 = 0.014115856339565473
f0 = 0.07410824578271873
f0 = 0.0776372098676101
