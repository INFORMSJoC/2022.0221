solving instance uflp nldep holmberg 7 sinabc3
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 2.3027548854e+04 (0.083193 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 5070.6191       22 0.148514
Couenne: new cutoff value 5.0706198433e+03 (0.234609 seconds)
Loaded instance "/tmp/jl_5HnPjj/model.nl"
Constraints:          570
Variables:            530 (10 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 671 (-20) rows, 551 (-78) columns and 2751 (-98) elements
Clp0006I 0  Obj 0 Primal inf 464.08486 (70)
Clp0006I 88  Obj 4726 Primal inf 17.276421 (14)
Clp0006I 93  Obj 4730.5499
Clp0000I Optimal - objective value 4730.5499
Clp0032I Optimal objective 4730.549923 - 93 iterations time 0.012, Presolve 0.01
Clp0000I Optimal - objective value 4730.5499
NLP Heuristic: NLP0014I             2         OPT 5070.6191       16 0.089917
no solution.
Clp0000I Optimal - objective value 4730.5499
Optimality Based BT: 16 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 19 added rows had average density of 2
Cbc0013I At root node, 19 cuts changed objective from 4730.5499 to 4895.8107 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 43 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (0.76 seconds)
Optimality Based BT: 19 improved bounds
Optimality Based BT: 20 improved bounds
Cbc0010I After 100 nodes, 24 on tree, 1e+50 best solution, best possible 5039.0477 (3.95 seconds)
Optimality Based BT: 17 improved bounds
Optimality Based BT: 16 improved bounds
Cbc0010I After 200 nodes, 25 on tree, 1e+50 best solution, best possible 5070.6177 (5.54 seconds)
Cbc0010I After 300 nodes, 47 on tree, 1e+50 best solution, best possible 5070.6178 (6.15 seconds)
Cbc0010I After 400 nodes, 66 on tree, 1e+50 best solution, best possible 5070.6181 (6.77 seconds)
Cbc0010I After 500 nodes, 90 on tree, 1e+50 best solution, best possible 5070.6182 (7.44 seconds)
Cbc0010I After 600 nodes, 109 on tree, 1e+50 best solution, best possible 5070.6184 (8.07 seconds)
Cbc0010I After 700 nodes, 122 on tree, 1e+50 best solution, best possible 5070.6187 (8.73 seconds)
Cbc0010I After 800 nodes, 132 on tree, 1e+50 best solution, best possible 5070.6187 (9.36 seconds)
Cbc0010I After 900 nodes, 140 on tree, 1e+50 best solution, best possible 5070.6188 (10.03 seconds)
Cbc0010I After 1000 nodes, 156 on tree, 1e+50 best solution, best possible 5070.619 (10.67 seconds)
Cbc0010I After 1100 nodes, 175 on tree, 1e+50 best solution, best possible 5070.619 (11.37 seconds)
Cbc0010I After 1200 nodes, 185 on tree, 1e+50 best solution, best possible 5070.6191 (12.02 seconds)
Cbc0010I After 1300 nodes, 189 on tree, 1e+50 best solution, best possible 5070.6192 (12.67 seconds)
Cbc0010I After 1400 nodes, 196 on tree, 1e+50 best solution, best possible 5070.6193 (13.28 seconds)
Cbc0010I After 1500 nodes, 211 on tree, 1e+50 best solution, best possible 5070.6193 (13.96 seconds)
Cbc0010I After 1600 nodes, 221 on tree, 1e+50 best solution, best possible 5070.6193 (14.58 seconds)
Cbc0010I After 1700 nodes, 226 on tree, 1e+50 best solution, best possible 5070.6194 (15.24 seconds)
Cbc0010I After 1800 nodes, 228 on tree, 1e+50 best solution, best possible 5070.6195 (15.87 seconds)
Cbc0010I After 1900 nodes, 221 on tree, 1e+50 best solution, best possible 5070.6195 (16.44 seconds)
Cbc0010I After 2000 nodes, 207 on tree, 1e+50 best solution, best possible 5070.6196 (16.99 seconds)
Cbc0010I After 2100 nodes, 190 on tree, 1e+50 best solution, best possible 5070.6196 (17.56 seconds)
Cbc0010I After 2200 nodes, 167 on tree, 1e+50 best solution, best possible 5070.6197 (18.09 seconds)
Cbc0010I After 2300 nodes, 131 on tree, 1e+50 best solution, best possible 5070.6198 (18.58 seconds)
Cbc0010I After 2400 nodes, 81 on tree, 1e+50 best solution, best possible 5070.6203 (18.95 seconds)
Cbc0010I After 2500 nodes, 31 on tree, 1e+50 best solution, best possible 5070.6222 (19.32 seconds)
Cbc0001I Search completed - best objective 1e+50, took 9727 iterations and 2562 nodes (19.53 seconds)
Cbc0035I Maximum depth 59, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:        691
Linearization cuts added in total:            691  (separation time: 0.003478s)
Total solve time:                         19.5358s (19.5358s in branch-and-bound)
Lower bound:                              5070.62
Upper bound:                              5070.62  (gap: 0.00%)
Branch-and-bound nodes:                      2562
Stats: /tmp/jl_5HnPjj/model.nl  530 [var]   10 [int]  570 [con]   99 [aux]    691 [root]      691 [tot] 0.003478 [sep]  19.5358 [time]  19.5368 [bb]         5.070620e+03 [lower]         5.070620e+03 [upper]    2562 [nodes]
Performance of                           FBBT:	    0.93621s,     1436 runs. fix:   0.149546 shrnk:    3.05914 ubd:          0 2ubd:          0 infeas:          4
Performance of                           OBBT:	   0.371812s,        5 runs. fix:   0.296296 shrnk:    50.0483 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p7
