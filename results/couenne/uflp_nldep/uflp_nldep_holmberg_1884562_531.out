solving instance uflp nldep holmberg 54 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.3 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 6771.4444       54 5.185489
NLP0014I             2         OPT 6771.4445       54 0.504051
Couenne: new cutoff value 6.7714438830e+03 (5.98665 seconds)
Loaded instance "/tmp/jl_6WXfd2/model.nl"
Constraints:         1120
Variables:           1030 (10 integer)
Auxiliaries:          169 (0 integer)

Coin0506I Presolve 1249 (-32) rows, 1049 (-150) columns and 5307 (-182) elements
Clp0006I 0  Obj 0 Primal inf 5614.2311 (210)
Clp0006I 96  Obj 9.2212862e-11 Primal inf 2087.9759 (227)
Clp0006I 175  Obj 2658.4 Primal inf 27906136 (135)
Clp0006I 274  Obj 6443.4575 Primal inf 73490.789 (140)
Clp0006I 305  Obj 6763.9612
Clp0000I Optimal - objective value 6763.9612
Clp0032I Optimal objective 6763.96118 - 305 iterations time 0.022, Presolve 0.00
Clp0000I Optimal - objective value 6763.9612
NLP Heuristic: NLP0014I             3         OPT 6771.4444       27 0.29117
no solution.
Clp0000I Optimal - objective value 6763.9612
Optimality Based BT: 16 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 12 added rows had average density of 2
Cbc0013I At root node, 12 cuts changed objective from 6763.9612 to 6771.139 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 69 row cuts average 2.0 elements, 11 column cuts (11 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.16 seconds)
Optimality Based BT: 12 improved bounds
Optimality Based BT: 15 improved bounds
Optimality Based BT: 13 improved bounds
Optimality Based BT: 9 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 7 improved bounds
Cbc0010I After 100 nodes, 13 on tree, 1e+50 best solution, best possible 6771.4431 (21.57 seconds)
Cbc0001I Search completed - best objective 1e+50, took 793 iterations and 142 nodes (22.01 seconds)
Cbc0035I Maximum depth 13, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1281
Linearization cuts added in total:           1281  (separation time: 0.006863s)
Total solve time:                         22.0375s (22.0375s in branch-and-bound)
Lower bound:                              6771.44
Upper bound:                              6771.44  (gap: 0.00%)
Branch-and-bound nodes:                       142
Stats: /tmp/jl_6WXfd2/model.nl 1030 [var]   10 [int] 1120 [con]  169 [aux]   1281 [root]     1281 [tot] 0.006863 [sep]  22.0375 [time]  22.0396 [bb]         6.771444e+03 [lower]         6.771444e+03 [upper]     142 [nodes]
Performance of                           FBBT:	   0.185458s,      126 runs. fix:          0 shrnk:    9.32137 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    1.52237s,        8 runs. fix:    20.0597 shrnk:    31.1046 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p54
