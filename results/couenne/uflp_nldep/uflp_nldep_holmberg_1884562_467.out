solving instance uflp nldep holmberg 47 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 1811.5882       43 5.455044
Couenne: new cutoff value 1.8115874273e+03 (5.70111 seconds)
Loaded instance "/tmp/jl_P0jl8D/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          159 (0 integer)

Coin0506I Presolve 1139 (-32) rows, 949 (-140) columns and 4807 (-172) elements
Clp0006I 0  Obj 0 Primal inf 2801.4505 (200)
Clp0006I 97  Obj 945.30349 Primal inf 139171.33 (132)
Clp0006I 194  Obj 1796.6274 Primal inf 10664.275 (39)
Clp0006I 209  Obj 1799.7583
Clp0000I Optimal - objective value 1799.7583
Clp0032I Optimal objective 1799.75832 - 209 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 1799.7583
NLP Heuristic: NLP0014I             2         OPT 1811.5882        8 0.095427
no solution.
Clp0000I Optimal - objective value 1799.7583
Optimality Based BT: 25 improved bounds
Probing: 3 improved bounds
Cbc0006I The LP relaxation is infeasible or too expensive
Cbc0031I 20 added rows had average density of 2
Cbc0013I At root node, 20 cuts changed objective from 1799.7583 to 1811.5888 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 87 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0001I Search completed - best objective 1e+50, took 94 iterations and 0 nodes (1.77 seconds)
Cbc0035I Maximum depth 0, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1171
Linearization cuts added in total:           1171  (separation time: 0.005228s)
Total solve time:                         1.78568s (1.78568s in branch-and-bound)
Lower bound:                              1811.59
Upper bound:                              1811.59  (gap: 0.00%)
Branch-and-bound nodes:                         0
Stats: /tmp/jl_P0jl8D/model.nl  930 [var]   10 [int] 1010 [con]  159 [aux]   1171 [root]     1171 [tot] 0.005228 [sep]  1.78569 [time]  1.78757 [bb]         1.811587e+03 [lower]         1.811587e+03 [upper]       0 [nodes]
Performance of                           FBBT:	   0.009695s,        7 runs. fix:          0 shrnk:    65.5607 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.402575s,        1 runs. fix:          6 shrnk:    80.8832 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p47
f0 = 0.30349091130065775
f0 = 0.2726124755578583
f0 = 0.3846570852531593
f0 = 0.3846570852531593
f0 = 0.4296513773355242
f0 = 0.33260486500101155
f0 = 0.35642537257402834
f0 = 0.41112431588984455
f0 = 0.2708479935154126
f0 = 0.274376957600304
