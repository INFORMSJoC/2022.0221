solving instance uflp nldep orlib 114 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 2.2936868750e+06 (1.78152 seconds)
1.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 628890.49       44 1.808327
NLP0014I             2         OPT 629189.54       69 3.149175
Couenne: new cutoff value 6.2918879384e+05 (6.8601 seconds)
Loaded instance "/tmp/jl_WOLJFE/model.nl"
Constraints:         2650
Variables:           2650 (50 integer)
Auxiliaries:          296 (0 integer)

Coin0506I Presolve 3080 (-61) rows, 2786 (-160) columns and 13557 (-270) elements
Clp0006I 0  Obj 0 Primal inf 229.08036 (50)
Clp0006I 136  Obj 619716.54 Primal inf 88.413849 (65)
Clp0006I 251  Obj 625258.52
Clp0000I Optimal - objective value 625258.52
Clp0032I Optimal objective 625258.5168 - 251 iterations time 0.052, Presolve 0.04
Clp0000I Optimal - objective value 625258.52
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 625258.52
Optimality Based BT: 60 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 98 added rows had average density of 2
Cbc0013I At root node, 98 cuts changed objective from 625258.52 to 628888.51 in 5 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 179 row cuts average 2.0 elements, 6 column cuts (6 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (11.85 seconds)
Optimality Based BT: 92 improved bounds
Couenne: new cutoff value 6.2912034393e+05 (29.751 seconds)
Optimality Based BT: 88 improved bounds
Optimality Based BT: 89 improved bounds
Couenne: new cutoff value 6.2894449117e+05 (54.2307 seconds)
Optimality Based BT: 91 improved bounds
Couenne: new cutoff value 6.2891259627e+05 (89.4024 seconds)
Optimality Based BT: 91 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 628891.17 (100.67 seconds)
Cbc0010I After 200 nodes, 98 on tree, 1e+50 best solution, best possible 628891.21 (104.13 seconds)
Cbc0010I After 300 nodes, 148 on tree, 1e+50 best solution, best possible 628891.21 (107.56 seconds)
Cbc0010I After 400 nodes, 197 on tree, 1e+50 best solution, best possible 628891.21 (111.01 seconds)
Cbc0010I After 500 nodes, 247 on tree, 1e+50 best solution, best possible 628891.21 (114.53 seconds)
Cbc0010I After 600 nodes, 297 on tree, 1e+50 best solution, best possible 628891.21 (118.08 seconds)
Cbc0010I After 700 nodes, 346 on tree, 1e+50 best solution, best possible 628891.21 (121.52 seconds)
Cbc0010I After 800 nodes, 396 on tree, 1e+50 best solution, best possible 628891.21 (124.99 seconds)
Couenne: new cutoff value 6.2889136427e+05 (134.212 seconds)
Cbc0010I After 900 nodes, 433 on tree, 1e+50 best solution, best possible 628891.27 (128.45 seconds)
Cbc0010I After 1000 nodes, 441 on tree, 1e+50 best solution, best possible 628891.28 (132.06 seconds)
Cbc0010I After 1100 nodes, 452 on tree, 1e+50 best solution, best possible 628891.28 (135.33 seconds)
Cbc0010I After 1200 nodes, 460 on tree, 1e+50 best solution, best possible 628891.29 (139.00 seconds)
Cbc0010I After 1300 nodes, 474 on tree, 1e+50 best solution, best possible 628891.29 (142.78 seconds)
Cbc0010I After 1400 nodes, 492 on tree, 1e+50 best solution, best possible 628891.29 (146.37 seconds)
Cbc0010I After 1500 nodes, 498 on tree, 1e+50 best solution, best possible 628891.3 (149.78 seconds)
Cbc0010I After 1600 nodes, 504 on tree, 1e+50 best solution, best possible 628891.3 (153.59 seconds)
Cbc0010I After 1700 nodes, 516 on tree, 1e+50 best solution, best possible 628891.31 (157.47 seconds)
Cbc0010I After 1800 nodes, 529 on tree, 1e+50 best solution, best possible 628891.31 (161.07 seconds)
Cbc0010I After 1900 nodes, 540 on tree, 1e+50 best solution, best possible 628891.31 (164.27 seconds)
Couenne: new cutoff value 6.2889136330e+05 (171.459 seconds)
Cbc0004I Integer solution of 628891.36 found after 5049 iterations and 1906 nodes (164.44 seconds)
Cbc0010I After 2000 nodes, 138 on tree, 628891.36 best solution, best possible 628891.32 (168.43 seconds)
Cbc0010I After 2100 nodes, 134 on tree, 628891.36 best solution, best possible 628891.33 (171.85 seconds)
Cbc0010I After 2200 nodes, 123 on tree, 628891.36 best solution, best possible 628891.34 (174.89 seconds)
Cbc0010I After 2300 nodes, 122 on tree, 628891.36 best solution, best possible 628891.34 (178.29 seconds)
Cbc0010I After 2400 nodes, 122 on tree, 628891.36 best solution, best possible 628891.34 (181.75 seconds)
Cbc0010I After 2500 nodes, 121 on tree, 628891.36 best solution, best possible 628891.34 (185.11 seconds)
Cbc0010I After 2600 nodes, 121 on tree, 628891.36 best solution, best possible 628891.34 (188.47 seconds)
Cbc0010I After 2700 nodes, 121 on tree, 628891.36 best solution, best possible 628891.34 (191.95 seconds)
Cbc0010I After 2800 nodes, 115 on tree, 628891.36 best solution, best possible 628891.35 (195.26 seconds)
Cbc0010I After 2900 nodes, 103 on tree, 628891.36 best solution, best possible 628891.35 (198.62 seconds)
Cbc0010I After 3000 nodes, 82 on tree, 628891.36 best solution, best possible 628891.36 (201.58 seconds)
Cbc0010I After 3100 nodes, 84 on tree, 628891.36 best solution, best possible 628891.36 (204.73 seconds)
Cbc0010I After 3200 nodes, 85 on tree, 628891.36 best solution, best possible 628891.36 (207.83 seconds)
Cbc0010I After 3300 nodes, 89 on tree, 628891.36 best solution, best possible 628891.36 (211.17 seconds)
Cbc0010I After 3400 nodes, 89 on tree, 628891.36 best solution, best possible 628891.36 (214.39 seconds)
Cbc0010I After 3500 nodes, 91 on tree, 628891.36 best solution, best possible 628891.36 (217.35 seconds)
Cbc0010I After 3600 nodes, 93 on tree, 628891.36 best solution, best possible 628891.36 (220.38 seconds)
Couenne: new cutoff value 6.2889136252e+05 (229.174 seconds)
Cbc0010I After 3700 nodes, 95 on tree, 628891.36 best solution, best possible 628891.36 (223.65 seconds)
Cbc0010I After 3800 nodes, 93 on tree, 628891.36 best solution, best possible 628891.36 (226.85 seconds)
Cbc0010I After 3900 nodes, 87 on tree, 628891.36 best solution, best possible 628891.36 (229.93 seconds)
Cbc0010I After 4000 nodes, 79 on tree, 628891.36 best solution, best possible 628891.36 (232.73 seconds)
Cbc0010I After 4100 nodes, 62 on tree, 628891.36 best solution, best possible 628891.36 (235.51 seconds)
Cbc0010I After 4200 nodes, 15 on tree, 628891.36 best solution, best possible 628891.36 (237.83 seconds)
Cbc0001I Search completed - best objective 628891.3632950619, took 8843 iterations and 4230 nodes (238.25 seconds)
Cbc0035I Maximum depth 434, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       3141
Linearization cuts added in total:           3141  (separation time: 0.022481s)
Total solve time:                         238.319s (238.319s in branch-and-bound)
Lower bound:                               628891
Upper bound:                               628891  (gap: 0.00%)
Branch-and-bound nodes:                      4230
Stats: /tmp/jl_WOLJFE/model.nl 2650 [var]   50 [int] 2650 [con]  296 [aux]   3141 [root]     3141 [tot] 0.022481 [sep]  238.319 [time]  238.323 [bb]         6.288914e+05 [lower]         6.288914e+05 [upper]    4230 [nodes]
Performance of                           FBBT:	    13.9634s,     2798 runs. fix: 0.00354725 shrnk:    20.8609 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    10.8534s,        6 runs. fix:   0.380952 shrnk:    536.725 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading orlib data file /home/ccontard/git/ipwlb/code/instances/uflp/orlib/cap114.txt
