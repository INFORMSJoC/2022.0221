solving instance uflp nldep holmberg 41 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.0341000000e+04 (0.236867 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 4327.4078       25 0.29682
Couenne: new cutoff value 4.3274075373e+03 (0.538072 seconds)
Loaded instance "/tmp/jl_Me8tON/model.nl"
Constraints:         1010
Variables:            930 (10 integer)
Auxiliaries:          119 (0 integer)

Coin0506I Presolve 1090 (-1) rows, 950 (-99) columns and 4729 (-100) elements
Clp0006I 0  Obj -10904.062 Primal inf 345906.07 (100)
Clp0006I 96  Obj 921.28522 Primal inf 7347.9611 (90)
Clp0006I 192  Obj 3055.7376 Primal inf 2745.3222 (32)
Clp0006I 212  Obj 3371.4705
Clp0000I Optimal - objective value 3371.4705
Clp0032I Optimal objective 3371.470454 - 212 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 3371.4705
NLP Heuristic: NLP0014I             2         OPT 4327.4078       12 0.157124
no solution.
Clp0000I Optimal - objective value 3371.4705
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 15 added rows had average density of 2
Cbc0013I At root node, 15 cuts changed objective from 3371.4705 to 3408.2091 in 8 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 77 row cuts average 2.0 elements, 81 column cuts (81 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.68 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 16 on tree, 1e+50 best solution, best possible 4018.6168 (9.47 seconds)
Cbc0010I After 200 nodes, 21 on tree, 1e+50 best solution, best possible 4214.5951 (10.90 seconds)
Cbc0010I After 300 nodes, 36 on tree, 1e+50 best solution, best possible 4251.602 (12.80 seconds)
Cbc0010I After 400 nodes, 44 on tree, 1e+50 best solution, best possible 4274.0645 (14.71 seconds)
Cbc0010I After 500 nodes, 45 on tree, 1e+50 best solution, best possible 4285.7888 (16.45 seconds)
Cbc0010I After 600 nodes, 34 on tree, 1e+50 best solution, best possible 4302.5037 (18.03 seconds)
Cbc0010I After 700 nodes, 26 on tree, 1e+50 best solution, best possible 4314.0851 (19.65 seconds)
Cbc0010I After 800 nodes, 17 on tree, 1e+50 best solution, best possible 4324.3117 (21.29 seconds)
Cbc0010I After 900 nodes, 10 on tree, 1e+50 best solution, best possible 4326.249 (22.83 seconds)
Cbc0001I Search completed - best objective 1e+50, took 11162 iterations and 976 nodes (23.84 seconds)
Cbc0035I Maximum depth 84, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1091
Linearization cuts added in total:           1091  (separation time: 0.006246s)
Total solve time:                         23.8501s (23.8501s in branch-and-bound)
Lower bound:                              4327.41
Upper bound:                              4327.41  (gap: 0.00%)
Branch-and-bound nodes:                       976
Stats: /tmp/jl_Me8tON/model.nl  930 [var]   10 [int] 1010 [con]  119 [aux]   1091 [root]     1091 [tot] 0.006246 [sep]  23.8501 [time]  23.8517 [bb]         4.327408e+03 [lower]         4.327408e+03 [upper]     976 [nodes]
Performance of                           FBBT:	    1.44872s,     1136 runs. fix:          0 shrnk:    3.41924 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	   0.857386s,        4 runs. fix:          0 shrnk:    12.3474 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
reading holmberg data file /home/ccontard/git/ipwlb/code/instances/uflp/holmberg/p41
