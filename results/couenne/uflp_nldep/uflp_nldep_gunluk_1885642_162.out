solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Couenne: new cutoff value 1.4622999624e+03 (0.191991 seconds)
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 403.27376       40 0.477032
NLP0014I             2         OPT 436.87889       23 0.249072
Loaded instance "/tmp/jl_b9pH5e/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:           99 (0 integer)

Coin0506I Presolve 1041 (0) rows, 901 (-58) columns and 4461 (-58) elements
Clp0006I 0  Obj -3248.4375 Primal inf 1152352.2 (60)
Clp0006I 80  Obj -3248.4375 Primal inf 4123614.6 (66)
Clp0006I 175  Obj 86.984584 Primal inf 7380.8513 (40)
Clp0006I 264  Obj 275.33118
Clp0000I Optimal - objective value 275.33118
Clp0000I Optimal - objective value 275.33118
Clp0032I Optimal objective 275.3311808 - 264 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 275.33118
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 275.33118
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 10 added rows had average density of 2
Cbc0013I At root node, 10 cuts changed objective from 275.33118 to 275.81879 in 15 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 128 row cuts average 2.0 elements, 465 column cuts (465 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (1.25 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 4.3371997950e+02 (6.38145 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 40 on tree, 1e+50 best solution, best possible 276.96256 (12.04 seconds)
Cbc0010I After 200 nodes, 90 on tree, 1e+50 best solution, best possible 276.96256 (13.85 seconds)
Couenne: new cutoff value 4.1179323568e+02 (15.2177 seconds)
Couenne: new cutoff value 4.1175930256e+02 (15.2323 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 300 nodes, 123 on tree, 1e+50 best solution, best possible 297.25272 (20.85 seconds)
Cbc0010I After 400 nodes, 170 on tree, 1e+50 best solution, best possible 297.25272 (22.91 seconds)
Couenne: new cutoff value 4.0523880827e+02 (24.5631 seconds)
Couenne: new cutoff value 4.0520487516e+02 (24.5785 seconds)
Cbc0010I After 500 nodes, 200 on tree, 1e+50 best solution, best possible 356.1178 (24.86 seconds)
Cbc0010I After 600 nodes, 229 on tree, 1e+50 best solution, best possible 364.73924 (26.80 seconds)
Cbc0010I After 700 nodes, 275 on tree, 1e+50 best solution, best possible 364.73924 (28.64 seconds)
Couenne: new cutoff value 4.0451215172e+02 (29.6589 seconds)
Cbc0010I After 800 nodes, 297 on tree, 1e+50 best solution, best possible 370.46763 (30.53 seconds)
Cbc0010I After 900 nodes, 327 on tree, 1e+50 best solution, best possible 370.46763 (32.43 seconds)
Couenne: new cutoff value 4.0442094564e+02 (33.5567 seconds)
Couenne: new cutoff value 4.0440375388e+02 (33.5874 seconds)
Cbc0010I After 1000 nodes, 350 on tree, 1e+50 best solution, best possible 372.20384 (34.32 seconds)
Couenne: new cutoff value 4.0371102818e+02 (36.9226 seconds)
Cbc0010I After 1100 nodes, 386 on tree, 1e+50 best solution, best possible 372.58063 (36.16 seconds)
Cbc0010I After 1200 nodes, 407 on tree, 1e+50 best solution, best possible 374.57054 (38.13 seconds)
Cbc0010I After 1300 nodes, 413 on tree, 1e+50 best solution, best possible 379.43666 (39.97 seconds)
Cbc0010I After 1400 nodes, 413 on tree, 1e+50 best solution, best possible 381.9573 (41.67 seconds)
Cbc0010I After 1500 nodes, 423 on tree, 1e+50 best solution, best possible 385.17947 (43.47 seconds)
Cbc0010I After 1600 nodes, 425 on tree, 1e+50 best solution, best possible 388.54896 (45.11 seconds)
Cbc0010I After 1700 nodes, 437 on tree, 1e+50 best solution, best possible 389.29614 (46.90 seconds)
Cbc0010I After 1800 nodes, 472 on tree, 1e+50 best solution, best possible 389.29614 (48.73 seconds)
Couenne: new cutoff value 4.0327387639e+02 (50.2533 seconds)
Cbc0010I After 1900 nodes, 487 on tree, 1e+50 best solution, best possible 390.29034 (50.34 seconds)
Cbc0010I After 2000 nodes, 506 on tree, 1e+50 best solution, best possible 390.62371 (52.23 seconds)
Couenne: new cutoff value 4.0247275244e+02 (55.1456 seconds)
Cbc0010I After 2100 nodes, 550 on tree, 1e+50 best solution, best possible 390.62371 (54.17 seconds)
Cbc0004I Integer solution of 402.47276 found after 41373 iterations and 2102 nodes (54.20 seconds)
Cbc0010I After 2200 nodes, 167 on tree, 402.47276 best solution, best possible 391.3921 (56.34 seconds)
Cbc0010I After 2300 nodes, 185 on tree, 402.47276 best solution, best possible 392.16839 (58.27 seconds)
Couenne: new cutoff value 4.0178059776e+02 (60.3993 seconds)
Couenne: new cutoff value 4.0178003186e+02 (60.4194 seconds)
Cbc0010I After 2400 nodes, 223 on tree, 402.47276 best solution, best possible 392.67648 (60.10 seconds)
Cbc0010I After 2500 nodes, 227 on tree, 402.47276 best solution, best possible 394.3626 (61.92 seconds)
Cbc0010I After 2600 nodes, 237 on tree, 402.47276 best solution, best possible 395.15663 (63.82 seconds)
Cbc0010I After 2700 nodes, 235 on tree, 402.47276 best solution, best possible 395.52963 (65.45 seconds)
Cbc0010I After 2800 nodes, 238 on tree, 402.47276 best solution, best possible 395.98953 (67.35 seconds)
Cbc0010I After 2900 nodes, 240 on tree, 402.47276 best solution, best possible 396.32429 (68.88 seconds)
Cbc0010I After 3000 nodes, 244 on tree, 402.47276 best solution, best possible 396.87408 (71.05 seconds)
Cbc0010I After 3100 nodes, 247 on tree, 402.47276 best solution, best possible 397.21462 (72.78 seconds)
Cbc0010I After 3200 nodes, 246 on tree, 402.47276 best solution, best possible 397.48105 (74.46 seconds)
Cbc0010I After 3300 nodes, 241 on tree, 402.47276 best solution, best possible 397.93654 (76.05 seconds)
Cbc0010I After 3400 nodes, 243 on tree, 402.47276 best solution, best possible 398.26709 (77.59 seconds)
Cbc0010I After 3500 nodes, 230 on tree, 402.47276 best solution, best possible 398.82989 (79.08 seconds)
Cbc0010I After 3600 nodes, 228 on tree, 402.47276 best solution, best possible 399.0025 (80.69 seconds)
Cbc0010I After 3700 nodes, 204 on tree, 402.47276 best solution, best possible 399.35199 (82.17 seconds)
Cbc0010I After 3800 nodes, 196 on tree, 402.47276 best solution, best possible 399.59394 (83.78 seconds)
Cbc0010I After 3900 nodes, 181 on tree, 402.47276 best solution, best possible 399.78422 (85.33 seconds)
Cbc0010I After 4000 nodes, 164 on tree, 402.47276 best solution, best possible 400.15562 (86.80 seconds)
Cbc0010I After 4100 nodes, 139 on tree, 402.47276 best solution, best possible 400.52314 (88.31 seconds)
Cbc0010I After 4200 nodes, 105 on tree, 402.47276 best solution, best possible 401.05967 (89.56 seconds)
Cbc0010I After 4300 nodes, 57 on tree, 402.47276 best solution, best possible 401.7806 (90.48 seconds)
Cbc0010I After 4400 nodes, 7 on tree, 402.47276 best solution, best possible 402.31241 (90.97 seconds)
Cbc0001I Search completed - best objective 402.4727576492614, took 81122 iterations and 4414 nodes (91.04 seconds)
Cbc0035I Maximum depth 115, 839 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1041
Linearization cuts added in total:           1041  (separation time: 0.003763s)
Total solve time:                         91.0547s (91.0547s in branch-and-bound)
Lower bound:                               401.78
Upper bound:                               401.78  (gap: 0.00%)
Branch-and-bound nodes:                      4414
Stats: /tmp/jl_b9pH5e/model.nl  860 [var]   20 [int]  880 [con]   99 [aux]   1041 [root]     1041 [tot] 0.003763 [sep]  91.0547 [time]  91.0555 [bb]         4.017800e+02 [lower]         4.017800e+02 [upper]    4414 [nodes]
Performance of                           FBBT:	    5.45797s,     5824 runs. fix:   0.014476 shrnk:    1.61048 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.93121s,        7 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-6.txt
