solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-40-80-9.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 2.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 314.40263       69 65.419658
NLP0014I             2         OPT 314.52092       41 1.800566
Couenne: new cutoff value 3.1452103757e+02 (70.4436 seconds)
Loaded instance "/tmp/jl_sMCuWC/model.nl"
Constraints:         3360
Variables:           3320 (40 integer)
Auxiliaries:          359 (0 integer)

Coin0506I Presolve 3879 (-122) rows, 3399 (-280) columns and 17237 (-402) elements
Clp0006I 0  Obj 0 Primal inf 14630.008 (520)
Clp0006I 152  Obj 4.4371796e-14 Primal inf 19474.976 (217)
Clp0006I 304  Obj 264.70279 Primal inf 94402.311 (178)
Clp0006I 456  Obj 312.22476 Primal inf 52121.334 (114)
Clp0006I 511  Obj 313.48793
Clp0000I Optimal - objective value 313.48793
Clp0032I Optimal objective 313.4879345 - 511 iterations time 0.052, Presolve 0.01
Clp0000I Optimal - objective value 313.48793
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 313.48793
Optimality Based BT: 43 improved bounds
Probing: 3 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 60 added rows had average density of 2
Cbc0013I At root node, 60 cuts changed objective from 313.48793 to 314.28303 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 784 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (17.01 seconds)
Optimality Based BT: 70 improved bounds
Optimality Based BT: 69 improved bounds
Optimality Based BT: 22 improved bounds
Optimality Based BT: 9 improved bounds
Cbc0010I After 100 nodes, 41 on tree, 1e+50 best solution, best possible 314.39441 (114.72 seconds)
Cbc0010I After 200 nodes, 88 on tree, 1e+50 best solution, best possible 314.39441 (120.60 seconds)
Cbc0010I After 300 nodes, 138 on tree, 1e+50 best solution, best possible 314.39441 (126.33 seconds)
Cbc0010I After 400 nodes, 188 on tree, 1e+50 best solution, best possible 314.39441 (131.89 seconds)
Couenne: new cutoff value 3.1440594870e+02 (202.66 seconds)
Cbc0004I Integer solution of 314.40595 found after 4451 iterations and 403 nodes (132.04 seconds)
Optimality Based BT: 5 improved bounds
Optimality Based BT: 44 improved bounds
Optimality Based BT: 7 improved bounds
Optimality Based BT: 4 improved bounds
Couenne: new cutoff value 3.1440505494e+02 (249.881 seconds)
Cbc0004I Integer solution of 314.40505 found after 4671 iterations and 416 nodes (179.26 seconds)
Cbc0001I Search completed - best objective 314.4050549365278, took 5128 iterations and 428 nodes (199.35 seconds)
Cbc0035I Maximum depth 201, 10 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4001
Linearization cuts added in total:           4001  (separation time: 0.025774s)
Total solve time:                         199.414s (199.414s in branch-and-bound)
Lower bound:                              314.405
Upper bound:                              314.405  (gap: 0.00%)
Branch-and-bound nodes:                       428
Stats: /tmp/jl_sMCuWC/model.nl 3320 [var]   40 [int] 3360 [con]  359 [aux]   4001 [root]     4001 [tot] 0.025774 [sep]  199.414 [time]  199.421 [bb]         3.144051e+02 [lower]         3.144051e+02 [upper]     428 [nodes]
Performance of                           FBBT:	     2.7147s,      481 runs. fix:          0 shrnk:     35.019 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    22.9891s,        9 runs. fix:    4.53846 shrnk:    202.774 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-40-80-9.txt
f0 = 0.07410824578271875
f0 = 0.00705792816978274
f0 = 0.08822410212228424
f0 = 0.023820507573016746
f0 = 0.05469894331581623
f0 = 0.07851945088883297
f0 = 0.005293446127337054
f0 = 0.05999238944315328
f0 = 0.08822410212228424
f0 = 0.0688147996553817
f0 = 0.07675496884638729
f0 = 0.02205602553057106
f0 = 0.07675496884638729
f0 = 0.05116997923092485
f0 = 0.046758774124810644
f0 = 0.006175687148559896
f0 = 0.06705031761293602
f0 = 0.03881860493380507
f0 = 0.023820507573016746
f0 = 0.0644035945492675
f0 = 0.027349471657908114
f0 = 0.01411585633956548
f0 = 0.01146913327589695
f0 = 0.017644820424456847
f0 = 0.07763720986761014
f0 = 0.024702748594239585
f0 = 0.001764482042445685
f0 = 0.030878435742799484
f0 = 0.04940549718847917
f0 = 0.024702748594239585
f0 = 0.01588033838201116
f0 = 0.06087463046437613
f0 = 0.06263911250682182
f0 = 0.005293446127337054
f0 = 0.04852325616725633
f0 = 0.04499429208236496
f0 = 0.005293446127337054
f0 = 0.027349471657908114
f0 = 0.05999238944315328
f0 = 0.017644820424456847
