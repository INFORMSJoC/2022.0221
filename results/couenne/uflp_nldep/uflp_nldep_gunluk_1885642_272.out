solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-7.txt cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: Couenne: new cutoff value 1.2951808712e+03 (0.915965 seconds)
0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 524.78611       41 1.209026
NLP0014I             2         OPT 541.60559       27 0.765134
Loaded instance "/tmp/jl_D3P9Mw/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          149 (0 integer)

Coin0506I Presolve 2160 (-1) rows, 1950 (-89) columns and 9689 (-90) elements
Clp0006I 0  Obj -4131.5625 Primal inf 4941849.3 (90)
Clp0006I 118  Obj -2398.2538 Primal inf 1017422.2 (102)
Clp0006I 236  Obj 23.906989 Primal inf 11874.732 (63)
Clp0006I 354  Obj 305.57491 Primal inf 14515.088 (64)
Clp0006I 463  Obj 423.82299
Clp0000I Optimal - objective value 423.82299
Clp0000I Optimal - objective value 423.82299
Clp0032I Optimal objective 423.8229871 - 463 iterations time 0.032, Presolve 0.01
Clp0000I Optimal - objective value 423.82299
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 423.82299
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 15 added rows had average density of 2
Cbc0013I At root node, 15 cuts changed objective from 423.82299 to 423.95095 in 10 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 127 row cuts average 2.0 elements, 460 column cuts (460 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (4.10 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 424.66164 (43.65 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 424.66164 (47.23 seconds)
Cbc0010I After 300 nodes, 150 on tree, 1e+50 best solution, best possible 424.66164 (50.09 seconds)
Couenne: new cutoff value 5.3200631773e+02 (53.5788 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 400 nodes, 173 on tree, 1e+50 best solution, best possible 497.03161 (67.18 seconds)
Cbc0010I After 500 nodes, 220 on tree, 1e+50 best solution, best possible 497.03161 (71.92 seconds)
Cbc0010I After 600 nodes, 270 on tree, 1e+50 best solution, best possible 497.03161 (76.15 seconds)
Couenne: new cutoff value 5.2543477762e+02 (79.9717 seconds)
Cbc0010I After 700 nodes, 298 on tree, 1e+50 best solution, best possible 499.06321 (80.43 seconds)
Cbc0010I After 800 nodes, 334 on tree, 1e+50 best solution, best possible 499.06321 (84.73 seconds)
Couenne: new cutoff value 5.2478640160e+02 (91.7246 seconds)
Cbc0010I After 900 nodes, 383 on tree, 1e+50 best solution, best possible 499.06321 (88.66 seconds)
Cbc0010I After 1000 nodes, 387 on tree, 1e+50 best solution, best possible 513.67237 (92.81 seconds)
Cbc0010I After 1100 nodes, 404 on tree, 1e+50 best solution, best possible 516.32138 (97.19 seconds)
Cbc0010I After 1200 nodes, 419 on tree, 1e+50 best solution, best possible 517.81219 (101.27 seconds)
Cbc0010I After 1300 nodes, 435 on tree, 1e+50 best solution, best possible 518.54251 (105.49 seconds)
Cbc0010I After 1400 nodes, 447 on tree, 1e+50 best solution, best possible 519.00738 (109.47 seconds)
Cbc0010I After 1500 nodes, 463 on tree, 1e+50 best solution, best possible 519.81863 (113.64 seconds)
Cbc0010I After 1600 nodes, 478 on tree, 1e+50 best solution, best possible 520.14737 (117.57 seconds)
Cbc0010I After 1700 nodes, 490 on tree, 1e+50 best solution, best possible 520.31482 (121.71 seconds)
Cbc0010I After 1800 nodes, 500 on tree, 1e+50 best solution, best possible 520.53617 (125.74 seconds)
Cbc0010I After 1900 nodes, 508 on tree, 1e+50 best solution, best possible 520.81553 (130.10 seconds)
Cbc0010I After 2000 nodes, 510 on tree, 1e+50 best solution, best possible 521.11618 (134.15 seconds)
Cbc0010I After 2100 nodes, 515 on tree, 1e+50 best solution, best possible 521.28576 (138.17 seconds)
Cbc0010I After 2200 nodes, 517 on tree, 1e+50 best solution, best possible 521.54118 (142.08 seconds)
Cbc0010I After 2300 nodes, 513 on tree, 1e+50 best solution, best possible 521.75191 (145.86 seconds)
Cbc0010I After 2400 nodes, 507 on tree, 1e+50 best solution, best possible 522.02984 (149.41 seconds)
Cbc0010I After 2500 nodes, 498 on tree, 1e+50 best solution, best possible 522.34609 (152.99 seconds)
Cbc0010I After 2600 nodes, 483 on tree, 1e+50 best solution, best possible 522.68071 (156.57 seconds)
Cbc0010I After 2700 nodes, 464 on tree, 1e+50 best solution, best possible 523.18155 (159.87 seconds)
Cbc0010I After 2800 nodes, 447 on tree, 1e+50 best solution, best possible 523.52592 (163.11 seconds)
Cbc0010I After 2900 nodes, 428 on tree, 1e+50 best solution, best possible 523.7228 (166.66 seconds)
Cbc0010I After 3000 nodes, 408 on tree, 1e+50 best solution, best possible 523.92104 (170.14 seconds)
Cbc0010I After 3100 nodes, 377 on tree, 1e+50 best solution, best possible 524.22892 (173.26 seconds)
Cbc0010I After 3200 nodes, 336 on tree, 1e+50 best solution, best possible 524.67441 (175.78 seconds)
Cbc0010I After 3300 nodes, 293 on tree, 1e+50 best solution, best possible 524.79501 (177.67 seconds)
Cbc0010I After 3400 nodes, 243 on tree, 1e+50 best solution, best possible 525.21526 (178.93 seconds)
Cbc0010I After 3500 nodes, 193 on tree, 1e+50 best solution, best possible 525.47192 (180.23 seconds)
Cbc0010I After 3600 nodes, 143 on tree, 1e+50 best solution, best possible 528.40882 (181.42 seconds)
Cbc0010I After 3700 nodes, 93 on tree, 1e+50 best solution, best possible 532.01433 (187.20 seconds)
Cbc0010I After 3800 nodes, 43 on tree, 1e+50 best solution, best possible 532.72939 (188.41 seconds)
Cbc0001I Search completed - best objective 1e+50, took 125400 iterations and 3886 nodes (189.60 seconds)
Cbc0035I Maximum depth 159, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2161
Linearization cuts added in total:           2161  (separation time: 0.010048s)
Total solve time:                          189.63s (189.63s in branch-and-bound)
Lower bound:                              524.786
Upper bound:                              524.786  (gap: 0.00%)
Branch-and-bound nodes:                      3886
Stats: /tmp/jl_D3P9Mw/model.nl 1890 [var]   30 [int] 1920 [con]  149 [aux]   2161 [root]     2161 [tot] 0.010048 [sep]   189.63 [time]  189.632 [bb]         5.247864e+02 [lower]         5.247864e+02 [upper]    3886 [nodes]
Performance of                           FBBT:	    11.0391s,     4572 runs. fix:          0 shrnk:    4.14661 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    6.45607s,        7 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-7.txt
