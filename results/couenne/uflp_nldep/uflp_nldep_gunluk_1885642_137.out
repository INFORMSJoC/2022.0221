solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 213.12698       52 2.030932
Couenne: new cutoff value 2.1312715921e+02 (2.26531 seconds)
NLP0014I             2         OPT 213.12698       38 0.323816
Couenne: new cutoff value 2.1312700731e+02 (2.59088 seconds)
Loaded instance "/tmp/jl_KvEAkX/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1139 (-62) rows, 899 (-140) columns and 4617 (-202) elements
Clp0006I 0  Obj 0 Primal inf 5643.0207 (260)
Clp0006I 97  Obj 1.4160393e-14 Primal inf 39878.427 (68)
Clp0006I 194  Obj 210.45226 Primal inf 157.93894 (42)
Clp0006I 252  Obj 211.26839
Clp0000I Optimal - objective value 211.26839
Clp0032I Optimal objective 211.2683868 - 252 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 211.26839
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 211.26839
Optimality Based BT: 42 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 33 added rows had average density of 2
Cbc0013I At root node, 33 cuts changed objective from 211.26839 to 211.96193 in 7 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 75 row cuts average 2.0 elements, 8 column cuts (8 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.01 seconds)
Optimality Based BT: 28 improved bounds
Optimality Based BT: 26 improved bounds
Optimality Based BT: 38 improved bounds
Cbc0001I Search completed - best objective 1e+50, took 499 iterations and 8 nodes (8.52 seconds)
Cbc0035I Maximum depth 3, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.006747s)
Total solve time:                          8.5375s (8.5375s in branch-and-bound)
Lower bound:                              213.127
Upper bound:                              213.127  (gap: 0.00%)
Branch-and-bound nodes:                         8
Stats: /tmp/jl_KvEAkX/model.nl  860 [var]   20 [int]  880 [con]  179 [aux]   1201 [root]     1201 [tot] 0.006747 [sep]   8.5375 [time]  8.53935 [bb]         2.131270e+02 [lower]         2.131270e+02 [upper]       8 [nodes]
Performance of                           FBBT:	   0.048388s,       39 runs. fix:          0 shrnk:    32.3424 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     2.7689s,        4 runs. fix:    3.71429 shrnk:    131.112 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-3.txt
f0 = 0.04940549718847917
f0 = 0.010586892254674109
f0 = 0.06969704067660455
f0 = 0.008822410212228423
f0 = 0.00352896408489137
f0 = 0.08381289701617003
f0 = 0.03528964084891369
f0 = 0.06528583557049034
f0 = 0.020291543488125376
f0 = 0.07940169191005582
f0 = 0.08028393293127865
f0 = 0.08293065599494719
f0 = 0.05028773820970202
f0 = 0.03352515880646801
f0 = 0.05999238944315328
f0 = 0.07675496884638729
f0 = 0.03881860493380507
f0 = 0.03881860493380507
f0 = 0.00705792816978274
f0 = 0.07322600476149592
