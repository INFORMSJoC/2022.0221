solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-30-60-9.txt sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.9 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 306.05346       52 23.535719
NLP0014I             2         OPT 306.58501       36 0.799847
Couenne: new cutoff value 3.0658511647e+02 (25.3073 seconds)
Loaded instance "/tmp/jl_vuGiRN/model.nl"
Constraints:         1920
Variables:           1890 (30 integer)
Auxiliaries:          299 (0 integer)

Coin0506I Presolve 2159 (-122) rows, 1949 (-240) columns and 9657 (-362) elements
Clp0006I 0  Obj -127.46081 Primal inf 2970.517 (149)
Clp0006I 118  Obj 29.091055 Primal inf 209.88977 (91)
Clp0006I 236  Obj 234.0115 Primal inf 1.3522603 (6)
Clp0006I 244  Obj 234.75547
Clp0000I Optimal - objective value 234.75547
Clp0032I Optimal objective 234.755469 - 244 iterations time 0.022, Presolve 0.01
Clp0000I Optimal - objective value 234.75547
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 234.75547
Optimality Based BT: 67 improved bounds
Probing: 30 improved bounds
NLP Heuristic: no solution.
Cbc0031I 29 added rows had average density of 2
Cbc0013I At root node, 29 cuts changed objective from 234.75547 to 297.85955 in 19 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 100 row cuts average 2.0 elements, 20 column cuts (20 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (7.17 seconds)
Optimality Based BT: 67 improved bounds
Optimality Based BT: 70 improved bounds
Optimality Based BT: 63 improved bounds
Optimality Based BT: 65 improved bounds
Optimality Based BT: 76 improved bounds
Optimality Based BT: 62 improved bounds
Optimality Based BT: 59 improved bounds
Cbc0010I After 100 nodes, 28 on tree, 1e+50 best solution, best possible 302.8145 (90.42 seconds)
Cbc0010I After 200 nodes, 57 on tree, 1e+50 best solution, best possible 302.8145 (94.80 seconds)
Cbc0010I After 300 nodes, 94 on tree, 1e+50 best solution, best possible 302.8145 (98.33 seconds)
Cbc0010I After 400 nodes, 136 on tree, 1e+50 best solution, best possible 302.8145 (101.85 seconds)
Couenne: new cutoff value 3.0619786548e+02 (128.985 seconds)
Cbc0004I Integer solution of 306.19787 found after 3007 iterations and 444 nodes (103.60 seconds)
Cbc0010I After 500 nodes, 71 on tree, 306.19787 best solution, best possible 303.47285 (106.90 seconds)
Optimality Based BT: 79 improved bounds
Cbc0010I After 600 nodes, 93 on tree, 306.19787 best solution, best possible 304.20764 (134.78 seconds)
Cbc0010I After 700 nodes, 110 on tree, 306.19787 best solution, best possible 304.30498 (139.88 seconds)
Cbc0010I After 800 nodes, 134 on tree, 306.19787 best solution, best possible 304.44854 (145.21 seconds)
Cbc0010I After 900 nodes, 158 on tree, 306.19787 best solution, best possible 304.44854 (148.77 seconds)
Cbc0010I After 1000 nodes, 192 on tree, 306.19787 best solution, best possible 304.44854 (152.24 seconds)
Couenne: new cutoff value 3.0607971143e+02 (180.653 seconds)
Cbc0004I Integer solution of 306.07972 found after 7685 iterations and 1075 nodes (155.28 seconds)
Cbc0010I After 1100 nodes, 134 on tree, 306.07972 best solution, best possible 304.57622 (156.93 seconds)
Cbc0010I After 1200 nodes, 152 on tree, 306.07972 best solution, best possible 304.71468 (162.63 seconds)
Cbc0010I After 1300 nodes, 165 on tree, 306.07972 best solution, best possible 304.82327 (178.25 seconds)
Cbc0010I After 1400 nodes, 179 on tree, 306.07972 best solution, best possible 304.84915 (189.12 seconds)
Cbc0010I After 1500 nodes, 190 on tree, 306.07972 best solution, best possible 304.86684 (194.00 seconds)
Cbc0010I After 1600 nodes, 205 on tree, 306.07972 best solution, best possible 304.90827 (198.79 seconds)
Cbc0010I After 1700 nodes, 218 on tree, 306.07972 best solution, best possible 304.94001 (209.47 seconds)
Cbc0010I After 1800 nodes, 228 on tree, 306.07972 best solution, best possible 304.97226 (219.70 seconds)
Cbc0010I After 1900 nodes, 242 on tree, 306.07972 best solution, best possible 305.01991 (224.51 seconds)
Cbc0010I After 2000 nodes, 256 on tree, 306.07972 best solution, best possible 305.02414 (229.57 seconds)
Cbc0010I After 2100 nodes, 266 on tree, 306.07972 best solution, best possible 305.08859 (234.52 seconds)
Cbc0010I After 2200 nodes, 278 on tree, 306.07972 best solution, best possible 305.13859 (239.16 seconds)
Cbc0010I After 2300 nodes, 287 on tree, 306.07972 best solution, best possible 305.19268 (243.41 seconds)
Cbc0010I After 2400 nodes, 293 on tree, 306.07972 best solution, best possible 305.22626 (247.92 seconds)
Cbc0010I After 2500 nodes, 301 on tree, 306.07972 best solution, best possible 305.2488 (252.22 seconds)
Cbc0010I After 2600 nodes, 306 on tree, 306.07972 best solution, best possible 305.26118 (257.92 seconds)
Cbc0010I After 2700 nodes, 315 on tree, 306.07972 best solution, best possible 305.27951 (262.15 seconds)
Optimality Based BT: 84 improved bounds
Cbc0010I After 2800 nodes, 320 on tree, 306.07972 best solution, best possible 305.30687 (267.91 seconds)
Optimality Based BT: 84 improved bounds
Cbc0010I After 2900 nodes, 321 on tree, 306.07972 best solution, best possible 305.33072 (273.69 seconds)
Cbc0010I After 3000 nodes, 331 on tree, 306.07972 best solution, best possible 305.35062 (278.70 seconds)
Cbc0010I After 3100 nodes, 342 on tree, 306.07972 best solution, best possible 305.35614 (282.83 seconds)
Cbc0010I After 3200 nodes, 343 on tree, 306.07972 best solution, best possible 305.37869 (287.83 seconds)
Cbc0010I After 3300 nodes, 352 on tree, 306.07972 best solution, best possible 305.38575 (291.86 seconds)
Cbc0010I After 3400 nodes, 354 on tree, 306.07972 best solution, best possible 305.40346 (296.39 seconds)
Cbc0010I After 3500 nodes, 367 on tree, 306.07972 best solution, best possible 305.41008 (301.32 seconds)
Cbc0010I After 3600 nodes, 374 on tree, 306.07972 best solution, best possible 305.41423 (305.21 seconds)
Cbc0010I After 3700 nodes, 374 on tree, 306.07972 best solution, best possible 305.4246 (308.89 seconds)
Cbc0010I After 3800 nodes, 382 on tree, 306.07972 best solution, best possible 305.44722 (312.88 seconds)
Cbc0010I After 3900 nodes, 386 on tree, 306.07972 best solution, best possible 305.45848 (316.85 seconds)
Cbc0010I After 4000 nodes, 392 on tree, 306.07972 best solution, best possible 305.4632 (320.44 seconds)
Cbc0010I After 4100 nodes, 398 on tree, 306.07972 best solution, best possible 305.47134 (324.21 seconds)
Cbc0010I After 4200 nodes, 403 on tree, 306.07972 best solution, best possible 305.47878 (328.36 seconds)
Cbc0010I After 4300 nodes, 403 on tree, 306.07972 best solution, best possible 305.49331 (332.24 seconds)
Cbc0010I After 4400 nodes, 405 on tree, 306.07972 best solution, best possible 305.50828 (336.26 seconds)
Cbc0010I After 4500 nodes, 407 on tree, 306.07972 best solution, best possible 305.51347 (340.11 seconds)
Cbc0010I After 4600 nodes, 408 on tree, 306.07972 best solution, best possible 305.52832 (343.98 seconds)
Cbc0010I After 4700 nodes, 410 on tree, 306.07972 best solution, best possible 305.53462 (347.88 seconds)
Cbc0010I After 4800 nodes, 412 on tree, 306.07972 best solution, best possible 305.54036 (351.74 seconds)
Cbc0010I After 4900 nodes, 410 on tree, 306.07972 best solution, best possible 305.55537 (355.93 seconds)
Cbc0010I After 5000 nodes, 408 on tree, 306.07972 best solution, best possible 305.57278 (359.94 seconds)
Cbc0010I After 5100 nodes, 405 on tree, 306.07972 best solution, best possible 305.57935 (364.13 seconds)
Cbc0010I After 5200 nodes, 399 on tree, 306.07972 best solution, best possible 305.59883 (368.22 seconds)
Cbc0010I After 5300 nodes, 389 on tree, 306.07972 best solution, best possible 305.61121 (372.03 seconds)
Cbc0010I After 5400 nodes, 386 on tree, 306.07972 best solution, best possible 305.62142 (376.16 seconds)
Cbc0010I After 5500 nodes, 379 on tree, 306.07972 best solution, best possible 305.64496 (380.10 seconds)
Cbc0010I After 5600 nodes, 368 on tree, 306.07972 best solution, best possible 305.65838 (384.01 seconds)
Cbc0010I After 5700 nodes, 362 on tree, 306.07972 best solution, best possible 305.67566 (387.92 seconds)
Cbc0010I After 5800 nodes, 348 on tree, 306.07972 best solution, best possible 305.69495 (391.98 seconds)
Cbc0010I After 5900 nodes, 338 on tree, 306.07972 best solution, best possible 305.70346 (395.97 seconds)
Cbc0010I After 6000 nodes, 324 on tree, 306.07972 best solution, best possible 305.71587 (399.88 seconds)
Cbc0010I After 6100 nodes, 309 on tree, 306.07972 best solution, best possible 305.7339 (403.65 seconds)
Cbc0010I After 6200 nodes, 292 on tree, 306.07972 best solution, best possible 305.75944 (407.15 seconds)
Cbc0010I After 6300 nodes, 273 on tree, 306.07972 best solution, best possible 305.77957 (410.63 seconds)
Cbc0010I After 6400 nodes, 254 on tree, 306.07972 best solution, best possible 305.80202 (414.31 seconds)
Couenne: new cutoff value 3.0607915627e+02 (442.441 seconds)
Cbc0004I Integer solution of 306.07916 found after 71479 iterations and 6481 nodes (417.05 seconds)
Cbc0010I After 6500 nodes, 248 on tree, 306.07916 best solution, best possible 305.81336 (417.80 seconds)
Cbc0010I After 6600 nodes, 224 on tree, 306.07916 best solution, best possible 305.83515 (421.49 seconds)
Cbc0010I After 6700 nodes, 190 on tree, 306.07916 best solution, best possible 305.87116 (424.90 seconds)
Cbc0010I After 6800 nodes, 161 on tree, 306.07916 best solution, best possible 305.91247 (428.67 seconds)
Cbc0010I After 6900 nodes, 125 on tree, 306.07916 best solution, best possible 305.95996 (431.84 seconds)
Cbc0010I After 7000 nodes, 92 on tree, 306.07916 best solution, best possible 306.00263 (435.33 seconds)
Cbc0010I After 7100 nodes, 49 on tree, 306.07916 best solution, best possible 306.05468 (438.11 seconds)
Couenne: new cutoff value 3.0607848060e+02 (465.061 seconds)
Cbc0004I Integer solution of 306.07848 found after 80111 iterations and 7154 nodes (439.67 seconds)
Couenne: new cutoff value 3.0607825319e+02 (465.825 seconds)
Cbc0004I Integer solution of 306.07825 found after 80266 iterations and 7184 nodes (440.44 seconds)
Cbc0010I After 7200 nodes, 14 on tree, 306.07825 best solution, best possible 306.07694 (440.74 seconds)
Couenne: new cutoff value 3.0607816248e+02 (466.874 seconds)
Cbc0004I Integer solution of 306.07816 found after 80424 iterations and 7225 nodes (441.48 seconds)
Couenne: new cutoff value 3.0607749302e+02 (466.92 seconds)
Cbc0004I Integer solution of 306.07749 found after 80425 iterations and 7226 nodes (441.53 seconds)
Cbc0001I Search completed - best objective 306.0774930158603, took 80425 iterations and 7226 nodes (441.59 seconds)
Cbc0035I Maximum depth 177, 659 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       2281
Linearization cuts added in total:           2281  (separation time: 0.016017s)
Total solve time:                         441.624s (441.624s in branch-and-bound)
Lower bound:                              306.077
Upper bound:                              306.077  (gap: 0.00%)
Branch-and-bound nodes:                      7226
Stats: /tmp/jl_vuGiRN/model.nl 1890 [var]   30 [int] 1920 [con]  299 [aux]   2281 [root]     2281 [tot] 0.016017 [sep]  441.624 [time]  441.628 [bb]         3.060775e+02 [lower]         3.060775e+02 [upper]    7226 [nodes]
Performance of                           FBBT:	    24.2699s,     8097 runs. fix:          0 shrnk:    3.03158 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    20.0435s,       11 runs. fix:     3.6315 shrnk:    203.165 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-30-60-9.txt
