solving instance uflp nldep gunluk ../../../../../instances/uflp/gunluk/gunluk-20-40-2.txt pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 230.38634       49 1.800414
NLP0014I             2         OPT 230.51339       33 0.277983
Couenne: new cutoff value 2.3051345847e+02 (2.33413 seconds)
Loaded instance "/tmp/jl_krfbry/model.nl"
Constraints:          880
Variables:            860 (20 integer)
Auxiliaries:          179 (0 integer)

Coin0506I Presolve 1139 (-62) rows, 899 (-140) columns and 4617 (-202) elements
Clp0006I 0  Obj 0 Primal inf 5749.39 (260)
Clp0006I 97  Obj 2.0125247e-14 Primal inf 7312.8152 (58)
Clp0006I 194  Obj 228.75335 Primal inf 158.04583 (40)
Clp0006I 243  Obj 229.25327
Clp0000I Optimal - objective value 229.25327
Clp0032I Optimal objective 229.253272 - 243 iterations time 0.012, Presolve 0.00
Clp0000I Optimal - objective value 229.25327
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 229.25327
Optimality Based BT: 35 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 28 added rows had average density of 2
Cbc0013I At root node, 28 cuts changed objective from 229.25327 to 230.30683 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 350 row cuts average 2.0 elements, 21 column cuts (21 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (2.23 seconds)
Optimality Based BT: 41 improved bounds
Optimality Based BT: 38 improved bounds
Optimality Based BT: 8 improved bounds
Optimality Based BT: 6 improved bounds
Cbc0010I After 100 nodes, 47 on tree, 1e+50 best solution, best possible 230.38644 (12.95 seconds)
Couenne: new cutoff value 2.3038721482e+02 (16.6776 seconds)
Couenne: new cutoff value 2.3038645119e+02 (16.6947 seconds)
Cbc0004I Integer solution of 230.38645 found after 1392 iterations and 186 nodes (14.33 seconds)
Cbc0001I Search completed - best objective 230.3864511869118, took 1392 iterations and 186 nodes (14.42 seconds)
Cbc0035I Maximum depth 92, 0 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       1201
Linearization cuts added in total:           1201  (separation time: 0.005701s)
Total solve time:                         14.4367s (14.4367s in branch-and-bound)
Lower bound:                              230.386
Upper bound:                              230.386  (gap: 0.00%)
Branch-and-bound nodes:                       186
Stats: /tmp/jl_krfbry/model.nl  860 [var]   20 [int]  880 [con]  179 [aux]   1201 [root]     1201 [tot] 0.005701 [sep]  14.4367 [time]  14.4386 [bb]         2.303865e+02 [lower]         2.303865e+02 [upper]     186 [nodes]
Performance of                           FBBT:	    0.28435s,      231 runs. fix:          0 shrnk:    22.9958 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    2.61813s,        5 runs. fix:    2.58824 shrnk:    164.049 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_uflp_nldep(filename::String, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool, with_cap_constraint::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:783
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/uflp_nldep/script.jl:15
Generating Gunluk and Lee data file ../../../../../instances/uflp/gunluk/gunluk-20-40-2.txt
f0 = 0.003528964084891368
f0 = 0.05293446127337052
f0 = 0.06793255863415884
f0 = 0.033525158806467996
f0 = 0.0441120510611421
f0 = 0.01852706144567968
f0 = 0.03881860493380505
f0 = 0.023820507573016736
f0 = 0.014115856339565473
f0 = 0.04587653310358778
f0 = 0.02911395370035379
f0 = 0.04146532799747357
f0 = 0.08116617395250147
f0 = 0.04058308697625074
f0 = 0.04234756901869642
f0 = 0.054698943315816206
f0 = 0.04058308697625074
f0 = 0.0026467230636685263
f0 = 0.07499048680394158
f0 = 0.00882241021222842
