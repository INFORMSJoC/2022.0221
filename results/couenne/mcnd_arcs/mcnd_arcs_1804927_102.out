solving instance mcnd arcs c25_100_30_V_T_5 3 6 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.8 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 161722.62       96 59.127661
NLP0014I             2      INFEAS 20.36421      345 91.422311
Loaded instance "/tmp/jl_TtQVNu/model.nl"
Constraints:         4200
Variables:           3350 (125 integer)
Auxiliaries:         1327 (3 integer)

Coin0506I Presolve 4904 (-185) rows, 3553 (-1124) columns and 23215 (-1429) elements
Clp0006I 0  Obj 3103.3742 Primal inf 671.35603 (68)
Clp0006I 173  Obj 3103.3742 Primal inf 3896.0768 (216)
Clp0006I 346  Obj 3103.3742 Primal inf 10211266 (636)
Clp0006I 519  Obj 3699.9962 Primal inf 134431.92 (654)
Clp0006I 692  Obj 4165.4408 Primal inf 125334.34 (804)
Clp0006I 865  Obj 4317.9568 Primal inf 525247.33 (878)
Clp0006I 1038  Obj 4529.4516 Primal inf 118341.34 (997)
Clp0006I 1211  Obj 4702.9033 Primal inf 22919.831 (1125)
Clp0006I 1378  Obj 4835.1461 Primal inf 31985.644 (1168)
Clp0006I 1548  Obj 5010.3673 Primal inf 9539.6134 (1083)
Clp0006I 1706  Obj 5147.061 Primal inf 7662.3326 (949)
Clp0006I 1864  Obj 5342.3252 Primal inf 34783.014 (1398)
Clp0006I 2024  Obj 5544.8603 Primal inf 56624.147 (1356)
Clp0006I 2185  Obj 5745.6501 Primal inf 17093.966 (1145)
Clp0006I 2336  Obj 5967.5981 Primal inf 20631.273 (1200)
Clp0006I 2509  Obj 6343.2652 Primal inf 20110.811 (1231)
Clp0006I 2682  Obj 6613.2766 Primal inf 15467.48 (1173)
Clp0006I 2844  Obj 7274.4629 Primal inf 577443.68 (1396)
Clp0006I 3011  Obj 8617.401 Primal inf 208272.53 (1340)
Clp0006I 3178  Obj 10381.758 Primal inf 27086.703 (1192)
Clp0006I 3351  Obj 13460.609 Primal inf 24929.519 (1065)
Clp0006I 3524  Obj 15388.705 Primal inf 17959.871 (1231)
Clp0006I 3697  Obj 21323.114 Primal inf 17526.318 (974)
Clp0006I 3870  Obj 25913.836 Primal inf 17207.607 (978)
Clp0006I 4043  Obj 31380.731 Primal inf 5295.3198 (754)
Clp0006I 4216  Obj 34009.631 Primal inf 45404.719 (1070)
Clp0006I 4389  Obj 37059.024 Primal inf 15194.607 (1073)
Clp0006I 4562  Obj 43109.393 Primal inf 13111.251 (960)
Clp0006I 4735  Obj 46256.229 Primal inf 7740.9742 (762)
Clp0006I 4908  Obj 48712.975 Primal inf 4672.2708 (844)
Clp0006I 5081  Obj 49723.847 Primal inf 3938.7274 (485)
Clp0006I 5254  Obj 52047.199 Primal inf 2121.295 (518)
Clp0006I 5427  Obj 53760.526 Primal inf 223.88149 (233)
Clp0006I 5562  Obj 54282.106
Clp0000I Optimal - objective value 54282.106
Clp0032I Optimal objective 54282.10609 - 5562 iterations time 2.162, Presolve 0.02
Clp0000I Optimal - objective value 54282.106
NLP Heuristic: NLP0014I             3      INFEAS 9.4485428      174 36.216781
no solution.
Clp0000I Optimal - objective value 54282.106
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 136 added rows had average density of 2
Cbc0013I At root node, 136 cuts changed objective from 54282.106 to 92076.725 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1224 row cuts average 2.0 elements, 152 column cuts (288 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (204.96 seconds)
Optimality Based BT: 0 improved bounds
Couenne: new cutoff value 2.5590090809e+05 (564.114 seconds)
Cbc0012I Integer solution of 255900.91 found by Couenne Rounding NLP after 4407 iterations and 1 nodes (398.94 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 255900.91 best solution, best possible 92943.869 (1944.04 seconds)
Cbc0010I After 200 nodes, 100 on tree, 255900.91 best solution, best possible 92943.869 (1970.71 seconds)
Cbc0010I After 300 nodes, 149 on tree, 255900.91 best solution, best possible 92943.869 (2002.55 seconds)
Cbc0010I After 400 nodes, 199 on tree, 255900.91 best solution, best possible 92943.869 (2031.63 seconds)
Cbc0010I After 500 nodes, 248 on tree, 255900.91 best solution, best possible 92943.869 (2058.51 seconds)
Cbc0010I After 600 nodes, 298 on tree, 255900.91 best solution, best possible 92943.869 (2082.72 seconds)
Cbc0010I After 700 nodes, 346 on tree, 255900.91 best solution, best possible 92943.869 (2104.32 seconds)
Cbc0010I After 800 nodes, 393 on tree, 255900.91 best solution, best possible 92943.869 (2123.61 seconds)
Cbc0010I After 900 nodes, 440 on tree, 255900.91 best solution, best possible 92943.869 (2143.57 seconds)
Cbc0010I After 1000 nodes, 489 on tree, 255900.91 best solution, best possible 92943.869 (2161.93 seconds)
Cbc0010I After 1100 nodes, 536 on tree, 255900.91 best solution, best possible 92943.869 (2178.78 seconds)
Cbc0010I After 1200 nodes, 585 on tree, 255900.91 best solution, best possible 92943.869 (2193.92 seconds)
Cbc0010I After 1300 nodes, 631 on tree, 255900.91 best solution, best possible 92943.869 (2208.61 seconds)
Cbc0010I After 1400 nodes, 679 on tree, 255900.91 best solution, best possible 92943.869 (2223.26 seconds)
Cbc0010I After 1500 nodes, 727 on tree, 255900.91 best solution, best possible 92943.869 (2237.46 seconds)
Cbc0010I After 1600 nodes, 777 on tree, 255900.91 best solution, best possible 92943.869 (2251.77 seconds)
Cbc0010I After 1700 nodes, 822 on tree, 255900.91 best solution, best possible 92943.869 (2265.35 seconds)
Cbc0010I After 1800 nodes, 861 on tree, 255900.91 best solution, best possible 92943.869 (2279.30 seconds)
Cbc0010I After 1900 nodes, 902 on tree, 255900.91 best solution, best possible 92943.869 (2293.27 seconds)
Cbc0010I After 2000 nodes, 931 on tree, 255900.91 best solution, best possible 92943.869 (2307.59 seconds)
Cbc0010I After 2100 nodes, 962 on tree, 255900.91 best solution, best possible 92943.869 (2320.64 seconds)
Cbc0010I After 2200 nodes, 996 on tree, 255900.91 best solution, best possible 92943.869 (2335.09 seconds)
Cbc0010I After 2300 nodes, 1030 on tree, 255900.91 best solution, best possible 92943.869 (2349.53 seconds)
Cbc0010I After 2400 nodes, 1064 on tree, 255900.91 best solution, best possible 92943.869 (2364.35 seconds)
Cbc0010I After 2500 nodes, 1094 on tree, 255900.91 best solution, best possible 92943.869 (2377.26 seconds)
Cbc0010I After 2600 nodes, 1131 on tree, 255900.91 best solution, best possible 92943.869 (2392.46 seconds)
Cbc0010I After 2700 nodes, 1151 on tree, 255900.91 best solution, best possible 92943.869 (2408.51 seconds)
Cbc0010I After 2800 nodes, 1170 on tree, 255900.91 best solution, best possible 92943.869 (2427.20 seconds)
Cbc0010I After 2900 nodes, 1197 on tree, 255900.91 best solution, best possible 92943.869 (2444.22 seconds)
Cbc0010I After 3000 nodes, 1215 on tree, 255900.91 best solution, best possible 92943.869 (2461.61 seconds)
Cbc0010I After 3100 nodes, 1241 on tree, 255900.91 best solution, best possible 92943.869 (2477.63 seconds)
Couenne: new cutoff value 1.6828031442e+05 (2656.11 seconds)
Cbc0004I Integer solution of 168280.31 found after 267036 iterations and 3172 nodes (2490.93 seconds)
Cbc0010I After 3200 nodes, 1120 on tree, 168280.31 best solution, best possible 93075.869 (2499.72 seconds)
Cbc0010I After 3300 nodes, 1170 on tree, 168280.31 best solution, best possible 93075.869 (2525.96 seconds)
Cbc0010I After 3400 nodes, 1219 on tree, 168280.31 best solution, best possible 93075.869 (2554.82 seconds)
Cbc0010I After 3500 nodes, 1245 on tree, 168280.31 best solution, best possible 93075.869 (2579.20 seconds)
Cbc0010I After 3600 nodes, 1273 on tree, 168280.31 best solution, best possible 93075.869 (2609.43 seconds)
Cbc0010I After 3700 nodes, 1319 on tree, 168280.31 best solution, best possible 93080.267 (2635.68 seconds)
Cbc0010I After 3800 nodes, 1369 on tree, 168280.31 best solution, best possible 93080.267 (2662.55 seconds)
Cbc0010I After 3900 nodes, 1398 on tree, 168280.31 best solution, best possible 93080.267 (2688.41 seconds)
Cbc0010I After 4000 nodes, 1433 on tree, 168280.31 best solution, best possible 93080.267 (2714.19 seconds)
Cbc0010I After 4100 nodes, 1466 on tree, 168280.31 best solution, best possible 93080.267 (2740.86 seconds)
Cbc0010I After 4200 nodes, 1500 on tree, 168280.31 best solution, best possible 93080.267 (2770.63 seconds)
Cbc0010I After 4300 nodes, 1545 on tree, 168280.31 best solution, best possible 93080.267 (2798.49 seconds)
Cbc0010I After 4400 nodes, 1590 on tree, 168280.31 best solution, best possible 93080.267 (2823.91 seconds)
Cbc0010I After 4500 nodes, 1631 on tree, 168280.31 best solution, best possible 93080.267 (2848.51 seconds)
Cbc0010I After 4600 nodes, 1675 on tree, 168280.31 best solution, best possible 93080.267 (2872.32 seconds)
Cbc0010I After 4700 nodes, 1712 on tree, 168280.31 best solution, best possible 93080.267 (2890.05 seconds)
Cbc0010I After 4800 nodes, 1759 on tree, 168280.31 best solution, best possible 93080.267 (2910.05 seconds)
Cbc0010I After 4900 nodes, 1808 on tree, 168280.31 best solution, best possible 93080.267 (2929.69 seconds)
Cbc0010I After 5000 nodes, 1854 on tree, 168280.31 best solution, best possible 93080.267 (2948.69 seconds)
Cbc0010I After 5100 nodes, 1902 on tree, 168280.31 best solution, best possible 93080.267 (2967.87 seconds)
Cbc0010I After 5200 nodes, 1950 on tree, 168280.31 best solution, best possible 93080.267 (2986.64 seconds)
Cbc0010I After 5300 nodes, 1996 on tree, 168280.31 best solution, best possible 93080.267 (3004.72 seconds)
Cbc0010I After 5400 nodes, 2043 on tree, 168280.31 best solution, best possible 93080.267 (3023.75 seconds)
Cbc0010I After 5500 nodes, 2089 on tree, 168280.31 best solution, best possible 93080.267 (3042.08 seconds)
Cbc0010I After 5600 nodes, 2124 on tree, 168280.31 best solution, best possible 93080.267 (3060.15 seconds)
Cbc0010I After 5700 nodes, 2145 on tree, 168280.31 best solution, best possible 93080.267 (3077.01 seconds)
Cbc0010I After 5800 nodes, 2173 on tree, 168280.31 best solution, best possible 93080.267 (3094.25 seconds)
Cbc0010I After 5900 nodes, 2180 on tree, 168280.31 best solution, best possible 93080.267 (3106.70 seconds)
Cbc0010I After 6000 nodes, 2199 on tree, 168280.31 best solution, best possible 93080.267 (3121.06 seconds)
Cbc0010I After 6100 nodes, 2212 on tree, 168280.31 best solution, best possible 93080.267 (3135.30 seconds)
Cbc0010I After 6200 nodes, 2227 on tree, 168280.31 best solution, best possible 93080.267 (3150.19 seconds)
Cbc0010I After 6300 nodes, 2245 on tree, 168280.31 best solution, best possible 93080.267 (3169.25 seconds)
Cbc0010I After 6400 nodes, 2265 on tree, 168280.31 best solution, best possible 93269.714 (3186.88 seconds)
Cbc0010I After 6500 nodes, 2315 on tree, 168280.31 best solution, best possible 93269.714 (3211.48 seconds)
Cbc0010I After 6600 nodes, 2365 on tree, 168280.31 best solution, best possible 93269.714 (3240.20 seconds)
Cbc0010I After 6700 nodes, 2395 on tree, 168280.31 best solution, best possible 93269.714 (3265.62 seconds)
Cbc0010I After 6800 nodes, 2423 on tree, 168280.31 best solution, best possible 93269.714 (3293.28 seconds)
Cbc0010I After 6900 nodes, 2452 on tree, 168280.31 best solution, best possible 93269.714 (3322.73 seconds)
Cbc0010I After 7000 nodes, 2497 on tree, 168280.31 best solution, best possible 93502.396 (3351.79 seconds)
Cbc0010I After 7100 nodes, 2547 on tree, 168280.31 best solution, best possible 93502.396 (3378.54 seconds)
Cbc0010I After 7200 nodes, 2580 on tree, 168280.31 best solution, best possible 93502.396 (3404.39 seconds)
Cbc0010I After 7300 nodes, 2616 on tree, 168280.31 best solution, best possible 93502.396 (3431.17 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 168280.31 (best possible 93502.396), took 700481 iterations and 7314 nodes (3443.66 seconds)
Cbc0035I Maximum depth 1585, 221 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5089
Linearization cuts added in total:           5089  (separation time: 0.069309s)
Total solve time:                         3448.08s (3448.08s in branch-and-bound)
Lower bound:                              93502.4
Upper bound:                               168280  (gap: 79.97%)
Branch-and-bound nodes:                      7314
Stats: /tmp/jl_TtQVNu/model.nl 3350 [var]  125 [int] 4200 [con] 1327 [aux]   5089 [root]     5089 [tot] 0.069309 [sep]  3448.08 [time]  3448.09 [bb]         9.350240e+04 [lower]         1.682803e+05 [upper]    7314 [nodes]
Performance of                           FBBT:	    231.336s,     8578 runs. fix:   0.114855 shrnk:  0.0901221 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	    27.7399s,        5 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
