solving instance mcnd arcs c25_100_10_F_L_5 3 6 exp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 32454.531     1744 133.75466
NLP0014I             2      INFEAS 7.9999996       67 3.495093
Loaded instance "/tmp/jl_taFhiw/model.nl"
Constraints:         1700
Variables:           1350 (125 integer)
Auxiliaries:         1027 (0 integer)

Coin0506I Presolve 2975 (-326) rows, 1500 (-877) columns and 10300 (-1392) elements
Clp0006I 0  Obj 0 Primal inf 3718.5005 (950)
Clp0006I 134  Obj 9.3096363e-16 Primal inf 1725.3415 (682)
Clp0006I 268  Obj 1398.0146 Primal inf 1838.8166 (653)
Clp0006I 402  Obj 4518.4193 Primal inf 1387.0534 (608)
Clp0006I 536  Obj 8230.7182 Primal inf 5089.3434 (559)
Clp0006I 670  Obj 11412.665 Primal inf 1994.5805 (483)
Clp0006I 804  Obj 14195.234 Primal inf 5532.1954 (662)
Clp0006I 938  Obj 15954.611 Primal inf 22133.525 (754)
Clp0006I 1072  Obj 17566.073 Primal inf 2620.5826 (679)
Clp0006I 1198  Obj 18614.44 Primal inf 14478.746 (767)
Clp0006I 1332  Obj 19573.475 Primal inf 15894.766 (621)
Clp0006I 1447  Obj 20116.463 Primal inf 856.7795 (428)
Clp0006I 1562  Obj 20446.025 Primal inf 3746.9836 (580)
Clp0006I 1661  Obj 20665.4 Primal inf 318.2019 (286)
Clp0006I 1764  Obj 20745.897 Primal inf 0.24490215 (7)
Clp0006I 1771  Obj 20746.397
Clp0000I Optimal - objective value 20746.397
Clp0032I Optimal objective 20746.39744 - 1771 iterations time 0.362, Presolve 0.01
Clp0000I Optimal - objective value 20746.397
NLP Heuristic: NLP0014I             3      INFEAS 7      166 5.989302
no solution.
Clp0000I Optimal - objective value 20746.397
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 58 added rows had average density of 2
Cbc0013I At root node, 58 cuts changed objective from 20746.397 to 20983.698 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 455 row cuts average 2.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (39.60 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 46 on tree, 1e+50 best solution, best possible 21387.333 (299.16 seconds)
Cbc0010I After 200 nodes, 91 on tree, 1e+50 best solution, best possible 21387.333 (308.46 seconds)
Cbc0010I After 300 nodes, 127 on tree, 1e+50 best solution, best possible 21387.333 (315.96 seconds)
Cbc0010I After 400 nodes, 167 on tree, 1e+50 best solution, best possible 21387.333 (323.48 seconds)
Cbc0010I After 500 nodes, 215 on tree, 1e+50 best solution, best possible 21387.333 (330.10 seconds)
Cbc0010I After 600 nodes, 264 on tree, 1e+50 best solution, best possible 21387.333 (335.51 seconds)
Couenne: new cutoff value 5.7437399270e+04 (480.08 seconds)
Cbc0004I Integer solution of 57437.399 found after 70395 iterations and 665 nodes (338.68 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 5 improved bounds
Optimality Based BT: 6 improved bounds
Cbc0010I After 700 nodes, 194 on tree, 57437.399 best solution, best possible 21725.051 (631.94 seconds)
Cbc0010I After 800 nodes, 242 on tree, 57437.399 best solution, best possible 21725.051 (652.00 seconds)
Cbc0010I After 900 nodes, 292 on tree, 57437.399 best solution, best possible 21725.051 (663.74 seconds)
Cbc0010I After 1000 nodes, 338 on tree, 57437.399 best solution, best possible 21725.051 (675.11 seconds)
Cbc0010I After 1100 nodes, 388 on tree, 57437.399 best solution, best possible 21725.051 (686.14 seconds)
Cbc0010I After 1200 nodes, 438 on tree, 57437.399 best solution, best possible 21725.051 (694.61 seconds)
Cbc0010I After 1300 nodes, 488 on tree, 57437.399 best solution, best possible 21725.051 (701.36 seconds)
Couenne: new cutoff value 5.5193431969e+04 (846.862 seconds)
Cbc0004I Integer solution of 55193.432 found after 152212 iterations and 1362 nodes (705.47 seconds)
Optimality Based BT: 16 improved bounds
Optimality Based BT: 13 improved bounds
Cbc0010I After 1400 nodes, 335 on tree, 55193.432 best solution, best possible 21827.62 (848.94 seconds)
Cbc0010I After 1500 nodes, 383 on tree, 55193.432 best solution, best possible 21827.62 (867.75 seconds)
Cbc0010I After 1600 nodes, 428 on tree, 55193.432 best solution, best possible 21827.62 (879.28 seconds)
Cbc0010I After 1700 nodes, 468 on tree, 55193.432 best solution, best possible 21827.62 (889.25 seconds)
Cbc0010I After 1800 nodes, 513 on tree, 55193.432 best solution, best possible 21827.62 (897.37 seconds)
Couenne: new cutoff value 5.0085221372e+04 (1044.52 seconds)
Couenne: new cutoff value 5.0085209362e+04 (1044.68 seconds)
Cbc0004I Integer solution of 50085.209 found after 208874 iterations and 1896 nodes (903.29 seconds)
Cbc0010I After 1900 nodes, 341 on tree, 50085.209 best solution, best possible 22194.003 (935.98 seconds)
Cbc0010I After 2000 nodes, 388 on tree, 50085.209 best solution, best possible 22194.003 (959.06 seconds)
Cbc0010I After 2100 nodes, 434 on tree, 50085.209 best solution, best possible 22194.003 (973.08 seconds)
Cbc0010I After 2200 nodes, 476 on tree, 50085.209 best solution, best possible 22194.003 (984.24 seconds)
Cbc0010I After 2300 nodes, 522 on tree, 50085.209 best solution, best possible 22194.003 (993.59 seconds)
Cbc0010I After 2400 nodes, 571 on tree, 50085.209 best solution, best possible 22194.003 (1000.75 seconds)
Couenne: new cutoff value 4.6149080904e+04 (1145.62 seconds)
Cbc0004I Integer solution of 46149.081 found after 280296 iterations and 2457 nodes (1004.22 seconds)
Cbc0010I After 2500 nodes, 414 on tree, 46149.081 best solution, best possible 22200.049 (1061.69 seconds)
Optimality Based BT: 14 improved bounds
Cbc0010I After 2600 nodes, 459 on tree, 46149.081 best solution, best possible 22259.317 (1152.86 seconds)
Cbc0010I After 2700 nodes, 509 on tree, 46149.081 best solution, best possible 22259.317 (1179.07 seconds)
Cbc0010I After 2800 nodes, 556 on tree, 46149.081 best solution, best possible 22354.803 (1245.17 seconds)
Cbc0010I After 2900 nodes, 598 on tree, 46149.081 best solution, best possible 22392.048 (1268.14 seconds)
Cbc0010I After 3000 nodes, 633 on tree, 46149.081 best solution, best possible 22393.438 (1377.70 seconds)
Cbc0010I After 3100 nodes, 675 on tree, 46149.081 best solution, best possible 22430.133 (1410.69 seconds)
Cbc0010I After 3200 nodes, 725 on tree, 46149.081 best solution, best possible 22430.133 (1435.36 seconds)
Cbc0010I After 3300 nodes, 765 on tree, 46149.081 best solution, best possible 22486.221 (1456.15 seconds)
Cbc0010I After 3400 nodes, 805 on tree, 46149.081 best solution, best possible 22528.279 (1476.20 seconds)
Cbc0010I After 3500 nodes, 848 on tree, 46149.081 best solution, best possible 22562.518 (1497.56 seconds)
Cbc0010I After 3600 nodes, 898 on tree, 46149.081 best solution, best possible 22562.518 (1525.72 seconds)
Cbc0010I After 3700 nodes, 940 on tree, 46149.081 best solution, best possible 22607.08 (1543.31 seconds)
Cbc0010I After 3800 nodes, 983 on tree, 46149.081 best solution, best possible 22607.08 (1561.81 seconds)
Cbc0010I After 3900 nodes, 1028 on tree, 46149.081 best solution, best possible 22655.464 (1608.45 seconds)
Cbc0010I After 4000 nodes, 1073 on tree, 46149.081 best solution, best possible 22727.54 (1653.25 seconds)
Cbc0010I After 4100 nodes, 1121 on tree, 46149.081 best solution, best possible 22727.54 (1674.77 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 4200 nodes, 1165 on tree, 46149.081 best solution, best possible 22737.461 (1715.16 seconds)
Cbc0010I After 4300 nodes, 1210 on tree, 46149.081 best solution, best possible 22740.761 (1757.30 seconds)
Cbc0010I After 4400 nodes, 1258 on tree, 46149.081 best solution, best possible 22740.761 (1777.78 seconds)
Cbc0010I After 4500 nodes, 1305 on tree, 46149.081 best solution, best possible 22785.275 (1795.68 seconds)
Cbc0010I After 4600 nodes, 1352 on tree, 46149.081 best solution, best possible 22785.275 (1815.71 seconds)
Cbc0010I After 4700 nodes, 1400 on tree, 46149.081 best solution, best possible 22786.797 (1838.71 seconds)
Cbc0010I After 4800 nodes, 1441 on tree, 46149.081 best solution, best possible 22792.9 (1856.66 seconds)
Cbc0010I After 4900 nodes, 1488 on tree, 46149.081 best solution, best possible 22792.9 (1885.46 seconds)
Cbc0010I After 5000 nodes, 1534 on tree, 46149.081 best solution, best possible 22803.157 (1904.85 seconds)
Cbc0010I After 5100 nodes, 1571 on tree, 46149.081 best solution, best possible 22816.802 (1939.55 seconds)
Cbc0010I After 5200 nodes, 1619 on tree, 46149.081 best solution, best possible 22816.802 (1963.90 seconds)
Cbc0010I After 5300 nodes, 1664 on tree, 46149.081 best solution, best possible 22820.325 (1994.71 seconds)
Cbc0010I After 5400 nodes, 1707 on tree, 46149.081 best solution, best possible 22843.475 (2012.65 seconds)
Cbc0010I After 5500 nodes, 1754 on tree, 46149.081 best solution, best possible 22843.475 (2034.46 seconds)
Cbc0010I After 5600 nodes, 1798 on tree, 46149.081 best solution, best possible 22876.425 (2055.88 seconds)
Cbc0010I After 5700 nodes, 1841 on tree, 46149.081 best solution, best possible 22894.924 (2089.68 seconds)
Cbc0010I After 5800 nodes, 1887 on tree, 46149.081 best solution, best possible 22927.974 (2165.24 seconds)
Cbc0010I After 5900 nodes, 1931 on tree, 46149.081 best solution, best possible 22927.974 (2181.80 seconds)
Cbc0010I After 6000 nodes, 1976 on tree, 46149.081 best solution, best possible 22928.658 (2215.92 seconds)
Cbc0010I After 6100 nodes, 2019 on tree, 46149.081 best solution, best possible 22936.036 (2252.37 seconds)
Cbc0010I After 6200 nodes, 2061 on tree, 46149.081 best solution, best possible 22937.504 (2275.03 seconds)
Cbc0010I After 6300 nodes, 2101 on tree, 46149.081 best solution, best possible 22937.504 (2300.89 seconds)
Cbc0010I After 6400 nodes, 2149 on tree, 46149.081 best solution, best possible 22960.375 (2326.42 seconds)
Cbc0010I After 6500 nodes, 2192 on tree, 46149.081 best solution, best possible 22963.575 (2345.39 seconds)
Cbc0010I After 6600 nodes, 2240 on tree, 46149.081 best solution, best possible 22963.575 (2364.25 seconds)
Cbc0010I After 6700 nodes, 2283 on tree, 46149.081 best solution, best possible 22966.719 (2386.26 seconds)
Cbc0010I After 6800 nodes, 2327 on tree, 46149.081 best solution, best possible 22997.084 (2415.91 seconds)
Cbc0010I After 6900 nodes, 2374 on tree, 46149.081 best solution, best possible 23015.384 (2436.98 seconds)
Cbc0010I After 7000 nodes, 2417 on tree, 46149.081 best solution, best possible 23015.384 (2457.41 seconds)
Optimality Based BT: 14 improved bounds
Cbc0010I After 7100 nodes, 2465 on tree, 46149.081 best solution, best possible 23018.121 (2499.78 seconds)
Cbc0010I After 7200 nodes, 2498 on tree, 46149.081 best solution, best possible 23018.523 (2517.55 seconds)
Cbc0010I After 7300 nodes, 2546 on tree, 46149.081 best solution, best possible 23018.523 (2541.08 seconds)
Cbc0010I After 7400 nodes, 2585 on tree, 46149.081 best solution, best possible 23040.194 (2563.69 seconds)
Cbc0010I After 7500 nodes, 2632 on tree, 46149.081 best solution, best possible 23040.194 (2579.67 seconds)
Cbc0010I After 7600 nodes, 2679 on tree, 46149.081 best solution, best possible 23042.101 (2604.44 seconds)
Cbc0010I After 7700 nodes, 2721 on tree, 46149.081 best solution, best possible 23064.779 (2617.99 seconds)
Cbc0010I After 7800 nodes, 2766 on tree, 46149.081 best solution, best possible 23064.779 (2636.75 seconds)
Cbc0010I After 7900 nodes, 2811 on tree, 46149.081 best solution, best possible 23079.128 (2666.57 seconds)
Cbc0010I After 8000 nodes, 2853 on tree, 46149.081 best solution, best possible 23085.656 (2705.59 seconds)
Cbc0010I After 8100 nodes, 2901 on tree, 46149.081 best solution, best possible 23085.656 (2721.22 seconds)
Cbc0010I After 8200 nodes, 2948 on tree, 46149.081 best solution, best possible 23096.598 (2741.96 seconds)
Cbc0010I After 8300 nodes, 2994 on tree, 46149.081 best solution, best possible 23096.598 (2754.47 seconds)
Cbc0010I After 8400 nodes, 3037 on tree, 46149.081 best solution, best possible 23097.901 (2775.38 seconds)
Cbc0010I After 8500 nodes, 3075 on tree, 46149.081 best solution, best possible 23098.181 (2815.71 seconds)
Cbc0010I After 8600 nodes, 3120 on tree, 46149.081 best solution, best possible 23133.985 (2838.28 seconds)
Cbc0010I After 8700 nodes, 3170 on tree, 46149.081 best solution, best possible 23133.985 (2856.83 seconds)
Cbc0010I After 8800 nodes, 3212 on tree, 46149.081 best solution, best possible 23140.226 (2876.57 seconds)
Cbc0010I After 8900 nodes, 3256 on tree, 46149.081 best solution, best possible 23148.838 (2928.45 seconds)
Cbc0010I After 9000 nodes, 3300 on tree, 46149.081 best solution, best possible 23148.838 (2944.60 seconds)
Cbc0010I After 9100 nodes, 3345 on tree, 46149.081 best solution, best possible 23153.105 (2968.68 seconds)
Cbc0010I After 9200 nodes, 3391 on tree, 46149.081 best solution, best possible 23155.981 (2991.03 seconds)
Cbc0010I After 9300 nodes, 3437 on tree, 46149.081 best solution, best possible 23155.981 (3002.80 seconds)
Cbc0010I After 9400 nodes, 3476 on tree, 46149.081 best solution, best possible 23155.981 (3012.59 seconds)
Cbc0010I After 9500 nodes, 3516 on tree, 46149.081 best solution, best possible 23155.981 (3022.94 seconds)
Cbc0010I After 9600 nodes, 3554 on tree, 46149.081 best solution, best possible 23155.981 (3029.66 seconds)
Couenne: new cutoff value 4.5012177953e+04 (3173.31 seconds)
Cbc0004I Integer solution of 45012.178 found after 2350324 iterations and 9638 nodes (3031.91 seconds)
Cbc0010I After 9700 nodes, 3326 on tree, 45012.178 best solution, best possible 23163.788 (3054.31 seconds)
Cbc0010I After 9800 nodes, 3370 on tree, 45012.178 best solution, best possible 23164.413 (3071.80 seconds)
Optimality Based BT: 14 improved bounds
Cbc0010I After 9900 nodes, 3416 on tree, 45012.178 best solution, best possible 23171.129 (3112.43 seconds)
Cbc0010I After 10000 nodes, 3460 on tree, 45012.178 best solution, best possible 23174.867 (3131.26 seconds)
Cbc0010I After 10100 nodes, 3508 on tree, 45012.178 best solution, best possible 23174.867 (3154.00 seconds)
Cbc0010I After 10200 nodes, 3546 on tree, 45012.178 best solution, best possible 23179.768 (3175.38 seconds)
Cbc0010I After 10300 nodes, 3590 on tree, 45012.178 best solution, best possible 23179.921 (3196.38 seconds)
Cbc0010I After 10400 nodes, 3626 on tree, 45012.178 best solution, best possible 23193.612 (3211.53 seconds)
Cbc0010I After 10500 nodes, 3673 on tree, 45012.178 best solution, best possible 23193.612 (3239.75 seconds)
Cbc0010I After 10600 nodes, 3720 on tree, 45012.178 best solution, best possible 23202.025 (3261.38 seconds)
Cbc0010I After 10700 nodes, 3758 on tree, 45012.178 best solution, best possible 23210.428 (3280.29 seconds)
Cbc0010I After 10800 nodes, 3801 on tree, 45012.178 best solution, best possible 23210.67 (3308.00 seconds)
Cbc0010I After 10900 nodes, 3846 on tree, 45012.178 best solution, best possible 23225.139 (3331.07 seconds)
Cbc0010I After 11000 nodes, 3891 on tree, 45012.178 best solution, best possible 23226.221 (3372.97 seconds)
Cbc0010I After 11100 nodes, 3932 on tree, 45012.178 best solution, best possible 23227.331 (3394.95 seconds)
Cbc0010I After 11200 nodes, 3974 on tree, 45012.178 best solution, best possible 23230.782 (3416.98 seconds)
Cbc0010I After 11300 nodes, 4018 on tree, 45012.178 best solution, best possible 23232.886 (3437.55 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 45012.178 (best possible 23232.886), took 2937566 iterations and 11385 nodes (3459.92 seconds)
Cbc0035I Maximum depth 349, 488 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       3301
Linearization cuts added in total:           3301  (separation time: 0.023542s)
Total solve time:                         3460.41s (3460.41s in branch-and-bound)
Lower bound:                              23232.9
Upper bound:                              45012.2  (gap: 93.74%)
Branch-and-bound nodes:                     11385
Stats: /tmp/jl_taFhiw/model.nl 1350 [var]  125 [int] 1700 [con] 1027 [aux]   3301 [root]     3301 [tot] 0.023542 [sep]  3460.41 [time]  3460.42 [bb]         2.323289e+04 [lower]         4.501218e+04 [upper]   11385 [nodes]
Performance of                           FBBT:	    164.694s,    21837 runs. fix:  0.0129662 shrnk:   0.170778 ubd:          0 2ubd:          0 infeas:         20
Performance of                           OBBT:	    163.862s,       15 runs. fix:          0 shrnk:     0.2675 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
