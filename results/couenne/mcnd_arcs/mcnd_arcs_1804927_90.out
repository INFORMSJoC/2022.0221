solving instance mcnd arcs c25_100_30_F_L_5 3 6 log
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 69393.502      213 277.80952
NLP0014I             2      INFEAS 6.9855589      243 55.281317
Loaded instance "/tmp/jl_bndOYy/model.nl"
Constraints:         4200
Variables:           3350 (125 integer)
Auxiliaries:         1127 (1 integer)

Coin0506I Presolve 4642 (-172) rows, 3391 (-1086) columns and 22586 (-1410) elements
Clp0006I 0  Obj 6867.8382 Primal inf 240.89301 (65)
Clp0006I 167  Obj 9871.6032 Primal inf 1615.2621 (162)
Clp0006I 334  Obj 16885.673 Primal inf 2750.1811 (259)
Clp0006I 501  Obj 21802.87 Primal inf 2515.5465 (310)
Clp0006I 668  Obj 30075.914 Primal inf 2118.8123 (368)
Clp0006I 835  Obj 37695.262 Primal inf 1901.2079 (363)
Clp0006I 1002  Obj 41391.717 Primal inf 12034.818 (777)
Clp0006I 1143  Obj 43794.069 Primal inf 2758.2568 (591)
Clp0006I 1295  Obj 45362.94 Primal inf 10025.938 (768)
Clp0006I 1423  Obj 46103.628 Primal inf 10288.471 (901)
Clp0006I 1542  Obj 46857.521 Primal inf 759.25722 (532)
Clp0006I 1675  Obj 47161.594 Primal inf 24.92611 (113)
Clp0006I 1680  Obj 47163.659
Clp0000I Optimal - objective value 47163.659
Clp0032I Optimal objective 47163.65889 - 1680 iterations time 0.542, Presolve 0.03
Clp0000I Optimal - objective value 47163.659
NLP Heuristic: NLP0014I             3      INFEAS 5.9999999      265 55.137028
no solution.
Clp0000I Optimal - objective value 47163.659
Optimality Based BT: 1 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 1 added rows had average density of 2
Cbc0013I At root node, 1 cuts changed objective from 47163.659 to 47453.111 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (222.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 47709.557 (1516.96 seconds)
Cbc0010I After 200 nodes, 98 on tree, 1e+50 best solution, best possible 47709.557 (1531.09 seconds)
Cbc0010I After 300 nodes, 145 on tree, 1e+50 best solution, best possible 47709.557 (1546.49 seconds)
Cbc0010I After 400 nodes, 195 on tree, 1e+50 best solution, best possible 47709.557 (1561.36 seconds)
Cbc0010I After 500 nodes, 245 on tree, 1e+50 best solution, best possible 47709.557 (1575.74 seconds)
Cbc0010I After 600 nodes, 295 on tree, 1e+50 best solution, best possible 47709.557 (1590.26 seconds)
Cbc0010I After 700 nodes, 345 on tree, 1e+50 best solution, best possible 47709.557 (1603.77 seconds)
Cbc0010I After 800 nodes, 395 on tree, 1e+50 best solution, best possible 47709.557 (1615.38 seconds)
Cbc0010I After 900 nodes, 445 on tree, 1e+50 best solution, best possible 47709.557 (1626.88 seconds)
Cbc0010I After 1000 nodes, 495 on tree, 1e+50 best solution, best possible 47709.557 (1638.86 seconds)
Cbc0010I After 1100 nodes, 544 on tree, 1e+50 best solution, best possible 47709.557 (1655.04 seconds)
Cbc0010I After 1200 nodes, 588 on tree, 1e+50 best solution, best possible 47709.557 (1664.24 seconds)
Cbc0010I After 1300 nodes, 623 on tree, 1e+50 best solution, best possible 47709.557 (1672.86 seconds)
Cbc0010I After 1400 nodes, 665 on tree, 1e+50 best solution, best possible 47709.557 (1684.51 seconds)
Cbc0010I After 1500 nodes, 695 on tree, 1e+50 best solution, best possible 47709.557 (1693.30 seconds)
Cbc0010I After 1600 nodes, 737 on tree, 1e+50 best solution, best possible 47709.557 (1704.74 seconds)
Cbc0010I After 1700 nodes, 773 on tree, 1e+50 best solution, best possible 47709.557 (1715.06 seconds)
Cbc0010I After 1800 nodes, 805 on tree, 1e+50 best solution, best possible 47709.557 (1726.25 seconds)
Cbc0010I After 1900 nodes, 835 on tree, 1e+50 best solution, best possible 47709.557 (1738.80 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2000 nodes, 878 on tree, 1e+50 best solution, best possible 47785.524 (2536.42 seconds)
Cbc0010I After 2100 nodes, 928 on tree, 1e+50 best solution, best possible 47785.524 (2552.93 seconds)
Cbc0010I After 2200 nodes, 977 on tree, 1e+50 best solution, best possible 47785.524 (2573.29 seconds)
Cbc0010I After 2300 nodes, 1027 on tree, 1e+50 best solution, best possible 47785.524 (2594.07 seconds)
Cbc0010I After 2400 nodes, 1076 on tree, 1e+50 best solution, best possible 47785.524 (2612.88 seconds)
Cbc0010I After 2500 nodes, 1126 on tree, 1e+50 best solution, best possible 47785.524 (2630.67 seconds)
Cbc0010I After 2600 nodes, 1176 on tree, 1e+50 best solution, best possible 47785.524 (2645.11 seconds)
Cbc0010I After 2700 nodes, 1226 on tree, 1e+50 best solution, best possible 47785.524 (2658.21 seconds)
Cbc0010I After 2800 nodes, 1276 on tree, 1e+50 best solution, best possible 47785.524 (2670.71 seconds)
Cbc0010I After 2900 nodes, 1326 on tree, 1e+50 best solution, best possible 47785.524 (2682.03 seconds)
Cbc0010I After 3000 nodes, 1376 on tree, 1e+50 best solution, best possible 47785.524 (2695.77 seconds)
Cbc0010I After 3100 nodes, 1425 on tree, 1e+50 best solution, best possible 47785.524 (2716.34 seconds)
Cbc0010I After 3200 nodes, 1474 on tree, 1e+50 best solution, best possible 47785.524 (2734.05 seconds)
Cbc0010I After 3300 nodes, 1524 on tree, 1e+50 best solution, best possible 47785.524 (2757.47 seconds)
Cbc0010I After 3400 nodes, 1569 on tree, 1e+50 best solution, best possible 47785.524 (2773.72 seconds)
Cbc0010I After 3500 nodes, 1605 on tree, 1e+50 best solution, best possible 47785.524 (2785.03 seconds)
Cbc0010I After 3600 nodes, 1636 on tree, 1e+50 best solution, best possible 47785.524 (2795.10 seconds)
Cbc0010I After 3700 nodes, 1665 on tree, 1e+50 best solution, best possible 47785.524 (2805.07 seconds)
Cbc0010I After 3800 nodes, 1709 on tree, 1e+50 best solution, best possible 47785.524 (2817.38 seconds)
Cbc0010I After 3900 nodes, 1753 on tree, 1e+50 best solution, best possible 47785.524 (2829.37 seconds)
Cbc0010I After 4000 nodes, 1777 on tree, 1e+50 best solution, best possible 47785.524 (2841.69 seconds)
Cbc0010I After 4100 nodes, 1816 on tree, 1e+50 best solution, best possible 47785.524 (2855.62 seconds)
Cbc0010I After 4200 nodes, 1842 on tree, 1e+50 best solution, best possible 47785.524 (2868.48 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 47785.524), took 380812 iterations and 4296 nodes (3257.01 seconds)
Cbc0035I Maximum depth 1182, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       4814
Linearization cuts added in total:           4814  (separation time: 0.073997s)
Total solve time:                         3257.55s (3257.55s in branch-and-bound)
Lower bound:                              47785.5
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                      4296
Stats: /tmp/jl_bndOYy/model.nl 3350 [var]  125 [int] 4200 [con] 1127 [aux]   4814 [root]     4814 [tot] 0.073997 [sep]  3257.55 [time]  3257.56 [bb]         4.778552e+04 [lower]         1.000000e+50 [upper]    4296 [nodes]
Performance of                           FBBT:	    126.555s,     4645 runs. fix:    0.28731 shrnk:   0.308213 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    49.1481s,       10 runs. fix:          0 shrnk:  0.0227513 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
