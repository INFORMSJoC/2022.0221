solving instance mcnd arcs c25_100_30_F_L_5 3 6 sinabc1
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 35494.538      116 117.26859
NLP0014I             2      INFEAS 7.7406436      109 29.64756
Loaded instance "/tmp/jl_jAmXsY/model.nl"
Constraints:         4200
Variables:           3350 (125 integer)
Auxiliaries:         1318 (1 integer)

Coin0506I Presolve 4908 (-201) rows, 3553 (-1115) columns and 23256 (-1430) elements
Clp0006I 0  Obj 4044.2549 Primal inf 189.20803 (65)
Clp0006I 173  Obj 8321.6667 Primal inf 1340.8228 (206)
Clp0006I 346  Obj 13828.705 Primal inf 726.7365 (319)
Clp0006I 519  Obj 16739.492 Primal inf 1001.1404 (479)
Clp0006I 692  Obj 18884.204 Primal inf 1724.4392 (680)
Clp0006I 865  Obj 20231.405 Primal inf 12751.226 (1207)
Clp0006I 1038  Obj 21886.492 Primal inf 23033.697 (1518)
Clp0006I 1209  Obj 23050.06 Primal inf 31122.497 (1400)
Clp0006I 1370  Obj 23777.262 Primal inf 7478.8816 (1143)
Clp0006I 1522  Obj 24408.306 Primal inf 3176.3778 (810)
Clp0006I 1669  Obj 25071.399 Primal inf 4413.0873 (776)
Clp0006I 1824  Obj 25540.997 Primal inf 4843.9579 (1000)
Clp0006I 1971  Obj 26083.584 Primal inf 5568.1746 (1285)
Clp0006I 2106  Obj 26608.247 Primal inf 2113.6288 (896)
Clp0006I 2252  Obj 27413.431 Primal inf 7165.0521 (1085)
Clp0006I 2399  Obj 27777.094 Primal inf 3353.7696 (1041)
Clp0006I 2546  Obj 28131.076 Primal inf 736.26082 (536)
Clp0006I 2690  Obj 28326.977 Primal inf 209.41792 (351)
Clp0006I 2828  Obj 28453.42 Primal inf 6.7098588 (53)
Clp0006I 2873  Obj 28462.231
Clp0000I Optimal - objective value 28462.231
Clp0032I Optimal objective 28462.23055 - 2873 iterations time 1.292, Presolve 0.03
Clp0000I Optimal - objective value 28462.231
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 28462.231
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 104 added rows had average density of 2
Cbc0013I At root node, 104 cuts changed objective from 28462.231 to 29904.308 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 921 row cuts average 2.0 elements, 502 column cuts (502 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (181.12 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 47 on tree, 1e+50 best solution, best possible 30201.817 (1556.52 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 30201.817 (1584.87 seconds)
Cbc0010I After 300 nodes, 142 on tree, 1e+50 best solution, best possible 30201.817 (1613.66 seconds)
Cbc0010I After 400 nodes, 188 on tree, 1e+50 best solution, best possible 30201.817 (1640.63 seconds)
Cbc0010I After 500 nodes, 238 on tree, 1e+50 best solution, best possible 30201.817 (1665.69 seconds)
Cbc0010I After 600 nodes, 288 on tree, 1e+50 best solution, best possible 30201.817 (1685.39 seconds)
Cbc0010I After 700 nodes, 338 on tree, 1e+50 best solution, best possible 30201.817 (1704.42 seconds)
Cbc0010I After 800 nodes, 388 on tree, 1e+50 best solution, best possible 30201.817 (1722.95 seconds)
Cbc0010I After 900 nodes, 438 on tree, 1e+50 best solution, best possible 30201.817 (1742.19 seconds)
Cbc0010I After 1000 nodes, 487 on tree, 1e+50 best solution, best possible 30201.817 (1762.46 seconds)
Cbc0010I After 1100 nodes, 535 on tree, 1e+50 best solution, best possible 30201.817 (1788.92 seconds)
Cbc0010I After 1200 nodes, 562 on tree, 1e+50 best solution, best possible 30201.817 (1811.48 seconds)
Cbc0010I After 1300 nodes, 600 on tree, 1e+50 best solution, best possible 30201.817 (1828.15 seconds)
Cbc0010I After 1400 nodes, 634 on tree, 1e+50 best solution, best possible 30201.817 (1848.85 seconds)
Cbc0010I After 1500 nodes, 668 on tree, 1e+50 best solution, best possible 30201.817 (1866.92 seconds)
Cbc0010I After 1600 nodes, 713 on tree, 1e+50 best solution, best possible 30201.817 (1883.36 seconds)
Cbc0010I After 1700 nodes, 745 on tree, 1e+50 best solution, best possible 30201.817 (1901.20 seconds)
Cbc0010I After 1800 nodes, 788 on tree, 1e+50 best solution, best possible 30201.817 (1921.05 seconds)
Cbc0010I After 1900 nodes, 815 on tree, 1e+50 best solution, best possible 30201.817 (1935.05 seconds)
Cbc0010I After 2000 nodes, 845 on tree, 1e+50 best solution, best possible 30201.817 (1950.20 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 2100 nodes, 889 on tree, 1e+50 best solution, best possible 30468.386 (3110.08 seconds)
Cbc0010I After 2200 nodes, 936 on tree, 1e+50 best solution, best possible 30468.386 (3252.98 seconds)
Cbc0010I After 2300 nodes, 985 on tree, 1e+50 best solution, best possible 30468.386 (3280.05 seconds)
Cbc0010I After 2400 nodes, 1034 on tree, 1e+50 best solution, best possible 30468.386 (3304.27 seconds)
Cbc0010I After 2500 nodes, 1084 on tree, 1e+50 best solution, best possible 30468.386 (3325.44 seconds)
Cbc0010I After 2600 nodes, 1134 on tree, 1e+50 best solution, best possible 30468.386 (3344.02 seconds)
Cbc0010I After 2700 nodes, 1184 on tree, 1e+50 best solution, best possible 30468.386 (3364.39 seconds)
Cbc0010I After 2800 nodes, 1234 on tree, 1e+50 best solution, best possible 30468.386 (3384.30 seconds)
Cbc0010I After 2900 nodes, 1280 on tree, 1e+50 best solution, best possible 30468.386 (3403.90 seconds)
Cbc0010I After 3000 nodes, 1308 on tree, 1e+50 best solution, best possible 30468.386 (3422.51 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 30468.386), took 430186 iterations and 3072 nodes (3435.50 seconds)
Cbc0035I Maximum depth 1001, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5109
Linearization cuts added in total:           5109  (separation time: 0.078396s)
Total solve time:                         3436.79s (3436.79s in branch-and-bound)
Lower bound:                              30468.4
Upper bound:                                  inf  (gap: --)
Branch-and-bound nodes:                      3072
Stats: /tmp/jl_jAmXsY/model.nl 3350 [var]  125 [int] 4200 [con] 1318 [aux]   5109 [root]     5109 [tot] 0.078396 [sep]  3436.79 [time]   3436.8 [bb]         3.046839e+04 [lower]         1.000000e+50 [upper]    3072 [nodes]
Performance of                           FBBT:	    116.259s,     3763 runs. fix:   0.118654 shrnk:   0.127764 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    67.8979s,        8 runs. fix:          0 shrnk:  0.0204355 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
