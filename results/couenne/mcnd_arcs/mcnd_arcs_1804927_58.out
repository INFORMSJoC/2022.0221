solving instance mcnd arcs c25_100_10_F_L_5 3 6 sinabc2
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 18619.828      339 24.349908
NLP0014I             2      INFEAS 1.5074407       63 3.381131
Loaded instance "/tmp/jl_oMDGii/model.nl"
Constraints:         1700
Variables:           1350 (125 integer)
Auxiliaries:          823 (0 integer)

Coin0506I Presolve 2675 (-222) rows, 1500 (-673) columns and 9700 (-1084) elements
Clp0006I 0  Obj 0 Primal inf 687.18089 (220)
Clp0006I 128  Obj 5.9837302e-16 Primal inf 1005.3091 (280)
Clp0006I 256  Obj 2411.9884 Primal inf 757.51119 (267)
Clp0006I 384  Obj 3888.3446 Primal inf 1474.27 (324)
Clp0006I 512  Obj 6532.1578 Primal inf 890.91522 (314)
Clp0006I 640  Obj 8516.5524 Primal inf 7900.9436 (358)
Clp0006I 768  Obj 10280.482 Primal inf 1718.3379 (401)
Clp0006I 896  Obj 11261.157 Primal inf 878.31346 (407)
Clp0006I 1012  Obj 11886.911 Primal inf 1567.9055 (473)
Clp0006I 1106  Obj 12455.705 Primal inf 3874.06 (677)
Clp0006I 1207  Obj 12832.294 Primal inf 1805.424 (422)
Clp0006I 1306  Obj 13070.298 Primal inf 2658.8164 (646)
Clp0006I 1396  Obj 13220.948 Primal inf 52.180977 (172)
Clp0006I 1490  Obj 13337.691 Primal inf 40.847544 (137)
Clp0006I 1586  Obj 13354.222
Clp0000I Optimal - objective value 13354.222
Clp0032I Optimal objective 13354.22169 - 1586 iterations time 0.372, Presolve 0.01
Clp0000I Optimal - objective value 13354.222
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 13354.222
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 94 added rows had average density of 2
Cbc0013I At root node, 94 cuts changed objective from 13354.222 to 13819.115 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1145 row cuts average 2.0 elements, 559 column cuts (653 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (26.77 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 13892.506 (328.63 seconds)
Cbc0010I After 200 nodes, 92 on tree, 1e+50 best solution, best possible 13892.506 (337.11 seconds)
Cbc0010I After 300 nodes, 139 on tree, 1e+50 best solution, best possible 13892.506 (344.98 seconds)
Cbc0010I After 400 nodes, 186 on tree, 1e+50 best solution, best possible 13892.506 (351.94 seconds)
Cbc0010I After 500 nodes, 232 on tree, 1e+50 best solution, best possible 13892.506 (358.22 seconds)
Cbc0010I After 600 nodes, 280 on tree, 1e+50 best solution, best possible 13892.506 (364.25 seconds)
Cbc0010I After 700 nodes, 327 on tree, 1e+50 best solution, best possible 13892.506 (370.11 seconds)
Cbc0010I After 800 nodes, 373 on tree, 1e+50 best solution, best possible 13892.506 (375.73 seconds)
Cbc0010I After 900 nodes, 417 on tree, 1e+50 best solution, best possible 13892.506 (380.97 seconds)
Couenne: new cutoff value 2.7492563534e+04 (414.003 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1000 nodes, 462 on tree, 1e+50 best solution, best possible 14240.787 (606.08 seconds)
Cbc0010I After 1100 nodes, 506 on tree, 1e+50 best solution, best possible 14240.787 (620.64 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1200 nodes, 548 on tree, 1e+50 best solution, best possible 14242.47 (735.04 seconds)
Cbc0010I After 1300 nodes, 589 on tree, 1e+50 best solution, best possible 14378.587 (784.52 seconds)
Cbc0010I After 1400 nodes, 634 on tree, 1e+50 best solution, best possible 14407.299 (806.80 seconds)
Cbc0010I After 1500 nodes, 681 on tree, 1e+50 best solution, best possible 14407.299 (828.75 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1600 nodes, 726 on tree, 1e+50 best solution, best possible 14417.825 (872.10 seconds)
Cbc0010I After 1700 nodes, 772 on tree, 1e+50 best solution, best possible 14629.131 (939.17 seconds)
Cbc0010I After 1800 nodes, 821 on tree, 1e+50 best solution, best possible 14629.131 (962.89 seconds)
Cbc0010I After 1900 nodes, 864 on tree, 1e+50 best solution, best possible 14709.955 (988.43 seconds)
Cbc0010I After 2000 nodes, 905 on tree, 1e+50 best solution, best possible 14772.174 (1010.24 seconds)
Cbc0010I After 2100 nodes, 941 on tree, 1e+50 best solution, best possible 14835.785 (1030.09 seconds)
Cbc0010I After 2200 nodes, 984 on tree, 1e+50 best solution, best possible 14844.018 (1049.63 seconds)
Cbc0010I After 2300 nodes, 1033 on tree, 1e+50 best solution, best possible 14844.018 (1072.52 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2400 nodes, 1073 on tree, 1e+50 best solution, best possible 14873.301 (1183.70 seconds)
Cbc0010I After 2500 nodes, 1116 on tree, 1e+50 best solution, best possible 14875.623 (1207.69 seconds)
Cbc0010I After 2600 nodes, 1159 on tree, 1e+50 best solution, best possible 14875.623 (1222.87 seconds)
Cbc0010I After 2700 nodes, 1195 on tree, 1e+50 best solution, best possible 14901.39 (1247.17 seconds)
Cbc0010I After 2800 nodes, 1234 on tree, 1e+50 best solution, best possible 14952.311 (1266.72 seconds)
Cbc0010I After 2900 nodes, 1275 on tree, 1e+50 best solution, best possible 14961.615 (1284.73 seconds)
Cbc0010I After 3000 nodes, 1320 on tree, 1e+50 best solution, best possible 14963.3 (1307.75 seconds)
Cbc0010I After 3100 nodes, 1368 on tree, 1e+50 best solution, best possible 14963.3 (1329.82 seconds)
Cbc0010I After 3200 nodes, 1412 on tree, 1e+50 best solution, best possible 14973.923 (1361.44 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 3300 nodes, 1454 on tree, 1e+50 best solution, best possible 14983.97 (1385.18 seconds)
Cbc0010I After 3400 nodes, 1500 on tree, 1e+50 best solution, best possible 14983.97 (1401.74 seconds)
Cbc0010I After 3500 nodes, 1549 on tree, 1e+50 best solution, best possible 14983.97 (1416.34 seconds)
Cbc0010I After 3600 nodes, 1593 on tree, 1e+50 best solution, best possible 14983.97 (1426.96 seconds)
Cbc0010I After 3700 nodes, 1643 on tree, 1e+50 best solution, best possible 14983.97 (1435.83 seconds)
Cbc0010I After 3800 nodes, 1693 on tree, 1e+50 best solution, best possible 14983.97 (1444.74 seconds)
Cbc0010I After 3900 nodes, 1743 on tree, 1e+50 best solution, best possible 14983.97 (1451.92 seconds)
Cbc0010I After 4000 nodes, 1780 on tree, 1e+50 best solution, best possible 14983.97 (1459.65 seconds)
Cbc0010I After 4100 nodes, 1810 on tree, 1e+50 best solution, best possible 14983.97 (1467.05 seconds)
Cbc0010I After 4200 nodes, 1843 on tree, 1e+50 best solution, best possible 15030.838 (1485.33 seconds)
Cbc0010I After 4300 nodes, 1893 on tree, 1e+50 best solution, best possible 15030.838 (1507.32 seconds)
Cbc0010I After 4400 nodes, 1938 on tree, 1e+50 best solution, best possible 15049.821 (1546.47 seconds)
Cbc0010I After 4500 nodes, 1983 on tree, 1e+50 best solution, best possible 15054.058 (1581.22 seconds)
Cbc0010I After 4600 nodes, 2022 on tree, 1e+50 best solution, best possible 15056.732 (1600.79 seconds)
Cbc0010I After 4700 nodes, 2069 on tree, 1e+50 best solution, best possible 15056.732 (1615.38 seconds)
Cbc0010I After 4800 nodes, 2117 on tree, 1e+50 best solution, best possible 15056.732 (1625.21 seconds)
Cbc0010I After 4900 nodes, 2161 on tree, 1e+50 best solution, best possible 15056.732 (1632.72 seconds)
Cbc0010I After 5000 nodes, 2208 on tree, 1e+50 best solution, best possible 15056.732 (1638.95 seconds)
Cbc0010I After 5100 nodes, 2251 on tree, 1e+50 best solution, best possible 15057.171 (1660.45 seconds)
Cbc0010I After 5200 nodes, 2298 on tree, 1e+50 best solution, best possible 15057.171 (1677.59 seconds)
Cbc0010I After 5300 nodes, 2340 on tree, 1e+50 best solution, best possible 15137.579 (1724.04 seconds)
Cbc0010I After 5400 nodes, 2382 on tree, 1e+50 best solution, best possible 15180.471 (1746.25 seconds)
Cbc0010I After 5500 nodes, 2426 on tree, 1e+50 best solution, best possible 15182.094 (1768.53 seconds)
Cbc0010I After 5600 nodes, 2475 on tree, 1e+50 best solution, best possible 15182.094 (1783.16 seconds)
Cbc0010I After 5700 nodes, 2511 on tree, 1e+50 best solution, best possible 15182.094 (1799.60 seconds)
Cbc0010I After 5800 nodes, 2548 on tree, 1e+50 best solution, best possible 15182.094 (1813.96 seconds)
Cbc0010I After 5900 nodes, 2581 on tree, 1e+50 best solution, best possible 15182.094 (1824.45 seconds)
Cbc0010I After 6000 nodes, 2621 on tree, 1e+50 best solution, best possible 15182.094 (1832.01 seconds)
Cbc0010I After 6100 nodes, 2654 on tree, 1e+50 best solution, best possible 15182.094 (1839.65 seconds)
Cbc0010I After 6200 nodes, 2697 on tree, 1e+50 best solution, best possible 15182.094 (1848.04 seconds)
Cbc0010I After 6300 nodes, 2737 on tree, 1e+50 best solution, best possible 15182.094 (1855.02 seconds)
Couenne: new cutoff value 2.7161577271e+04 (1891.47 seconds)
Cbc0010I After 6400 nodes, 2780 on tree, 1e+50 best solution, best possible 15199.693 (1884.97 seconds)
Cbc0010I After 6500 nodes, 2824 on tree, 1e+50 best solution, best possible 15201.054 (1916.70 seconds)
Cbc0010I After 6600 nodes, 2870 on tree, 1e+50 best solution, best possible 15201.054 (1935.27 seconds)
Cbc0010I After 6700 nodes, 2914 on tree, 1e+50 best solution, best possible 15202.833 (1957.68 seconds)
Cbc0010I After 6800 nodes, 2958 on tree, 1e+50 best solution, best possible 15217.949 (1981.74 seconds)
Cbc0010I After 6900 nodes, 3004 on tree, 1e+50 best solution, best possible 15235.126 (2005.88 seconds)
Cbc0010I After 7000 nodes, 3048 on tree, 1e+50 best solution, best possible 15245.408 (2079.35 seconds)
Cbc0010I After 7100 nodes, 3091 on tree, 1e+50 best solution, best possible 15250.361 (2099.23 seconds)
Cbc0010I After 7200 nodes, 3135 on tree, 1e+50 best solution, best possible 15254.71 (2119.95 seconds)
Cbc0010I After 7300 nodes, 3181 on tree, 1e+50 best solution, best possible 15258.218 (2165.53 seconds)
Cbc0010I After 7400 nodes, 3225 on tree, 1e+50 best solution, best possible 15260.772 (2185.82 seconds)
Cbc0010I After 7500 nodes, 3272 on tree, 1e+50 best solution, best possible 15271.359 (2233.87 seconds)
Cbc0010I After 7600 nodes, 3315 on tree, 1e+50 best solution, best possible 15271.359 (2256.03 seconds)
Cbc0010I After 7700 nodes, 3361 on tree, 1e+50 best solution, best possible 15290.288 (2279.49 seconds)
Cbc0010I After 7800 nodes, 3404 on tree, 1e+50 best solution, best possible 15290.651 (2311.58 seconds)
Cbc0010I After 7900 nodes, 3450 on tree, 1e+50 best solution, best possible 15308.005 (2380.37 seconds)
Cbc0010I After 8000 nodes, 3496 on tree, 1e+50 best solution, best possible 15310.412 (2421.00 seconds)
Cbc0010I After 8100 nodes, 3545 on tree, 1e+50 best solution, best possible 15310.412 (2438.88 seconds)
Cbc0010I After 8200 nodes, 3585 on tree, 1e+50 best solution, best possible 15310.412 (2454.88 seconds)
Cbc0010I After 8300 nodes, 3621 on tree, 1e+50 best solution, best possible 15310.412 (2468.99 seconds)
Cbc0010I After 8400 nodes, 3656 on tree, 1e+50 best solution, best possible 15310.412 (2479.70 seconds)
Cbc0010I After 8500 nodes, 3689 on tree, 1e+50 best solution, best possible 15310.412 (2489.11 seconds)
Cbc0010I After 8600 nodes, 3731 on tree, 1e+50 best solution, best possible 15312.217 (2504.68 seconds)
Cbc0010I After 8700 nodes, 3773 on tree, 1e+50 best solution, best possible 15317.447 (2524.49 seconds)
Cbc0010I After 8800 nodes, 3820 on tree, 1e+50 best solution, best possible 15317.712 (2545.91 seconds)
Cbc0010I After 8900 nodes, 3867 on tree, 1e+50 best solution, best possible 15321.168 (2564.62 seconds)
Cbc0010I After 9000 nodes, 3907 on tree, 1e+50 best solution, best possible 15323.597 (2587.63 seconds)
Cbc0010I After 9100 nodes, 3956 on tree, 1e+50 best solution, best possible 15323.597 (2605.91 seconds)
Cbc0010I After 9200 nodes, 3999 on tree, 1e+50 best solution, best possible 15324.621 (2647.27 seconds)
Cbc0010I After 9300 nodes, 4044 on tree, 1e+50 best solution, best possible 15341.216 (2671.41 seconds)
Cbc0010I After 9400 nodes, 4087 on tree, 1e+50 best solution, best possible 15342.423 (2691.01 seconds)
Cbc0010I After 9500 nodes, 4131 on tree, 1e+50 best solution, best possible 15343.624 (2709.95 seconds)
Cbc0010I After 9600 nodes, 4178 on tree, 1e+50 best solution, best possible 15343.624 (2724.91 seconds)
Cbc0010I After 9700 nodes, 4210 on tree, 1e+50 best solution, best possible 15343.624 (2740.69 seconds)
Cbc0010I After 9800 nodes, 4245 on tree, 1e+50 best solution, best possible 15343.624 (2751.08 seconds)
Cbc0010I After 9900 nodes, 4288 on tree, 1e+50 best solution, best possible 15343.624 (2759.86 seconds)
Cbc0010I After 10000 nodes, 4338 on tree, 1e+50 best solution, best possible 15343.624 (2768.10 seconds)
Cbc0010I After 10100 nodes, 4386 on tree, 1e+50 best solution, best possible 15343.624 (2775.60 seconds)
Cbc0010I After 10200 nodes, 4423 on tree, 1e+50 best solution, best possible 15343.624 (2782.49 seconds)
Cbc0010I After 10300 nodes, 4471 on tree, 1e+50 best solution, best possible 15343.624 (2789.92 seconds)
Couenne: new cutoff value 2.7090199577e+04 (2824.09 seconds)
Couenne: new cutoff value 2.7090199561e+04 (2824.17 seconds)
Cbc0004I Integer solution of 27090.2 found after 2146959 iterations and 10330 nodes (2791.78 seconds)
Cbc0010I After 10400 nodes, 3783 on tree, 27090.2 best solution, best possible 15355.817 (2809.86 seconds)
Cbc0010I After 10500 nodes, 3830 on tree, 27090.2 best solution, best possible 15355.817 (2823.49 seconds)
Cbc0010I After 10600 nodes, 3873 on tree, 27090.2 best solution, best possible 15355.817 (2833.69 seconds)
Cbc0010I After 10700 nodes, 3923 on tree, 27090.2 best solution, best possible 15355.817 (2842.39 seconds)
Cbc0010I After 10800 nodes, 3973 on tree, 27090.2 best solution, best possible 15355.817 (2849.15 seconds)
Cbc0010I After 10900 nodes, 4023 on tree, 27090.2 best solution, best possible 15355.817 (2855.57 seconds)
Cbc0010I After 11000 nodes, 4073 on tree, 27090.2 best solution, best possible 15355.817 (2862.02 seconds)
Cbc0010I After 11100 nodes, 4123 on tree, 27090.2 best solution, best possible 15355.817 (2868.32 seconds)
Couenne: new cutoff value 2.5905248687e+04 (2902 seconds)
Cbc0004I Integer solution of 25905.249 found after 2194249 iterations and 11119 nodes (2869.61 seconds)
Cbc0010I After 11200 nodes, 3121 on tree, 25905.249 best solution, best possible 15357.838 (2889.86 seconds)
Cbc0010I After 11300 nodes, 3166 on tree, 25905.249 best solution, best possible 15368.336 (2909.81 seconds)
Cbc0010I After 11400 nodes, 3210 on tree, 25905.249 best solution, best possible 15369.923 (2952.68 seconds)
Cbc0010I After 11500 nodes, 3250 on tree, 25905.249 best solution, best possible 15374.326 (2992.06 seconds)
Cbc0010I After 11600 nodes, 3293 on tree, 25905.249 best solution, best possible 15386.989 (3018.85 seconds)
Cbc0010I After 11700 nodes, 3337 on tree, 25905.249 best solution, best possible 15388.849 (3038.52 seconds)
Cbc0010I After 11800 nodes, 3382 on tree, 25905.249 best solution, best possible 15403.848 (3069.25 seconds)
Cbc0010I After 11900 nodes, 3428 on tree, 25905.249 best solution, best possible 15405.265 (3092.52 seconds)
Cbc0010I After 12000 nodes, 3470 on tree, 25905.249 best solution, best possible 15417.583 (3114.62 seconds)
Cbc0010I After 12100 nodes, 3518 on tree, 25905.249 best solution, best possible 15417.583 (3129.76 seconds)
Cbc0010I After 12200 nodes, 3563 on tree, 25905.249 best solution, best possible 15417.583 (3140.64 seconds)
Cbc0010I After 12300 nodes, 3612 on tree, 25905.249 best solution, best possible 15417.583 (3151.32 seconds)
Cbc0010I After 12400 nodes, 3659 on tree, 25905.249 best solution, best possible 15417.583 (3160.21 seconds)
Cbc0010I After 12500 nodes, 3700 on tree, 25905.249 best solution, best possible 15443.495 (3172.20 seconds)
Cbc0010I After 12600 nodes, 3747 on tree, 25905.249 best solution, best possible 15443.495 (3189.40 seconds)
Cbc0010I After 12700 nodes, 3789 on tree, 25905.249 best solution, best possible 15443.495 (3205.70 seconds)
Cbc0010I After 12800 nodes, 3837 on tree, 25905.249 best solution, best possible 15443.495 (3219.70 seconds)
Cbc0010I After 12900 nodes, 3887 on tree, 25905.249 best solution, best possible 15443.495 (3230.23 seconds)
Cbc0010I After 13000 nodes, 3931 on tree, 25905.249 best solution, best possible 15443.495 (3238.71 seconds)
Cbc0010I After 13100 nodes, 3972 on tree, 25905.249 best solution, best possible 15446.286 (3279.69 seconds)
Cbc0010I After 13200 nodes, 4016 on tree, 25905.249 best solution, best possible 15446.803 (3300.53 seconds)
Cbc0010I After 13300 nodes, 4060 on tree, 25905.249 best solution, best possible 15452.078 (3319.52 seconds)
Cbc0010I After 13400 nodes, 4100 on tree, 25905.249 best solution, best possible 15457.085 (3340.28 seconds)
Cbc0010I After 13500 nodes, 4142 on tree, 25905.249 best solution, best possible 15457.39 (3360.51 seconds)
Cbc0010I After 13600 nodes, 4191 on tree, 25905.249 best solution, best possible 15457.39 (3371.20 seconds)
Cbc0010I After 13700 nodes, 4240 on tree, 25905.249 best solution, best possible 15457.39 (3381.17 seconds)
Cbc0010I After 13800 nodes, 4289 on tree, 25905.249 best solution, best possible 15457.39 (3390.09 seconds)
Cbc0010I After 13900 nodes, 4339 on tree, 25905.249 best solution, best possible 15457.39 (3396.49 seconds)
Cbc0010I After 14000 nodes, 4389 on tree, 25905.249 best solution, best possible 15457.39 (3403.68 seconds)
Cbc0010I After 14100 nodes, 4433 on tree, 25905.249 best solution, best possible 15460.65 (3420.86 seconds)
Cbc0010I After 14200 nodes, 4480 on tree, 25905.249 best solution, best possible 15462.122 (3439.84 seconds)
Cbc0010I After 14300 nodes, 4526 on tree, 25905.249 best solution, best possible 15473.889 (3477.86 seconds)
Cbc0010I After 14400 nodes, 4569 on tree, 25905.249 best solution, best possible 15490.882 (3494.40 seconds)
Cbc0010I After 14500 nodes, 4612 on tree, 25905.249 best solution, best possible 15492.034 (3534.29 seconds)
Cbc0010I After 14600 nodes, 4655 on tree, 25905.249 best solution, best possible 15494.653 (3562.05 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 25905.249 (best possible 15494.653), took 2980568 iterations and 14624 nodes (3568.91 seconds)
Cbc0035I Maximum depth 467, 772 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2897
Linearization cuts added in total:           2897  (separation time: 0.022834s)
Total solve time:                         3569.57s (3569.57s in branch-and-bound)
Lower bound:                              15494.7
Upper bound:                              25905.2  (gap: 67.18%)
Branch-and-bound nodes:                     14624
Stats: /tmp/jl_oMDGii/model.nl 1350 [var]  125 [int] 1700 [con]  823 [aux]   2897 [root]     2897 [tot] 0.022834 [sep]  3569.57 [time]  3569.57 [bb]         1.549465e+04 [lower]         2.590525e+04 [upper]   14624 [nodes]
Performance of                           FBBT:	    265.663s,    24449 runs. fix:  0.0347612 shrnk:   0.356626 ubd:          0 2ubd:          0 infeas:          2
Performance of                           OBBT:	    92.3669s,       17 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
