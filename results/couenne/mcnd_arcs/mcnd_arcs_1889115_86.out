solving instance mcnd arcs c25_100_10_V_L_5 3 6 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 41784.05     3000 348.51057
NLP0014I             1      FAILED 41784.05     3000 350.27624   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_Eq5fmT/model.nl"
Constraints:         1700
Variables:           1350 (125 integer)
Auxiliaries:         1127 (0 integer)

Coin0506I Presolve 2448 (-439) rows, 1498 (-979) columns and 9337 (-1627) elements
Clp0006I 0  Obj -21233.095 Primal inf 4864.537 (324)
Clp0006I 123  Obj -18865.4 Primal inf 206.10516 (220)
Clp0006I 246  Obj -18007.997 Primal inf 357.97612 (246)
Clp0006I 369  Obj -12373.858 Primal inf 321.43822 (242)
Clp0006I 492  Obj -12373.858 Primal inf 855.13208 (316)
Clp0006I 615  Obj -10503.805 Primal inf 325.47081 (307)
Clp0006I 738  Obj -8581.9995 Primal inf 248.19923 (270)
Clp0006I 861  Obj -7622.6079 Primal inf 503.43696 (250)
Clp0006I 984  Obj -7288.1259 Primal inf 229.79574 (253)
Clp0006I 1107  Obj -7132.3928 Primal inf 577.69111 (351)
Clp0006I 1230  Obj -7037.596 Primal inf 704.67479 (346)
Clp0006I 1353  Obj -6910.1889 Primal inf 429.19514 (393)
Clp0006I 1456  Obj -6824.9398 Primal inf 426.93338 (380)
Clp0006I 1562  Obj -6710.9346 Primal inf 101.57117 (235)
Clp0006I 1682  Obj -6596.1685 Primal inf 10.414147 (92)
Clp0006I 1750  Obj -6587.5081
Clp0000I Optimal - objective value -6587.5081
Clp0032I Optimal objective -6587.508118 - 1750 iterations time 0.272, Presolve 0.01
Clp0000I Optimal - objective value -6587.5081
NLP Heuristic: NLP0014I             3      INFEAS 3.0019211       53 1.657507
no solution.
Clp0000I Optimal - objective value -6587.5081
Optimality Based BT: 97 improved bounds
Probing: 49 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 3 added rows had average density of 2
Cbc0013I At root node, 3 cuts changed objective from -6587.5081 to -4617.7938 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 5 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (132.78 seconds)
Optimality Based BT: 4 improved bounds
Optimality Based BT: 3 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Cbc0010I After 100 nodes, 49 on tree, 1e+50 best solution, best possible -4253.5692 (597.70 seconds)
Cbc0010I After 200 nodes, 97 on tree, 1e+50 best solution, best possible -4253.5692 (602.59 seconds)
Cbc0010I After 300 nodes, 146 on tree, 1e+50 best solution, best possible -4253.5692 (609.03 seconds)
Cbc0010I After 400 nodes, 195 on tree, 1e+50 best solution, best possible -4253.5692 (616.56 seconds)
Cbc0010I After 500 nodes, 244 on tree, 1e+50 best solution, best possible -4253.5692 (624.28 seconds)
Cbc0010I After 600 nodes, 294 on tree, 1e+50 best solution, best possible -4253.5692 (631.51 seconds)
Cbc0010I After 700 nodes, 339 on tree, 1e+50 best solution, best possible -4253.5692 (638.01 seconds)
Cbc0010I After 800 nodes, 383 on tree, 1e+50 best solution, best possible -4253.5692 (644.25 seconds)
Cbc0010I After 900 nodes, 427 on tree, 1e+50 best solution, best possible -4253.5692 (650.26 seconds)
Cbc0010I After 1000 nodes, 473 on tree, 1e+50 best solution, best possible -4253.5692 (656.22 seconds)
Cbc0010I After 1100 nodes, 514 on tree, 1e+50 best solution, best possible -4253.5692 (661.61 seconds)
Cbc0010I After 1200 nodes, 558 on tree, 1e+50 best solution, best possible -4253.5692 (666.85 seconds)
Cbc0010I After 1300 nodes, 589 on tree, 1e+50 best solution, best possible -4253.5692 (671.72 seconds)
Cbc0010I After 1400 nodes, 632 on tree, 1e+50 best solution, best possible -4253.5692 (676.66 seconds)
Cbc0010I After 1500 nodes, 663 on tree, 1e+50 best solution, best possible -4253.5692 (681.26 seconds)
Couenne: new cutoff value 2.4708468583e+04 (1381.77 seconds)
Cbc0004I Integer solution of 24708.469 found after 38626 iterations and 1513 nodes (681.90 seconds)
Cbc0010I After 1600 nodes, 571 on tree, 24708.469 best solution, best possible -4208.5663 (899.00 seconds)
Cbc0010I After 1700 nodes, 621 on tree, 24708.469 best solution, best possible -4208.5663 (908.09 seconds)
Cbc0010I After 1800 nodes, 665 on tree, 24708.469 best solution, best possible -4208.5663 (919.04 seconds)
Cbc0010I After 1900 nodes, 715 on tree, 24708.469 best solution, best possible -4208.5663 (929.24 seconds)
Cbc0010I After 2000 nodes, 751 on tree, 24708.469 best solution, best possible -4078.7561 (953.92 seconds)
Cbc0010I After 2100 nodes, 801 on tree, 24708.469 best solution, best possible -4078.7561 (976.41 seconds)
Cbc0010I After 2200 nodes, 848 on tree, 24708.469 best solution, best possible -4078.7561 (1000.37 seconds)
Cbc0010I After 2300 nodes, 896 on tree, 24708.469 best solution, best possible -4078.7561 (1009.59 seconds)
Cbc0010I After 2400 nodes, 938 on tree, 24708.469 best solution, best possible -4078.7561 (1020.32 seconds)
Cbc0010I After 2500 nodes, 976 on tree, 24708.469 best solution, best possible -4058.9557 (1036.32 seconds)
Cbc0010I After 2600 nodes, 1025 on tree, 24708.469 best solution, best possible -4058.9557 (1051.31 seconds)
Cbc0010I After 2700 nodes, 1071 on tree, 24708.469 best solution, best possible -4058.9557 (1066.94 seconds)
Cbc0010I After 2800 nodes, 1121 on tree, 24708.469 best solution, best possible -4058.9557 (1076.64 seconds)
Cbc0010I After 2900 nodes, 1162 on tree, 24708.469 best solution, best possible -4058.9557 (1087.29 seconds)
Cbc0010I After 3000 nodes, 1205 on tree, 24708.469 best solution, best possible -3994.1594 (1116.79 seconds)
Cbc0010I After 3100 nodes, 1253 on tree, 24708.469 best solution, best possible -3994.1594 (1124.99 seconds)
Cbc0010I After 3200 nodes, 1302 on tree, 24708.469 best solution, best possible -3994.1594 (1135.41 seconds)
Cbc0010I After 3300 nodes, 1351 on tree, 24708.469 best solution, best possible -3994.1594 (1145.06 seconds)
Cbc0010I After 3400 nodes, 1385 on tree, 24708.469 best solution, best possible -3994.1594 (1155.16 seconds)
Cbc0010I After 3500 nodes, 1431 on tree, 24708.469 best solution, best possible -3973.9057 (1171.14 seconds)
Cbc0010I After 3600 nodes, 1480 on tree, 24708.469 best solution, best possible -3973.9057 (1183.98 seconds)
Cbc0010I After 3700 nodes, 1526 on tree, 24708.469 best solution, best possible -3973.9057 (1196.36 seconds)
Cbc0010I After 3800 nodes, 1575 on tree, 24708.469 best solution, best possible -3973.9057 (1207.07 seconds)
Cbc0010I After 3900 nodes, 1601 on tree, 24708.469 best solution, best possible -3855.3427 (1233.69 seconds)
Cbc0010I After 4000 nodes, 1651 on tree, 24708.469 best solution, best possible -3855.3427 (1243.67 seconds)
Cbc0010I After 4100 nodes, 1699 on tree, 24708.469 best solution, best possible -3855.3427 (1254.04 seconds)
Cbc0010I After 4200 nodes, 1747 on tree, 24708.469 best solution, best possible -3855.3427 (1263.45 seconds)
Cbc0010I After 4300 nodes, 1785 on tree, 24708.469 best solution, best possible -3855.3427 (1274.30 seconds)
Cbc0010I After 4400 nodes, 1826 on tree, 24708.469 best solution, best possible -3854.2036 (1348.66 seconds)
Cbc0010I After 4500 nodes, 1874 on tree, 24708.469 best solution, best possible -3854.2036 (1361.09 seconds)
Cbc0010I After 4600 nodes, 1920 on tree, 24708.469 best solution, best possible -3854.2036 (1373.94 seconds)
Cbc0010I After 4700 nodes, 1970 on tree, 24708.469 best solution, best possible -3854.2036 (1384.14 seconds)
Cbc0010I After 4800 nodes, 2011 on tree, 24708.469 best solution, best possible -3854.2036 (1395.01 seconds)
Cbc0010I After 4900 nodes, 2053 on tree, 24708.469 best solution, best possible -3849.4712 (1409.02 seconds)
Cbc0010I After 5000 nodes, 2103 on tree, 24708.469 best solution, best possible -3849.4712 (1420.46 seconds)
Cbc0010I After 5100 nodes, 2149 on tree, 24708.469 best solution, best possible -3849.4712 (1432.01 seconds)
Cbc0010I After 5200 nodes, 2198 on tree, 24708.469 best solution, best possible -3849.4712 (1441.97 seconds)
Cbc0010I After 5300 nodes, 2236 on tree, 24708.469 best solution, best possible -3849.4712 (1453.23 seconds)
Cbc0010I After 5400 nodes, 2278 on tree, 24708.469 best solution, best possible -3838.0012 (1465.61 seconds)
Cbc0010I After 5500 nodes, 2327 on tree, 24708.469 best solution, best possible -3838.0012 (1472.65 seconds)
Cbc0010I After 5600 nodes, 2375 on tree, 24708.469 best solution, best possible -3838.0012 (1483.53 seconds)
Cbc0010I After 5700 nodes, 2424 on tree, 24708.469 best solution, best possible -3838.0012 (1494.03 seconds)
Cbc0010I After 5800 nodes, 2463 on tree, 24708.469 best solution, best possible -3836.3589 (1522.39 seconds)
Cbc0010I After 5900 nodes, 2513 on tree, 24708.469 best solution, best possible -3836.3589 (1532.96 seconds)
Cbc0010I After 6000 nodes, 2559 on tree, 24708.469 best solution, best possible -3836.3589 (1543.69 seconds)
Cbc0010I After 6100 nodes, 2609 on tree, 24708.469 best solution, best possible -3836.3589 (1553.73 seconds)
Cbc0010I After 6200 nodes, 2650 on tree, 24708.469 best solution, best possible -3836.3589 (1564.43 seconds)
Cbc0010I After 6300 nodes, 2691 on tree, 24708.469 best solution, best possible -3836.3589 (1576.87 seconds)
Cbc0010I After 6400 nodes, 2735 on tree, 24708.469 best solution, best possible -3788.623 (1589.68 seconds)
Cbc0010I After 6500 nodes, 2783 on tree, 24708.469 best solution, best possible -3788.623 (1599.69 seconds)
Cbc0010I After 6600 nodes, 2830 on tree, 24708.469 best solution, best possible -3788.623 (1612.72 seconds)
Cbc0010I After 6700 nodes, 2880 on tree, 24708.469 best solution, best possible -3788.623 (1623.02 seconds)
Cbc0010I After 6800 nodes, 2919 on tree, 24708.469 best solution, best possible -3788.623 (1634.74 seconds)
Cbc0010I After 6900 nodes, 2962 on tree, 24708.469 best solution, best possible -3782.5293 (1647.30 seconds)
Cbc0010I After 7000 nodes, 3010 on tree, 24708.469 best solution, best possible -3782.5293 (1658.56 seconds)
Cbc0010I After 7100 nodes, 3059 on tree, 24708.469 best solution, best possible -3782.5293 (1668.51 seconds)
Cbc0010I After 7200 nodes, 3109 on tree, 24708.469 best solution, best possible -3782.5293 (1679.26 seconds)
Cbc0010I After 7300 nodes, 3137 on tree, 24708.469 best solution, best possible -3780.7794 (1694.68 seconds)
Cbc0010I After 7400 nodes, 3187 on tree, 24708.469 best solution, best possible -3780.7794 (1710.25 seconds)
Cbc0010I After 7500 nodes, 3234 on tree, 24708.469 best solution, best possible -3780.7794 (1724.22 seconds)
Cbc0010I After 7600 nodes, 3283 on tree, 24708.469 best solution, best possible -3780.7794 (1734.22 seconds)
Cbc0010I After 7700 nodes, 3321 on tree, 24708.469 best solution, best possible -3780.7794 (1744.92 seconds)
Cbc0010I After 7800 nodes, 3368 on tree, 24708.469 best solution, best possible -3763.8349 (1763.11 seconds)
Cbc0010I After 7900 nodes, 3416 on tree, 24708.469 best solution, best possible -3763.8349 (1772.45 seconds)
Cbc0010I After 8000 nodes, 3464 on tree, 24708.469 best solution, best possible -3763.8349 (1784.63 seconds)
Cbc0010I After 8100 nodes, 3513 on tree, 24708.469 best solution, best possible -3763.8349 (1794.67 seconds)
Cbc0010I After 8200 nodes, 3556 on tree, 24708.469 best solution, best possible -3763.8349 (1806.75 seconds)
Cbc0010I After 8300 nodes, 3593 on tree, 24708.469 best solution, best possible -3759.7952 (1863.01 seconds)
Cbc0010I After 8400 nodes, 3642 on tree, 24708.469 best solution, best possible -3759.7952 (1870.96 seconds)
Cbc0010I After 8500 nodes, 3690 on tree, 24708.469 best solution, best possible -3759.7952 (1880.33 seconds)
Cbc0010I After 8600 nodes, 3738 on tree, 24708.469 best solution, best possible -3759.7952 (1889.47 seconds)
Cbc0010I After 8700 nodes, 3788 on tree, 24708.469 best solution, best possible -3759.7952 (1899.67 seconds)
Cbc0010I After 8800 nodes, 3824 on tree, 24708.469 best solution, best possible -3736.5701 (1913.44 seconds)
Cbc0010I After 8900 nodes, 3873 on tree, 24708.469 best solution, best possible -3736.5701 (1929.56 seconds)
Cbc0010I After 9000 nodes, 3920 on tree, 24708.469 best solution, best possible -3736.5701 (1942.48 seconds)
Cbc0010I After 9100 nodes, 3969 on tree, 24708.469 best solution, best possible -3736.5701 (1952.46 seconds)
Cbc0010I After 9200 nodes, 4010 on tree, 24708.469 best solution, best possible -3736.5701 (1963.32 seconds)
Cbc0010I After 9300 nodes, 4057 on tree, 24708.469 best solution, best possible -3726.7027 (1976.14 seconds)
Cbc0010I After 9400 nodes, 4105 on tree, 24708.469 best solution, best possible -3726.7027 (1986.72 seconds)
Cbc0010I After 9500 nodes, 4152 on tree, 24708.469 best solution, best possible -3726.7027 (2014.68 seconds)
Cbc0010I After 9600 nodes, 4202 on tree, 24708.469 best solution, best possible -3726.7027 (2024.23 seconds)
Cbc0010I After 9700 nodes, 4246 on tree, 24708.469 best solution, best possible -3726.7027 (2035.40 seconds)
Cbc0010I After 9800 nodes, 4285 on tree, 24708.469 best solution, best possible -3726.7027 (2047.13 seconds)
Cbc0010I After 9900 nodes, 4325 on tree, 24708.469 best solution, best possible -3725.1854 (2058.96 seconds)
Cbc0010I After 10000 nodes, 4374 on tree, 24708.469 best solution, best possible -3725.1854 (2069.33 seconds)
Cbc0010I After 10100 nodes, 4420 on tree, 24708.469 best solution, best possible -3725.1854 (2081.33 seconds)
Cbc0010I After 10200 nodes, 4470 on tree, 24708.469 best solution, best possible -3725.1854 (2091.36 seconds)
Cbc0010I After 10300 nodes, 4500 on tree, 24708.469 best solution, best possible -3724.1927 (2104.86 seconds)
Cbc0010I After 10400 nodes, 4549 on tree, 24708.469 best solution, best possible -3724.1927 (2118.79 seconds)
Cbc0010I After 10500 nodes, 4596 on tree, 24708.469 best solution, best possible -3724.1927 (2128.97 seconds)
Cbc0010I After 10600 nodes, 4645 on tree, 24708.469 best solution, best possible -3724.1927 (2138.32 seconds)
Cbc0010I After 10700 nodes, 4679 on tree, 24708.469 best solution, best possible -3720.7826 (2148.97 seconds)
Cbc0010I After 10800 nodes, 4726 on tree, 24708.469 best solution, best possible -3720.7826 (2169.31 seconds)
Cbc0010I After 10900 nodes, 4773 on tree, 24708.469 best solution, best possible -3720.7826 (2177.80 seconds)
Cbc0010I After 11000 nodes, 4822 on tree, 24708.469 best solution, best possible -3720.7826 (2189.24 seconds)
Cbc0010I After 11100 nodes, 4866 on tree, 24708.469 best solution, best possible -3710.4322 (2200.57 seconds)
Cbc0010I After 11200 nodes, 4916 on tree, 24708.469 best solution, best possible -3710.4322 (2220.79 seconds)
Cbc0010I After 11300 nodes, 4963 on tree, 24708.469 best solution, best possible -3710.4322 (2231.07 seconds)
Cbc0010I After 11400 nodes, 5011 on tree, 24708.469 best solution, best possible -3710.4322 (2240.70 seconds)
Cbc0010I After 11500 nodes, 5051 on tree, 24708.469 best solution, best possible -3710.4322 (2251.59 seconds)
Cbc0010I After 11600 nodes, 5091 on tree, 24708.469 best solution, best possible -3699.6335 (2279.21 seconds)
Cbc0010I After 11700 nodes, 5141 on tree, 24708.469 best solution, best possible -3699.6335 (2287.94 seconds)
Cbc0010I After 11800 nodes, 5187 on tree, 24708.469 best solution, best possible -3699.6335 (2300.27 seconds)
Cbc0010I After 11900 nodes, 5236 on tree, 24708.469 best solution, best possible -3699.6335 (2310.48 seconds)
Cbc0010I After 12000 nodes, 5264 on tree, 24708.469 best solution, best possible -3694.3601 (2321.79 seconds)
Cbc0010I After 12100 nodes, 5314 on tree, 24708.469 best solution, best possible -3687.5012 (2331.91 seconds)
Cbc0010I After 12200 nodes, 5361 on tree, 24708.469 best solution, best possible -3687.5012 (2344.02 seconds)
Cbc0010I After 12300 nodes, 5409 on tree, 24708.469 best solution, best possible -3687.5012 (2352.85 seconds)
Cbc0010I After 12400 nodes, 5456 on tree, 24708.469 best solution, best possible -3687.5012 (2363.12 seconds)
Cbc0010I After 12500 nodes, 5488 on tree, 24708.469 best solution, best possible -3681.0009 (2374.07 seconds)
Cbc0010I After 12600 nodes, 5537 on tree, 24708.469 best solution, best possible -3681.0009 (2385.14 seconds)
Cbc0010I After 12700 nodes, 5584 on tree, 24708.469 best solution, best possible -3681.0009 (2396.34 seconds)
Cbc0010I After 12800 nodes, 5634 on tree, 24708.469 best solution, best possible -3681.0009 (2405.61 seconds)
Cbc0010I After 12900 nodes, 5673 on tree, 24708.469 best solution, best possible -3681.0009 (2415.74 seconds)
Cbc0010I After 13000 nodes, 5716 on tree, 24708.469 best solution, best possible -3679.7328 (2425.95 seconds)
Cbc0010I After 13100 nodes, 5764 on tree, 24708.469 best solution, best possible -3679.7328 (2437.20 seconds)
Cbc0010I After 13200 nodes, 5812 on tree, 24708.469 best solution, best possible -3679.7328 (2447.28 seconds)
Cbc0010I After 13300 nodes, 5861 on tree, 24708.469 best solution, best possible -3679.7328 (2457.05 seconds)
Cbc0010I After 13400 nodes, 5892 on tree, 24708.469 best solution, best possible -3678.8834 (2468.27 seconds)
Cbc0010I After 13500 nodes, 5942 on tree, 24708.469 best solution, best possible -3678.8834 (2480.33 seconds)
Cbc0010I After 13600 nodes, 5989 on tree, 24708.469 best solution, best possible -3678.8834 (2492.56 seconds)
Cbc0010I After 13700 nodes, 6037 on tree, 24708.469 best solution, best possible -3678.8834 (2501.66 seconds)
Cbc0010I After 13800 nodes, 6083 on tree, 24708.469 best solution, best possible -3678.8834 (2511.98 seconds)
Cbc0010I After 13900 nodes, 6132 on tree, 24708.469 best solution, best possible -3678.8834 (2523.22 seconds)
Cbc0010I After 14000 nodes, 6175 on tree, 24708.469 best solution, best possible -3678.8834 (2534.99 seconds)
Cbc0010I After 14100 nodes, 6220 on tree, 24708.469 best solution, best possible -3678.8834 (2544.99 seconds)
Cbc0010I After 14200 nodes, 6263 on tree, 24708.469 best solution, best possible -3678.8834 (2553.19 seconds)
Cbc0010I After 14300 nodes, 6307 on tree, 24708.469 best solution, best possible -3678.8834 (2560.50 seconds)
Cbc0010I After 14400 nodes, 6345 on tree, 24708.469 best solution, best possible -3678.8834 (2567.06 seconds)
Cbc0010I After 14500 nodes, 6385 on tree, 24708.469 best solution, best possible -3678.8834 (2573.86 seconds)
Cbc0010I After 14600 nodes, 6424 on tree, 24708.469 best solution, best possible -3678.8834 (2580.49 seconds)
Cbc0010I After 14700 nodes, 6465 on tree, 24708.469 best solution, best possible -3678.8834 (2587.47 seconds)
Cbc0010I After 14800 nodes, 6506 on tree, 24708.469 best solution, best possible -3678.8834 (2594.54 seconds)
Cbc0010I After 14900 nodes, 6551 on tree, 24708.469 best solution, best possible -3677.0117 (2607.03 seconds)
Cbc0010I After 15000 nodes, 6599 on tree, 24708.469 best solution, best possible -3677.0117 (2621.01 seconds)
Cbc0010I After 15100 nodes, 6646 on tree, 24708.469 best solution, best possible -3677.0117 (2631.78 seconds)
Cbc0010I After 15200 nodes, 6696 on tree, 24708.469 best solution, best possible -3677.0117 (2641.25 seconds)
Cbc0010I After 15300 nodes, 6722 on tree, 24708.469 best solution, best possible -3673.1096 (2692.75 seconds)
Cbc0010I After 15400 nodes, 6772 on tree, 24708.469 best solution, best possible -3673.1096 (2699.88 seconds)
Cbc0010I After 15500 nodes, 6820 on tree, 24708.469 best solution, best possible -3673.1096 (2710.93 seconds)
Cbc0010I After 15600 nodes, 6869 on tree, 24708.469 best solution, best possible -3673.1096 (2719.87 seconds)
Cbc0010I After 15700 nodes, 6901 on tree, 24708.469 best solution, best possible -3668.2787 (2729.98 seconds)
Cbc0010I After 15800 nodes, 6950 on tree, 24708.469 best solution, best possible -3668.2787 (2741.44 seconds)
Cbc0010I After 15900 nodes, 6998 on tree, 24708.469 best solution, best possible -3668.2787 (2750.24 seconds)
Cbc0010I After 16000 nodes, 7046 on tree, 24708.469 best solution, best possible -3668.2787 (2759.25 seconds)
Cbc0010I After 16100 nodes, 7090 on tree, 24708.469 best solution, best possible -3668.2787 (2769.49 seconds)
Cbc0010I After 16200 nodes, 7129 on tree, 24708.469 best solution, best possible -3662.6696 (2800.49 seconds)
Cbc0010I After 16300 nodes, 7177 on tree, 24708.469 best solution, best possible -3662.6696 (2817.43 seconds)
Cbc0010I After 16400 nodes, 7225 on tree, 24708.469 best solution, best possible -3662.6696 (2826.44 seconds)
Cbc0010I After 16500 nodes, 7274 on tree, 24708.469 best solution, best possible -3662.6696 (2836.32 seconds)
Cbc0010I After 16600 nodes, 7314 on tree, 24708.469 best solution, best possible -3662.6696 (2847.60 seconds)
Cbc0010I After 16700 nodes, 7360 on tree, 24708.469 best solution, best possible -3655.7065 (2859.69 seconds)
Cbc0010I After 16800 nodes, 7409 on tree, 24708.469 best solution, best possible -3655.7065 (2868.84 seconds)
Cbc0010I After 16900 nodes, 7458 on tree, 24708.469 best solution, best possible -3655.7065 (2879.26 seconds)
Cbc0010I After 17000 nodes, 7507 on tree, 24708.469 best solution, best possible -3655.7065 (2888.59 seconds)
Cbc0010I After 17100 nodes, 7539 on tree, 24708.469 best solution, best possible -3644.9152 (2898.39 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 24708.469 (best possible -3644.9152), took 2375460 iterations and 17115 nodes (2906.82 seconds)
Cbc0035I Maximum depth 756, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2887
Linearization cuts added in total:           2887  (separation time: 0.027691s)
Total solve time:                         2907.29s (2907.29s in branch-and-bound)
Lower bound:                             -3644.92
Upper bound:                              24708.5  (gap: 777.68%)
Branch-and-bound nodes:                     17115
Stats: /tmp/jl_Eq5fmT/model.nl 1350 [var]  125 [int] 1700 [con] 1127 [aux]   2887 [root]     2887 [tot] 0.027691 [sep]  2907.29 [time]   2907.3 [bb]        -3.644915e+03 [lower]         2.470847e+04 [upper]   17115 [nodes]
Performance of                           FBBT:	    217.267s,    25406 runs. fix:  0.0186751 shrnk:    0.58305 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    34.2173s,        6 runs. fix:          0 shrnk:   0.231775 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1224
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
