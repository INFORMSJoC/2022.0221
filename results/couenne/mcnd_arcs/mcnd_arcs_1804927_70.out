solving instance mcnd arcs c25_100_10_F_T_5 3 6 pardivexp
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 35027.623     1298 112.34404
NLP0014I             2      INFEAS 13.125191      477 37.929707
Loaded instance "/tmp/jl_Q0Lzzv/model.nl"
Constraints:         1700
Variables:           1350 (125 integer)
Auxiliaries:         1027 (0 integer)

Coin0506I Presolve 2877 (-361) rows, 1491 (-886) columns and 10034 (-1532) elements
Clp0006I 0  Obj 8151.3679 Primal inf 5720.8922 (822)
Clp0006I 132  Obj 8151.3679 Primal inf 2747.7345 (727)
Clp0006I 264  Obj 8151.3679 Primal inf 1954.6787 (713)
Clp0006I 396  Obj 8151.3679 Primal inf 27503.428 (625)
Clp0006I 505  Obj 8151.3679 Primal inf 33453.531 (667)
Clp0006I 635  Obj 8151.3679 Primal inf 327730.44 (729)
Clp0006I 767  Obj 10619.524 Primal inf 140774.55 (650)
Clp0006I 899  Obj 13371.724 Primal inf 462111.53 (759)
Clp0006I 1031  Obj 15360.328 Primal inf 181144.47 (787)
Clp0006I 1150  Obj 18361.859 Primal inf 71760.904 (790)
Clp0006I 1280  Obj 20313.022 Primal inf 7173.4446 (712)
Clp0006I 1412  Obj 20997.026 Primal inf 122579.55 (636)
Clp0006I 1544  Obj 21083.983 Primal inf 42323.154 (906)
Clp0006I 1676  Obj 21488.579 Primal inf 22159.278 (506)
Clp0006I 1808  Obj 21906.124 Primal inf 44093.035 (530)
Clp0006I 1940  Obj 22124.327 Primal inf 199608.97 (443)
Clp0006I 2072  Obj 22270.594 Primal inf 119.79202 (163)
Clp0006I 2175  Obj 22302.275
Clp0000I Optimal - objective value 22302.275
Clp0032I Optimal objective 22302.27513 - 2175 iterations time 0.332, Presolve 0.01
Clp0000I Optimal - objective value 22302.275
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 22302.275
Optimality Based BT: 0 improved bounds
Probing: 6 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 57 added rows had average density of 2
Cbc0013I At root node, 57 cuts changed objective from 22302.275 to 22451.091 in 16 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 260 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (34.87 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 38 on tree, 1e+50 best solution, best possible 22983.575 (319.52 seconds)
Cbc0010I After 200 nodes, 83 on tree, 1e+50 best solution, best possible 22983.575 (328.87 seconds)
Cbc0010I After 300 nodes, 114 on tree, 1e+50 best solution, best possible 22983.575 (337.49 seconds)
Cbc0010I After 400 nodes, 153 on tree, 1e+50 best solution, best possible 22983.575 (344.03 seconds)
Cbc0010I After 500 nodes, 192 on tree, 1e+50 best solution, best possible 22983.575 (350.36 seconds)
Cbc0010I After 600 nodes, 235 on tree, 1e+50 best solution, best possible 22983.575 (355.76 seconds)
Cbc0010I After 700 nodes, 281 on tree, 1e+50 best solution, best possible 22983.575 (360.72 seconds)
Couenne: new cutoff value 4.9126095608e+04 (518.769 seconds)
Cbc0004I Integer solution of 49126.096 found after 53322 iterations and 777 nodes (364.42 seconds)
Optimality Based BT: 50 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 800 nodes, 211 on tree, 49126.096 best solution, best possible 23157.975 (582.98 seconds)
Cbc0010I After 900 nodes, 259 on tree, 49126.096 best solution, best possible 23157.975 (595.28 seconds)
Cbc0010I After 1000 nodes, 298 on tree, 49126.096 best solution, best possible 23157.975 (606.82 seconds)
Optimality Based BT: 50 improved bounds
Cbc0010I After 1100 nodes, 329 on tree, 49126.096 best solution, best possible 23201.064 (726.43 seconds)
Cbc0010I After 1200 nodes, 378 on tree, 49126.096 best solution, best possible 23201.064 (737.80 seconds)
Cbc0010I After 1300 nodes, 419 on tree, 49126.096 best solution, best possible 23201.064 (748.23 seconds)
Cbc0010I After 1400 nodes, 453 on tree, 49126.096 best solution, best possible 23201.064 (758.56 seconds)
Cbc0010I After 1500 nodes, 486 on tree, 49126.096 best solution, best possible 23753.009 (773.20 seconds)
Cbc0010I After 1600 nodes, 536 on tree, 49126.096 best solution, best possible 23753.009 (784.92 seconds)
Cbc0010I After 1700 nodes, 577 on tree, 49126.096 best solution, best possible 23753.009 (796.40 seconds)
Optimality Based BT: 54 improved bounds
Optimality Based BT: 98 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1800 nodes, 615 on tree, 49126.096 best solution, best possible 23867.567 (1057.27 seconds)
Cbc0010I After 1900 nodes, 654 on tree, 49126.096 best solution, best possible 23867.567 (1065.88 seconds)
Cbc0010I After 2000 nodes, 697 on tree, 49126.096 best solution, best possible 23867.567 (1076.28 seconds)
Cbc0010I After 2100 nodes, 713 on tree, 49126.096 best solution, best possible 23867.567 (1085.98 seconds)
Optimality Based BT: 63 improved bounds
Cbc0010I After 2200 nodes, 738 on tree, 49126.096 best solution, best possible 24141.893 (1217.48 seconds)
Cbc0010I After 2300 nodes, 779 on tree, 49126.096 best solution, best possible 24141.893 (1227.39 seconds)
Cbc0010I After 2400 nodes, 815 on tree, 49126.096 best solution, best possible 24141.893 (1238.13 seconds)
Cbc0010I After 2500 nodes, 846 on tree, 49126.096 best solution, best possible 24141.893 (1248.24 seconds)
Optimality Based BT: 52 improved bounds
Cbc0010I After 2600 nodes, 891 on tree, 49126.096 best solution, best possible 24269.064 (1265.98 seconds)
Cbc0010I After 2700 nodes, 940 on tree, 49126.096 best solution, best possible 24269.064 (1278.32 seconds)
Cbc0010I After 2800 nodes, 979 on tree, 49126.096 best solution, best possible 24269.064 (1289.06 seconds)
Cbc0010I After 2900 nodes, 1008 on tree, 49126.096 best solution, best possible 24385.66 (1319.36 seconds)
Cbc0010I After 3000 nodes, 1053 on tree, 49126.096 best solution, best possible 24385.66 (1329.24 seconds)
Cbc0010I After 3100 nodes, 1095 on tree, 49126.096 best solution, best possible 24385.66 (1339.25 seconds)
Cbc0010I After 3200 nodes, 1123 on tree, 49126.096 best solution, best possible 24385.66 (1348.03 seconds)
Cbc0010I After 3300 nodes, 1163 on tree, 49126.096 best solution, best possible 24385.66 (1357.70 seconds)
Cbc0010I After 3400 nodes, 1197 on tree, 49126.096 best solution, best possible 24385.66 (1365.87 seconds)
Cbc0010I After 3500 nodes, 1235 on tree, 49126.096 best solution, best possible 24385.66 (1372.48 seconds)
Cbc0010I After 3600 nodes, 1276 on tree, 49126.096 best solution, best possible 24385.66 (1378.49 seconds)
Couenne: new cutoff value 4.6383954995e+04 (1535.01 seconds)
Couenne: new cutoff value 4.6383943240e+04 (1535.19 seconds)
Cbc0004I Integer solution of 46383.943 found after 322109 iterations and 3641 nodes (1380.84 seconds)
Cbc0010I After 3700 nodes, 1058 on tree, 46383.943 best solution, best possible 24517.092 (1391.13 seconds)
Cbc0010I After 3800 nodes, 1096 on tree, 46383.943 best solution, best possible 24517.092 (1401.75 seconds)
Cbc0010I After 3900 nodes, 1133 on tree, 46383.943 best solution, best possible 24517.092 (1414.36 seconds)
Cbc0010I After 4000 nodes, 1181 on tree, 46383.943 best solution, best possible 24536.313 (1444.41 seconds)
Cbc0010I After 4100 nodes, 1230 on tree, 46383.943 best solution, best possible 24536.313 (1456.81 seconds)
Cbc0010I After 4200 nodes, 1268 on tree, 46383.943 best solution, best possible 24542.992 (1469.10 seconds)
Cbc0010I After 4300 nodes, 1318 on tree, 46383.943 best solution, best possible 24542.992 (1480.58 seconds)
Cbc0010I After 4400 nodes, 1356 on tree, 46383.943 best solution, best possible 24542.992 (1492.49 seconds)
Cbc0010I After 4500 nodes, 1384 on tree, 46383.943 best solution, best possible 24542.992 (1503.12 seconds)
Cbc0010I After 4600 nodes, 1428 on tree, 46383.943 best solution, best possible 24594.774 (1515.68 seconds)
Cbc0010I After 4700 nodes, 1474 on tree, 46383.943 best solution, best possible 24594.774 (1526.85 seconds)
Cbc0010I After 4800 nodes, 1510 on tree, 46383.943 best solution, best possible 24613.264 (1538.10 seconds)
Cbc0010I After 4900 nodes, 1557 on tree, 46383.943 best solution, best possible 24613.264 (1556.84 seconds)
Cbc0010I After 5000 nodes, 1601 on tree, 46383.943 best solution, best possible 24613.264 (1569.09 seconds)
Cbc0010I After 5100 nodes, 1637 on tree, 46383.943 best solution, best possible 24615.471 (1586.91 seconds)
Cbc0010I After 5200 nodes, 1687 on tree, 46383.943 best solution, best possible 24615.471 (1598.54 seconds)
Cbc0010I After 5300 nodes, 1732 on tree, 46383.943 best solution, best possible 24615.471 (1611.05 seconds)
Cbc0010I After 5400 nodes, 1770 on tree, 46383.943 best solution, best possible 24630.694 (1683.32 seconds)
Cbc0010I After 5500 nodes, 1804 on tree, 46383.943 best solution, best possible 24630.694 (1693.12 seconds)
Cbc0010I After 5600 nodes, 1847 on tree, 46383.943 best solution, best possible 24630.694 (1704.62 seconds)
Cbc0010I After 5700 nodes, 1865 on tree, 46383.943 best solution, best possible 24630.694 (1714.01 seconds)
Cbc0010I After 5800 nodes, 1899 on tree, 46383.943 best solution, best possible 24653.401 (1725.29 seconds)
Cbc0010I After 5900 nodes, 1947 on tree, 46383.943 best solution, best possible 24653.401 (1737.72 seconds)
Cbc0010I After 6000 nodes, 1992 on tree, 46383.943 best solution, best possible 24653.401 (1750.27 seconds)
Cbc0010I After 6100 nodes, 2019 on tree, 46383.943 best solution, best possible 24668.281 (1762.02 seconds)
Cbc0010I After 6200 nodes, 2069 on tree, 46383.943 best solution, best possible 24668.281 (1773.85 seconds)
Cbc0010I After 6300 nodes, 2118 on tree, 46383.943 best solution, best possible 24668.281 (1786.11 seconds)
Cbc0010I After 6400 nodes, 2154 on tree, 46383.943 best solution, best possible 24668.281 (1797.75 seconds)
Cbc0010I After 6500 nodes, 2188 on tree, 46383.943 best solution, best possible 24678.245 (1811.01 seconds)
Cbc0010I After 6600 nodes, 2237 on tree, 46383.943 best solution, best possible 24678.245 (1822.12 seconds)
Cbc0010I After 6700 nodes, 2281 on tree, 46383.943 best solution, best possible 24678.245 (1834.02 seconds)
Cbc0010I After 6800 nodes, 2312 on tree, 46383.943 best solution, best possible 24697.595 (1968.95 seconds)
Cbc0010I After 6900 nodes, 2361 on tree, 46383.943 best solution, best possible 24697.595 (1981.32 seconds)
Cbc0010I After 7000 nodes, 2404 on tree, 46383.943 best solution, best possible 24697.595 (1993.35 seconds)
Cbc0010I After 7100 nodes, 2439 on tree, 46383.943 best solution, best possible 24726.236 (2004.37 seconds)
Cbc0010I After 7200 nodes, 2486 on tree, 46383.943 best solution, best possible 24726.236 (2017.63 seconds)
Cbc0010I After 7300 nodes, 2520 on tree, 46383.943 best solution, best possible 24726.236 (2028.70 seconds)
Cbc0010I After 7400 nodes, 2566 on tree, 46383.943 best solution, best possible 24738.321 (2040.64 seconds)
Cbc0010I After 7500 nodes, 2604 on tree, 46383.943 best solution, best possible 24738.321 (2051.34 seconds)
Cbc0010I After 7600 nodes, 2645 on tree, 46383.943 best solution, best possible 24809.947 (2063.84 seconds)
Cbc0010I After 7700 nodes, 2694 on tree, 46383.943 best solution, best possible 24809.947 (2075.37 seconds)
Cbc0010I After 7800 nodes, 2733 on tree, 46383.943 best solution, best possible 24828.872 (2088.11 seconds)
Cbc0010I After 7900 nodes, 2781 on tree, 46383.943 best solution, best possible 24828.872 (2099.33 seconds)
Cbc0010I After 8000 nodes, 2828 on tree, 46383.943 best solution, best possible 24828.872 (2111.67 seconds)
Cbc0010I After 8100 nodes, 2859 on tree, 46383.943 best solution, best possible 24828.872 (2123.46 seconds)
Cbc0010I After 8200 nodes, 2903 on tree, 46383.943 best solution, best possible 24833.244 (2150.90 seconds)
Cbc0010I After 8300 nodes, 2952 on tree, 46383.943 best solution, best possible 24833.244 (2161.99 seconds)
Cbc0010I After 8400 nodes, 2994 on tree, 46383.943 best solution, best possible 24833.244 (2172.94 seconds)
Cbc0010I After 8500 nodes, 3033 on tree, 46383.943 best solution, best possible 24833.244 (2185.31 seconds)
Cbc0010I After 8600 nodes, 3080 on tree, 46383.943 best solution, best possible 24847.252 (2197.77 seconds)
Cbc0010I After 8700 nodes, 3126 on tree, 46383.943 best solution, best possible 24847.252 (2209.12 seconds)
Cbc0010I After 8800 nodes, 3167 on tree, 46383.943 best solution, best possible 24907.042 (2221.47 seconds)
Cbc0010I After 8900 nodes, 3214 on tree, 46383.943 best solution, best possible 24907.042 (2235.98 seconds)
Cbc0010I After 9000 nodes, 3252 on tree, 46383.943 best solution, best possible 24907.042 (2248.72 seconds)
Cbc0010I After 9100 nodes, 3290 on tree, 46383.943 best solution, best possible 24932.348 (2262.62 seconds)
Cbc0010I After 9200 nodes, 3339 on tree, 46383.943 best solution, best possible 24932.348 (2273.41 seconds)
Cbc0010I After 9300 nodes, 3380 on tree, 46383.943 best solution, best possible 24932.348 (2283.81 seconds)
Cbc0010I After 9400 nodes, 3424 on tree, 46383.943 best solution, best possible 24940.123 (2295.90 seconds)
Cbc0010I After 9500 nodes, 3471 on tree, 46383.943 best solution, best possible 24940.123 (2307.97 seconds)
Cbc0010I After 9600 nodes, 3506 on tree, 46383.943 best solution, best possible 24944.316 (2329.79 seconds)
Cbc0010I After 9700 nodes, 3555 on tree, 46383.943 best solution, best possible 24944.316 (2340.54 seconds)
Cbc0010I After 9800 nodes, 3594 on tree, 46383.943 best solution, best possible 24944.316 (2352.57 seconds)
Cbc0010I After 9900 nodes, 3614 on tree, 46383.943 best solution, best possible 24944.316 (2362.14 seconds)
Cbc0010I After 10000 nodes, 3656 on tree, 46383.943 best solution, best possible 24951.219 (2374.73 seconds)
Cbc0010I After 10100 nodes, 3705 on tree, 46383.943 best solution, best possible 24951.219 (2387.40 seconds)
Cbc0010I After 10200 nodes, 3749 on tree, 46383.943 best solution, best possible 24951.219 (2401.21 seconds)
Cbc0010I After 10300 nodes, 3788 on tree, 46383.943 best solution, best possible 24952.074 (2491.72 seconds)
Cbc0010I After 10400 nodes, 3838 on tree, 46383.943 best solution, best possible 24952.074 (2503.61 seconds)
Cbc0010I After 10500 nodes, 3874 on tree, 46383.943 best solution, best possible 24952.074 (2513.73 seconds)
Cbc0010I After 10600 nodes, 3909 on tree, 46383.943 best solution, best possible 24965.244 (2538.13 seconds)
Cbc0010I After 10700 nodes, 3959 on tree, 46383.943 best solution, best possible 24965.244 (2549.18 seconds)
Cbc0010I After 10800 nodes, 3997 on tree, 46383.943 best solution, best possible 24965.244 (2560.16 seconds)
Cbc0010I After 10900 nodes, 4039 on tree, 46383.943 best solution, best possible 24971.673 (2572.40 seconds)
Cbc0010I After 11000 nodes, 4087 on tree, 46383.943 best solution, best possible 24971.673 (2585.37 seconds)
Cbc0010I After 11100 nodes, 4129 on tree, 46383.943 best solution, best possible 24971.673 (2595.76 seconds)
Cbc0010I After 11200 nodes, 4168 on tree, 46383.943 best solution, best possible 25019.455 (2607.97 seconds)
Cbc0010I After 11300 nodes, 4217 on tree, 46383.943 best solution, best possible 25019.455 (2619.93 seconds)
Cbc0010I After 11400 nodes, 4246 on tree, 46383.943 best solution, best possible 25031.355 (2631.75 seconds)
Cbc0010I After 11500 nodes, 4296 on tree, 46383.943 best solution, best possible 25031.355 (2643.33 seconds)
Cbc0010I After 11600 nodes, 4337 on tree, 46383.943 best solution, best possible 25031.355 (2653.76 seconds)
Cbc0010I After 11700 nodes, 4379 on tree, 46383.943 best solution, best possible 25032.918 (2733.44 seconds)
Cbc0010I After 11800 nodes, 4428 on tree, 46383.943 best solution, best possible 25032.918 (2745.45 seconds)
Cbc0010I After 11900 nodes, 4466 on tree, 46383.943 best solution, best possible 25041.165 (2757.24 seconds)
Cbc0010I After 12000 nodes, 4516 on tree, 46383.943 best solution, best possible 25041.165 (2768.70 seconds)
Cbc0010I After 12100 nodes, 4564 on tree, 46383.943 best solution, best possible 25041.165 (2780.35 seconds)
Cbc0010I After 12200 nodes, 4594 on tree, 46383.943 best solution, best possible 25041.165 (2790.78 seconds)
Cbc0010I After 12300 nodes, 4634 on tree, 46383.943 best solution, best possible 25050.314 (2816.30 seconds)
Cbc0010I After 12400 nodes, 4680 on tree, 46383.943 best solution, best possible 25050.314 (2827.35 seconds)
Cbc0010I After 12500 nodes, 4716 on tree, 46383.943 best solution, best possible 25050.314 (2839.06 seconds)
Cbc0010I After 12600 nodes, 4748 on tree, 46383.943 best solution, best possible 25050.354 (2868.79 seconds)
Cbc0010I After 12700 nodes, 4795 on tree, 46383.943 best solution, best possible 25050.354 (2879.56 seconds)
Cbc0010I After 12800 nodes, 4825 on tree, 46383.943 best solution, best possible 25071.387 (2891.93 seconds)
Cbc0010I After 12900 nodes, 4873 on tree, 46383.943 best solution, best possible 25071.387 (2902.55 seconds)
Cbc0010I After 13000 nodes, 4915 on tree, 46383.943 best solution, best possible 25071.387 (2913.55 seconds)
Optimality Based BT: 64 improved bounds
Cbc0010I After 13100 nodes, 4953 on tree, 46383.943 best solution, best possible 25071.554 (2940.87 seconds)
Cbc0010I After 13200 nodes, 4996 on tree, 46383.943 best solution, best possible 25071.554 (2952.86 seconds)
Cbc0010I After 13300 nodes, 5037 on tree, 46383.943 best solution, best possible 25071.554 (2965.80 seconds)
Cbc0010I After 13400 nodes, 5062 on tree, 46383.943 best solution, best possible 25073.038 (2977.65 seconds)
Cbc0010I After 13500 nodes, 5110 on tree, 46383.943 best solution, best possible 25073.038 (2988.79 seconds)
Cbc0010I After 13600 nodes, 5150 on tree, 46383.943 best solution, best possible 25073.038 (2999.30 seconds)
Cbc0010I After 13700 nodes, 5186 on tree, 46383.943 best solution, best possible 25082.516 (3011.79 seconds)
Cbc0010I After 13800 nodes, 5235 on tree, 46383.943 best solution, best possible 25082.516 (3022.78 seconds)
Cbc0010I After 13900 nodes, 5268 on tree, 46383.943 best solution, best possible 25090.739 (3034.15 seconds)
Cbc0010I After 14000 nodes, 5317 on tree, 46383.943 best solution, best possible 25090.739 (3045.76 seconds)
Cbc0010I After 14100 nodes, 5355 on tree, 46383.943 best solution, best possible 25090.739 (3056.02 seconds)
Cbc0010I After 14200 nodes, 5398 on tree, 46383.943 best solution, best possible 25101.342 (3067.44 seconds)
Cbc0010I After 14300 nodes, 5446 on tree, 46383.943 best solution, best possible 25101.342 (3079.65 seconds)
Cbc0010I After 14400 nodes, 5481 on tree, 46383.943 best solution, best possible 25101.342 (3088.67 seconds)
Cbc0010I After 14500 nodes, 5521 on tree, 46383.943 best solution, best possible 25101.342 (3097.29 seconds)
Cbc0010I After 14600 nodes, 5567 on tree, 46383.943 best solution, best possible 25101.342 (3105.51 seconds)
Cbc0010I After 14700 nodes, 5613 on tree, 46383.943 best solution, best possible 25101.342 (3111.98 seconds)
Cbc0010I After 14800 nodes, 5663 on tree, 46383.943 best solution, best possible 25101.342 (3120.07 seconds)
Couenne: new cutoff value 4.2790642685e+04 (3276.19 seconds)
Cbc0004I Integer solution of 42790.643 found after 1661772 iterations and 14830 nodes (3121.90 seconds)
Cbc0010I After 14900 nodes, 4989 on tree, 42790.643 best solution, best possible 25104.199 (3145.17 seconds)
Cbc0010I After 15000 nodes, 5033 on tree, 42790.643 best solution, best possible 25104.199 (3157.64 seconds)
Cbc0010I After 15100 nodes, 5072 on tree, 42790.643 best solution, best possible 25129.438 (3171.26 seconds)
Cbc0010I After 15200 nodes, 5122 on tree, 42790.643 best solution, best possible 25129.438 (3183.81 seconds)
Cbc0010I After 15300 nodes, 5162 on tree, 42790.643 best solution, best possible 25134.123 (3197.38 seconds)
Cbc0010I After 15400 nodes, 5210 on tree, 42790.643 best solution, best possible 25134.123 (3218.49 seconds)
Cbc0010I After 15500 nodes, 5249 on tree, 42790.643 best solution, best possible 25134.123 (3230.62 seconds)
Cbc0010I After 15600 nodes, 5294 on tree, 42790.643 best solution, best possible 25152.684 (3243.29 seconds)
Cbc0010I After 15700 nodes, 5343 on tree, 42790.643 best solution, best possible 25152.684 (3257.26 seconds)
Cbc0010I After 15800 nodes, 5383 on tree, 42790.643 best solution, best possible 25152.684 (3268.84 seconds)
Cbc0010I After 15900 nodes, 5426 on tree, 42790.643 best solution, best possible 25159.626 (3281.87 seconds)
Cbc0010I After 16000 nodes, 5472 on tree, 42790.643 best solution, best possible 25159.626 (3294.18 seconds)
Cbc0010I After 16100 nodes, 5500 on tree, 42790.643 best solution, best possible 25163.085 (3305.31 seconds)
Cbc0010I After 16200 nodes, 5547 on tree, 42790.643 best solution, best possible 25163.085 (3318.14 seconds)
Cbc0010I After 16300 nodes, 5594 on tree, 42790.643 best solution, best possible 25163.085 (3330.80 seconds)
Cbc0010I After 16400 nodes, 5627 on tree, 42790.643 best solution, best possible 25165.796 (3345.45 seconds)
Cbc0010I After 16500 nodes, 5672 on tree, 42790.643 best solution, best possible 25165.796 (3356.44 seconds)
Cbc0010I After 16600 nodes, 5717 on tree, 42790.643 best solution, best possible 25165.796 (3369.73 seconds)
Optimality Based BT: 68 improved bounds
Cbc0010I After 16700 nodes, 5754 on tree, 42790.643 best solution, best possible 25169.513 (3396.18 seconds)
Cbc0010I After 16800 nodes, 5801 on tree, 42790.643 best solution, best possible 25169.513 (3407.15 seconds)
Cbc0010I After 16900 nodes, 5836 on tree, 42790.643 best solution, best possible 25173.089 (3419.41 seconds)
Cbc0010I After 17000 nodes, 5886 on tree, 42790.643 best solution, best possible 25173.089 (3430.72 seconds)
Cbc0010I After 17100 nodes, 5929 on tree, 42790.643 best solution, best possible 25173.089 (3441.70 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 42790.643 (best possible 25173.089), took 1943462 iterations and 17129 nodes (3448.68 seconds)
Cbc0035I Maximum depth 401, 1343 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       3238
Linearization cuts added in total:           3238  (separation time: 0.022292s)
Total solve time:                         3449.18s (3449.18s in branch-and-bound)
Lower bound:                              25173.1
Upper bound:                              42790.6  (gap: 69.98%)
Branch-and-bound nodes:                     17129
Stats: /tmp/jl_Q0Lzzv/model.nl 1350 [var]  125 [int] 1700 [con] 1027 [aux]   3238 [root]     3238 [tot] 0.022292 [sep]  3449.18 [time]  3449.19 [bb]         2.517309e+04 [lower]         4.279064e+04 [upper]   17129 [nodes]
Performance of                           FBBT:	     239.64s,    31257 runs. fix:  0.0177205 shrnk:   0.169494 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    99.1375s,       16 runs. fix:   0.123288 shrnk:    11.1003 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
f0 = 5.893370021768587
f0 = 0.3229002137675602
f0 = 0.16409682994744867
f0 = 5.893370021768587
f0 = 5.893370021768587
f0 = 1.0057547641940403
f0 = 5.893370021768587
f0 = 0.19321078364780248
f0 = 0.9025325647109678
f0 = 5.893370021768587
f0 = 0.9289997953476531
f0 = 0.2743769576003039
f0 = 0.3802458801470449
f0 = 0.5311090947761506
f0 = 0.1023399584618497
f0 = 5.893370021768587
f0 = 0.6237444020045496
f0 = 1.1133881687832272
f0 = 1.0066370052152627
f0 = 0.5822790740070755
f0 = 5.893370021768587
f0 = 0.800192606249118
f0 = 0.5169932384365857
f0 = 0.9660539182390128
f0 = 5.893370021768587
f0 = 0.4967016949484603
f0 = 0.5002306590333514
f0 = 5.893370021768587
f0 = 0.4349448234628611
f0 = 0.48435032065134026
f0 = 0.6916769606387082
f0 = 0.4878792847362314
f0 = 5.893370021768587
f0 = 0.8063682933976777
f0 = 0.3978907005715019
f0 = 0.5037596231182431
f0 = 0.3431917572556857
f0 = 0.4049486287412845
f0 = 5.893370021768587
f0 = 0.9192951441142018
f0 = 0.16321458892622576
f0 = 0.7084395400419419
f0 = 0.497583935969683
f0 = 0.5778678689009619
f0 = 0.6202154379196583
f0 = 0.47111670533299765
f0 = 5.893370021768587
f0 = 0.7878412319519982
f0 = 0.284963849854978
f0 = 0.5328735768185965
f0 = 5.893370021768587
f0 = 0.7516693500818621
f0 = 0.882241021222842
f0 = 0.6025706174952014
f0 = 5.893370021768587
f0 = 1.0119304513425997
f0 = 0.6837367914477026
f0 = 5.893370021768587
f0 = 0.8998858416472989
f0 = 0.37936363912582205
f0 = 0.19938647079636238
f0 = 1.0189883795123824
f0 = 0.8584205136498255
f0 = 5.893370021768587
f0 = 0.6669742120444688
f0 = 1.0225173435972748
f0 = 0.6643274889808003
f0 = 0.34848520338302275
f0 = 5.893370021768587
f0 = 0.3149600445765546
f0 = 0.46052981307832375
f0 = 0.8469513803739287
f0 = 5.893370021768587
f0 = 0.23820507573016736
f0 = 0.742846939869633
f0 = 5.893370021768587
f0 = 0.4658232592056608
f0 = 0.5055241051606885
f0 = 5.893370021768587
f0 = 0.8690074059044995
f0 = 5.893370021768587
f0 = 0.6537405967261259
f0 = 0.6219799199621038
f0 = 5.893370021768587
f0 = 0.8593027546710481
f0 = 0.4817035975876715
f0 = 0.9281175543264297
f0 = 0.7102040220843882
f0 = 0.4825858386088946
f0 = 5.893370021768587
f0 = 0.58669027911319
f0 = 0.2267359424542704
f0 = 5.893370021768587
f0 = 0.6202154379196583
f0 = 0.7181441912753934
f0 = 0.48435032065134026
f0 = 5.893370021768587
f0 = 0.6316845711955551
f0 = 0.7896057139944437
f0 = 0.6555050787685716
