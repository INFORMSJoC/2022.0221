solving instance mcnd arcs c25_100_10_F_L_5 3 6 sincos
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.7 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 47710.537     3000 331.13139
NLP0014I             1      FAILED 47710.537     3000 335.54626   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_khhxOt/model.nl"
Constraints:         1700
Variables:           1350 (125 integer)
Auxiliaries:         1127 (0 integer)

Coin0506I Presolve 2476 (-425) rows, 1501 (-976) columns and 9601 (-1391) elements
Clp0006I 0  Obj -9581.15 Primal inf 9966.3213 (320)
Clp0006I 124  Obj -9581.15 Primal inf 3281.9094 (255)
Clp0006I 248  Obj -9581.15 Primal inf 929.84489 (257)
Clp0006I 372  Obj -9110.7291 Primal inf 981.79017 (255)
Clp0006I 496  Obj -5768.5189 Primal inf 1088.782 (272)
Clp0006I 620  Obj -5355.2599 Primal inf 2911.4619 (333)
Clp0006I 744  Obj -3302.5245 Primal inf 14672.896 (421)
Clp0006I 868  Obj -1038.0411 Primal inf 12162.773 (505)
Clp0006I 992  Obj 3135.5599 Primal inf 9461.819 (464)
Clp0006I 1113  Obj 4653.0284 Primal inf 7973.1471 (514)
Clp0006I 1234  Obj 6177.4193 Primal inf 2033.4682 (497)
Clp0006I 1338  Obj 7305.2883 Primal inf 81295.059 (614)
Clp0006I 1437  Obj 7958.2416 Primal inf 3363.9543 (525)
Clp0006I 1546  Obj 8613.7405 Primal inf 3777.8242 (597)
Clp0006I 1652  Obj 9235.3083 Primal inf 2622.6786 (459)
Clp0006I 1770  Obj 9449.7821 Primal inf 344.41216 (246)
Clp0006I 1879  Obj 9584.6125 Primal inf 512.56403 (345)
Clp0006I 1985  Obj 9636.5539 Primal inf 25.498928 (77)
Clp0006I 2040  Obj 9642.26
Clp0000I Optimal - objective value 9642.26
Clp0032I Optimal objective 9642.260031 - 2040 iterations time 0.412, Presolve 0.01
Clp0000I Optimal - objective value 9642.26
NLP Heuristic: NLP0014I             3      INFEAS 5.0075172       63 3.779639
no solution.
Clp0000I Optimal - objective value 9642.26
Optimality Based BT: 86 improved bounds
Probing: 76 improved bounds
NLP Heuristic: time limit reached.
Cbc0013I At root node, 0 cuts changed objective from 9642.26 to 9642.26 in 1 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 0 row cuts average 0.0 elements, 1 column cuts (1 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (48.88 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 9953.5376 (513.80 seconds)
Cbc0010I After 200 nodes, 93 on tree, 1e+50 best solution, best possible 9953.5376 (518.34 seconds)
Cbc0010I After 300 nodes, 136 on tree, 1e+50 best solution, best possible 9953.5376 (524.49 seconds)
Cbc0010I After 400 nodes, 179 on tree, 1e+50 best solution, best possible 9953.5376 (530.57 seconds)
Cbc0010I After 500 nodes, 223 on tree, 1e+50 best solution, best possible 9953.5376 (536.50 seconds)
Cbc0010I After 600 nodes, 270 on tree, 1e+50 best solution, best possible 9953.5376 (542.75 seconds)
Cbc0010I After 700 nodes, 318 on tree, 1e+50 best solution, best possible 9953.5376 (548.19 seconds)
Cbc0010I After 800 nodes, 365 on tree, 1e+50 best solution, best possible 9953.5376 (553.52 seconds)
Cbc0010I After 900 nodes, 404 on tree, 1e+50 best solution, best possible 9953.5376 (558.20 seconds)
Cbc0010I After 1000 nodes, 437 on tree, 1e+50 best solution, best possible 9953.5376 (562.78 seconds)
Cbc0010I After 1100 nodes, 477 on tree, 1e+50 best solution, best possible 9953.5376 (567.56 seconds)
Cbc0010I After 1200 nodes, 506 on tree, 1e+50 best solution, best possible 9953.5376 (573.07 seconds)
Cbc0010I After 1300 nodes, 533 on tree, 1e+50 best solution, best possible 9953.5376 (579.61 seconds)
Optimality Based BT: 1 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 1400 nodes, 566 on tree, 1e+50 best solution, best possible 10621.365 (792.41 seconds)
Cbc0010I After 1500 nodes, 616 on tree, 1e+50 best solution, best possible 10621.365 (806.68 seconds)
Cbc0010I After 1600 nodes, 661 on tree, 1e+50 best solution, best possible 10621.365 (812.04 seconds)
Cbc0010I After 1700 nodes, 698 on tree, 1e+50 best solution, best possible 10621.365 (818.16 seconds)
Cbc0010I After 1800 nodes, 737 on tree, 1e+50 best solution, best possible 10621.365 (824.15 seconds)
Cbc0010I After 1900 nodes, 771 on tree, 1e+50 best solution, best possible 10621.365 (829.62 seconds)
Cbc0010I After 2000 nodes, 800 on tree, 1e+50 best solution, best possible 10621.365 (834.75 seconds)
Cbc0010I After 2100 nodes, 830 on tree, 1e+50 best solution, best possible 10621.365 (839.27 seconds)
Cbc0010I After 2200 nodes, 869 on tree, 1e+50 best solution, best possible 10621.365 (843.78 seconds)
Cbc0010I After 2300 nodes, 911 on tree, 1e+50 best solution, best possible 10621.365 (848.26 seconds)
Cbc0010I After 2400 nodes, 945 on tree, 1e+50 best solution, best possible 10621.365 (852.53 seconds)
Cbc0010I After 2500 nodes, 979 on tree, 1e+50 best solution, best possible 10621.365 (857.62 seconds)
Cbc0010I After 2600 nodes, 1019 on tree, 1e+50 best solution, best possible 11040.172 (914.92 seconds)
Cbc0010I After 2700 nodes, 1067 on tree, 1e+50 best solution, best possible 11040.172 (920.13 seconds)
Cbc0010I After 2800 nodes, 1103 on tree, 1e+50 best solution, best possible 11040.172 (925.92 seconds)
Cbc0010I After 2900 nodes, 1134 on tree, 1e+50 best solution, best possible 11040.172 (931.33 seconds)
Cbc0010I After 3000 nodes, 1163 on tree, 1e+50 best solution, best possible 11040.172 (936.61 seconds)
Cbc0010I After 3100 nodes, 1188 on tree, 1e+50 best solution, best possible 11040.172 (941.01 seconds)
Cbc0010I After 3200 nodes, 1217 on tree, 1e+50 best solution, best possible 11040.172 (945.43 seconds)
Cbc0010I After 3300 nodes, 1235 on tree, 1e+50 best solution, best possible 11040.172 (949.51 seconds)
Cbc0010I After 3400 nodes, 1261 on tree, 1e+50 best solution, best possible 11040.172 (954.08 seconds)
Cbc0010I After 3500 nodes, 1293 on tree, 1e+50 best solution, best possible 11040.172 (958.40 seconds)
Cbc0010I After 3600 nodes, 1317 on tree, 1e+50 best solution, best possible 11040.172 (963.84 seconds)
Couenne: new cutoff value 2.9882632625e+04 (1632.31 seconds)
Cbc0010I After 3700 nodes, 1363 on tree, 1e+50 best solution, best possible 11081.338 (985.22 seconds)
Cbc0010I After 3800 nodes, 1407 on tree, 1e+50 best solution, best possible 11081.338 (992.53 seconds)
Cbc0010I After 3900 nodes, 1452 on tree, 1e+50 best solution, best possible 11082.902 (1189.48 seconds)
Cbc0010I After 4000 nodes, 1502 on tree, 1e+50 best solution, best possible 11082.902 (1196.11 seconds)
Cbc0010I After 4100 nodes, 1544 on tree, 1e+50 best solution, best possible 11082.902 (1205.82 seconds)
Cbc0010I After 4200 nodes, 1578 on tree, 1e+50 best solution, best possible 11082.902 (1214.22 seconds)
Cbc0010I After 4300 nodes, 1608 on tree, 1e+50 best solution, best possible 11082.902 (1221.28 seconds)
Cbc0010I After 4400 nodes, 1642 on tree, 1e+50 best solution, best possible 11082.902 (1227.47 seconds)
Cbc0010I After 4500 nodes, 1676 on tree, 1e+50 best solution, best possible 11082.902 (1232.97 seconds)
Cbc0010I After 4600 nodes, 1695 on tree, 1e+50 best solution, best possible 11082.902 (1238.02 seconds)
Cbc0010I After 4700 nodes, 1722 on tree, 1e+50 best solution, best possible 11098.796 (1319.07 seconds)
Cbc0010I After 4800 nodes, 1770 on tree, 1e+50 best solution, best possible 11098.796 (1336.79 seconds)
Cbc0010I After 4900 nodes, 1814 on tree, 1e+50 best solution, best possible 11147.476 (1355.60 seconds)
Cbc0010I After 5000 nodes, 1861 on tree, 1e+50 best solution, best possible 11147.476 (1364.56 seconds)
Optimality Based BT: 8 improved bounds
Cbc0010I After 5100 nodes, 1908 on tree, 1e+50 best solution, best possible 11158.842 (1409.06 seconds)
Cbc0010I After 5200 nodes, 1955 on tree, 1e+50 best solution, best possible 11158.842 (1416.16 seconds)
Cbc0010I After 5300 nodes, 1993 on tree, 1e+50 best solution, best possible 11158.842 (1425.18 seconds)
Cbc0010I After 5400 nodes, 2036 on tree, 1e+50 best solution, best possible 11158.842 (1436.16 seconds)
Cbc0010I After 5500 nodes, 2069 on tree, 1e+50 best solution, best possible 11158.842 (1445.15 seconds)
Cbc0010I After 5600 nodes, 2109 on tree, 1e+50 best solution, best possible 11158.842 (1453.74 seconds)
Cbc0010I After 5700 nodes, 2156 on tree, 1e+50 best solution, best possible 11158.842 (1461.43 seconds)
Cbc0010I After 5800 nodes, 2203 on tree, 1e+50 best solution, best possible 11158.842 (1469.89 seconds)
Cbc0010I After 5900 nodes, 2253 on tree, 1e+50 best solution, best possible 11158.842 (1476.87 seconds)
Cbc0010I After 6000 nodes, 2297 on tree, 1e+50 best solution, best possible 11158.842 (1483.95 seconds)
Cbc0010I After 6100 nodes, 2337 on tree, 1e+50 best solution, best possible 11158.842 (1490.78 seconds)
Cbc0010I After 6200 nodes, 2367 on tree, 1e+50 best solution, best possible 11158.842 (1497.47 seconds)
Couenne: new cutoff value 2.9659260680e+04 (2167.25 seconds)
Cbc0010I After 6300 nodes, 2403 on tree, 1e+50 best solution, best possible 11192.968 (1533.15 seconds)
Cbc0010I After 6400 nodes, 2452 on tree, 1e+50 best solution, best possible 11192.968 (1540.32 seconds)
Cbc0010I After 6500 nodes, 2496 on tree, 1e+50 best solution, best possible 11192.968 (1549.74 seconds)
Cbc0010I After 6600 nodes, 2540 on tree, 1e+50 best solution, best possible 11192.968 (1559.51 seconds)
Cbc0010I After 6700 nodes, 2583 on tree, 1e+50 best solution, best possible 11192.968 (1568.06 seconds)
Cbc0010I After 6800 nodes, 2627 on tree, 1e+50 best solution, best possible 11192.968 (1575.54 seconds)
Cbc0010I After 6900 nodes, 2673 on tree, 1e+50 best solution, best possible 11192.968 (1582.14 seconds)
Cbc0010I After 7000 nodes, 2714 on tree, 1e+50 best solution, best possible 11192.968 (1587.76 seconds)
Cbc0010I After 7100 nodes, 2736 on tree, 1e+50 best solution, best possible 11192.968 (1593.25 seconds)
Cbc0010I After 7200 nodes, 2769 on tree, 1e+50 best solution, best possible 11192.968 (1599.91 seconds)
Cbc0010I After 7300 nodes, 2805 on tree, 1e+50 best solution, best possible 11192.968 (1606.57 seconds)
Cbc0010I After 7400 nodes, 2849 on tree, 1e+50 best solution, best possible 11257.096 (1625.73 seconds)
Cbc0010I After 7500 nodes, 2886 on tree, 1e+50 best solution, best possible 11259.26 (1667.21 seconds)
Cbc0010I After 7600 nodes, 2932 on tree, 1e+50 best solution, best possible 11259.26 (1680.65 seconds)
Optimality Based BT: 12 improved bounds
Cbc0010I After 7700 nodes, 2978 on tree, 1e+50 best solution, best possible 11299.108 (1905.06 seconds)
Cbc0010I After 7800 nodes, 3027 on tree, 1e+50 best solution, best possible 11299.108 (1923.93 seconds)
Cbc0010I After 7900 nodes, 3071 on tree, 1e+50 best solution, best possible 11299.108 (1932.26 seconds)
Cbc0010I After 8000 nodes, 3114 on tree, 1e+50 best solution, best possible 11308.99 (1974.90 seconds)
Cbc0010I After 8100 nodes, 3162 on tree, 1e+50 best solution, best possible 11308.99 (1981.02 seconds)
Cbc0010I After 8200 nodes, 3206 on tree, 1e+50 best solution, best possible 11308.99 (1989.65 seconds)
Cbc0010I After 8300 nodes, 3241 on tree, 1e+50 best solution, best possible 11308.99 (1997.41 seconds)
Cbc0010I After 8400 nodes, 3283 on tree, 1e+50 best solution, best possible 11308.99 (2005.06 seconds)
Cbc0010I After 8500 nodes, 3324 on tree, 1e+50 best solution, best possible 11308.99 (2012.49 seconds)
Cbc0010I After 8600 nodes, 3364 on tree, 1e+50 best solution, best possible 11308.99 (2018.45 seconds)
Cbc0010I After 8700 nodes, 3401 on tree, 1e+50 best solution, best possible 11308.99 (2024.23 seconds)
Cbc0010I After 8800 nodes, 3440 on tree, 1e+50 best solution, best possible 11308.99 (2030.19 seconds)
Cbc0010I After 8900 nodes, 3465 on tree, 1e+50 best solution, best possible 11308.99 (2036.51 seconds)
Cbc0010I After 9000 nodes, 3505 on tree, 1e+50 best solution, best possible 11308.99 (2043.54 seconds)
Couenne: new cutoff value 2.8871642749e+04 (2712.17 seconds)
Cbc0010I After 9100 nodes, 3549 on tree, 1e+50 best solution, best possible 11315.632 (2179.39 seconds)
Cbc0010I After 9200 nodes, 3589 on tree, 1e+50 best solution, best possible 11315.632 (2187.61 seconds)
Cbc0010I After 9300 nodes, 3637 on tree, 1e+50 best solution, best possible 11379.36 (2202.49 seconds)
Cbc0010I After 9400 nodes, 3683 on tree, 1e+50 best solution, best possible 11379.36 (2209.35 seconds)
Cbc0010I After 9500 nodes, 3725 on tree, 1e+50 best solution, best possible 11475.183 (2225.12 seconds)
Cbc0010I After 9600 nodes, 3769 on tree, 1e+50 best solution, best possible 11475.183 (2231.56 seconds)
Cbc0010I After 9700 nodes, 3806 on tree, 1e+50 best solution, best possible 11475.183 (2239.20 seconds)
Cbc0010I After 9800 nodes, 3833 on tree, 1e+50 best solution, best possible 11475.183 (2245.60 seconds)
Cbc0010I After 9900 nodes, 3861 on tree, 1e+50 best solution, best possible 11475.183 (2251.06 seconds)
Cbc0010I After 10000 nodes, 3884 on tree, 1e+50 best solution, best possible 11475.183 (2255.85 seconds)
Cbc0010I After 10100 nodes, 3902 on tree, 1e+50 best solution, best possible 11475.183 (2260.62 seconds)
Cbc0010I After 10200 nodes, 3935 on tree, 1e+50 best solution, best possible 11475.183 (2266.56 seconds)
Couenne: new cutoff value 2.6667112288e+04 (2937.2 seconds)
Cbc0010I After 10300 nodes, 3969 on tree, 1e+50 best solution, best possible 11487.526 (2281.99 seconds)
Optimality Based BT: 10 improved bounds
Optimality Based BT: 7 improved bounds
Cbc0010I After 10400 nodes, 4015 on tree, 1e+50 best solution, best possible 11493.153 (2416.52 seconds)
Cbc0010I After 10500 nodes, 4065 on tree, 1e+50 best solution, best possible 11493.153 (2431.36 seconds)
Cbc0010I After 10600 nodes, 4103 on tree, 1e+50 best solution, best possible 11495.971 (2450.36 seconds)
Cbc0010I After 10700 nodes, 4151 on tree, 1e+50 best solution, best possible 11495.971 (2459.61 seconds)
Cbc0010I After 10800 nodes, 4191 on tree, 1e+50 best solution, best possible 11499.713 (2514.08 seconds)
Cbc0010I After 10900 nodes, 4231 on tree, 1e+50 best solution, best possible 11521.435 (2531.25 seconds)
Cbc0010I After 11000 nodes, 4274 on tree, 1e+50 best solution, best possible 11524.015 (2575.35 seconds)
Cbc0010I After 11100 nodes, 4322 on tree, 1e+50 best solution, best possible 11524.015 (2619.33 seconds)
Cbc0010I After 11200 nodes, 4366 on tree, 1e+50 best solution, best possible 11569.58 (2646.14 seconds)
Cbc0010I After 11300 nodes, 4404 on tree, 1e+50 best solution, best possible 11569.58 (2654.77 seconds)
Cbc0010I After 11400 nodes, 4450 on tree, 1e+50 best solution, best possible 11573.328 (2709.24 seconds)
Cbc0010I After 11500 nodes, 4494 on tree, 1e+50 best solution, best possible 11583.671 (2735.28 seconds)
Cbc0010I After 11600 nodes, 4541 on tree, 1e+50 best solution, best possible 11583.671 (2741.38 seconds)
Cbc0010I After 11700 nodes, 4584 on tree, 1e+50 best solution, best possible 11609.254 (2793.25 seconds)
Cbc0010I After 11800 nodes, 4631 on tree, 1e+50 best solution, best possible 11633.08 (2827.89 seconds)
Cbc0010I After 11900 nodes, 4680 on tree, 1e+50 best solution, best possible 11633.08 (2844.28 seconds)
Cbc0010I After 12000 nodes, 4721 on tree, 1e+50 best solution, best possible 11634.259 (2859.21 seconds)
Cbc0010I After 12100 nodes, 4766 on tree, 1e+50 best solution, best possible 11634.259 (2871.48 seconds)
Cbc0010I After 12200 nodes, 4811 on tree, 1e+50 best solution, best possible 11641.934 (2922.99 seconds)
Cbc0010I After 12300 nodes, 4855 on tree, 1e+50 best solution, best possible 11641.934 (2930.15 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible 11641.934), took 1534578 iterations and 12323 nodes (2935.89 seconds)
Cbc0035I Maximum depth 687, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       2901
Linearization cuts added in total:           2901  (separation time: 0.022004s)
Total solve time:                         2936.31s (2936.31s in branch-and-bound)
Lower bound:                              11641.9
Upper bound:                              26667.1  (gap: 129.05%)
Branch-and-bound nodes:                     12323
Stats: /tmp/jl_khhxOt/model.nl 1350 [var]  125 [int] 1700 [con] 1127 [aux]   2901 [root]     2901 [tot] 0.022004 [sep]  2936.31 [time]  2936.31 [bb]         1.164193e+04 [lower]         2.666711e+04 [upper]   12323 [nodes]
Performance of                           FBBT:	    127.028s,    15483 runs. fix:  0.0106188 shrnk:   0.496086 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	     118.92s,       11 runs. fix:          0 shrnk:    1.24326 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1224
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
