solving instance mcnd arcs c25_100_10_V_L_5 3 6 sqrt
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 0.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1      FAILED 26648.238     1772 205.18261
NLP0014I             1      FAILED 26648.238     1772 205.42717   resolve robustness
NLP3006W Warning : continuing branching, while there are unrecovered failures at nodes
Loaded instance "/tmp/jl_PJmxEH/model.nl"
Constraints:         1700
Variables:           1350 (125 integer)
Auxiliaries:          622 (0 integer)

Coin0506I Presolve 2249 (-133) rows, 1399 (-573) columns and 8938 (-716) elements
Clp0006I 0  Obj 3450.0024 Primal inf 48.689478 (24)
Clp0006I 119  Obj 3693.3655 Primal inf 135.89236 (67)
Clp0006I 238  Obj 5003.5242 Primal inf 116296.24 (165)
Clp0006I 357  Obj 8820.4786 Primal inf 63943.973 (196)
Clp0006I 476  Obj 10353.741 Primal inf 478552.55 (329)
Clp0006I 595  Obj 10618.496 Primal inf 614260.37 (424)
Clp0006I 714  Obj 11279.163 Primal inf 502651.13 (420)
Clp0006I 820  Obj 12301.194 Primal inf 193922.51 (418)
Clp0006I 933  Obj 13717.957 Primal inf 385920.74 (435)
Clp0006I 1049  Obj 14659.797 Primal inf 9844594.9 (677)
Clp0006I 1152  Obj 15661.186 Primal inf 92231.042 (446)
Clp0006I 1254  Obj 16447.118 Primal inf 84793.491 (313)
Clp0006I 1356  Obj 16908.344 Primal inf 506791.13 (490)
Clp0006I 1457  Obj 17257.562 Primal inf 219638.74 (475)
Clp0006I 1487  Obj 17335.384
Clp0000I Optimal - objective value 17335.384
Clp0032I Optimal objective 17335.38378 - 1487 iterations time 0.292, Presolve 0.01
Clp0000I Optimal - objective value 17335.384
NLP Heuristic: NLP0014I             3      INFEAS 0.99999962       98 7.1957
no solution.
Clp0000I Optimal - objective value 17335.384
Optimality Based BT: 1 improved bounds
Probing: 2 improved bounds
NLP Heuristic: Couenne: new cutoff value 2.8088242289e+04 (441.231 seconds)
no solution.
Cbc0031I 3 added rows had average density of 2
Cbc0013I At root node, 3 cuts changed objective from 17335.384 to 18388.117 in 2 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 3 row cuts average 2.0 elements, 2 column cuts (2 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (43.57 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 48 on tree, 1e+50 best solution, best possible 19117.597 (634.22 seconds)
Cbc0010I After 200 nodes, 94 on tree, 1e+50 best solution, best possible 19117.597 (651.33 seconds)
Cbc0010I After 300 nodes, 140 on tree, 1e+50 best solution, best possible 19117.597 (661.89 seconds)
Cbc0010I After 400 nodes, 187 on tree, 1e+50 best solution, best possible 19117.597 (675.73 seconds)
Cbc0010I After 500 nodes, 229 on tree, 1e+50 best solution, best possible 19117.597 (708.49 seconds)
Cbc0010I After 600 nodes, 269 on tree, 1e+50 best solution, best possible 19117.597 (721.01 seconds)
Cbc0010I After 700 nodes, 318 on tree, 1e+50 best solution, best possible 19117.597 (733.90 seconds)
Cbc0010I After 800 nodes, 358 on tree, 1e+50 best solution, best possible 19117.597 (743.20 seconds)
Cbc0010I After 900 nodes, 391 on tree, 1e+50 best solution, best possible 19117.597 (752.12 seconds)
Cbc0010I After 1000 nodes, 413 on tree, 1e+50 best solution, best possible 19117.597 (760.62 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1100 nodes, 448 on tree, 1e+50 best solution, best possible 19451.339 (800.79 seconds)
Cbc0010I After 1200 nodes, 494 on tree, 1e+50 best solution, best possible 19451.339 (821.76 seconds)
Cbc0010I After 1300 nodes, 540 on tree, 1e+50 best solution, best possible 19451.339 (830.96 seconds)
Cbc0010I After 1400 nodes, 586 on tree, 1e+50 best solution, best possible 19451.339 (841.86 seconds)
Cbc0010I After 1500 nodes, 626 on tree, 1e+50 best solution, best possible 19451.339 (854.36 seconds)
Cbc0010I After 1600 nodes, 663 on tree, 1e+50 best solution, best possible 19451.339 (865.54 seconds)
Cbc0010I After 1700 nodes, 708 on tree, 1e+50 best solution, best possible 19451.339 (875.36 seconds)
Cbc0010I After 1800 nodes, 755 on tree, 1e+50 best solution, best possible 19451.339 (886.77 seconds)
Cbc0010I After 1900 nodes, 798 on tree, 1e+50 best solution, best possible 19451.339 (893.83 seconds)
Cbc0010I After 2000 nodes, 831 on tree, 1e+50 best solution, best possible 19451.339 (901.14 seconds)
Cbc0010I After 2100 nodes, 874 on tree, 1e+50 best solution, best possible 19505.211 (1006.14 seconds)
Cbc0010I After 2200 nodes, 920 on tree, 1e+50 best solution, best possible 19505.211 (1026.57 seconds)
Cbc0010I After 2300 nodes, 969 on tree, 1e+50 best solution, best possible 19505.211 (1038.81 seconds)
Cbc0010I After 2400 nodes, 1018 on tree, 1e+50 best solution, best possible 19505.211 (1056.33 seconds)
Cbc0010I After 2500 nodes, 1064 on tree, 1e+50 best solution, best possible 19505.211 (1068.45 seconds)
Cbc0010I After 2600 nodes, 1109 on tree, 1e+50 best solution, best possible 19542.183 (1124.07 seconds)
Cbc0010I After 2700 nodes, 1152 on tree, 1e+50 best solution, best possible 19542.183 (1138.76 seconds)
Cbc0010I After 2800 nodes, 1201 on tree, 1e+50 best solution, best possible 19542.183 (1151.16 seconds)
Cbc0010I After 2900 nodes, 1249 on tree, 1e+50 best solution, best possible 19542.183 (1164.23 seconds)
Cbc0010I After 3000 nodes, 1293 on tree, 1e+50 best solution, best possible 19542.183 (1178.25 seconds)
Cbc0010I After 3100 nodes, 1333 on tree, 1e+50 best solution, best possible 19542.183 (1188.44 seconds)
Cbc0010I After 3200 nodes, 1381 on tree, 1e+50 best solution, best possible 19542.183 (1197.45 seconds)
Cbc0010I After 3300 nodes, 1422 on tree, 1e+50 best solution, best possible 19542.183 (1206.64 seconds)
Cbc0010I After 3400 nodes, 1467 on tree, 1e+50 best solution, best possible 19542.183 (1213.93 seconds)
Cbc0010I After 3500 nodes, 1495 on tree, 1e+50 best solution, best possible 19542.183 (1221.28 seconds)
Cbc0010I After 3600 nodes, 1540 on tree, 1e+50 best solution, best possible 19592.183 (1231.34 seconds)
Cbc0010I After 3700 nodes, 1583 on tree, 1e+50 best solution, best possible 19592.183 (1260.08 seconds)
Cbc0010I After 3800 nodes, 1630 on tree, 1e+50 best solution, best possible 19592.183 (1280.58 seconds)
Cbc0010I After 3900 nodes, 1677 on tree, 1e+50 best solution, best possible 19592.183 (1298.82 seconds)
Cbc0010I After 4000 nodes, 1725 on tree, 1e+50 best solution, best possible 19592.183 (1315.66 seconds)
Cbc0010I After 4100 nodes, 1771 on tree, 1e+50 best solution, best possible 19724.72 (1384.99 seconds)
Cbc0010I After 4200 nodes, 1818 on tree, 1e+50 best solution, best possible 19724.72 (1408.01 seconds)
Cbc0010I After 4300 nodes, 1864 on tree, 1e+50 best solution, best possible 19724.72 (1421.04 seconds)
Cbc0010I After 4400 nodes, 1911 on tree, 1e+50 best solution, best possible 19724.72 (1435.32 seconds)
Cbc0010I After 4500 nodes, 1956 on tree, 1e+50 best solution, best possible 19724.72 (1457.74 seconds)
Cbc0010I After 4600 nodes, 1998 on tree, 1e+50 best solution, best possible 19724.72 (1471.06 seconds)
Cbc0010I After 4700 nodes, 2048 on tree, 1e+50 best solution, best possible 19724.72 (1484.68 seconds)
Cbc0010I After 4800 nodes, 2088 on tree, 1e+50 best solution, best possible 19724.72 (1494.61 seconds)
Cbc0010I After 4900 nodes, 2127 on tree, 1e+50 best solution, best possible 19724.72 (1503.03 seconds)
Cbc0010I After 5000 nodes, 2167 on tree, 1e+50 best solution, best possible 19724.72 (1509.92 seconds)
Cbc0010I After 5100 nodes, 2191 on tree, 1e+50 best solution, best possible 19724.72 (1516.00 seconds)
Cbc0010I After 5200 nodes, 2235 on tree, 1e+50 best solution, best possible 19726.819 (1549.04 seconds)
Cbc0010I After 5300 nodes, 2280 on tree, 1e+50 best solution, best possible 19726.819 (1560.06 seconds)
Cbc0010I After 5400 nodes, 2323 on tree, 1e+50 best solution, best possible 19750.425 (1677.24 seconds)
Cbc0010I After 5500 nodes, 2367 on tree, 1e+50 best solution, best possible 19750.425 (1697.00 seconds)
Cbc0010I After 5600 nodes, 2411 on tree, 1e+50 best solution, best possible 19750.425 (1706.77 seconds)
Cbc0010I After 5700 nodes, 2459 on tree, 1e+50 best solution, best possible 19750.425 (1717.52 seconds)
Cbc0010I After 5800 nodes, 2502 on tree, 1e+50 best solution, best possible 19750.425 (1750.99 seconds)
Cbc0010I After 5900 nodes, 2540 on tree, 1e+50 best solution, best possible 19750.425 (1759.24 seconds)
Cbc0010I After 6000 nodes, 2580 on tree, 1e+50 best solution, best possible 19754.689 (1768.29 seconds)
Error evaluating "var =" definition -1: can't evaluate pow'(0,0.5).
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1224
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
