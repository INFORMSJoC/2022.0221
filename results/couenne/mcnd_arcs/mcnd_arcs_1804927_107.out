solving instance mcnd arcs c25_100_30_V_T_5 3 6 square
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 3.6 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 89391.946       79 48.572217
Loaded instance "/tmp/jl_wNOdfW/model.nl"
Constraints:         4200
Variables:           3350 (125 integer)
Auxiliaries:         1027 (3 integer)

Coin0506I Presolve 4408 (-181) rows, 3257 (-1120) columns and 21923 (-1621) elements
Clp0006I 0  Obj 1498.1853 Primal inf 672.91066 (68)
Clp0006I 163  Obj 2111.46 Primal inf 5721.6022 (215)
Clp0006I 326  Obj 2886.139 Primal inf 112895.83 (325)
Clp0006I 489  Obj 7913.6401 Primal inf 14911.095 (338)
Clp0006I 652  Obj 10135.535 Primal inf 371965.96 (510)
Clp0006I 815  Obj 10650.38 Primal inf 435616.35 (632)
Clp0006I 978  Obj 14690.304 Primal inf 259831.91 (534)
Clp0006I 1141  Obj 18826.62 Primal inf 145596.24 (582)
Clp0006I 1304  Obj 22175.9 Primal inf 122636.27 (943)
Clp0006I 1467  Obj 28003.58 Primal inf 187376.59 (918)
Clp0006I 1630  Obj 33865.486 Primal inf 104377.69 (763)
Clp0006I 1793  Obj 42275.654 Primal inf 28893.691 (956)
Clp0006I 1956  Obj 46420.433 Primal inf 6625.2465 (671)
Clp0006I 2119  Obj 50572.531 Primal inf 17856.442 (860)
Clp0006I 2282  Obj 52749.094 Primal inf 576.59799 (266)
Clp0006I 2445  Obj 53360.426 Primal inf 45.917533 (16)
Clp0006I 2455  Obj 53372.745
Clp0000I Optimal - objective value 53372.745
Clp0032I Optimal objective 53372.7448 - 2455 iterations time 0.642, Presolve 0.02
Clp0000I Optimal - objective value 53372.745
NLP Heuristic: time limit reached.
Clp0000I Optimal - objective value 53372.745
Optimality Based BT: 0 improved bounds
Probing: 0 improved bounds
NLP Heuristic: no solution.
Cbc0031I 127 added rows had average density of 2
Cbc0013I At root node, 127 cuts changed objective from 53372.745 to 89391.841 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 1662 row cuts average 2.0 elements, 158 column cuts (217 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (188.75 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 50 on tree, 1e+50 best solution, best possible 89688.701 (1663.18 seconds)
Cbc0010I After 200 nodes, 100 on tree, 1e+50 best solution, best possible 89688.701 (1678.91 seconds)
Couenne: new cutoff value 9.1126143222e+04 (1744.06 seconds)
Cbc0004I Integer solution of 91126.143 found after 55451 iterations and 250 nodes (1685.22 seconds)
Cbc0010I After 300 nodes, 43 on tree, 91126.143 best solution, best possible 89881.579 (1697.20 seconds)
Cbc0010I After 400 nodes, 58 on tree, 91126.143 best solution, best possible 89986.975 (1746.29 seconds)
Cbc0010I After 500 nodes, 63 on tree, 91126.143 best solution, best possible 90157.461 (1766.43 seconds)
Cbc0010I After 600 nodes, 68 on tree, 91126.143 best solution, best possible 90317.058 (1876.07 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 700 nodes, 75 on tree, 91126.143 best solution, best possible 90376.099 (1930.49 seconds)
Cbc0010I After 800 nodes, 75 on tree, 91126.143 best solution, best possible 90529.001 (2103.77 seconds)
Cbc0010I After 900 nodes, 76 on tree, 91126.143 best solution, best possible 90549.264 (2124.38 seconds)
Cbc0010I After 1000 nodes, 75 on tree, 91126.143 best solution, best possible 90627.841 (2184.82 seconds)
Cbc0010I After 1100 nodes, 72 on tree, 91126.143 best solution, best possible 90706.403 (2203.53 seconds)
Cbc0010I After 1200 nodes, 75 on tree, 91126.143 best solution, best possible 90732.786 (2223.40 seconds)
Cbc0010I After 1300 nodes, 71 on tree, 91126.143 best solution, best possible 90808.168 (2241.03 seconds)
Cbc0010I After 1400 nodes, 68 on tree, 91126.143 best solution, best possible 90833.809 (2260.14 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1500 nodes, 64 on tree, 91126.143 best solution, best possible 90886.714 (2455.12 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 1600 nodes, 58 on tree, 91126.143 best solution, best possible 90936.307 (2909.73 seconds)
Cbc0010I After 1700 nodes, 47 on tree, 91126.143 best solution, best possible 91013.091 (2931.69 seconds)
Cbc0010I After 1800 nodes, 17 on tree, 91126.143 best solution, best possible 91098.978 (2949.41 seconds)
Cbc0001I Search completed - best objective 91126.14322153298, took 208671 iterations and 1836 nodes (2952.87 seconds)
Cbc0035I Maximum depth 125, 418 variables fixed on reduced cost

 	"Finished"

Linearization cuts added at root node:       4589
Linearization cuts added in total:           4589  (separation time: 0.061914s)
Total solve time:                          2953.7s (2953.7s in branch-and-bound)
Lower bound:                              91126.1
Upper bound:                              91126.1  (gap: 0.00%)
Branch-and-bound nodes:                      1836
Stats: /tmp/jl_wNOdfW/model.nl 3350 [var]  125 [int] 4200 [con] 1027 [aux]   4589 [root]     4589 [tot] 0.061914 [sep]   2953.7 [time]  2953.71 [bb]         9.112614e+04 [lower]         9.112614e+04 [upper]    1836 [nodes]
Performance of                           FBBT:	    42.3814s,     1568 runs. fix:   0.428396 shrnk:   0.979374 ubd:          0 2ubd:         29 infeas:          0
Performance of                           OBBT:	    62.4193s,        9 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:         29 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
