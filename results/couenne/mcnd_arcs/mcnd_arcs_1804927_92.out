solving instance mcnd arcs c25_100_30_F_T_5 3 6 cubic
Couenne 0.5.8 -- an Open-Source solver for Mixed Integer Nonlinear Optimization
Mailing list: couenne@list.coin-or.org
Instructions: http://www.coin-or.org/Couenne
couenne: 
ANALYSIS TEST: Reformulating problem: 4.2 seconds
NLP0012I 
              Num      Status      Obj             It       time                 Location
NLP0014I             1         OPT 170052.96      169 135.52198
NLP0014I             2      INFEAS 37.999939       76 21.412196
Loaded instance "/tmp/jl_i4W6wO/model.nl"
Constraints:         4200
Variables:           3350 (125 integer)
Auxiliaries:         1127 (6 integer)

Coin0506I Presolve 4918 (-90) rows, 3448 (-1029) columns and 22994 (-1678) elements
Clp0006I 0  Obj -1556759.4 Primal inf 4286577.6 (161)
Clp0006I 173  Obj -387995.05 Primal inf 18174.887 (136)
Clp0006I 346  Obj -296321.98 Primal inf 16416.28 (226)
Clp0006I 519  Obj -241262.5 Primal inf 2099.659 (175)
Clp0006I 692  Obj -231036.92 Primal inf 2793.4781 (252)
Clp0006I 865  Obj -230552.2 Primal inf 16668.126 (335)
Clp0006I 1038  Obj -230552.2 Primal inf 26085.475 (393)
Clp0006I 1211  Obj -230552.2 Primal inf 46822.834 (462)
Clp0006I 1382  Obj -230552.2 Primal inf 55862.205 (568)
Clp0006I 1545  Obj -230020.88 Primal inf 75073.696 (526)
Clp0006I 1718  Obj -230020.88 Primal inf 98119.362 (546)
Clp0006I 1883  Obj -230020.87 Primal inf 62633.839 (564)
Clp0006I 2056  Obj -225984.54 Primal inf 20593.069 (581)
Clp0006I 2229  Obj -220145.41 Primal inf 32660.167 (650)
Clp0006I 2402  Obj -214868.65 Primal inf 14518.666 (584)
Clp0006I 2575  Obj -212000.01 Primal inf 12967.1 (544)
Clp0006I 2748  Obj -208840.61 Primal inf 21015.556 (588)
Clp0006I 2921  Obj -204813.37 Primal inf 12289.486 (578)
Clp0006I 3094  Obj -202524.81 Primal inf 102336.61 (813)
Clp0006I 3267  Obj -200114.55 Primal inf 12140.808 (543)
Clp0006I 3440  Obj -198824.73 Primal inf 5009.933 (330)
Clp0006I 3613  Obj -197461.18 Primal inf 3057.8717 (267)
Clp0006I 3786  Obj -196944.74 Primal inf 10346.127 (564)
Clp0006I 3899  Obj -196865.46
Clp0000I Optimal - objective value -196865.46
Clp0032I Optimal objective -196865.4636 - 3899 iterations time 1.252, Presolve 0.02
Clp0000I Optimal - objective value -196865.46
NLP Heuristic: NLP0014I             3      INFEAS 18.340856      212 55.830702
no solution.
Clp0000I Optimal - objective value -196865.46
Optimality Based BT: 0 improved bounds
Probing: 1 improved bounds
NLP Heuristic: time limit reached.
Cbc0031I 187 added rows had average density of 2
Cbc0013I At root node, 187 cuts changed objective from -196865.46 to -185241.2 in 20 passes
Cbc0014I Cut generator 0 (Couenne convexifier cuts) - 2028 row cuts average 2.0 elements, 128 column cuts (242 active)
Cbc0010I After 0 nodes, 1 on tree, 1e+50 best solution, best possible -1.7976931e+308 (279.31 seconds)
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Optimality Based BT: 0 improved bounds
Cbc0010I After 100 nodes, 47 on tree, 1e+50 best solution, best possible -178003.81 (1725.67 seconds)
Cbc0010I After 200 nodes, 90 on tree, 1e+50 best solution, best possible -178003.81 (1752.45 seconds)
Cbc0010I After 300 nodes, 136 on tree, 1e+50 best solution, best possible -178003.81 (1774.63 seconds)
Cbc0010I After 400 nodes, 186 on tree, 1e+50 best solution, best possible -178003.81 (1796.08 seconds)
Cbc0010I After 500 nodes, 236 on tree, 1e+50 best solution, best possible -178003.81 (1817.02 seconds)
Cbc0010I After 600 nodes, 286 on tree, 1e+50 best solution, best possible -178003.81 (1836.01 seconds)
Cbc0010I After 700 nodes, 336 on tree, 1e+50 best solution, best possible -178003.81 (1853.31 seconds)
Cbc0010I After 800 nodes, 386 on tree, 1e+50 best solution, best possible -178003.81 (1869.65 seconds)
Cbc0010I After 900 nodes, 436 on tree, 1e+50 best solution, best possible -178003.81 (1884.83 seconds)
Cbc0010I After 1000 nodes, 486 on tree, 1e+50 best solution, best possible -178003.81 (1897.40 seconds)
Cbc0010I After 1100 nodes, 536 on tree, 1e+50 best solution, best possible -178003.81 (1908.43 seconds)
Cbc0010I After 1200 nodes, 585 on tree, 1e+50 best solution, best possible -178003.81 (1919.07 seconds)
Cbc0010I After 1300 nodes, 635 on tree, 1e+50 best solution, best possible -178003.81 (1929.58 seconds)
Cbc0010I After 1400 nodes, 685 on tree, 1e+50 best solution, best possible -178003.81 (1939.78 seconds)
Cbc0010I After 1500 nodes, 734 on tree, 1e+50 best solution, best possible -178003.81 (1950.92 seconds)
Cbc0010I After 1600 nodes, 784 on tree, 1e+50 best solution, best possible -178003.81 (1962.31 seconds)
Cbc0010I After 1700 nodes, 834 on tree, 1e+50 best solution, best possible -178003.81 (1972.38 seconds)
Cbc0010I After 1800 nodes, 884 on tree, 1e+50 best solution, best possible -178003.81 (1982.40 seconds)
Cbc0010I After 1900 nodes, 934 on tree, 1e+50 best solution, best possible -178003.81 (1993.03 seconds)
Cbc0010I After 2000 nodes, 984 on tree, 1e+50 best solution, best possible -178003.81 (2003.50 seconds)
Couenne: new cutoff value 2.2714107462e+05 (2184.4 seconds)
Cbc0010I After 2100 nodes, 1034 on tree, 1e+50 best solution, best possible -178003.81 (2014.72 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 2200 nodes, 1079 on tree, 1e+50 best solution, best possible -177840.63 (2455.85 seconds)
Cbc0010I After 2300 nodes, 1123 on tree, 1e+50 best solution, best possible -177840.63 (2490.43 seconds)
Cbc0010I After 2400 nodes, 1173 on tree, 1e+50 best solution, best possible -177840.63 (2515.13 seconds)
Cbc0010I After 2500 nodes, 1222 on tree, 1e+50 best solution, best possible -177840.63 (2537.38 seconds)
Cbc0010I After 2600 nodes, 1272 on tree, 1e+50 best solution, best possible -177840.63 (2559.33 seconds)
Cbc0010I After 2700 nodes, 1322 on tree, 1e+50 best solution, best possible -177840.63 (2579.36 seconds)
Cbc0010I After 2800 nodes, 1372 on tree, 1e+50 best solution, best possible -177840.63 (2601.44 seconds)
Cbc0010I After 2900 nodes, 1422 on tree, 1e+50 best solution, best possible -177840.63 (2624.30 seconds)
Cbc0010I After 3000 nodes, 1472 on tree, 1e+50 best solution, best possible -177840.63 (2644.61 seconds)
Cbc0010I After 3100 nodes, 1522 on tree, 1e+50 best solution, best possible -177840.63 (2663.70 seconds)
Cbc0010I After 3200 nodes, 1572 on tree, 1e+50 best solution, best possible -177840.63 (2679.94 seconds)
Cbc0010I After 3300 nodes, 1622 on tree, 1e+50 best solution, best possible -177840.63 (2694.65 seconds)
Cbc0010I After 3400 nodes, 1672 on tree, 1e+50 best solution, best possible -177840.63 (2707.63 seconds)
Cbc0010I After 3500 nodes, 1722 on tree, 1e+50 best solution, best possible -177840.63 (2720.52 seconds)
Cbc0010I After 3600 nodes, 1772 on tree, 1e+50 best solution, best possible -177840.63 (2733.41 seconds)
Cbc0010I After 3700 nodes, 1822 on tree, 1e+50 best solution, best possible -177840.63 (2746.28 seconds)
Cbc0010I After 3800 nodes, 1872 on tree, 1e+50 best solution, best possible -177840.63 (2759.56 seconds)
Cbc0010I After 3900 nodes, 1922 on tree, 1e+50 best solution, best possible -177840.63 (2772.70 seconds)
Cbc0010I After 4000 nodes, 1972 on tree, 1e+50 best solution, best possible -177840.63 (2785.72 seconds)
Cbc0010I After 4100 nodes, 2022 on tree, 1e+50 best solution, best possible -177840.63 (2798.77 seconds)
Cbc0010I After 4200 nodes, 2072 on tree, 1e+50 best solution, best possible -177840.63 (2813.23 seconds)
Couenne: new cutoff value 2.2579983020e+05 (2992.98 seconds)
Optimality Based BT: 0 improved bounds
Cbc0010I After 4300 nodes, 2120 on tree, 1e+50 best solution, best possible -177185.31 (2839.69 seconds)
Cbc0010I After 4400 nodes, 2168 on tree, 1e+50 best solution, best possible -177185.31 (2931.14 seconds)
Cbc0010I After 4500 nodes, 2211 on tree, 1e+50 best solution, best possible -177185.31 (2955.35 seconds)
Cbc0010I After 4600 nodes, 2261 on tree, 1e+50 best solution, best possible -177185.31 (2979.05 seconds)
Cbc0010I After 4700 nodes, 2311 on tree, 1e+50 best solution, best possible -177185.31 (3001.24 seconds)
Cbc0010I After 4800 nodes, 2361 on tree, 1e+50 best solution, best possible -177185.31 (3024.35 seconds)
Cbc0010I After 4900 nodes, 2410 on tree, 1e+50 best solution, best possible -177185.31 (3048.40 seconds)
Cbc0010I After 5000 nodes, 2457 on tree, 1e+50 best solution, best possible -176297.56 (3122.28 seconds)
Cbc0010I After 5100 nodes, 2504 on tree, 1e+50 best solution, best possible -176297.56 (3167.67 seconds)
Cbc0010I After 5200 nodes, 2543 on tree, 1e+50 best solution, best possible -176297.56 (3187.35 seconds)
Cbc0010I After 5300 nodes, 2592 on tree, 1e+50 best solution, best possible -176297.56 (3209.83 seconds)
Cbc0010I After 5400 nodes, 2641 on tree, 1e+50 best solution, best possible -176297.56 (3233.12 seconds)
Cbc0010I After 5500 nodes, 2691 on tree, 1e+50 best solution, best possible -176297.56 (3256.39 seconds)
Cbc0010I After 5600 nodes, 2741 on tree, 1e+50 best solution, best possible -176297.56 (3281.37 seconds)
Cbc0010I After 5700 nodes, 2791 on tree, 1e+50 best solution, best possible -176297.56 (3313.57 seconds)
Cbc0010I After 5800 nodes, 2835 on tree, 1e+50 best solution, best possible -175951.45 (3349.99 seconds)
Cbc0010I After 5900 nodes, 2883 on tree, 1e+50 best solution, best possible -175951.45 (3383.14 seconds)
Cbc0010I After 6000 nodes, 2925 on tree, 1e+50 best solution, best possible -175951.45 (3409.56 seconds)
Cbc0020I Exiting on maximum time
Cbc0005I Partial search - best objective 1e+50 (best possible -175951.45), took 1072424 iterations and 6054 nodes (3431.86 seconds)
Cbc0035I Maximum depth 1088, 0 variables fixed on reduced cost

 	"Not finished"

Linearization cuts added at root node:       5008
Linearization cuts added in total:           5008  (separation time: 0.064683s)
Total solve time:                         3433.12s (3433.12s in branch-and-bound)
Lower bound:                              -175951
Upper bound:                               225800  (gap: 228.33%)
Branch-and-bound nodes:                      6054
Stats: /tmp/jl_i4W6wO/model.nl 3350 [var]  125 [int] 4200 [con] 1127 [aux]   5008 [root]     5008 [tot] 0.064683 [sep]  3433.12 [time]  3433.13 [bb]        -1.759514e+05 [lower]         2.257998e+05 [upper]    6054 [nodes]
Performance of                           FBBT:	    219.273s,     9331 runs. fix:   0.368778 shrnk:   0.105508 ubd:          0 2ubd:          0 infeas:          0
Performance of                           OBBT:	    38.8491s,        6 runs. fix:          0 shrnk:          0 ubd:          0 2ubd:          0 infeas:          0
ERROR: LoadError: MathOptInterface.GetAttributeNotAllowed{MathOptInterface.ObjectiveBound}: Getting attribute MathOptInterface.ObjectiveBound() cannot be performed: AmplNLWriter.Optimizer does not support getting the attribute MathOptInterface.ObjectiveBound(). You may want to use a `CachingOptimizer` in `AUTOMATIC` mode or you may need to call `reset_optimizer` before doing this operation if the `CachingOptimizer` is in `MANUAL` mode.
Stacktrace:
  [1] get_fallback(model::AmplNLWriter.Optimizer, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:409
  [2] get(::AmplNLWriter.Optimizer, ::MathOptInterface.ObjectiveBound)
    @ MathOptInterface ~/.julia/packages/MathOptInterface/gLl4d/src/attributes.jl:390
  [3] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [4] get(model::MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [5] get(b::MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Bridges ~/.julia/packages/MathOptInterface/gLl4d/src/Bridges/bridge_optimizer.jl:889
  [6] _get_model_attribute(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:865
  [7] get(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, attr::MathOptInterface.ObjectiveBound)
    @ MathOptInterface.Utilities ~/.julia/packages/MathOptInterface/gLl4d/src/Utilities/cachingoptimizer.jl:900
  [8] _moi_get_result(model::MathOptInterface.Utilities.CachingOptimizer{MathOptInterface.Bridges.LazyBridgeOptimizer{MathOptInterface.Utilities.CachingOptimizer{AmplNLWriter.Optimizer, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}}, MathOptInterface.Utilities.UniversalFallback{MathOptInterface.Utilities.Model{Float64}}}, args::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1053
  [9] get(model::JuMP.Model, attr::MathOptInterface.ObjectiveBound)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/optimizer_interface.jl:1073
 [10] objective_bound(model::JuMP.Model)
    @ JuMP ~/.julia/packages/JuMP/i68GU/src/objective.jl:78
 [11] nl_mcnd(ptype::String, graph::String, commodities::String, nodes::String, incr::Int64, cost::Symbol, solver::AmplNLWriter.Optimizer, solver_params::Vector{Any}; solve::Bool, write_nl::Bool)
    @ IterativePWLB ~/git/ipwlb/code/sources/IterativePWLB/src/nlsolver.jl:1192
 [12] top-level scope
    @ ~/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
in expression starting at /home/ccontard/git/ipwlb/code/sources/IterativePWLB/test/couenne/mcnd_arcs/script.jl:18
