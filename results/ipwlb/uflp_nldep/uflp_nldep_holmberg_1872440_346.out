solving instance uflp nldep holmberg 35 sincos
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3540.1766439
reading holmberg data file ../../../../../instances/uflp/holmberg/p35
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
(C * ((7.5 * sin((pi * ((x * 100) / Q - 10.0)) / 40.0) - 15.0 * cos((pi * ((x * 100) / Q - 10.0)) / 80.0)) + 19.5)) / 38.66
translating piece by -1.8474723901817924e-6
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 60.823356100000005, #pieces = 180
cutoff = 1.0e20
Iteration 2	LB = 8410.810165419689	UB = 8431.847269319536	CPU = 74.166205024, #pieces = 200
Iteration 3	LB = 8419.067748900243	UB = 8431.292821781837	CPU = 74.732476078, #pieces = 217
Iteration 4	LB = 8424.701495703035	UB = 8431.292821781837	CPU = 75.880387651, #pieces = 244
Iteration 5	LB = 8427.874073184266	UB = 8430.676977031644	CPU = 76.476618089, #pieces = 258
Iteration 6	LB = 8429.39694150426	UB = 8430.313299998928	CPU = 77.315778273, #pieces = 279
Iteration 7	LB = 8429.753186403395	UB = 8430.108848649734	CPU = 78.308498286, #pieces = 300
Iteration 8	LB = 8429.860931457799	UB = 8430.108848649734	CPU = 79.29582143600001, #pieces = 306
Iteration 9	LB = 8429.939621478243	UB = 8430.108848649734	CPU = 80.407413453, #pieces = 320
Iteration 10	LB = 8429.977842849243	UB = 8430.102102836767	CPU = 81.35554968800001, #pieces = 324
Iteration 11	LB = 8430.015954553764	UB = 8430.102102836767	CPU = 82.49175356800001, #pieces = 333
Iteration 12	LB = 8430.038830276104	UB = 8430.102102836767	CPU = 83.51752510200001, #pieces = 334
Iteration 13	LB = 8430.063897126875	UB = 8430.102102836767	CPU = 85.915305114, #pieces = 477
Iteration 14	LB = 8430.069489623682	UB = 8430.097706635343	CPU = 87.688902103, #pieces = 482
Iteration 15	LB = 8430.075778955154	UB = 8430.086396077095	CPU = 89.467249139, #pieces = 501
WRITING LOG...
(8410.810165419689, 8431.847269319536, 7896.362298283924, 7896.362298283924, 3.928607717815538, 0.24949578933188007, 180, 1, 0.22599026000000003, 61.071158558)
(8419.067748900243, 8431.292821781837, 7897.46695138818, 7897.46695138818, 2.290086254639406, 0.14499642154535816, 200, 2, 0.621079783, 74.56148388700001)
(8424.701495703035, 8431.292821781837, 7898.338155923564, 7897.46695138818, 1.2455722914855445, 0.07817693227038254, 217, 3, 1.008984036, 75.12055997200001)
(8427.874073184266, 8430.676977031644, 7898.316281183517, 7898.316281183517, 0.5265046554408741, 0.033246486077144116, 244, 4, 1.504659551, 76.37624755)
(8429.39694150426, 8430.313299998928, 7897.358089569697, 7897.358089569697, 0.1719391192237514, 0.010869803553673719, 258, 5, 2.1777955430000002, 77.14992115400001)
(8429.753186403395, 8430.108848649734, 7896.300884142647, 7896.300884142647, 0.06662737725669055, 0.004218952005529139, 279, 6, 2.9605465100000004, 78.098707737)
(8429.860931457799, 8430.108848649734, 7897.411540760829, 7896.300884142647, 0.06939020513647315, 0.0029408539840456763, 300, 7, 3.8818944880000004, 79.230017718)
(8429.939621478243, 8430.108848649734, 7896.300884142647, 7896.300884142647, 0.03170188208923876, 0.0020074138368700602, 306, 8, 4.840165032000001, 80.254326911)
(8429.977842849243, 8430.102102836767, 7896.0, 7896.0, 0.0232652121877214, 0.0014740033514213514, 320, 9, 5.751993066000001, 81.319418056)
(8430.015954553764, 8430.102102836767, 7896.051358279529, 7896.0, 0.017572051828560645, 0.0010219126880247546, 324, 10, 6.745872419000001, 82.349635944)
(8430.038830276104, 8430.102102836767, 7896.05135827953, 7896.0, 0.013288677469052119, 0.0007505550928213492, 333, 11, 7.740283886000001, 83.486352384)
(8430.063897126875, 8430.102102836767, 7896.05135827953, 7896.0, 0.008595024334468874, 0.0004532057788413388, 334, 12, 8.733103195000002, 84.510536582)
(8430.069489623682, 8430.097706635343, 7896.189987379607, 7896.189987379607, 0.0052849978831560115, 0.0003347174925204306, 477, 13, 10.439924766000003, 87.622343083)
(8430.075778955154, 8430.086396077095, 7895.999999999996, 7895.999999999996, 0.001987903458935893, 0.0001259432162671942, 482, 14, 12.001137619000003, 89.250300017)
(8430.08261463907, 8430.085326338634, 7896.0, 7896.0, 0.000507727778799928, 3.2166929032653626e-5, 501, 15, 13.736186428000003, 91.202481781)
