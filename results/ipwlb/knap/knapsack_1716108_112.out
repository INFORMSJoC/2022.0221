solving instance knapsack 20 2 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3586.809311357
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 14.190688643000001, #pieces = 80
Iteration 2	LB = -498.6256974856055	UB = -453.30973446526684	CPU = 14.33495263, #pieces = 81
Iteration 3	LB = -457.991254147589	UB = -453.30973446526684	CPU = 14.522166836, #pieces = 93
Iteration 4	LB = -455.4270903810645	UB = -453.5980675085479	CPU = 14.616030346, #pieces = 103
Iteration 5	LB = -454.2819090300725	UB = -453.7777381532049	CPU = 14.685260009, #pieces = 108
Iteration 6	LB = -453.95675725172765	UB = -453.7777381532049	CPU = 14.751805618, #pieces = 119
Iteration 7	LB = -453.8737090340137	UB = -453.8273194973802	CPU = 14.922723791000001, #pieces = 143
Iteration 8	LB = -453.85760264751434	UB = -453.8273194973802	CPU = 14.953480099, #pieces = 146
Iteration 9	LB = -453.84438263155033	UB = -453.8273194973802	CPU = 15.281950093, #pieces = 190
Iteration 10	LB = -453.83802770699816	UB = -453.82914996504985	CPU = 15.414007584, #pieces = 200
Iteration 11	LB = -453.83460774748863	UB = -453.83065721455495	CPU = 15.600261235000001, #pieces = 219
Iteration 12	LB = -453.83294466177944	UB = -453.83065721455495	CPU = 15.687665292, #pieces = 224
Iteration 13	LB = -453.8322755417967	UB = -453.83065721455495	CPU = 15.831878081000001, #pieces = 233
Iteration 14	LB = -453.8317558583644	UB = -453.83065721455495	CPU = 15.894542219000002, #pieces = 235
Iteration 15	LB = -453.8315931591761	UB = -453.83065721455495	CPU = 16.017833504000002, #pieces = 245
Iteration 16	LB = -453.83133075889555	UB = -453.83065721455495	CPU = 16.071604712000003, #pieces = 247
Iteration 17	LB = -453.8312464637629	UB = -453.83065721455495	CPU = 16.165310118, #pieces = 255
Iteration 18	LB = -453.83118469655653	UB = -453.83065721455495	CPU = 16.23257491, #pieces = 256
Iteration 19	LB = -453.8311119255531	UB = -453.83065721455495	CPU = 16.324842571, #pieces = 263
WRITING LOG...
(-498.6256974856055, -453.30973446526684, 0.0, 0.0, 9.996688704202272, 9.996688704202272, 80, 1, 0.074129518, 14.271864971000001)
(-457.991254147589, -453.30973446526684, 0.0, 0.0, 1.3962555822178457, 1.0327419259691364, 81, 2, 0.096112497, 14.357027507000002)
(-455.4270903810645, -453.5980675085479, 0.0, 0.0, 0.40322545520591785, 0.40322545520591785, 93, 3, 0.106390336, 14.532547358)
(-454.2819090300725, -453.7777381532049, 0.0, 0.0, 0.11110524701354381, 0.11110524701354381, 103, 4, 0.113221299, 14.622971269)
(-453.95675725172765, -453.7777381532049, 0.0, 0.0, 0.03945083318792462, 0.03945083318792462, 108, 5, 0.120034269, 14.692149784000001)
(-453.8737090340137, -453.8273194973802, 0.0, 0.0, 0.010221847526695691, 0.010221847526695691, 119, 6, 0.133844275, 14.765708534000002)
(-453.85760264751434, -453.8273194973802, 0.0, 0.0, 0.006672835422885502, 0.006672835422885502, 143, 7, 0.147692544, 14.936665906000002)
(-453.84438263155033, -453.8273194973802, 0.0, 0.0, 0.003913449459749245, 0.003759829661431877, 146, 8, 0.16262921000000002, 14.968507543000001)
(-453.83802770699816, -453.82914996504985, 0.0, 0.0, 0.001956185923490041, 0.001956185923490041, 190, 9, 0.19056808200000003, 15.309976345)
(-453.83460774748863, -453.83065721455495, 0.0, 0.0, 0.0008704861319711418, 0.0008704861319711418, 200, 10, 0.22527068900000002, 15.448797838)
(-453.83294466177944, -453.83065721455495, 0.0, 0.0, 0.0005040310054258732, 0.0005040310054258732, 219, 11, 0.284360804, 15.659440736)
(-453.8322755417967, -453.83065721455495, 0.0, 0.0, 0.0004095110915251413, 0.00035659275459809547, 224, 12, 0.336345057, 15.739739687)
(-453.8317558583644, -453.83065721455495, 0.0, 0.0, 0.0029956594533721856, 0.00024208232563460632, 233, 13, 0.386677062, 15.882294155)
(-453.8315931591761, -453.83065721455495, 0.0, 0.0, 0.00020623212785522317, 0.00020623212784269787, 235, 14, 0.451778436, 15.959752964000002)
(-453.83133075889555, -453.83065721455495, 0.0, 0.0, 0.00018913827647868797, 0.00014841314263210878, 245, 15, 0.493580207, 16.059725685)
(-453.8312464637629, -453.83065721455495, 0.0, 0.0, 0.00012983900462694095, 0.00012983900461441568, 247, 16, 0.537162083, 16.115272865)
(-453.83118469655653, -453.83065721455495, 0.0, 0.0, 0.0006957352380036494, 0.00011622881645425225, 255, 17, 0.596028863, 16.224270967000002)
(-453.8311119255531, -453.83065721455495, 0.0, 0.0, 0.00010019398005121753, 0.00010019398005121753, 256, 18, 0.649089303, 16.285727688)
(-453.831082425085, -453.8306664512805, 0.0, 0.0, 9.165837288798714e-5, 9.165837288798714e-5, 263, 19, 0.689931828, 16.365776901)
