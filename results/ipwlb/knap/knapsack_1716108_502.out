solving instance knapsack 500 1 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3236.052952761
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 364.947047239, #pieces = 2000
Iteration 2	LB = -18430.4227152189	UB = -16755.179190472267	CPU = 366.152996529, #pieces = 2006
Iteration 3	LB = -16901.164148054024	UB = -16755.179190472267	CPU = 366.73237114700004, #pieces = 2053
Iteration 4	LB = -16868.16274097015	UB = -16755.179190472267	CPU = 367.192247817, #pieces = 2100
Iteration 5	LB = -16852.86786537125	UB = -16755.179190472267	CPU = 367.304667821, #pieces = 2100
Iteration 6	LB = -16852.16561608636	UB = -16755.179190472267	CPU = 367.639279927, #pieces = 2132
Iteration 7	LB = -16844.120337677658	UB = -16755.179190472267	CPU = 367.724502087, #pieces = 2132
Iteration 8	LB = -16843.983309966283	UB = -16755.179190472267	CPU = 367.801453767, #pieces = 2132
Iteration 9	LB = -16843.868144196287	UB = -16755.179190472267	CPU = 370.757755917, #pieces = 2524
Iteration 10	LB = -16782.926083225222	UB = -16755.510969454215	CPU = 370.881287622, #pieces = 2526
Iteration 11	LB = -16782.776565026514	UB = -16756.493662696892	CPU = 372.308802639, #pieces = 2614
Iteration 12	LB = -16763.991478328986	UB = -16757.278003398606	CPU = 373.74819897500004, #pieces = 2824
Iteration 13	LB = -16759.57762373812	UB = -16757.278003398606	CPU = 373.97574842800003, #pieces = 2828
Iteration 14	LB = -16759.53131024942	UB = -16757.35699776146	CPU = 374.26780159400005, #pieces = 2838
Iteration 15	LB = -16759.42480844085	UB = -16757.424346729596	CPU = 374.58315648800004, #pieces = 2857
Iteration 16	LB = -16759.351113796794	UB = -16757.424346729596	CPU = 374.85752512700003, #pieces = 2858
Iteration 17	LB = -16759.347585128653	UB = -16757.56634638125	CPU = 377.52797870800003, #pieces = 3227
Iteration 18	LB = -16758.456870608446	UB = -16757.56634638125	CPU = 377.85623328500003, #pieces = 3227
Iteration 19	LB = -16758.434038076644	UB = -16757.604785125553	CPU = 378.61538681, #pieces = 3293
Iteration 20	LB = -16758.314690284442	UB = -16757.604785125553	CPU = 379.015128694, #pieces = 3293
Iteration 21	LB = -16758.314583728617	UB = -16757.604785125553	CPU = 379.456472415, #pieces = 3294
Iteration 22	LB = -16758.311679183193	UB = -16757.604785125553	CPU = 379.902508662, #pieces = 3299
Iteration 23	LB = -16758.309211462198	UB = -16757.604785125553	CPU = 380.314139262, #pieces = 3301
Iteration 24	LB = -16758.30685523737	UB = -16757.604785125553	CPU = 380.71941647100005, #pieces = 3301
Iteration 25	LB = -16758.30494321599	UB = -16757.649092109463	CPU = 390.083370192, #pieces = 4621
Iteration 26	LB = -16757.98696459983	UB = -16757.657577257327	CPU = 392.161141407, #pieces = 4735
Iteration 27	LB = -16757.849675998285	UB = -16757.66961570428	CPU = 395.755599007, #pieces = 5099
Iteration 28	LB = -16757.776961027346	UB = -16757.66961570428	CPU = 396.292848502, #pieces = 5100
Iteration 29	LB = -16757.776665324465	UB = -16757.66961570428	CPU = 397.071019969, #pieces = 5134
Iteration 30	LB = -16757.76916162575	UB = -16757.66961570428	CPU = 397.68197955000005, #pieces = 5137
Iteration 31	LB = -16757.768513593128	UB = -16757.66961570428	CPU = 398.52541809800005, #pieces = 5138
Iteration 32	LB = -16757.76833830101	UB = -16757.676240574172	CPU = 402.00530513800004, #pieces = 5464
Iteration 33	LB = -16757.729515694326	UB = -16757.676240574172	CPU = 402.88030196700004, #pieces = 5468
Iteration 34	LB = -16757.728354053685	UB = -16757.677568588813	CPU = 405.71706534500004, #pieces = 5711
Iteration 35	LB = -16757.706816088805	UB = -16757.677634042633	CPU = 406.829094493, #pieces = 5735
Iteration 36	LB = -16757.705429705336	UB = -16757.67966701002	CPU = 408.99027929000005, #pieces = 5928
Iteration 37	LB = -16757.699520166912	UB = -16757.67966701002	CPU = 409.720475367, #pieces = 5934
Iteration 38	LB = -16757.6992170788	UB = -16757.680369601927	CPU = 410.809764254, #pieces = 5998
Iteration 39	LB = -16757.698109199773	UB = -16757.680820500856	CPU = 412.774496816, #pieces = 6214
WRITING LOG...
(-18430.4227152189, -16755.179190472267, 0.0, 0.0, 9.998362331447055, 9.998362331447055, 2000, 1, 0.14573201600000002, 365.10230567400004)
(-16901.164148054024, -16755.179190472267, 0.0, 0.0, 0.9807754001060636, 0.871282580282821, 2006, 2, 0.361670186, 366.369864458)
(-16868.16274097015, -16755.179190472267, 0.0, 0.0, 0.7133950007615046, 0.6743201562543188, 2053, 3, 0.464349218, 366.83608159000005)
(-16852.86786537125, -16755.179190472267, 0.0, 0.0, 0.626049179865418, 0.5830356917610999, 2100, 4, 0.5488307610000001, 367.277680169)
(-16852.16561608636, -16755.179190472267, 0.0, 0.0, 0.5991346020121943, 0.5788444546701378, 2100, 5, 0.6358140670000001, 367.392674703)
(-16844.120337677658, -16755.179190472267, 0.0, 0.0, 0.556849537204114, 0.530827788794802, 2132, 6, 0.6905895830000001, 367.695025733)
(-16843.983309966283, -16755.179190472267, 0.0, 0.0, 0.5550561446051728, 0.530009965781291, 2132, 7, 0.746110813, 367.78097820700003)
(-16843.868144196287, -16755.179190472267, 0.0, 0.0, 0.5305191378412465, 0.5293226214760678, 2132, 8, 0.801597181, 367.85798022700004)
(-16782.926083225222, -16755.510969454215, 0.0, 0.0, 0.16361848839456716, 0.16361848839456716, 2524, 9, 0.892797032, 370.850027574)
(-16782.776565026514, -16756.493662696892, 0.0, 0.0, 0.15685204111724405, 0.15685204111724405, 2526, 10, 0.988005592, 370.977551428)
(-16763.991478328986, -16757.278003398606, 0.0, 0.0, 0.040063039647721344, 0.040063039647721344, 2614, 11, 1.064329683, 372.386166654)
(-16759.57762373812, -16757.278003398606, 0.0, 0.0, 0.016564836793170265, 0.013723113855660649, 2824, 12, 1.244457908, 373.92934698000005)
(-16759.53131024942, -16757.35699776146, 0.0, 0.0, 0.012975271030199492, 0.012975271030199492, 2828, 13, 1.45206111, 374.184461526)
(-16759.42480844085, -16757.424346729596, 0.0, 0.0, 0.01193776364351605, 0.01193776364351605, 2838, 14, 1.627420185, 374.44418859200005)
(-16759.351113796794, -16757.424346729596, 0.0, 0.0, 0.012166329023012793, 0.01149799054634535, 2857, 15, 1.866716752, 374.82361195000004)
(-16759.347585128653, -16757.56634638125, 0.0, 0.0, 0.010629459615947068, 0.010629459615947068, 2858, 16, 2.107035796, 375.09892187400004)
(-16758.456870608446, -16757.56634638125, 0.0, 0.0, 0.012122788305213366, 0.0053141620256207936, 3227, 17, 2.407333967, 377.829344306)
(-16758.434038076644, -16757.604785125553, 0.0, 0.0, 0.00494851717607613, 0.00494851717607613, 3227, 18, 2.765976927, 378.21590889400005)
(-16758.314690284442, -16757.604785125553, 0.0, 0.0, 0.0057990081140316145, 0.004236316394802203, 3293, 19, 3.132644445, 378.983143438)
(-16758.314583728617, -16757.604785125553, 0.0, 0.0, 0.006277656868459255, 0.00423568052932008, 3293, 20, 3.544274204, 379.427817962)
(-16758.311679183193, -16757.604785125553, 0.0, 0.0, 0.005367199949384436, 0.0042183478289606335, 3294, 21, 3.93281584, 379.84607441900005)
(-16758.309211462198, -16757.604785125553, 0.0, 0.0, 0.004748377773170712, 0.004203621852148655, 3299, 22, 4.306609756, 380.277435559)
(-16758.30685523737, -16757.604785125553, 0.0, 0.0, 0.00683283550621236, 0.004189561222015794, 3301, 23, 4.681624337000001, 380.690178494)
(-16758.30494321599, -16757.649092109463, 0.0, 0.0, 0.003913741736217881, 0.003913741736217881, 3301, 24, 5.127406803, 381.16626486300004)
(-16757.98696459983, -16757.657577257327, 0.0, 0.0, 0.001965592989259846, 0.001965592989259846, 4621, 25, 5.640516488, 390.59759712600004)
(-16757.849675998285, -16757.66961570428, 0.0, 0.0, 0.0010744948321270691, 0.0010744948321270691, 4735, 26, 6.225984148, 392.74777730700004)
(-16757.776961027346, -16757.66961570428, 0.0, 0.0, 0.0008884862229908777, 0.0006405742894395221, 5099, 27, 6.7270266780000005, 396.257734184)
(-16757.776665324465, -16757.66961570428, 0.0, 0.0, 0.0006626484665845526, 0.0006388097070855479, 5100, 28, 7.271705031000001, 396.83873412)
(-16757.76916162575, -16757.66961570428, 0.0, 0.0, 0.0007379751059170433, 0.0005940320089529853, 5134, 29, 7.8243422, 397.624842441)
(-16757.768513593128, -16757.66961570428, 0.0, 0.0, 0.0006335120097986787, 0.0005901649281612677, 5137, 30, 8.630951381000001, 398.489701333)
(-16757.76833830101, -16757.676240574172, 0.0, 0.0, 0.0005495853095474017, 0.0005495853095474017, 5138, 31, 9.367556772, 399.263263551)
(-16757.729515694326, -16757.676240574172, 0.0, 0.0, 0.0015670894051466027, 0.00031791472390763965, 5464, 32, 10.185733642, 402.824658035)
(-16757.728354053685, -16757.677568588813, 0.0, 0.0, 0.00030305789488688163, 0.00030305789488688163, 5468, 33, 10.773752361000001, 403.46948555200004)
(-16757.706816088805, -16757.677634042633, 0.0, 0.0, 0.00017414135066272374, 0.00017414135066272374, 5711, 34, 11.682628812, 406.62712677900004)
(-16757.705429705336, -16757.67966701002, 0.0, 0.0, 0.00015373664987651064, 0.00015373664987651064, 5735, 35, 12.632388634000002, 407.78005948000003)
(-16757.699520166912, -16757.67966701002, 0.0, 0.0, 0.00012034409980892348, 0.00011847199187224845, 5928, 36, 13.286214419000002, 409.645389538)
(-16757.6992170788, -16757.680369601927, 0.0, 0.0, 0.00011247067886015701, 0.00011247067886015701, 5934, 37, 13.956166915000003, 410.391677617)
(-16757.698109199773, -16757.680820500856, 0.0, 0.0, 0.00010316880421497371, 0.00010316880421497371, 5998, 38, 14.593526579000002, 411.44845721800004)
(-16757.695484730855, -16757.680820500856, 0.0, 0.0, 8.852543778217493e-5, 8.750751464846856e-5, 6214, 39, 15.268688960000002, 413.45093229500003)
