solving instance knapsack 200 3 sinabc2
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.371054854
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.6289451460000001, #pieces = 200
Iteration 2	LB = -8012.429398257301	UB = 0.0	CPU = 2.000344348, #pieces = 662
Iteration 3	LB = -7684.008173651526	UB = -7015.640814341672	CPU = 2.4976393210000003, #pieces = 818
Iteration 4	LB = -7446.273320636443	UB = -7015.640814341672	CPU = 2.756898997, #pieces = 896
Iteration 5	LB = -7321.344771851897	UB = -7015.640814341672	CPU = 2.87108549, #pieces = 922
Iteration 6	LB = -7280.32524087544	UB = -7015.640814341672	CPU = 2.999239503, #pieces = 944
Iteration 7	LB = -7261.224798692313	UB = -7015.640814341672	CPU = 3.115322555, #pieces = 960
Iteration 8	LB = -7254.028902241272	UB = -7015.640814341672	CPU = 3.189939727, #pieces = 972
Iteration 9	LB = -7247.495766347635	UB = -7015.640814341672	CPU = 3.2739348710000002, #pieces = 984
Iteration 10	LB = -7241.644835769867	UB = -7015.640814341672	CPU = 3.393569202, #pieces = 996
Iteration 11	LB = -7234.134357004802	UB = -7015.640814341672	CPU = 3.5328709600000003, #pieces = 1012
Iteration 12	LB = -7224.141486391808	UB = -7015.640814341672	CPU = 3.7055570560000004, #pieces = 1016
Iteration 13	LB = -7222.841670576326	UB = -7015.640814341672	CPU = 3.804591375, #pieces = 1020
Iteration 14	LB = -7222.649580561144	UB = -7047.2831547284495	CPU = 4.194579186, #pieces = 1131
Iteration 15	LB = -7150.825517315214	UB = -7047.2831547284495	CPU = 4.305010922, #pieces = 1135
Iteration 16	LB = -7149.723570244329	UB = -7047.2831547284495	CPU = 4.391908083000001, #pieces = 1139
Iteration 17	LB = -7148.472174292321	UB = -7051.089679970561	CPU = 4.667068885, #pieces = 1189
Iteration 18	LB = -7129.270784357886	UB = -7051.089679970561	CPU = 4.7333321260000005, #pieces = 1191
Iteration 19	LB = -7129.00115362979	UB = -7062.752982584975	CPU = 5.152983928, #pieces = 1343
Iteration 20	LB = -7094.433296957337	UB = -7062.752982584975	CPU = 5.2362948430000005, #pieces = 1345
Iteration 21	LB = -7094.198737067556	UB = -7067.991006628929	CPU = 5.766293186, #pieces = 1500
Iteration 22	LB = -7081.287237007265	UB = -7067.991006628929	CPU = 6.007142996000001, #pieces = 1528
Iteration 23	LB = -7078.941929642196	UB = -7067.991006628929	CPU = 6.079163812, #pieces = 1530
Iteration 24	LB = -7078.7496527811045	UB = -7067.991006628929	CPU = 6.172410297000001, #pieces = 1532
Iteration 25	LB = -7078.086452577353	UB = -7068.430966506519	CPU = 6.500514504000001, #pieces = 1612
Iteration 26	LB = -7075.877956900661	UB = -7068.647608309704	CPU = 6.68154201, #pieces = 1621
Iteration 27	LB = -7075.585367689689	UB = -7068.647608309704	CPU = 7.145841815000001, #pieces = 1692
Iteration 28	LB = -7074.846841560918	UB = -7068.7393501223605	CPU = 8.268352727, #pieces = 1943
Iteration 29	LB = -7073.881958812697	UB = -7068.7393501223605	CPU = 8.52640309, #pieces = 1945
Iteration 30	LB = -7073.867680418941	UB = -7068.7393501223605	CPU = 8.733450183, #pieces = 1945
Iteration 31	LB = -7073.829304245467	UB = -7068.7393501223605	CPU = 8.92783129, #pieces = 1947
Iteration 32	LB = -7073.818441727395	UB = -7069.141634107254	CPU = 15.277455517000002, #pieces = 3517
Iteration 33	LB = -7070.752447456823	UB = -7069.141634107254	CPU = 15.703447587000001, #pieces = 3532
Iteration 34	LB = -7070.667067259642	UB = -7069.221651348225	CPU = 16.877793837000002, #pieces = 3730
Iteration 35	LB = -7069.796206353416	UB = -7069.221651348225	CPU = 17.284061962000003, #pieces = 3734
Iteration 36	LB = -7069.776369675081	UB = -7069.230223240436	CPU = 18.425598025000003, #pieces = 3838
Iteration 37	LB = -7069.461575993811	UB = -7069.230223240436	CPU = 18.846673873, #pieces = 3840
Iteration 38	LB = -7069.4542534837365	UB = -7069.230412965221	CPU = 19.403755667000002, #pieces = 3870
Iteration 39	LB = -7069.419518996571	UB = -7069.263838544194	CPU = 20.251344667, #pieces = 4024
Iteration 40	LB = -7069.325334319785	UB = -7069.26675037722	CPU = 20.838309233, #pieces = 4048
Iteration 41	LB = -7069.310255689134	UB = -7069.26675037722	CPU = 21.347866863, #pieces = 4052
Iteration 42	LB = -7069.310016350363	UB = -7069.270072806777	CPU = 22.072838006, #pieces = 4121
Iteration 43	LB = -7069.296933962986	UB = -7069.270556788093	CPU = 22.624762591, #pieces = 4137
Iteration 44	LB = -7069.290936836487	UB = -7069.272315188372	CPU = 23.366342441, #pieces = 4233
Iteration 45	LB = -7069.283381042972	UB = -7069.272315188372	CPU = 24.088631382000003, #pieces = 4278
Iteration 46	LB = -7069.281082037515	UB = -7069.273751830775	CPU = 24.744668594, #pieces = 4298
WRITING LOG...
(-8012.429398257301, 0.0, 0.0, 0.0, Inf, Inf, 200, 1, 0.053390391, 0.6898314520000001)
(-7684.008173651526, -7015.640814341672, 0.0, 0.0, 9.526818390467607, 9.526818390467607, 662, 2, 0.109811449, 2.057093322)
(-7446.273320636443, -7015.640814341672, 0.0, 0.0, 7.254541593972381, 6.138177790038131, 818, 3, 0.20498796600000002, 2.593171539)
(-7321.344771851897, -7015.640814341672, 0.0, 0.0, 6.920899575948631, 4.357463068595135, 896, 4, 0.25174179700000004, 2.8039896800000004)
(-7280.32524087544, -7015.640814341672, 0.0, 0.0, 5.618654627063088, 3.7727761944808877, 922, 5, 0.32805858700000007, 2.947748042)
(-7261.224798692313, -7015.640814341672, 0.0, 0.0, 6.356778020869782, 3.50052106214742, 944, 6, 0.39375850400000006, 3.065279748)
(-7254.028902241272, -7015.640814341672, 0.0, 0.0, 5.445311950529158, 3.3979517225607756, 960, 7, 0.43462331500000007, 3.1565421270000003)
(-7247.495766347635, -7015.640814341672, 0.0, 0.0, 4.710255051750924, 3.304829282764811, 972, 8, 0.48674366300000005, 3.2424370660000004)
(-7241.644835769867, -7015.640814341672, 0.0, 0.0, 4.03039143714712, 3.221430905729784, 984, 9, 0.5720862080000001, 3.359632201)
(-7234.134357004802, -7015.640814341672, 0.0, 0.0, 3.936063454949733, 3.1143775521756503, 996, 10, 0.6743640710000001, 3.4962048070000002)
(-7224.141486391808, -7015.640814341672, 0.0, 0.0, 3.5892594254342596, 2.971940519302386, 1012, 11, 0.830777796, 3.689617295)
(-7222.841670576326, -7015.640814341672, 0.0, 0.0, 3.4136015735634233, 2.9534131195982103, 1016, 12, 0.9135365990000001, 3.7886475730000004)
(-7222.649580561144, -7047.2831547284495, 0.0, 0.0, 2.4884259931436192, 2.4884259931436192, 1020, 13, 1.0505889910000001, 3.942002533)
(-7150.825517315214, -7047.2831547284495, 0.0, 0.0, 2.004531935206539, 1.4692521971008279, 1131, 14, 1.146173177, 4.290541921)
(-7149.723570244329, -7047.2831547284495, 0.0, 0.0, 2.187811692647629, 1.4536157163934245, 1135, 15, 1.20214763, 4.361359488000001)
(-7148.472174292321, -7051.089679970561, 0.0, 0.0, 1.3810985073468407, 1.3810985073468407, 1139, 16, 1.327093735, 4.517209012)
(-7129.270784357886, -7051.089679970561, 0.0, 0.0, 1.7189353820027633, 1.1087804571456286, 1189, 17, 1.381768818, 4.7221174370000005)
(-7129.00115362979, -7062.752982584975, 0.0, 0.0, 0.937993601194413, 0.937993601194413, 1191, 18, 1.416836696, 4.768748225)
(-7094.433296957337, -7062.752982584975, 0.0, 0.0, 0.6573709363132371, 0.4485547554965859, 1343, 19, 1.487518458, 5.224037904)
(-7094.198737067556, -7067.991006628929, 0.0, 0.0, 0.3707946206219975, 0.3707946206219975, 1345, 20, 1.6578150630000001, 5.406977805)
(-7081.287237007265, -7067.991006628929, 0.0, 0.0, 0.23540963237800536, 0.18811894873472385, 1500, 21, 1.7582055070000002, 5.8670762960000005)
(-7078.941929642196, -7067.991006628929, 0.0, 0.0, 0.3763381499387709, 0.15493685550810074, 1528, 22, 1.8195702370000002, 6.068877713)
(-7078.7496527811045, -7067.991006628929, 0.0, 0.0, 0.1640567462651438, 0.15221646634927433, 1530, 23, 1.8812887070000002, 6.141255135000001)
(-7078.086452577353, -7068.430966506519, 0.0, 0.0, 0.13660013256953304, 0.13660013256953304, 1532, 24, 2.001147919, 6.292655880000001)
(-7075.877956900661, -7068.647608309704, 0.0, 0.0, 0.10228758019365923, 0.10228758019365923, 1612, 25, 2.123233883, 6.622954853)
(-7075.585367689689, -7068.647608309704, 0.0, 0.0, 0.09938027908290158, 0.09814832715424507, 1621, 26, 2.2558399390000003, 6.814565294)
(-7074.846841560918, -7068.7393501223605, 0.0, 0.0, 0.08640142373408448, 0.08640142373408448, 1692, 27, 2.407684134, 7.298104183)
(-7073.881958812697, -7068.7393501223605, 0.0, 0.0, 0.074388662616575, 0.07275142618248588, 1943, 28, 2.6535577310000003, 8.514650388)
(-7073.867680418941, -7068.7393501223605, 0.0, 0.0, 0.08274302648474373, 0.07254943268620513, 1945, 29, 2.833408646, 8.70668509)
(-7073.829304245467, -7068.7393501223605, 0.0, 0.0, 0.7213029176688679, 0.07200653286244599, 1945, 30, 3.013389358, 8.913858538000001)
(-7073.818441727395, -7069.141634107254, 0.0, 0.0, 0.06615806928491597, 0.06615806928491597, 1947, 31, 3.475185428, 9.390047182)
(-7070.752447456823, -7069.141634107254, 0.0, 0.0, 0.024932982686727882, 0.02278654797065043, 3517, 32, 3.796253384, 15.599000385000002)
(-7070.667067259642, -7069.221651348225, 0.0, 0.0, 0.020446606185292506, 0.020446606185292506, 3532, 33, 4.110912904, 16.018595529000002)
(-7069.796206353416, -7069.221651348225, 0.0, 0.0, 0.009423715965531014, 0.008127556802254946, 3730, 34, 4.482243077, 17.249630455000002)
(-7069.776369675081, -7069.230223240436, 0.0, 0.0, 0.007725684655862347, 0.007725684655862347, 3734, 35, 4.961163199, 17.763447855000003)
(-7069.461575993811, -7069.230223240436, 0.0, 0.0, 0.004088018335627317, 0.0032726724985371646, 3838, 36, 5.358885824, 18.823791698)
(-7069.4542534837365, -7069.230412965221, 0.0, 0.0, 0.0031664057533728907, 0.0031664057533728907, 3840, 37, 5.772751437999999, 19.261062684000002)
(-7069.419518996571, -7069.263838544194, 0.0, 0.0, 0.002202215901579862, 0.002202215901579862, 3870, 38, 6.180626283, 19.812102932000002)
(-7069.325334319785, -7069.26675037722, 0.0, 0.0, 0.000828713141454328, 0.000828713141454328, 4024, 39, 6.640773809, 20.711952138)
(-7069.310255689134, -7069.26675037722, 0.0, 0.0, 0.004764891618516722, 0.0006154147728440981, 4048, 40, 7.123777017, 21.321765106)
(-7069.310016350363, -7069.270072806777, 0.0, 0.0, 0.0005650306633524991, 0.0005650306633524991, 4052, 41, 7.6446842870000005, 21.869249663)
(-7069.296933962986, -7069.270556788093, 0.0, 0.0, 0.00037312442183887396, 0.00037312442183887396, 4121, 42, 8.109455731, 22.538076259)
(-7069.290936836487, -7069.272315188372, 0.0, 0.0, 0.0002634167603810826, 0.0002634167603810826, 4137, 43, 8.593138722, 23.108918396)
(-7069.283381042972, -7069.272315188372, 0.0, 0.0, 0.00016171992690820915, 0.00015653456404903892, 4233, 44, 9.145705336, 23.919404896000003)
(-7069.281082037515, -7069.273751830775, 0.0, 0.0, 0.00010369108620862698, 0.00010369108620862698, 4278, 45, 9.68566932, 24.629056054000003)
(-7069.280487371108, -7069.273751830775, 0.0, 0.0, 0.00011417652970586833, 9.527909895583771e-5, 4298, 46, 10.178153806000001, 25.237658595000003)
