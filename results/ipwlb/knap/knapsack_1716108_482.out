solving instance knapsack 200 9 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3460.132293477
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 140.867706523, #pieces = 800
Iteration 2	LB = -7841.772334518029	UB = -7129.367885117242	CPU = 141.63814257200002, #pieces = 803
Iteration 3	LB = -7198.877936791382	UB = -7129.367885117242	CPU = 141.908891966, #pieces = 828
Iteration 4	LB = -7179.38379535731	UB = -7129.367885117242	CPU = 142.278092311, #pieces = 866
Iteration 5	LB = -7168.936768889679	UB = -7129.731972255432	CPU = 143.30293913600002, #pieces = 994
Iteration 6	LB = -7144.441193140944	UB = -7129.731972255432	CPU = 143.370985445, #pieces = 998
Iteration 7	LB = -7143.929089885457	UB = -7131.303814736529	CPU = 144.338691522, #pieces = 1094
Iteration 8	LB = -7133.837631177453	UB = -7131.303814736529	CPU = 144.770666589, #pieces = 1147
Iteration 9	LB = -7132.492817139874	UB = -7131.505058848175	CPU = 145.03065378000002, #pieces = 1176
Iteration 10	LB = -7132.330542148079	UB = -7131.578913360378	CPU = 145.563047289, #pieces = 1250
Iteration 11	LB = -7132.018028205952	UB = -7131.578913360378	CPU = 145.791233967, #pieces = 1260
Iteration 12	LB = -7131.995647334323	UB = -7131.622987678854	CPU = 146.347352914, #pieces = 1318
Iteration 13	LB = -7131.935424089186	UB = -7131.631899673931	CPU = 150.154727267, #pieces = 1867
Iteration 14	LB = -7131.81491299993	UB = -7131.631899673931	CPU = 151.05880772900002, #pieces = 1918
Iteration 15	LB = -7131.755775201904	UB = -7131.648159682113	CPU = 151.613150466, #pieces = 1949
Iteration 16	LB = -7131.738944176913	UB = -7131.648159682113	CPU = 151.956925079, #pieces = 1956
Iteration 17	LB = -7131.738451485945	UB = -7131.653641171712	CPU = 153.40942399800002, #pieces = 2104
Iteration 18	LB = -7131.708954763783	UB = -7131.653641171712	CPU = 154.207003404, #pieces = 2164
Iteration 19	LB = -7131.701075527922	UB = -7131.655905874604	CPU = 154.562813572, #pieces = 2182
Iteration 20	LB = -7131.699058419274	UB = -7131.6598492764715	CPU = 155.614044274, #pieces = 2276
Iteration 21	LB = -7131.687363684691	UB = -7131.6598492764715	CPU = 156.009806771, #pieces = 2298
Iteration 22	LB = -7131.687349823442	UB = -7131.661133114768	CPU = 156.567702749, #pieces = 2321
Iteration 23	LB = -7131.682823892621	UB = -7131.662793995009	CPU = 157.621248732, #pieces = 2400
Iteration 24	LB = -7131.675529497154	UB = -7131.662793995009	CPU = 157.91866453, #pieces = 2401
Iteration 25	LB = -7131.675401187378	UB = -7131.662793995009	CPU = 158.295335102, #pieces = 2416
Iteration 26	LB = -7131.674973827874	UB = -7131.662793995009	CPU = 158.77435749100002, #pieces = 2437
Iteration 27	LB = -7131.673428452347	UB = -7131.662793995009	CPU = 159.392067145, #pieces = 2485
Iteration 28	LB = -7131.671723042369	UB = -7131.662920163095	CPU = 159.933673324, #pieces = 2524
Iteration 29	LB = -7131.670849232313	UB = -7131.663470150879	CPU = 160.841619321, #pieces = 2604
WRITING LOG...
(-7841.772334518029, -7129.367885117242, 0.0, 0.0, 9.992533151332422, 9.992533151332422, 800, 1, 0.22948715400000003, 141.105222027)
(-7198.877936791382, -7129.367885117242, 0.0, 0.0, 1.0331810411876907, 0.9749819730756862, 803, 2, 0.305945707, 141.715026767)
(-7179.38379535731, -7129.367885117242, 0.0, 0.0, 0.7349841315610511, 0.7015476132810892, 828, 3, 0.390127248, 141.993510678)
(-7168.936768889679, -7129.731972255432, 0.0, 0.0, 0.5498775660404653, 0.5498775660404653, 866, 4, 0.419405157, 142.307777305)
(-7144.441193140944, -7129.731972255432, 0.0, 0.0, 0.21619652080773172, 0.20630818862127334, 994, 5, 0.456290157, 143.340246119)
(-7143.929089885457, -7131.303814736529, 0.0, 0.0, 0.17704020859185224, 0.17704020859185224, 998, 6, 0.49739407999999996, 143.412541905)
(-7133.837631177453, -7131.303814736529, 0.0, 0.0, 0.03573592218942107, 0.035530900193707, 1094, 7, 0.5467578479999999, 144.388449818)
(-7132.492817139874, -7131.505058848175, 0.0, 0.0, 0.013850628773982044, 0.013850628773982044, 1147, 8, 0.627855993, 144.852181604)
(-7132.330542148079, -7131.578913360378, 0.0, 0.0, 0.010539444305852252, 0.010539444305852252, 1176, 9, 0.711337311, 145.114557993)
(-7132.018028205952, -7131.578913360378, 0.0, 0.0, 0.006920621893749181, 0.00615732996730433, 1250, 10, 0.867478982, 145.719591231)
(-7131.995647334323, -7131.622987678854, 0.0, 0.0, 0.005225453674607969, 0.005225453674607969, 1260, 11, 1.0337579319999999, 145.957927836)
(-7131.935424089186, -7131.631899673931, 0.0, 0.0, 0.004256030310104401, 0.004256030310104401, 1318, 12, 1.136061796, 146.450093608)
(-7131.81491299993, -7131.631899673931, 0.0, 0.0, 0.002582162403621859, 0.0025662194652460225, 1867, 13, 1.409319467, 150.42843629)
(-7131.755775201904, -7131.648159682113, 0.0, 0.0, 0.0015089852637299333, 0.0015089852637299333, 1918, 14, 1.679452352, 151.329413214)
(-7131.738944176913, -7131.648159682113, 0.0, 0.0, 0.0015181175618877248, 0.0012729805616730019, 1949, 15, 1.971695067, 151.905825566)
(-7131.738451485945, -7131.653641171712, 0.0, 0.0, 0.001189209663013059, 0.001189209663013059, 1956, 16, 2.229896645, 152.215570421)
(-7131.708954763783, -7131.653641171712, 0.0, 0.0, 0.0008128499860064916, 0.0007756068207304286, 2104, 17, 2.535376835, 153.71539652500002)
(-7131.701075527922, -7131.655905874604, 0.0, 0.0, 0.0006333683777439175, 0.0006333683777439175, 2164, 18, 2.750296429, 154.42238359700002)
(-7131.699058419274, -7131.6598492764715, 0.0, 0.0, 0.0005497898614169432, 0.0005497898614169432, 2182, 19, 2.972375712, 154.78534689900002)
(-7131.687363684691, -7131.6598492764715, 0.0, 0.0, 0.0005075067965012526, 0.0003858065135082109, 2276, 20, 3.240036321, 155.882218133)
(-7131.687349823442, -7131.661133114768, 0.0, 0.0, 0.0003676101287566088, 0.0003676101287566088, 2298, 21, 3.5614041089999997, 156.33162992)
(-7131.682823892621, -7131.662793995009, 0.0, 0.0, 0.00028085873084688175, 0.00028085873084688175, 2321, 22, 3.82558776, 156.832367741)
(-7131.675529497154, -7131.662793995009, 0.0, 0.0, 0.0007313864688769565, 0.0001785768973095555, 2400, 23, 4.101548551, 157.897698303)
(-7131.675401187378, -7131.662793995009, 0.0, 0.0, 0.0003058555222910659, 0.00017677774080009063, 2401, 24, 4.368504176999999, 158.186112578)
(-7131.674973827874, -7131.662793995009, 0.0, 0.0, 0.0001712625871686219, 0.00017078531636211558, 2416, 25, 4.660869127999999, 158.588230458)
(-7131.673428452347, -7131.662793995009, 0.0, 0.0, 0.00015381253264415374, 0.00014911609879753995, 2437, 26, 4.925444638999999, 159.03942479100002)
(-7131.671723042369, -7131.662920163095, 0.0, 0.0, 0.00012343375413062272, 0.00012343375413062272, 2485, 27, 5.202676754, 159.66980672)
(-7131.670849232313, -7131.663470150879, 0.0, 0.0, 0.00010346928826485823, 0.00010346928826485823, 2524, 28, 5.565956530999999, 160.297431727)
(-7131.6698805674605, -7131.663470150879, 0.0, 0.0, 0.00018784406703510633, 8.988669485184552e-5, 2604, 29, 5.932515945, 161.208665466)
