solving instance knapsack 200 10 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3.3989936162579997e+03
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 202.00638374200003, #pieces = 600
Iteration 2	LB = -14985.763711770122	UB = -13640.923347894612	CPU = 610.925712224, #pieces = 864
Iteration 3	LB = -14985.760933829933	UB = -13640.923347894612	CPU = 611.1545723190001, #pieces = 864
Iteration 4	LB = -14032.04550565442	UB = -13751.007856124066	CPU = 664.7510827860001, #pieces = 1003
Iteration 5	LB = -13880.7388857124	UB = -13809.072344900205	CPU = 702.2452106650001, #pieces = 1086
Iteration 6	LB = -13868.588985702054	UB = -13815.414836024707	CPU = 712.244939037, #pieces = 1226
Iteration 7	LB = -13853.838668417262	UB = -13825.64244445583	CPU = 722.1760008150001, #pieces = 1351
Iteration 8	LB = -13844.841198905808	UB = -13831.544401375639	CPU = 725.936167582, #pieces = 1479
Iteration 9	LB = -13840.6967724247	UB = -13831.929867538414	CPU = 726.047661735, #pieces = 1493
Iteration 10	LB = -13839.66241900483	UB = -13834.130434785506	CPU = 726.808321126, #pieces = 1635
Iteration 11	LB = -13838.483344006983	UB = -13835.1709215232	CPU = 727.3704032, #pieces = 1752
Iteration 12	LB = -13837.371839298608	UB = -13835.342577511741	CPU = 727.6010964530001, #pieces = 1780
Iteration 13	LB = -13837.17364095792	UB = -13835.728038050516	CPU = 728.0290944530001, #pieces = 1851
Iteration 14	LB = -13836.906706217891	UB = -13835.728038050516	CPU = 728.158716713, #pieces = 1853
Iteration 15	LB = -13836.905762620037	UB = -13835.889387150664	CPU = 728.838972399, #pieces = 1977
Iteration 16	LB = -13836.62936237069	UB = -13835.889387150664	CPU = 729.093546089, #pieces = 1979
Iteration 17	LB = -13836.620822310562	UB = -13835.908675847808	CPU = 729.7658248140001, #pieces = 2079
Iteration 18	LB = -13836.467634828177	UB = -13835.908675847808	CPU = 730.004211766, #pieces = 2092
Iteration 19	LB = -13836.455423125704	UB = -13836.047012005036	CPU = 730.58238687, #pieces = 2173
Iteration 20	LB = -13836.344205198015	UB = -13836.047012005036	CPU = 730.776168138, #pieces = 2175
Iteration 21	LB = -13836.343395325026	UB = -13836.073029121424	CPU = 731.53483859, #pieces = 2280
Iteration 22	LB = -13836.284052060651	UB = -13836.073029121424	CPU = 731.821882029, #pieces = 2291
Iteration 23	LB = -13836.27969966769	UB = -13836.094318570626	CPU = 732.5037940450001, #pieces = 2378
Iteration 24	LB = -13836.245773948238	UB = -13836.111692610431	CPU = 733.030910208, #pieces = 2425
Iteration 25	LB = -13836.221039679142	UB = -13836.13238977655	CPU = 733.6025082230001, #pieces = 2460
Iteration 26	LB = -13836.21141198572	UB = -13836.137036469656	CPU = 733.870871383, #pieces = 2466
Iteration 27	LB = -13836.21027820554	UB = -13836.15110216738	CPU = 734.6650964290001, #pieces = 2565
Iteration 28	LB = -13836.196060997025	UB = -13836.15110216738	CPU = 735.027124045, #pieces = 2570
Iteration 29	LB = -13836.196015307754	UB = -13836.155191115908	CPU = 735.671317477, #pieces = 2646
Iteration 30	LB = -13836.186138339068	UB = -13836.155191115908	CPU = 735.946707324, #pieces = 2650
Iteration 31	LB = -13836.185874393945	UB = -13836.160640528142	CPU = 736.7369151260001, #pieces = 2734
Iteration 32	LB = -13836.180049625747	UB = -13836.160640528142	CPU = 737.036486942, #pieces = 2737
Iteration 33	LB = -13836.17979493368	UB = -13836.160640528142	CPU = 737.356455986, #pieces = 2744
Iteration 34	LB = -13836.179235248228	UB = -13836.16280257674	CPU = 737.952717033, #pieces = 2807
WRITING LOG...
(-14985.763711770122, -13640.923347894612, 0.0, 0.0, 9.858866072164222, 9.858866072164222, 600, 1, 0.101129515, 202.11544929500002)
(-14985.760933829933, -13640.923347894612, 0.0, 0.0, 9.858845707412387, 9.858845707412387, 864, 2, 0.126729044, 610.95173794)
(-14032.04550565442, -13751.007856124066, 0.0, 0.0, 2.0437603735728525, 2.0437603735728525, 864, 3, 0.153322697, 611.181573069)
(-13880.7388857124, -13809.072344900205, 0.0, 0.0, 0.5189815725649545, 0.5189815725649545, 1003, 4, 0.187592597, 664.785804715)
(-13868.588985702054, -13815.414836024707, 0.0, 0.0, 0.3848899964892193, 0.3848899964892193, 1086, 5, 0.268278938, 702.326305699)
(-13853.838668417262, -13825.64244445583, 0.0, 0.0, 0.20394150994942137, 0.20394150994942137, 1226, 6, 0.30599075000000003, 712.283036303)
(-13844.841198905808, -13831.544401375639, 0.0, 0.0, 0.09613385999647685, 0.09613385999647685, 1351, 7, 0.36254359700000005, 722.232963025)
(-13840.6967724247, -13831.929867538414, 0.0, 0.0, 0.06338164645311693, 0.06338164645311693, 1479, 8, 0.39804696000000006, 725.9720636400001)
(-13839.66241900483, -13834.130434785506, 0.0, 0.0, 0.0399879431916727, 0.0399879431916727, 1493, 9, 0.44365301700000004, 726.0936783310001)
(-13838.483344006983, -13835.1709215232, 0.0, 0.0, 0.02394204236848166, 0.02394204236848166, 1635, 10, 0.49314700400000006, 726.858206182)
(-13837.371839298608, -13835.342577511741, 0.0, 0.0, 0.014667231949612976, 0.014667231949612976, 1752, 11, 0.591175705, 727.4688385840001)
(-13837.17364095792, -13835.728038050516, 0.0, 0.0, 0.010448332776047772, 0.010448332776047772, 1780, 12, 0.6665731020000001, 727.676896946)
(-13836.906706217891, -13835.728038050516, 0.0, 0.0, 0.010298715269848836, 0.008519018038900811, 1851, 13, 0.78054058, 728.1434518120001)
(-13836.905762620037, -13835.889387150664, 0.0, 0.0, 0.007345935204693035, 0.007345935204693035, 1853, 14, 0.91308433, 728.291663039)
(-13836.62936237069, -13835.889387150664, 0.0, 0.0, 0.007039624795753431, 0.0053482302389074, 1977, 15, 1.152598555, 729.078876753)
(-13836.620822310562, -13835.908675847808, 0.0, 0.0, 0.0051470884886478385, 0.0051470884886478385, 1979, 16, 1.330125143, 729.2715328090001)
(-13836.467634828177, -13835.908675847808, 0.0, 0.0, 0.004783182153293997, 0.004039915219628136, 2079, 17, 1.50919969, 729.945322215)
(-13836.455423125704, -13836.047012005036, 0.0, 0.0, 0.0029517904956097474, 0.0029517904956097474, 2092, 18, 1.678352371, 730.173759356)
(-13836.344205198015, -13836.047012005036, 0.0, 0.0, 0.0043591065605617955, 0.002147963162606162, 2173, 19, 1.8572205119999998, 730.761669385)
(-13836.343395325026, -13836.073029121424, 0.0, 0.0, 0.001954067480222893, 0.001954067480222893, 2175, 20, 2.1058711359999998, 731.0252532080001)
(-13836.284052060651, -13836.073029121424, 0.0, 0.0, 0.0064140338615184846, 0.0015251649711826127, 2280, 21, 2.332168383, 731.76154339)
(-13836.27969966769, -13836.094318570626, 0.0, 0.0, 0.0013398368990259124, 0.0013398368990259124, 2291, 22, 2.533454266, 732.023561847)
(-13836.245773948238, -13836.111692610431, 0.0, 0.0, 0.0009690680502247042, 0.0009690680502247042, 2378, 23, 2.837754199, 732.808519634)
(-13836.221039679142, -13836.13238977655, 0.0, 0.0, 0.0006407130265426631, 0.0006407130265426631, 2425, 24, 3.170635667, 733.364215703)
(-13836.21141198572, -13836.137036469656, 0.0, 0.0, 0.0005375453847252977, 0.0005375453847252977, 2460, 25, 3.401639337, 733.834019696)
(-13836.21027820554, -13836.15110216738, 0.0, 0.0, 0.00042769147087422737, 0.00042769147087422737, 2466, 26, 3.6200910110000004, 734.089750963)
(-13836.196060997025, -13836.15110216738, 0.0, 0.0, 0.00037954079066044585, 0.0003249373999541569, 2565, 27, 3.9421764880000003, 734.98760587)
(-13836.196015307754, -13836.155191115908, 0.0, 0.0, 0.00029505445178085686, 0.00029505445178085686, 2570, 28, 4.169903239, 735.255285422)
(-13836.186138339068, -13836.155191115908, 0.0, 0.0, 0.000270947897900775, 0.00022366923999272604, 2646, 29, 4.413478281, 735.9228995210001)
(-13836.185874393945, -13836.160640528142, 0.0, 0.0, 0.00018237621301505489, 0.00018237621301505489, 2650, 30, 4.693359171, 736.227020451)
(-13836.180049625747, -13836.160640528142, 0.0, 0.0, 0.00019656219448636677, 0.00014027805913694784, 2734, 31, 4.97293466, 737.016930813)
(-13836.17979493368, -13836.160640528142, 0.0, 0.0, 0.00014940597706509875, 0.00013843728788274644, 2737, 32, 5.24970842, 737.3137071790001)
(-13836.179235248228, -13836.16280257674, 0.0, 0.0, 0.00011876610388325242, 0.00011876610388325242, 2744, 33, 5.510376044, 737.62380352)
(-13836.17577484637, -13836.16280257674, 0.0, 0.0, 9.48175212912937e-5, 9.375626620141271e-5, 2807, 34, 5.795760192, 738.238575234)
