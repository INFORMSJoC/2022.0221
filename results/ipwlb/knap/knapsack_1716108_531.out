solving instance knapsack 500 4 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3006.878730025
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 594.121269975, #pieces = 1500
Iteration 2	LB = -37284.8723068735	UB = -33929.81041022569	CPU = 1869.494482801, #pieces = 2180
Iteration 3	LB = -37284.86535237325	UB = -33929.81041022569	CPU = 1870.183012786, #pieces = 2180
Iteration 4	LB = -34891.36705285678	UB = -34240.92467777978	CPU = 1996.7853539010002, #pieces = 2492
Iteration 5	LB = -34565.841559036475	UB = -34370.02574560067	CPU = 2099.577032692, #pieces = 2589
Iteration 6	LB = -34541.53662226951	UB = -34406.922876306315	CPU = 2108.6011185310003, #pieces = 2754
Iteration 7	LB = -34513.406582396005	UB = -34420.611367742655	CPU = 2141.95820477, #pieces = 3095
Iteration 8	LB = -34501.04732327567	UB = -34443.943200990965	CPU = 2151.488764554, #pieces = 3406
Iteration 9	LB = -34483.30872477242	UB = -34450.29429825035	CPU = 2156.986700936, #pieces = 3690
Iteration 10	LB = -34470.69089028626	UB = -34453.37309604398	CPU = 2157.845805419, #pieces = 3807
Iteration 11	LB = -34467.21237002132	UB = -34456.38332833515	CPU = 2158.903321949, #pieces = 3950
Iteration 12	LB = -34466.097060772394	UB = -34457.116290584934	CPU = 2160.356045417, #pieces = 4155
Iteration 13	LB = -34464.340516415075	UB = -34457.31273660247	CPU = 2160.568538765, #pieces = 4160
Iteration 14	LB = -34464.321134954705	UB = -34458.405543479574	CPU = 2162.8385099720003, #pieces = 4491
Iteration 15	LB = -34463.09494735856	UB = -34458.405543479574	CPU = 2162.9969410870003, #pieces = 4495
Iteration 16	LB = -34463.06746453649	UB = -34458.9453055329	CPU = 2163.940910973, #pieces = 4616
Iteration 17	LB = -34462.27996671499	UB = -34459.360771080064	CPU = 2165.313564184, #pieces = 4791
Iteration 18	LB = -34461.696612708314	UB = -34459.360771080064	CPU = 2165.500052974, #pieces = 4799
Iteration 19	LB = -34461.68432448562	UB = -34459.67870863088	CPU = 2167.4784119620003, #pieces = 5076
Iteration 20	LB = -34461.26051600596	UB = -34459.78634016118	CPU = 2168.083519583, #pieces = 5144
Iteration 21	LB = -34461.10283711521	UB = -34459.92480485316	CPU = 2169.4577236120003, #pieces = 5328
Iteration 22	LB = -34460.87297066611	UB = -34459.92480485316	CPU = 2169.810146067, #pieces = 5332
Iteration 23	LB = -34460.86809581311	UB = -34460.075396929635	CPU = 2171.6509942810003, #pieces = 5591
Iteration 24	LB = -34460.66535780254	UB = -34460.075396929635	CPU = 2171.846133478, #pieces = 5593
Iteration 25	LB = -34460.664281532416	UB = -34460.075396929635	CPU = 2172.2990093030003, #pieces = 5625
Iteration 26	LB = -34460.63832509574	UB = -34460.166573510345	CPU = 2174.420807111, #pieces = 5882
Iteration 27	LB = -34460.51611018765	UB = -34460.166573510345	CPU = 2174.762871299, #pieces = 5894
Iteration 28	LB = -34460.513663632984	UB = -34460.21329212609	CPU = 2175.3409307750003, #pieces = 5922
Iteration 29	LB = -34460.49418602671	UB = -34460.21329212609	CPU = 2175.714689595, #pieces = 5931
Iteration 30	LB = -34460.49119921977	UB = -34460.236298297285	CPU = 2176.7246525670002, #pieces = 6034
Iteration 31	LB = -34460.452201288754	UB = -34460.236298297285	CPU = 2176.9839823330003, #pieces = 6039
Iteration 32	LB = -34460.451206258076	UB = -34460.268372255574	CPU = 2179.1698579110002, #pieces = 6281
Iteration 33	LB = -34460.40643613656	UB = -34460.268372255574	CPU = 2179.47317684, #pieces = 6287
Iteration 34	LB = -34460.40474343431	UB = -34460.268372255574	CPU = 2181.457266727, #pieces = 6530
Iteration 35	LB = -34460.36921727701	UB = -34460.268372255574	CPU = 2181.762552685, #pieces = 6541
Iteration 36	LB = -34460.36782955042	UB = -34460.275171170724	CPU = 2183.126965974, #pieces = 6683
Iteration 37	LB = -34460.35122872306	UB = -34460.29060783585	CPU = 2183.56738825, #pieces = 6710
Iteration 38	LB = -34460.34862239334	UB = -34460.300214244984	CPU = 2185.256920736, #pieces = 6896
Iteration 39	LB = -34460.338835430994	UB = -34460.300214244984	CPU = 2185.56324919, #pieces = 6900
Iteration 40	LB = -34460.3387749947	UB = -34460.300214244984	CPU = 2186.167982712, #pieces = 6945
Iteration 41	LB = -34460.336405317204	UB = -34460.30039461308	CPU = 2186.5520401020003, #pieces = 6958
Iteration 42	LB = -34460.33626607111	UB = -34460.30131411051	CPU = 2186.866798477, #pieces = 6963
WRITING LOG...
(-37284.8723068735, -33929.81041022569, 0.0, 0.0, 9.88824239240861, 9.88824239240861, 1500, 1, 0.174466497, 594.306974638)
(-37284.86535237325, -33929.81041022569, 0.0, 0.0, 9.888221895682682, 9.888221895682682, 2180, 2, 0.252219827, 1869.5737050460002)
(-34891.36705285678, -34240.92467777978, 0.0, 0.0, 1.899605168954729, 1.899605168954729, 2180, 3, 0.336775943, 1870.268902666)
(-34565.841559036475, -34370.02574560067, 0.0, 0.0, 0.569728445608936, 0.569728445608936, 2492, 4, 0.426281279, 1996.876162173)
(-34541.53662226951, -34406.922876306315, 0.0, 0.0, 0.39124029326055454, 0.39124029326055454, 2589, 5, 0.5274889380000001, 2099.679684904)
(-34513.406582396005, -34420.611367742655, 0.0, 0.0, 0.2695920001592797, 0.2695920001592797, 2754, 6, 0.692837926, 2108.768033796)
(-34501.04732327567, -34443.943200990965, 0.0, 0.0, 0.16578857406506908, 0.16578857406506908, 3095, 7, 0.742051063, 2142.009236335)
(-34483.30872477242, -34450.29429825035, 0.0, 0.0, 0.09583205947747966, 0.09583205947747966, 3406, 8, 0.888081223, 2151.636132082)
(-34470.69089028626, -34453.37309604398, 0.0, 0.0, 0.050264437661904596, 0.050264437661904596, 3690, 9, 1.012450912, 2157.1128115740003)
(-34467.21237002132, -34456.38332833515, 0.0, 0.0, 0.031428259846603586, 0.031428259846603586, 3807, 10, 1.172912345, 2158.007806098)
(-34466.097060772394, -34457.116290584934, 0.0, 0.0, 0.02606361516652401, 0.02606361516652401, 3950, 11, 1.32984875, 2159.06188542)
(-34464.340516415075, -34457.31273660247, 0.0, 0.0, 0.02039561200354177, 0.02039561200354177, 4155, 12, 1.4753875650000001, 2160.503195411)
(-34464.321134954705, -34458.405543479574, 0.0, 0.0, 0.017167339526686802, 0.017167339526686802, 4160, 13, 1.65074735, 2160.7456578640003)
(-34463.09494735856, -34458.405543479574, 0.0, 0.0, 0.01394533164244646, 0.013608882375785497, 4491, 14, 1.744492452, 2162.934001123)
(-34463.06746453649, -34458.9453055329, 0.0, 0.0, 0.011962522262488095, 0.011962522262488095, 4495, 15, 1.905481944, 2163.1595378260004)
(-34462.27996671499, -34459.360771080064, 0.0, 0.0, 0.008471415515560103, 0.008471415515560103, 4616, 16, 2.093061815, 2164.130123903)
(-34461.696612708314, -34459.360771080064, 0.0, 0.0, 0.007072817331445799, 0.006778540216596991, 4791, 17, 2.205851356, 2165.428135482)
(-34461.68432448562, -34459.67870863088, 0.0, 0.0, 0.0058201815277963255, 0.0058201815277963255, 4799, 18, 2.3409658020000004, 2165.636840215)
(-34461.26051600596, -34459.78634016118, 0.0, 0.0, 0.0042779599102156785, 0.0042779599102156785, 5076, 19, 2.4686163800000003, 2167.6077243160003)
(-34461.10283711521, -34459.92480485316, 0.0, 0.0, 0.0034185572624593256, 0.0034185572624593256, 5144, 20, 2.597395999, 2168.2139092330003)
(-34460.87297066611, -34459.92480485316, 0.0, 0.0, 0.002884533757637719, 0.0027515028495305777, 5328, 21, 2.887226243, 2169.749381856)
(-34460.86809581311, -34460.075396929635, 0.0, 0.0, 0.002300339956725626, 0.002300339956725626, 5332, 22, 2.968565667, 2169.8932460230003)
(-34460.66535780254, -34460.075396929635, 0.0, 0.0, 0.0028367714684104702, 0.0017120127164935628, 5591, 23, 3.117797352, 2171.801889525)
(-34460.664281532416, -34460.075396929635, 0.0, 0.0, 0.0018695913885229134, 0.0017088894786153168, 5593, 24, 3.2953413460000003, 2172.025983462)
(-34460.63832509574, -34460.166573510345, 0.0, 0.0, 0.0013689765091106515, 0.0013689765091106515, 5625, 25, 3.5860217180000005, 2172.591556149)
(-34460.51611018765, -34460.166573510345, 0.0, 0.0, 0.0012156268994157804, 0.0010143209161808514, 5882, 26, 3.8143475280000003, 2174.6508886300003)
(-34460.513663632984, -34460.21329212609, 0.0, 0.0, 0.00087164726563173, 0.00087164726563173, 5894, 27, 4.168125432, 2175.118500808)
(-34460.49418602671, -34460.21329212609, 0.0, 0.0, 0.0008492896204163454, 0.0008151252525330413, 5922, 28, 4.443947176, 2175.618373072)
(-34460.49119921977, -34460.236298297285, 0.0, 0.0, 0.0007396958055531032, 0.0007396958055531032, 5931, 29, 4.597675971, 2175.87004117)
(-34460.452201288754, -34460.236298297285, 0.0, 0.0, 0.0007150829365988717, 0.0006265278902915149, 6034, 30, 4.783674457, 2176.912560178)
(-34460.451206258076, -34460.268372255574, 0.0, 0.0, 0.0005305646506496928, 0.0005305646506496928, 6039, 31, 5.060920566, 2177.2630239610003)
(-34460.40643613656, -34460.268372255574, 0.0, 0.0, 0.0005636601378707706, 0.000400646563441065, 6281, 32, 5.280097747, 2179.390732011)
(-34460.40474343431, -34460.268372255574, 0.0, 0.0, 0.00041852807086124806, 0.00039573452319425806, 6287, 33, 5.444725298, 2179.639599216)
(-34460.36921727701, -34460.268372255574, 0.0, 0.0, 0.00043276986780977353, 0.0002926414279379437, 6530, 34, 5.641773199, 2181.656209275)
(-34460.36782955042, -34460.275171170724, 0.0, 0.0, 0.0002688846192811553, 0.0002688846192811553, 6541, 35, 5.875871121, 2181.998310805)
(-34460.35122872306, -34460.29060783585, 0.0, 0.0, 0.00017591519439623122, 0.00017591519439623122, 6683, 36, 6.117868465, 2183.3709704030002)
(-34460.34862239334, -34460.300214244984, 0.0, 0.0, 0.00014047512081495858, 0.00014047512081495858, 6710, 37, 6.371822978, 2183.8231179160002)
(-34460.338835430994, -34460.300214244984, 0.0, 0.0, 0.0001681847111212446, 0.00011207443280945363, 6896, 38, 6.61980959, 2185.5066739940003)
(-34460.3387749947, -34460.300214244984, 0.0, 0.0, 0.00011827792786259315, 0.00011189905333327117, 6900, 39, 6.861032699, 2185.8063715440003)
(-34460.336405317204, -34460.30039461308, 0.0, 0.0, 0.00010449910103684125, 0.00010449910103684125, 6945, 40, 7.126854406, 2186.4357477470003)
(-34460.33626607111, -34460.30131411051, 0.0, 0.0, 0.00010142674109728806, 0.00010142674109728806, 6958, 41, 7.371820762, 2186.7990770240003)
(-34460.33626607111, -34460.30533314971, 0.0, 0.0, 8.991221134131945e-5, 8.976392141800597e-5, 6963, 42, 7.672604635, 2187.169262682)
