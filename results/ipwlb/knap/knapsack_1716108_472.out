solving instance knapsack 200 8 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3446.502461172
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 154.49753882800002, #pieces = 800
Iteration 2	LB = -7376.217576526381	UB = -6706.066300792277	CPU = 155.17382717, #pieces = 801
Iteration 3	LB = -6765.782258882006	UB = -6706.066300792277	CPU = 155.530517511, #pieces = 821
Iteration 4	LB = -6751.749573817303	UB = -6706.066300792277	CPU = 156.02623126700001, #pieces = 875
Iteration 5	LB = -6736.904461005685	UB = -6706.078013251554	CPU = 157.413771047, #pieces = 1030
Iteration 6	LB = -6714.825222604602	UB = -6706.078013251554	CPU = 158.26094709, #pieces = 1097
Iteration 7	LB = -6707.9083432863545	UB = -6706.078013251554	CPU = 158.378925992, #pieces = 1100
Iteration 8	LB = -6707.8846435762325	UB = -6706.078013251554	CPU = 158.51819607500002, #pieces = 1107
Iteration 9	LB = -6707.756981527996	UB = -6706.612111007627	CPU = 159.157519568, #pieces = 1188
Iteration 10	LB = -6707.11867855593	UB = -6706.61338422565	CPU = 159.346873319, #pieces = 1198
Iteration 11	LB = -6707.040807210155	UB = -6706.644886344166	CPU = 159.76928625800002, #pieces = 1242
Iteration 12	LB = -6706.956921720853	UB = -6706.664227337437	CPU = 163.07920225400002, #pieces = 1673
Iteration 13	LB = -6706.843120369564	UB = -6706.664227337437	CPU = 163.367213426, #pieces = 1685
Iteration 14	LB = -6706.834326971006	UB = -6706.669342205033	CPU = 165.366493636, #pieces = 1881
Iteration 15	LB = -6706.75215375773	UB = -6706.671527119368	CPU = 167.108611094, #pieces = 2062
Iteration 16	LB = -6706.71481756795	UB = -6706.672386843629	CPU = 168.51323875100002, #pieces = 2187
Iteration 17	LB = -6706.696860184264	UB = -6706.672386843629	CPU = 168.81535147300002, #pieces = 2194
Iteration 18	LB = -6706.695036532319	UB = -6706.673204859075	CPU = 169.998944797, #pieces = 2270
Iteration 19	LB = -6706.686884806055	UB = -6706.673204859075	CPU = 170.94804417100002, #pieces = 2344
Iteration 20	LB = -6706.682755630719	UB = -6706.673204859075	CPU = 171.24892556700001, #pieces = 2349
Iteration 21	LB = -6706.682268605052	UB = -6706.673745030743	CPU = 172.123114797, #pieces = 2431
WRITING LOG...
(-7376.217576526381, -6706.066300792277, 0.0, 0.0, 9.993209814447114, 9.993209814447114, 800, 1, 0.089129919, 154.59621880400002)
(-6765.782258882006, -6706.066300792277, 0.0, 0.0, 0.966420608113845, 0.8904767029021854, 801, 2, 0.271566518, 155.35671173100002)
(-6751.749573817303, -6706.066300792277, 0.0, 0.0, 0.7519817252397403, 0.681223104215791, 821, 3, 0.32290987099999996, 155.582310881)
(-6736.904461005685, -6706.078013251554, 0.0, 0.0, 0.45967922969605945, 0.45967922969605945, 875, 4, 0.41599476199999996, 156.119757225)
(-6714.825222604602, -6706.078013251554, 0.0, 0.0, 0.13189301169857537, 0.13043703541418444, 1030, 5, 0.47367773199999996, 157.471886251)
(-6707.9083432863545, -6706.078013251554, 0.0, 0.0, 0.042841941232910484, 0.027293598899145757, 1097, 6, 0.5591560689999999, 158.346909675)
(-6707.8846435762325, -6706.078013251554, 0.0, 0.0, 0.027381903689702152, 0.026940192480742715, 1100, 7, 0.6497721089999999, 158.469943332)
(-6707.756981527996, -6706.612111007627, 0.0, 0.0, 0.017070772864428804, 0.017070772864428804, 1107, 8, 0.756518457, 158.62537890800002)
(-6707.11867855593, -6706.61338422565, 0.0, 0.0, 0.007534269553517856, 0.007534269553517856, 1188, 9, 0.877677748, 159.279124364)
(-6707.040807210155, -6706.644886344166, 0.0, 0.0, 0.005903411805745449, 0.005903411805745449, 1198, 10, 1.020374816, 159.490048363)
(-6706.956921720853, -6706.664227337437, 0.0, 0.0, 0.004364231956363165, 0.004364231956363165, 1242, 11, 1.168265516, 159.91764513500001)
(-6706.843120369564, -6706.664227337437, 0.0, 0.0, 0.005237463188198146, 0.0026673921052604434, 1673, 12, 1.360261867, 163.27164012900002)
(-6706.834326971006, -6706.669342205033, 0.0, 0.0, 0.0024600104396761543, 0.0024600104396761543, 1685, 13, 1.5554252499999999, 163.56286627600002)
(-6706.75215375773, -6706.671527119368, 0.0, 0.0, 0.0012021855854490707, 0.0012021855854490707, 1881, 14, 1.6948469659999998, 165.50646610500002)
(-6706.71481756795, -6706.672386843629, 0.0, 0.0, 0.0006326643359578582, 0.0006326643359578582, 2062, 15, 1.8999781999999998, 167.314242366)
(-6706.696860184264, -6706.672386843629, 0.0, 0.0, 0.00040511182004105973, 0.00036491033440618663, 2187, 16, 2.143636908, 168.75739703300002)
(-6706.695036532319, -6706.673204859075, 0.0, 0.0, 0.0003255216495200756, 0.0003255216495200756, 2194, 17, 2.40680361, 169.079111323)
(-6706.686884806055, -6706.673204859075, 0.0, 0.0, 0.00020927472452392793, 0.00020397515373505419, 2270, 18, 2.682002486, 170.274654543)
(-6706.682755630719, -6706.673204859075, 0.0, 0.0, 0.0001454430506351937, 0.0001424069930416761, 2344, 19, 2.937792474, 171.2043298)
(-6706.682268605052, -6706.673745030743, 0.0, 0.0, 0.00012709093409163396, 0.00012709093409163396, 2349, 20, 3.194217879, 171.505979317)
(-6706.680275710587, -6706.673745030743, 0.0, 0.0, 0.00010002891203308916, 9.737583923859144e-5, 2431, 21, 3.49072927, 172.420214818)
