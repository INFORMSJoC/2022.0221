solving instance knapsack 200 2 sqrt
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.551552789
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.448447211, #pieces = 200
Iteration 2	LB = -7387.954074724795	UB = 0.0	CPU = 0.99900496, #pieces = 353
Iteration 3	LB = -7195.742566511679	UB = -6397.763981425415	CPU = 1.168656174, #pieces = 414
Iteration 4	LB = -7033.498236919178	UB = -6397.763981425415	CPU = 1.302103794, #pieces = 464
Iteration 5	LB = -6931.779936808179	UB = -6397.763981425415	CPU = 1.394101916, #pieces = 498
Iteration 6	LB = -6875.590056881724	UB = -6397.763981425415	CPU = 1.450789216, #pieces = 516
Iteration 7	LB = -6852.084364267427	UB = -6397.763981425415	CPU = 1.49079537, #pieces = 527
Iteration 8	LB = -6836.662444638188	UB = -6397.763981425415	CPU = 1.550020957, #pieces = 539
Iteration 9	LB = -6829.019710713751	UB = -6397.763981425415	CPU = 1.585930442, #pieces = 546
Iteration 10	LB = -6823.690738278189	UB = -6446.995408731025	CPU = 1.63636069, #pieces = 554
Iteration 11	LB = -6821.363939457923	UB = -6446.995408731025	CPU = 1.6690616610000002, #pieces = 560
Iteration 12	LB = -6818.677631921768	UB = -6478.274998383263	CPU = 1.714807487, #pieces = 565
Iteration 13	LB = -6818.027092335747	UB = -6478.274998383263	CPU = 1.7860449230000002, #pieces = 586
Iteration 14	LB = -6797.293512580119	UB = -6498.855520786156	CPU = 1.821922794, #pieces = 588
Iteration 15	LB = -6797.088537472505	UB = -6544.248399309818	CPU = 1.8932741220000002, #pieces = 609
Iteration 16	LB = -6780.890483448733	UB = -6544.248399309818	CPU = 1.9262560830000002, #pieces = 612
Iteration 17	LB = -6779.798283022458	UB = -6545.1021445065435	CPU = 1.9537657560000001, #pieces = 615
Iteration 18	LB = -6779.5121207351995	UB = -6582.930297150637	CPU = 2.3420087680000004, #pieces = 739
Iteration 19	LB = -6721.528450326916	UB = -6582.930297150637	CPU = 2.377506613, #pieces = 740
Iteration 20	LB = -6721.300984125448	UB = -6582.930297150637	CPU = 2.4213058330000004, #pieces = 741
Iteration 21	LB = -6721.2805574861395	UB = -6582.930297150637	CPU = 2.457252774, #pieces = 742
Iteration 22	LB = -6721.150642676746	UB = -6596.664733443456	CPU = 2.576782717, #pieces = 782
Iteration 23	LB = -6703.106733609889	UB = -6609.638424172306	CPU = 2.672625756, #pieces = 818
Iteration 24	LB = -6691.102998946155	UB = -6620.324175185224	CPU = 3.3119239250000003, #pieces = 1022
Iteration 25	LB = -6656.057439930929	UB = -6620.324175185224	CPU = 3.3738279860000002, #pieces = 1025
Iteration 26	LB = -6655.531556144146	UB = -6620.324175185224	CPU = 3.414829306, #pieces = 1026
Iteration 27	LB = -6655.419079746443	UB = -6620.472453949972	CPU = 3.4650387790000003, #pieces = 1040
Iteration 28	LB = -6653.0537873612	UB = -6629.185039073211	CPU = 3.865741238, #pieces = 1141
Iteration 29	LB = -6646.835938332875	UB = -6629.185039073211	CPU = 3.908342745, #pieces = 1143
Iteration 30	LB = -6646.765455346253	UB = -6630.557020855769	CPU = 4.281662603, #pieces = 1224
Iteration 31	LB = -6642.517837323895	UB = -6631.774611262498	CPU = 4.409551618, #pieces = 1253
Iteration 32	LB = -6640.841343400791	UB = -6634.106963842377	CPU = 4.851857352000001, #pieces = 1344
Iteration 33	LB = -6639.1735262856155	UB = -6635.0150285602285	CPU = 5.212666814, #pieces = 1420
Iteration 34	LB = -6638.013496362628	UB = -6635.703855164135	CPU = 5.6872704, #pieces = 1496
Iteration 35	LB = -6637.3751633834845	UB = -6635.859471290842	CPU = 6.160339068000001, #pieces = 1577
Iteration 36	LB = -6636.974686215924	UB = -6635.871514615407	CPU = 6.565813682000001, #pieces = 1616
Iteration 37	LB = -6636.785510570867	UB = -6635.9319266568655	CPU = 6.803430187, #pieces = 1629
Iteration 38	LB = -6636.712143119301	UB = -6636.147823356472	CPU = 7.473804774, #pieces = 1730
Iteration 39	LB = -6636.578762293709	UB = -6636.147823356472	CPU = 7.640338585, #pieces = 1731
Iteration 40	LB = -6636.576473897865	UB = -6636.147823356472	CPU = 7.731416209000001, #pieces = 1738
Iteration 41	LB = -6636.565105771452	UB = -6636.147823356472	CPU = 7.811709775000001, #pieces = 1739
Iteration 42	LB = -6636.564884484936	UB = -6636.2155847263875	CPU = 8.258230848, #pieces = 1825
Iteration 43	LB = -6636.462497466002	UB = -6636.2155847263875	CPU = 8.334466728, #pieces = 1828
Iteration 44	LB = -6636.460402937163	UB = -6636.2155847263875	CPU = 8.42685361, #pieces = 1830
Iteration 45	LB = -6636.46028999802	UB = -6636.22650905435	CPU = 8.685714869, #pieces = 1874
Iteration 46	LB = -6636.421231236828	UB = -6636.258466326687	CPU = 9.186729852000001, #pieces = 1954
Iteration 47	LB = -6636.3917593505275	UB = -6636.2662122358415	CPU = 9.348097135, #pieces = 1963
Iteration 48	LB = -6636.387518238313	UB = -6636.2662122358415	CPU = 9.526674705000001, #pieces = 1966
Iteration 49	LB = -6636.387177385173	UB = -6636.2662122358415	CPU = 9.71030064, #pieces = 1966
Iteration 50	LB = -6636.387177384665	UB = -6636.2662122358415	CPU = 9.800202992000001, #pieces = 1967
Iteration 51	LB = -6636.387162879272	UB = -6636.295080414584	CPU = 10.356643908, #pieces = 2060
Iteration 52	LB = -6636.367424692696	UB = -6636.29993679216	CPU = 10.771765169, #pieces = 2109
Iteration 53	LB = -6636.356766265505	UB = -6636.3016268395595	CPU = 10.890871459000001, #pieces = 2110
Iteration 54	LB = -6636.356493346783	UB = -6636.302316307853	CPU = 10.945878011000001, #pieces = 2111
Iteration 55	LB = -6636.356272319771	UB = -6636.316707586644	CPU = 11.476981553, #pieces = 2181
Iteration 56	LB = -6636.347492132181	UB = -6636.316707586644	CPU = 11.658001729, #pieces = 2207
Iteration 57	LB = -6636.343178204405	UB = -6636.317033142801	CPU = 11.821423015, #pieces = 2230
Iteration 58	LB = -6636.339987723316	UB = -6636.317033142801	CPU = 11.939742438000001, #pieces = 2231
Iteration 59	LB = -6636.339969512762	UB = -6636.321288614319	CPU = 12.550557875, #pieces = 2313
Iteration 60	LB = -6636.335120288745	UB = -6636.322041838112	CPU = 13.112741107000002, #pieces = 2382
Iteration 61	LB = -6636.331893980686	UB = -6636.323332340113	CPU = 13.581095783, #pieces = 2430
Iteration 62	LB = -6636.330365880231	UB = -6636.323527024225	CPU = 13.838821743, #pieces = 2432
WRITING LOG...
(-7387.954074724795, 0.0, 0.0, 0.0, Inf, Inf, 200, 1, 0.071445838, 0.5305657460000001)
(-7195.742566511679, -6397.763981425415, 0.0, 0.0, 12.47277310327529, 12.47277310327529, 353, 2, 0.102038861, 1.0299363190000002)
(-7033.498236919178, -6397.763981425415, 0.0, 0.0, 11.893473838092348, 9.936819447223844, 414, 3, 0.13198345, 1.198983092)
(-6931.779936808179, -6397.763981425415, 0.0, 0.0, 10.13378900665976, 8.346915530694291, 464, 4, 0.143679597, 1.314208713)
(-6875.590056881724, -6397.763981425415, 0.0, 0.0, 8.875364825371637, 7.468641807412372, 498, 5, 0.15001736, 1.400830468)
(-6852.084364267427, -6397.763981425415, 0.0, 0.0, 8.17076810246962, 7.1012369971921, 516, 6, 0.162211524, 1.4633897450000002)
(-6836.662444638188, -6397.763981425415, 0.0, 0.0, 6.985186413648245, 6.860185284843642, 527, 7, 0.190433866, 1.5193883460000002)
(-6829.019710713751, -6397.763981425415, 0.0, 0.0, 7.530365118633907, 6.74072583078084, 539, 8, 0.20521989300000001, 1.5652042300000002)
(-6823.690738278189, -6446.995408731025, 0.0, 0.0, 5.842959482133549, 5.842959482133549, 546, 9, 0.22509927300000002, 1.606227579)
(-6821.363939457923, -6446.995408731025, 0.0, 0.0, 6.040723142145838, 5.806868269518213, 554, 10, 0.23940364200000003, 1.6510733990000002)
(-6818.677631921768, -6478.274998383263, 0.0, 0.0, 5.254525836329224, 5.254525836329224, 560, 11, 0.267998862, 1.6980878430000002)
(-6818.027092335747, -6478.274998383263, 0.0, 0.0, 5.338258728055896, 5.244483972002938, 565, 12, 0.282472414, 1.729671823)
(-6797.293512580119, -6498.855520786156, 0.0, 0.0, 4.592162279026334, 4.592162279026334, 586, 13, 0.307455499, 1.811431502)
(-6797.088537472505, -6544.248399309818, 0.0, 0.0, 3.8635473890225924, 3.8635473890225924, 588, 14, 0.33136169600000004, 1.846238615)
(-6780.890483448733, -6544.248399309818, 0.0, 0.0, 4.268351249685813, 3.6160315088875996, 609, 15, 0.35077940300000005, 1.913108856)
(-6779.798283022458, -6545.1021445065435, 0.0, 0.0, 3.5858285070906137, 3.5858285070906137, 612, 16, 0.36563089100000007, 1.94151007)
(-6779.5121207351995, -6582.930297150637, 0.0, 0.0, 2.9862358358807386, 2.9862358358807386, 615, 17, 0.38066722700000005, 1.9692058010000002)
(-6721.528450326916, -6582.930297150637, 0.0, 0.0, 2.796919784908838, 2.105417297768899, 739, 18, 0.40810221800000007, 2.369832623)
(-6721.300984125448, -6582.930297150637, 0.0, 0.0, 2.504551835071114, 2.101961903420179, 740, 19, 0.42574074600000006, 2.39552194)
(-6721.2805574861395, -6582.930297150637, 0.0, 0.0, 2.218362417774429, 2.1016516063581356, 741, 20, 0.45315213200000004, 2.449160367)
(-6721.150642676746, -6596.664733443456, 0.0, 0.0, 1.8871037753696671, 1.8871037753696671, 742, 21, 0.480957118, 2.48547382)
(-6703.106733609889, -6609.638424172306, 0.0, 0.0, 1.4141213700246684, 1.4141213700246684, 782, 22, 0.500723331, 2.5969864620000003)
(-6691.102998946155, -6620.324175185224, 0.0, 0.0, 1.0691141685512833, 1.0691141685512833, 818, 23, 0.512245359, 2.684541804)
(-6656.057439930929, -6620.324175185224, 0.0, 0.0, 0.7192801751115858, 0.5397509819782409, 1022, 24, 0.563042311, 3.363157954)
(-6655.531556144146, -6620.324175185224, 0.0, 0.0, 0.7471066130626618, 0.531807507114059, 1025, 25, 0.59637745, 3.407608138)
(-6655.419079746443, -6620.472453949972, 0.0, 0.0, 0.5278569775729566, 0.5278569775729566, 1026, 26, 0.6127651789999999, 3.431661655)
(-6653.0537873612, -6629.185039073211, 0.0, 0.0, 0.36005554449459903, 0.36005554449459903, 1040, 27, 0.6485549559999999, 3.501274376)
(-6646.835938332875, -6629.185039073211, 0.0, 0.0, 0.48339457854423173, 0.2662604702633592, 1141, 28, 0.6809405719999999, 3.898566665)
(-6646.765455346253, -6630.557020855769, 0.0, 0.0, 0.2444505708872014, 0.2444505708872014, 1143, 29, 0.7134915449999999, 3.941370968)
(-6642.517837323895, -6631.774611262498, 0.0, 0.0, 0.16199624823123557, 0.16199624823123557, 1224, 30, 0.7590424269999999, 4.327687498)
(-6640.841343400791, -6634.106963842377, 0.0, 0.0, 0.10151147087494904, 0.10151147087494904, 1253, 31, 0.8203826129999999, 4.471333345000001)
(-6639.1735262856155, -6635.0150285602285, 0.0, 0.0, 0.06267503099068833, 0.06267503099068833, 1344, 32, 0.8455944679999999, 4.877550408)
(-6638.013496362628, -6635.703855164135, 0.0, 0.0, 0.034806272987831684, 0.034806272987831684, 1420, 33, 0.976220323, 5.343761525000001)
(-6637.3751633834845, -6635.859471290842, 0.0, 0.0, 0.02284093114389075, 0.02284093114389075, 1496, 34, 1.092371383, 5.803908495)
(-6636.974686215924, -6635.871514615407, 0.0, 0.0, 0.01662436649182617, 0.01662436649182617, 1577, 35, 1.3312814199999998, 6.399723284)
(-6636.785510570867, -6635.9319266568655, 0.0, 0.0, 0.012863060131349914, 0.012863060131349914, 1616, 36, 1.5298115509999999, 6.764829451000001)
(-6636.712143119301, -6636.147823356472, 0.0, 0.0, 0.00850372502014761, 0.00850372502014761, 1629, 37, 1.7251435329999998, 6.999300567000001)
(-6636.578762293709, -6636.147823356472, 0.0, 0.0, 0.280205030794598, 0.006493811601360171, 1730, 38, 1.8813971449999998, 7.630541986000001)
(-6636.576473897865, -6636.147823356472, 0.0, 0.0, 0.011324394077901862, 0.006459327802859592, 1731, 39, 1.9458008619999998, 7.705201239000001)
(-6636.565105771452, -6636.147823356472, 0.0, 0.0, 0.013356644248833233, 0.006288021697035986, 1738, 40, 2.007843839, 7.793930492)
(-6636.564884484936, -6636.2155847263875, 0.0, 0.0, 0.005263538444291139, 0.005263538444291139, 1739, 41, 2.038670003, 7.843011487)
(-6636.462497466002, -6636.2155847263875, 0.0, 0.0, 0.008223298887466417, 0.0037206859310391915, 1825, 42, 2.096591794, 8.316595372)
(-6636.460402937163, -6636.2155847263875, 0.0, 0.0, 0.005923232334132592, 0.003689123833453853, 1828, 43, 2.173316729, 8.411620686000001)
(-6636.46028999802, -6636.22650905435, 0.0, 0.0, 0.003522799340127815, 0.003522799340127815, 1830, 44, 2.206994068, 8.461039042000001)
(-6636.421231236828, -6636.258466326687, 0.0, 0.0, 0.0024526608022719717, 0.0024526608022719717, 1874, 45, 2.287508946, 8.766700932000001)
(-6636.3917593505275, -6636.2662122358415, 0.0, 0.0, 0.0018918336105102711, 0.0018918336105102711, 1954, 46, 2.407942511, 9.307648726)
(-6636.387518238313, -6636.2662122358415, 0.0, 0.0, 0.0019409217488491751, 0.0018279255019552887, 1963, 47, 2.567417549, 9.508062265000001)
(-6636.387177385173, -6636.2662122358415, 0.0, 0.0, 0.003067281095295779, 0.0018227892833592137, 1966, 48, 2.738985075, 9.698717773)
(-6636.387177384665, -6636.2662122358415, 0.0, 0.0, 0.0030672810876346355, 0.001822789275698166, 1966, 49, 2.811925614, 9.783705581000001)
(-6636.387162879272, -6636.295080414584, 0.0, 0.0, 0.0013875583224140472, 0.0013875583224140472, 1967, 50, 2.891703285, 9.880431747000001)
(-6636.367424692696, -6636.29993679216, 0.0, 0.0, 0.0010169507282419075, 0.0010169507282419075, 2060, 51, 3.051182004, 10.51660369)
(-6636.356766265505, -6636.3016268395595, 0.0, 0.0, 0.0008308758258142313, 0.0008308758258142313, 2109, 52, 3.146592923, 10.867625342)
(-6636.356493346783, -6636.302316307853, 0.0, 0.0, 0.0008163738833425302, 0.0008163738833425302, 2110, 53, 3.187063316, 10.931800254)
(-6636.356272319771, -6636.316707586644, 0.0, 0.0, 0.0005961851260320039, 0.0005961851260320039, 2111, 54, 3.281175761, 11.040475158000001)
(-6636.347492132181, -6636.316707586644, 0.0, 0.0, 0.0005366419484038183, 0.0004638799938835271, 2181, 55, 3.322696482, 11.518917145000001)
(-6636.343178204405, -6636.317033142801, 0.0, 0.0, 0.0003939694483230083, 0.0003939694483230083, 2207, 56, 3.365941115, 11.701713813000001)
(-6636.339987723316, -6636.317033142801, 0.0, 0.0, 0.0004160128105949572, 0.000345893368270307, 2230, 57, 3.4687386510000002, 11.924665337)
(-6636.339969512762, -6636.321288614319, 0.0, 0.0, 0.00028149478649720463, 0.00028149478649720463, 2231, 58, 3.5815093030000003, 12.052941051000001)
(-6636.335120288745, -6636.322041838112, 0.0, 0.0, 0.0001970737789741865, 0.0001970737789741865, 2313, 59, 3.745116417, 12.71467374)
(-6636.331893980686, -6636.323332340113, 0.0, 0.0, 0.00012901180585056475, 0.00012901180585056475, 2382, 60, 3.924942204, 13.293063897000001)
(-6636.330365880231, -6636.323527024225, 0.0, 0.0, 0.00010305187771352442, 0.00010305187771352442, 2430, 61, 4.15851829, 13.815201964000002)
(-6636.33028615149, -6636.3253371048995, 0.0, 0.0, 7.457510503799875e-5, 7.457510503799875e-5, 2432, 62, 4.38010473, 14.060869362)
