solving instance knapsack 50 2 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3566.063378387
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 34.936621613, #pieces = 200
Iteration 2	LB = -1836.0107067590716	UB = -1669.4258240238155	CPU = 35.229837422, #pieces = 200
Iteration 3	LB = -1681.6575249460961	UB = -1669.4258240238155	CPU = 35.596912145000005, #pieces = 244
Iteration 4	LB = -1673.6935814457847	UB = -1669.4258240238155	CPU = 35.695169027000006, #pieces = 246
Iteration 5	LB = -1673.1598278079864	UB = -1669.4258240238155	CPU = 35.973133039000004, #pieces = 263
Iteration 6	LB = -1669.8131550412834	UB = -1669.4258240238155	CPU = 36.121839688, #pieces = 282
Iteration 7	LB = -1669.5518829181567	UB = -1669.4258240238155	CPU = 37.052323755, #pieces = 409
Iteration 8	LB = -1669.4683965689924	UB = -1669.4258240238155	CPU = 37.585583491, #pieces = 469
Iteration 9	LB = -1669.4439139868732	UB = -1669.4258240238155	CPU = 38.023178393, #pieces = 510
Iteration 10	LB = -1669.4337871030614	UB = -1669.4258240238155	CPU = 38.447171832, #pieces = 541
Iteration 11	LB = -1669.4296102696935	UB = -1669.4258240238155	CPU = 38.703889352000004, #pieces = 561
Iteration 12	LB = -1669.4282175944168	UB = -1669.4258240238155	CPU = 38.934194177, #pieces = 581
Iteration 13	LB = -1669.4276037697932	UB = -1669.4258240238155	CPU = 39.174823289, #pieces = 602
WRITING LOG...
(-1836.0107067590716, -1669.4258240238155, 0.0, 0.0, 9.978573491437714, 9.978573491437714, 200, 1, 0.076151039, 35.019259152000004)
(-1681.6575249460961, -1669.4258240238155, 0.0, 0.0, 0.7326890926365686, 0.7326890926365686, 200, 2, 0.119392568, 35.27322143)
(-1673.6935814457847, -1669.4258240238155, 0.0, 0.0, 0.5311016148269526, 0.25564223103262323, 244, 3, 0.19803384300000001, 35.675707863)
(-1673.1598278079864, -1669.4258240238155, 0.0, 0.0, 0.22366994270945464, 0.22366994270945464, 246, 4, 0.24842313900000002, 35.745695563000005)
(-1669.8131550412834, -1669.4258240238155, 0.0, 0.0, 0.02320145117524915, 0.02320145117524915, 263, 5, 0.285734729, 36.010593777000004)
(-1669.5518829181567, -1669.4258240238155, 0.0, 0.0, 0.007551032967572854, 0.007551032967572854, 282, 6, 0.332813484, 36.169054229000004)
(-1669.4683965689924, -1669.4258240238155, 0.0, 0.0, 0.002550130983014788, 0.002550130983014788, 409, 7, 0.40261094, 37.122275776)
(-1669.4439139868732, -1669.4258240238155, 0.0, 0.0, 0.0010836038832870386, 0.0010836038832870386, 469, 8, 0.48742352499999997, 37.670538226000005)
(-1669.4337871030614, -1669.4258240238155, 0.0, 0.0, 0.0004769950920424549, 0.0004769950920424549, 510, 9, 0.5910532909999999, 38.126951267)
(-1669.4296102696935, -1669.4258240238155, 0.0, 0.0, 0.0002267992877270971, 0.0002267992877270971, 541, 10, 0.7104965889999999, 38.566801683)
(-1669.4282175944168, -1669.4258240238155, 0.0, 0.0, 0.00014337687645813132, 0.00014337687645813132, 561, 11, 0.8268732609999999, 38.820426108)
(-1669.4276037697932, -1669.4258240238155, 0.0, 0.0, 0.00010660826926941462, 0.00010660826926941462, 581, 12, 0.955976725, 39.063446905)
(-1669.427306103416, -1669.4258240238155, 0.0, 0.0, 8.877780486778073e-5, 8.877780486778073e-5, 602, 13, 1.079931427, 39.298933091)
