solving instance knapsack 50 4 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.866177337
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.133822663, #pieces = 50
Iteration 2	LB = -1833.9686879998765	UB = 0.0	CPU = 0.5478157770000001, #pieces = 122
Iteration 3	LB = -1802.1698490985775	UB = -1634.0583172506406	CPU = 0.698623475, #pieces = 158
Iteration 4	LB = -1685.8943002891638	UB = -1638.8446656649178	CPU = 0.9216464390000001, #pieces = 223
Iteration 5	LB = -1656.5891760850016	UB = -1638.8446656649178	CPU = 1.042187717, #pieces = 227
Iteration 6	LB = -1654.530149859183	UB = -1638.8446656649178	CPU = 1.1940057130000001, #pieces = 266
Iteration 7	LB = -1643.966428108793	UB = -1638.8446656649178	CPU = 1.221250486, #pieces = 270
Iteration 8	LB = -1643.2468383778737	UB = -1638.844936154149	CPU = 1.438627348, #pieces = 339
Iteration 9	LB = -1640.3881158035806	UB = -1638.844936154149	CPU = 1.585172945, #pieces = 376
Iteration 10	LB = -1639.1755184719584	UB = -1638.8567754094963	CPU = 1.834551854, #pieces = 443
Iteration 11	LB = -1638.9810104009484	UB = -1638.8567754094963	CPU = 2.087767918, #pieces = 505
Iteration 12	LB = -1638.902377156843	UB = -1638.8567754094963	CPU = 2.259200651, #pieces = 540
Iteration 13	LB = -1638.8685996784495	UB = -1638.8567754094963	CPU = 2.5473621530000004, #pieces = 608
Iteration 14	LB = -1638.8616678210983	UB = -1638.8567754094963	CPU = 2.75717159, #pieces = 633
WRITING LOG...
(-1833.9686879998765, 0.0, 0.0, 0.0, Inf, Inf, 50, 1, 0.07804415, 0.221516819)
(-1802.1698490985775, -1634.0583172506406, 0.0, 0.0, 10.28797626579144, 10.28797626579144, 122, 2, 0.084340543, 0.5542474580000001)
(-1685.8943002891638, -1638.8446656649178, 0.0, 0.0, 2.870902630979785, 2.870902630979785, 158, 3, 0.12803545500000002, 0.7424845910000001)
(-1656.5891760850016, -1638.8446656649178, 0.0, 0.0, 1.932489815573483, 1.0827451064670857, 223, 4, 0.23845882300000004, 1.032235089)
(-1654.530149859183, -1638.8446656649178, 0.0, 0.0, 0.9571062177452451, 0.9571062177452451, 227, 5, 0.2703985990000001, 1.0742729580000001)
(-1643.966428108793, -1638.8446656649178, 0.0, 0.0, 1.0637403228343227, 0.31252275161765997, 266, 6, 0.28988275500000005, 1.213627951)
(-1643.2468383778737, -1638.844936154149, 0.0, 0.0, 0.26859784758248645, 0.26859784758248645, 270, 7, 0.30256994000000004, 1.234074507)
(-1640.3881158035806, -1638.844936154149, 0.0, 0.0, 0.09416263951444223, 0.09416263951444223, 339, 8, 0.31248276300000005, 1.4486823530000001)
(-1639.1755184719584, -1638.8567754094963, 0.0, 0.0, 0.01944911033378416, 0.01944911033378416, 376, 9, 0.32693424300000007, 1.599769739)
(-1638.9810104009484, -1638.8567754094963, 0.0, 0.0, 0.007580588695499066, 0.007580588695499066, 443, 10, 0.35309615400000005, 1.8608686010000002)
(-1638.902377156843, -1638.8567754094963, 0.0, 0.0, 0.00278253402193823, 0.00278253402193823, 505, 11, 0.38643213200000004, 2.121257062)
(-1638.8685996784495, -1638.8567754094963, 0.0, 0.0, 0.0007214949549359384, 0.0007214949549359384, 540, 12, 0.42629578, 2.29924639)
(-1638.8616678210983, -1638.8567754094963, 0.0, 0.0, 0.00029852587946641745, 0.00029852587946641745, 608, 13, 0.481498348, 2.602726511)
(-1638.8572385660473, -1638.8567754094963, 0.0, 0.0, 2.8260953482901754e-5, 2.8260953482901754e-5, 633, 14, 0.543218273, 2.819079138)
