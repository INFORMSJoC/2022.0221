solving instance knapsack 500 10 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3082.590008738
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 518.4099912620001, #pieces = 1500
Iteration 2	LB = -37010.6017150951	UB = -33685.879480939795	CPU = 1624.4390634400002, #pieces = 2192
Iteration 3	LB = -37010.59321894638	UB = -33685.879480939795	CPU = 1624.9826838360002, #pieces = 2192
Iteration 4	LB = -34669.4482497629	UB = -34041.34607560442	CPU = 1746.315511078, #pieces = 2500
Iteration 5	LB = -34342.517836876345	UB = -34167.01395572998	CPU = 1835.4495321430002, #pieces = 2584
Iteration 6	LB = -34321.056052865766	UB = -34181.93882212699	CPU = 1842.6676630380002, #pieces = 2846
Iteration 7	LB = -34289.67993751972	UB = -34199.427147866125	CPU = 1856.124398251, #pieces = 3046
Iteration 8	LB = -34272.77322371033	UB = -34225.05673998826	CPU = 1867.3194325420002, #pieces = 3480
Iteration 9	LB = -34263.64193503798	UB = -34230.56426232745	CPU = 1868.9549247940001, #pieces = 3793
Iteration 10	LB = -34248.47448195672	UB = -34234.24343265923	CPU = 1869.4246247120002, #pieces = 3858
Iteration 11	LB = -34247.04365480628	UB = -34236.67425938918	CPU = 1870.6909006750002, #pieces = 4105
Iteration 12	LB = -34245.74912435202	UB = -34237.11076082543	CPU = 1871.2453626810002, #pieces = 4196
Iteration 13	LB = -34244.353653716884	UB = -34237.70805288734	CPU = 1871.379622723, #pieces = 4204
Iteration 14	LB = -34244.2859134116	UB = -34238.826267765275	CPU = 1872.8885575470001, #pieces = 4507
Iteration 15	LB = -34243.09438939061	UB = -34238.86912191724	CPU = 1873.1113176990002, #pieces = 4512
Iteration 16	LB = -34243.06573183037	UB = -34239.400505639635	CPU = 1874.5957353800002, #pieces = 4802
Iteration 17	LB = -34241.85142992187	UB = -34239.400505639635	CPU = 1874.8830916000002, #pieces = 4825
Iteration 18	LB = -34241.74110396276	UB = -34239.80598791338	CPU = 1875.864170086, #pieces = 4995
Iteration 19	LB = -34241.3373964413	UB = -34239.80598791338	CPU = 1876.115105106, #pieces = 4999
Iteration 20	LB = -34241.333088232255	UB = -34240.01013546949	CPU = 1877.5601921660002, #pieces = 5257
Iteration 21	LB = -34241.00192017769	UB = -34240.01013546949	CPU = 1878.0119252180002, #pieces = 5286
Iteration 22	LB = -34240.95913497348	UB = -34240.07453986884	CPU = 1878.687413133, #pieces = 5385
Iteration 23	LB = -34240.843752274195	UB = -34240.07453986884	CPU = 1878.9755675220001, #pieces = 5388
Iteration 24	LB = -34240.84119019669	UB = -34240.1904594587	CPU = 1879.967746233, #pieces = 5527
Iteration 25	LB = -34240.72829136447	UB = -34240.19355852588	CPU = 1880.326638685, #pieces = 5532
Iteration 26	LB = -34240.72628850428	UB = -34240.27594265835	CPU = 1881.884117068, #pieces = 5768
Iteration 27	LB = -34240.615739575085	UB = -34240.27594265835	CPU = 1882.4810073310002, #pieces = 5773
Iteration 28	LB = -34240.614527326026	UB = -34240.27594265835	CPU = 1883.9848340610001, #pieces = 5981
Iteration 29	LB = -34240.540778113325	UB = -34240.27594265835	CPU = 1884.7358028570002, #pieces = 5993
Iteration 30	LB = -34240.53801297248	UB = -34240.33688602754	CPU = 1885.7000701410002, #pieces = 6041
Iteration 31	LB = -34240.52032244419	UB = -34240.34846499383	CPU = 1886.254386218, #pieces = 6044
Iteration 32	LB = -34240.51981553947	UB = -34240.364006710355	CPU = 1888.148218321, #pieces = 6276
Iteration 33	LB = -34240.48606643066	UB = -34240.364006710355	CPU = 1888.9192117650002, #pieces = 6279
Iteration 34	LB = -34240.48606643066	UB = -34240.364006710355	CPU = 1890.152913374, #pieces = 6359
Iteration 35	LB = -34240.469880936194	UB = -34240.364006710355	CPU = 1890.9626433350002, #pieces = 6370
Iteration 36	LB = -34240.46862552604	UB = -34240.37379035271	CPU = 1891.5343157510001, #pieces = 6375
Iteration 37	LB = -34240.46759305644	UB = -34240.377681276754	CPU = 1892.5167819740002, #pieces = 6453
Iteration 38	LB = -34240.45538338499	UB = -34240.377681276754	CPU = 1893.1660042150002, #pieces = 6471
Iteration 39	LB = -34240.45218555243	UB = -34240.38639059903	CPU = 1895.0166326790002, #pieces = 6690
Iteration 40	LB = -34240.43940914947	UB = -34240.38639059903	CPU = 1895.673598303, #pieces = 6706
Iteration 41	LB = -34240.438106631154	UB = -34240.38639059903	CPU = 1896.542606598, #pieces = 6707
Iteration 42	LB = -34240.43808329001	UB = -34240.38639059903	CPU = 1897.4734158180001, #pieces = 6715
Iteration 43	LB = -34240.43762040673	UB = -34240.38639059903	CPU = 1898.2700079840001, #pieces = 6719
Iteration 44	LB = -34240.43762040673	UB = -34240.391198594785	CPU = 1899.819748394, #pieces = 6908
Iteration 45	LB = -34240.427776514254	UB = -34240.391198594785	CPU = 1900.500512127, #pieces = 6912
WRITING LOG...
(-37010.6017150951, -33685.879480939795, 0.0, 0.0, 9.869780113761038, 9.869780113761038, 1500, 1, 0.13064292300000002, 518.5503917990001)
(-37010.59321894638, -33685.879480939795, 0.0, 0.0, 9.870711343730772, 9.86975489206918, 2192, 2, 0.20101526500000003, 1624.5105087250001)
(-34669.4482497629, -34041.34607560442, 0.0, 0.0, 1.845115562596991, 1.845115562596991, 2192, 3, 0.25904499000000003, 1625.0419215450002)
(-34342.517836876345, -34167.01395572998, 0.0, 0.0, 0.5136646748637935, 0.5136646748637935, 2500, 4, 0.366937353, 1746.424487513)
(-34321.056052865766, -34181.93882212699, 0.0, 0.0, 0.4069904620176793, 0.4069904620176793, 2584, 5, 0.446911363, 1835.530643005)
(-34289.67993751972, -34199.427147866125, 0.0, 0.0, 0.2639014661367768, 0.2639014661367768, 2846, 6, 0.492431451, 1842.714150793)
(-34272.77322371033, -34225.05673998826, 0.0, 0.0, 0.13941973591038143, 0.13941973591038143, 3046, 7, 0.5853317370000001, 1856.218329189)
(-34263.64193503798, -34230.56426232745, 0.0, 0.0, 0.09663198204108138, 0.09663198204108138, 3480, 8, 0.6757983860000001, 1867.411090649)
(-34248.47448195672, -34234.24343265923, 0.0, 0.0, 0.041569632831194865, 0.041569632831194865, 3793, 9, 0.771255168, 1869.051462699)
(-34247.04365480628, -34236.67425938918, 0.0, 0.0, 0.03028739105478992, 0.03028739105478992, 3858, 10, 0.8969108750000001, 1869.551485381)
(-34245.74912435202, -34237.11076082543, 0.0, 0.0, 0.02523099448120633, 0.02523099448120633, 4105, 11, 0.9814394800000001, 1870.776491693)
(-34244.353653716884, -34237.70805288734, 0.0, 0.0, 0.019410180200371895, 0.019410180200371895, 4196, 12, 1.053958152, 1871.3189589170001)
(-34244.2859134116, -34238.826267765275, 0.0, 0.0, 0.015945773384954, 0.015945773384954, 4204, 13, 1.1230956120000002, 1871.449911226)
(-34243.09438939061, -34238.86912191724, 0.0, 0.0, 0.012340557914815708, 0.012340557914815708, 4507, 14, 1.3081493660000003, 1873.074768123)
(-34243.06573183037, -34239.400505639635, 0.0, 0.0, 0.010704703168307137, 0.010704703168307137, 4512, 15, 1.4902548510000004, 1873.2945465470002)
(-34241.85142992187, -34239.400505639635, 0.0, 0.0, 0.007801782330775273, 0.007158198584215883, 4802, 16, 1.6551161410000004, 1874.761669939)
(-34241.74110396276, -34239.80598791338, 0.0, 0.0, 0.005651655999644334, 0.005651655999644334, 4825, 17, 1.8210550050000003, 1875.050161263)
(-34241.3373964413, -34239.80598791338, 0.0, 0.0, 0.004555576633592668, 0.004472596978083122, 4995, 18, 2.0283250040000005, 1876.072611318)
(-34241.333088232255, -34240.01013546949, 0.0, 0.0, 0.0038637627662156207, 0.0038637627662156207, 4999, 19, 2.2369177400000004, 1876.324811569)
(-34241.00192017769, -34240.01013546949, 0.0, 0.0, 0.003182479442434316, 0.002896566631470319, 5257, 20, 2.4983009540000003, 1877.8227237400001)
(-34240.95913497348, -34240.07453986884, 0.0, 0.0, 0.002583508115932123, 0.002583508115932123, 5286, 21, 2.7037013200000004, 1878.218407688)
(-34240.843752274195, -34240.07453986884, 0.0, 0.0, 0.0024209473879928285, 0.0022465266670542126, 5385, 22, 2.9553184000000003, 1878.9401295030002)
(-34240.84119019669, -34240.1904594587, 0.0, 0.0, 0.0019004880792281667, 0.0019004880792281667, 5388, 23, 3.2214876350000003, 1879.242823427)
(-34240.72829136447, -34240.19355852588, 0.0, 0.0, 0.0015617109105101584, 0.0015617109105101584, 5527, 24, 3.5278556450000003, 1880.2752584050002)
(-34240.72628850428, -34240.27594265835, 0.0, 0.0, 0.0013152518007845272, 0.0013152518007845272, 5532, 25, 3.7880030720000004, 1880.5879208430001)
(-34240.615739575085, -34240.27594265835, 0.0, 0.0, 0.0014963125256141417, 0.0009923895394521292, 5768, 26, 4.3300384130000005, 1882.4272901210002)
(-34240.614527326026, -34240.27594265835, 0.0, 0.0, 0.001033234393776426, 0.0009888491209668606, 5773, 27, 4.775954856, 1882.9280034370001)
(-34240.540778113325, -34240.27594265835, 0.0, 0.0, 0.0007922864904519693, 0.0007734618010035565, 5981, 28, 5.4465015260000005, 1884.6565613680002)
(-34240.53801297248, -34240.33688602754, 0.0, 0.0, 0.0005873976813153736, 0.0005873976813153736, 5993, 29, 6.142111637, 1885.4325454690002)
(-34240.52032244419, -34240.34846499383, 0.0, 0.0, 0.0005019150156417246, 0.0005019150156417246, 6041, 30, 6.658022476, 1886.217034013)
(-34240.51981553947, -34240.364006710355, 0.0, 0.0, 0.0004550443128541194, 0.0004550443128541194, 6044, 31, 7.171664407, 1886.7692133060002)
(-34240.48606643066, -34240.364006710355, 0.0, 0.0, 0.0006238620336754849, 0.0003564790382558533, 6276, 32, 7.8962056899999995, 1888.8738445650001)
(-34240.48606643066, -34240.364006710355, 0.0, 0.0, 0.000413712369674704, 0.0003564790382558533, 6279, 33, 8.663315999, 1889.6874459740002)
(-34240.469880936194, -34240.364006710355, 0.0, 0.0, 0.00031107317567104925, 0.000309208820964832, 6359, 34, 9.399976838, 1890.890696054)
(-34240.46862552604, -34240.37379035271, 0.0, 0.0, 0.0002769688611229346, 0.0002769688611229346, 6370, 35, 9.923033794, 1891.4868228930002)
(-34240.46759305644, -34240.377681276754, 0.0, 0.0, 0.0002625899180319643, 0.0002625899180319643, 6375, 36, 10.439754662, 1892.052282454)
(-34240.45538338499, -34240.377681276754, 0.0, 0.0, 0.0002302215415189301, 0.00022693122419018433, 6453, 37, 10.978753922000001, 1893.056870281)
(-34240.45218555243, -34240.38639059903, 0.0, 0.0, 0.00019215598985708235, 0.00019215598985708235, 6471, 38, 11.519997171000002, 1893.708484297)
(-34240.43940914947, -34240.38639059903, 0.0, 0.0, 0.003285350750159895, 0.00015484214995308397, 6690, 39, 12.068342882000001, 1895.5661468070002)
(-34240.438106631154, -34240.38639059903, 0.0, 0.0, 0.00042742410865325635, 0.00015103810901886624, 6706, 40, 12.897876418000001, 1896.5043507460002)
(-34240.43808329001, -34240.38639059903, 0.0, 0.0, 0.00020613312486666348, 0.0001509699405677489, 6707, 41, 13.751514816, 1897.397352119)
(-34240.43762040673, -34240.38639059903, 0.0, 0.0, 0.00015068373449686815, 0.00014961807707603904, 6715, 42, 14.495354423, 1898.2184826950001)
(-34240.43762040673, -34240.391198594785, 0.0, 0.0, 0.00013609119567869376, 0.00013557617281820966, 6719, 43, 15.02657443, 1898.802562196)
(-34240.427776514254, -34240.391198594785, 0.0, 0.0, 0.00011610035427566485, 0.00010682681531536734, 6908, 44, 15.662122703, 1900.456539296)
(-34240.427776514254, -34240.39721980063, 0.0, 0.0, 8.924398394048195e-5, 8.924170309022937e-5, 6912, 45, 16.303572311, 1901.1433569290002)
