solving instance knapsack 100 3 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.693756415
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.30624358500000004, #pieces = 100
Iteration 2	LB = -3680.2159729935347	UB = 0.0	CPU = 0.751448623, #pieces = 256
Iteration 3	LB = -3611.5078524018927	UB = -3281.31477238351	CPU = 1.004780943, #pieces = 332
Iteration 4	LB = -3386.459994715126	UB = -3281.31477238351	CPU = 1.2329524900000002, #pieces = 401
Iteration 5	LB = -3344.2589419895867	UB = -3281.31477238351	CPU = 1.3878593620000002, #pieces = 420
Iteration 6	LB = -3334.5450708607286	UB = -3281.31477238351	CPU = 1.481465427, #pieces = 424
Iteration 7	LB = -3332.031921726012	UB = -3281.31477238351	CPU = 1.615599124, #pieces = 426
Iteration 8	LB = -3331.034322556612	UB = -3281.31477238351	CPU = 1.937473428, #pieces = 480
Iteration 9	LB = -3310.829298911859	UB = -3281.31477238351	CPU = 2.075688447, #pieces = 482
Iteration 10	LB = -3310.1311021512292	UB = -3282.168831164712	CPU = 2.432797852, #pieces = 552
Iteration 11	LB = -3294.263989711009	UB = -3282.168831164712	CPU = 2.617375204, #pieces = 556
Iteration 12	LB = -3293.895653025655	UB = -3282.168831164712	CPU = 2.777075035, #pieces = 562
Iteration 13	LB = -3293.088238501286	UB = -3282.458665281566	CPU = 3.0293013760000003, #pieces = 599
Iteration 14	LB = -3289.9778570711333	UB = -3282.458665281566	CPU = 3.3542116650000002, #pieces = 613
Iteration 15	LB = -3288.8504280865723	UB = -3282.6943598573826	CPU = 3.9180797980000004, #pieces = 720
Iteration 16	LB = -3284.548771339885	UB = -3282.6943598573826	CPU = 4.188093105, #pieces = 723
Iteration 17	LB = -3284.1755371838617	UB = -3282.6943598573826	CPU = 4.490609641000001, #pieces = 725
Iteration 18	LB = -3284.172082418185	UB = -3282.6943598573826	CPU = 5.054313664, #pieces = 836
Iteration 19	LB = -3283.208596362287	UB = -3282.6943598573826	CPU = 5.438714074, #pieces = 838
Iteration 20	LB = -3283.1796679785825	UB = -3282.6943598573826	CPU = 5.852412567, #pieces = 841
Iteration 21	LB = -3283.1249461733964	UB = -3282.6943598573826	CPU = 6.591385522, #pieces = 975
Iteration 22	LB = -3282.8442660120936	UB = -3282.6943598573826	CPU = 7.290572943000001, #pieces = 1078
Iteration 23	LB = -3282.739789987026	UB = -3282.6943598573826	CPU = 8.082173203, #pieces = 1186
Iteration 24	LB = -3282.708970597441	UB = -3282.6943598573826	CPU = 8.955972179, #pieces = 1271
Iteration 25	LB = -3282.6979275766516	UB = -3282.6943598573826	CPU = 9.825536611, #pieces = 1337
WRITING LOG...
(-3680.2159729935347, 0.0, 0.0, 0.0, Inf, Inf, 100, 1, 0.08438820000000001, 0.40095735400000004)
(-3611.5078524018927, -3281.31477238351, 0.0, 0.0, 10.062828558765004, 10.062828558765004, 256, 2, 0.092948311, 0.760202534)
(-3386.459994715126, -3281.31477238351, 0.0, 0.0, 3.395701807664344, 3.204362568826022, 332, 3, 0.167768133, 1.0798310340000001)
(-3344.2589419895867, -3281.31477238351, 0.0, 0.0, 2.035768285956229, 1.918260635518206, 401, 4, 0.27953927, 1.344954263)
(-3334.5450708607286, -3281.31477238351, 0.0, 0.0, 1.8974606280997477, 1.622224692529353, 420, 5, 0.356101639, 1.464645672)
(-3332.031921726012, -3281.31477238351, 0.0, 0.0, 1.6718188351944305, 1.5456349926972035, 424, 6, 0.482729992, 1.6083366680000002)
(-3331.034322556612, -3281.31477238351, 0.0, 0.0, 1.633312741028904, 1.515232570540204, 426, 7, 0.647917811, 1.7810245230000001)
(-3310.829298911859, -3281.31477238351, 0.0, 0.0, 1.0525295697588022, 0.8994725765644859, 480, 8, 0.780119766, 2.0699091050000002)
(-3310.1311021512292, -3282.168831164712, 0.0, 0.0, 0.851944931077612, 0.851944931077612, 482, 9, 0.922559758, 2.218384904)
(-3294.263989711009, -3282.168831164712, 0.0, 0.0, 0.3709274895923897, 0.3685111634554345, 552, 10, 1.094331425, 2.604823923)
(-3293.895653025655, -3282.168831164712, 0.0, 0.0, 0.3834097462404352, 0.35728880701062243, 556, 11, 1.242304264, 2.765597097)
(-3293.088238501286, -3282.458665281566, 0.0, 0.0, 0.3238296138241909, 0.3238296138241909, 562, 12, 1.384774075, 2.9198002360000004)
(-3289.9778570711333, -3282.458665281566, 0.0, 0.0, 0.2393867567896406, 0.2290719413803263, 599, 13, 1.656788334, 3.301517049)
(-3288.8504280865723, -3282.6943598573826, 0.0, 0.0, 0.18753095946030035, 0.18753095946030035, 613, 14, 1.903908095, 3.601547984)
(-3284.548771339885, -3282.6943598573826, 0.0, 0.0, 0.06367501533000697, 0.05649053122884157, 720, 15, 2.138126063, 4.152521661000001)
(-3284.1755371838617, -3282.6943598573826, 0.0, 0.0, 0.10502550589810268, 0.04512078080103399, 723, 16, 2.433996647, 4.484175143)
(-3284.172082418185, -3282.6943598573826, 0.0, 0.0, 0.045015539030167404, 0.04501553903015355, 725, 17, 2.644684647, 4.701521570000001)
(-3283.208596362287, -3282.6943598573826, 0.0, 0.0, 0.03408742831035045, 0.015665074129135287, 836, 18, 3.019423538, 5.429309616)
(-3283.1796679785825, -3282.6943598573826, 0.0, 0.0, 0.030797831125330907, 0.014783835106143181, 838, 19, 3.415002038, 5.83451781)
(-3283.1249461733964, -3282.6943598573826, 0.0, 0.0, 0.01311685672841771, 0.013116856728403856, 841, 20, 3.73617058, 6.1738040110000005)
(-3282.8442660120936, -3282.6943598573826, 0.0, 0.0, 0.004566558390103332, 0.004566558390089478, 975, 21, 4.095927408, 6.951404439)
(-3282.739789987026, -3282.6943598573826, 0.0, 0.0, 0.0013839280988078334, 0.0013839280987939804, 1078, 22, 4.4961263989999996, 7.691014589000001)
(-3282.708970597441, -3282.6943598573826, 0.0, 0.0, 0.0004450837774424205, 0.00044508377742856763, 1186, 23, 5.005660398, 8.591957671000001)
(-3282.6979275766516, -3282.6943598573826, 0.0, 0.0, 0.00010868265145754383, 0.00010868265144369096, 1271, 24, 5.6852324119999995, 9.63578902)
(-3282.6951337181804, -3282.6943598573826, 0.0, 0.0, 2.357395217030612e-5, 2.3573952156453244e-5, 1337, 25, 6.30300281, 10.443569385)
