solving instance knapsack 10 4 divexp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3596.834531178
expr 1, 1 = 84.584224 / (1 + 4.377848 * exp(-0.121489 * (x + -75.891873)))
expr 1, 2 = 98.549399 / (1 + 89.075689 * exp(-0.171688 * (x + -14.910251)))
expr 1, 3 = 74.045952 / (1 + 93.91555 * exp(-0.193411 * (x + -37.404451)))
expr 1, 4 = 35.813342 / (1 + 89.767075 * exp(-0.16503 * (x + -99.113142)))
expr 1, 5 = 42.435927 / (1 + 60.318413 * exp(-0.156646 * (x + -85.272461)))
expr 1, 6 = 5.634582 / (1 + 94.126035 * exp(-0.178119 * (x + -36.314288)))
expr 1, 7 = 60.096204 / (1 + 40.16565 * exp(-0.185129 * (x + -44.484773)))
expr 1, 8 = 35.612257 / (1 + 6.898806 * exp(-0.145731 * (x + -78.003466)))
expr 1, 9 = 10.749888 / (1 + 84.933521 * exp(-0.172424 * (x + -61.71491)))
expr 1, 10 = 98.85584 / (1 + 45.321881 * exp(-0.1614 * (x + -76.914166)))
(-1.0 * 84.584224) / (1 + 4.377848 * exp(-0.121489 * (x + -75.891873)))
(-1.0 * 98.549399) / (1 + 89.075689 * exp(-0.171688 * (x + -14.910251)))
(-1.0 * 74.045952) / (1 + 93.91555 * exp(-0.193411 * (x + -37.404451)))
(-1.0 * 35.813342) / (1 + 89.767075 * exp(-0.16503 * (x + -99.113142)))
(-1.0 * 42.435927) / (1 + 60.318413 * exp(-0.156646 * (x + -85.272461)))
(-1.0 * 5.634582) / (1 + 94.126035 * exp(-0.178119 * (x + -36.314288)))
(-1.0 * 60.096204) / (1 + 40.16565 * exp(-0.185129 * (x + -44.484773)))
(-1.0 * 35.612257) / (1 + 6.898806 * exp(-0.145731 * (x + -78.003466)))
(-1.0 * 10.749888) / (1 + 84.933521 * exp(-0.172424 * (x + -61.71491)))
(-1.0 * 98.85584) / (1 + 45.321881 * exp(-0.1614 * (x + -76.914166)))
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 4.165468822, #pieces = 142
Iteration 2	LB = -389.2599342109473	UB = -385.83747902898773	CPU = 12.121052116000001, #pieces = 151
Iteration 3	LB = -387.36763302406354	UB = -385.83747902898773	CPU = 12.194320260000001, #pieces = 152
Iteration 4	LB = -386.11038737925617	UB = -385.83747902898773	CPU = 12.543544760000001, #pieces = 198
Iteration 5	LB = -385.91281706761464	UB = -385.83747902898773	CPU = 12.645223810000001, #pieces = 201
Iteration 6	LB = -385.84846935146663	UB = -385.83747902898773	CPU = 12.794605789, #pieces = 206
Iteration 7	LB = -385.8393320303748	UB = -385.83747902898773	CPU = 12.936442998, #pieces = 209
WRITING LOG...
(-389.2599342109473, -385.83747902898773, 0.0, 0.0, 0.8870198899735249, 0.8870198899735249, 142, 1, 0.06911813, 4.247187148)
(-387.36763302406354, -385.83747902898773, 0.0, 0.0, 0.39657992762306205, 0.39657992762306205, 151, 2, 0.139008185, 12.191034273000001)
(-386.11038737925617, -385.83747902898773, 0.0, 0.0, 0.07073142582085296, 0.07073142582085296, 152, 3, 0.193121813, 12.248523187)
(-385.91281706761464, -385.83747902898773, 0.0, 0.0, 0.019711306860591662, 0.019525847726485357, 198, 4, 0.269981125, 12.620492192)
(-385.84846935146663, -385.83747902898773, 0.0, 0.0, 0.003033861313993579, 0.0028484331036379026, 201, 5, 0.319565291, 12.694893597)
(-385.8393320303748, -385.83747902898773, 0.0, 0.0, 0.0006656781977469496, 0.00048025437853762193, 206, 6, 0.38570514, 12.860842797)
(-385.83838712677573, -385.8381711316909, 0.0, 0.0, 5.598074555349776e-5, 5.598074555349776e-5, 209, 7, 0.463870131, 13.014682024)
