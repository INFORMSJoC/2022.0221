solving instance knapsack 100 2 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.77513601
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.22486399, #pieces = 100
Iteration 2	LB = -3535.601973339263	UB = 0.0	CPU = 0.5481813160000001, #pieces = 236
Iteration 3	LB = -3419.612821545641	UB = -3058.1529314077743	CPU = 0.7644570340000001, #pieces = 310
Iteration 4	LB = -3178.5665348760303	UB = -3063.2981010081476	CPU = 0.962045608, #pieces = 389
Iteration 5	LB = -3124.562281686613	UB = -3063.2981010081476	CPU = 1.074448133, #pieces = 405
Iteration 6	LB = -3114.296410759931	UB = -3065.0955932181214	CPU = 1.4135083910000001, #pieces = 515
Iteration 7	LB = -3082.7978919999186	UB = -3065.0955932181214	CPU = 1.536837288, #pieces = 517
Iteration 8	LB = -3081.739800555844	UB = -3065.3102576738274	CPU = 1.9104570850000002, #pieces = 614
Iteration 9	LB = -3072.2437143357765	UB = -3065.3102576738274	CPU = 2.036004228, #pieces = 616
Iteration 10	LB = -3071.6308421932054	UB = -3065.3102576738274	CPU = 2.2634305230000002, #pieces = 658
Iteration 11	LB = -3069.4169265078494	UB = -3065.3102576738274	CPU = 2.608417939, #pieces = 737
Iteration 12	LB = -3066.5079982664865	UB = -3065.3102576738274	CPU = 2.7543679940000003, #pieces = 743
Iteration 13	LB = -3066.361853097964	UB = -3065.3102576738274	CPU = 3.235977794, #pieces = 877
Iteration 14	LB = -3065.6820228831543	UB = -3065.3102576738274	CPU = 3.707970011, #pieces = 977
Iteration 15	LB = -3065.4532623000896	UB = -3065.3102576738274	CPU = 4.166610633, #pieces = 1077
Iteration 16	LB = -3065.35072165713	UB = -3065.3102576738274	CPU = 4.744768663, #pieces = 1186
Iteration 17	LB = -3065.3256987418577	UB = -3065.3102576738274	CPU = 5.317379773000001, #pieces = 1272
WRITING LOG...
(-3535.601973339263, 0.0, 0.0, 0.0, Inf, Inf, 100, 1, 0.050256833, 0.281636977)
(-3419.612821545641, -3058.1529314077743, 0.0, 0.0, 11.819549193423565, 11.819549193423565, 236, 2, 0.079238262, 0.5773463010000001)
(-3178.5665348760303, -3063.2981010081476, 0.0, 0.0, 3.76288660349273, 3.76288660349273, 310, 3, 0.12242080600000001, 0.807830774)
(-3124.562281686613, -3063.2981010081476, 0.0, 0.0, 2.1763163990811356, 1.9999418488949237, 389, 4, 0.195815059, 1.035626165)
(-3114.296410759931, -3065.0955932181214, 0.0, 0.0, 1.6051968379280586, 1.6051968379280586, 405, 5, 0.293987058, 1.1728037530000002)
(-3082.7978919999186, -3065.0955932181214, 0.0, 0.0, 0.8622106631673139, 0.5775447532848776, 515, 6, 0.407230639, 1.526948226)
(-3081.739800555844, -3065.3102576738274, 0.0, 0.0, 0.5359830327414994, 0.5359830327414994, 517, 7, 0.5371554629999999, 1.6669417210000002)
(-3072.2437143357765, -3065.3102576738274, 0.0, 0.0, 0.5529465667874582, 0.22619102404370278, 614, 8, 0.657056376, 2.030568577)
(-3071.6308421932054, -3065.3102576738274, 0.0, 0.0, 0.21614254829156235, 0.2061972194675791, 616, 9, 0.766490919, 2.145629505)
(-3069.4169265078494, -3065.3102576738274, 0.0, 0.0, 0.133972371107988, 0.133972371107988, 658, 10, 0.896836862, 2.39397013)
(-3066.5079982664865, -3065.3102576738274, 0.0, 0.0, 0.04608029359639726, 0.03907404118916274, 737, 11, 1.018515346, 2.73030734)
(-3066.361853097964, -3065.3102576738274, 0.0, 0.0, 0.03430632907399131, 0.03430632907399131, 743, 12, 1.147580105, 2.883622276)
(-3065.6820228831543, -3065.3102576738274, 0.0, 0.0, 0.012128142930922002, 0.012128142930922002, 877, 13, 1.304574179, 3.393187102)
(-3065.4532623000896, -3065.3102576738274, 0.0, 0.0, 0.004665257812130131, 0.004665257812130131, 977, 14, 1.476987459, 3.880578803)
(-3065.35072165713, -3065.3102576738274, 0.0, 0.0, 0.001320061589245131, 0.001320061589245131, 1077, 15, 1.697323987, 4.3871434890000005)
(-3065.3256987418577, -3065.3102576738274, 0.0, 0.0, 0.0005037358939949936, 0.0005037358939949936, 1186, 16, 1.976064171, 5.023715514)
(-3065.313129475446, -3065.3102576738274, 0.0, 0.0, 9.368714346540867e-5, 9.368714346540867e-5, 1272, 17, 2.2633503839999998, 5.604870602)
