solving instance knapsack 500 2 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3081.711747326
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 519.288252674, #pieces = 1500
Iteration 2	LB = -37728.68896394061	UB = -34338.605672060294	CPU = 1612.9975457510002, #pieces = 2184
Iteration 3	LB = -37728.68070786865	UB = -34338.605672060294	CPU = 1613.633365958, #pieces = 2184
Iteration 4	LB = -35305.50923942808	UB = -34619.080246643825	CPU = 1720.4934747270001, #pieces = 2504
Iteration 5	LB = -34956.42581877238	UB = -34782.11034526485	CPU = 1802.144050495, #pieces = 2623
Iteration 6	LB = -34935.685862215796	UB = -34802.984003748206	CPU = 1833.988398936, #pieces = 2970
Iteration 7	LB = -34911.27786461678	UB = -34828.67207823508	CPU = 1837.9833027450002, #pieces = 3177
Iteration 8	LB = -34886.20445476305	UB = -34847.55011531564	CPU = 1839.0416072080002, #pieces = 3414
Iteration 9	LB = -34881.7196583574	UB = -34850.65047166754	CPU = 1840.4459014220001, #pieces = 3716
Iteration 10	LB = -34870.4042644494	UB = -34853.95202777484	CPU = 1840.88180794, #pieces = 3796
Iteration 11	LB = -34867.37983838118	UB = -34856.328990545175	CPU = 1841.8060931960001, #pieces = 3974
Iteration 12	LB = -34866.19669345067	UB = -34857.528695452434	CPU = 1842.8903457650001, #pieces = 4188
Iteration 13	LB = -34864.140250648525	UB = -34858.57978000132	CPU = 1844.038262705, #pieces = 4405
Iteration 14	LB = -34863.16193719596	UB = -34858.57978000132	CPU = 1844.4582680730002, #pieces = 4411
Iteration 15	LB = -34863.13643399806	UB = -34859.19025925394	CPU = 1845.4288121240002, #pieces = 4570
Iteration 16	LB = -34862.23965198515	UB = -34859.64115205552	CPU = 1846.7009379600001, #pieces = 4797
Iteration 17	LB = -34861.84027895139	UB = -34859.78261932516	CPU = 1847.5665022490002, #pieces = 4955
Iteration 18	LB = -34861.41386762515	UB = -34859.78261932516	CPU = 1848.165506387, #pieces = 4976
Iteration 19	LB = -34861.399991717546	UB = -34860.10515697743	CPU = 1849.6041327080002, #pieces = 5216
Iteration 20	LB = -34861.15844866294	UB = -34860.10515697743	CPU = 1849.89378484, #pieces = 5220
Iteration 21	LB = -34861.15596988749	UB = -34860.10653444026	CPU = 1851.241291278, #pieces = 5483
Iteration 22	LB = -34860.893973764476	UB = -34860.10731655335	CPU = 1851.9151542230002, #pieces = 5536
Iteration 23	LB = -34860.85329779926	UB = -34860.14741131491	CPU = 1852.2571026310002, #pieces = 5538
Iteration 24	LB = -34860.851724247404	UB = -34860.355030739396	CPU = 1853.585752353, #pieces = 5711
Iteration 25	LB = -34860.76720502826	UB = -34860.355030739396	CPU = 1854.1339289670002, #pieces = 5714
Iteration 26	LB = -34860.76619852439	UB = -34860.355030739396	CPU = 1854.571544628, #pieces = 5716
Iteration 27	LB = -34860.76566504321	UB = -34860.355030739396	CPU = 1855.0269190820002, #pieces = 5717
Iteration 28	LB = -34860.76509077006	UB = -34860.37151372778	CPU = 1856.5608428070002, #pieces = 5939
Iteration 29	LB = -34860.65314804866	UB = -34860.37151372778	CPU = 1857.3366635260002, #pieces = 5941
Iteration 30	LB = -34860.65183883857	UB = -34860.37151372778	CPU = 1858.1285529220002, #pieces = 5957
Iteration 31	LB = -34860.65183883857	UB = -34860.406192490016	CPU = 1858.7436117930001, #pieces = 5994
Iteration 32	LB = -34860.63802746613	UB = -34860.43697354376	CPU = 1860.468369183, #pieces = 6243
Iteration 33	LB = -34860.58552023089	UB = -34860.43697354376	CPU = 1861.245933525, #pieces = 6294
Iteration 34	LB = -34860.571946419535	UB = -34860.454839384045	CPU = 1863.015301205, #pieces = 6538
Iteration 35	LB = -34860.54399766357	UB = -34860.454839384045	CPU = 1863.649918345, #pieces = 6545
Iteration 36	LB = -34860.543641370554	UB = -34860.46831577757	CPU = 1865.0936278210002, #pieces = 6747
Iteration 37	LB = -34860.52598869107	UB = -34860.47087688767	CPU = 1865.7994931930002, #pieces = 6780
Iteration 38	LB = -34860.52338187216	UB = -34860.47867810902	CPU = 1866.9246054280002, #pieces = 6881
Iteration 39	LB = -34860.51751681792	UB = -34860.48011873536	CPU = 1867.399992586, #pieces = 6899
WRITING LOG...
(-37728.68896394061, -34338.605672060294, 0.0, 0.0, 9.872512950165198, 9.872512950165198, 1500, 1, 0.16527524500000002, 519.461614254)
(-37728.68070786865, -34338.605672060294, 0.0, 0.0, 9.87249097649272, 9.872488907045803, 2184, 2, 0.34208566700000004, 1613.1754864630002)
(-35305.50923942808, -34619.080246643825, 0.0, 0.0, 1.9828054006455038, 1.9828054006455038, 2184, 3, 0.39894335400000003, 1613.69132581)
(-34956.42581877238, -34782.11034526485, 0.0, 0.0, 0.5011641668006507, 0.5011641668006507, 2504, 4, 0.47851698400000003, 1720.574203911)
(-34935.685862215796, -34802.984003748206, 0.0, 0.0, 0.3812944845571232, 0.3812944845571232, 2623, 5, 0.5873937170000001, 1802.2540317560001)
(-34911.27786461678, -34828.67207823508, 0.0, 0.0, 0.23717753635895383, 0.23717753635895383, 2970, 6, 0.6780348890000001, 1834.0799744750002)
(-34886.20445476305, -34847.55011531564, 0.0, 0.0, 0.11092412327265745, 0.11092412327265745, 3177, 7, 0.7166341450000001, 1838.022840907)
(-34881.7196583574, -34850.65047166754, 0.0, 0.0, 0.08914951735295228, 0.08914951735295228, 3414, 8, 0.7930418220000002, 1839.118918698)
(-34870.4042644494, -34853.95202777484, 0.0, 0.0, 0.04720336064457771, 0.04720336064457771, 3716, 9, 0.8484953310000002, 1840.502289918)
(-34867.37983838118, -34856.328990545175, 0.0, 0.0, 0.03170399223338665, 0.03170399223338665, 3796, 10, 0.9337507370000002, 1840.96801215)
(-34866.19669345067, -34857.528695452434, 0.0, 0.0, 0.024866932116639776, 0.024866932116639776, 3974, 11, 1.0474091550000002, 1841.9206994610001)
(-34864.140250648525, -34858.57978000132, 0.0, 0.0, 0.015951512317199414, 0.015951512317199414, 4188, 12, 1.1903781520000003, 1843.034341535)
(-34863.16193719596, -34858.57978000132, 0.0, 0.0, 0.01388706202556414, 0.013144991056899969, 4405, 13, 1.5590274260000003, 1844.407931769)
(-34863.13643399806, -34859.19025925394, 0.0, 0.0, 0.011320328196862968, 0.011320328196862968, 4411, 14, 1.8189346490000005, 1844.7191967200001)
(-34862.23965198515, -34859.64115205552, 0.0, 0.0, 0.00745417865404805, 0.00745417865404805, 4570, 15, 2.0216583830000006, 1845.6325663480002)
(-34861.84027895139, -34859.78261932516, 0.0, 0.0, 0.005902674863761007, 0.005902674863761007, 4797, 16, 2.2096713410000004, 1846.8899115640002)
(-34861.41386762515, -34859.78261932516, 0.0, 0.0, 0.005546838293832695, 0.004679456317345375, 4955, 17, 2.6934018260000006, 1848.051303745)
(-34861.399991717546, -34860.10515697743, 0.0, 0.0, 0.003714374165789862, 0.003714374165789862, 4976, 18, 2.8924822880000005, 1848.3656615310001)
(-34861.15844866294, -34860.10515697743, 0.0, 0.0, 0.0037143312988249465, 0.0030214816644195085, 5216, 19, 3.1361810310000005, 1849.848804336)
(-34861.15596988749, -34860.10653444026, 0.0, 0.0, 0.0030104195068804593, 0.0030104195068804593, 5220, 20, 3.2842755760000006, 1850.0428618130002)
(-34860.893973764476, -34860.10731655335, 0.0, 0.0, 0.002256611558822823, 0.002256611558822823, 5483, 21, 3.6874699350000006, 1851.645463965)
(-34860.85329779926, -34860.14741131491, 0.0, 0.0, 0.002024909636842799, 0.002024909636842799, 5536, 22, 3.9893270270000007, 1852.2180665110002)
(-34860.851724247404, -34860.355030739396, 0.0, 0.0, 0.0014248090920770677, 0.0014248090920770677, 5538, 23, 4.277565818000001, 1852.5464118740001)
(-34860.76720502826, -34860.355030739396, 0.0, 0.0, 0.001612794028830238, 0.0011823582648654637, 5711, 24, 4.790700173000001, 1854.0998887380001)
(-34860.76619852439, -34860.355030739396, 0.0, 0.0, 0.0017853212818117045, 0.0011794710198206955, 5714, 25, 5.1911408040000016, 1854.5354928210002)
(-34860.76566504321, -34860.355030739396, 0.0, 0.0, 0.001258634315525569, 0.001177940682051688, 5716, 26, 5.615984213000002, 1854.9974192000002)
(-34860.76509077006, -34860.37151372778, 0.0, 0.0, 0.0011290098905597638, 0.0011290098905597638, 5717, 27, 6.054486315000002, 1855.4666157670001)
(-34860.65314804866, -34860.37151372778, 0.0, 0.0, 0.0017142748715172661, 0.0008078924826292556, 5939, 28, 6.795323272000002, 1857.302831467)
(-34860.65183883857, -34860.37151372778, 0.0, 0.0, 0.0012081556957057556, 0.0008041368998981008, 5941, 29, 7.469350815000002, 1858.0118999150002)
(-34860.65183883857, -34860.406192490016, 0.0, 0.0, 0.0007061222332732615, 0.0007046571608893872, 5957, 30, 7.869012986000002, 1858.529274444)
(-34860.63802746613, -34860.43697354376, 0.0, 0.0, 0.0005767395357745407, 0.0005767395357745407, 5994, 31, 8.221682220000002, 1859.097365234)
(-34860.58552023089, -34860.43697354376, 0.0, 0.0, 0.00044738247713830534, 0.0004261182590557008, 6243, 32, 8.728815552000002, 1860.9764978090002)
(-34860.571946419535, -34860.454839384045, 0.0, 0.0, 0.00033593088796429526, 0.00033593088796429526, 6294, 33, 9.103553195000002, 1861.621719319)
(-34860.54399766357, -34860.454839384045, 0.0, 0.0, 0.0002914047769385308, 0.00025575764841207605, 6538, 34, 9.663177286000002, 1863.575953229)
(-34860.543641370554, -34860.46831577757, 0.0, 0.0, 0.00021607739832672359, 0.00021607739832672359, 6545, 35, 10.055289810000001, 1864.04307502)
(-34860.52598869107, -34860.47087688767, 0.0, 0.0, 0.00015809253866021477, 0.00015809253866021477, 6747, 36, 10.590357350000001, 1865.6297426150002)
(-34860.52338187216, -34860.47867810902, 0.0, 0.0, 0.0001282362286277457, 0.0001282362286277457, 6780, 37, 11.136820811000002, 1866.347002848)
(-34860.51751681792, -34860.48011873536, 0.0, 0.0, 0.00010727931007635729, 0.00010727931007635729, 6881, 38, 11.504426917000002, 1867.2932915130002)
(-34860.51656593363, -34860.48510820275, 0.0, 0.0, 9.023893608162542e-5, 9.023893608162542e-5, 6899, 39, 11.869244887000002, 1867.765868188)
