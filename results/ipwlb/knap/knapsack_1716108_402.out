solving instance knapsack 200 1 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3449.042655982
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 151.95734401800001, #pieces = 800
Iteration 2	LB = -7150.539560934383	UB = -6500.912145836602	CPU = 152.596557875, #pieces = 800
Iteration 3	LB = -6554.66410234792	UB = -6500.912145836602	CPU = 153.044933329, #pieces = 846
Iteration 4	LB = -6535.868448890992	UB = -6500.912145836602	CPU = 154.26342255400002, #pieces = 993
Iteration 5	LB = -6512.108278675197	UB = -6500.912145836602	CPU = 154.37384673900002, #pieces = 994
Iteration 6	LB = -6511.888001543009	UB = -6500.912145836602	CPU = 155.39549352400002, #pieces = 1073
Iteration 7	LB = -6502.67514501839	UB = -6500.912145836602	CPU = 155.465304898, #pieces = 1074
Iteration 8	LB = -6502.239439276236	UB = -6500.912145836602	CPU = 156.123208218, #pieces = 1154
Iteration 9	LB = -6501.320320270195	UB = -6500.912145836602	CPU = 158.64910042300002, #pieces = 1496
Iteration 10	LB = -6501.102186844708	UB = -6500.912145836602	CPU = 161.042869919, #pieces = 1769
Iteration 11	LB = -6501.0199107926555	UB = -6500.917525090351	CPU = 161.351788924, #pieces = 1778
Iteration 12	LB = -6501.012145383731	UB = -6500.918140200044	CPU = 163.80822636500002, #pieces = 2026
Iteration 13	LB = -6500.958480568936	UB = -6500.918492071342	CPU = 165.402708955, #pieces = 2150
Iteration 14	LB = -6500.936851674892	UB = -6500.918492071342	CPU = 165.786846927, #pieces = 2154
Iteration 15	LB = -6500.935937559055	UB = -6500.918558251881	CPU = 167.132505135, #pieces = 2256
Iteration 16	LB = -6500.928108284023	UB = -6500.918558251881	CPU = 167.94662782100002, #pieces = 2332
Iteration 17	LB = -6500.925571175752	UB = -6500.918558251881	CPU = 168.61197216000002, #pieces = 2393
WRITING LOG...
(-7150.539560934383, -6500.912145836602, 0.0, 0.0, 9.992865624462013, 9.992865624462013, 800, 1, 0.077794654, 152.04422597500002)
(-6554.66410234792, -6500.912145836602, 0.0, 0.0, 0.867672550974472, 0.8268371469339499, 800, 2, 0.158422466, 152.67759771800002)
(-6535.868448890992, -6500.912145836602, 0.0, 0.0, 0.5390228489666489, 0.5377138203102408, 846, 3, 0.21460388200000002, 153.101565254)
(-6512.108278675197, -6500.912145836602, 0.0, 0.0, 0.2293312665838671, 0.17222402929664954, 993, 4, 0.301939999, 154.351242103)
(-6511.888001543009, -6500.912145836602, 0.0, 0.0, 0.17046538577620846, 0.16883562583500294, 994, 5, 0.38275420000000004, 154.455057555)
(-6502.67514501839, -6500.912145836602, 0.0, 0.0, 0.03989646310658554, 0.027119258686145387, 1073, 6, 0.43461835000000004, 155.44776442)
(-6502.239439276236, -6500.912145836602, 0.0, 0.0, 0.02041703394629939, 0.02041703394629939, 1074, 7, 0.544013085, 155.57510733400002)
(-6501.320320270195, -6500.912145836602, 0.0, 0.0, 0.006421515880046972, 0.006278725576301882, 1154, 8, 0.6415700710000001, 156.221213135)
(-6501.102186844708, -6500.912145836602, 0.0, 0.0, 0.0029261159653076576, 0.002923297590290805, 1496, 9, 0.8327903130000001, 158.84079047400002)
(-6501.0199107926555, -6500.917525090351, 0.0, 0.0, 0.0015749423355936217, 0.0015749423355936217, 1769, 10, 1.081984537, 161.29251824800002)
(-6501.012145383731, -6500.918140200044, 0.0, 0.0, 0.0014460293401577715, 0.0014460293401577715, 1778, 11, 1.3599338280000002, 161.63018818900002)
(-6500.958480568936, -6500.918492071342, 0.0, 0.0, 0.00061512073473858, 0.00061512073473858, 2026, 12, 1.5666010590000001, 164.015384465)
(-6500.936851674892, -6500.918492071342, 0.0, 0.0, 0.00030142591026985696, 0.00028241553207999687, 2150, 13, 1.9236492090000001, 165.760227851)
(-6500.935937559055, -6500.918558251881, 0.0, 0.0, 0.00026733617746189855, 0.00026733617746189855, 2154, 14, 2.282598119, 166.14628664900002)
(-6500.928108284023, -6500.918558251881, 0.0, 0.0, 0.00014957069700874452, 0.0001469028116048741, 2256, 15, 2.5528432210000003, 167.403220008)
(-6500.925571175752, -6500.918558251881, 0.0, 0.0, 0.00011044400306786947, 0.00010787589181861511, 2332, 16, 2.8260389630000002, 168.220306333)
(-6500.924477485094, -6500.918603196283, 0.0, 0.0, 9.036090389545048e-5, 9.036090389545048e-5, 2393, 17, 3.0999872820000003, 168.88642347700002)
