solving instance knapsack 50 4 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3565.50702405
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 35.49297595, #pieces = 200
Iteration 2	LB = -1856.4947438495494	UB = -1687.831260444531	CPU = 35.762886672, #pieces = 200
Iteration 3	LB = -1700.6098700881466	UB = -1687.831260444531	CPU = 36.071498511, #pieces = 242
Iteration 4	LB = -1691.7226198929866	UB = -1687.831260444531	CPU = 36.303536046000005, #pieces = 261
Iteration 5	LB = -1688.2031808636098	UB = -1687.831260444531	CPU = 36.422044195000005, #pieces = 280
Iteration 6	LB = -1687.946592907354	UB = -1687.831260444531	CPU = 37.192473473, #pieces = 395
Iteration 7	LB = -1687.8737025653274	UB = -1687.831260444531	CPU = 37.75132715, #pieces = 464
Iteration 8	LB = -1687.8495952654546	UB = -1687.831260444531	CPU = 38.110815262, #pieces = 504
Iteration 9	LB = -1687.83921014538	UB = -1687.831260444531	CPU = 38.468341124000005, #pieces = 537
Iteration 10	LB = -1687.8349352422508	UB = -1687.831260444531	CPU = 38.627019778000005, #pieces = 555
Iteration 11	LB = -1687.8335496231982	UB = -1687.831260444531	CPU = 38.835983828, #pieces = 575
Iteration 12	LB = -1687.8329924405493	UB = -1687.831260444531	CPU = 38.958414989000005, #pieces = 593
WRITING LOG...
(-1856.4947438495494, -1687.831260444531, 0.0, 0.0, 9.992911457309834, 9.992911457309834, 200, 1, 0.061812031, 35.561359489000004)
(-1700.6098700881466, -1687.831260444531, 0.0, 0.0, 0.7571023207764357, 0.7571023207764357, 200, 2, 0.067761401, 35.768972844000004)
(-1691.7226198929866, -1687.831260444531, 0.0, 0.0, 0.23055382013903314, 0.23055382013903314, 242, 3, 0.074346297, 36.078235345)
(-1688.2031808636098, -1687.831260444531, 0.0, 0.0, 0.022035402933636806, 0.022035402933636806, 261, 4, 0.083656568, 36.312989712000004)
(-1687.946592907354, -1687.831260444531, 0.0, 0.0, 0.006833174946213907, 0.006833174946213907, 280, 5, 0.094737181, 36.433276844000005)
(-1687.8737025653274, -1687.831260444531, 0.0, 0.0, 0.0025145950185413843, 0.0025145950185413843, 395, 6, 0.13192162400000002, 37.229814784000006)
(-1687.8495952654546, -1687.831260444531, 0.0, 0.0, 0.0010862946642442594, 0.0010862946642442594, 464, 7, 0.150439487, 37.769985236000004)
(-1687.83921014538, -1687.831260444531, 0.0, 0.0, 0.00047100092500202805, 0.00047100092500202805, 504, 8, 0.171328738, 38.131856738)
(-1687.8349352422508, -1687.831260444531, 0.0, 0.0, 0.00021772305123249136, 0.00021772305123249136, 537, 9, 0.19283123000000002, 38.489983946)
(-1687.8335496231982, -1687.831260444531, 0.0, 0.0, 0.0001356284079425247, 0.0001356284079425247, 555, 10, 0.29776952100000004, 38.732102984)
(-1687.8329924405493, -1687.831260444531, 0.0, 0.0, 0.00010261665718589824, 0.00010261665718589824, 575, 11, 0.320891627, 38.859255270000006)
(-1687.8327271939816, -1687.831260444531, 0.0, 0.0, 8.690142699703934e-5, 8.690142699703934e-5, 593, 12, 0.346125346, 38.983820156)
