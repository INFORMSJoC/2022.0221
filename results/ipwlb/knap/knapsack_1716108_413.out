solving instance knapsack 200 2 sinabc1
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.585492811
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.414507189, #pieces = 200
Iteration 2	LB = -7387.954069488976	UB = 0.0	CPU = 0.954735203, #pieces = 506
Iteration 3	LB = -7038.190446063564	UB = -6441.686679635842	CPU = 1.451570862, #pieces = 659
Iteration 4	LB = -6840.757171382266	UB = -6441.686679635842	CPU = 1.9322613380000002, #pieces = 779
Iteration 5	LB = -6733.676924222662	UB = -6441.686679635842	CPU = 2.081995807, #pieces = 821
Iteration 6	LB = -6692.686709218066	UB = -6441.686679635842	CPU = 2.219504897, #pieces = 855
Iteration 7	LB = -6676.030930235069	UB = -6441.686679635842	CPU = 2.321391261, #pieces = 872
Iteration 8	LB = -6663.3127060661445	UB = -6441.686679635842	CPU = 2.4366426380000004, #pieces = 885
Iteration 9	LB = -6662.036031243172	UB = -6441.686679635842	CPU = 2.87010346, #pieces = 1015
Iteration 10	LB = -6594.8438903850565	UB = -6441.686679635842	CPU = 2.9504381250000002, #pieces = 1028
Iteration 11	LB = -6591.480195465553	UB = -6441.686679635842	CPU = 2.991193211, #pieces = 1034
Iteration 12	LB = -6589.965369929093	UB = -6453.464485662939	CPU = 3.6646365810000003, #pieces = 1221
Iteration 13	LB = -6538.962518101458	UB = -6457.440726367501	CPU = 3.7483202110000002, #pieces = 1230
Iteration 14	LB = -6535.956795792523	UB = -6482.926614201874	CPU = 4.467497880000001, #pieces = 1459
Iteration 15	LB = -6511.093844736591	UB = -6482.926614201874	CPU = 4.522874658, #pieces = 1462
Iteration 16	LB = -6510.95240719245	UB = -6482.926614201874	CPU = 4.638417007, #pieces = 1474
Iteration 17	LB = -6509.34891978052	UB = -6482.926614201874	CPU = 4.699617592, #pieces = 1479
Iteration 18	LB = -6509.082689887065	UB = -6486.96410186738	CPU = 5.462276022, #pieces = 1729
Iteration 19	LB = -6498.020667921077	UB = -6486.96410186738	CPU = 5.640597896, #pieces = 1736
Iteration 20	LB = -6497.713255301229	UB = -6489.25984277509	CPU = 6.378897501, #pieces = 1883
Iteration 21	LB = -6495.3800969460335	UB = -6489.25984277509	CPU = 6.76817439, #pieces = 1886
Iteration 22	LB = -6495.351494733462	UB = -6489.25984277509	CPU = 7.0486790280000005, #pieces = 1889
Iteration 23	LB = -6495.348169517311	UB = -6489.25984277509	CPU = 7.160688836, #pieces = 1892
Iteration 24	LB = -6495.330502982309	UB = -6489.25984277509	CPU = 7.604478918000001, #pieces = 1940
Iteration 25	LB = -6494.269357204915	UB = -6489.983070785874	CPU = 7.740242365, #pieces = 1947
Iteration 26	LB = -6494.168163294462	UB = -6490.838403893693	CPU = 8.561520232000001, #pieces = 2197
Iteration 27	LB = -6492.788115693859	UB = -6491.026298751583	CPU = 9.088242483, #pieces = 2315
Iteration 28	LB = -6492.197867773725	UB = -6491.156331393425	CPU = 9.466766327, #pieces = 2379
Iteration 29	LB = -6492.03394279816	UB = -6491.156331393425	CPU = 9.615988481, #pieces = 2383
Iteration 30	LB = -6492.024033132044	UB = -6491.33836895801	CPU = 10.308276489, #pieces = 2610
Iteration 31	LB = -6491.794642315367	UB = -6491.400520410499	CPU = 10.759314276000001, #pieces = 2676
Iteration 32	LB = -6491.722125409748	UB = -6491.437085152298	CPU = 11.305798336, #pieces = 2777
Iteration 33	LB = -6491.6520150268925	UB = -6491.437085152298	CPU = 11.468148976, #pieces = 2782
Iteration 34	LB = -6491.645359577459	UB = -6491.479488654508	CPU = 12.20959466, #pieces = 2948
Iteration 35	LB = -6491.583663471942	UB = -6491.479488654508	CPU = 12.44574642, #pieces = 2965
Iteration 36	LB = -6491.569827763673	UB = -6491.479488654508	CPU = 12.902459915000001, #pieces = 3015
Iteration 37	LB = -6491.554839264127	UB = -6491.479488654508	CPU = 13.254140416, #pieces = 3056
Iteration 38	LB = -6491.546841019214	UB = -6491.479488654508	CPU = 13.418776118, #pieces = 3058
Iteration 39	LB = -6491.546208017004	UB = -6491.4953529877785	CPU = 14.030819469, #pieces = 3165
Iteration 40	LB = -6491.534294372878	UB = -6491.4953529877785	CPU = 14.21652643, #pieces = 3169
Iteration 41	LB = -6491.533939848915	UB = -6491.499722717912	CPU = 14.986127833000001, #pieces = 3335
Iteration 42	LB = -6491.524226979011	UB = -6491.499722717912	CPU = 15.255031200000001, #pieces = 3349
Iteration 43	LB = -6491.522569697389	UB = -6491.5052093724435	CPU = 16.041140753, #pieces = 3519
Iteration 44	LB = -6491.517302801144	UB = -6491.5052093724435	CPU = 16.283948494, #pieces = 3521
Iteration 45	LB = -6491.517224722307	UB = -6491.506446441539	CPU = 16.804991712, #pieces = 3578
Iteration 46	LB = -6491.51514379335	UB = -6491.507070739279	CPU = 17.111316954, #pieces = 3600
WRITING LOG...
(-7387.954069488976, 0.0, 0.0, 0.0, Inf, Inf, 200, 1, 0.047807600000000006, 0.467947304)
(-7038.190446063564, -6441.686679635842, 0.0, 0.0, 9.26005557385234, 9.26005557385234, 506, 2, 0.05624285100000001, 0.9634541520000001)
(-6840.757171382266, -6441.686679635842, 0.0, 0.0, 7.551099115515661, 6.195124221238661, 659, 3, 0.076004546, 1.471654307)
(-6733.676924222662, -6441.686679635842, 0.0, 0.0, 6.379253905552533, 4.5328228320991055, 779, 4, 0.09374774500000001, 1.9503111030000002)
(-6692.686709218066, -6441.686679635842, 0.0, 0.0, 5.488160604906392, 3.896495468736677, 821, 5, 0.11994581700000001, 2.108511983)
(-6676.030930235069, -6441.686679635842, 0.0, 0.0, 4.31535250948745, 3.63793307954672, 855, 6, 0.171415683, 2.27130337)
(-6663.3127060661445, -6441.686679635842, 0.0, 0.0, 4.392327604081383, 3.440496836502946, 872, 7, 0.231676775, 2.382006167)
(-6662.036031243172, -6441.686679635842, 0.0, 0.0, 3.507190389121764, 3.420677884007036, 885, 8, 0.265284369, 2.470576229)
(-6594.8438903850565, -6441.686679635842, 0.0, 0.0, 3.250650040828018, 2.3775948500164086, 1015, 9, 0.30911287400000004, 2.9142975140000003)
(-6591.480195465553, -6441.686679635842, 0.0, 0.0, 3.0368063559293264, 2.325377238592726, 1028, 10, 0.32123543400000004, 2.962898705)
(-6589.965369929093, -6453.464485662939, 0.0, 0.0, 2.1151566661504835, 2.1151566661504835, 1034, 11, 0.35568436400000003, 3.0260038970000003)
(-6538.962518101458, -6457.440726367501, 0.0, 0.0, 1.2624473872610407, 1.2624473872610407, 1221, 12, 0.39835449100000003, 3.7076616340000004)
(-6535.956795792523, -6482.926614201874, 0.0, 0.0, 0.8179975610780121, 0.8179975610780121, 1230, 13, 0.43925987000000005, 3.7895976350000002)
(-6511.093844736591, -6482.926614201874, 0.0, 0.0, 1.1882734231778178, 0.43448325441493885, 1459, 14, 0.47958150400000005, 4.508196345)
(-6510.95240719245, -6482.926614201874, 0.0, 0.0, 0.5151327528506019, 0.43230156159998306, 1462, 15, 0.525332957, 4.569003976)
(-6509.34891978052, -6482.926614201874, 0.0, 0.0, 0.4122947239986972, 0.4075675563064961, 1474, 16, 0.567308141, 4.680762713)
(-6509.082689887065, -6486.96410186738, 0.0, 0.0, 0.3409697922224861, 0.3409697922224861, 1479, 17, 0.6037002340000001, 4.736377475)
(-6498.020667921077, -6486.96410186738, 0.0, 0.0, 0.216634250271382, 0.17044284321712147, 1729, 18, 0.7470266890000001, 5.606000097000001)
(-6497.713255301229, -6489.25984277509, 0.0, 0.0, 0.1302677459518071, 0.1302677459518071, 1736, 19, 0.9275291390000001, 5.821475826)
(-6495.3800969460335, -6489.25984277509, 0.0, 0.0, 0.31313926711429013, 0.0943135938339351, 1883, 20, 1.2944701340000002, 6.7462328750000005)
(-6495.351494733462, -6489.25984277509, 0.0, 0.0, 0.7499655244546544, 0.09387283150872457, 1886, 21, 1.558829052, 7.032908384000001)
(-6495.348169517311, -6489.25984277509, 0.0, 0.0, 0.33376916674072254, 0.09382158966865725, 1889, 22, 1.654068281, 7.144306877000001)
(-6495.330502982309, -6489.25984277509, 0.0, 0.0, 0.10142738926684206, 0.09354934698719972, 1892, 23, 1.833888011, 7.340900128)
(-6494.269357204915, -6489.983070785874, 0.0, 0.0, 0.06604464714762398, 0.06604464714762398, 1940, 24, 1.918756697, 7.689726029000001)
(-6494.168163294462, -6490.838403893693, 0.0, 0.0, 0.051299372955758614, 0.051299372955758614, 1947, 25, 1.9837332300000001, 7.8055997470000005)
(-6492.788115693859, -6491.026298751583, 0.0, 0.0, 0.027142347930629238, 0.027142347930629238, 2197, 26, 2.014578893, 8.592748172)
(-6492.197867773725, -6491.156331393425, 0.0, 0.0, 0.016045467511900214, 0.016045467511900214, 2315, 27, 2.045175015, 9.119250860000001)
(-6492.03394279816, -6491.156331393425, 0.0, 0.0, 0.014579320575761905, 0.013520108897864768, 2379, 28, 2.165226186, 9.587240558000001)
(-6492.024033132044, -6491.33836895801, 0.0, 0.0, 0.01056275509089254, 0.01056275509089254, 2383, 29, 2.198232112, 9.649440507000001)
(-6491.794642315367, -6491.400520410499, 0.0, 0.0, 0.006071446425608127, 0.006071446425608127, 2610, 30, 2.24651738, 10.35701502)
(-6491.722125409748, -6491.437085152298, 0.0, 0.0, 0.0043910193337847285, 0.0043910193337847285, 2676, 31, 2.3322792509999997, 10.845479928000001)
(-6491.6520150268925, -6491.437085152298, 0.0, 0.0, 0.0034823454895311647, 0.003310975239766579, 2777, 32, 2.4639926569999995, 11.43792848)
(-6491.645359577459, -6491.479488654508, 0.0, 0.0, 0.002555209844555466, 0.002555209844555466, 2782, 33, 2.5941757599999993, 11.598754794000001)
(-6491.583663471942, -6491.479488654508, 0.0, 0.0, 0.0019326201043092786, 0.00160479313869755, 2948, 34, 2.739282619999999, 12.355192996000001)
(-6491.569827763673, -6491.479488654508, 0.0, 0.0, 0.0014416327385160985, 0.0013916566989548864, 2965, 35, 2.876499541999999, 12.583418607)
(-6491.554839264127, -6491.479488654508, 0.0, 0.0, 0.0011735535315447975, 0.0011607617300586502, 3015, 36, 2.987606125999999, 13.014007263000002)
(-6491.546841019214, -6491.479488654508, 0.0, 0.0, 0.001051672795976855, 0.0010375502968808445, 3056, 37, 3.1308995499999988, 13.397886654)
(-6491.546208017004, -6491.4953529877785, 0.0, 0.0, 0.0007834100844237276, 0.0007834100844237276, 3058, 38, 3.2747237759999988, 13.563058888)
(-6491.534294372878, -6491.4953529877785, 0.0, 0.0, 0.0007007713363948657, 0.0005998831237233745, 3165, 39, 3.4258412619999987, 14.182400239000001)
(-6491.533939848915, -6491.499722717912, 0.0, 0.0, 0.0005271067159305753, 0.0005271067159305753, 3169, 40, 3.5790820309999987, 14.370221403)
(-6491.524226979011, -6491.499722717912, 0.0, 0.0, 0.00039370889405525273, 0.00037748227906213066, 3335, 41, 3.7474512949999985, 15.154931156000002)
(-6491.522569697389, -6491.5052093724435, 0.0, 0.0, 0.0002674314259325732, 0.0002674314259325732, 3349, 42, 3.9104758029999984, 15.418494252)
(-6491.517302801144, -6491.5052093724435, 0.0, 0.0, 0.00022920538944141248, 0.00018629621806586335, 3519, 43, 4.121076807999998, 16.252211204)
(-6491.517224722307, -6491.506446441539, 0.0, 0.0, 0.00016603666432534129, 0.00016603666432534129, 3521, 44, 4.300203617999998, 16.463546919000002)
(-6491.51514379335, -6491.507070739279, 0.0, 0.0, 0.00012436332554633105, 0.00012436332554633105, 3578, 45, 4.461005792999997, 16.966259314000002)
(-6491.514247960181, -6491.507994800235, 0.0, 0.0, 9.632831001727179e-5, 9.632831001727179e-5, 3600, 46, 4.707532089999997, 17.358299107)
