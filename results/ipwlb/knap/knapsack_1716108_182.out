solving instance knapsack 20 9 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3585.886321318
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 15.113678682000002, #pieces = 80
Iteration 2	LB = -722.4477912555815	UB = -656.8769652505334	CPU = 15.273832891000001, #pieces = 80
Iteration 3	LB = -664.7466363364882	UB = -656.8769652505334	CPU = 15.431554321, #pieces = 86
Iteration 4	LB = -660.4809425057812	UB = -656.8769652505334	CPU = 15.547728797000001, #pieces = 100
Iteration 5	LB = -657.9410011819142	UB = -656.8769652505334	CPU = 15.655372393, #pieces = 107
Iteration 6	LB = -657.2895714099736	UB = -656.8769652505334	CPU = 15.730039707000001, #pieces = 111
Iteration 7	LB = -657.1608969295128	UB = -656.9150626355753	CPU = 15.784622521000001, #pieces = 115
Iteration 8	LB = -657.0745843242062	UB = -656.9150626355753	CPU = 15.83096141, #pieces = 116
Iteration 9	LB = -657.0210965684048	UB = -656.9274563197836	CPU = 15.905089247000001, #pieces = 121
Iteration 10	LB = -656.9712644717072	UB = -656.9274563197836	CPU = 15.953772611000002, #pieces = 124
Iteration 11	LB = -656.9648837317352	UB = -656.9274563197836	CPU = 15.999476983000001, #pieces = 126
Iteration 12	LB = -656.9613841964235	UB = -656.9274563197836	CPU = 16.327911756000002, #pieces = 167
Iteration 13	LB = -656.9528852425226	UB = -656.9274563197836	CPU = 16.396120196000002, #pieces = 169
Iteration 14	LB = -656.944090124018	UB = -656.9281533073088	CPU = 16.722799425, #pieces = 202
Iteration 15	LB = -656.9359458439977	UB = -656.9281533073088	CPU = 16.889168596, #pieces = 213
Iteration 16	LB = -656.9320973787391	UB = -656.9281533073088	CPU = 17.080279483, #pieces = 225
Iteration 17	LB = -656.930383890049	UB = -656.9281533073088	CPU = 17.173089594, #pieces = 228
Iteration 18	LB = -656.9298545596273	UB = -656.9281533073088	CPU = 17.338682866000003, #pieces = 238
Iteration 19	LB = -656.9291115994107	UB = -656.9281533073088	CPU = 17.466081252000002, #pieces = 245
Iteration 20	LB = -656.9288751193056	UB = -656.9281688119969	CPU = 17.601822594, #pieces = 254
WRITING LOG...
(-722.4477912555815, -656.8769652505334, 0.0, 0.0, 9.98220815674961, 9.98220815674961, 80, 1, 0.07888521200000001, 15.201207833000002)
(-664.7466363364882, -656.8769652505334, 0.0, 0.0, 1.258361241966329, 1.1980433935528996, 80, 2, 0.086418982, 15.281478088)
(-660.4809425057812, -656.8769652505334, 0.0, 0.0, 0.5486533165115908, 0.5486533165115908, 86, 3, 0.09346619, 15.438719807000002)
(-657.9410011819142, -656.8769652505334, 0.0, 0.0, 0.20549345621398868, 0.16198405297633597, 100, 4, 0.113327197, 15.567695818)
(-657.2895714099736, -656.8769652505334, 0.0, 0.0, 0.0628133092295044, 0.0628133092295044, 107, 5, 0.14959667100000001, 15.691751428000002)
(-657.1608969295128, -656.9150626355753, 0.0, 0.0, 0.03742253876036765, 0.03742253876036765, 111, 6, 0.174791412, 15.755331055000001)
(-657.0745843242062, -656.9150626355753, 0.0, 0.0, 0.024283457284550638, 0.024283457284550638, 115, 7, 0.215076071, 15.825012967000001)
(-657.0210965684048, -656.9274563197836, 0.0, 0.0, 0.014254275372476513, 0.014254275372476513, 116, 8, 0.24568919900000002, 15.861677378000001)
(-656.9712644717072, -656.9274563197836, 0.0, 0.0, 0.008555419007505484, 0.00666864377522289, 121, 9, 0.274975733, 15.934479746000001)
(-656.9648837317352, -656.9274563197836, 0.0, 0.0, 0.007584100136177783, 0.005697343228931298, 124, 10, 0.308114201, 15.987011201000001)
(-656.9613841964235, -656.9274563197836, 0.0, 0.0, 0.005164630632127909, 0.005164630632127909, 126, 11, 0.34653806899999995, 16.03799456)
(-656.9528852425226, -656.9274563197836, 0.0, 0.0, 0.004479837410165559, 0.0038708874921260816, 167, 12, 0.40138147099999993, 16.382864653000002)
(-656.944090124018, -656.9281533073088, 0.0, 0.0, 0.002425960377701241, 0.002425960377701241, 169, 13, 0.47400219399999993, 16.468845553)
(-656.9359458439977, -656.9281533073088, 0.0, 0.0, 0.001292307717158806, 0.0011862083623180868, 202, 14, 0.5288034899999999, 16.777717343000003)
(-656.9320973787391, -656.9281533073088, 0.0, 0.0, 0.0006003809412682795, 0.0006003809412682795, 213, 15, 0.5906634519999999, 16.951133107)
(-656.930383890049, -656.9281533073088, 0.0, 0.0, 0.00044564589853750416, 0.0003395474419879034, 225, 16, 0.6677644589999999, 17.157488431)
(-656.9298545596273, -656.9281533073088, 0.0, 0.0, 0.0002589708341712618, 0.0002589708341712618, 228, 17, 0.741255594, 17.246691164)
(-656.9291115994107, -656.9281533073088, 0.0, 0.0, 0.00014587471964822937, 0.00014587471964822937, 238, 18, 0.822401928, 17.419947363000002)
(-656.9288751193056, -656.9281688119969, 0.0, 0.0, 0.00010751667264076175, 0.00010751667264076175, 245, 19, 0.905019829, 17.548815009000002)
(-656.9287135366693, -656.9281688119969, 0.0, 0.0, 8.291997485721143e-5, 8.291997485721143e-5, 254, 20, 0.987851346, 17.684758164)
