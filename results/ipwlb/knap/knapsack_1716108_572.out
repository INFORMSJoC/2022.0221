solving instance knapsack 500 8 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3204.938323208
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 396.061676792, #pieces = 2000
Iteration 2	LB = -18256.39103141665	UB = -16596.834759368936	CPU = 397.62298990200003, #pieces = 2008
Iteration 3	LB = -16755.16986710013	UB = -16596.834759368936	CPU = 398.33410956200004, #pieces = 2063
Iteration 4	LB = -16711.52880827495	UB = -16596.834759368936	CPU = 399.109584152, #pieces = 2144
Iteration 5	LB = -16683.48220991347	UB = -16596.834759368936	CPU = 399.253880826, #pieces = 2145
Iteration 6	LB = -16682.93856028909	UB = -16596.834759368936	CPU = 400.088660064, #pieces = 2223
Iteration 7	LB = -16667.2072652582	UB = -16596.834759368936	CPU = 400.239479914, #pieces = 2223
Iteration 8	LB = -16667.14225922188	UB = -16597.431633740165	CPU = 403.577976147, #pieces = 2576
Iteration 9	LB = -16617.921594454416	UB = -16598.17616232567	CPU = 403.739275291, #pieces = 2578
Iteration 10	LB = -16617.79058340314	UB = -16600.087027845835	CPU = 405.43389242300003, #pieces = 2688
Iteration 11	LB = -16605.547305671822	UB = -16600.257616864164	CPU = 405.79784703, #pieces = 2714
Iteration 12	LB = -16604.837222412883	UB = -16600.474718466055	CPU = 406.11598605700004, #pieces = 2718
Iteration 13	LB = -16604.789005794486	UB = -16600.51827703628	CPU = 406.591350792, #pieces = 2732
Iteration 14	LB = -16604.28457242351	UB = -16600.51827703628	CPU = 406.815725529, #pieces = 2732
Iteration 15	LB = -16604.2827497663	UB = -16600.790923617493	CPU = 408.45452645, #pieces = 2936
Iteration 16	LB = -16602.333771091984	UB = -16600.893132013127	CPU = 410.38657217400004, #pieces = 3179
Iteration 17	LB = -16601.67490257648	UB = -16600.893132013127	CPU = 410.716423699, #pieces = 3180
Iteration 18	LB = -16601.666476785344	UB = -16600.893132013127	CPU = 411.02639674700004, #pieces = 3184
Iteration 19	LB = -16601.654553665743	UB = -16600.893132013127	CPU = 411.35533782000005, #pieces = 3185
Iteration 20	LB = -16601.652679399936	UB = -16600.91317896676	CPU = 411.770768646, #pieces = 3197
Iteration 21	LB = -16601.64803973853	UB = -16600.971282234965	CPU = 422.441783606, #pieces = 4561
Iteration 22	LB = -16601.35692357053	UB = -16600.99332852891	CPU = 425.65104678800003, #pieces = 4778
Iteration 23	LB = -16601.18426064728	UB = -16601.002709844106	CPU = 426.436958041, #pieces = 4821
Iteration 24	LB = -16601.1699143172	UB = -16601.009674089393	CPU = 429.11927305200004, #pieces = 5057
Iteration 25	LB = -16601.130572641825	UB = -16601.016584080142	CPU = 433.43581734900005, #pieces = 5428
Iteration 26	LB = -16601.078467956766	UB = -16601.016584080142	CPU = 434.259499774, #pieces = 5437
Iteration 27	LB = -16601.077004001687	UB = -16601.019858193496	CPU = 436.80106688300003, #pieces = 5614
Iteration 28	LB = -16601.058715005325	UB = -16601.021857991065	CPU = 438.479883586, #pieces = 5721
Iteration 29	LB = -16601.05091029769	UB = -16601.022326143182	CPU = 439.513292605, #pieces = 5746
Iteration 30	LB = -16601.049433966586	UB = -16601.023577885913	CPU = 441.92738432500005, #pieces = 5965
Iteration 31	LB = -16601.041871637757	UB = -16601.023577885913	CPU = 442.618257766, #pieces = 5971
Iteration 32	LB = -16601.041634911413	UB = -16601.023739495475	CPU = 444.657953437, #pieces = 6166
WRITING LOG...
(-18256.39103141665, -16596.834759368936, 0.0, 0.0, 9.999233565369396, 9.999233565369396, 2000, 1, 0.270413464, 396.341495006)
(-16755.16986710013, -16596.834759368936, 0.0, 0.0, 1.0247818872930046, 0.9540078576839015, 2008, 2, 0.460509167, 397.81428411900004)
(-16711.52880827495, -16596.834759368936, 0.0, 0.0, 0.7278888144588743, 0.691059774763796, 2063, 3, 0.49955747500000003, 398.374267088)
(-16683.48220991347, -16596.834759368936, 0.0, 0.0, 0.5396494130356313, 0.5220721408678269, 2144, 4, 0.6071735030000001, 399.21825802200004)
(-16682.93856028909, -16596.834759368936, 0.0, 0.0, 0.5337828878771572, 0.5187965185442908, 2145, 5, 0.74814749, 399.39615791600005)
(-16667.2072652582, -16596.834759368936, 0.0, 0.0, 0.4551771769454553, 0.42401160769247215, 2223, 6, 0.866465151, 400.208170594)
(-16667.14225922188, -16597.431633740165, 0.0, 0.0, 0.4200085110759175, 0.4200085110759175, 2223, 7, 0.969884869, 400.344051803)
(-16617.921594454416, -16598.17616232567, 0.0, 0.0, 0.11896145658197117, 0.11896145658197117, 2576, 8, 1.088802192, 403.69805452)
(-16617.79058340314, -16600.087027845835, 0.0, 0.0, 0.10664736593012322, 0.10664736593012322, 2578, 9, 1.2388766789999999, 403.890485289)
(-16605.547305671822, -16600.257616864164, 0.0, 0.0, 0.031865100709543986, 0.031865100709543986, 2688, 10, 1.4066645109999998, 405.602877023)
(-16604.837222412883, -16600.474718466055, 0.0, 0.0, 0.02627939273311962, 0.02627939273311962, 2714, 11, 1.6670496309999998, 406.05957894600004)
(-16604.789005794486, -16600.51827703628, 0.0, 0.0, 0.025726478456476742, 0.025726478456476742, 2718, 12, 1.976987157, 406.42701827800005)
(-16604.28457242351, -16600.51827703628, 0.0, 0.0, 0.03948588943544524, 0.02268781808118422, 2732, 13, 2.171387686, 406.78699367)
(-16604.2827497663, -16600.790923617493, 0.0, 0.0, 0.0210340950914443, 0.0210340950914443, 2732, 14, 2.3887087680000003, 407.03420151800003)
(-16602.333771091984, -16600.893132013127, 0.0, 0.0, 0.00867808175982458, 0.00867808175982458, 2936, 15, 2.6062919210000004, 408.673356908)
(-16601.67490257648, -16600.893132013127, 0.0, 0.0, 0.005815002553187936, 0.004709207854882116, 3179, 16, 2.9002956140000005, 410.68182794200004)
(-16601.666476785344, -16600.893132013127, 0.0, 0.0, 0.005939136249318282, 0.0046584528077308306, 3180, 17, 3.1455281870000005, 410.968717684)
(-16601.654553665743, -16600.893132013127, 0.0, 0.0, 0.0059992554390461165, 0.0045866306502988065, 3184, 18, 3.4360504190000003, 411.31826587100005)
(-16601.652679399936, -16600.91317896676, 0.0, 0.0, 0.004454576836859772, 0.004454576836859772, 3185, 19, 3.74653632, 411.66704840200003)
(-16601.64803973853, -16600.971282234965, 0.0, 0.0, 0.004076613904456841, 0.004076613904456841, 3197, 20, 4.046518741, 412.072118025)
(-16601.35692357053, -16600.99332852891, 0.0, 0.0, 0.0021902005164506173, 0.0021902005164506173, 4561, 21, 4.503197728, 422.899831509)
(-16601.18426064728, -16601.002709844106, 0.0, 0.0, 0.0010936134783270002, 0.0010936134783270002, 4778, 22, 5.013694714, 426.162838274)
(-16601.1699143172, -16601.009674089393, 0.0, 0.0, 0.0009652438674122515, 0.0009652438674122515, 4821, 23, 5.522080298, 426.94650871700003)
(-16601.130572641825, -16601.016584080142, 0.0, 0.0, 0.0006866360328341817, 0.0006866360328341817, 5057, 24, 6.147947035, 429.74644431)
(-16601.078467956766, -16601.016584080142, 0.0, 0.0, 0.00041093931513055184, 0.0003727716089591537, 5428, 25, 6.86540834, 434.154830887)
(-16601.077004001687, -16601.019858193496, 0.0, 0.0, 0.00034423070798384625, 0.00034423070798384625, 5437, 26, 7.597757044, 434.99314896000004)
(-16601.058715005325, -16601.021857991065, 0.0, 0.0, 0.00022201653955584958, 0.00022201653955584958, 5614, 27, 8.205892879, 437.41056527)
(-16601.05091029769, -16601.022326143182, 0.0, 0.0, 0.0001721830978039599, 0.0001721830978039599, 5721, 28, 9.027272554, 439.302667272)
(-16601.049433966586, -16601.023577885913, 0.0, 0.0, 0.00015574991837748013, 0.00015574991837748013, 5746, 29, 9.671974281999999, 440.166544765)
(-16601.041871637757, -16601.023577885913, 0.0, 0.0, 0.0001156812112363811, 0.00011019652949745687, 5965, 30, 10.298678371, 442.55533017600004)
(-16601.041634911413, -16601.023739495475, 0.0, 0.0, 0.00010779706251296208, 0.00010779706251296208, 5971, 31, 11.016039884, 443.33694608900004)
(-16601.039010539218, -16601.02416711521, 0.0, 0.0, 8.94127004324868e-5, 8.94127004324868e-5, 6166, 32, 11.815042192, 445.458169207)
