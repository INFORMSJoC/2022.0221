solving instance knapsack 200 5 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3463.490167284
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 137.509832716, #pieces = 800
Iteration 2	LB = -7297.562939406464	UB = -6634.393117841387	CPU = 138.228595559, #pieces = 802
Iteration 3	LB = -6691.827174589928	UB = -6634.439888720758	CPU = 138.566066869, #pieces = 828
Iteration 4	LB = -6677.15523841554	UB = -6634.689914543369	CPU = 139.03665421300002, #pieces = 873
Iteration 5	LB = -6665.895191524118	UB = -6634.689914543369	CPU = 139.143216784, #pieces = 873
Iteration 6	LB = -6665.612147905427	UB = -6636.995592544402	CPU = 140.320998502, #pieces = 1014
Iteration 7	LB = -6645.612769768653	UB = -6637.6259375790905	CPU = 140.793179727, #pieces = 1041
Iteration 8	LB = -6640.892976341559	UB = -6638.466933729872	CPU = 141.354868332, #pieces = 1123
Iteration 9	LB = -6639.364407485677	UB = -6638.486169627612	CPU = 141.50434620500002, #pieces = 1141
Iteration 10	LB = -6639.113378155085	UB = -6638.518213308435	CPU = 142.653806546, #pieces = 1312
Iteration 11	LB = -6638.868176930076	UB = -6638.551126297373	CPU = 142.8429654, #pieces = 1336
Iteration 12	LB = -6638.810707476925	UB = -6638.57068494879	CPU = 146.373491416, #pieces = 1848
Iteration 13	LB = -6638.698170402813	UB = -6638.572458145623	CPU = 146.898751648, #pieces = 1879
Iteration 14	LB = -6638.649189103137	UB = -6638.572458145623	CPU = 147.029404053, #pieces = 1892
Iteration 15	LB = -6638.644875721478	UB = -6638.578734192836	CPU = 148.82392125700002, #pieces = 2099
Iteration 16	LB = -6638.61015691733	UB = -6638.578734192836	CPU = 149.44303713300002, #pieces = 2164
Iteration 17	LB = -6638.6003089904325	UB = -6638.57928697327	CPU = 150.087842115, #pieces = 2224
Iteration 18	LB = -6638.594245080007	UB = -6638.580602550092	CPU = 150.884573095, #pieces = 2318
Iteration 19	LB = -6638.589521179395	UB = -6638.580850445871	CPU = 151.169015937, #pieces = 2353
Iteration 20	LB = -6638.588727173296	UB = -6638.580850445871	CPU = 151.33894923100002, #pieces = 2363
Iteration 21	LB = -6638.588179151592	UB = -6638.581147560555	CPU = 151.901366948, #pieces = 2440
WRITING LOG...
(-7297.562939406464, -6634.393117841387, 0.0, 0.0, 9.995937982355354, 9.995937982355354, 800, 1, 0.208084859, 137.725144284)
(-6691.827174589928, -6634.439888720758, 0.0, 0.0, 0.8649906673619068, 0.8649906673619068, 802, 2, 0.34125111, 138.362142165)
(-6677.15523841554, -6634.689914543369, 0.0, 0.0, 0.6400498654667552, 0.6400498654667552, 828, 3, 0.473663543, 138.698867771)
(-6665.895191524118, -6634.689914543369, 0.0, 0.0, 0.491384929464317, 0.470335123158449, 873, 4, 0.570891872, 139.13426176000002)
(-6665.612147905427, -6636.995592544402, 0.0, 0.0, 0.43116730999748515, 0.43116730999748515, 873, 5, 0.604035745, 139.176776326)
(-6645.612769768653, -6637.6259375790905, 0.0, 0.0, 0.12032663884153506, 0.12032663884153506, 1014, 6, 0.633456836, 140.350863951)
(-6640.892976341559, -6638.466933729872, 0.0, 0.0, 0.03654522400888108, 0.03654522400888108, 1041, 7, 0.65661923, 140.816755363)
(-6639.364407485677, -6638.486169627612, 0.0, 0.0, 0.013229489911157855, 0.013229489911157855, 1123, 8, 0.680668419, 141.37929184200001)
(-6639.113378155085, -6638.518213308435, 0.0, 0.0, 0.008965326711865881, 0.008965326711865881, 1141, 9, 0.71421814, 141.538329637)
(-6638.868176930076, -6638.551126297373, 0.0, 0.0, 0.004775901046335839, 0.004775901046335839, 1312, 10, 0.7350253339999999, 142.675043496)
(-6638.810707476925, -6638.57068494879, 0.0, 0.0, 0.0036155753930515386, 0.0036155753930515386, 1336, 11, 0.757926822, 142.866312308)
(-6638.698170402813, -6638.572458145623, 0.0, 0.0, 0.0018936640065653101, 0.0018936640065653101, 1848, 12, 0.799226598, 146.415181983)
(-6638.649189103137, -6638.572458145623, 0.0, 0.0, 0.0011739820217492073, 0.0011558352039951515, 1879, 13, 0.8444815059999999, 146.944417233)
(-6638.644875721478, -6638.578734192836, 0.0, 0.0, 0.000996320617553875, 0.000996320617553875, 1892, 14, 0.889674537, 147.075030093)
(-6638.61015691733, -6638.578734192836, 0.0, 0.0, 0.0004940336330919018, 0.00047333511812775196, 2099, 15, 0.938341366, 148.87301555300002)
(-6638.6003089904325, -6638.57928697327, 0.0, 0.0, 0.00031666439841004316, 0.00031666439841004316, 2164, 16, 0.987186487, 149.492327562)
(-6638.594245080007, -6638.580602550092, 0.0, 0.0, 0.00020550371730079854, 0.00020550371730079854, 2224, 17, 1.037442093, 150.13856477500002)
(-6638.589521179395, -6638.580850445871, 0.0, 0.0, 0.00013061125140068343, 0.00013061125140068343, 2318, 18, 1.09988047, 150.947471725)
(-6638.588727173296, -6638.580850445871, 0.0, 0.0, 0.00013038612252008587, 0.00011865077194662814, 2353, 19, 1.194200266, 151.26379844500002)
(-6638.588179151592, -6638.581147560555, 0.0, 0.0, 0.00010592008865677667, 0.00010592008865677667, 2363, 20, 1.269311812, 151.414501309)
(-6638.587092835154, -6638.581147560555, 0.0, 0.0, 0.00010037403618868295, 8.955640470337259e-5, 2440, 21, 1.343995671, 151.97651503900002)
