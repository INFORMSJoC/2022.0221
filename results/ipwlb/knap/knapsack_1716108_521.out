solving instance knapsack 500 3 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3.0119795185949997e+03
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 589.020481405, #pieces = 1500
Iteration 2	LB = -35476.55851093895	UB = -32287.755615924187	CPU = 1867.8958467260002, #pieces = 2182
Iteration 3	LB = -35476.53939417384	UB = -32287.755615924187	CPU = 1868.4739584980002, #pieces = 2182
Iteration 4	LB = -33233.21161154648	UB = -32597.413900118543	CPU = 2017.5640261520002, #pieces = 2500
Iteration 5	LB = -32954.79904481586	UB = -32790.603815562674	CPU = 2085.878178679, #pieces = 2601
Iteration 6	LB = -32928.79722306287	UB = -32816.01194668314	CPU = 2114.6198273210002, #pieces = 3010
Iteration 7	LB = -32897.87863790979	UB = -32827.82946282721	CPU = 2123.914929928, #pieces = 3260
Iteration 8	LB = -32875.107944787116	UB = -32842.78619714324	CPU = 2129.885744365, #pieces = 3583
Iteration 9	LB = -32867.24074383184	UB = -32844.16867073942	CPU = 2130.187915811, #pieces = 3603
Iteration 10	LB = -32866.084765099746	UB = -32848.05114150239	CPU = 2136.395307702, #pieces = 3934
Iteration 11	LB = -32859.66902811193	UB = -32848.37404813059	CPU = 2136.831415032, #pieces = 3994
Iteration 12	LB = -32858.117908006054	UB = -32850.95361678849	CPU = 2138.592511924, #pieces = 4293
Iteration 13	LB = -32856.523002521004	UB = -32850.95361678849	CPU = 2139.80420654, #pieces = 4448
Iteration 14	LB = -32855.20425806617	UB = -32851.27793056824	CPU = 2140.325383552, #pieces = 4456
Iteration 15	LB = -32855.16289128702	UB = -32852.277105557856	CPU = 2142.385285015, #pieces = 4737
Iteration 16	LB = -32854.58873650948	UB = -32852.277105557856	CPU = 2142.947210842, #pieces = 4761
Iteration 17	LB = -32854.50976890752	UB = -32852.49220360152	CPU = 2144.825397847, #pieces = 5028
Iteration 18	LB = -32853.94923331201	UB = -32852.49220360152	CPU = 2145.4936145350002, #pieces = 5042
Iteration 19	LB = -32853.925384129594	UB = -32852.70743413516	CPU = 2147.319760841, #pieces = 5258
Iteration 20	LB = -32853.68223460338	UB = -32852.70743413516	CPU = 2147.759891747, #pieces = 5260
Iteration 21	LB = -32853.68155214479	UB = -32852.78911621132	CPU = 2148.737490329, #pieces = 5357
Iteration 22	LB = -32853.5625784736	UB = -32852.96890250981	CPU = 2150.456395237, #pieces = 5546
Iteration 23	LB = -32853.45250955184	UB = -32853.00636980821	CPU = 2151.7956042270002, #pieces = 5652
Iteration 24	LB = -32853.38885147294	UB = -32853.00636980821	CPU = 2152.5501997710003, #pieces = 5655
Iteration 25	LB = -32853.388577323196	UB = -32853.013398751245	CPU = 2153.269130783, #pieces = 5662
Iteration 26	LB = -32853.386032044684	UB = -32853.0680823955	CPU = 2155.3904190440003, #pieces = 5872
Iteration 27	LB = -32853.31777790461	UB = -32853.0680823955	CPU = 2156.1817047170002, #pieces = 5876
Iteration 28	LB = -32853.316561973326	UB = -32853.0680823955	CPU = 2156.960354546, #pieces = 5878
Iteration 29	LB = -32853.316561973326	UB = -32853.070638378405	CPU = 2159.123658206, #pieces = 6110
Iteration 30	LB = -32853.25411919089	UB = -32853.10408869873	CPU = 2160.749886698, #pieces = 6204
Iteration 31	LB = -32853.23635841304	UB = -32853.131224304394	CPU = 2162.6317009940003, #pieces = 6349
Iteration 32	LB = -32853.217558479504	UB = -32853.131224304394	CPU = 2163.610141819, #pieces = 6356
Iteration 33	LB = -32853.21752258573	UB = -32853.13716575315	CPU = 2165.848436456, #pieces = 6542
Iteration 34	LB = -32853.20120872485	UB = -32853.13716575315	CPU = 2166.7975691730003, #pieces = 6542
Iteration 35	LB = -32853.19982894096	UB = -32853.13716575315	CPU = 2167.2544875020003, #pieces = 6545
Iteration 36	LB = -32853.19978508591	UB = -32853.14331340694	CPU = 2169.005607844, #pieces = 6730
Iteration 37	LB = -32853.18996733911	UB = -32853.14331340694	CPU = 2169.48770681, #pieces = 6734
Iteration 38	LB = -32853.18959040098	UB = -32853.14812078197	CPU = 2170.8162618250003, #pieces = 6857
Iteration 39	LB = -32853.18320583671	UB = -32853.148996750795	CPU = 2171.3145096910002, #pieces = 6861
WRITING LOG...
(-35476.55851093895, -32287.755615924187, 0.0, 0.0, 9.876198683323963, 9.876198683323963, 1500, 1, 0.110609199, 589.1430940920001)
(-35476.53939417384, -32287.755615924187, 0.0, 0.0, 9.876188325587085, 9.876139475848099, 2182, 2, 0.167836911, 1867.954343322)
(-33233.21161154648, -32597.413900118543, 0.0, 0.0, 1.9504544543811995, 1.9504544543811995, 2182, 3, 0.24568335800000002, 1868.5528620300001)
(-32954.79904481586, -32790.603815562674, 0.0, 0.0, 0.500738657259058, 0.500738657259058, 2500, 4, 0.285461043, 2017.605320526)
(-32928.79722306287, -32816.01194668314, 0.0, 0.0, 0.34368977120979594, 0.34368977120979594, 2601, 5, 0.48341754400000003, 2086.077444843)
(-32897.87863790979, -32827.82946282721, 0.0, 0.0, 0.21338351096862967, 0.21338351096862967, 3010, 6, 0.6161374930000001, 2114.753998996)
(-32875.107944787116, -32842.78619714324, 0.0, 0.0, 0.09841353729813743, 0.09841353729813743, 3260, 7, 0.8916852940000002, 2124.192239211)
(-32867.24074383184, -32844.16867073942, 0.0, 0.0, 0.07024709111598529, 0.07024709111598529, 3583, 8, 1.0372683980000001, 2130.0332447180003)
(-32866.084765099746, -32848.05114150239, 0.0, 0.0, 0.05490013249088694, 0.05490013249088694, 3603, 9, 1.248567382, 2130.401027616)
(-32859.66902811193, -32848.37404813059, 0.0, 0.0, 0.034385202642887, 0.034385202642887, 3934, 10, 1.316190508, 2136.464559388)
(-32858.117908006054, -32850.95361678849, 0.0, 0.0, 0.021808472597597075, 0.021808472597597075, 3994, 11, 1.434851051, 2136.9514777910003)
(-32856.523002521004, -32850.95361678849, 0.0, 0.0, 0.017253831857101908, 0.016953497902936324, 4293, 12, 1.721968128, 2138.881165572)
(-32855.20425806617, -32851.27793056824, 0.0, 0.0, 0.011951825759197435, 0.011951825759197435, 4448, 13, 2.1740635630000003, 2140.258404276)
(-32855.16289128702, -32852.277105557856, 0.0, 0.0, 0.008784126956842624, 0.008784126956842624, 4456, 14, 2.6257061960000003, 2140.778615832)
(-32854.58873650948, -32852.277105557856, 0.0, 0.0, 0.007729147885119056, 0.007036440561483056, 4737, 15, 3.0250762190000002, 2142.786436671)
(-32854.50976890752, -32852.49220360152, 0.0, 0.0, 0.006141285396236748, 0.006141285396236748, 4761, 16, 3.2925571060000003, 2143.216369972)
(-32853.94923331201, -32852.49220360152, 0.0, 0.0, 0.0048088005178254754, 0.004435065995777559, 5028, 17, 3.861172841, 2145.395899529)
(-32853.925384129594, -32852.70743413516, 0.0, 0.0, 0.0037073047841615016, 0.0037073047841615016, 5042, 18, 4.270380852000001, 2145.904653222)
(-32853.68223460338, -32852.70743413516, 0.0, 0.0, 0.004047365546225762, 0.002967184577323123, 5258, 19, 4.668112787000001, 2147.7192520950002)
(-32853.68155214479, -32852.78911621132, 0.0, 0.0, 0.002716469308933578, 0.002716469308933578, 5260, 20, 5.004808728000001, 2148.098259074)
(-32853.5625784736, -32852.96890250981, 0.0, 0.0, 0.0018070694479578105, 0.0018070694479578105, 5357, 21, 5.478610208000001, 2149.213376143)
(-32853.45250955184, -32853.00636980821, 0.0, 0.0, 0.0013579875723082934, 0.0013579875723082934, 5546, 22, 6.213766506000001, 2151.193045366)
(-32853.38885147294, -32853.00636980821, 0.0, 0.0, 0.0015649923445473126, 0.0011642211992006297, 5652, 23, 6.909434764000001, 2152.493148214)
(-32853.388577323196, -32853.013398751245, 0.0, 0.0, 0.00114199135219903, 0.00114199135219903, 5655, 24, 7.559327512000001, 2153.2016626160002)
(-32853.386032044684, -32853.0680823955, 0.0, 0.0, 0.0009677928660702633, 0.0009677928660702633, 5662, 25, 8.069695520000002, 2153.781323318)
(-32853.31777790461, -32853.0680823955, 0.0, 0.0, 0.000898958093312298, 0.0007600371097325822, 5872, 26, 8.799081349000001, 2156.1216255910003)
(-32853.316561973326, -32853.0680823955, 0.0, 0.0, 0.0008680206544197678, 0.0007563359903128171, 5876, 27, 9.521068990000002, 2156.905454369)
(-32853.316561973326, -32853.070638378405, 0.0, 0.0, 0.0007488041952807091, 0.0007485558888173216, 5878, 28, 10.172405019000001, 2157.613464308)
(-32853.25411919089, -32853.10408869873, 0.0, 0.0, 0.000456670674869331, 0.000456670674869331, 6110, 29, 11.031077435, 2159.9844721580002)
(-32853.23635841304, -32853.131224304394, 0.0, 0.0, 0.0003200124454856573, 0.0003200124454856573, 6204, 30, 11.815917182, 2161.5366634800002)
(-32853.217558479504, -32853.131224304394, 0.0, 0.0, 0.000331002159367842, 0.00026278826977145796, 6349, 31, 12.712809073999999, 2163.5302120740002)
(-32853.21752258573, -32853.13716575315, 0.0, 0.0, 0.0002445940921066536, 0.0002445940921066536, 6356, 32, 13.580278519999998, 2164.47950466)
(-32853.20120872485, -32853.13716575315, 0.0, 0.0, 0.00703527737056517, 0.00019493715738371677, 6542, 33, 14.480516470999998, 2166.7503635010003)
(-32853.19982894096, -32853.13716575315, 0.0, 0.0, 0.00026741399131565514, 0.00019073730309259197, 6542, 34, 14.883186659999998, 2167.2020336170003)
(-32853.19978508591, -32853.14331340694, 0.0, 0.0, 0.00017189125081679276, 0.00017189125081679276, 6545, 35, 15.314189506999998, 2167.687454296)
(-32853.18996733911, -32853.14331340694, 0.0, 0.0, 0.00021197751630517176, 0.0001420075142472819, 6730, 36, 15.733670612999997, 2169.426934892)
(-32853.18959040098, -32853.14812078197, 0.0, 0.0, 0.0001262272305239281, 0.0001262272305239281, 6734, 37, 16.132168920999998, 2169.888384534)
(-32853.18320583671, -32853.148996750795, 0.0, 0.0, 0.00010412726620372362, 0.00010412726620372362, 6857, 38, 16.56557479, 2171.251665019)
(-32853.18309953751, -32853.15639498427, 0.0, 0.0, 8.128458929317852e-5, 8.128458929317852e-5, 6861, 39, 16.988697721, 2171.739636707)
