solving instance knapsack 100 6 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3.5314730507579998e+03
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 69.526949242, #pieces = 400
Iteration 2	LB = -3437.6913478323	UB = -3126.0756898806144	CPU = 69.88117784, #pieces = 400
Iteration 3	LB = -3157.455840726135	UB = -3126.0756898806144	CPU = 70.11669666600001, #pieces = 420
Iteration 4	LB = -3147.7732281838184	UB = -3126.0756898806144	CPU = 70.251453412, #pieces = 434
Iteration 5	LB = -3141.548273588988	UB = -3126.0756898806144	CPU = 70.83580650600001, #pieces = 514
Iteration 6	LB = -3130.999516526839	UB = -3126.517960008262	CPU = 71.226626212, #pieces = 544
Iteration 7	LB = -3127.6812294115493	UB = -3126.517960008262	CPU = 71.27923803600001, #pieces = 546
Iteration 8	LB = -3127.4972262078963	UB = -3126.706870279683	CPU = 71.527588249, #pieces = 577
Iteration 9	LB = -3127.142143289907	UB = -3126.825039271497	CPU = 71.615244817, #pieces = 585
Iteration 10	LB = -3127.0809787749495	UB = -3126.8370687372426	CPU = 72.345546552, #pieces = 692
Iteration 11	LB = -3126.9653538726393	UB = -3126.841313386166	CPU = 72.514651463, #pieces = 712
Iteration 12	LB = -3126.9464963675696	UB = -3126.8470073007447	CPU = 74.15558047900001, #pieces = 948
Iteration 13	LB = -3126.899223846388	UB = -3126.8482267022027	CPU = 74.66526894900001, #pieces = 985
Iteration 14	LB = -3126.8792339558654	UB = -3126.8482267022027	CPU = 74.859755101, #pieces = 991
Iteration 15	LB = -3126.8774938345523	UB = -3126.8482267022027	CPU = 75.028445586, #pieces = 993
Iteration 16	LB = -3126.876101862648	UB = -3126.8506961666553	CPU = 75.976429315, #pieces = 1087
Iteration 17	LB = -3126.862961931914	UB = -3126.851391830309	CPU = 76.468058388, #pieces = 1123
Iteration 18	LB = -3126.8594226529945	UB = -3126.851391830309	CPU = 76.693513597, #pieces = 1128
Iteration 19	LB = -3126.85849678963	UB = -3126.8515976509148	CPU = 77.155956927, #pieces = 1156
Iteration 20	LB = -3126.856732225312	UB = -3126.8522206856264	CPU = 77.66926536000001, #pieces = 1200
Iteration 21	LB = -3126.85563647091	UB = -3126.8522206856264	CPU = 77.821330646, #pieces = 1204
Iteration 22	LB = -3126.855467896854	UB = -3126.8522206856264	CPU = 78.162445633, #pieces = 1242
WRITING LOG...
(-3437.6913478323, -3126.0756898806144, 0.0, 0.0, 9.968269769040244, 9.968269769040244, 400, 1, 0.06999730400000001, 69.602820022)
(-3157.455840726135, -3126.0756898806144, 0.0, 0.0, 1.2077874665913557, 1.0038192916153998, 400, 2, 0.14594873400000002, 69.95734534600001)
(-3147.7732281838184, -3126.0756898806144, 0.0, 0.0, 0.7383738661984226, 0.6940823081616648, 420, 3, 0.16281453700000004, 70.133846514)
(-3141.548273588988, -3126.0756898806144, 0.0, 0.0, 0.4949523058082035, 0.4949523058082035, 434, 4, 0.17623691900000005, 70.265114679)
(-3130.999516526839, -3126.517960008262, 0.0, 0.0, 0.14334018150228034, 0.14334018150228034, 514, 5, 0.22035730500000006, 70.880132495)
(-3127.6812294115493, -3126.517960008262, 0.0, 0.0, 0.09208602640503674, 0.03720654792861912, 544, 6, 0.24725961300000007, 71.253753954)
(-3127.4972262078963, -3126.706870279683, 0.0, 0.0, 0.02527758312511273, 0.02527758312511273, 546, 7, 0.3021463830000001, 71.334335581)
(-3127.142143289907, -3126.825039271497, 0.0, 0.0, 0.010141405880631456, 0.010141405880631456, 577, 8, 0.3364259580000001, 71.562082515)
(-3127.0809787749495, -3126.8370687372426, 0.0, 0.0, 0.007800535568211887, 0.007800535568211887, 585, 9, 0.3744403460000001, 71.653486101)
(-3126.9653538726393, -3126.841313386166, 0.0, 0.0, 0.003966958154939971, 0.003966958154939971, 692, 10, 0.4178362000000001, 72.389159952)
(-3126.9464963675696, -3126.8470073007447, 0.0, 0.0, 0.0031817695778703467, 0.0031817695778703467, 712, 11, 0.45553542800000013, 72.55257134300001)
(-3126.899223846388, -3126.8482267022027, 0.0, 0.0, 0.0016309440205541507, 0.0016309440205541507, 948, 12, 0.5832355500000002, 74.28349710100001)
(-3126.8792339558654, -3126.8482267022027, 0.0, 0.0, 0.0010187182615241067, 0.0009916456257094172, 985, 13, 0.7368769590000002, 74.81914272200001)
(-3126.8774938345523, -3126.8482267022027, 0.0, 0.0, 0.0013433154909566342, 0.0009359946574838042, 991, 14, 0.8915914610000002, 75.014703835)
(-3126.876101862648, -3126.8506961666553, 0.0, 0.0, 0.0008125010901112009, 0.0008125010901112009, 993, 15, 1.048752566, 75.185842093)
(-3126.862961931914, -3126.851391830309, 0.0, 0.0, 0.0003700240323368001, 0.0003700240323368001, 1087, 16, 1.241300719, 76.169212219)
(-3126.8594226529945, -3126.851391830309, 0.0, 0.0, 0.00026021455137096975, 0.0002568341657250242, 1123, 17, 1.437337525, 76.664336237)
(-3126.85849678963, -3126.8515976509148, 0.0, 0.0, 0.00022064170619358038, 0.00022064170619358038, 1128, 18, 1.631677069, 76.888098533)
(-3126.856732225312, -3126.8522206856264, 0.0, 0.0, 0.00014428375142781053, 0.00014428375142781053, 1156, 19, 1.81733549, 77.341844906)
(-3126.85563647091, -3126.8522206856264, 0.0, 0.0, 0.00012039803061590473, 0.00010924038114692127, 1200, 20, 1.933117897, 77.785314786)
(-3126.855467896854, -3126.8522206856264, 0.0, 0.0, 0.00010436728257718343, 0.0001038492067528934, 1204, 21, 2.049856682, 77.93831719900001)
(-3126.855079398001, -3126.852318292479, 0.0, 0.0, 8.830303580017635e-5, 8.830303580017635e-5, 1242, 22, 2.181231677, 78.294095096)
