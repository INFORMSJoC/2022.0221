solving instance knapsack 50 10 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.887524886
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.112475114, #pieces = 50
Iteration 2	LB = -2228.3241607619416	UB = 0.0	CPU = 0.48221570300000005, #pieces = 138
Iteration 3	LB = -2068.9323608192335	UB = -1876.541817554623	CPU = 0.6395548050000001, #pieces = 172
Iteration 4	LB = -1966.1327948132725	UB = -1876.541817554623	CPU = 0.728768465, #pieces = 180
Iteration 5	LB = -1959.9172301382064	UB = -1876.541817554623	CPU = 0.747500618, #pieces = 186
Iteration 6	LB = -1936.4244782461071	UB = -1876.541817554623	CPU = 0.842752594, #pieces = 190
Iteration 7	LB = -1935.1330354393806	UB = -1876.541817554623	CPU = 0.947765912, #pieces = 196
Iteration 8	LB = -1932.6993691884195	UB = -1876.541817554623	CPU = 1.208101883, #pieces = 255
Iteration 9	LB = -1900.020201294049	UB = -1876.541817554623	CPU = 1.347946678, #pieces = 259
Iteration 10	LB = -1898.6926608617334	UB = -1876.541817554623	CPU = 1.4972851180000002, #pieces = 266
Iteration 11	LB = -1894.2958435113133	UB = -1876.541817554623	CPU = 1.609636467, #pieces = 270
Iteration 12	LB = -1892.735278041408	UB = -1876.541817554623	CPU = 1.863165954, #pieces = 316
Iteration 13	LB = -1882.686730544481	UB = -1876.541817554623	CPU = 2.095311092, #pieces = 346
Iteration 14	LB = -1879.6364992519052	UB = -1876.541817554623	CPU = 2.2373746530000003, #pieces = 351
Iteration 15	LB = -1879.2725316033927	UB = -1876.541817554623	CPU = 2.5629470480000003, #pieces = 396
Iteration 16	LB = -1877.3315929218995	UB = -1876.541817554623	CPU = 2.8499324340000003, #pieces = 437
Iteration 17	LB = -1876.9076999014046	UB = -1876.541817554623	CPU = 3.177174763, #pieces = 462
Iteration 18	LB = -1876.7491624427698	UB = -1876.541817554623	CPU = 3.5336739130000003, #pieces = 496
Iteration 19	LB = -1876.6635091725054	UB = -1876.541817554623	CPU = 3.9324878260000005, #pieces = 536
Iteration 20	LB = -1876.582970266648	UB = -1876.541817554623	CPU = 4.3225652000000006, #pieces = 576
Iteration 21	LB = -1876.558138020512	UB = -1876.541817554623	CPU = 4.790938118000001, #pieces = 622
Iteration 22	LB = -1876.547408407935	UB = -1876.541817554623	CPU = 5.26404897, #pieces = 663
WRITING LOG...
(-2228.3241607619416, 0.0, 0.0, 0.0, Inf, Inf, 50, 1, 0.05794761700000001, 0.17838515400000002)
(-2068.9323608192335, -1876.541817554623, 0.0, 0.0, 10.252398399270431, 10.252398399270431, 138, 2, 0.09402544800000001, 0.518441585)
(-1966.1327948132725, -1876.541817554623, 0.0, 0.0, 4.892856657256377, 4.774259567282018, 172, 3, 0.16619804500000002, 0.711861968)
(-1959.9172301382064, -1876.541817554623, 0.0, 0.0, 5.114899870262777, 4.443035151341964, 180, 4, 0.17556273800000002, 0.738264679)
(-1936.4244782461071, -1876.541817554623, 0.0, 0.0, 3.981089514601895, 3.1911178387444035, 186, 5, 0.263954444, 0.8360263130000001)
(-1935.1330354393806, -1876.541817554623, 0.0, 0.0, 4.057163687815405, 3.122297480218663, 190, 6, 0.3593537, 0.93827906)
(-1932.6993691884195, -1876.541817554623, 0.0, 0.0, 3.1369476943788555, 2.992608590357819, 196, 7, 0.44255642900000003, 1.0311217670000001)
(-1900.020201294049, -1876.541817554623, 0.0, 0.0, 2.3615611956859723, 1.2511516407356849, 255, 8, 0.575806824, 1.3414838640000002)
(-1898.6926608617334, -1876.541817554623, 0.0, 0.0, 1.481951741623437, 1.1804076573138003, 259, 9, 0.704499446, 1.4767603610000002)
(-1894.2958435113133, -1876.541817554623, 0.0, 0.0, 1.7252702562744975, 0.9461034009796782, 266, 10, 0.809974085, 1.6029000850000001)
(-1892.735278041408, -1876.541817554623, 0.0, 0.0, 0.8644135621007829, 0.8629416267358815, 270, 11, 0.933962635, 1.733764834)
(-1882.686730544481, -1876.541817554623, 0.0, 0.0, 0.3274594220269216, 0.3274594220269216, 316, 12, 1.060391192, 1.9897350900000002)
(-1879.6364992519052, -1876.541817554623, 0.0, 0.0, 0.27300152953669793, 0.16491408122814355, 346, 13, 1.189514821, 2.2245895730000003)
(-1879.2725316033927, -1876.541817554623, 0.0, 0.0, 0.1455184224100114, 0.1455184224100114, 351, 14, 1.3683432899999999, 2.416346287)
(-1877.3315929218995, -1876.541817554623, 0.0, 0.0, 0.04354670116171532, 0.04208674487763952, 396, 15, 1.514042932, 2.7087869220000003)
(-1876.9076999014046, -1876.541817554623, 0.0, 0.0, 0.019497692156858527, 0.019497692156858527, 437, 16, 1.742757003, 3.0787994110000003)
(-1876.7491624427698, -1876.541817554623, 0.0, 0.0, 0.01250881150031587, 0.011049308158607034, 462, 17, 1.979691707, 3.4142507490000003)
(-1876.6635091725054, -1876.541817554623, 0.0, 0.0, 0.006484887080263092, 0.006484887080263092, 496, 18, 2.22281258, 3.7769407740000003)
(-1876.582970266648, -1876.541817554623, 0.0, 0.0, 0.002193007991616356, 0.002193007991616356, 536, 19, 2.487022954, 4.196836845)
(-1876.558138020512, -1876.541817554623, 0.0, 0.0, 0.0008697096827880251, 0.0008697096827880251, 576, 20, 2.765249494, 4.6009450030000005)
(-1876.547408407935, -1876.541817554623, 0.0, 0.0, 0.00029793385149818794, 0.00029793385149818794, 622, 21, 3.097366362, 5.123243513)
(-1876.5428648619243, -1876.541817554623, 0.0, 0.0, 5.5810496274623754e-5, 5.5810496274623754e-5, 663, 22, 3.431617608, 5.598447048000001)
