solving instance knapsack 100 9 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3.5315571945359998e+03
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 69.442805464, #pieces = 400
Iteration 2	LB = -3826.425347888485	UB = -3478.930393639283	CPU = 69.860506308, #pieces = 404
Iteration 3	LB = -3511.6224721299136	UB = -3478.930393639283	CPU = 70.114965114, #pieces = 425
Iteration 4	LB = -3501.259718584158	UB = -3478.930393639283	CPU = 70.218129346, #pieces = 427
Iteration 5	LB = -3499.764872594794	UB = -3478.930393639283	CPU = 70.623535852, #pieces = 475
Iteration 6	LB = -3490.4626590385633	UB = -3478.930393639283	CPU = 70.728920288, #pieces = 476
Iteration 7	LB = -3490.314437994255	UB = -3478.930393639283	CPU = 70.853518952, #pieces = 476
Iteration 8	LB = -3490.283232140818	UB = -3478.930393639283	CPU = 71.061833695, #pieces = 494
Iteration 9	LB = -3486.177372548301	UB = -3480.2448513765003	CPU = 71.542484519, #pieces = 543
Iteration 10	LB = -3481.591665103042	UB = -3480.4211874929747	CPU = 71.83473605200001, #pieces = 575
Iteration 11	LB = -3480.929978333754	UB = -3480.514497644225	CPU = 72.08161746, #pieces = 602
Iteration 12	LB = -3480.810024377149	UB = -3480.559389851122	CPU = 72.265658353, #pieces = 624
Iteration 13	LB = -3480.736991783322	UB = -3480.559389851122	CPU = 73.023929009, #pieces = 721
Iteration 14	LB = -3480.70258050775	UB = -3480.5642930461363	CPU = 73.14166784800001, #pieces = 728
Iteration 15	LB = -3480.69551082903	UB = -3480.5854645254617	CPU = 74.918526488, #pieces = 961
Iteration 16	LB = -3480.6446560742843	UB = -3480.5861349948264	CPU = 75.367923691, #pieces = 988
Iteration 17	LB = -3480.6217339127757	UB = -3480.5877942998695	CPU = 76.078433184, #pieces = 1052
Iteration 18	LB = -3480.6104697451838	UB = -3480.5877942998695	CPU = 76.24849703800001, #pieces = 1059
Iteration 19	LB = -3480.6090728904414	UB = -3480.5915302229473	CPU = 77.09845156600001, #pieces = 1127
Iteration 20	LB = -3480.6007307574428	UB = -3480.591952452939	CPU = 77.56171387500001, #pieces = 1164
Iteration 21	LB = -3480.5984529159714	UB = -3480.592555265817	CPU = 77.796771148, #pieces = 1179
Iteration 22	LB = -3480.5977324829673	UB = -3480.5927536247364	CPU = 78.18689008000001, #pieces = 1218
Iteration 23	LB = -3480.596746872921	UB = -3480.5927874694767	CPU = 78.37574506700001, #pieces = 1220
Iteration 24	LB = -3480.596624632646	UB = -3480.5927874694767	CPU = 78.523525609, #pieces = 1221
Iteration 25	LB = -3480.596618661296	UB = -3480.593079322956	CPU = 78.89325001200001, #pieces = 1259
WRITING LOG...
(-3826.425347888485, -3478.930393639283, 0.0, 0.0, 9.988557255544567, 9.988557255544567, 400, 1, 0.12854405900000002, 69.578088441)
(-3511.6224721299136, -3478.930393639283, 0.0, 0.0, 1.0311669260072809, 0.9397163723195868, 404, 2, 0.20359271900000003, 69.935807526)
(-3501.259718584158, -3478.930393639283, 0.0, 0.0, 0.7026154211308557, 0.6418445446824887, 425, 3, 0.28794244300000005, 70.19958963100001)
(-3499.764872594794, -3478.930393639283, 0.0, 0.0, 0.6198786316110229, 0.5988759934261292, 427, 4, 0.343553156, 70.274031968)
(-3490.4626590385633, -3478.930393639283, 0.0, 0.0, 0.3627480920865973, 0.3314888225520506, 475, 5, 0.437999854, 70.718213362)
(-3490.314437994255, -3478.930393639283, 0.0, 0.0, 0.41371281624793826, 0.3272282876307647, 476, 6, 0.556381399, 70.847539365)
(-3490.283232140818, -3478.930393639283, 0.0, 0.0, 0.35373243614320665, 0.32633129200550254, 476, 7, 0.5792235790000001, 70.876591249)
(-3486.177372548301, -3480.2448513765003, 0.0, 0.0, 0.17046275262656088, 0.17046275262656088, 494, 8, 0.6072163960000001, 71.09009795300001)
(-3481.591665103042, -3480.4211874929747, 0.0, 0.0, 0.03363034377199785, 0.03363034377199785, 543, 9, 0.6667155150000001, 71.60221183)
(-3480.929978333754, -3480.514497644225, 0.0, 0.0, 0.011937335408619852, 0.011937335408619852, 575, 10, 0.7396477580000002, 71.907939729)
(-3480.810024377149, -3480.559389851122, 0.0, 0.0, 0.007200984036014129, 0.007200984036014129, 602, 11, 0.7932732580000001, 72.135463433)
(-3480.736991783322, -3480.559389851122, 0.0, 0.0, 0.005106131373544813, 0.005102683572013451, 624, 12, 0.8899961130000001, 72.362618647)
(-3480.70258050775, -3480.5642930461363, 0.0, 0.0, 0.003973133376392039, 0.003973133376392039, 721, 13, 0.9621910240000001, 73.096367803)
(-3480.69551082903, -3480.5854645254617, 0.0, 0.0, 0.0031617181847652305, 0.0031617181847652305, 728, 14, 1.087892488, 73.26765526300001)
(-3480.6446560742843, -3480.5861349948264, 0.0, 0.0, 0.0016813570240237564, 0.0016813570240237564, 961, 15, 1.230248523, 75.061147327)
(-3480.6217339127757, -3480.5877942998695, 0.0, 0.0, 0.0009751115303486057, 0.0009751115303486057, 988, 16, 1.398300048, 75.536251877)
(-3480.6104697451838, -3480.5877942998695, 0.0, 0.0, 0.0006763977153898765, 0.0006514832164662019, 1052, 17, 1.5222174370000001, 76.202618231)
(-3480.6090728904414, -3480.5915302229473, 0.0, 0.0, 0.0005040139683671148, 0.0005040139683671148, 1059, 18, 1.6670793350000002, 76.393621787)
(-3480.6007307574428, -3480.591952452939, 0.0, 0.0, 0.0002522072286449669, 0.0002522072286449669, 1127, 19, 1.8082394760000002, 77.23984921200001)
(-3480.5984529159714, -3480.592555265817, 0.0, 0.0, 0.00016944385362323373, 0.00016944385362323373, 1164, 20, 1.9363709560000002, 77.690111865)
(-3480.5977324829673, -3480.5927536247364, 0.0, 0.0, 0.00014304627353444805, 0.00014304627353444805, 1179, 21, 2.0620766070000003, 77.922720661)
(-3480.596746872921, -3480.5927874694767, 0.0, 0.0, 0.00011375658360541088, 0.00011375658360541088, 1218, 22, 2.208373996, 78.33343718100001)
(-3480.596624632646, -3480.5927874694767, 0.0, 0.0, 0.0001641210203900689, 0.00011024453027882753, 1220, 23, 2.3485649630000003, 78.516190427)
(-3480.596618661296, -3480.593079322956, 0.0, 0.0, 0.0001016877945617749, 0.0001016877945617749, 1221, 24, 2.4840645930000003, 78.659281054)
(-3480.5961376585865, -3480.593079322956, 0.0, 0.0, 9.442507708516001e-5, 8.786823282448534e-5, 1259, 25, 2.746111142, 79.155553061)
