solving instance knapsack 100 7 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3531.583725889
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 69.416274111, #pieces = 400
Iteration 2	LB = -3852.440962162532	UB = -3504.0191781962203	CPU = 69.78410820100001, #pieces = 401
Iteration 3	LB = -3538.329306108003	UB = -3504.0191781962203	CPU = 69.940789819, #pieces = 408
Iteration 4	LB = -3531.5024210833694	UB = -3504.0191781962203	CPU = 70.065682561, #pieces = 417
Iteration 5	LB = -3526.9901747257973	UB = -3504.0191781962203	CPU = 70.687966129, #pieces = 507
Iteration 6	LB = -3511.6868763727643	UB = -3504.531311543028	CPU = 71.17207333200001, #pieces = 548
Iteration 7	LB = -3505.288856529294	UB = -3504.531311543028	CPU = 71.32597601500001, #pieces = 569
Iteration 8	LB = -3504.9323199547425	UB = -3504.55617237149	CPU = 71.63867234, #pieces = 614
Iteration 9	LB = -3504.755854775211	UB = -3504.55617237149	CPU = 71.69079236200001, #pieces = 618
Iteration 10	LB = -3504.725307651343	UB = -3504.571599613243	CPU = 73.640902947, #pieces = 915
Iteration 11	LB = -3504.6528025929815	UB = -3504.5722924344836	CPU = 73.967478428, #pieces = 931
Iteration 12	LB = -3504.6231461842017	UB = -3504.5722924344836	CPU = 74.099695897, #pieces = 934
Iteration 13	LB = -3504.6209073896853	UB = -3504.5747868314975	CPU = 74.62522473300001, #pieces = 990
Iteration 14	LB = -3504.602736146349	UB = -3504.5747868314975	CPU = 75.076823028, #pieces = 1032
Iteration 15	LB = -3504.5932141249546	UB = -3504.5747868314975	CPU = 75.433832975, #pieces = 1068
Iteration 16	LB = -3504.588559098121	UB = -3504.575094359022	CPU = 76.197193119, #pieces = 1131
Iteration 17	LB = -3504.581256641367	UB = -3504.5753087729827	CPU = 76.632229206, #pieces = 1173
Iteration 18	LB = -3504.579803912692	UB = -3504.575589428604	CPU = 77.078383269, #pieces = 1221
WRITING LOG...
(-3852.440962162532, -3504.0191781962203, 0.0, 0.0, 9.943489639964533, 9.943489639964533, 400, 1, 0.105634297, 69.52897193)
(-3538.329306108003, -3504.0191781962203, 0.0, 0.0, 1.0207826653077918, 0.9791649579225393, 401, 2, 0.21380570200000001, 69.89252269400001)
(-3531.5024210833694, -3504.0191781962203, 0.0, 0.0, 0.9051240750474627, 0.7843348306471539, 408, 3, 0.260908597, 69.98812487500001)
(-3526.9901747257973, -3504.0191781962203, 0.0, 0.0, 0.6555613814134954, 0.6555613814134954, 417, 4, 0.28476485300000004, 70.08977582200001)
(-3511.6868763727643, -3504.531311543028, 0.0, 0.0, 0.20418036517943647, 0.20418036517943647, 507, 5, 0.30893688900000005, 70.712369206)
(-3505.288856529294, -3504.531311543028, 0.0, 0.0, 0.02245827667958023, 0.02161615688154797, 548, 6, 0.34395063300000006, 71.207319338)
(-3504.9323199547425, -3504.55617237149, 0.0, 0.0, 0.010733101846616931, 0.010733101846616931, 569, 7, 0.39200207100000006, 71.374261229)
(-3504.755854775211, -3504.55617237149, 0.0, 0.0, 0.005712078121877961, 0.005697794353967406, 614, 8, 0.4188535420000001, 71.665760331)
(-3504.725307651343, -3504.571599613243, 0.0, 0.0, 0.004385929456167604, 0.004385929456167604, 618, 9, 0.44860582700000007, 71.720789208)
(-3504.6528025929815, -3504.5722924344836, 0.0, 0.0, 0.0022972891348731683, 0.0022972891348731683, 915, 10, 0.5222155330000001, 73.71474153)
(-3504.6231461842017, -3504.5722924344836, 0.0, 0.0, 0.0017957852670953997, 0.0014510686461747405, 931, 11, 0.6324628350000001, 74.077954473)
(-3504.6209073896853, -3504.5747868314975, 0.0, 0.0, 0.0013160101008856662, 0.0013160101008856662, 934, 12, 0.7222191430000001, 74.189705057)
(-3504.602736146349, -3504.5747868314975, 0.0, 0.0, 0.0008165865960293377, 0.0007975094426985011, 990, 13, 0.8225130130000001, 74.725770682)
(-3504.5932141249546, -3504.5747868314975, 0.0, 0.0, 0.0005422720025415684, 0.0005258068261610745, 1032, 14, 0.9368232400000002, 75.19138919400001)
(-3504.588559098121, -3504.575094359022, 0.0, 0.0, 0.0003842046107340095, 0.0003842046107340095, 1068, 15, 1.1213138390000001, 75.618579925)
(-3504.581256641367, -3504.5753087729827, 0.0, 0.0, 0.00016971723704705004, 0.00016971723704705004, 1131, 16, 1.299385956, 76.37551190500001)
(-3504.579803912692, -3504.575589428604, 0.0, 0.0, 0.00012025661825827789, 0.00012025661825827789, 1173, 17, 1.4846491430000002, 76.817779175)
(-3504.5790878373955, -3504.575772118338, 0.0, 0.0, 9.461113906378868e-5, 9.461113906378868e-5, 1221, 18, 1.6839429540000002, 77.27793986900001)
