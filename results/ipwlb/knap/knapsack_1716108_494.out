solving instance knapsack 200 10 sinabc2
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.231308437
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.7686915630000001, #pieces = 200
Iteration 2	LB = -7460.975574914318	UB = 0.0	CPU = 2.388565921, #pieces = 638
Iteration 3	LB = -7122.249631851421	UB = -6412.224163448945	CPU = 3.024747745, #pieces = 804
Iteration 4	LB = -6872.483394481053	UB = -6412.224163448945	CPU = 3.298590352, #pieces = 882
Iteration 5	LB = -6753.6794779119455	UB = -6412.224163448945	CPU = 3.4501668550000004, #pieces = 910
Iteration 6	LB = -6713.548325931826	UB = -6412.224163448945	CPU = 3.6037078, #pieces = 928
Iteration 7	LB = -6694.030775421646	UB = -6412.224163448945	CPU = 3.7432073760000004, #pieces = 946
Iteration 8	LB = -6673.148541667823	UB = -6412.224163448945	CPU = 3.937839181, #pieces = 960
Iteration 9	LB = -6664.423753292754	UB = -6412.224163448945	CPU = 4.095954645, #pieces = 972
Iteration 10	LB = -6659.829798105712	UB = -6412.224163448945	CPU = 4.2096462820000005, #pieces = 980
Iteration 11	LB = -6657.077124354156	UB = -6412.224163448945	CPU = 4.457545498, #pieces = 990
Iteration 12	LB = -6655.616071739025	UB = -6418.480613784714	CPU = 4.782192985, #pieces = 1069
Iteration 13	LB = -6597.725144088564	UB = -6418.480613784714	CPU = 4.902210044, #pieces = 1077
Iteration 14	LB = -6594.563864515001	UB = -6433.482020560887	CPU = 5.044738383, #pieces = 1096
Iteration 15	LB = -6585.596722139836	UB = -6433.482020560887	CPU = 5.2142642630000005, #pieces = 1100
Iteration 16	LB = -6585.270114325846	UB = -6445.802913237841	CPU = 5.409596475000001, #pieces = 1102
Iteration 17	LB = -6585.221914426095	UB = -6464.665801509811	CPU = 6.1679387310000005, #pieces = 1268
Iteration 18	LB = -6518.903883713508	UB = -6464.665801509811	CPU = 6.253328167, #pieces = 1272
Iteration 19	LB = -6517.999331835707	UB = -6469.778353428978	CPU = 6.7758500260000005, #pieces = 1412
Iteration 20	LB = -6494.539109940022	UB = -6469.778353428978	CPU = 6.880757566000001, #pieces = 1414
Iteration 21	LB = -6494.508776900094	UB = -6471.159495710687	CPU = 7.257981571, #pieces = 1503
Iteration 22	LB = -6486.686664616727	UB = -6471.159495710687	CPU = 7.513469512, #pieces = 1507
Iteration 23	LB = -6486.653692500446	UB = -6471.159495710687	CPU = 7.741612771000001, #pieces = 1511
Iteration 24	LB = -6486.653692500446	UB = -6474.43364412813	CPU = 8.798687670000001, #pieces = 1744
Iteration 25	LB = -6482.026563824794	UB = -6474.43364412813	CPU = 8.954812219, #pieces = 1755
Iteration 26	LB = -6481.242504476314	UB = -6474.43364412813	CPU = 9.203606523000001, #pieces = 1757
Iteration 27	LB = -6481.235541801283	UB = -6474.440912186091	CPU = 9.372319089000001, #pieces = 1761
Iteration 28	LB = -6481.039840007374	UB = -6474.763587117499	CPU = 9.621932093, #pieces = 1773
Iteration 29	LB = -6480.742064933552	UB = -6475.193812098455	CPU = 16.394371797, #pieces = 3364
Iteration 30	LB = -6477.258774890545	UB = -6475.193812098455	CPU = 16.605930155, #pieces = 3365
Iteration 31	LB = -6477.258774890545	UB = -6475.193812098455	CPU = 16.841748204, #pieces = 3368
Iteration 32	LB = -6477.258774890545	UB = -6475.193812098455	CPU = 17.226365126, #pieces = 3382
Iteration 33	LB = -6477.064636435111	UB = -6475.193812098455	CPU = 17.473819882, #pieces = 3383
Iteration 34	LB = -6476.979274507131	UB = -6475.298759908484	CPU = 18.864436613000002, #pieces = 3647
Iteration 35	LB = -6476.054517095475	UB = -6475.398083194424	CPU = 20.031178461, #pieces = 3811
Iteration 36	LB = -6475.626042441441	UB = -6475.398083194424	CPU = 20.435704754, #pieces = 3837
Iteration 37	LB = -6475.6091080149845	UB = -6475.398083194424	CPU = 20.896420751, #pieces = 3855
Iteration 38	LB = -6475.602926185805	UB = -6475.433676142757	CPU = 21.622477915, #pieces = 3950
Iteration 39	LB = -6475.5396935790495	UB = -6475.443633606372	CPU = 22.124787932, #pieces = 3995
Iteration 40	LB = -6475.513181760982	UB = -6475.451010943947	CPU = 22.689536873, #pieces = 4080
Iteration 41	LB = -6475.489319364695	UB = -6475.451010943947	CPU = 23.044197717000003, #pieces = 4089
Iteration 42	LB = -6475.486133697185	UB = -6475.455090143258	CPU = 23.545726409, #pieces = 4155
Iteration 43	LB = -6475.476461678129	UB = -6475.455145619319	CPU = 23.870230912, #pieces = 4169
Iteration 44	LB = -6475.474397399269	UB = -6475.455145619319	CPU = 24.162565668000003, #pieces = 4179
Iteration 45	LB = -6475.4729699111695	UB = -6475.459128130692	CPU = 24.78181791, #pieces = 4321
Iteration 46	LB = -6475.466373461153	UB = -6475.459396433206	CPU = 25.302981216000003, #pieces = 4407
WRITING LOG...
(-7460.975574914318, 0.0, 0.0, 0.0, Inf, Inf, 200, 1, 0.071798466, 0.8507266320000001)
(-7122.249631851421, -6412.224163448945, 0.0, 0.0, 11.072998234368885, 11.072998234368885, 638, 2, 0.154994146, 2.472112562)
(-6872.483394481053, -6412.224163448945, 0.0, 0.0, 8.513951556892358, 7.177840625966966, 804, 3, 0.237820829, 3.107933092)
(-6753.6794779119455, -6412.224163448945, 0.0, 0.0, 7.887196264688952, 5.325068272088326, 882, 4, 0.297391469, 3.35857683)
(-6713.548325931826, -6412.224163448945, 0.0, 0.0, 6.9506676791422874, 4.6992144192415175, 910, 5, 0.39439166400000003, 3.547570448)
(-6694.030775421646, -6412.224163448945, 0.0, 0.0, 6.8764281849748725, 4.394834066766711, 928, 6, 0.47397124600000007, 3.6836775590000004)
(-6673.148541667823, -6412.224163448945, 0.0, 0.0, 5.171742946802299, 4.069171188777268, 946, 7, 0.6205272340000001, 3.890146833)
(-6664.423753292754, -6412.224163448945, 0.0, 0.0, 4.805990233094548, 3.9331062579097105, 960, 8, 0.7425322390000001, 4.06025723)
(-6659.829798105712, -6412.224163448945, 0.0, 0.0, 4.837073513816244, 3.861462549425094, 972, 9, 0.826981099, 4.1807914550000005)
(-6657.077124354156, -6412.224163448945, 0.0, 0.0, 4.744576103208793, 3.8185340166509714, 980, 10, 1.033701683, 4.416797479)
(-6655.616071739025, -6418.480613784714, 0.0, 0.0, 3.6945730963964425, 3.6945730963964425, 990, 11, 1.1423989760000002, 4.566678139)
(-6597.725144088564, -6418.480613784714, 0.0, 0.0, 3.5934368846622355, 2.792631793868692, 1069, 12, 1.2360963070000002, 4.876263133)
(-6594.563864515001, -6433.482020560887, 0.0, 0.0, 2.5038049914386944, 2.5038049914386944, 1077, 13, 1.3188899550000002, 4.985415057)
(-6585.596722139836, -6433.482020560887, 0.0, 0.0, 2.6069565847333958, 2.3644225800709946, 1096, 14, 1.47162856, 5.197891898)
(-6585.270114325846, -6445.802913237841, 0.0, 0.0, 2.1636901246480864, 2.1636901246480864, 1100, 15, 1.6539888180000002, 5.397003686000001)
(-6585.221914426095, -6464.665801509811, 0.0, 0.0, 1.864846793598033, 1.864846793598033, 1102, 16, 1.8016684640000002, 5.557659411)
(-6518.903883713508, -6464.665801509811, 0.0, 0.0, 0.9909633703836705, 0.8389928245173857, 1268, 17, 1.8658092110000002, 6.232507793000001)
(-6517.999331835707, -6469.778353428978, 0.0, 0.0, 0.7453265903795909, 0.7453265903795909, 1272, 18, 1.9913736960000001, 6.379310823)
(-6494.539109940022, -6469.778353428978, 0.0, 0.0, 0.45433809238863115, 0.38271413885331407, 1412, 19, 2.083848183, 6.868766728000001)
(-6494.508776900094, -6471.159495710687, 0.0, 0.0, 0.360820672166763, 0.360820672166763, 1414, 20, 2.1920036900000004, 6.9893324880000005)
(-6486.686664616727, -6471.159495710687, 0.0, 0.0, 0.3480860863913076, 0.23994415400102587, 1503, 21, 2.4313584250000004, 7.497767682)
(-6486.653692500446, -6471.159495710687, 0.0, 0.0, 0.24653482293102266, 0.23943462991491032, 1507, 22, 2.6319449100000005, 7.714648196000001)
(-6486.653692500446, -6474.43364412813, 0.0, 0.0, 0.1892853810897768, 0.18874312478896407, 1511, 23, 2.7996116060000005, 7.909696975)
(-6482.026563824794, -6474.43364412813, 0.0, 0.0, 0.13444763710708602, 0.11727542691784042, 1744, 24, 2.8764920330000003, 8.876023737)
(-6481.242504476314, -6474.43364412813, 0.0, 0.0, 0.9632446022560011, 0.10516534298500291, 1755, 25, 3.1101483220000006, 9.188916273)
(-6481.235541801283, -6474.440912186091, 0.0, 0.0, 0.10494542629006717, 0.10494542629006717, 1757, 26, 3.2336951900000006, 9.327577017000001)
(-6481.039840007374, -6474.763587117499, 0.0, 0.0, 0.09693408578441806, 0.09693408578441806, 1761, 27, 3.3927529540000005, 9.531832526)
(-6480.742064933552, -6475.193812098455, 0.0, 0.0, 0.08568473772522746, 0.08568473772522746, 1773, 28, 3.5678011010000006, 9.797427847)
(-6477.258774890545, -6475.193812098455, 0.0, 0.0, 0.039947826764158756, 0.03189036269820969, 3364, 29, 3.7605786150000005, 16.587639554000003)
(-6477.258774890545, -6475.193812098455, 0.0, 0.0, 0.05054605626284965, 0.03189036269820969, 3365, 30, 3.9741852400000006, 16.820065848000002)
(-6477.258774890545, -6475.193812098455, 0.0, 0.0, 0.032937857020131085, 0.03189036269820969, 3368, 31, 4.241796590000001, 17.109871246)
(-6477.064636435111, -6475.193812098455, 0.0, 0.0, 0.03721751299883607, 0.02889217513707254, 3382, 32, 4.45137313, 17.436398167)
(-6476.979274507131, -6475.298759908484, 0.0, 0.0, 0.025952695944349433, 0.025952695944349433, 3383, 33, 4.709878956000001, 17.732786049)
(-6476.054517095475, -6475.398083194424, 0.0, 0.0, 0.010137352061098759, 0.010137352061098759, 3647, 34, 4.930038034000001, 19.085060593)
(-6475.626042441441, -6475.398083194424, 0.0, 0.0, 0.0051526621126096765, 0.0035203896978828406, 3811, 35, 5.196683275000001, 20.298294072)
(-6475.6091080149845, -6475.398083194424, 0.0, 0.0, 0.0077833610443264305, 0.0032588702323726364, 3837, 36, 5.567448509000001, 20.806928503)
(-6475.602926185805, -6475.433676142757, 0.0, 0.0, 0.002613725219234134, 0.002613725219234134, 3855, 37, 5.912477892000001, 21.241927953)
(-6475.5396935790495, -6475.443633606372, 0.0, 0.0, 0.0014834500632387264, 0.0014834500632387264, 3950, 38, 6.229791566000001, 21.940257193)
(-6475.513181760982, -6475.451010943947, 0.0, 0.0, 0.0009601001834411083, 0.0009601001834411083, 3995, 39, 6.492792388000002, 22.388260746)
(-6475.489319364695, -6475.451010943947, 0.0, 0.0, 0.000737461885494277, 0.0005915946346147849, 4080, 40, 6.780297498000001, 22.977519631)
(-6475.486133697185, -6475.455090143258, 0.0, 0.0, 0.00047940343181370935, 0.00047940343181370935, 4089, 41, 7.063766658000001, 23.328134552)
(-6475.476461678129, -6475.455145619319, 0.0, 0.0, 0.0003291824023283374, 0.0003291824023283374, 4155, 42, 7.284327148000002, 23.766765172000003)
(-6475.474397399269, -6475.455145619319, 0.0, 0.0, 0.000341888979147931, 0.0002973038885560217, 4169, 43, 7.501617718000002, 24.088012635000002)
(-6475.4729699111695, -6475.459128130692, 0.0, 0.0, 0.00021375751438607008, 0.00021375751438607008, 4179, 44, 7.732588289000002, 24.394054267)
(-6475.466373461153, -6475.459396433206, 0.0, 0.0, 0.00010774568289012037, 0.00010774568289012037, 4321, 45, 7.966313700000002, 25.016011039000002)
(-6475.464041205553, -6475.459396433206, 0.0, 0.0, 8.565294100513763e-5, 7.172884675410597e-5, 4407, 46, 8.214417616000002, 25.551558765000003)
