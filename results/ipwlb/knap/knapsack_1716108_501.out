solving instance knapsack 500 1 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3095.097985858
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 505.90201414200004, #pieces = 1500
Iteration 2	LB = -37521.953251694606	UB = -34153.82231016216	CPU = 1538.8836784330001, #pieces = 2162
Iteration 3	LB = -37521.93149371672	UB = -34153.82231016216	CPU = 1539.453178298, #pieces = 2162
Iteration 4	LB = -35105.67172443111	UB = -34398.4146722949	CPU = 1640.570347051, #pieces = 2475
Iteration 5	LB = -34722.02361313524	UB = -34551.59274599499	CPU = 1722.0002711490001, #pieces = 2577
Iteration 6	LB = -34702.60991131636	UB = -34569.02191936736	CPU = 1735.941672114, #pieces = 2950
Iteration 7	LB = -34670.69886140901	UB = -34589.89738187627	CPU = 1749.4301928430002, #pieces = 3158
Iteration 8	LB = -34647.72431801599	UB = -34610.72685562	CPU = 1753.2501023290001, #pieces = 3273
Iteration 9	LB = -34644.43719233697	UB = -34613.879076600555	CPU = 1755.021075174, #pieces = 3651
Iteration 10	LB = -34635.46462406879	UB = -34615.696214496325	CPU = 1755.885142411, #pieces = 3800
Iteration 11	LB = -34629.058071162595	UB = -34617.17033741869	CPU = 1756.226573649, #pieces = 3840
Iteration 12	LB = -34628.266760009756	UB = -34619.7684292764	CPU = 1760.986395246, #pieces = 4152
Iteration 13	LB = -34627.33808814367	UB = -34619.932482764096	CPU = 1761.72127492, #pieces = 4264
Iteration 14	LB = -34625.7918815641	UB = -34620.577151188445	CPU = 1762.8065605830002, #pieces = 4472
Iteration 15	LB = -34624.420757275635	UB = -34621.34135330966	CPU = 1763.3302282230002, #pieces = 4549
Iteration 16	LB = -34624.099307197495	UB = -34621.49241085074	CPU = 1763.505480318, #pieces = 4553
Iteration 17	LB = -34624.086256041206	UB = -34621.75966884931	CPU = 1764.903657881, #pieces = 4811
Iteration 18	LB = -34623.75357843363	UB = -34621.76804204083	CPU = 1766.144923065, #pieces = 5030
Iteration 19	LB = -34623.24537286797	UB = -34621.76946877756	CPU = 1766.419938484, #pieces = 5051
Iteration 20	LB = -34623.210781638016	UB = -34622.058848573695	CPU = 1766.6182184210002, #pieces = 5055
Iteration 21	LB = -34623.208238164734	UB = -34622.19416372824	CPU = 1768.044626568, #pieces = 5273
Iteration 22	LB = -34623.0071521502	UB = -34622.19416372824	CPU = 1768.2563736930001, #pieces = 5276
Iteration 23	LB = -34623.00489674152	UB = -34622.22138244033	CPU = 1769.338413382, #pieces = 5466
Iteration 24	LB = -34622.81487274876	UB = -34622.29379964526	CPU = 1769.9043643530001, #pieces = 5535
Iteration 25	LB = -34622.76696296179	UB = -34622.339157112976	CPU = 1770.119557097, #pieces = 5541
Iteration 26	LB = -34622.76321387903	UB = -34622.39697976306	CPU = 1771.6153768790002, #pieces = 5784
Iteration 27	LB = -34622.66197852526	UB = -34622.39697976306	CPU = 1771.877551101, #pieces = 5796
Iteration 28	LB = -34622.65962457451	UB = -34622.39697976306	CPU = 1772.0662403790002, #pieces = 5797
Iteration 29	LB = -34622.65936634477	UB = -34622.39697976306	CPU = 1772.2642779910002, #pieces = 5800
Iteration 30	LB = -34622.6588696807	UB = -34622.39697976306	CPU = 1773.805100022, #pieces = 6036
Iteration 31	LB = -34622.59928354792	UB = -34622.39697976306	CPU = 1774.146929253, #pieces = 6037
Iteration 32	LB = -34622.599242243414	UB = -34622.42189114072	CPU = 1775.0791881660002, #pieces = 6134
Iteration 33	LB = -34622.5715985828	UB = -34622.45940347605	CPU = 1776.084918768, #pieces = 6263
Iteration 34	LB = -34622.55154797871	UB = -34622.45940347605	CPU = 1776.441441034, #pieces = 6265
Iteration 35	LB = -34622.55140779401	UB = -34622.45940347605	CPU = 1776.6520616530001, #pieces = 6275
Iteration 36	LB = -34622.550028938655	UB = -34622.4710456383	CPU = 1778.0999517940002, #pieces = 6506
Iteration 37	LB = -34622.53031890569	UB = -34622.4710456383	CPU = 1778.3167129770002, #pieces = 6513
Iteration 38	LB = -34622.52980435474	UB = -34622.4710456383	CPU = 1778.869296609, #pieces = 6583
Iteration 39	LB = -34622.52339636267	UB = -34622.47521158019	CPU = 1779.237471981, #pieces = 6621
Iteration 40	LB = -34622.520980009525	UB = -34622.48106396542	CPU = 1780.309453091, #pieces = 6769
Iteration 41	LB = -34622.51574585515	UB = -34622.48106396542	CPU = 1780.5347022790002, #pieces = 6770
WRITING LOG...
(-37521.953251694606, -34153.82231016216, 0.0, 0.0, 9.861651533305208, 9.861651533305208, 1500, 1, 0.14528168400000002, 506.055243843)
(-37521.93149371672, -34153.82231016216, 0.0, 0.0, 9.862692845439987, 9.861587827469632, 2162, 2, 0.23959563900000003, 1538.9790506440002)
(-35105.67172443111, -34398.4146722949, 0.0, 0.0, 2.0560745571389494, 2.0560745571389494, 2162, 3, 0.277848079, 1539.492388883)
(-34722.02361313524, -34551.59274599499, 0.0, 0.0, 0.4932648644974823, 0.4932648644974823, 2475, 4, 0.326868771, 1640.620415761)
(-34702.60991131636, -34569.02191936736, 0.0, 0.0, 0.3864384484484164, 0.3864384484484164, 2577, 5, 0.43888540600000003, 1722.113270877)
(-34670.69886140901, -34589.89738187627, 0.0, 0.0, 0.2335984944987916, 0.2335984944987916, 2950, 6, 0.604923187, 1736.108793904)
(-34647.72431801599, -34610.72685562, 0.0, 0.0, 0.10689594168400367, 0.10689594168400367, 3158, 7, 0.69835176, 1749.5246517950002)
(-34644.43719233697, -34613.879076600555, 0.0, 0.0, 0.08828284073214936, 0.08828284073214936, 3273, 8, 0.805522426, 1753.358361758)
(-34635.46462406879, -34615.696214496325, 0.0, 0.0, 0.05710822469080684, 0.05710822469080684, 3651, 9, 0.932925478, 1755.1496802790002)
(-34629.058071162595, -34617.17033741869, 0.0, 0.0, 0.034340570381787096, 0.034340570381787096, 3800, 10, 1.063384348, 1756.016674246)
(-34628.266760009756, -34619.7684292764, 0.0, 0.0, 0.024547624432307156, 0.024547624432307156, 3840, 11, 1.168538122, 1756.332767458)
(-34627.33808814367, -34619.932482764096, 0.0, 0.0, 0.02139116066520072, 0.02139116066520072, 4152, 12, 1.318304745, 1761.137199447)
(-34625.7918815641, -34620.577151188445, 0.0, 0.0, 0.015062517163953092, 0.015062517163953092, 4264, 13, 1.42922111, 1761.833362837)
(-34624.420757275635, -34621.34135330966, 0.0, 0.0, 0.008894525300302016, 0.008894525300302016, 4472, 14, 1.56906525, 1762.947481289)
(-34624.099307197495, -34621.49241085074, 0.0, 0.0, 0.007529705293518959, 0.007529705293518959, 4549, 15, 1.705238126, 1763.467606935)
(-34624.086256041206, -34621.75966884931, 0.0, 0.0, 0.006720014274700884, 0.006720014274700884, 4553, 16, 1.788522864, 1763.5898363380002)
(-34623.75357843363, -34621.76804204083, 0.0, 0.0, 0.005734936443421871, 0.005734936443421871, 4811, 17, 1.982497538, 1765.0986473100002)
(-34623.24537286797, -34621.76946877756, 0.0, 0.0, 0.004262936623562909, 0.004262936623562909, 5030, 18, 2.146354078, 1766.309886662)
(-34623.210781638016, -34622.058848573695, 0.0, 0.0, 0.003327165115623762, 0.003327165115623762, 5051, 19, 2.3007938589999997, 1766.575573542)
(-34623.208238164734, -34622.19416372824, 0.0, 0.0, 0.0029289721838402804, 0.0029289721838402804, 5055, 20, 2.4731286929999996, 1766.7916724230001)
(-34623.0071521502, -34622.19416372824, 0.0, 0.0, 0.0026477784725241443, 0.0023481712860690595, 5273, 21, 2.6465769529999994, 1768.219130831)
(-34623.00489674152, -34622.22138244033, 0.0, 0.0, 0.0022630387938889357, 0.0022630387938889357, 5276, 22, 2.7806602869999995, 1768.391612908)
(-34622.81487274876, -34622.29379964526, 0.0, 0.0, 0.001505021898641752, 0.001505021898641752, 5466, 23, 2.9077563639999995, 1769.4666588970001)
(-34622.76696296179, -34622.339157112976, 0.0, 0.0, 0.0012356353130018875, 0.0012356353130018875, 5535, 24, 3.0711583849999995, 1770.0688608570001)
(-34622.76321387903, -34622.39697976306, 0.0, 0.0, 0.0010577953807740811, 0.0010577953807740811, 5541, 25, 3.1830846959999994, 1770.232664995)
(-34622.66197852526, -34622.39697976306, 0.0, 0.0, 0.0011819178540461023, 0.0007653969260240692, 5784, 26, 3.3565693859999994, 1771.790047569)
(-34622.65962457451, -34622.39697976306, 0.0, 0.0, 0.0010660582843910742, 0.000758598001171314, 5796, 27, 3.5055035909999996, 1772.027707403)
(-34622.65936634477, -34622.39697976306, 0.0, 0.0, 0.0008791760617818976, 0.0007578521552423237, 5797, 28, 3.663344321, 1772.225198219)
(-34622.6588696807, -34622.39697976306, 0.0, 0.0, 0.0007926163540639176, 0.0007564176385327138, 5800, 29, 3.8917818079999997, 1772.493843309)
(-34622.59928354792, -34622.39697976306, 0.0, 0.0, 0.0008711056406472221, 0.000584314786102202, 6036, 30, 4.201409051, 1774.115974065)
(-34622.599242243414, -34622.42189114072, 0.0, 0.0, 0.0005122434913679434, 0.0005122434913679434, 6037, 31, 4.559529538, 1774.5062989750002)
(-34622.5715985828, -34622.45940347605, 0.0, 0.0, 0.0003240529664274234, 0.0003240529664274234, 6134, 32, 4.717213418999999, 1775.2380736050002)
(-34622.55154797871, -34622.45940347605, 0.0, 0.0, 0.0014782518194371068, 0.0002661408352897455, 6263, 33, 5.037359063999999, 1776.406210417)
(-34622.55140779401, -34622.45940347605, 0.0, 0.0, 0.00027415561209310417, 0.0002657359400308222, 6265, 34, 5.163152544999999, 1776.5684803400002)
(-34622.550028938655, -34622.4710456383, 0.0, 0.0, 0.00022812727678172442, 0.00022812727678172442, 6275, 35, 5.3227386249999995, 1776.8127235650002)
(-34622.53031890569, -34622.4710456383, 0.0, 0.0, 0.00026357583022061155, 0.00017119883588023765, 6506, 36, 5.477438282, 1778.2627696430002)
(-34622.52980435474, -34622.4710456383, 0.0, 0.0, 0.00018182309587258018, 0.00016971265960827664, 6513, 37, 5.611093221999999, 1778.4515153460002)
(-34622.52339636267, -34622.47521158019, 0.0, 0.0, 0.0001391719748029546, 0.0001391719748029546, 6583, 38, 5.749198842999999, 1779.0085804500002)
(-34622.520980009525, -34622.48106396542, 0.0, 0.0, 0.00011528938100839645, 0.00011528938100839645, 6621, 39, 5.90254169, 1779.3921158370001)
(-34622.51574585515, -34622.48106396542, 0.0, 0.0, 0.00013479998314356003, 0.00010017158985945772, 6769, 40, 6.098948814, 1780.50714134)
(-34622.51566463888, -34622.48152526712, 0.0, 0.0, 9.860463564957141e-5, 9.860463564957141e-5, 6770, 41, 6.39910342, 1780.8360800520002)
