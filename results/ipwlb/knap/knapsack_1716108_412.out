solving instance knapsack 200 2 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3451.548655947
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 149.451344053, #pieces = 800
Iteration 2	LB = -7318.6479075964935	UB = -6654.3459660112285	CPU = 150.111842158, #pieces = 801
Iteration 3	LB = -6712.728823474593	UB = -6654.3459660112285	CPU = 150.39820702900002, #pieces = 825
Iteration 4	LB = -6700.719320775142	UB = -6654.3459660112285	CPU = 150.51798356, #pieces = 835
Iteration 5	LB = -6695.353350953159	UB = -6654.3459660112285	CPU = 150.733385123, #pieces = 843
Iteration 6	LB = -6692.213333330479	UB = -6654.3459660112285	CPU = 151.07817639700002, #pieces = 886
Iteration 7	LB = -6681.920129090136	UB = -6654.3459660112285	CPU = 151.63587779300002, #pieces = 954
Iteration 8	LB = -6671.765682123747	UB = -6654.382859997646	CPU = 152.689106175, #pieces = 1049
Iteration 9	LB = -6658.430712575329	UB = -6654.985495925084	CPU = 153.150222286, #pieces = 1100
Iteration 10	LB = -6656.766442522993	UB = -6655.495606905964	CPU = 153.525251239, #pieces = 1148
Iteration 11	LB = -6656.329010636464	UB = -6655.495606905964	CPU = 153.673129249, #pieces = 1160
Iteration 12	LB = -6656.19477280767	UB = -6655.557623397052	CPU = 154.204530909, #pieces = 1232
Iteration 13	LB = -6655.9452355188405	UB = -6655.583418501257	CPU = 154.375831956, #pieces = 1246
Iteration 14	LB = -6655.893854689168	UB = -6655.587445585731	CPU = 157.00529449700002, #pieces = 1589
Iteration 15	LB = -6655.786481562345	UB = -6655.600131641648	CPU = 159.131729639, #pieces = 1824
Iteration 16	LB = -6655.69823898719	UB = -6655.600131641648	CPU = 159.301375135, #pieces = 1825
Iteration 17	LB = -6655.697373097171	UB = -6655.602811478181	CPU = 161.54455687, #pieces = 2063
Iteration 18	LB = -6655.648570955413	UB = -6655.602811478181	CPU = 161.814555336, #pieces = 2067
Iteration 19	LB = -6655.648027144162	UB = -6655.602811478181	CPU = 162.73133303900002, #pieces = 2146
Iteration 20	LB = -6655.6332215072825	UB = -6655.602811478181	CPU = 163.45093825200001, #pieces = 2195
Iteration 21	LB = -6655.625464929599	UB = -6655.603581233	CPU = 163.765508269, #pieces = 2208
Iteration 22	LB = -6655.624671013098	UB = -6655.603581233	CPU = 164.00094067700002, #pieces = 2209
Iteration 23	LB = -6655.6241345998205	UB = -6655.605322028985	CPU = 165.35459586300001, #pieces = 2315
Iteration 24	LB = -6655.615930594727	UB = -6655.605761103957	CPU = 166.163998388, #pieces = 2386
Iteration 25	LB = -6655.6139744158245	UB = -6655.605761103957	CPU = 166.505746573, #pieces = 2398
Iteration 26	LB = -6655.61348721042	UB = -6655.606189889373	CPU = 167.338224141, #pieces = 2478
WRITING LOG...
(-7318.6479075964935, -6654.3459660112285, 0.0, 0.0, 9.98297871764343, 9.98297871764343, 800, 1, 0.13244513500000002, 149.59265106200002)
(-6712.728823474593, -6654.3459660112285, 0.0, 0.0, 0.9096968586134393, 0.8773643234296769, 801, 2, 0.21368589500000001, 150.19354056)
(-6700.719320775142, -6654.3459660112285, 0.0, 0.0, 0.7732969253566331, 0.6968882441757137, 825, 3, 0.24278279300000002, 150.427759245)
(-6695.353350953159, -6654.3459660112285, 0.0, 0.0, 0.6876852996041384, 0.6162496682827457, 835, 4, 0.381273012, 150.656914511)
(-6692.213333330479, -6654.3459660112285, 0.0, 0.0, 0.6116516696532077, 0.5690621965354358, 843, 5, 0.393937806, 150.74645466)
(-6681.920129090136, -6654.3459660112285, 0.0, 0.0, 0.44000544781927514, 0.4143782607599478, 886, 6, 0.426462112, 151.111121715)
(-6671.765682123747, -6654.382859997646, 0.0, 0.0, 0.26122365502286665, 0.26122365502286665, 954, 7, 0.450864095, 151.660688931)
(-6658.430712575329, -6654.985495925084, 0.0, 0.0, 0.0517689580594078, 0.0517689580594078, 1049, 8, 0.48672534, 152.725372673)
(-6656.766442522993, -6655.495606905964, 0.0, 0.0, 0.019094530176086214, 0.019094530176086214, 1100, 9, 0.5360955040000001, 153.200014876)
(-6656.329010636464, -6655.495606905964, 0.0, 0.0, 0.013989093295970322, 0.012522038623759965, 1148, 10, 0.599133439, 153.588712385)
(-6656.19477280767, -6655.557623397052, 0.0, 0.0, 0.009573193512412082, 0.009573193512412082, 1160, 11, 0.656781381, 153.731239574)
(-6655.9452355188405, -6655.583418501257, 0.0, 0.0, 0.00543629303146366, 0.00543629303146366, 1232, 12, 0.7306383430000001, 154.27883324)
(-6655.893854689168, -6655.587445585731, 0.0, 0.0, 0.00460378750849197, 0.00460378750849197, 1246, 13, 0.845578366, 154.491223756)
(-6655.786481562345, -6655.600131641648, 0.0, 0.0, 0.0027998965835031643, 0.0027998965835031643, 1589, 14, 0.974586811, 157.134737961)
(-6655.69823898719, -6655.600131641648, 0.0, 0.0, 0.0020149854719218752, 0.001474057088794848, 1824, 15, 1.1271361500000001, 159.284754983)
(-6655.697373097171, -6655.602811478181, 0.0, 0.0, 0.0014207821841032303, 0.0014207821841032303, 1825, 16, 1.275573013, 159.450268845)
(-6655.648570955413, -6655.602811478181, 0.0, 0.0, 0.0016361677763085205, 0.0006875331735931867, 2063, 17, 1.499974477, 161.76946648)
(-6655.648027144162, -6655.602811478181, 0.0, 0.0, 0.0006843650320921394, 0.0006793624448750648, 2067, 18, 1.7224392220000002, 162.037529871)
(-6655.6332215072825, -6655.602811478181, 0.0, 0.0, 0.0004623814215529191, 0.0004569087122951353, 2146, 19, 1.9266411560000003, 162.936028592)
(-6655.625464929599, -6655.603581233, 0.0, 0.0, 0.00032880108214997496, 0.00032880108214997496, 2195, 20, 2.1446452270000003, 163.669440716)
(-6655.624671013098, -6655.603581233, 0.0, 0.0, 0.00035716972971333284, 0.00031687253966682577, 2208, 21, 2.3661121040000004, 163.987531831)
(-6655.6241345998205, -6655.605322028985, 0.0, 0.0, 0.0002826575484162315, 0.0002826575484162315, 2209, 22, 2.5877403800000005, 164.22309590400002)
(-6655.615930594727, -6655.605761103957, 0.0, 0.0, 0.00015279587065195093, 0.00015279587065195093, 2315, 23, 2.8382301440000006, 165.605606896)
(-6655.6139744158245, -6655.605761103957, 0.0, 0.0, 0.00012549782960542867, 0.00012340442271416562, 2386, 24, 3.0959471920000006, 166.422220721)
(-6655.61348721042, -6655.606189889373, 0.0, 0.0, 0.00010964171916114145, 0.00010964171916114145, 2398, 25, 3.3637163510000008, 166.774081464)
(-6655.612340775454, -6655.606196985931, 0.0, 0.0, 9.23099916225319e-5, 9.23099916225319e-5, 2478, 26, 3.659383504000001, 167.634413899)
