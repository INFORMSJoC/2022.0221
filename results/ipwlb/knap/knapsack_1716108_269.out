solving instance knapsack 50 7 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.894736688
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.10526331200000001, #pieces = 50
Iteration 2	LB = -1610.5796942803913	UB = 0.0	CPU = 0.45473622500000005, #pieces = 116
Iteration 3	LB = -1537.2936392368156	UB = -1370.6849080305549	CPU = 0.6367495940000001, #pieces = 164
Iteration 4	LB = -1435.8872920176823	UB = -1370.6849080305549	CPU = 0.74152145, #pieces = 184
Iteration 5	LB = -1418.2245427666392	UB = -1370.6849080305549	CPU = 0.7981638120000001, #pieces = 188
Iteration 6	LB = -1414.878307915563	UB = -1377.3614162885185	CPU = 1.0052421150000002, #pieces = 254
Iteration 7	LB = -1389.913714755339	UB = -1377.3614162885185	CPU = 1.119476861, #pieces = 260
Iteration 8	LB = -1386.7121749438636	UB = -1377.3614162885185	CPU = 1.252500519, #pieces = 290
Iteration 9	LB = -1383.0259198346114	UB = -1377.3614162885185	CPU = 1.478291478, #pieces = 342
Iteration 10	LB = -1379.6158582402875	UB = -1377.404576273093	CPU = 1.7063638980000002, #pieces = 396
Iteration 11	LB = -1377.9338309238442	UB = -1377.404576273093	CPU = 2.022787545, #pieces = 466
Iteration 12	LB = -1377.570091985167	UB = -1377.404576273093	CPU = 2.3299731550000002, #pieces = 517
Iteration 13	LB = -1377.4746369301754	UB = -1377.404576273093	CPU = 2.6635606320000003, #pieces = 575
Iteration 14	LB = -1377.4238454887825	UB = -1377.404576273093	CPU = 2.9854577470000003, #pieces = 644
Iteration 15	LB = -1377.410860967537	UB = -1377.404576273093	CPU = 3.3082528460000002, #pieces = 701
WRITING LOG...
(-1610.5796942803913, 0.0, 0.0, 0.0, Inf, Inf, 50, 1, 0.06029537200000001, 0.17404756400000002)
(-1537.2936392368156, -1370.6849080305549, 0.0, 0.0, 12.155144499668388, 12.155144499668388, 116, 2, 0.10173033000000001, 0.49630390700000004)
(-1435.8872920176823, -1370.6849080305549, 0.0, 0.0, 4.952617704790688, 4.756919960606579, 164, 3, 0.164561018, 0.699726515)
(-1418.2245427666392, -1370.6849080305549, 0.0, 0.0, 4.285170262034058, 3.468312407728395, 184, 4, 0.214004768, 0.7910998010000001)
(-1414.878307915563, -1377.3614162885185, 0.0, 0.0, 2.7238233323058165, 2.7238233323058165, 188, 5, 0.262231502, 0.8465373860000001)
(-1389.913714755339, -1377.3614162885185, 0.0, 0.0, 1.053708238440869, 0.9113293227455377, 254, 6, 0.345680494, 1.0888386250000002)
(-1386.7121749438636, -1377.3614162885185, 0.0, 0.0, 0.8330707669735041, 0.678889254829131, 260, 7, 0.425501613, 1.199433612)
(-1383.0259198346114, -1377.3614162885185, 0.0, 0.0, 0.41125760305937886, 0.41125760305937886, 290, 8, 0.507513358, 1.334652178)
(-1379.6158582402875, -1377.404576273093, 0.0, 0.0, 0.16053975754731964, 0.16053975754731964, 342, 9, 0.601068088, 1.571978351)
(-1377.9338309238442, -1377.404576273093, 0.0, 0.0, 0.038424052008252774, 0.038424052008252774, 396, 10, 0.7242838030000001, 1.8297709290000002)
(-1377.570091985167, -1377.404576273093, 0.0, 0.0, 0.013603476590545997, 0.012016492098629065, 466, 11, 0.8782973930000001, 2.176969304)
(-1377.4746369301754, -1377.404576273093, 0.0, 0.0, 0.005086425462008293, 0.005086425462008293, 517, 12, 1.058019979, 2.509852912)
(-1377.4238454887825, -1377.404576273093, 0.0, 0.0, 0.0013989510432480716, 0.0013989510432480716, 575, 13, 1.184237979, 2.789923436)
(-1377.410860967537, -1377.404576273093, 0.0, 0.0, 0.00045627076839346555, 0.00045627076839346555, 644, 14, 1.336761469, 3.1381220080000003)
(-1377.405723052944, -1377.404576273093, 0.0, 0.0, 8.325657332809677e-5, 8.325657332809677e-5, 701, 15, 1.545065718, 3.516700262)
