solving instance knapsack 200 1 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3380.83650781
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 220.16349219000003, #pieces = 600
Iteration 2	LB = -14451.110820700223	UB = -13153.414888283723	CPU = 692.649651464, #pieces = 876
Iteration 3	LB = -14451.108119654054	UB = -13153.414888283723	CPU = 692.9483868560001, #pieces = 876
Iteration 4	LB = -13526.445663379549	UB = -13258.261652707904	CPU = 729.177696745, #pieces = 997
Iteration 5	LB = -13395.54511574303	UB = -13328.616423448884	CPU = 770.7790000460001, #pieces = 1071
Iteration 6	LB = -13387.084377845802	UB = -13333.631970932227	CPU = 778.3420016350001, #pieces = 1211
Iteration 7	LB = -13370.768146476204	UB = -13342.816000218849	CPU = 778.712087792, #pieces = 1285
Iteration 8	LB = -13365.18920602514	UB = -13351.644287778414	CPU = 779.2646913560001, #pieces = 1391
Iteration 9	LB = -13363.456158073628	UB = -13351.644287778414	CPU = 779.789963549, #pieces = 1465
Iteration 10	LB = -13359.611841483133	UB = -13354.482888733384	CPU = 780.49570996, #pieces = 1600
Iteration 11	LB = -13358.740187319127	UB = -13354.927521333719	CPU = 781.220133108, #pieces = 1727
Iteration 12	LB = -13357.205920064649	UB = -13355.350554533756	CPU = 781.476768817, #pieces = 1763
Iteration 13	LB = -13356.955221126049	UB = -13355.644618566595	CPU = 782.04382691, #pieces = 1855
Iteration 14	LB = -13356.708405258923	UB = -13355.644618566595	CPU = 782.545022591, #pieces = 1932
Iteration 15	LB = -13356.464014961852	UB = -13355.83684941211	CPU = 783.050315781, #pieces = 1993
Iteration 16	LB = -13356.357601531132	UB = -13355.87442814126	CPU = 783.516601676, #pieces = 2059
Iteration 17	LB = -13356.266522782695	UB = -13355.87442814126	CPU = 783.664008017, #pieces = 2061
Iteration 18	LB = -13356.266196419265	UB = -13355.951251385237	CPU = 784.305749118, #pieces = 2141
Iteration 19	LB = -13356.218566520542	UB = -13355.95367271735	CPU = 784.888735847, #pieces = 2217
Iteration 20	LB = -13356.169692415226	UB = -13356.002371317752	CPU = 785.3131086190001, #pieces = 2256
Iteration 21	LB = -13356.149097442762	UB = -13356.031908354395	CPU = 785.9494070930001, #pieces = 2329
Iteration 22	LB = -13356.12155422171	UB = -13356.031908354395	CPU = 786.197273376, #pieces = 2348
Iteration 23	LB = -13356.118163145986	UB = -13356.046255833773	CPU = 786.895920434, #pieces = 2430
Iteration 24	LB = -13356.101229877944	UB = -13356.046255833773	CPU = 787.1068398240001, #pieces = 2435
Iteration 25	LB = -13356.10078862369	UB = -13356.054058136246	CPU = 787.9011086170001, #pieces = 2532
Iteration 26	LB = -13356.089880660085	UB = -13356.054058136246	CPU = 788.187708302, #pieces = 2552
Iteration 27	LB = -13356.086554046818	UB = -13356.0548340615	CPU = 788.426912667, #pieces = 2553
Iteration 28	LB = -13356.086497190141	UB = -13356.06243500205	CPU = 789.16509723, #pieces = 2635
Iteration 29	LB = -13356.080921517554	UB = -13356.06243500205	CPU = 789.4465762020001, #pieces = 2650
Iteration 30	LB = -13356.079547027835	UB = -13356.06243500205	CPU = 789.6972677360001, #pieces = 2656
Iteration 31	LB = -13356.079353379528	UB = -13356.063378620884	CPU = 789.985953726, #pieces = 2670
Iteration 32	LB = -13356.07852617534	UB = -13356.063378620884	CPU = 790.224191892, #pieces = 2671
WRITING LOG...
(-14451.110820700223, -13153.414888283723, 0.0, 0.0, 9.86584809677379, 9.86584809677379, 600, 1, 0.08729940800000001, 220.25894462000002)
(-14451.108119654054, -13153.414888283723, 0.0, 0.0, 9.865827561831404, 9.865827561831404, 876, 2, 0.149032718, 692.711903609)
(-13526.445663379549, -13258.261652707904, 0.0, 0.0, 2.022769030334153, 2.022769030334153, 876, 3, 0.168786119, 692.9685999530001)
(-13395.54511574303, -13328.616423448884, 0.0, 0.0, 0.5021428343935201, 0.5021428343935201, 997, 4, 0.202190496, 729.211580679)
(-13387.084377845802, -13333.631970932227, 0.0, 0.0, 0.40088407292253986, 0.40088407292253986, 1071, 5, 0.228751842, 770.8060189040001)
(-13370.768146476204, -13342.816000218849, 0.0, 0.0, 0.2094921061408419, 0.2094921061408419, 1211, 6, 0.24627157500000002, 778.3599652500001)
(-13365.18920602514, -13351.644287778414, 0.0, 0.0, 0.10144756671748664, 0.10144756671748664, 1285, 7, 0.288759737, 778.7550431090001)
(-13363.456158073628, -13351.644287778414, 0.0, 0.0, 0.09280667395815563, 0.08846753284182671, 1391, 8, 0.399458841, 779.375834574)
(-13359.611841483133, -13354.482888733384, 0.0, 0.0, 0.0384062250293153, 0.0384062250293153, 1465, 9, 0.423161593, 779.8141459000001)
(-13358.740187319127, -13354.927521333719, 0.0, 0.0, 0.028548758346440765, 0.028548758346440765, 1600, 10, 0.446827143, 780.5198324190001)
(-13357.205920064649, -13355.350554533756, 0.0, 0.0, 0.013892301241493656, 0.013892301241493656, 1727, 11, 0.512144535, 781.2859197460001)
(-13356.955221126049, -13355.644618566595, 0.0, 0.0, 0.009813098482954856, 0.009813098482954856, 1763, 12, 0.576752903, 781.5418094060001)
(-13356.708405258923, -13355.644618566595, 0.0, 0.0, 0.008175197891375304, 0.007965071868183373, 1855, 13, 0.677465681, 782.144978528)
(-13356.464014961852, -13355.83684941211, 0.0, 0.0, 0.004695816194922574, 0.004695816194922574, 1932, 14, 0.812628063, 782.6806467600001)
(-13356.357601531132, -13355.87442814126, 0.0, 0.0, 0.003617684431456966, 0.003617684431456966, 1993, 15, 0.9347949680000001, 783.1730046260001)
(-13356.266522782695, -13355.87442814126, 0.0, 0.0, 0.004692584782073778, 0.002935746689924249, 2059, 16, 1.0638605810000001, 783.646188419)
(-13356.266196419265, -13355.951251385237, 0.0, 0.0, 0.002358087627755076, 0.002358087627755076, 2061, 17, 1.2004029800000002, 783.801058139)
(-13356.218566520542, -13355.95367271735, 0.0, 0.0, 0.0019833387392756818, 0.0019833387392756818, 2141, 18, 1.3327601690000002, 784.4385671240001)
(-13356.169692415226, -13356.002371317752, 0.0, 0.0, 0.001252778285158906, 0.001252778285158906, 2217, 19, 1.497199509, 785.053640341)
(-13356.149097442762, -13356.031908354395, 0.0, 0.0, 0.0008774244414144408, 0.0008774244414144408, 2256, 20, 1.657024142, 785.473387922)
(-13356.12155422171, -13356.031908354395, 0.0, 0.0, 0.000770659148904863, 0.0006712013562944493, 2329, 21, 1.785555802, 786.078431442)
(-13356.118163145986, -13356.046255833773, 0.0, 0.0, 0.0005383877147124083, 0.0005383877147124083, 2348, 22, 1.917428493, 786.329624004)
(-13356.101229877944, -13356.046255833773, 0.0, 0.0, 0.0006719876114346032, 0.0004116041762515736, 2430, 23, 2.0945519630000002, 787.0735184590001)
(-13356.10078862369, -13356.054058136246, 0.0, 0.0, 0.0003498824371352641, 0.0003498824371352641, 2435, 24, 2.2399805450000003, 787.2527628490001)
(-13356.089880660085, -13356.054058136246, 0.0, 0.0, 0.00028690695374546376, 0.0002682118811719507, 2532, 25, 2.4016231720000003, 788.063205692)
(-13356.086554046818, -13356.0548340615, 0.0, 0.0, 0.0002374951713816182, 0.0002374951713816182, 2552, 26, 2.6181695080000003, 788.4047740760001)
(-13356.086497190141, -13356.06243500205, 0.0, 0.0, 0.00018015929626185069, 0.00018015929626185069, 2553, 27, 2.802930152, 788.612182647)
(-13356.080921517554, -13356.06243500205, 0.0, 0.0, 0.0001626904675640622, 0.00013841291618865926, 2635, 28, 2.986411347, 789.349097282)
(-13356.079547027835, -13356.06243500205, 0.0, 0.0, 0.00014836477578588963, 0.00012812178640832898, 2650, 29, 3.191052571, 789.651726443)
(-13356.079353379528, -13356.063378620884, 0.0, 0.0, 0.00011960678974896966, 0.00011960678974896966, 2656, 30, 3.3913224470000003, 789.8980355030001)
(-13356.07852617534, -13356.063378620884, 0.0, 0.0, 0.00022463296266566398, 0.00011341331669173389, 2670, 31, 3.615354673, 790.2104820220001)
(-13356.078516408632, -13356.065661693761, 0.0, 0.0, 9.624626889560621e-5, 9.624626889560621e-5, 2671, 32, 3.814538129, 790.423911638)
