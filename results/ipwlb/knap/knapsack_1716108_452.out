solving instance knapsack 200 6 cubic
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3446.727138357
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 154.272861643, #pieces = 800
Iteration 2	LB = -6939.027901759155	UB = -6308.422263718379	CPU = 154.928020505, #pieces = 801
Iteration 3	LB = -6365.123746338171	UB = -6308.422263718379	CPU = 155.334753355, #pieces = 838
Iteration 4	LB = -6347.756169852291	UB = -6308.422263718379	CPU = 155.912150247, #pieces = 897
Iteration 5	LB = -6333.859913024002	UB = -6308.422263718379	CPU = 156.04372803500002, #pieces = 903
Iteration 6	LB = -6332.995167710975	UB = -6308.422263718379	CPU = 156.134781836, #pieces = 903
Iteration 7	LB = -6332.880110319026	UB = -6308.422263718379	CPU = 156.196929411, #pieces = 903
Iteration 8	LB = -6332.705120584896	UB = -6308.610835507489	CPU = 157.48833785300002, #pieces = 1036
Iteration 9	LB = -6314.806448799624	UB = -6308.610835507489	CPU = 157.579657254, #pieces = 1037
Iteration 10	LB = -6314.74338625242	UB = -6309.110418446685	CPU = 158.226027238, #pieces = 1088
Iteration 11	LB = -6311.103324543483	UB = -6309.110418446685	CPU = 158.55935815, #pieces = 1123
Iteration 12	LB = -6310.67362551423	UB = -6309.664723179456	CPU = 159.231251984, #pieces = 1208
Iteration 13	LB = -6310.118765566326	UB = -6309.681534554502	CPU = 160.89327222900002, #pieces = 1418
Iteration 14	LB = -6309.911188941056	UB = -6309.681534554502	CPU = 162.867906352, #pieces = 1658
Iteration 15	LB = -6309.850649365788	UB = -6309.683710782377	CPU = 163.147018795, #pieces = 1671
Iteration 16	LB = -6309.836153957308	UB = -6309.692960484975	CPU = 165.781459672, #pieces = 1970
Iteration 17	LB = -6309.760724571172	UB = -6309.695964561409	CPU = 167.482855483, #pieces = 2120
Iteration 18	LB = -6309.7295923365	UB = -6309.695964561409	CPU = 168.195327873, #pieces = 2179
Iteration 19	LB = -6309.722659186882	UB = -6309.697501431327	CPU = 168.54263808500002, #pieces = 2183
Iteration 20	LB = -6309.72187702815	UB = -6309.699377202592	CPU = 170.04315131500002, #pieces = 2295
Iteration 21	LB = -6309.71103247701	UB = -6309.699377202592	CPU = 170.685922884, #pieces = 2341
Iteration 22	LB = -6309.709334393707	UB = -6309.699377202592	CPU = 171.090012215, #pieces = 2350
Iteration 23	LB = -6309.7087446251235	UB = -6309.7002288649055	CPU = 172.07247238600002, #pieces = 2437
Iteration 24	LB = -6309.706830954578	UB = -6309.700449209548	CPU = 172.884112423, #pieces = 2519
WRITING LOG...
(-6939.027901759155, -6308.422263718379, 0.0, 0.0, 9.996249643394622, 9.996249643394622, 800, 1, 0.08707342600000001, 154.36907471)
(-6365.123746338171, -6308.422263718379, 0.0, 0.0, 0.9790754719263477, 0.8988219280421208, 801, 2, 0.169856306, 155.01124561100002)
(-6347.756169852291, -6308.422263718379, 0.0, 0.0, 0.6379995763494054, 0.6235141607455966, 838, 3, 0.27366775600000004, 155.43898944)
(-6333.859913024002, -6308.422263718379, 0.0, 0.0, 0.4320598218773464, 0.40323314201590454, 897, 4, 0.35457774100000006, 155.99352509800002)
(-6332.995167710975, -6308.422263718379, 0.0, 0.0, 0.42475963726114907, 0.38952535143250583, 903, 5, 0.43434480200000003, 156.123954946)
(-6332.880110319026, -6308.422263718379, 0.0, 0.0, 0.43285815582916193, 0.38770148189526404, 903, 6, 0.48545368400000005, 156.186363488)
(-6332.705120584896, -6308.610835507489, 0.0, 0.0, 0.3819269519970013, 0.3819269519970013, 903, 7, 0.5213903120000001, 156.233304967)
(-6314.806448799624, -6308.610835507489, 0.0, 0.0, 0.10899768894647233, 0.09820883636162069, 1036, 8, 0.5963796430000001, 157.563758971)
(-6314.74338625242, -6309.110418446685, 0.0, 0.0, 0.08928307530116597, 0.08928307530116597, 1037, 9, 0.6760387720000002, 157.659774887)
(-6311.103324543483, -6309.110418446685, 0.0, 0.0, 0.032123908444680674, 0.031587751118937954, 1088, 10, 0.7572045000000002, 158.307643461)
(-6310.67362551423, -6309.664723179456, 0.0, 0.0, 0.015989793103701987, 0.015989793103701987, 1123, 11, 0.8505392400000001, 158.653175978)
(-6310.118765566326, -6309.681534554502, 0.0, 0.0, 0.006929525831529861, 0.006929525831529861, 1208, 12, 0.9575992320000002, 159.33877828)
(-6309.911188941056, -6309.681534554502, 0.0, 0.0, 0.003765527115902812, 0.003639714386477627, 1418, 13, 1.0991418150000003, 161.035281817)
(-6309.850649365788, -6309.683710782377, 0.0, 0.0, 0.0026457520069645196, 0.0026457520069645196, 1658, 14, 1.2705110210000004, 163.039752434)
(-6309.836153957308, -6309.692960484975, 0.0, 0.0, 0.0022694206077852833, 0.0022694206077852833, 1671, 15, 1.4494508230000003, 163.32642202000002)
(-6309.760724571172, -6309.695964561409, 0.0, 0.0, 0.0010263570563044222, 0.0010263570563044222, 1970, 16, 1.6922817810000004, 166.024758144)
(-6309.7295923365, -6309.695964561409, 0.0, 0.0, 0.0005339092919903138, 0.0005329539692571844, 2120, 17, 1.9468948840000004, 167.73792857200002)
(-6309.722659186882, -6309.697501431327, 0.0, 0.0, 0.00039871571576571206, 0.00039871571576571206, 2179, 18, 2.2496378110000004, 168.49862362300001)
(-6309.72187702815, -6309.699377202592, 0.0, 0.0, 0.0003565910864047915, 0.0003565910864047915, 2183, 19, 2.5550317710000003, 168.84852350900002)
(-6309.71103247701, -6309.699377202592, 0.0, 0.0, 0.000187735040740371, 0.0001847199640058284, 2295, 20, 2.8964015290000003, 170.385044287)
(-6309.709334393707, -6309.699377202592, 0.0, 0.0, 0.0001622547907218854, 0.00015780769446860476, 2341, 21, 3.237427675, 171.02744807300002)
(-6309.7087446251235, -6309.7002288649055, 0.0, 0.0, 0.00013496299204522732, 0.00013496299204522732, 2350, 22, 3.5874099960000003, 171.440511738)
(-6309.706830954578, -6309.700449209548, 0.0, 0.0, 0.00010114180667343053, 0.00010114180667343053, 2437, 23, 3.8484380070000004, 172.334000473)
(-6309.7059594835355, -6309.700449209548, 0.0, 0.0, 8.961704117530118e-5, 8.733019945101487e-5, 2519, 24, 4.304771104, 173.34095232500002)
