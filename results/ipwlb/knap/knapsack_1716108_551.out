solving instance knapsack 500 6 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3099.50852467
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 501.49147533, #pieces = 1500
Iteration 2	LB = -35943.38858276224	UB = -32707.67369044107	CPU = 1556.047502933, #pieces = 2174
Iteration 3	LB = -35943.38187298353	UB = -32707.67369044107	CPU = 1556.5279074050002, #pieces = 2174
Iteration 4	LB = -33661.24698805159	UB = -33009.05516837097	CPU = 1672.53752037, #pieces = 2481
Iteration 5	LB = -33356.88507643841	UB = -33204.73964077148	CPU = 1764.8611485640001, #pieces = 2810
Iteration 6	LB = -33328.75678984	UB = -33209.90938533579	CPU = 1787.85440898, #pieces = 3068
Iteration 7	LB = -33285.94226484794	UB = -33233.4190177006	CPU = 1794.6997729270001, #pieces = 3184
Iteration 8	LB = -33280.64974056382	UB = -33247.46229975325	CPU = 1799.1812994880001, #pieces = 3489
Iteration 9	LB = -33274.579054293805	UB = -33247.46229975325	CPU = 1800.275202059, #pieces = 3694
Iteration 10	LB = -33264.881567493525	UB = -33252.3878573201	CPU = 1803.8125929030002, #pieces = 3772
Iteration 11	LB = -33263.6215698113	UB = -33254.12430921961	CPU = 1808.4343009380002, #pieces = 4083
Iteration 12	LB = -33262.30751535305	UB = -33254.555088935515	CPU = 1812.8002878930001, #pieces = 4368
Iteration 13	LB = -33259.35399960213	UB = -33254.946354362386	CPU = 1813.2940552050002, #pieces = 4385
Iteration 14	LB = -33259.22463617229	UB = -33255.926718054994	CPU = 1813.8843290050002, #pieces = 4467
Iteration 15	LB = -33258.79207390793	UB = -33256.221267171146	CPU = 1815.4643763190002, #pieces = 4732
Iteration 16	LB = -33258.32596032393	UB = -33256.221267171146	CPU = 1815.957263385, #pieces = 4742
Iteration 17	LB = -33258.30489659382	UB = -33256.221267171146	CPU = 1816.68172131, #pieces = 4850
Iteration 18	LB = -33257.9480910885	UB = -33256.221267171146	CPU = 1817.0067555370001, #pieces = 4856
Iteration 19	LB = -33257.936863625844	UB = -33256.44439554022	CPU = 1818.470867915, #pieces = 5104
Iteration 20	LB = -33257.547924171275	UB = -33256.44439554022	CPU = 1818.910042123, #pieces = 5111
Iteration 21	LB = -33257.5364111432	UB = -33256.56795099792	CPU = 1820.6163037770002, #pieces = 5344
Iteration 22	LB = -33257.327098360416	UB = -33256.56795099792	CPU = 1821.23465011, #pieces = 5346
Iteration 23	LB = -33257.32487331958	UB = -33256.634785981936	CPU = 1821.958922451, #pieces = 5409
Iteration 24	LB = -33257.26325755008	UB = -33256.76835608138	CPU = 1823.202517206, #pieces = 5549
Iteration 25	LB = -33257.177514783994	UB = -33256.76835608138	CPU = 1823.8778730800002, #pieces = 5560
Iteration 26	LB = -33257.17127158224	UB = -33256.80771741804	CPU = 1825.08015085, #pieces = 5699
Iteration 27	LB = -33257.0959145445	UB = -33256.80771741804	CPU = 1825.7633855850002, #pieces = 5704
Iteration 28	LB = -33257.094084218545	UB = -33256.83526803335	CPU = 1826.797959034, #pieces = 5794
Iteration 29	LB = -33257.06249518587	UB = -33256.83526803335	CPU = 1827.3295536490002, #pieces = 5797
Iteration 30	LB = -33257.0621186971	UB = -33256.84668480855	CPU = 1827.968013266, #pieces = 5813
Iteration 31	LB = -33257.05668031545	UB = -33256.86161160959	CPU = 1829.7858874830001, #pieces = 6058
Iteration 32	LB = -33257.007355298956	UB = -33256.86161160959	CPU = 1830.3786845420002, #pieces = 6062
Iteration 33	LB = -33257.007355298956	UB = -33256.863444316004	CPU = 1831.1040038540002, #pieces = 6094
Iteration 34	LB = -33257.000965806554	UB = -33256.87043506191	CPU = 1831.688754774, #pieces = 6100
Iteration 35	LB = -33256.999935304186	UB = -33256.87043506191	CPU = 1832.2687713550001, #pieces = 6101
Iteration 36	LB = -33256.999921690825	UB = -33256.87043506191	CPU = 1832.6662820620002, #pieces = 6104
Iteration 37	LB = -33256.999811075206	UB = -33256.878380789996	CPU = 1833.771103476, #pieces = 6212
Iteration 38	LB = -33256.98009862816	UB = -33256.88609756939	CPU = 1834.326641367, #pieces = 6240
Iteration 39	LB = -33256.975489287506	UB = -33256.88609756939	CPU = 1834.752880683, #pieces = 6241
Iteration 40	LB = -33256.975489287506	UB = -33256.88609756939	CPU = 1835.232328449, #pieces = 6242
Iteration 41	LB = -33256.97547355888	UB = -33256.89347550149	CPU = 1836.6647283460002, #pieces = 6408
Iteration 42	LB = -33256.959821063705	UB = -33256.89347550149	CPU = 1837.223368313, #pieces = 6417
Iteration 43	LB = -33256.95885548759	UB = -33256.89347550149	CPU = 1837.7090883340002, #pieces = 6418
Iteration 44	LB = -33256.95885548759	UB = -33256.90121839527	CPU = 1839.1916749210002, #pieces = 6623
Iteration 45	LB = -33256.94675469106	UB = -33256.90121839527	CPU = 1839.764371382, #pieces = 6625
Iteration 46	LB = -33256.94667863198	UB = -33256.90175772513	CPU = 1840.8611414490001, #pieces = 6696
Iteration 47	LB = -33256.94238730508	UB = -33256.904697744285	CPU = 1841.368359346, #pieces = 6702
WRITING LOG...
(-35943.38858276224, -32707.67369044107, 0.0, 0.0, 9.8928310308624, 9.8928310308624, 1500, 1, 0.084730252, 501.58315913)
(-35943.38187298353, -32707.67369044107, 0.0, 0.0, 9.892810516475551, 9.892810516475551, 2174, 2, 0.14067453200000002, 1556.104590143)
(-33661.24698805159, -33009.05516837097, 0.0, 0.0, 1.9757966907987936, 1.9757966907987936, 2174, 3, 0.20711080600000004, 1556.595399617)
(-33356.88507643841, -33204.73964077148, 0.0, 0.0, 0.4582039712189705, 0.4582039712189705, 2481, 4, 0.31727769000000006, 1672.648708487)
(-33328.75678984, -33209.90938533579, 0.0, 0.0, 0.35786729534615297, 0.35786729534615297, 2810, 5, 0.40682309200000005, 1764.951738511)
(-33285.94226484794, -33233.4190177006, 0.0, 0.0, 0.15804346558312538, 0.15804346558312538, 3068, 6, 0.47251844900000006, 1787.92108877)
(-33280.64974056382, -33247.46229975325, 0.0, 0.0, 0.09981947046472357, 0.09981947046472357, 3184, 7, 0.544175775, 1794.7726318950001)
(-33274.579054293805, -33247.46229975325, 0.0, 0.0, 0.08267273054718977, 0.0815603738296633, 3489, 8, 0.652739368, 1799.290909943)
(-33264.881567493525, -33252.3878573201, 0.0, 0.0, 0.03757236992132154, 0.03757236992132154, 3694, 9, 0.779404734, 1800.402953451)
(-33263.6215698113, -33254.12430921961, 0.0, 0.0, 0.02855964722865607, 0.02855964722865607, 3772, 10, 0.912114357, 1803.946309636)
(-33262.30751535305, -33254.555088935515, 0.0, 0.0, 0.023312374490665196, 0.023312374490665196, 4083, 11, 1.022093719, 1808.545278541)
(-33259.35399960213, -33254.946354362386, 0.0, 0.0, 0.013254104194830339, 0.013254104194830339, 4368, 12, 1.3575637409999999, 1813.1368657540002)
(-33259.22463617229, -33255.926718054994, 0.0, 0.0, 0.009916783090280894, 0.009916783090280894, 4385, 13, 1.5543935309999999, 1813.492015298)
(-33258.79207390793, -33256.221267171146, 0.0, 0.0, 0.007730303199898265, 0.007730303199898265, 4467, 14, 1.921208467, 1814.252201298)
(-33258.32596032393, -33256.221267171146, 0.0, 0.0, 0.017068093208259263, 0.006328720078788201, 4732, 15, 2.346741093, 1815.8909433840001)
(-33258.30489659382, -33256.221267171146, 0.0, 0.0, 0.00687975447485725, 0.006265382365411546, 4742, 16, 2.550246717, 1816.1618013640002)
(-33257.9480910885, -33256.221267171146, 0.0, 0.0, 0.0055268844806944635, 0.005192483846809992, 4850, 17, 2.8259308659999998, 1816.9584772950002)
(-33257.936863625844, -33256.44439554022, 0.0, 0.0, 0.0044877560206875965, 0.0044877560206875965, 4856, 18, 3.0456066469999996, 1817.2275097210002)
(-33257.547924171275, -33256.44439554022, 0.0, 0.0, 0.0035287651238336453, 0.0033182399715767094, 5104, 19, 3.4357631539999995, 1818.862093533)
(-33257.5364111432, -33256.56795099792, 0.0, 0.0, 0.0029120868596616487, 0.0029120868596616487, 5111, 20, 3.941847394, 1819.4173763800002)
(-33257.327098360416, -33256.56795099792, 0.0, 0.0, 0.0023852723772152208, 0.0022826990554499875, 5344, 21, 4.529476174, 1821.2050282080002)
(-33257.32487331958, -33256.634785981936, 0.0, 0.0, 0.002075036581675937, 0.002075036581675937, 5346, 22, 4.945380854, 1821.6517386910002)
(-33257.26325755008, -33256.76835608138, 0.0, 0.0, 0.001488122548174009, 0.001488122548174009, 5409, 23, 5.376319672999999, 1822.391092887)
(-33257.177514783994, -33256.76835608138, 0.0, 0.0, 0.0013613789016208922, 0.0012303020492894984, 5549, 24, 5.9702634329999995, 1823.797602064)
(-33257.17127158224, -33256.80771741804, 0.0, 0.0, 0.0010931721627909928, 0.0010931721627909928, 5560, 25, 6.491429729, 1824.4002002940001)
(-33257.0959145445, -33256.80771741804, 0.0, 0.0, 0.0011026839237359195, 0.0008665808483683041, 5699, 26, 7.127777172, 1825.717766268)
(-33257.094084218545, -33256.83526803335, 0.0, 0.0, 0.0007782345587317904, 0.0007782345587317904, 5704, 27, 7.569461851, 1826.20621095)
(-33257.06249518587, -33256.83526803335, 0.0, 0.0, 0.0007162362651724984, 0.0006832494754546767, 5794, 28, 8.06570781, 1827.2953047960002)
(-33257.0621186971, -33256.84668480855, 0.0, 0.0, 0.0006477880798097511, 0.0006477880798097511, 5797, 29, 8.599498405999999, 1827.8644938010002)
(-33257.05668031545, -33256.86161160959, 0.0, 0.0, 0.0005865517562705957, 0.0005865517562705957, 5813, 30, 9.048523013999999, 1828.418178326)
(-33257.007355298956, -33256.86161160959, 0.0, 0.0, 0.000535230319548974, 0.00043823644897975203, 6058, 31, 9.579604101, 1830.3180137440002)
(-33257.007355298956, -33256.863444316004, 0.0, 0.0, 0.00043378152209970223, 0.00043272566335847407, 6062, 32, 10.113900251999999, 1830.9141429800002)
(-33257.000965806554, -33256.87043506191, 0.0, 0.0, 0.0003924925675143995, 0.0003924925675143995, 6094, 33, 10.633057450999999, 1831.6244349180001)
(-33256.999935304186, -33256.87043506191, 0.0, 0.0, 0.000451131803449972, 0.00038939395253813016, 6100, 34, 11.178268335999999, 1832.2350796710002)
(-33256.999921690825, -33256.87043506191, 0.0, 0.0, 0.00039864259158799696, 0.0003893530185591544, 6101, 35, 11.528822254999998, 1832.6205209640002)
(-33256.999811075206, -33256.878380789996, 0.0, 0.0, 0.00036512833170668235, 0.00036512833170668235, 6104, 36, 11.997665286999998, 1833.1363062280002)
(-33256.98009862816, -33256.88609756939, 0.0, 0.0, 0.0002826514138968553, 0.0002826514138968553, 6212, 37, 12.399357025999999, 1834.1738861760002)
(-33256.975489287506, -33256.88609756939, 0.0, 0.0, 0.00035298461357832284, 0.00026879160560694816, 6240, 38, 12.791378072999999, 1834.7197816740002)
(-33256.975489287506, -33256.88609756939, 0.0, 0.0, 0.0003371090728743686, 0.00026879160560694816, 6241, 39, 13.227745853999998, 1835.190499963)
(-33256.97547355888, -33256.89347550149, 0.0, 0.0, 0.00024655958154166664, 0.00024655958154166664, 6242, 40, 13.611736411999999, 1835.6173655530001)
(-33256.959821063705, -33256.89347550149, 0.0, 0.0, 0.0002088749238477741, 0.00019949416580773398, 6408, 41, 14.083050852, 1837.137187945)
(-33256.95885548759, -33256.89347550149, 0.0, 0.0, 0.0002487692489477717, 0.00019659077942385528, 6417, 42, 14.523768564, 1837.665389015)
(-33256.95885548759, -33256.90121839527, 0.0, 0.0, 0.00017336285913374666, 0.00017330866738581358, 6418, 43, 14.917520912999999, 1838.1039937070002)
(-33256.94675469106, -33256.90121839527, 0.0, 0.0, 0.0003130763888162427, 0.0001369228464440564, 6623, 44, 15.453043028, 1839.728290041)
(-33256.94667863198, -33256.90175772513, 0.0, 0.0, 0.00013507243453118534, 0.00013507243453118534, 6625, 45, 16.10598191, 1840.4185023710002)
(-33256.94238730508, -33256.904697744285, 0.0, 0.0, 0.00011332852871913222, 0.00011332852871913222, 6696, 46, 16.54543335, 1841.301665145)
(-33256.94235104311, -33256.90912079055, 0.0, 0.0, 9.99198465377035e-5, 9.99198465377035e-5, 6702, 47, 16.911998059, 1841.7360469690002)
