solving instance knapsack 200 8 exp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3374.3031226
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 226.6968774, #pieces = 600
Iteration 2	LB = -15050.057669960152	UB = -13699.64217786098	CPU = 745.2881232550001, #pieces = 882
Iteration 3	LB = -15049.810927095496	UB = -13699.64217786098	CPU = 745.5942207090001, #pieces = 882
Iteration 4	LB = -14080.273389738879	UB = -13797.542278088886	CPU = 790.2600509340001, #pieces = 1007
Iteration 5	LB = -13913.083647267691	UB = -13850.364767690722	CPU = 836.2088120310001, #pieces = 1173
Iteration 6	LB = -13904.088105151232	UB = -13852.110853927477	CPU = 844.3655037450001, #pieces = 1262
Iteration 7	LB = -13885.17904205551	UB = -13860.579505111293	CPU = 844.6961481970001, #pieces = 1320
Iteration 8	LB = -13883.822625152363	UB = -13869.641771401053	CPU = 845.497292363, #pieces = 1466
Iteration 9	LB = -13880.868940385079	UB = -13870.540458491007	CPU = 846.1500485390001, #pieces = 1571
Iteration 10	LB = -13876.25972221139	UB = -13871.789053104385	CPU = 846.527903163, #pieces = 1623
Iteration 11	LB = -13875.835488879331	UB = -13871.949038750763	CPU = 846.603689979, #pieces = 1625
Iteration 12	LB = -13875.835488879331	UB = -13872.600894494411	CPU = 847.4690859450001, #pieces = 1761
Iteration 13	LB = -13875.173545315442	UB = -13872.813102465507	CPU = 847.8862200220001, #pieces = 1821
Iteration 14	LB = -13874.557712025173	UB = -13872.981899885106	CPU = 848.311793932, #pieces = 1881
Iteration 15	LB = -13874.312413658043	UB = -13873.267501927457	CPU = 849.021534621, #pieces = 1988
Iteration 16	LB = -13874.118709709224	UB = -13873.267501927457	CPU = 849.2945566010001, #pieces = 2024
Iteration 17	LB = -13874.026439592655	UB = -13873.382263567519	CPU = 849.8869661680001, #pieces = 2097
Iteration 18	LB = -13873.880926014412	UB = -13873.4333833129	CPU = 850.476791993, #pieces = 2172
Iteration 19	LB = -13873.76932624044	UB = -13873.460380633487	CPU = 850.838481158, #pieces = 2206
Iteration 20	LB = -13873.737639007602	UB = -13873.46724726847	CPU = 851.0259878170001, #pieces = 2216
Iteration 21	LB = -13873.731549010723	UB = -13873.525978982761	CPU = 851.8689412010001, #pieces = 2315
Iteration 22	LB = -13873.680148661384	UB = -13873.525978982761	CPU = 852.329294737, #pieces = 2362
Iteration 23	LB = -13873.653539317143	UB = -13873.525978982761	CPU = 852.706579041, #pieces = 2370
Iteration 24	LB = -13873.649343644349	UB = -13873.541123866475	CPU = 853.449973999, #pieces = 2444
Iteration 25	LB = -13873.627075307824	UB = -13873.541123866475	CPU = 853.670524978, #pieces = 2452
Iteration 26	LB = -13873.626211886754	UB = -13873.556259060173	CPU = 854.6684067440001, #pieces = 2564
Iteration 27	LB = -13873.606218746898	UB = -13873.556259060173	CPU = 854.9994130470001, #pieces = 2586
Iteration 28	LB = -13873.603649345707	UB = -13873.561740198047	CPU = 855.710262714, #pieces = 2654
Iteration 29	LB = -13873.594858644394	UB = -13873.561740198047	CPU = 855.978672444, #pieces = 2666
Iteration 30	LB = -13873.593325404252	UB = -13873.568826591923	CPU = 856.862017842, #pieces = 2762
Iteration 31	LB = -13873.587328166075	UB = -13873.568826591923	CPU = 857.0680624190001, #pieces = 2762
Iteration 32	LB = -13873.58727646438	UB = -13873.568826591923	CPU = 857.3104049640001, #pieces = 2764
Iteration 33	LB = -13873.58727646438	UB = -13873.570794852092	CPU = 857.918647382, #pieces = 2824
Iteration 34	LB = -13873.584908675679	UB = -13873.570794852092	CPU = 858.228036168, #pieces = 2828
Iteration 35	LB = -13873.584749677584	UB = -13873.570794852092	CPU = 858.434617898, #pieces = 2829
WRITING LOG...
(-15050.057669960152, -13699.64217786098, 0.0, 0.0, 9.857304844658513, 9.857304844658513, 600, 1, 0.07286806, 226.779139111)
(-15049.810927095496, -13699.64217786098, 0.0, 0.0, 9.858079511863137, 9.855503754809213, 882, 2, 0.099768418, 745.315560987)
(-14080.273389738879, -13797.542278088886, 0.0, 0.0, 2.049141114783774, 2.049141114783774, 882, 3, 0.163745673, 745.658747756)
(-13913.083647267691, -13850.364767690722, 0.0, 0.0, 0.45283196961913696, 0.45283196961913696, 1007, 4, 0.197942367, 790.294767047)
(-13904.088105151232, -13852.110853927477, 0.0, 0.0, 0.37522982433408025, 0.37522982433408025, 1173, 5, 0.21652136300000002, 836.22795439)
(-13885.17904205551, -13860.579505111293, 0.0, 0.0, 0.17747841592875438, 0.17747841592875438, 1262, 6, 0.24662780600000003, 844.3961540790001)
(-13883.822625152363, -13869.641771401053, 0.0, 0.0, 0.10224383574599907, 0.10224383574599907, 1320, 7, 0.27781768700000004, 844.727865487)
(-13880.868940385079, -13870.540458491007, 0.0, 0.0, 0.07446344232209971, 0.07446344232209971, 1466, 8, 0.31410787800000006, 845.5341447400001)
(-13876.25972221139, -13871.789053104385, 0.0, 0.0, 0.03222849691479027, 0.03222849691479027, 1571, 9, 0.36635628500000006, 846.2029038060001)
(-13875.835488879331, -13871.949038750763, 0.0, 0.0, 0.028016611924620734, 0.028016611924620734, 1623, 10, 0.4248943540000001, 846.586952599)
(-13875.835488879331, -13872.600894494411, 0.0, 0.0, 0.023419788372920563, 0.02331642357132362, 1625, 11, 0.4879774090000001, 846.6673577060001)
(-13875.173545315442, -13872.813102465507, 0.0, 0.0, 0.017014882507969974, 0.017014882507969974, 1761, 12, 0.563150412, 847.544796066)
(-13874.557712025173, -13872.981899885106, 0.0, 0.0, 0.011358856743551462, 0.011358856743551462, 1821, 13, 0.638415731, 847.9620539330001)
(-13874.312413658043, -13873.267501927457, 0.0, 0.0, 0.007531835816184283, 0.007531835816184283, 1881, 14, 0.7147004220000001, 848.3886692030001)
(-13874.118709709224, -13873.267501927457, 0.0, 0.0, 0.006472335596252291, 0.006135596979215802, 1988, 15, 0.7840069150000001, 849.09143299)
(-13874.026439592655, -13873.382263567519, 0.0, 0.0, 0.004643251464554933, 0.004643251464554933, 2024, 16, 0.9029750790000001, 849.4141121050001)
(-13873.880926014412, -13873.4333833129, 0.0, 0.0, 0.0032258972176970047, 0.0032258972176970047, 2097, 17, 1.030413604, 850.0150531070001)
(-13873.76932624044, -13873.460380633487, 0.0, 0.0, 0.0022268821078210233, 0.0022268821078210233, 2172, 18, 1.1675732920000002, 850.6144724950001)
(-13873.737639007602, -13873.46724726847, 0.0, 0.0, 0.0019489845927667946, 0.0019489845927667946, 2206, 19, 1.3031441980000003, 850.9746025210001)
(-13873.731549010723, -13873.525978982761, 0.0, 0.0, 0.001481743201209313, 0.001481743201209313, 2216, 20, 1.4393035860000003, 851.162731791)
(-13873.680148661384, -13873.525978982761, 0.0, 0.0, 0.0013235710074285814, 0.0011112508734702335, 2315, 21, 1.6143045630000004, 852.0445001730001)
(-13873.653539317143, -13873.525978982761, 0.0, 0.0, 0.0010715935267892132, 0.000919451439924068, 2362, 22, 1.9403918410000003, 852.656015946)
(-13873.649343644349, -13873.541123866475, 0.0, 0.0, 0.0007800443802196529, 0.0007800443802196529, 2370, 23, 2.1382533230000003, 852.9049361560001)
(-13873.627075307824, -13873.541123866475, 0.0, 0.0, 0.0007552919029163136, 0.0006195349880914401, 2444, 24, 2.298345067, 853.610618644)
(-13873.626211886754, -13873.556259060173, 0.0, 0.0, 0.0005042169813934622, 0.0005042169813934622, 2452, 25, 2.572580796, 853.9453692180001)
(-13873.606218746898, -13873.556259060173, 0.0, 0.0, 0.000518620366491433, 0.000360107284620744, 2564, 26, 2.731477054, 854.827796289)
(-13873.603649345707, -13873.561740198047, 0.0, 0.0, 0.00030207922409896017, 0.00030207922409896017, 2586, 27, 2.908059948, 855.1765645810001)
(-13873.594858644394, -13873.561740198047, 0.0, 0.0, 0.0002556842200772157, 0.00023871625013694234, 2654, 28, 3.096523527, 855.8992892800001)
(-13873.593325404252, -13873.568826591923, 0.0, 0.0, 0.00017658623123449242, 0.00017658623123449242, 2666, 29, 3.363304647, 856.245966852)
(-13873.587328166075, -13873.568826591923, 0.0, 0.0, 0.000514468274113961, 0.0001333584341779401, 2762, 30, 3.5582500230000003, 857.057553479)
(-13873.58727646438, -13873.568826591923, 0.0, 0.0, 0.0001568899644924954, 0.00013298577090209557, 2762, 31, 3.764711033, 857.2750990320001)
(-13873.58727646438, -13873.570794852092, 0.0, 0.0, 0.00011923519988434701, 0.00011879863180622601, 2764, 32, 3.967695731, 857.5139005760001)
(-13873.584908675679, -13873.570794852092, 0.0, 0.0, 0.00014068632002777511, 0.00010173173003144394, 2824, 33, 4.235289237, 858.186804336)
(-13873.584749677584, -13873.570794852092, 0.0, 0.0, 0.00012950787308036463, 0.00010058567976704773, 2828, 34, 4.429670713, 858.4229508100001)
(-13873.584732168594, -13873.572872182625, 0.0, 0.0, 8.548616912244862e-5, 8.548616912244862e-5, 2829, 35, 4.735825207, 858.741308759)
