solving instance knapsack 50 9 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.873153189
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.126846811, #pieces = 50
Iteration 2	LB = -1875.4613269359147	UB = 0.0	CPU = 0.45137712, #pieces = 114
Iteration 3	LB = -1875.4613269359147	UB = -1728.7759810117927	CPU = 0.591657062, #pieces = 154
Iteration 4	LB = -1791.1303555282218	UB = -1739.0772982503927	CPU = 0.78090532, #pieces = 215
Iteration 5	LB = -1757.26761180897	UB = -1739.0772982503927	CPU = 0.841871173, #pieces = 219
Iteration 6	LB = -1756.6190069826298	UB = -1739.0772982503927	CPU = 1.007427129, #pieces = 258
Iteration 7	LB = -1744.0436715152414	UB = -1739.0772982503927	CPU = 1.23971422, #pieces = 323
Iteration 8	LB = -1740.837764867136	UB = -1739.1173062255286	CPU = 1.450234767, #pieces = 360
Iteration 9	LB = -1739.4847538458423	UB = -1739.1173062255286	CPU = 1.7684659200000001, #pieces = 423
Iteration 10	LB = -1739.2558984564023	UB = -1739.1173062255286	CPU = 2.142781003, #pieces = 482
Iteration 11	LB = -1739.1675647758977	UB = -1739.1173062255286	CPU = 2.41290008, #pieces = 515
Iteration 12	LB = -1739.1308993222474	UB = -1739.1173062255286	CPU = 2.7778599330000002, #pieces = 579
Iteration 13	LB = -1739.122762987682	UB = -1739.1173062255286	CPU = 3.1003807360000004, #pieces = 606
WRITING LOG...
(-1875.4613269359147, 0.0, 0.0, 0.0, Inf, Inf, 50, 1, 0.065061167, 0.200834284)
(-1875.4613269359147, -1728.7759810117927, 0.0, 0.0, 10.903886973286477, 8.484925029920424, 114, 2, 0.07115143, 0.45760255800000005)
(-1791.1303555282218, -1739.0772982503927, 0.0, 0.0, 2.9931422444647713, 2.9931422444647713, 154, 3, 0.10669068500000001, 0.62733229)
(-1757.26761180897, -1739.0772982503927, 0.0, 0.0, 1.8017545671884694, 1.0459749878212905, 215, 4, 0.16090695000000002, 0.8352582070000001)
(-1756.6190069826298, -1739.0772982503927, 0.0, 0.0, 1.0086790707856996, 1.0086790707856996, 219, 5, 0.21969128000000002, 0.900802058)
(-1744.0436715152414, -1739.0772982503927, 0.0, 0.0, 0.28557518805202864, 0.28557518805202864, 258, 6, 0.275806445, 1.063678897)
(-1740.837764867136, -1739.1173062255286, 0.0, 0.0, 0.09892711868536004, 0.09892711868536004, 323, 7, 0.36688644400000003, 1.330942021)
(-1739.4847538458423, -1739.1173062255286, 0.0, 0.0, 0.021128397664626458, 0.021128397664626458, 360, 8, 0.478466433, 1.561957096)
(-1739.2558984564023, -1739.1173062255286, 0.0, 0.0, 0.007969113433437522, 0.007969113433437522, 423, 9, 0.653533554, 1.943669416)
(-1739.1675647758977, -1739.1173062255286, 0.0, 0.0, 0.0028898884617614435, 0.0028898884617614435, 482, 10, 0.789833239, 2.2792234330000003)
(-1739.1308993222474, -1739.1173062255286, 0.0, 0.0, 0.000781608961631929, 0.000781608961631929, 515, 11, 0.939103702, 2.56232682)
(-1739.122762987682, -1739.1173062255286, 0.0, 0.0, 0.00031376619242060147, 0.00031376619242060147, 579, 12, 1.118125148, 2.9570300790000004)
(-1739.117891946445, -1739.1173062255286, 0.0, 0.0, 3.367920693656292e-5, 3.367920693656292e-5, 606, 13, 1.3098545650000002, 3.2922597720000004)
