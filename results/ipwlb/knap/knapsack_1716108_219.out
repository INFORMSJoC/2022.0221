solving instance knapsack 50 2 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.890172663
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.10982733700000001, #pieces = 50
Iteration 2	LB = -1812.2894193551324	UB = 0.0	CPU = 0.42575475700000004, #pieces = 122
Iteration 3	LB = -1788.858606053238	UB = -1617.5325757410073	CPU = 0.554720381, #pieces = 160
Iteration 4	LB = -1673.178483961745	UB = -1617.5325757410073	CPU = 0.679329191, #pieces = 195
Iteration 5	LB = -1648.9723549714743	UB = -1620.900216474062	CPU = 0.818387163, #pieces = 245
Iteration 6	LB = -1629.6244429697501	UB = -1620.900216474062	CPU = 0.9816865490000001, #pieces = 304
Iteration 7	LB = -1623.8717801845953	UB = -1620.900216474062	CPU = 1.065686493, #pieces = 312
Iteration 8	LB = -1623.1912235846983	UB = -1620.900216474062	CPU = 1.306924025, #pieces = 364
Iteration 9	LB = -1621.5250207570064	UB = -1620.9232961721582	CPU = 1.5904204400000002, #pieces = 421
Iteration 10	LB = -1621.112492833307	UB = -1620.9309885009125	CPU = 1.9431130870000002, #pieces = 489
Iteration 11	LB = -1620.9950558607702	UB = -1620.9309885009125	CPU = 2.259442921, #pieces = 536
Iteration 12	LB = -1620.9507059440336	UB = -1620.9309885009125	CPU = 2.578632512, #pieces = 585
Iteration 13	LB = -1620.9379426302878	UB = -1620.9309885009125	CPU = 2.9096768990000004, #pieces = 634
WRITING LOG...
(-1812.2894193551324, 0.0, 0.0, 0.0, Inf, Inf, 50, 1, 0.050530677, 0.166830846)
(-1788.858606053238, -1617.5325757410073, 0.0, 0.0, 10.59181328906124, 10.59181328906124, 122, 2, 0.059730845000000005, 0.435086324)
(-1673.178483961745, -1617.5325757410073, 0.0, 0.0, 3.704853802209687, 3.4401723375027426, 160, 3, 0.09760238400000001, 0.592721748)
(-1648.9723549714743, -1620.900216474062, 0.0, 0.0, 1.731885665267996, 1.731885665267996, 195, 4, 0.11983396000000002, 0.701695052)
(-1629.6244429697501, -1620.900216474062, 0.0, 0.0, 0.5382334092511782, 0.5382334092511782, 245, 5, 0.142408148, 0.841081462)
(-1623.8717801845953, -1620.900216474062, 0.0, 0.0, 0.2567837085367969, 0.1833279852967925, 304, 6, 0.20045173100000002, 1.0398533250000002)
(-1623.1912235846983, -1620.900216474062, 0.0, 0.0, 0.14134164998878337, 0.14134164998878337, 312, 7, 0.298395624, 1.1637653810000002)
(-1621.5250207570064, -1620.9232961721582, 0.0, 0.0, 0.037122335539821964, 0.037122335539821964, 364, 8, 0.41757030700000003, 1.4262237800000002)
(-1621.112492833307, -1620.9309885009125, 0.0, 0.0, 0.011197536087726076, 0.011197536087726076, 421, 9, 0.5744678120000001, 1.7474573800000002)
(-1620.9950558607702, -1620.9309885009125, 0.0, 0.0, 0.003952503858106663, 0.003952503858106663, 489, 10, 0.733912643, 2.102715827)
(-1620.9507059440336, -1620.9309885009125, 0.0, 0.0, 0.001216427057108454, 0.001216427057108454, 536, 11, 0.8874386550000001, 2.413102173)
(-1620.9379426302878, -1620.9309885009125, 0.0, 0.0, 0.0004290206939516876, 0.0004290206939516876, 585, 12, 1.045982272, 2.7373306160000004)
(-1620.9324507071767, -1620.9309885009125, 0.0, 0.0, 9.020780493576057e-5, 9.020780493576057e-5, 634, 13, 1.198299529, 3.062128887)
