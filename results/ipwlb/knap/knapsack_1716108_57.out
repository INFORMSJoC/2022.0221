solving instance knapsack 10 6 divexp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3599.072907447
expr 1, 1 = 25.636922 / (1 + 75.589744 * exp(-0.111218 * (x + -70.584356)))
expr 1, 2 = 80.670039 / (1 + 87.784304 * exp(-0.181232 * (x + -73.086994)))
expr 1, 3 = 13.149285 / (1 + 63.391798 * exp(-0.181085 * (x + -74.780438)))
expr 1, 4 = 47.268944 / (1 + 23.679508 * exp(-0.154606 * (x + -69.658539)))
expr 1, 5 = 66.116878 / (1 + 43.669621 * exp(-0.178151 * (x + -99.592187)))
expr 1, 6 = 5.063557 / (1 + 49.750401 * exp(-0.182056 * (x + -67.769292)))
expr 1, 7 = 75.35214 / (1 + 47.252044 * exp(-0.18562 * (x + -70.385198)))
expr 1, 8 = 71.269952 / (1 + 5.209221 * exp(-0.10908 * (x + -97.920257)))
expr 1, 9 = 15.608554 / (1 + 85.357908 * exp(-0.169837 * (x + -62.967239)))
expr 1, 10 = 34.139409 / (1 + 92.641976 * exp(-0.115511 * (x + -4.528858)))
(-1.0 * 25.636922) / (1 + 75.589744 * exp(-0.111218 * (x + -70.584356)))
(-1.0 * 80.670039) / (1 + 87.784304 * exp(-0.181232 * (x + -73.086994)))
(-1.0 * 13.149285) / (1 + 63.391798 * exp(-0.181085 * (x + -74.780438)))
(-1.0 * 47.268944) / (1 + 23.679508 * exp(-0.154606 * (x + -69.658539)))
(-1.0 * 66.116878) / (1 + 43.669621 * exp(-0.178151 * (x + -99.592187)))
(-1.0 * 5.063557) / (1 + 49.750401 * exp(-0.182056 * (x + -67.769292)))
(-1.0 * 75.35214) / (1 + 47.252044 * exp(-0.18562 * (x + -70.385198)))
(-1.0 * 71.269952) / (1 + 5.209221 * exp(-0.10908 * (x + -97.920257)))
(-1.0 * 15.608554) / (1 + 85.357908 * exp(-0.169837 * (x + -62.967239)))
(-1.0 * 34.139409) / (1 + 92.641976 * exp(-0.115511 * (x + -4.528858)))
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 1.927092553, #pieces = 149
Iteration 2	LB = -216.2946987210295	UB = -204.38383452569425	CPU = 17.163141585, #pieces = 154
Iteration 3	LB = -205.72763702778423	UB = -204.38383452569425	CPU = 20.072981318, #pieces = 155
Iteration 4	LB = -204.87699956411757	UB = -204.38383452569425	CPU = 20.681663993, #pieces = 159
Iteration 5	LB = -204.49374865903087	UB = -204.38383452569425	CPU = 23.769695498, #pieces = 161
Iteration 6	LB = -204.40105103418486	UB = -204.38383452569425	CPU = 26.414937905000002, #pieces = 177
Iteration 7	LB = -204.38449148924397	UB = -204.38383452569425	CPU = 26.454886199, #pieces = 181
Iteration 8	LB = -204.38415490916904	UB = -204.38383452569425	CPU = 26.484607899, #pieces = 182
WRITING LOG...
(-216.2946987210295, -204.38383452569425, 0.0, 0.0, 5.827693869711535, 5.827693869711535, 149, 1, 0.049557056, 1.9849174490000001)
(-205.72763702778423, -204.38383452569425, 0.0, 0.0, 1.7116263358318684, 0.6574896225078086, 154, 2, 0.058442270000000004, 17.172135462)
(-204.87699956411757, -204.38383452569425, 0.0, 0.0, 0.24129356392974177, 0.24129356392974177, 155, 3, 0.07149126, 20.086105679000003)
(-204.49374865903087, -204.38383452569425, 0.0, 0.0, 0.05377829102369558, 0.05377829102369558, 159, 4, 0.077644677, 20.687912019000002)
(-204.40105103418486, -204.38383452569425, 0.0, 0.0, 0.008423615561651053, 0.008423615561651053, 161, 5, 0.08371780599999999, 23.775838280000002)
(-204.38449148924397, -204.38383452569425, 0.0, 0.0, 0.0003214361601740047, 0.0003214361601740047, 177, 6, 0.09166617999999999, 26.422960776)
(-204.38415490916904, -204.38383452569425, 0.0, 0.0, 0.00015675578038251863, 0.00015675578038251863, 181, 7, 0.09968540899999999, 26.462972116000003)
(-204.38390091188793, -204.38383452569425, 0.0, 0.0, 3.248113718685518e-5, 3.248113718685518e-5, 182, 8, 0.10774423799999999, 26.492735973000002)
