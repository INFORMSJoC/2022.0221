solving instance knapsack 10 5 divexp
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3596.918949003
expr 1, 1 = 64.708597 / (1 + 10.407366 * exp(-0.107263 * (x + -97.650557)))
expr 1, 2 = 99.150248 / (1 + 1.148802 * exp(-0.113538 * (x + -37.82099)))
expr 1, 3 = 5.417246 / (1 + 49.734769 * exp(-0.191835 * (x + -91.342198)))
expr 1, 4 = 98.077733 / (1 + 43.678028 * exp(-0.172847 * (x + -20.073624)))
expr 1, 5 = 14.129879 / (1 + 3.568411 * exp(-0.168442 * (x + -15.479389)))
expr 1, 6 = 40.657623 / (1 + 21.329085 * exp(-0.199868 * (x + -40.394429)))
expr 1, 7 = 60.569844 / (1 + 71.58997 * exp(-0.196327 * (x + -59.04789)))
expr 1, 8 = 16.583485 / (1 + 54.036021 * exp(-0.173501 * (x + -36.925295)))
expr 1, 9 = 44.858795 / (1 + 56.424982 * exp(-0.161501 * (x + -28.246244)))
expr 1, 10 = 42.99847 / (1 + 45.753023 * exp(-0.181162 * (x + -62.831688)))
(-1.0 * 64.708597) / (1 + 10.407366 * exp(-0.107263 * (x + -97.650557)))
(-1.0 * 99.150248) / (1 + 1.148802 * exp(-0.113538 * (x + -37.82099)))
(-1.0 * 5.417246) / (1 + 49.734769 * exp(-0.191835 * (x + -91.342198)))
(-1.0 * 98.077733) / (1 + 43.678028 * exp(-0.172847 * (x + -20.073624)))
(-1.0 * 14.129879) / (1 + 3.568411 * exp(-0.168442 * (x + -15.479389)))
(-1.0 * 40.657623) / (1 + 21.329085 * exp(-0.199868 * (x + -40.394429)))
(-1.0 * 60.569844) / (1 + 71.58997 * exp(-0.196327 * (x + -59.04789)))
(-1.0 * 16.583485) / (1 + 54.036021 * exp(-0.173501 * (x + -36.925295)))
(-1.0 * 44.858795) / (1 + 56.424982 * exp(-0.161501 * (x + -28.246244)))
(-1.0 * 42.99847) / (1 + 45.753023 * exp(-0.181162 * (x + -62.831688)))
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 4.081050997, #pieces = 118
Iteration 2	LB = -415.1522361448177	UB = -389.7844624493947	CPU = 23.104666286, #pieces = 125
Iteration 3	LB = -415.15218786917774	UB = -389.7844624493947	CPU = 23.182090958, #pieces = 129
Iteration 4	LB = -403.4065782289079	UB = -389.7844624493947	CPU = 31.611422844000003, #pieces = 133
Iteration 5	LB = -403.4065782289079	UB = -389.7844624493947	CPU = 31.620855364, #pieces = 135
Iteration 6	LB = -401.8198234541379	UB = -396.49563227920066	CPU = 36.099093354000004, #pieces = 141
Iteration 7	LB = -401.4164986340588	UB = -396.49563227920066	CPU = 36.177013994, #pieces = 147
Iteration 8	LB = -398.83712024134775	UB = -397.4019218955457	CPU = 36.205027640000004, #pieces = 154
Iteration 9	LB = -398.49566605323815	UB = -397.4555190872443	CPU = 36.276024939, #pieces = 159
Iteration 10	LB = -398.0074875910316	UB = -397.5565868679287	CPU = 39.241637790000006, #pieces = 166
Iteration 11	LB = -397.9126815898276	UB = -397.6651964414476	CPU = 39.370009586, #pieces = 174
Iteration 12	LB = -397.8179374820162	UB = -397.6965252561255	CPU = 39.461215555, #pieces = 181
Iteration 13	LB = -397.80799689461446	UB = -397.7524644617299	CPU = 39.546526214000004, #pieces = 187
Iteration 14	LB = -397.79822707213697	UB = -397.75889517451037	CPU = 39.614365687, #pieces = 192
Iteration 15	LB = -397.7817319290081	UB = -397.75889517451037	CPU = 39.700431759000004, #pieces = 198
Iteration 16	LB = -397.7722243347536	UB = -397.7623112659745	CPU = 39.827642248000004, #pieces = 203
Iteration 17	LB = -397.77047646639306	UB = -397.7628895646707	CPU = 39.910451796000004, #pieces = 208
Iteration 18	LB = -397.76740332712274	UB = -397.7628895646707	CPU = 40.008177437, #pieces = 213
Iteration 19	LB = -397.7667020527579	UB = -397.7638473657762	CPU = 40.155680969, #pieces = 219
Iteration 20	LB = -397.76602866986025	UB = -397.7638473657762	CPU = 40.255220807, #pieces = 222
Iteration 21	LB = -397.765777620308	UB = -397.7638473657762	CPU = 40.340754813000004, #pieces = 226
Iteration 22	LB = -397.76526634733966	UB = -397.76425576608585	CPU = 40.455659833000006, #pieces = 232
Iteration 23	LB = -397.76500265856623	UB = -397.76435032961854	CPU = 40.558153962000006, #pieces = 236
Iteration 24	LB = -397.7649763811968	UB = -397.7645193477672	CPU = 40.647479109, #pieces = 239
WRITING LOG...
(-415.1522361448177, -389.7844624493947, 0.0, 0.0, 6.508154156790301, 6.508154156790301, 118, 1, 0.058901304, 4.148437819000001)
(-415.15218786917774, -389.7844624493947, 0.0, 0.0, 6.508141771576257, 6.508141771576257, 125, 2, 0.062403341, 23.108293947)
(-403.4065782289079, -389.7844624493947, 0.0, 0.0, 4.164463242645114, 3.4947816272388583, 129, 3, 0.071560191, 23.191347085)
(-403.4065782289079, -389.7844624493947, 0.0, 0.0, 3.7502038649967235, 3.4947816272388583, 133, 4, 0.075971656, 31.615932125)
(-401.8198234541379, -396.49563227920066, 0.0, 0.0, 1.3428120618458956, 1.3428120618458956, 135, 5, 0.092840983, 31.637801077000002)
(-401.4164986340588, -396.49563227920066, 0.0, 0.0, 1.2521017416294464, 1.24108967520556, 141, 6, 0.099228565, 36.105549237000005)
(-398.83712024134775, -397.4019218955457, 0.0, 0.0, 0.361145295663491, 0.361145295663491, 147, 7, 0.10945777200000001, 36.187312442)
(-398.49566605323815, -397.4555190872443, 0.0, 0.0, 0.26170147753453393, 0.26170147753453393, 154, 8, 0.16358804300000002, 36.259221534000005)
(-398.0074875910316, -397.5565868679287, 0.0, 0.0, 0.11341799834213215, 0.11341799834213215, 159, 9, 0.21137870600000003, 36.323881712)
(-397.9126815898276, -397.6651964414476, 0.0, 0.0, 0.06223455072122406, 0.06223455072122406, 166, 10, 0.268036414, 39.298382902)
(-397.8179374820162, -397.6965252561255, 0.0, 0.0, 0.030528862632761507, 0.030528862632761507, 174, 11, 0.33447613200000004, 39.436511935000006)
(-397.80799689461446, -397.7524644617299, 0.0, 0.0, 0.013961555954077647, 0.013961555954077647, 181, 12, 0.39887682, 39.525685634000006)
(-397.79822707213697, -397.75889517451037, 0.0, 0.0, 0.00988837662809268, 0.00988837662809268, 187, 13, 0.451004944, 39.598727001)
(-397.7817319290081, -397.75889517451037, 0.0, 0.0, 0.006582014250540076, 0.005741356076455978, 192, 14, 0.512947073, 39.676374609)
(-397.7722243347536, -397.7623112659745, 0.0, 0.0, 0.002492209165707075, 0.002492209165707075, 198, 15, 0.620093907, 39.807658078)
(-397.77047646639306, -397.7628895646707, 0.0, 0.0, 0.001907393052854752, 0.001907393052854752, 203, 16, 0.68306396, 39.890681707000006)
(-397.76740332712274, -397.7628895646707, 0.0, 0.0, 0.002682028520220834, 0.0011347872238668458, 208, 17, 0.759830879, 39.9872931)
(-397.7667020527579, -397.7638473657762, 0.0, 0.0, 0.0007176838721331596, 0.0007176838721331596, 213, 18, 0.8440624680000001, 40.0924873)
(-397.76602866986025, -397.7638473657762, 0.0, 0.0, 0.0007023335214963113, 0.0005483917400972732, 219, 19, 0.9267312460000001, 40.238415134)
(-397.765777620308, -397.7638473657762, 0.0, 0.0, 0.0006296847705410988, 0.0004852765138296741, 222, 20, 0.9952357070000001, 40.323804339000006)
(-397.76526634733966, -397.76425576608585, 0.0, 0.0, 0.0002540653764532554, 0.0002540653764532554, 226, 21, 1.091479738, 40.437063515000006)
(-397.76500265856623, -397.76435032961854, 0.0, 0.0, 0.00016399884684334913, 0.00016399884684334913, 232, 22, 1.1754902280000001, 40.539746571)
(-397.7649763811968, -397.7645193477672, 0.0, 0.0, 0.00011490050202242903, 0.00011490050202242903, 236, 23, 1.2515884600000002, 40.634317227000004)
(-397.76489628462286, -397.7645193477672, 0.0, 0.0, 0.00010155834348783653, 9.476382063721371e-5, 239, 24, 1.3433890720000004, 40.739349621)
