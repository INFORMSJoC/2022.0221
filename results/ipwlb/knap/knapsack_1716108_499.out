solving instance knapsack 200 10 square
The latest version of Julia in the `1.10` channel is 1.10.6+0.x64.linux.gnu. You currently have `1.10.5+0.x64.linux.gnu` installed. Run:

  juliaup update

in your terminal shell to install Julia 1.10.6+0.x64.linux.gnu and update the `1.10` channel to that version.
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter TokenServer to value "licences.gerad.lan"
Set parameter FeasibilityTol to value 1e-09
Set parameter MIPGap to value 1e-09
Set parameter Threads to value 1
Set parameter OptimalityTol to value 1e-09
Set parameter IntFeasTol to value 1e-09
Set parameter TimeLimit to value 3600.637266807
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
-1.0 * eval(exprs[k, count])
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
construct_constant_piece in x1, x2 = 0.0, 1.0
Iteration 1	LB = -1.0e20	UB = 1.0e20	CPU = 0.362733193, #pieces = 200
Iteration 2	LB = -7460.9756581089405	UB = 0.0	CPU = 0.9189866750000001, #pieces = 492
Iteration 3	LB = -7141.982192623548	UB = -6412.224234949321	CPU = 1.393079779, #pieces = 652
Iteration 4	LB = -6666.205811713628	UB = -6419.716878874885	CPU = 1.574401667, #pieces = 727
Iteration 5	LB = -6607.6754996329855	UB = -6419.716878874885	CPU = 1.752921304, #pieces = 735
Iteration 6	LB = -6603.370787330097	UB = -6419.716878874885	CPU = 1.85877234, #pieces = 741
Iteration 7	LB = -6598.886910934099	UB = -6419.716878874885	CPU = 2.0170091560000003, #pieces = 747
Iteration 8	LB = -6591.670992318115	UB = -6421.254299564644	CPU = 2.4515556540000003, #pieces = 898
Iteration 9	LB = -6516.004098463726	UB = -6421.254299564644	CPU = 2.637084305, #pieces = 904
Iteration 10	LB = -6514.534200432614	UB = -6427.156433680958	CPU = 3.060341325, #pieces = 1026
Iteration 11	LB = -6470.5352062465145	UB = -6430.44040525366	CPU = 3.2530677860000003, #pieces = 1065
Iteration 12	LB = -6460.531853628651	UB = -6430.44040525366	CPU = 3.3738781920000003, #pieces = 1067
Iteration 13	LB = -6459.789657642713	UB = -6430.44040525366	CPU = 3.4629452130000002, #pieces = 1069
Iteration 14	LB = -6458.838347970813	UB = -6430.44040525366	CPU = 3.668408556, #pieces = 1071
Iteration 15	LB = -6458.811312863428	UB = -6430.44040525366	CPU = 4.001853753000001, #pieces = 1073
Iteration 16	LB = -6458.643573596694	UB = -6430.44040525366	CPU = 4.432349001, #pieces = 1075
Iteration 17	LB = -6458.595565018706	UB = -6430.44040525366	CPU = 4.722285223, #pieces = 1077
Iteration 18	LB = -6458.505654142712	UB = -6430.44040525366	CPU = 5.59310201, #pieces = 1334
Iteration 19	LB = -6440.106875357813	UB = -6430.44040525366	CPU = 5.777451428, #pieces = 1336
Iteration 20	LB = -6439.851555935758	UB = -6430.44040525366	CPU = 6.1106043450000005, #pieces = 1342
Iteration 21	LB = -6439.635096697274	UB = -6430.44040525366	CPU = 6.498689131000001, #pieces = 1346
Iteration 22	LB = -6439.164796769403	UB = -6430.44040525366	CPU = 7.235494764, #pieces = 1544
Iteration 23	LB = -6432.6249165193185	UB = -6430.44040525366	CPU = 8.282300796000001, #pieces = 1798
Iteration 24	LB = -6431.108656538975	UB = -6430.44040525366	CPU = 9.558151627, #pieces = 2077
Iteration 25	LB = -6430.675196214951	UB = -6430.44040525366	CPU = 10.616261886, #pieces = 2279
Iteration 26	LB = -6430.507273586156	UB = -6430.44040525366	CPU = 11.942910662000001, #pieces = 2467
Iteration 27	LB = -6430.465976864467	UB = -6430.44040525366	CPU = 13.195190568000001, #pieces = 2660
WRITING LOG...
(-7460.9756581089405, 0.0, 0.0, 0.0, Inf, Inf, 200, 1, 0.057413594000000005, 0.427567266)
(-7141.982192623548, -6412.224234949321, 0.0, 0.0, 11.380730475655223, 11.380730475655223, 492, 2, 0.126349822, 0.9882077480000001)
(-6666.205811713628, -6419.716878874885, 0.0, 0.0, 3.8395608013470848, 3.8395608013470848, 652, 3, 0.178247922, 1.4453204530000001)
(-6607.6754996329855, -6419.716878874885, 0.0, 0.0, 3.113896766816716, 2.9278334902370653, 727, 4, 0.34127035800000005, 1.7377834710000002)
(-6603.370787330097, -6419.716878874885, 0.0, 0.0, 2.9368939259560918, 2.8607789396375902, 735, 5, 0.43312604300000007, 1.8451298280000001)
(-6598.886910934099, -6419.716878874885, 0.0, 0.0, 3.0696818920102342, 2.790933548001196, 741, 6, 0.5721118520000001, 1.9981043020000002)
(-6591.670992318115, -6421.254299564644, 0.0, 0.0, 2.6539471075771863, 2.6539471075771863, 747, 7, 0.6441815090000002, 2.089387937)
(-6516.004098463726, -6421.254299564644, 0.0, 0.0, 1.8367705465162765, 1.4755652786638056, 898, 8, 0.8157104180000001, 2.6234084550000003)
(-6514.534200432614, -6427.156433680958, 0.0, 0.0, 1.359508946970085, 1.359508946970085, 904, 9, 0.9184286900000002, 2.7401413800000003)
(-6470.5352062465145, -6430.44040525366, 0.0, 0.0, 0.6235156298174678, 0.6235156298174678, 1026, 10, 1.006516466, 3.148781462)
(-6460.531853628651, -6430.44040525366, 0.0, 0.0, 0.48177370049562246, 0.4679531490627996, 1065, 11, 1.1121477000000002, 3.359083206)
(-6459.789657642713, -6430.44040525366, 0.0, 0.0, 0.58525966845239, 0.4564112337480713, 1067, 12, 1.1924204160000003, 3.4544892170000003)
(-6458.838347970813, -6430.44040525366, 0.0, 0.0, 0.6078368185255342, 0.4416173843077913, 1069, 13, 1.3887127250000002, 3.6595829020000004)
(-6458.811312863428, -6430.44040525366, 0.0, 0.0, 0.6684354936318295, 0.44119696042262574, 1071, 14, 1.712008753, 3.992087337)
(-6458.643573596694, -6430.44040525366, 0.0, 0.0, 0.4970590133113058, 0.4385884413140999, 1073, 15, 2.13287357, 4.42306119)
(-6458.595565018706, -6430.44040525366, 0.0, 0.0, 0.47464669415743266, 0.43784185826593175, 1075, 16, 2.4130706010000003, 4.712951423000001)
(-6458.505654142712, -6430.44040525366, 0.0, 0.0, 0.4364436511397043, 0.4364436511397043, 1077, 17, 2.645359442, 4.954928737)
(-6440.106875357813, -6430.44040525366, 0.0, 0.0, 0.19717206999246437, 0.1503236091925404, 1334, 18, 2.819962959, 5.768050334000001)
(-6439.851555935758, -6430.44040525366, 0.0, 0.0, 0.19693652058645053, 0.1463531280751673, 1336, 19, 3.1365159360000003, 6.094366097)
(-6439.635096697274, -6430.44040525366, 0.0, 0.0, 0.15676281151230143, 0.14298696300959216, 1342, 20, 3.5026762610000004, 6.477114768000001)
(-6439.164796769403, -6430.44040525366, 0.0, 0.0, 0.13567331264924637, 0.13567331264924637, 1346, 21, 3.7080095410000005, 6.704394226000001)
(-6432.6249165193185, -6430.44040525366, 0.0, 0.0, 0.033971409856680845, 0.033971409856680845, 1544, 22, 4.025827721000001, 7.553696854000001)
(-6431.108656538975, -6430.44040525366, 0.0, 0.0, 0.010391998731050347, 0.010391998731050347, 1798, 23, 4.51068518, 8.767531702000001)
(-6430.675196214951, -6430.44040525366, 0.0, 0.0, 0.0036512423176961774, 0.0036512423176961774, 2077, 24, 4.978483394, 10.02637973)
(-6430.507273586156, -6430.44040525366, 0.0, 0.0, 0.001039871739438811, 0.001039871739438811, 2279, 25, 5.631121552000001, 11.269258524000001)
(-6430.465976864467, -6430.44040525366, 0.0, 0.0, 0.0003976649995212232, 0.0003976649995212232, 2467, 26, 6.230782557, 12.543005038)
(-6430.444987962563, -6430.44040525366, 0.0, 0.0, 7.126586382397104e-5, 7.126586382397104e-5, 2660, 27, 6.771115344, 13.735937055)
