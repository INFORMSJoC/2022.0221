2023/05/23
Julia is now 1.9.4
previous version was 1.9.0
2023/11/29
gurobi is now 11.0.0
previous version was 10.0.2
2022/09/22 - cplex version is now 22.1.1
previous version was 22.1
solving instance knapsack 10 2 sqrt
===========================================================================
 BARON version 23.11.13. Built: LNX-64 Mon Nov 13 23:14:09 EST 2023

 BARON is a product of The Optimization Firm.
 For information on BARON, see https://minlp.com/about-baron
 Licensee: Claudio Contardo at Concordia University, claudio.contardo@concordia.ca.

 If you use this software, please cite publications from
 https://minlp.com/baron-publications, such as: 

 Khajavirad, A. and N. V. Sahinidis,
 A hybrid LP/NLP paradigm for global optimization relaxations,
 Mathematical Programming Computation, 10, 383-421, 2018.
===========================================================================
 This BARON run may utilize the following subsolver(s)
 For LP/MIP/QP: CLP/CBC, ILOG CPLEX                             
 For NLP: IPOPT, FILTERSQP
===========================================================================
 Preprocessing found feasible solution with value 0.00000
 Doing local search
 Solving bounding LP
 Starting multi-start local search
 Done with local search
===========================================================================
  Iteration    Open nodes         Time (s)    Lower bound      Upper bound
          1             1             0.15     -289.305          0.00000       
*        10             4             0.24     -289.296         -286.956       
*        16             6             0.28     -289.296         -287.036       
*        31             3             0.35     -289.296         -287.036       
*        43             4             0.38     -289.296         -288.350       
*        45             4             0.39     -289.296         -288.473       
*        46             4             0.39     -289.296         -288.473       
*        59             6             0.42     -289.296         -289.104       
*        61             6             0.43     -289.296         -289.140       
*        62             4             0.43     -289.296         -289.140       
*        68             6             0.44     -289.296         -289.169       
*        69             2             0.44     -289.296         -289.202       
*        87             4             0.47     -289.296         -289.210       
*       128             1             0.54     -289.296         -289.211       
*       150             6             0.59     -289.296         -289.270       
*       160             7             0.60     -289.296         -289.273       
*       180             5             0.64     -289.296         -289.274       
*       190             8             0.65     -289.296         -289.291       
*       202             4             0.68     -289.296         -289.296       
        298             0             0.84     -289.296         -289.296       

 Calculating duals

                         *** Normal completion ***            

 Wall clock time:                     0.85
 Total CPU time used:                 0.85

 Total no. of BaR iterations:     298
 Best solution found at node:     202
 Max. no. of nodes in memory:      10
 
 All done
===========================================================================
Min nlobj[1,1] + nlobj[1,2] + nlobj[1,3] + nlobj[1,4] + nlobj[1,5] + nlobj[1,6] + nlobj[1,7] + nlobj[1,8] + nlobj[1,9] + nlobj[1,10]
Subject to
 x[1,1] - 100 onoff[1,1] ≤ 0
 x[1,2] - 100 onoff[1,2] ≤ 0
 x[1,3] - 100 onoff[1,3] ≤ 0
 x[1,4] - 100 onoff[1,4] ≤ 0
 x[1,5] - 100 onoff[1,5] ≤ 0
 x[1,6] - 100 onoff[1,6] ≤ 0
 x[1,7] - 100 onoff[1,7] ≤ 0
 x[1,8] - 100 onoff[1,8] ≤ 0
 x[1,9] - 100 onoff[1,9] ≤ 0
 x[1,10] - 100 onoff[1,10] ≤ 0
 4 x[1,1] + 60 x[1,2] + 77 x[1,3] + 38 x[1,4] + 50 x[1,5] + 21 x[1,6] + 44 x[1,7] + 27 x[1,8] + 16 x[1,9] + 52 x[1,10] ≤ 19450
 x[1,1] ≤ 100
 x[1,2] ≤ 100
 x[1,3] ≤ 100
 x[1,4] ≤ 100
 x[1,5] ≤ 100
 x[1,6] ≤ 100
 x[1,7] ≤ 100
 x[1,8] ≤ 100
 x[1,9] ≤ 100
 x[1,10] ≤ 100
 x[1,1] ≥ 0
 x[1,2] ≥ 0
 x[1,3] ≥ 0
 x[1,4] ≥ 0
 x[1,5] ≥ 0
 x[1,6] ≥ 0
 x[1,7] ≥ 0
 x[1,8] ≥ 0
 x[1,9] ≥ 0
 x[1,10] ≥ 0
 nlobj[1,1] ≥ -10000000000
 nlobj[1,2] ≥ -10000000000
 nlobj[1,3] ≥ -10000000000
 nlobj[1,4] ≥ -10000000000
 nlobj[1,5] ≥ -10000000000
 nlobj[1,6] ≥ -10000000000
 nlobj[1,7] ≥ -10000000000
 nlobj[1,8] ≥ -10000000000
 nlobj[1,9] ≥ -10000000000
 nlobj[1,10] ≥ -10000000000
 x[1,1] ≤ 100
 x[1,2] ≤ 100
 x[1,3] ≤ 100
 x[1,4] ≤ 100
 x[1,5] ≤ 100
 x[1,6] ≤ 100
 x[1,7] ≤ 100
 x[1,8] ≤ 100
 x[1,9] ≤ 100
 x[1,10] ≤ 100
 nlobj[1,1] ≤ 10000000000
 nlobj[1,2] ≤ 10000000000
 nlobj[1,3] ≤ 10000000000
 nlobj[1,4] ≤ 10000000000
 nlobj[1,5] ≤ 10000000000
 nlobj[1,6] ≤ 10000000000
 nlobj[1,7] ≤ 10000000000
 nlobj[1,8] ≤ 10000000000
 nlobj[1,9] ≤ 10000000000
 nlobj[1,10] ≤ 10000000000
 onoff[1,1] binary
 onoff[1,2] binary
 onoff[1,3] binary
 onoff[1,4] binary
 onoff[1,5] binary
 onoff[1,6] binary
 onoff[1,7] binary
 onoff[1,8] binary
 onoff[1,9] binary
 onoff[1,10] binary
 (subexpression[1] - nlobj[1,1]) - 0.0 ≤ 0
 (subexpression[2] - nlobj[1,2]) - 0.0 ≤ 0
 (subexpression[3] - nlobj[1,3]) - 0.0 ≤ 0
 (subexpression[4] - nlobj[1,4]) - 0.0 ≤ 0
 (subexpression[5] - nlobj[1,5]) - 0.0 ≤ 0
 (subexpression[6] - nlobj[1,6]) - 0.0 ≤ 0
 (subexpression[7] - nlobj[1,7]) - 0.0 ≤ 0
 (subexpression[8] - nlobj[1,8]) - 0.0 ≤ 0
 (subexpression[9] - nlobj[1,9]) - 0.0 ≤ 0
 (subexpression[10] - nlobj[1,10]) - 0.0 ≤ 0
With NL expressions
 subexpression[1]: -1.0 * 4.840051916386329 * (0.01 * x[1,1]) ^ 0.5
 subexpression[2]: -1.0 * 7.5374326254504105 * (0.01 * x[1,2]) ^ 0.5
 subexpression[3]: -1.0 * 4.384673938320918 * (0.01 * x[1,3]) ^ 0.5
 subexpression[4]: -1.0 * 54.892826059277006 * (0.01 * x[1,4]) ^ 0.5
 subexpression[5]: -1.0 * 8.446938395930479 * (0.01 * x[1,5]) ^ 0.5
 subexpression[6]: -1.0 * 96.25137142036897 * (0.01 * x[1,6]) ^ 0.5
 subexpression[7]: -1.0 * 29.095803565128143 * (0.01 * x[1,7]) ^ 0.5
 subexpression[8]: -1.0 * 21.17371966369101 * (0.01 * x[1,8]) ^ 0.5
 subexpression[9]: -1.0 * 4.253940766985485 * (0.01 * x[1,9]) ^ 0.5
 subexpression[10]: -1.0 * 77.39325548433317 * (0.01 * x[1,10]) ^ 0.5

primal_bound = -289.295740915, dual_bound = -289.296030211, gap = 9.99999895589231e-5, time = 3.51
